Item(by='cxr', descendants=None, kids=[25680960], score=None, time=1610071047, title=None, item_type='comment', url=None, parent=25679158, text='&gt; now standard &quot;infrastructure as code&quot; [...] check in a spec for a container (Dockerfile) into VCS<p>This is an example of the &quot;predilection for certain systems and ways of working&quot; that I referred to.<p>&gt; it also tends to rot (who hosts that? Are you limited to PHP? Are you upgrading PHP? Did that company get sold?)<p>That&#x27;s not really what I meant.  My reference to WordPress was probably more misleading than I intended.<p>I really mean it when I say a human-readable document that&#x27;s more SOP than blog post—it&#x27;s not a metaphor.  Consider a static site generator for an existing site, and consider the steps it performs on the input to produce the output.  Specify these steps as a single, written document—one that you can print out, even.  If you&#x27;re doing it right (in contrast to how we &quot;have been doing it all wrong&quot; up till now), then you should be able to ask yourself, &quot;Is this document suitable for publishing a copy of it on my site itself (or printing it out and dropping at the bottom of a filing cabinet)?&quot;, and you should be able to answer &quot;yes&quot;.<p>(This is where the reference to WordPress came from—it&#x27;s not exactly a &quot;single document&quot;, but it is a bunch of PHP files that you could conceivably stitch together and consider to be one and which you can take a peek at so long as you&#x27;re self-hosting.  But even then it&#x27;s not something generally available as another piece of content on your site, because WordPress doesn&#x27;t &quot;reveal itself&quot; as such, i.e. there&#x27;s no associated HTTP resource by default that&#x27;s associated with the underlying WordPress-in-PHP engine itself, so its likeness as an example is strained.)<p>That still doesn&#x27;t solve hosting and portability, but it&#x27;s a separate matter from the authoring tools (etc) experiencing rot.  In practice, this can be covered by the inclusion of an annex to the above SOP (or a completely separate set of procedures) that describes how to get your generated files onto whatever host you&#x27;re currently using.  (In software terms, this section would describe an &quot;adapter&quot; and its use.)  Static site pages are already pretty portable by their nature, and you don&#x27;t really move around enough to worry about it, really, but if you do move, then just document the new process by speccing out a new adapter.<p>The takeaway is that if these processes are too elaborate to be documented in this way, then it won&#x27;t work.  But if that&#x27;s the case, then they&#x27;re already too complex, period—which rules out Docker and pretty much anything else that&#x27;s &quot;standard&quot; in the devops world right now.  I&#x27;ve prototyped something like this, and describing the whole thing that fits into a document weighing &lt;500kB without even trying is pretty easy.  My prototype is actually currently at 109kB, but that just covers the build SOP.   Albeit, that is both man- and machine-readable (i.e. machine-executable), so it&#x27;s detailed to a high degree of rigor.  That&#x27;s one long document that includes stuff like formally describing how the SHA-1 algorithm works, how Markdown gets processed, how templates and includes work, and so on.  The adapter doesn&#x27;t really exist, though; since it&#x27;s a static site, it&#x27;s just a note that says, essentially, &quot;use rsync; here&#x27;s the hostname and the exact command-line flags&quot;.  In the document specifying how building the content from source works, I punt on specifying YAML, because a drastically simpler subset (i.e. colon-separated, key-value fields on separate lines) was able to accommodate 100% of how my frontmatter already looked.<p>I don&#x27;t think relying on underspecced and inscrutable commercial systems like GitHub Actions is especially simple, resilient, or healthy.  It seems to be subject to exactly the sort of rot mentioned before.  Basically, what you said about VCs&#x27; blogs.')