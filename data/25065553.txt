Item(by='mistersys', descendants=None, kids=None, score=None, time=1605146298, title=None, item_type='comment', url=None, parent=25064149, text='Yeah, I agree it was lazy of me define &quot;worse is better&quot; the way I did, I think they&#x27;re 2 separate thoughts, but I still think TypeScript uses the &quot;worse is better&quot; approach to design, in the sense that C used it.<p>My usage of &quot;worse is better&quot; means &quot;worse is more marketable, and easier to implement&quot;, as opposed to actually being better when adopted. The original use of &quot;worse is better&quot; was not advocating for it as a design style in the general case, but commenting on the survival and adoption characteristics of systems designed in this style, as well as that it&#x27;s often a good approach in the beginning of a project.<p>TypeScript makes a simple promise, add types to your existing code base using an easy to understand structural type system, and it works on top of JS, just as C was designed as simple layer on top of Assembler.<p>If C (&quot;Worse is Better&quot;) is now being disrupted by Rust (&quot;The Right Thing&quot;), I think we&#x27;ll see a similar player for JS &#x2F; TypeScript.<p>If you&#x27;re in a position where you can decide what stack a large swath of developers are going to use, you should perhaps keep an eye open to JS &#x2F; TypeScript alternatives with growing ecosystems. Your choice could turn into a competitive advantage, even if it means a smaller community in the beginning.')