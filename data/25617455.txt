Item(by='BillinghamJ', descendants=None, kids=[25618605], score=None, time=1609628572, title=None, item_type='comment', url=None, parent=25617394, text='Ah nice, I didn&#x27;t realise you meant application proxies&#x2F;gateways. Network ones are so quick due to their ASICs etc!<p>I personally would still say 50ms is super, super slow for an application gateway - a well designed one using e.g. nginx&#x2F;openresty, lambda@edge, or simply writing another application server etc can easily do that job with an addition of &lt;0.1ms processing time (assuming no additional network calls or heavy work), and maybe 0.3ms for additional connection establishment if it hasn&#x27;t been optimised to use persistent connections.<p>If it is e.g. making a DB request to check auth, I would highlight that this _is_ backend processing time, not inherent or unoptimisable overhead. e.g. it&#x27;s totally feasible to do auth checks without making any async calls, just need a bit of crypto and to allocate some memory for tracking revoked tokens - does add a bit of complexity, but likely worth it for the super hot path.<p>BFFs would not really need to add anything beyond ~1ms or so, but you do hit the lowest common denominator - in that you have to wait for the slowest thing to complete, even if everything is happening in parallel.<p>BFFs definitely benefit in simplifying client-side code, but at the downside of increased overall latency and potentially resilience which could be achieved by decoupling unrelated components.<p>As such, I wouldn&#x27;t expect the Atlassian products to use BFF patterns - for them it&#x27;s better to throw 1k requests down a single HTTP 2&#x2F;3 connection and render each part of the page when it&#x27;s available. I have heard their FEs are very complex, which I think would probably support that assessment.')