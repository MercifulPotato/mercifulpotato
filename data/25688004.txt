Item(by='nullc', descendants=None, kids=None, score=None, time=1610130790, title=None, item_type='comment', url=None, parent=25685050, text='A bitcoiner pinged me and asked for my comment here. It really sucks that people are so easily bamboozled by dishonest scammers.<p>In the original bitcoin software a node would receive every transaction made while it was online twice: once when the transaction was first relayed, once when it was placed into blocks.  This was obviously wasteful, so we created and deployed a reconciliation scheme that exploits the fact that normally all, or almost all the included transactions are already known.  <a href="https:&#x2F;&#x2F;github.com&#x2F;bitcoin&#x2F;bips&#x2F;blob&#x2F;master&#x2F;bip-0152.mediawiki" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;bitcoin&#x2F;bips&#x2F;blob&#x2F;master&#x2F;bip-0152.mediawi...</a><p>But because Bitcoin developers are not dishonest scammers they didn&#x27;t run around putting out (no kidding) press releases claiming &quot;98.6% compression&quot;-- though that&#x27;s what you get if you compare the size of the BIP152 message to the size of the block.  In reality, since it depends on the transaction being known in advance the unachievable limit for this class of approaches is a 50% bandwidth reduction for a node compared to the original behaviour. BIP152 achieves 49.3% out of that 50%, as measured on the latest block.<p>Even before compact blocks was created back in December 2015, we knew even smaller could be achieved. E.g. we published a scheme that requires asymptotically 0 bytes per transaction, only requiring data proportional to size of the difference between the block and the recipients guess at the next block. But what we found is that the simpler scheme actually propagated blocks much faster because once the block is down to just a few thousand bytes other factors (like CPU time) dominate.  Expending a lot of additional code and cpu time to take 49.3% closer to 50% isn&#x27;t a win in actual usage.<p>[And for considerations other than block propagation, saving a few extra bytes per block is extremely irrelevant.]<p>It&#x27;s also the case that some of these dishonestly hyped supposed improvements beyond what Bitcoin has done for years are actually totally brain-damaged and wouldn&#x27;t work in practice because they&#x27;re not robust against attack--  but there isn&#x27;t much reason to dive into technical minutia because what they _claim to achieve_, once you strip off the dishonest marketing, isn&#x27;t all that interesting.')