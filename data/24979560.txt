Item(by='bxk1', descendants=None, kids=None, score=None, time=1604411033, title=None, item_type='comment', url=None, parent=24979097, text='No, the point of async &quot;coloring&quot; is to indicate which function call does context switching, so that you would know in which piece of code you could do synchronization without something like a semaphore, as you&#x27;d need a semaphore if you synchronize shared memory access across async calls, but you don&#x27;t if you do it in between async calls. And also to know which piece of code blocks event loop (i.e. everything in between async calls), so that you could optimize for performance: throughput, latency. Assuming, of course, that you run one event loop per thread, not doing dumb things like some Rust executors scheduling tasks to different cores.<p>Goroutine (loom) style concurrency only makes things worse both ergonomically and performance-wise, pushing programmers towards slow buggy lock-riddled code as the only way to use such models.')