Item(by='AltruisticGapHN', descendants=None, kids=[25338892], score=None, time=1607372470, title=None, item_type='comment', url=None, parent=25333874, text='&gt; It gives them the tools to implement complex designs with relative ease<p>The actual scenario is backend &#x2F; js &#x2F; &quot;fullstack&quot; devs can copy&#x2F;paste from many available tailwind &quot;blocks&quot; such as a login screen and it &quot;just works&quot;. They didn’t have to wrangle css imports, sass syntax, fugure out dependencies and such.<p>In that respect tailwind is awesome for majority of devs who work without designs and asked to implement gazillions of admins, dashboards, dialogs, etc.<p>I fully understand their position and the success of tailwind in that respect. Using eg. bootstrap is already several levels of complexity higher due to understanding where to put the css classes, why they break when you change the html structure, how to fix them, etc. Typical js devs can modify css but often they will do a hackjob, making the css worse. It’s as if they don’t have appreciation for how complex css is and that principles of software architecture CAN also apply incss such as low&#x2F;high coupling. Much better if they have to &quot;only&quot; edit a template, better for everyone involved i. a team unles. they have a dedicated css expert.<p>On my last professional project I was able to use both Sass and tailwind.. but even to do that requires solid understanding of css selectors specificity, css best practices, because by default tailwind classes and custom css will compete.<p>So in my experience whether it’s tailwind or Sass code, non-css developers aren’t any better off when they are stuck with layout issues. They still assign the issue to the css guy ;)<p>PS : with all that said I am grateful to tailwind as well as bem and SuitCSS for making me appreciate more the needs of the other guys on my team. Writing css &#x2F; tailwind that doesn’t break easily and is more maintainable that’s the art and what makes me still love the &quot;front of the frontend&quot;. Learning to appreciate tailwind which I disliked at first made me, a css expert (and very proficient in js as well) a better overall developer.')