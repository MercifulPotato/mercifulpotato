Item(by='albertzeyer', descendants=None, kids=None, score=None, time=1606739737, title=None, item_type='comment', url=None, parent=25227362, text='Some self advertisement: I implemented some very similar Python module a while ago (more than 9 years ago actually, but updated all the time):<p>better_exchook: <a href="https:&#x2F;&#x2F;pypi.org&#x2F;project&#x2F;better-exchook&#x2F;" rel="nofollow">https:&#x2F;&#x2F;pypi.org&#x2F;project&#x2F;better-exchook&#x2F;</a> &#x2F; <a href="https:&#x2F;&#x2F;github.com&#x2F;albertz&#x2F;py_better_exchook" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;albertz&#x2F;py_better_exchook</a><p>It&#x27;s just a single file, so you can easily copy it into your project.<p>It&#x27;s a bit more advanced than this as well, as it has some further logic about what variables it actually shows:<p>* It shows only those which are used in the statement of the active line. In bigger functions, you often have other unrelated locals, and this would become incredibly spammy otherwise. Also, the use locals in the current line are almost always exactly those you are interested in.<p>* It also shows globals (this one only shows locals).<p>Like the original traceback and this one, it shows the current active line, and not the context around (e.g. like in IPython or stackprinter).<p>However, it has an extension: If the current statement goes over multiple lines, it will print them as well.<p>It also has an extension for DomTerm that you can fold away the variables.')