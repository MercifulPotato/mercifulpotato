Item(by='choeger', descendants=None, kids=[25091431, 25091805], score=None, time=1605347134, title=None, item_type='comment', url=None, parent=25091123, text='I think you are oversimplifying quite a bit. Looks to me like you are viewing things thought the lens of the typical Microservice architecture. But here are a few more dimensions of complexity:<p>* State between communication. If service (worker&#x2F;function) A needs to talk to B, A usually needs to keep some state until B answers. Maintaining this state (what if the message gets lost, what if we redeploy A, what if the storage fails) adds a new dimension IMO.<p>* Circular dependencies&#x2F;recursion. It&#x27;s astonishing how things like A communicating with A, directly or indirectly seems to be implicitly missing from that typical architecture.<p>* Message growth. What happens when you have an O(n^2) or worse growth in messages? How do you track and manage that?<p>Generally speaking, it looks like microservices behave a lot like the early procedural programming languages by not considering the actually complicated stuff.')