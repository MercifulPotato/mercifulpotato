Item(by='piaste', descendants=None, kids=None, score=None, time=1612190243, title=None, item_type='comment', url=None, parent=25987752, text='Not really. There are various DI patterns you can use in F# [1], but the combination of no cyclic dependencies + type inference <i>does</i> mean you can just do the simplest thing - pass dependencies manually as specific arguments - and it will stay manageable for much longer than in java&#x2F;c#.<p>Evil dangerous code using global variables:<p><pre><code>   let mail = &#x2F;&#x2F; .. create email service\n   let db = &#x2F;&#x2F; .. create database service\n\n   let receiveThing thing = async {\n      let query = &#x2F;&#x2F; .. compose update query\n      do! saveToDb db query\n      let emailText = &#x2F;&#x2F; .. compose email\n      do! sendMail mail emailText\n   }\n\n   while readInput() do receiveThing (getThing())\n</code></pre>\nBeautiful pure code using dependency injection:<p><pre><code>   let mail = &#x2F;&#x2F; .. create email service\n   let db = &#x2F;&#x2F; .. create database service\n\n   let receiveThing db mail thing = async {\n      let query = &#x2F;&#x2F; .. compose update query\n      do! saveToDb db query\n      let emailText = &#x2F;&#x2F; .. compose email\n      do! sendMail mail emailText\n   }\n\n   while readInput() do receiveThing db mail (getThing())\n\n</code></pre>\n[1] <a href="https:&#x2F;&#x2F;fsharpforfunandprofit.com&#x2F;posts&#x2F;dependencies&#x2F;" rel="nofollow">https:&#x2F;&#x2F;fsharpforfunandprofit.com&#x2F;posts&#x2F;dependencies&#x2F;</a>')