Item(by='giantrobot', descendants=None, kids=[25565650, 25568481], score=None, time=1609183212, title=None, item_type='comment', url=None, parent=25561460, text='Say hello to Function Multi-versioning [0]. You tell the compiler to build a version for each march defined in the attribute. When that function is called a quick CPU check (via CPUID) is performed and if there&#x27;s a version specific to the current CPU that will run instead of the more general implementation. ICC has supported this for a long time and it&#x27;s widely used in Intel&#x27;s MKL.<p>LLVM also supports FMV but uses a slightly different method to define it in code. IIRC there was an LLVM issue tracking work to support GCC&#x27;s way of declaring FMV but I don&#x27;t know if that landed yet.<p>Since the function&#x27;s signature is the same between the multiple implementations the caller doesn&#x27;t need to change of their code to get a free boost from features like AVX2 or these M1 instructions. When an M2 comes out with better vector instructions or something and a new Accelerate framework is released, anyone using the framework get a free performance increase without recompiling anything.<p>[0] <a href="https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;691932&#x2F;" rel="nofollow">https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;691932&#x2F;</a>')