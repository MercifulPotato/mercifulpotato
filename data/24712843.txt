Item(by='oillio', descendants=None, kids=None, score=None, time=1602105402, title=None, item_type='comment', url=None, parent=24711834, text='A functional coding technique is strictly more powerful.<p>Say we want to reuse your cat search code.  Sometimes we want to log it, and sometimes we want to export it as a different data structure.<p>You could write a function that took a company and returned a list of pets.<p>What if you wanted to take the first 10 of 10 million.  Returning the full list wouldn&#x27;t be very efficient, you would need to alter your function to support limits.<p>What if you were then given a list of companies.  You would need to modify the function, or write a wrapper.<p>What if it isn&#x27;t a list anymore but an async stream of companies.  More modifications.<p>With functional techniques, we can abstract the concept of &quot;filtering a company for pets&quot; without worrying about the concrete implementation of how the returned pets are stored.  This allows the one function to be reused efficiently in many different applications, in ways not possible with imperative code.<p>This is just one example of abstraction that is possible.  Functional techniques are not a good fit for all problems, but they are a good tool to have in your toolbox as they make some problems much easier to reason about.<p>Paul Graham has written a lot on the power of functional languages.  OnLisp is a good place to start: <a href="http:&#x2F;&#x2F;www.paulgraham.com&#x2F;onlisp.html" rel="nofollow">http:&#x2F;&#x2F;www.paulgraham.com&#x2F;onlisp.html</a><p>Or some of his early blog posts discuss these concepts:\n<a href="http:&#x2F;&#x2F;www.paulgraham.com&#x2F;articles.html" rel="nofollow">http:&#x2F;&#x2F;www.paulgraham.com&#x2F;articles.html</a><p>Another classic that will change the way you look at code design is Structure and Interpretation of Computer Programs:\n<a href="https:&#x2F;&#x2F;web.mit.edu&#x2F;alexmv&#x2F;6.037&#x2F;sicp.pdf" rel="nofollow">https:&#x2F;&#x2F;web.mit.edu&#x2F;alexmv&#x2F;6.037&#x2F;sicp.pdf</a>')