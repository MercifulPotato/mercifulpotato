Item(by='blackbrokkoli', descendants=None, kids=None, score=None, time=1608032695, title=None, item_type='comment', url=None, parent=25428532, text='Got to love a passionate opinionated essay with that kind of depth!<p>I definitely took away a lot from it, but I do not quite agree with their rather rigid duality of &quot;this has end-user programming&quot; and &quot;this has not&quot;. Like they give Hypercard as an example of end-user programming and then imply that there was no end-user programming software in that space afterwards.<p>If I look at a particular niche, it looks more like a...multidimensional sine wave?<p>Look at writing code for example:<p>Text editors add configurability and plugins and customizability until they are indistinguishable from an IDE, and a bloated one at that. Some startup makes the next minimal editor and here we go again. Alternatively, the disgruntled dev goes back to vanilla vim. Cue a long vimrc, cue plugins, cue neovim. And so on.<p>Notice how all of these merging and splitting branches trade-off toolchains, embodiment, convenience, automation and a hundred other factors defining whether you could call it &quot;end-user programming&quot; <i>all the time</i>.<p>The same thing can be said about Browsers, E-Readers or Games. I think it is important to be aware of the complexity so you can add sensible improvements to the infinite iterations instead of thinking that we are just one cool invention away from the glorious goal of end-user programming.')