Item(by='speeder', descendants=None, kids=None, score=None, time=1611152468, title=None, item_type='comment', url=None, parent=25838372, text='Explanation of SoundCard market death:<p>Microsoft removed all capabilities of user software to directly interface with audio hardware, MS at the time officially blamed BSoDs that were caused by soundcards, but this change also made very hard to write software that could circunvent audio DRM (ie: when you had total access to soundcard hardware, it was easy to write a program to just stream to disk whatever the soundcard calculated, before it encoded the HDMI DRM on the output).<p>The new &quot;driver API&quot; for soundcards was extremely limited, basically you could tell windows some details of your hardware, and software could ask windows to do certain tasks, like raise volume, lower volume, etc... any Windows game since that has their own 3D audio, is done by the game itself calculating the audio, and asking Windows to play that audio.<p>But when you could tinker with the hardware directly, you could build audio processors that would take as inputs some audio samples, then 3D models, material definitions, and then raytrace (in way almost identical to video, since light is also wave, thus same rules apply, this also mean it has same computational expense) the results, then you could play on the speakers the result.<p>If the user had multiple speakers, he could explain to the soundcard where they are physically in his RL room, then the soudncard could act as if each speaker was a &quot;camera&quot; in the 3D world, and raytrace how the audio would act, for example suppose the player was underwater in a pool room, and there was a loud explosion outside, the game would figure out the sound would reflect on the hallway corridors, reach the door, difract, reach the water, refract, and reach the player.<p>One way of doing so was EAX from Creative, but OpenAL also worked too, it even intentionally had API at the time simialr to OpenGL, so it a graphics coder would feel confortable also coding the 3D audio, Doom3 for example supports OpenAL 3D audio.<p>As for the high-tech CRT, DiabloD3 awnser is accurate, there was also Sony&#x27;s &quot;Field Emission&quot; tech too.<p>And no, analog signals are not easy to generate, the &quot;dirt cheap dongles&quot; or aren&#x27;t cheap (good converters from digital to analog are often in the 50 USD+ range having good proper RAMDACs) or are crap and can&#x27;t do high-res high-refresh rate, and might struggle with colour, in analog era some crazy stuff regarding colours were possible, for example SGI sold a videocard that could output the analog data to display image files that had 48 bits per pixel, one of its purposes was HDR photo editing, &quot;cheap dongles&quot; absolutely can&#x27;t do that.')