Item(by='cwp', descendants=None, kids=None, score=None, time=1610338584, title=None, item_type='comment', url=None, parent=25720918, text='Dunno about research, but I&#x27;ve worked in a few SV startups that organized development with Jira and had high autonomy for engineers. Some of the features of those teams:<p>1. Most tickets are opened by engineers themselves, and don&#x27;t contain detailed specifications, but just notes to provide context.<p>2. The purpose of the ticket is to provide something to link to, and a place to put information as it emerges. So commits and PRs usually link to a ticket, as do engineering and product management planning documents, reports etc. Some tickets are terse and quickly closed, others could develop a long history, with status changes, links to other tickets and documents, ownership by different engineers over time etc.<p>3. We organize development into sprints, but a Scrum master would be disgusted by our process. Sprints are just short-terms planning horizons; we ship as soon as the code is ready and close tickets when the code is in production. The purpose of a sprint is to batch up all the low-level planning and prioritization so most of the time we&#x27;re focused on execution.<p>4. High-level planning is all in GDocs, spreadsheets and Photoshop&#x2F;Figma. Product management doesn&#x27;t create tickets unless they are reporting a bug, and even that was pretty rare. Engineering management gets a lot of information about what&#x27;s going on by observing Jira; this reduces the need for meetings to communicate status. (Doesn&#x27;t eliminate meetings, of course, but it does seem to make them more interesting.)<p>Basically, it boils down to, you have to keep status <i>somewhere</i>, and Jira does that pretty well.')