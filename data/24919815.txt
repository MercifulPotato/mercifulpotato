Item(by='dietrichepp', descendants=None, kids=[24929208, 24920458, 24920835], score=None, time=1603898679, title=None, item_type='comment', url=None, parent=24919707, text='Probably because you got used to Critique at Google ;)<p>I agree though. I think the most important thing in a code review system is inline comments in the diff itself, and that’s something you get from Gerrit, Phabricator (Differential), etc. It encourages people to discuss the particulars of of a diff. Merge approval can be made contingent on resolving minor issues within a diff. Diffs are also approved on a per-diff basis, and it’s less typical to merge a stack of diffs.<p>I think the pull request &#x2F; merge request makes sense with the “trusted lieutenants” development model that the Linux kernel uses, but for other projects you would be more likely to want a work flow where someone submits a single commit&#x2F;diff and then someone approves it (after comments).<p>When I review PRs on services like GitHub I <i>very often</i> think, “This should be several different reviews” and the discussion thread in a PR is often not a high-quality discussion. I don’t use GitLab as much but my experience is that it has the same problems. What I would love is to review a stack of commits and approve &#x2F; make comments on the commits individually.<p>(For those reading: Mondrian -&gt; Rietveld -&gt; Gettit, and also Mondrian -&gt; Critique. Mondrian and Critique are internal tools at Google. Phabricator originated at Facebook which has a lot of ex-Google engineers on staff.)')