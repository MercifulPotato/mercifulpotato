Item(by='microtherion', descendants=None, kids=[24947895, 24947908, 24947564], score=None, time=1604096914, title=None, item_type='comment', url=None, parent=24945758, text='In my opinion, The Proper Way To Teach Computer Science was the one area where Dijkstra made his most detrimental contribution, by promoting a particular school of instruction based on strong opinions with weak to no empirical underpinnings.<p>In _Coders at Work_, Knuth offers a counter-argument that I find compelling:<p>&gt; Seibel: It seems a lot of the people I&#x27;ve talked to had direct access to a machine when they were starting out. Yet Dijkstra has a paper I&#x27;m sure you&#x27;re familiar with, where he basically says we shouldn&#x27;t let computer-science science students touch a machine for the first few years of their training; they should spend all their time manipulating symbols.<p>&gt; Knuth: But that&#x27;s not the way he learned either. He said a lot of really great things and inspirational things, but he&#x27;s not always right. Neither am I, but my take on it is this: Take a scientist in any field. The scientist gets older and says, &quot;Oh, yes, some of the things that I&#x27;ve been doing have a really great payoff and other things, I&#x27;m not using anymore. I&#x27;m not going to have my students waste time on the stuff that doesn&#x27;t make giant steps. I&#x27;m not going to talk about low-level stuff at all. These theoretical concepts are really so powerful-that&#x27;s the whole story. Forget about how I got to this point.&quot; I think that&#x27;s a fundamental error made by scientists in every field. They don&#x27;t realize that when you&#x27;re learning something you&#x27;ve got to see something at all levels. You&#x27;ve got to see the floor before you build the ceiling. That all goes into the brain and gets shoved down to the point where the older people forget that they needed it.<p>&gt; Peter Seibel. _Coders at Work_<p>It is clear from the reading the EWDs that Dijkstra considered actually doing something with Computers detrimental to the practice of Computer Science as he conceived it, but the kind of Computer Science he practiced past 1975 or so was not particularly useful to Computer Engineering, because it refused to engage with it, and, as the article points out, it was not even particularly good math, because it refused to engage properly with that field as well.')