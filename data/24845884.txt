Item(by='ChrisMarshallNY', descendants=None, kids=[24845996, 24846053, 24846028], score=None, time=1603269113, title=None, item_type='comment', url=None, parent=24834965, text='Personally, I think Discipline is one of the things that separate “coders” from “engineers.”<p>This sounds like it’s really a treatise on “learning to build a house by making your own nails.”<p><i>Of course</i> that won’t scale. Especially if most houses, these days, are prefab, and don’t use too many nails.<p>But learning how to stay out of flood plains, and selecting good prefab sources, is vital to being a builder. The first one is a fundamental discipline, that also applied to “make your own nails” building, while the second is unique to the new way we do things.<p>I like to write code that has a future. I want people to be able to take it over, so I use header documentation, and a consistent coding style.<p>I originally learned Machine Code (I started as an EE). I’ve written embedded operating systems and drivers.<p>A lot of what I learned, doesn’t apply to writing high-level application code in Swift (what I do nowadays), but it did give me the <i>discipline</i> to power through the “boring” stuff that is vital to writing good, maintainable, extensible code.<p>I think maybe there is a confusion between “discipline” (the type that manifests as patience, consistency, and craftsmanship), and “experienced inflexibility,” which is not always applicable (and sometimes, downright destructive, like old-fashioned C++ programmers refusing to use smart pointers).')