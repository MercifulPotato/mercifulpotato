Item(by='jjk166', descendants=None, kids=None, score=None, time=1602512466, title=None, item_type='comment', url=None, parent=24752221, text='You misunderstand the analogy. An airplane could be very heavy because it is a very large aircraft with a lot of payload capacity - that would be good. An aircraft could also be very heavy because it is inefficiently built and thus have very little payload capacity. Similarly an aircraft could be light because it is small, but still be inefficiently built, or the reverse. Bill Gates is complaining about evaluating an aircraft by its weight because its weight doesn&#x27;t on its own tell you about any of the stuff you really care about with an airplane.<p>Likewise, code could be many lines because it is well formatted and robust. Alternatively it could be long because there&#x27;s a lot of repetition and bloat. It could be short because it is very targeted to what it needs to be, or it could be very short because the developer used a lot of unreadable code-golf tricks.<p>In any complex system, you have optimization problems. Very rarely is the answer to an optimization problem simply to minimize an isolated variable. You can not say a lighter airplane is better than a heavier one without asking why it&#x27;s lighter; likewise a smaller codebase with fewer lines can not be called better unless you know why it is smaller.<p>Just because a plane could get off the ground without something does not mean that cutting that thing to save weight will move the plane closer to its optimal design. Likewise just because the code base could be reduced does not mean that actually makes it more maintainable and better performing.')