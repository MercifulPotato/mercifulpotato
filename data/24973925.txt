Item(by='blunte', descendants=2, kids=[24974144, 24974037], score=2, time=1604354308, title='Ask HN: Developers, why are we re-implementing the same wheels', item_type='story', url=None, parent=None, text='Companies around the world are paying developers to build software solutions to problems that have been solved many many times already - web applications.<p>Most web applications include some subset of: user and api authentication, database interaction, remote api, user and&#x2F;or api output, and performance features like caching, load balancing, proxying, etc.  This is not an exhaustive list, but these are some of the primary, common elements.  The total set of possible combinations of features, even including some special sub-features, is not excessively large.<p>Why are we still cobbling these elements together manually?  After 30 years of building web applications, we have a pretty good idea of what&#x27;s possible and how to solve it.  Even with frameworks, we still are working far too low level.  We should be choosing which features and which options we want and feeding that into a system that runs the solution or generates a deployment script for the solution.<p>The business specific details should be handled by plugins, and that customization is where we should be putting our time and creative energy.  A well designed plugin system would also allow developers to use whatever language they prefer for each plugin, and developers could a language based on the special needs and ideally suited libraries.  It would also free us from language lock-in.<p>Wordpress, while not initially intended to be such a system, is a partial example (even though it&#x27;s a 15+ year old view on a solution to originally a different problem).<p>Why is there no modern answer to this problem?  (Or if there is one, what is it and why don&#x27;t we use it?)')