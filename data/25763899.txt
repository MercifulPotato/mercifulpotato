Item(by='peter_d_sherman', descendants=None, kids=[25767962, 25765367], score=None, time=1610554193, title=None, item_type='comment', url=None, parent=25759576, text='&gt;&quot;J1 is a<p><i>small (200 lines of Verilog)</i><p>stack-based CPU, intended for FPGAs. A complete J1 with 16Kbytes of RAM fits easily on a small Xilinx FPGA.<p>PDS: A long time ago, I thought that Forth was &quot;just another computer programming language&quot;, but back then, I had no appreciation for it, because I didn&#x27;t understand where it fits in on the abstraction hierarchy that we call modern day computing...<p>I didn&#x27;t have this appreciation, at the time, because I had not worked on writing compilers at the time...<p>Now, let me explain to you why Forth is so gloriously wonderful!<p>You see, in terms of abstraction, where transistors are the lowest level, and Lisp, and Lisp-like languages are the highest, and most compilers are somewhat mid-level,<p><i>Forth is the next step up above machine language -- but a step below most compilers!</i><p>You&#x27;d know this, you&#x27;d <i>derive</i> this, if you ever tried to write a compiler from the bottom up (going from assembly language to a compiler) rather than from the top down (what is taught about compiler construction in most University CS classes, i.e., the &quot;Dragon Book&quot;, etc.)<p>See, Forth is sort of what happens when you add an at-runtime symbol (AKA, &quot;keyword&quot;) lookup table to your assembler code, such that addresses (AKA &quot;labels&quot;, AKA, &quot;functions&quot;, AKA &quot;procedures&quot;, AKA &quot;methods&quot;) can be dynamically executed at runtime, and you create an interpreter &#x2F; stack-machine -- around this concept.<p>There&#x27;s a little bit more to that of course, but that&#x27;s the basic idea.<p>Then you <i>derive</i> Forth!<p>That&#x27;s <i>why</i> Forth is so gorgeous and brilliant!<p>And so aesthetically pleasing, because of it&#x27;s small size, yet amazing functionality!<p>And why you don&#x27;t need big, complex CPU&#x27;s to run it!<p>It exactly follows the &quot;Einsteinian mantra&quot; of<p><i>&quot;As simple as possible, but not simpler!&quot;</i><p>Anyway, thanks again for your great work with the J1 Forth CPU!')