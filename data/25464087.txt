Item(by='giantDinosaur', descendants=None, kids=None, score=None, time=1608268038, title=None, item_type='comment', url=None, parent=25463644, text='Those look like Java loops, and I don&#x27;t recall them being much more than sugar over a for loop (although presumably they&#x27;re implementing some Iterable class and apply to more than just arrays).<p>Either way, like most things in functional programming, it&#x27;s often about restricting your functions so that they&#x27;re easier to reason about. There&#x27;s nothing special about the map function really in any pragmatic sense <i>except</i> when used in conjunction with the other features a good language affords.<p>I&#x27;m also curious if you think something like:<p><pre><code>  listOfListsmap : List (List Int) -&gt; List (List Int)\n  listOfListsmap =\n    (List.map &lt;&lt; List.map) (\\n -&gt; n + 1)\n</code></pre>\nis easier to understand at a quick glance than a rough equivalent using those loops above:<p><pre><code>  collections.forEach(x -&gt; {\n    &#x2F;&#x2F; anything could happen here to x before the inner loop   processes it\n    &#x2F;&#x2F; and since we&#x27;re probably dealing with mutable variables, the inner loop can\n       presumably access things I put here (which may or may not be a problem, but is something you have to think about)\n        x.forEach(y -&gt; {\n        &#x2F;&#x2F; do something with y, we can do anything with x *and* y here\n        y = y + 1;\n        }\n    }\n</code></pre>\nknowing that &lt;&lt; is the composition function.')