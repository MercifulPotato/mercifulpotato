Item(by='bfrog', descendants=None, kids=None, score=None, time=1611345376, title=None, item_type='comment', url=None, parent=25874748, text='I&#x27;ve worked on large C++ projects. Debugging hard to find data corruption, data leaks, data races was one of the most frustrating aspect. In a 200kloc project with 10 devs, there was always a crash worthy bug. Always. Automated tests could only catch so many things. Often the crash made it to the end user, causing them to lose valuable work and time. It sucked.<p>By far though some of the worst issues were ones involving heap fragmentation because of all the damn heap loving C++ classes and shared_ptr wrappers.<p>Rust doesn&#x27;t solve everything. But it solves the most time consuming parts of C++ for me. Debugging. I&#x27;ve yet to need a debugger for Rust, after 5 years writing many 10s of thousands of lines of it. I trust the random crate I pull in won&#x27;t segfault on something asanine if it stays away from unwarranted unsafe usage.<p>It&#x27;s a breath of fresh air to not need a GC, be able to trust most other code won&#x27;t cause a crash, and that once it compiles it&#x27;s most likely going to work barring any logic bugs. It saves me immense amounts of time, and mostly avoids debugging hard issues in production. Mostly.<p>While people sit in their debuggers adding watch points, stepping through some 3rd party lib to figure out a crash, I&#x27;m busy working on the next killer feature.')