Item(by='swsieber', descendants=None, kids=None, score=None, time=1607694885, title=None, item_type='comment', url=None, parent=25383829, text='The reason Rust has so many features is to manage the complexity lifetimes introduce in a safe, zero-cost way. The big recent additions and outstanding work is trying to fill gaps there.<p>* async - you can write futures without async, but async lets you do more because of how it resolves lifetime issues you&#x27;d normally get when using combinators. The other route without async would be to manually write unsafe state machines. Yuck.<p>* GATs - these are required to be able to have native support for async methods in traits (interfaces) without needing to box the return value (ie. have statically dispatched ... not sure what the term is, but it lets it be online too, IIRC; I might be wrong about the performance ipact, but ergonomic pain is real)<p>* const generics - this gives better support for stuff like arrays, since really what it&#x27;s doing is stuff like supporting array length as a generic type parameter instead of a special case.')