Item(by='theamk', descendants=None, kids=[25975150], score=None, time=1612057429, title=None, item_type='comment', url=None, parent=25974382, text='&gt; It would also mean that no modern browser works any more since they need access to far more to even start up.<p>You are thinking again about old-style permissions control -- like SELinux. Yes, they are not going to work well, as you cannot really deny .cache access.<p>But this is not what we do in the modern system. You start a new mount namespace, and then mount a new tmpfs over &#x2F;home. Then you bind-mount outside ~&#x2F;.config&#x2F;protected-firefox-profile to a ~&#x2F;.mozilla inside the sandbox. And you expose ~&#x2F;Downloads as-is.<p>And then you run firefox in that sandbox -- none of the system calls fail, any file which was written can be read back (sometimes only until the browser restarts), but your ~&#x2F;.bashrc is totally safe.<p>You can improve this as much as you want. For example, want a private &#x2F;tmp except shared &#x2F;tmp&#x2F;.X11-unix ? Sure. Want to hide your &#x2F;etc and &#x2F;var except few selected files? no problem.<p>This still assumes that there is a &quot;sandboxed&quot; and &quot;non-sanboxed&quot; parts of the account. You&#x27;ll restrict more dangerous programs, like browsers, network clients, and games -- and leave things like text editors unrestricted, so there is no problems with editing text files.<p>Oh, and the thing that I am described are not some theoretical TODOs -- they are all supported and usable. I am running my own system made out of shell scripts and duct tape, but there are products out there like firejail [0] which implement all that.<p>[0] <a href="https:&#x2F;&#x2F;firejail.wordpress.com&#x2F;features-3&#x2F;#namespaces" rel="nofollow">https:&#x2F;&#x2F;firejail.wordpress.com&#x2F;features-3&#x2F;#namespaces</a>')