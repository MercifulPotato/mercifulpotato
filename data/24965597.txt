Item(by='runeks', descendants=None, kids=None, score=None, time=1604303703, title=None, item_type='comment', url=None, parent=24965414, text='&gt; The idea of needing a 1-5 compile-time constrained value is rare in any application I have worked with, because either you&#x27;d use an enum, or the &quot;5&quot; isn&#x27;t really known at compile time.<p>The OneToFive-type is used to illustrate a point, not because it’s practically useful.<p>&gt; A non-negative floating point number would be a common one I think, e.g. for a coordinate. I&#x27;ve not been keeping up with Haskell but can you guarantee this at compile time?<p>No. It’s not possible<i>.<p>But, as you point out, this is not a problem since values like these are rarely known at compile-time.<p>And, more importantly, if you can’t trust a programmer to write the correct constant, how can you trust the same programmer to write the correct type for this constant (“non-negative float”)?<p></i> Except by using a quasi-quoter (which amounts to parsing a string into a float at compile-time)')