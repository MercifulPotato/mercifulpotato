Item(by='skytreader', descendants=None, kids=[24928597], score=None, time=1603957351, title=None, item_type='comment', url=None, parent=24927983, text='It&#x27;s interesting to contrast this kind of organizational behavior with the type where &quot;management won&#x27;t give us time to deal with technical debt&quot;. Though arguably using an over-complicated framework is creating more technical debt, on a certain perspective, this is on the other end of this scale.<p>It seems to me what we want is some kind of &quot;Platonic ideal&quot; where the extremes are bad for development:<p><pre><code>  Management won&#x27;t give us time to deal with technical debt&#x2F;incorporate best practices.\n  |\n  |\n  THE IDEAL\n  |\n  |\n  Management wants the Hot New Thing all the time. uservices are the state-of-the-art in best practices so uservices it is!\n</code></pre>\nThe best advice (IMO) in dealing with the top end of this spectrum is to frame technical debt and best practices in terms of whatever economic metric the manager cares about (e.g., &quot;TDD will lead to less bugs, ergo happier customers, ergo greater retention&quot;). But I wonder if the same framing can be used to encourage temperance in managers who dwell on the bottom of my spectrum.<p>I somehow suspect it won&#x27;t work. The problem with those at the top is that they see the dev&#x27;s proposition as an investment that will either not bear fruit or, worse, slow the team down; so they are incentivized to keep status quo. Those at the bottom, however, start from a perspective that <i>their</i> idea will add value to the team so they keep pushing for it no matter what. And telling them &quot;Let&#x27;s not do what Google does; we&#x27;re not Google&quot; is definitely seen as a devaluation of the team.<p>This has been a weird headspace to explore. I&#x27;d love to hear from others&#x27; experience on dealing with this.')