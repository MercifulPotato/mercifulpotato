Item(by='a1369209993', descendants=None, kids=[25222529], score=None, time=1606364902, title=None, item_type='comment', url=None, parent=25206919, text='Not sure about Microsoft higher-ups in particular, but C++ and related compilers are notoriously bad (in fact negatively good) at enforcing the assumptions they use for optimization. Eg:<p><pre><code>  void foo(bar_t* p)\n    {\n    baz_t* q = &amp;p-&gt;baz;\n    if(!p) panic(&quot;...&quot;);\n    do_stuff(p,q);\n    }\n</code></pre>\nA (stereo-)typical C++ compiler will assume that p is non-null, then <i>actively remove</i> the code checking that. Surprise! You now have a security vulnerability. But only when optimisations are turned on, so if you have distinct debug and release modes, your testing and other debugging systems will be useless.<p>I suspect this is a recurring source of vociferous opponents of allowing <i>any</i> information to be used for optimization, regardless of how much compilers promise that this time is totally different and they&#x27;ll definitely actually check that it&#x27;s correct before using it.')