Item(by='dctaflin', descendants=None, kids=None, score=None, time=1611019373, title=None, item_type='comment', url=None, parent=25823907, text='Crossover guy here. I worked as a ChemE for 11 years, then as a software developer for 20. Regardless of terminology, the two fields are very different. If I have to design a process to separate two liquids, I have a few options available, and all are highly constrained by physics and a lot of math and equipment design has gone into optimizing them. But when writing code to solve a problem, the number of possible ways to accomplish it are endless, and other than big-O notation there&#x27;s not a lot of constraints put on the solution.<p>I lived through the &quot;design patterns&quot; trend, which seemed like an attempt to create a software equivalent to the &quot;unit operations&quot; we ChemE students all learned, but it was basically a flop because in the end you can use almost any design pattern to solve a given problem.<p>I don&#x27;t much care whether you call it &quot;engineering&quot; - but the gap between the smokestack industries and software remains.')