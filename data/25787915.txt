Item(by='lmm', descendants=None, kids=None, score=None, time=1610694596, title=None, item_type='comment', url=None, parent=25774342, text='&gt; You&#x27;re trying to build a fast and slim UI that&#x27;s gonna be deployed on routers and possibly loaded on low-power devices? You better care about every single line that gets loaded on the device.<p>Unless you&#x27;ve gone out of your way to buy a (more expensive) part with less memory, your router will have enough memory to make 86.1Kb an utter irrelevancy; so will most of what were traditionally considered &quot;low-power devices&quot;. Yes there are extreme cases where it matters, but we&#x27;re talking about a vanishingly rare proportion of use cases.<p>&gt; I&#x27;m not saying dependencies are always wrong. I&#x27;m also not saying it&#x27;s always right. I&#x27;m saying why you need the dependency and the quality of the code it includes is important to consider, and knee-jerk reactions of &quot;of course I&#x27;d use it&quot; is hurting the profession more than the library reuse saves us currently.<p>I think this is backwards, and the knee-jerk reaction of &quot;of course it&#x27;s important and you need to carefully think about it&quot; is what&#x27;s holding back the industry. The overwhelming majority of the time, the right thing is to use the dependency; the best development practice is to default to using dependencies and reassess if and when it you hit an actual problem.')