Item(by='billconan', descendants=None, kids=[24819129, 24820104, 24819079, 24819113, 24818991, 24819038, 24819142, 24819037, 24821126], score=None, time=1603038253, title=None, item_type='comment', url=None, parent=24817594, text='I don&#x27;t understand this article.<p>I think there is no language level feature in Rust to prevent TTCTTOU. TTCTTOU can happen in both c++ and rust.<p>for example:<p><pre><code>    let f = File::open(&quot;username.txt&quot;);\n\n    &#x2F;*what if the file is deleted here?*&#x2F;\n\n    let mut f = match f {\n\n        Ok(file) =&gt; &#x2F;*what if the file is deleted here?*&#x2F; file,\n\n        Err(e) =&gt; return Err(e),\n\n    };\n\n    &#x2F;*what if the file is deleted here*&#x2F;\n\n</code></pre>\nI mean even if you write it like:     let f = File::open(&quot;username.txt&quot;)?;<p>it looks atomic, it is not.<p>the c++ example, on the other hand, can do a filtering too, using:<p><a href="http:&#x2F;&#x2F;www.cplusplus.com&#x2F;reference&#x2F;fstream&#x2F;ifstream&#x2F;is_open&#x2F;" rel="nofollow">http:&#x2F;&#x2F;www.cplusplus.com&#x2F;reference&#x2F;fstream&#x2F;ifstream&#x2F;is_open&#x2F;</a><p>I mean Rust forces you to do error handling, which is nice. But that&#x27;s not enough for preventing TTCTTOU. I don&#x27;t think the first example is a strong argument.')