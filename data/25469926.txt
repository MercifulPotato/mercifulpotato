Item(by='thisiszilff', descendants=None, kids=[25470032, 25469957, 25473315, 25475617, 25470473, 25473804, 25473392, 25473940, 25469969, 25470245], score=None, time=1608314569, title=None, item_type='comment', url=None, parent=25459506, text='I think this misses the point of DRY a little bit. DRY isn&#x27;t about not copy pasting code, it&#x27;s about ensuring that knowledge isn&#x27;t repeated. If two parts of the system need to know the same thing (for example, who the currently logged in user is, or what elasticsearch instance to send queries to, etc.), then there should be a single way to &quot;know&quot; that fact. Put that way, DRY violations are repetitions of knowledge and make the system more complex because different parts know the same fact but in different ways and you need to maintain all of them, understand all of them, etc. etc.<p>Code blocks that look to be syntactically the same are the lowest expression of &quot;this might be the same piece of knowledge&quot; insofar as they express knowledge about &quot;how to do X&quot;, but the key is identifying the knowledge that is duplicated and working from there. Sometimes it comes out that the &quot;duplication&quot; is something like &quot;this is a for loop iterating over the elements of this list in this field in this object&quot; and that is the kind of code block that contains very little knowledge in terms of our system. But supposing that that list had a special structure (ie, maybe we&#x27;ve parsed text into tokens and have information about whitespace, punctuation, etc in that list) and we start to notice we&#x27;re repeating code to iterate over elements of the list and ignore the whitespace, punctuation elements in it, then we&#x27;ve got a piece of knowledge worth DRYing out given that all the clients now need to know what whitespace &amp; punctuation look like even when they&#x27;d like to filter them out.<p>It&#x27;s worth pointing out that DRYing out something isn&#x27;t necessarily &quot;abstracting&quot;, it is more like consolidating knowledge into one place.')