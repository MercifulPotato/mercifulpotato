Item(by='outworlder', descendants=None, kids=[25219112, 25216698, 25216221], score=None, time=1606351931, title=None, item_type='comment', url=None, parent=25214845, text='This matters more than one would think.<p>I&#x27;ve once worked on a system that was objectively slow. Some actions would take seconds to complete. It&#x27;s not like people would refuse the use the system, it was the only way to do their jobs. The public had no choice, either.<p>Initially, I didn&#x27;t think it was such a big deal. Yes it was a bit slow, but nothing _terrible_ and why did it matter, since there were so many other procedures that took way longer than the software step. It was a government facility, lots of red tape. Surely optimizing some of the paper processes would be more beneficial.<p>But we optimized it anyway. Not because the UI was slow(which we didn&#x27;t even measure directly), but because it was slow for a reason - backend processes were taking time, and resources. If we could optimize, we thought, we would save resources (and also increase the runway until we had to expand again, buy hardware and the like).<p>First round of optimization was completed. Lots of low hanging fruits(many database-related). Testing indicated that the backend would be faster by almost an order of magnitude. Deployed.<p>THE SYSTEM BECAME SLOWER.<p>How was that possible? Maybe we had missed something. We found more bottlenecks, optimized those. Deployed again.<p>Everything is slow again. What&#x27;s happening?!<p>We went to the &#x27;field&#x27; - as in, talked to the users. Well, this is what we discovered: we saw the backend working harder - because the users were more productive! Instead of staying after the facilities were closed to the public and then catching up on whatever paperwork they were unable to enter in the system, they could process everything almost as fast as people came in. Which means that they could go home early.<p>What we saw as &quot;the system being slow again&quot; was due to bad metrics - we were watching backend load, not UI response times. Because, admittedly, that didn&#x27;t bother us directly. Not until we talked to the poor souls that had to use the system. Lots of async processes got triggered and queues filled up, but it didn&#x27;t really matter to the users, as long as the UI said things were submitted and they could move on.<p>After that, we optimized the heck out of all the UI interactions we could find.')