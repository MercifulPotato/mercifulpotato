Item(by='MaxBarraclough', descendants=None, kids=[25218810], score=None, time=1606387484, title=None, item_type='comment', url=None, parent=25214845, text='A slight nitpick:<p>&gt; The ambulance I shadowed had an ePCR. Nobody used it. I talked to the EMTs about this, and they said nobody they knew used it either. Lack of training? <i>No, we all got trained.</i> Crippling bugs? No, it worked fine. Paper was good enough? No, the ePCR was much better than paper PCRs in almost every way. It just had one problem: it was too slow.<p>That <i>is</i> a crippling bug. The UI is a soft real-time system, [0] and it&#x27;s doing such a poor job of meeting its deadlines that the user considers the system to be unusable.<p>If you&#x27;re writing an autopilot system, it&#x27;s not enough for the system to <i>eventually</i> make the right decision, it must arrive at the right decision before the deadline. Failure to do so would by definition qualify as a bug.<p>&gt; Most of us aren’t writing critical software. But this isn’t <i>critical software</i>, either: nobody will suddenly die if it breaks.<p>Won&#x27;t they? If the software corrupts the patient data, someone could die, right? Elsewhere the article essentially says as much:<p>&gt; An error might waste valuable time as nurses chase invisible problems or ignore obvious ones. Worst case, it leads to the wrong treatment. In emergency situations these mistakes can be fatal.<p>[0] <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Real-time_computing#Soft" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Real-time_computing#Soft</a><p><i>edit</i> I see brundolf&#x27;s comment already makes some of these points')