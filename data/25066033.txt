Item(by='dwheeler', descendants=None, kids=[25066950], score=None, time=1605151283, title=None, item_type='comment', url=None, parent=25061513, text='There are indeed several different proof systems. &quot;Formalizing 100 Theorems&quot; tracks the progress of the &quot;top&quot; ones compared to a set of well-known proofs:<p><a href="http:&#x2F;&#x2F;www.cs.ru.nl&#x2F;%7Efreek&#x2F;100&#x2F;" rel="nofollow">http:&#x2F;&#x2F;www.cs.ru.nl&#x2F;%7Efreek&#x2F;100&#x2F;</a><p>The top ones (sorted from most to least complete) are HOL Light, Isabelle, Metamath, Coq, Mizar, and Lean. Lean actually has the fewest proofs of those systems, though of course there are advantages to Lean as well.<p>I think some duplication is inevitable because there are fundamental disagreements on &quot;what is important&quot;.<p>One problem with most of them as a &quot;store of proof knowledge&quot; is that most of these proof systems don&#x27;t (normally) store the proof in terms of axioms, definitions, and previously-proven theorems. Instead, they store a program (as a sequence of tactic statements) that, if run, is intended to help the prover <i>rediscover</i> the proof... assuming that tactics never change (even though they do). As a result, older proofs in some of these systems can no longer be verified as being correct. This is one thing that attracts me to Metamath; Metamath stores literally every step, with all mathematical knowledge (including all axioms and definitions) in the database, so proofs <i>stay</i> proven. It also makes verification super-fast, e.g., 28K theorems can be verified in less than 1 second.<p>Others believe other traits are important, so they end up with different systems.<p>As far as translations between systems, I&#x27;m very interested in what happens with Metamath Zero. That work might, in the end, enable mutual translations between various systems. We&#x27;ll see!')