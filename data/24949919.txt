Item(by='waheoo', descendants=None, kids=[24949943], score=None, time=1604133857, title=None, item_type='comment', url=None, parent=24949818, text='Pragmatic programmer does a decent job of it. Not perfect, but decent enough.<p>I&#x27;m of the school that thinks it&#x27;s something you need to practice. Many software positions especially in large companies are very limited in scope, you basically just maintain and patch existing systems, rarely having to build systems from scratch. Building these systems from the ground up is what is hard but you learn what works and what doesn&#x27;t the more you do it.<p>If you want to learn how to build software, join a start up or small company that has a healthy appreciation for what software rewrites can provide. Run away from companies that follow the never rewrite mantra. Usually saying something like you&#x27;ll just repeat mistakes, its like well no shit this thing was built before I was born, if you rebuilt it with me here I could avoid those mistakes.<p>I&#x27;m not saying you should always rewrite, its usually better to refactor, but some design failures are hard to refactor out, have double binds or are too critical for stability woes. But systems that live forever should have unlimited quality assurance budgets for refactor and repair, very few do in this industry. Managers seem to expect systems to live forever all while constantly patching with very small refactoring budgets. It&#x27;s completely insane.<p>Like running a machine in a factory 24&#x2F;7 and never doing maintenance but expecting it to work perfectly like new forever with no future cost incurred as eventual debt.')