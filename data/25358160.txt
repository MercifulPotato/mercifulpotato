Item(by='dfischer', descendants=0, kids=None, score=2, time=1607520081, title='Ask HN: Where do I start with first principles in 3D rendering?', item_type='story', url=None, parent=None, text='I&#x27;m struggling finding a path towards understanding the first principles in 3D rendering.<p>I can find a lot of complicated books and tutorials that assume a bunch of things like OpenGL or Glad or C++ or Dynamically Linking library X Y Z and magically creating a scene but where is the &quot;build it yourself&quot; path?<p>I essentially want to build my own &quot;hello world&quot; 3D engine to understand how to manipulate pixels&#x2F;shaders in 3D space.<p>I&#x27;m searching for tutorials and books around building a game engine from scratch as that seems to be the best fit -- I&#x27;m still searching. Nothing I have found yet seems thorough and to the point and self-bootstrapped. For example I find this walkthrough of building a text-editor from scratch absolutely perfect: https:&#x2F;&#x2F;viewsourcecode.org&#x2F;snaptoken&#x2F;kilo&#x2F;<p>I have no preference for language - I&#x27;m familiar with most. Anything more &quot;raw&quot; without including a bunch of libraries will suit me best. So &quot;single file&#x2F;header libs&quot; are the largest I&#x27;d like to play with. Having said that, C might be the best fit if it&#x27;s the easiest to compile and get up and running without any dependencies.<p>Some embarrassing questions:<p><pre><code>  1. What is the most basic way I can create a window and render pixels in it?\n  2. Same as one but essentially with the most direct way of creating &quot;fragment shaders?&quot; (Is there something more direct than GLSL?)\n  3. My second question implies OpenGL as the API - is there a more direct or easier way to manipulate a window and pixels within it than OpenGL that is specific per OS? \n  3a. What would be the most direct API&#x2F;layer to access per OS?\n</code></pre>\nFor context: I&#x27;m currently coding on Windows&#x2F;WSL - I recently switched from MacOS. I&#x27;m most familiar with MacOS and unix flavors for dev environments. I mention this in case there is a more direct way to accomplish my goal being on Windows than trying to go a cross-platform approach way (OpenGL).<p>I&#x27;m specifically avoiding any engine like processing, unity, webGL, etc - these abstract too much of the fundamentals I&#x27;m trying to learn.<p>I&#x27;d be really happy if I can just:<p><pre><code>  1. Create a window\n  2. Render pixels in that window that allow 2D&#x2F;3D space drawing&#x2F;coloring.\n  3. Create some basic shapes from a square to a cube and further real-time transformations.\n</code></pre>\nIt can&#x27;t be that complicated can it? Hah.')