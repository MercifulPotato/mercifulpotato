Item(by='davorak', descendants=None, kids=None, score=None, time=1610202254, title=None, item_type='comment', url=None, parent=25700269, text='&gt; But Haskell&#x27;s explanations of Monads is in my experience really no adequate. Category Theory is the underlying since theory, but do you need to know about mechanics and gears to drive a car?<p>Monads are part of the underlying category theory. So asking for a full explanation of Monads you are asking to explain part of the &quot;mechanics and gears&quot; in your car analogy.<p>&gt; E.g. by now the concept of map, flat_map is fairly wide spread in most programming languages and you can teach about Monads in terms of that fairly easy. And then add the additional abstraction layer used in context of Monads like abstracting over the &quot;external world state&quot; (IO) and &quot;combining computation descriptions&quot;.<p>I think I agree with your main point here that teaching the internal details first is often not the optimal method. You do not need to know how Monads work to use them to great effect in Haskell and other languages.')