Item(by='freedomben', descendants=None, kids=None, score=None, time=1603039799, title=None, item_type='comment', url=None, parent=24816807, text='<i>Disclaimer:  I work for Red Hat which is the main force behind Podman</i><p>I mostly agree, however I don&#x27;t think saying that Podman lacking a docker.sock is a lack of feature parity, since that&#x27;s actually considered a <i>feature</i> of Podman.  The daemon model that Docker uses has security implications that are non-trivial.  Podman chooses not to be a daemon by choice.  There is a sister project called CRI-O that has a daemon which will get you the daemonized portion if that&#x27;s what you want. It has a similar API and a CLI called crictl to drive it.  It&#x27;s not widely used outside of Kubernetes, but it is available if you want it.  If you&#x27;re trying to compare apples to apples, it should be docker vs podman&#x2F;cri-o, not docker vs podman.<p>Podman also has some features that Docker does <i>not</i> have, such as the ability to create, run, and export Pods (same YAML definition as Kubernetes, which is mighty convenient).<p>I used to use docker-compose all the time, but I&#x27;ve found I largely don&#x27;t need it anymore since I can put the various dev services into the same Pod.  This is even more convenient since from every container you can just reference &quot;localhost&quot; since the Pod shares a network namespace between containers.  It&#x27;s not a perfect solution though, and certainly isn&#x27;t a drop-in for docker-compose (although nobody working on Podman has claimed it is, either).<p>All that said Docker still has it&#x27;s place.  There are tools that need the docker sock in order to work.  One that I wrote (called Dory[1]) is a good example of one that won&#x27;t work on Podman&#x2F;CRI-O without significant work.<p>[1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;freedomben&#x2F;dory" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;freedomben&#x2F;dory</a>')