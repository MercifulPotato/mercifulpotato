Item(by='theptip', descendants=None, kids=None, score=None, time=1602104106, title=None, item_type='comment', url=None, parent=24710683, text='I&#x27;ve played this game before, but it ends up being really difficult to estimate the cost of a bug. E.g. what&#x27;s the cost of not upgrading &lt;libraryX&gt; from v1.2.0 to v1.5.0? Or a theoretical security bug that you think is going to be quite hard to hit, but would be ruinous if it was exploited? Is that bug 0.001% or 0.01% likely to be triggered?<p>In practice it&#x27;s impossible to get accurate ROI estimates for large chunks of the work you do. So being honest about that and using an approximation often doesn&#x27;t cost you any appreciable accuracy -- and you will definitely spend less time trying to figure out how to precisely cost your bugs.<p>Don&#x27;t get me wrong, I&#x27;m in favour of using ROI as a lens for prioritizing bugs, I&#x27;ve just never seen anyone make a credible estimate that&#x27;s more accurate than the nearest order-of-magnitude.<p>I&#x27;m sure this is much easier the bigger you get; Google can estimate how many clicks are lost due to a bug, and clicks are of known value, so you can make a case for this bug being worth $Xm. But for startups I think this is unfeasible because you&#x27;re working with such small sample sizes.')