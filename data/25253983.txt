Item(by='MaxBarraclough', descendants=None, kids=[25254159], score=None, time=1606746205, title=None, item_type='comment', url=None, parent=25253666, text='Sure, reimplementing TLS is a great way to learn the protocol. We were discussing reimplementing things with an eye to then using that implementation for serious work, but yes, reimplementing as a learning exercise is an exception, provided you never use your toy implementation in production.<p>&gt; &quot;Shouldn&#x27;t&quot; is the wrong word to use. Why should you not?<p>I&#x27;ll assume that here you&#x27;re not referring to reimplementing purely as a learning exercise.<p>I already said why: you will almost certainly do so incorrectly, and this will worsen your cybersecurity risk profile. For serious work, you should use a mature battle-tested implementation like everyone else. The slightest error in a cryptography codebase can lead to severe security vulnerabilities. This is well understood and much has been written on the topic of <i>don&#x27;t roll your own crypto</i>, e.g. <a href="https:&#x2F;&#x2F;security.stackexchange.com&#x2F;a&#x2F;18198&#x2F;" rel="nofollow">https:&#x2F;&#x2F;security.stackexchange.com&#x2F;a&#x2F;18198&#x2F;</a><p>&gt; The vibe &quot;you shouldn&#x27;t&quot; crushes the development side of things.<p>No, it&#x27;s solid cybersecurity advice. It&#x27;s irresponsible to make use of either an amateur cryptographic scheme, or an amateur implementation of a cryptographic scheme, in a serious codebase. Reimplementing TLS purely as a learning exercise is of course still to be encouraged.<p>More generally, there is no culture of <i>you shouldn&#x27;t</i> posing a problem in the software development world. Nuclear engineers and bridge engineers are taught <i>you shouldn&#x27;t...</i> but software developers are taught <i>just go for it</i>.')