Item(by='andrewmcwatters', descendants=None, kids=None, score=None, time=1605049021, title=None, item_type='comment', url=None, parent=25052827, text='&gt; Its networking api is minimal, and easy to use. It helps you negotiate your initial connection, and then gets out of your way, so you can spend your time thinking about the information coming through the pipe.<p>This doesn&#x27;t mean anything at all if you&#x27;ve actually built a game before. You can do this with ENet alone, which means they haven&#x27;t done anything for you.<p>&gt; A more opinionated system might be faster to get up and going, but would likely get in your way for more complex projects.<p>There&#x27;s effectively no difference in its multiplayer offering and a GitHub project with under 100 stars and a month&#x27;s development work binding rendering APIs to a popular programming language. You literally have to do everything yourself.<p>&gt; Much of godot&#x27;s functionality is implemented in modules, which the engine can be optionally compiled without, and are easily added in by other developers.\nOn top of this, the engine has a plug-in ecosystem like Unity has, which allows functionality extension on a per-project basis.<p>None of this means anything at all. You&#x27;re just saying people have to create their own work, but hey, since it&#x27;s in a &quot;module&quot; that makes it good!<p>&gt; Imo, this is a win. Developers don&#x27;t have to work around, bypass, or ship with a clunky networking model that seemed like a good idea at the time, and Godot devs don&#x27;t have to maintain the potentially sprawling implementation of a feature that could very well get in somebody&#x27;s way.<p>Yeah you&#x27;re right, and the end result is basically no one does multiplayer or does it well, because most people using Godot don&#x27;t know what they&#x27;re doing to begin with. It&#x27;s easy to not get in somebody&#x27;s way when you do nothing at all, isn&#x27;t it?<p>&gt; Wrt gdscript, it&#x27;s something that existed in the engine before it was open-sourced, is tightly integrated into the engine&#x27;s systems, and is easy to bind new code and methods to.<p>As far as I know, they spent Mozilla funds to continue developing it versus features actual game developers care about.<p>I don&#x27;t really see a difference between what it offers in terms of meaningful features, and what someone experienced could throw themselves in 3-6 months time.')