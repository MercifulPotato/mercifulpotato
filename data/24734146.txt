Item(by='remram', descendants=None, kids=[24734241], score=None, time=1602275633, title=None, item_type='comment', url=None, parent=24730340, text='Honestly it still seems like a lot this way.<p>If those platform crates are just backends for libc (or similar to libc), why aren&#x27;t they all folded in a single project? Having them as separate crates open the gate for supply-chain attacks without really allowing greater control or expressiveness. You are always going to pull all of them in, you are unlikely to ever use them directly, and they have no more impact on compilation than features.<p>Having to use proc-macro2+quote+syn for macros feels wrong, considering it&#x27;s a language feature.<p>Having to pull in 4 crates for pinning also seems wrong. This could easily be a single utility crate, and if you really need all this cruft to use Pin (a language feature) most of this should probably be in std.<p>The async I&#x2F;O feels like definite bloat. Not only is that a lot of futures-* crates, but I know from first-hand experience that those tend to implement multiple versions of some primitives (like streams) that are incompatible.')