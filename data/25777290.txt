Item(by='s3cur3', descendants=None, kids=[25782435, 25780645], score=None, time=1610637482, title=None, item_type='comment', url=None, parent=25776525, text='Happy Elixir user here. At work we have a use case that isn&#x27;t covered by Jos√©&#x27;s high-level overview of the domains Elixir&#x27;s used in: we run a massive multiplayer game server on it.<p>This is actually a really good fit. (It kind of rhymes with the original use of Erlang, being telecoms infrastructure.) We get <i>outstanding</i> concurrency support, high reliability, and really efficient development times. I can&#x27;t imagine shipping this feature with a server written in C++ (the language I&#x27;m most comfortable in), and I can&#x27;t imagine scaling it the way we need to if we&#x27;d gone for a traditional web language like Node, PHP, etc.<p>If you&#x27;re interested, you can see the RakNet (game networking protocol) implementation we use on the server here:<p><a href="https:&#x2F;&#x2F;github.com&#x2F;X-Plane&#x2F;elixir-raknet" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;X-Plane&#x2F;elixir-raknet</a><p>The README gives a good overview of the full MMO server&#x27;s architecture, too: each client connection is a stateful Elixir process (not to be confused with a heavy-weight OS process!), acting asynchronously on a client state struct; clients then asynchronously schedule themselves to send updates back to the user.')