Item(by='IgorPartola', descendants=None, kids=None, score=None, time=1610994546, title=None, item_type='comment', url=None, parent=25824402, text='Agreed. I am not at all against people learning how to do it. But if that&#x27;s the purpose then it&#x27;s probably better to present it as such (like the resources at your link does). But the claim that all you need is 100 LOC to make a proxy server work is a bit bogus when you rely on Ruby&#x27;s standard library. Look at the code at <a href="https:&#x2F;&#x2F;github.com&#x2F;jamesmoriarty&#x2F;forward-proxy&#x2F;blob&#x2F;main&#x2F;lib&#x2F;forward_proxy&#x2F;server.rb" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jamesmoriarty&#x2F;forward-proxy&#x2F;blob&#x2F;main&#x2F;lib...</a>. As expected, it doesn&#x27;t parse headers but uses stdlib&#x27;s code to do that. Good, less likely to have bugs. But that means that you can claim that you implemented an HTTP header parser in one line of code:<p><pre><code>  req_headers = Hash[req.header.map { |k, v| [k, v.first] }]\n</code></pre>\nIt&#x27;s good that you figured out how to do that, and it&#x27;s useful. But that is not a 1 LOC HTTP header parser. It&#x27;s an invocation of an opaque header parser that you do not understand. You might not even know what an HTTP header looks like and still write and use the above code.<p>Interestingly, above that code they write headers by hand. Those at least to me don&#x27;t look right: they don&#x27;t escape header values or handle multi-line headers. Probably should have used stdlib to write that part of the code.<p>I really don&#x27;t mean to pick on this particular project. I just don&#x27;t really get impressed with &quot;X in Y LOC&quot; when all it&#x27;s doing is invoking the services of a standard library. I guess when you are coming from the NPM world where you need 1000 dependencies to concatenate two strings it seems really cool to only do something with the tools included. But better ecosystems allow you to do a lot more with the batteries included, which means your LOC will be really low until you do something more interesting.')