Item(by='reitzensteinm', descendants=None, kids=[25590799], score=None, time=1609388046, title=None, item_type='comment', url=None, parent=25588261, text='Rollback networking is essentially event sourcing. Game states are immutable, and new game states are derived from adding inputs (events).<p>You keep the last dozen game states around in memory, and if you receive an input from the past, you rewind to the last game state prior, add it to your input stream, and fast forward to the present.<p>It has the same base advantages and drawbacks as RTS networking - the core logic is written as though the game is single player, and complexity can be scaled arbitrarily without bloating bandwidth requirements.<p>But in addition, you get the benefit of zero input latency (play a multiplayer RTS game and send a unit around - they won&#x27;t move for 200ms or so), and the drawback of an absolute clusterfuck time rewind debugging madness if any inadvertent mutation of your immutable data happens.<p>The reason you do rollback with something like this is it gives you zero latency, and you can retrofit it on to an emulator without changing any game code just by using memcpy() on the game state.<p>Source: I&#x27;ve developed about a dozen titles using rollback networking.')