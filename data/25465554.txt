Item(by='Gibbon1', descendants=None, kids=None, score=None, time=1608285445, title=None, item_type='comment', url=None, parent=25465385, text='&gt; Short-lived branches are another poor simulation of patches: if Git were really working on patches, you would be able to create a branch &quot;after the fact&quot;, meaning that you would work (possibly on multiple features at the same time), and push different parts of your work separately, without having to worry about branches before you start.<p>You made me remember something I&#x27;ve been annoyed with version control systems. Which I&#x27;ve found hard to explain. But your comment makes me think about what doesn&#x27;t come across.<p>The problem with version control systems is they are stand alone tools that don&#x27;t capture and record refactoring. What you want is not a patch&#x2F;diff. You want a record of the refactoring commands, and the result as separate things. And the ability to tag those.<p><pre><code>  1 Tag with meta data (commit message etc)\n  2 Command: Change this method name from this to that. \n  3 ChangeSet: List of 371 places where the change was made.\n</code></pre>\nConsider if you have a couple of projects that rely on a framework&#x2F;library. You could apply the commands to each project. And automagically get change sets for each.')