Item(by='jlokier', descendants=None, kids=None, score=None, time=1601927688, title=None, item_type='comment', url=None, parent=24686184, text='&gt; the WaitForObject won&#x27;t wake up any sooner than Sleep(1) will. Only a real proper hardware interrupt could wake up quicker - but that requires special hardware that just wasn&#x27;t available in that scenario. If it&#x27;s easier to think about that way, then please assume I said that WaitForObject &quot;sleeps&quot; way more than necessary due to the low timer resolution on Windows.<p>Above is not correct.<p>SetEvent&#x2F;WaitForSingleObject takes a few <i>microseconds</i> to wake the thread.  Not milliseconds, microseconds.<p>WaitForSingleObject doesn&#x27;t use a timer if you set infinite timeout.<p>It does not &quot;sleep more than necessary due to the low timer resolution&quot;, because it does not use the timer.<p>Even if you set a timeout, it doesn&#x27;t use the timer when the wake is triggered by SetEvent.  The wake is immediate.<p>Wake triggered by SetEvent in a different thread doesn&#x27;t use interrupts or need special hardware.  It&#x27;s purely kernel scheduling inside Windows.<p>For a real-world measurement, see for example:<p>&gt;&gt; &quot;Windows event object was used but it takes 6-7us from SetEvent() to WaitForSingleObject() return on my machine<p>The person is annoyed that it takes 6-7 <i>microseconds</i>, and they want to get it lower.<p>Here&#x27;s a Microsoft example of how to have one thread wake another:<p><a href="https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;sync&#x2F;using-event-objects" rel="nofollow">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;sync&#x2F;using-ev...</a><p>There are other ways for one thread to quickly wake another thread on Windows, but SetEvent&#x2F;WaitForSingleObject is the easiest in a general purpose thread.<p>What I suspect happened in tests where it appeared that &quot;WaitForObject &quot;sleeps&quot; way more than necessary&quot; is that there was a race condition in the event trigger&#x2F;wakeup logic between the two threads, causing the worker thread to depend on timeout behaviour of WaitForSingleObject instead of being woken reliably by SetEvent.  That is is actually a very common bug in this kind of wakeup logic, and you have to understand race conditions to solve it.  When the race condition is solved, SetEvent wakeups become consistently fast.')