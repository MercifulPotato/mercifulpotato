Item(by='abraae', descendants=None, kids=[25206783], score=None, time=1606289188, title=None, item_type='comment', url=None, parent=25206182, text='Treating APIs as the same as GUIs means introducing discoverability, the primary advantage of GUIs over e.g command line.<p>Discoverability in an API would normally imply HATEOAS &#x2F; hypermedia, the altar at which REST zealots worship.<p>But whereas the discoverability provided by GUIs are very real and well accepted, the evidence is nothing like as clear for HATEOAS.<p>Sure it&#x27;s nice when you&#x27;re noodling around in curl to spot a handy url taking you to the next page of results, but I&#x27;m really not sold on the benefits beyond that.<p>In a GUI, we are typically trying to achieve a task and then get out. Did I manage to add that txt record to my dns entries in Route 53? Success, and case closed.<p>But when I&#x27;m playing with an API, I&#x27;m typically trying to understand how I will later automate my interactions with it. I&#x27;m not trying to achieve a one off end goal - instead I&#x27;m trying to understand how to write code that will - later - achieve that end goal over and over again.<p>These are fundamentally different scenarios, and that explains why documentation is so important for APIs. I doubt that many people have ever jumped into any reasonably complex API using curl or postman or whatever, and then worked out from the responses everything they need to know to write their code. Nope, they used the documentation. They didn&#x27;t reap the theoretical benefits of HATEOAS.<p>tldr; APIs are really nothing like UIs.')