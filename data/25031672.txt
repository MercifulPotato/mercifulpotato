Item(by='asicsp', descendants=None, kids=[25031779], score=None, time=1604898885, title=None, item_type='comment', url=None, parent=25026601, text='&gt;<i>Have you considered any sort of tiered index to allow one to classify a problem at hand and look up the relevant structures int he book?</i><p>I have wondered a few times if I can build some sort of guide&#x2F;flowchart that allows one to pick tool(s) for a particular text processing job (for ex: when to choose head&#x2F;tail&#x2F;grep&#x2F;sed&#x2F;awk&#x2F;pr&#x2F;paste&#x2F;etc). And then within the tool(s) chosen, how to break down a problem and select particular features of that tool. It has remained a fantasy as I haven&#x27;t tried to actually start doing something about this. I dunno if this is feasible and&#x2F;or whether I&#x27;ll be able to do it.<p>&gt;<i>The reason I ask is that I&#x27;ve never figured out a good way to make use of this type of material.</i><p>There are several prerequisites mentioned in the Preface before you can use this book. You&#x27;ll have to be familiar with cli environment as well as Perl basics.<p>After that, I feel the best way would be to start using these one-liners in your everyday tasks. If your workflow doesn&#x27;t suit this type of usage, you&#x27;ll have to be either motivated enough to explore or take a risk to change&#x2F;modify your workflow.<p>I provide several examples for each topic and have exercises at the end of chapters. Broadly speaking, there are three main tasks (tools mentioned in parentheses is the fundamental task of that tool)<p>* Filter an input record based on regexp, string or numeric comparisons (grep)<p>* Search and replace (sed)<p>* Field based filtering&#x2F;substitution (awk)<p>awk and perl can do all of these tasks. However, a tool specialized for a task is usually faster and has custom options for ease of use for those tasks.<p>So, my best advice would be to practice and find reasons to incorporate cli based solutions in your everyday workflow.')