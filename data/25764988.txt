Item(by='giovannibajo1', descendants=None, kids=None, score=None, time=1610557985, title=None, item_type='comment', url=None, parent=25759689, text='&gt; I think, that instead of vendoring, Debian should instead adopt a different packaging policy, which would allow them to package whole dependency trees into a single package.<p>I&#x27;m not sure how this is different from what I call vendoring, and I think this is indeed the solution.<p>In Go, there&#x27;s &quot;go mod vendor&quot; which automatically creates a tree called &quot;vendor&quot; with a copy of all the sources needed to build the application, and from that moment on, building the application transparently uses the vendored copy of all dependencies.<p>In my ideal world, Debian would run &quot;go mod vendor&quot; and bundle the resulting tree a source DEB package (notice that the binary DEB package would still be &quot;vendored&quot; because go embraces static linking anyway).<p>If the Debian maintainer of that application wants to &quot;beat upstream&quot; at releasing security fixes, they will have a monitor on those dependencies&#x27; security updates, and then whenever they want, update the required dependencies, revendor and ship the security update.<p>What I totally disagree with is having &quot;go-crc16&quot; as a Debian package. I&#x27;m not even sure who would benefit from that, surely not Go developers that will install packages through the go package manager and decide and test their own dependencies without even knowing what Debian is shipping.')