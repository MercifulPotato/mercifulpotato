Item(by='dsign', descendants=None, kids=[25069762, 25071127], score=None, time=1605172860, title=None, item_type='comment', url=None, parent=25064855, text='Five years ago, we built a company around HTTP&#x2F;2 server push. Here is what we learned:<p>- The interaction of HTTP&#x2F;2 push with browser caches were left unspecified for the most part, and browsers implemented different ad-hoc policies.<p>- Safari in particular was pretty bad.<p>- Since HTTP&#x2F;2 Push worked at a different layer than the rest of a web application, our offering centered around reverse-engineering traffic patterns, with the help of statistics and machine learning. We would find the resources which were more often not cached, and push those.<p>- HTTP&#x2F;2 Push, when well implemented, offered reductions in time to DOMContentLoaded in the order of 5 to 30%. However, web traffic is noisy and visitors fall in many different buckets by network connection type and latency. Finding that 5% to 30% performance gain required looking to those buckets. And, DOMContentLoaded doesn&#x27;t include image \nloading, and those dominated the overall page loading time.<p>- As the size of, say, Javascript increases, the gains from using HTTP&#x2F;2 Push asymptotically tend to zero.<p>- The PUSH_PROMISE packets did indeed could increase loading time because they needed to be sent when the TCP connection was still cold. At that point in time, each byte costs more latency-wise.<p>- If a pushed resource was not matched or not needed, the loaded time increased again.<p>Being a tiny company, we eventually moved on and found other ways of decreasing loading times that were easier for us to implement and maintain and also easier to explain to our customers.')