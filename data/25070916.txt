Item(by='aseipp', descendants=None, kids=None, score=None, time=1605195206, title=None, item_type='comment', url=None, parent=25069716, text='The intent is to allow even <i>earlier</i> preloading than what `Link` headers in the response or `&lt;link&gt;` in the HTML would typically allow. The insight here is that most application servers&#x2F;webservers get a request and only send the response headers all at once, with the body, once everything is ready. But many times you already know some static resources ahead of time, before you know what response to send back.<p>For example, if you make a request for `GET &#x2F;users&#x2F;id&#x2F;12345`, you know the user <i>probably</i> needs `style.css` like most do. You put that into a `Link` header in the response. But the browser won&#x27;t fetch that file until it is told about it. It will only be told about it once it has seen the entire response, because again, the <i>server</i> (probably) sends it all at once, body and headers together, anyway.<p>But, producing that page in the first place may require running database queries for user info, your template engine to get run for the page body, an external HTTP call to happen in the background for their Gravatar, etc. So all of that has to happen on the server side before style.css can be fetched by the client browser. Even though you (the developer) knew they (the client) <i>probably</i> needed it.  Let&#x27;s say that `GET` request needs 500ms of computation (DB query + API call) before a reply is sent. That means the client has to wait <i>at least</i> 500ms for the server to produce any Link headers -- 500ms before it can fetch style.css. More importantly, it&#x27;s literally 500ms where the client browser does <i>nothing</i> while it waits, while it could be concurrently downloading other assets, for example.<p>With Early Hints, when someone issues a `GET &#x2F;users&#x2F;id&#x2F;12345`, the server can immediately reply using an Early Hint and tell the client about style.css first-thing. Then the client can immediately go fetch style.css, without waiting 500ms for the server to produce the body, or the headers, or even anything at all.<p>One interesting advantage of this is that, like Link headers, but unlike Server Push, early hints can be statically computed at at &quot;application build time.&quot; You just need a mapping of URIs to URIs, like preload. So you can imagine for example your Django Middleware or Rails App or NodeJS Thing-Doer might have a step where it calculate asset dependencies for your frontend, and has a middleware layer that automatically issues 103 Early Hints for statically known page assets. And unlike Push, Early Hints are client-controlled. A big problem with Push is that it has no knowledge of the client-side cache, so it can push assets unnecessarily and cause slowdown. Early hints has no such drawback; the client has complete knowledge of its cache state and can make the correct decision.')