Item(by='jabl', descendants=None, kids=[25562172], score=None, time=1609165474, title=None, item_type='comment', url=None, parent=25558175, text='&gt; But adding compression just costs 400 gates, how on earth is that an issue, even on a small controller?<p>If it&#x27;s so cheap and good, why is it an extension and not part of the base then?<p>Anyway, the problem isn&#x27;t how few gates you can get away with  for a low performance microcontroller, but rather how to design a wide and fast decoder for a higher end core. As the instruction stream isn&#x27;t self-synchronizing, you need to decode previous instructions to know where the instruction boundary for the next instruction is. Sure, you could speculatively start to decode following instructions, but that gets hairy and consumes extra power.<p>&gt; You seem to talk theory, when in practice we know the BOOM RISC-V CPU outperforms a ARM-32 Cortex-A9, while requiring half the silicon area. The RISC-V is 0.27 mm2 while the ARM is 0.53 mm2 using same technology.<p>Yes, BOOM is a nice design, and the (original) author used to hang around here on HN. That being said, having read the paper where those area claims were made, I think it&#x27;s quite hard to do cross-ISA comparisons like this. E.g. the A9 has to carry around all the 32-bit legacy baggage (in fact, it doesn&#x27;t even support aarch64, which isn&#x27;t that surprising since it&#x27;s an old core dating back all the way to 2010), it has a vector floating point unit, it supports the ARM 32-bit compressed ISA, and whatnot.<p>&gt; And what you are missing from the overall picture is that a key requirement for RISC-V is that it is useable in academia and for teaching. It is supposed to be easy for students to learn as well as to implement simple RISC-V CPU cores. All of that is quickly out the window if you go down the ARM road.<p>I&#x27;m not forgetting that, and that&#x27;s certainly an argument in favor of RISC-V. Doesn&#x27;t mean that it&#x27;s a particularly relevant argument for evaluating ISA&#x27;s for production usage.<p>I&#x27;m not saying RISC-V is a bad idea. Certainly it seems good enough that combined with the no licensing cost aspect as well as geopolitical factors which is important for some prospective users, it has a good future ahead of it. I&#x27;m just saying that with some modest changes when the ISA was designed, it could have been even better.')