Item(by='tsm', descendants=None, kids=None, score=None, time=1603723805, title=None, item_type='comment', url=None, parent=24890463, text='I learned Common Lisp in high school and took a course called &quot;Discrete Math and Functional Programming&quot;[0] my freshman year of college (the prof wrote the textbook). To me it felt like a math course (covering predicate logic, sets, graphs, and eventually the lambda calculus. It was also the first time I had to write proofs outside of geometry class), but all of the teaching was paired with examples in ML. For example, half the homework one day would be writing proofs about powersets, and the other half would be writing ML functions to create and manipulate powersets.<p>It was a really neat idea, and it felt like ML got out of the way and just let me program without having painful syntax or semantics. That said, my biggest ML programs would be five functions spanning ~30 lines loaded into an smlnj interpreter. I never got to deal with functors and modules and who knows what else, and am sorry that I don&#x27;t know how to &quot;program in the large&quot; in ML. I&#x27;m now a professional Clojure dev and would love to see how ML does things.<p>I own a copy of ML for the Working Programmer (which I see @eatonphil is panning below) and the ML compiler book by Appel, neither of which I&#x27;ve read. Maybe I&#x27;ll make the time one of these monthsâ€¦it&#x27;d be nice to have a Motivating Project though.<p>0: <a href="https:&#x2F;&#x2F;cs.wheaton.edu&#x2F;~tvandrun&#x2F;dmfp&#x2F;" rel="nofollow">https:&#x2F;&#x2F;cs.wheaton.edu&#x2F;~tvandrun&#x2F;dmfp&#x2F;</a>')