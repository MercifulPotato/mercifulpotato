Item(by='bredren', descendants=None, kids=None, score=None, time=1608736574, title=None, item_type='comment', url=None, parent=25518151, text='Yes. I have large portions of a server-rendered, django web application that uses react largely as you&#x27;ve described.<p>I wanted to bring a single react app into the django project using a root dom element from a django template using the same template inheritance as the rest of the site. (common navbar)<p>Benefits of this approach on Django side were adherence to Django structure and session-based auth for the react app&#x27;s API calls.<p>My goal was to minimize customization while retaining the &quot;spirit&quot; of both Django and react.<p>I decided the react app should flow from an unejected Create React App (CRA) project. This provides the developer experience of CRA&#x27;s development environment hot-reload and production build bundling.<p>It also makes it more likely the react app can be migrated to new versions of CRA.<p>The webpack config changes needed to pull this off are not extensive but do leverage Create React App Configuration Override (CRACO). [1] CRACO is the best-supported config layer for CRA today, supporting CRA 4.*.<p>Key aspects of my implementation are:<p><pre><code>   - Use of package.json poststart to move files generated by CRA&#x27;s run script and update paths made by CRA-generated files to work inside django. \n   - Use of the package.json postbuild script to move and rename files to nestle assets into their proper place in a django static path.\n   - Customization of HtmlWebpackPlugin to modify CRA&#x27;s:\n      - Out-of-box behavior of webpack bodyTags and headTags.\n      - webpackConfig.output to use a project-excluded directory that facilitates hot reload during dev\n</code></pre>\nWhile my implementation doesn&#x27;t currently support N react apps bundles at this time I could see it being done provided they share a single package file.<p>Being relatively new to modern web front end toolchains I ended up rewriting much of the of the user documentation for CRACO as part of my learning process for this mash of Django and React. [2]<p>I have not released my solution but I have stubbed out the problem and solution description [3].<p>If someone is very much in need of this project, please write me. I have wanted to release it but have just not had time yet, and I need to update it to CRA 4.<p>All this said and done, having accomplished my initial goals, I am less certain now that it is worth trying to integrate a CRA-app into Django, at least if the goal is to retain shared sub templates from the rest of the Django app.<p>Instead, I suspect the better method would be to expect to have to maintain a react-compatible implementation of say a navbar or other &quot;common&quot; portion of the UI on the server-rendered pages and leverage only django&#x27;s session auth on the SPA.<p>Ultimately, this integration experience made me take a hard look at my investment in Django. I know and enjoy python and the Django framework. But at least for new projects, I can&#x27;t help but feel they faces an existential threat from modern web (react) paired with a node backend.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;gsoft-inc&#x2F;craco" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gsoft-inc&#x2F;craco</a><p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;gsoft-inc&#x2F;craco&#x2F;pull&#x2F;203" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gsoft-inc&#x2F;craco&#x2F;pull&#x2F;203</a><p>[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;banagale&#x2F;create-react-app-django" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;banagale&#x2F;create-react-app-django</a>')