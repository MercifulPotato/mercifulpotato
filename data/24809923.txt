Item(by='wffurr', descendants=None, kids=[24811327, 24809976], score=None, time=1602942348, title=None, item_type='comment', url=None, parent=24805717, text='Modern C++ can be a joy to write, and is fine for a lot of tasks.  It&#x27;s hard to beat the combination of performance characteristics and higher-level constructs.<p>The issue with C++ is that it&#x27;s unsafe by default.  Foot-guns abound.  The right way is to make everything <i>safe</i> by default and provide an escape hatch when needed, e.g. Rust&#x27;s unsafe or C#&#x27;s unmanaged.<p>Unfortunately, there&#x27;s no way to &quot;fix&quot; C++ to be safe-by-default.  Too much legacy code out in the world and no appetite in the standards committee for backwards-incompatible changes in future versions of the standard.<p>It seems obvious to me that e.g. C++2X should entirely drop some older, broken, unsafe concepts, e.g. auto_ptr is the first thing that comes to mind, but there&#x27;s all kinds of gnarly bits that need to go, and just allow older code to continue compiling under previous versions of the standard.<p>That does leave libraries in a tough place - if your project wants to move to the (never going to exist) backwards-incompatible C++2X, they would need to update or remove all libraries not compatible with the new version.<p>But this seems like a way to eventually move the entire ecosystem to a better place.  Possibly the only way.')