Item(by='StillBored', descendants=None, kids=[25077147, 25078066, 25078481, 25076346, 25079015, 25077668, 25077392, 25080953, 25075743, 25079832, 25079713, 25080447, 25080316, 25080778, 25080317, 25076241, 25083134], score=None, time=1605212460, title=None, item_type='comment', url=None, parent=25074174, text='Sorry to be the killjoy here, but<p>This is a big mischaracterization of what &quot;software engineering&quot; is attempting. In this case it is an attempt to document what should be learned from experience and intuition. Because, the vast majority of software engineering IS &quot;factory&quot; work because its the grunt work of building what should be a well understood system, with well understood tooling. This doesn&#x27;t mean that there isn&#x27;t plenty of space for creative problem solving, particularly when the system is underspeced, it just means that the correct solution most of the time is the boring one.<p>Most companies don&#x27;t want &quot;software artists&quot; anymore than they want &quot;artistic bricklayers&quot; or &quot;artistic aerospace engineers&quot;. What they want is predictable, maintainable error free software that still works when the &quot;artist&quot; moves on.<p>That doesn&#x27;t mean that your not free to upload a ton of artistic software to your github, or have opinions about how something should be designed. It just means that a professional should choose the accepted method over the fun one when given the chance. And why shouldn&#x27;t they?  In very few cases are &quot;software engineers&quot; being paid to work on their own pet projects, the end result is going to be something that the company owns and is responsible for, not the individual working for said company.')