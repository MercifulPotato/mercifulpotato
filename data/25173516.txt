Item(by='dragonwriter', descendants=None, kids=[25173699], score=None, time=1606001214, title=None, item_type='comment', url=None, parent=25172758, text='&gt; - Let&#x27;s say we want to change the database from postgres to Oracle in the future. How do I go about doing it?<p>If by “database” you mean “storage backend” (either in whole or in part), then the answer is oracle_fdw.<p>If you mean the API implementation, then, just as if you wanted to use a different language&#x2F;platform when it <i>wasn&#x27;t</i> implemented via Postgres originally, it&#x27;s a complete reimplementation of that layer.<p>But, really, changing DBs isn&#x27;t a root need, it&#x27;s a solution, and unless we know the actual problem, we can&#x27;t determine a solution (and “switch DBs to Oracle” likely isn&#x27;t the best solution.<p>&gt; How about complex logic that needs to be done in a declarative language such as SQL?<p>Complex logic is often more clearly expressed in a declarative language.<p>OTOH, to the extent there is a need for procedural&#x2F;imperative logic, Postgres supports a variety of procedural languages, including Python.<p>&gt; How about version control and updating views, with traceability?<p>There are a number of variations on approaches for this with database schemas in devops pipelines. Whether your schema is just base tables or includes views&#x2F;triggers&#x2F;etc. doesn&#x27;t really make any difference here.<p>&gt; Do you think SQL is more readable for logic code than say Python?<p>I think most appropriate of SQL, pl&#x2F;pgSQL, and Python for each component is more readable than just-Python<p>&gt; You&#x27;re trying to use a tool (views), not for its intented purpose. It was not meant for sticking your company&#x27;s entire domain model.<p>That’s...exactly what views were designed for. For a long time the implementations in most RDBMSs weren&#x27;t fairly limited, but that&#x27;s not really the case now.<p>&gt; This is a completely wrong approach especially in enterprise environment. Might be ok with a small project.<p>Honestly, LOB apps in an enterprise environment is probably where this approach is most valuable. It might not be right for your core application in a startup where you are aiming for hockey stick growth. At least, from the complaints I&#x27;ve heard about horizontally scaling Postgres, I&#x27;d assume that.')