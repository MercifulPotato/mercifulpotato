Item(by='dmurray', descendants=None, kids=[25801739, 25801416, 25802091], score=None, time=1610791224, title=None, item_type='comment', url=None, parent=25797674, text='There&#x27;s a no-free-lunch theorem here that&#x27;s being ignored.<p>If you have a space of 64 bits to represent elements of some ordered field, and you insert items one at a time, there is some ordering of the items that allows you to make only 64 inserts.<p>Claiming that numbering the items with integers only allows you 16 insertions, but &quot;It would take virtually forever to run out of space through repeated list reordering&quot; using rational numbers just can&#x27;t be correct. The author cherry-picked a bad implementation for the integers and a favourable insertion order for his pet approach.<p>Where exactly did he go wrong? By picking the first number in the sequence of integers to be 65536, one of the smallest of the unsigned 64-bit integers, and then deciding all the inserts would happen in descending order. If he had picked a number like 2^63 instead, he would have got at least 63 inserts no matter what the insertion order. Using this integer strategy also lends itself to easy reindexing if you do need to: the row of rank N gets reindexed to 2^64 &#x2F; N. Or if you want to increase the size of the index field to 128 bits, bitshift everything left.<p>Note, just because we have this NFL theorem doesn&#x27;t mean one approach can&#x27;t outperform another in typical use patterns, but I don&#x27;t see evidence for that here. The most logical integer-index strategy isn&#x27;t considered and the insertion orders that exhaust the rational strategy are not particularly pathological.')