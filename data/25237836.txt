Item(by='talawahtech', descendants=None, kids=[25237888, 25239273], score=None, time=1606574937, title=None, item_type='comment', url=None, parent=25237233, text='Multi-AZ doesn&#x27;t protect against a software&#x2F;OS issue like this, Multi-AZ would be relevant if it was an infrastructure failure (e.g. underlying EC2 instances or networking).<p>The relevant resiliency pattern in this case would be what they refer to as cell-based architecture, where within an AZ services are broken down into smaller independent cells to minimize the blast radius.<p>They specifically mention in the write-up that this was a gap they plan to address, the &quot;backend&quot; portion of Kinesis was already cellularized but that step had not yet been completed on the &quot;frontend&quot;.<p>Celluarization in combination with workload partitioning would have helped, e.g. don&#x27;t run Cloudwatch, Cognito and Customer workloads on the same set of cells.<p>It is also important to note that celluarization only helps in this case if they limit code deployment to a limited number of cells at a time.<p>This YouTube video[1] of a re:invent presentation does a great job of explaining it. The cell-based stuff, starts around minute 20.<p>1. <a href="https:&#x2F;&#x2F;youtu.be&#x2F;swQbA4zub20" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;swQbA4zub20</a>')