Item(by='Aachen', descendants=None, kids=None, score=None, time=1602187010, title=None, item_type='comment', url=None, parent=24713223, text='It could use the STK (source address token), which it creates for 0RTT anyway, to identify which sessions to respond to. New sessions from a source IP which shows elevated rates could be dropped X-1&#x2F;X times (e.g. X=5) because a legitimate client will retry and obtain an STK in, on average, X attempts. This would reduce the amplification factor to below one, assuming the client handshake is &lt;X times smaller than the server handshake (which includes a cert).<p>Firewalls can&#x27;t block this because then you introduce a denial of service vector. If I can block anyone on the Internet from accessing a service because the service&#x27;s firewall blocks the source IP... this is why this isn&#x27;t a solution for dns and other udp protocols&#x27; amplification attacks, either. Otherwise we&#x27;d block offenders and be done with the problem of amplified DDoS attacks really quickly. The problem is allowing legitimate clients to pass that look (nearly?) identical to what the attacker sends. The STK seems to solve this (in a similar way to TCP, while allowing for 0RTT after the client met the server once), so let&#x27;s use it?<p>Edit: just noticed you posted another comment critical of QUIC. To be clear, this isn&#x27;t &quot;QUIC is amazing, let&#x27;s use this STK and it&#x27;ll be great&quot;. I don&#x27;t know enough about it for that. Heck, I like the textual property of HTTP&#x2F;1 and would be fine keeping that as well. I just noticed this security problem with HTTP&#x2F;3 and would prefer to see it fixed before widespread deployment given how heavily similar services are abused.')