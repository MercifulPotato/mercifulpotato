Item(by='cesarb', descendants=None, kids=None, score=None, time=1603209250, title=None, item_type='comment', url=None, parent=24838654, text='This is not a new thing, whenever you use the &quot;unsafe&quot; keyword you have to pay attention to undefined behavior. For instance, having two &quot;mut&quot; references at the same time to the same memory has always been undefined behavior in Rust; you cannot construct them without &quot;unsafe&quot;, but it&#x27;s very easy to do with &quot;unsafe&quot; (just cast to a pointer and back). In the same way, &quot;unsafe&quot; allows you to construct references with an arbitrary lifetime, and many other potentially-undefined things; see <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;reference&#x2F;behavior-considered-undefined.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;reference&#x2F;behavior-considered-unde...</a> for a list.<p>I don&#x27;t think Rust will &quot;get to where C++ is&quot; (whatever that means), because (outside of compiler bugs) you will not have undefined behavior unless you use &quot;unsafe&quot;, and most Rust code doesn&#x27;t use &quot;unsafe&quot;; the pieces that do use &quot;unsafe&quot; can be carefully audited (instead of auditing the whole code).')