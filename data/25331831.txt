Item(by='jakevoytko', descendants=None, kids=[25332506, 25332757], score=None, time=1607347108, title=None, item_type='comment', url=None, parent=25330182, text='This is an amazing list. I just want to point out that there&#x27;s an implicit requirement in this list, which is that this is optimized for reviewers who are willing to give you quick feedback.<p>At a previous job, I worked on a team where we iterated towards the list that OP provides. It worked really well, and it worked because we had a culture of providing rapid reviews. The senior people on our team even thought that reviews were important enough to drop their own work. A lot about the team was suboptimal, but I was spoiled by getting such rapid feedback for my work.<p>We had some partner teams that really challenged this. One was halfway around the world, so you were guaranteed to only get one review round per day. If you wanted to make progress while working with them, you needed to either send them huge changes or send them a bunch of changes at once. But structural feedback in an early change would cause you to need to rewrite the later changes. We broke this cycle by having them eventually give local reviewers stronger conditional approval in the integration path, which fixed our particular issue but showed that there were cracks in how we optimized our code review flow.<p>The real trouble came from a local team, which was an overloaded platform team that we were built on. No matter what you did, they would only review your changes about once per week. Their feedback was super insightful, too, and they often caught very subtle misuses of their platform that would cause subtle user-visible bugs. You couldn&#x27;t just skip their feedback. To try to manage their flow, they wanted teams to review pull requests locally before sending changes to them. So people on my team would write a change for this platform, which we&#x27;d review on our team. Our team would apply our rules and break the change up. We&#x27;d send the first one out. Then it would take a full month to get the entire thing in, to account for the back-and-forth. If you needed to get something substantial in, it could take months. My manager fought for months for them to acknowledge that this was a problem and fix it, and they did eventually dig out of it by setting SLAs and increasing capacity.<p>I don&#x27;t want to take away from this list, but I want to point out that some of it is a function of your reviewer&#x27;s incentives. If your reviewers have different incentives, then you need to find your own list that works within those bounds.')