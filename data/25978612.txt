Item(by='tompic823', descendants=None, kids=[25978797], score=None, time=1612099331, title=None, item_type='comment', url=None, parent=25978185, text='This solves a very real problem that some services like GitHub [0] have started to address. Auth tokens are being committed to public repos at an alarming rate. Detecting this and ideally preventing it as early as possible is key to avoiding account compromise.  There are two components to this: identification of a secret and attribution. Identification is non-trivial and requires determining if some text really is a secret and not just a random hash, uuid, or other high entropy string. Most tokens today are generic, alphanumeric patterns; false positives abound. Attribution is tricky too, currently relying on either parsing the variable name (`AWS_SECRET_KEY=XYZ`), commit message, file name, or some other metadata. In the rare case, a service will have designed their auth tokens with this in mind, prepending a unique, static prefix to their tokens.<p>The URI scheme proposed in the linked RFC will squarely solve the first problem. It will allow for highly accurate CI scanners and pre-commit hooks. The scheme doesn&#x27;t appear to address attribution, assuming all service providers use the same `secret-token` scheme. However attribution is a nice-to-have, allowing for automated revocation once the secret has gone public. If done right, identification alone could be used to prevent most of the token leakage that occurs today.<p>[0] <a href="https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;developers&#x2F;overview&#x2F;secret-scanning" rel="nofollow">https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;developers&#x2F;overview&#x2F;secret-scanni...</a>')