Item(by='russli1993', descendants=None, kids=None, score=None, time=1604204991, title=None, item_type='comment', url=None, parent=24956843, text='Apple is definitely not developing cross platform. Swift the language is cross platform. But the SwiftUI is only &quot;cross platform&quot; within apple&#x27;s different devices. A true cross platform is when a SwiftUI app would work on Android.<p>Native OSs can be built to be &quot;cross platform&quot;. For example, the OpenGL API. The same API works on different OSs, developers can code against the same API and it works on different OSs. In an ideal world, maybe there could be a standard API for presentation controls, UI drawing, animation, 2D&#x2F;3D graphics, networking, filesystem access, threading and more. Each OSs would implement the same API and add additional platform specific APIs to differentiate themselves. The key is application developers would have a common core set of APIs and language to implement the 80% business logic and UI logic.<p>Note, this is essentially what HTML, JS and CSS is doing. But the web platform is creating a runtime that exposes APIs to do a lot of different things. A CSS transform a single API that causes the DOM to animate in specific way. There are thousands of these APIs, and the runtime implements all of them. This is why the web runtime itself heavier and it takes 100mb just to show something simple on web platform.<p>For flutter, the core engine is just a 2D drawing surface, the APIs it exposes is just drawing shapes. And all of the widget self contains rendering, various settings and the application pulls in the widget used in the app. This makes the runtime smaller. Flutter is more efficient because the abstraction is lower and the core runtime is trying to do less things. On the scale of level of abstraction, flutter is on one end and the web platform is on the other. For our ideal OS platform, we can select the right level of abstraction to balance between performance, standardization, and flexibility.<p>But in the real world, all of this require collaboration between OS vendors. Apple&#x27;s business model is try to sell more IPhone, Mac, Apple Watch, IPad. They make the argument that Apple&#x27;s platform has the best apps that isn&#x27;t available on Google&#x27;s or Microsoft&#x27;s platform. And this actually works. Why is Android tablets not taking off, and IPad Pro is? People buy the IPad Pro for apps like Notability, Photoshop and more.  People still buys Windows and not ChromeOS because its got native Photoshop and Matlab. These apps are coded using Apple&#x27;s or Micosoft&#x27;s language, frameworks and APIs. And that exactly is what is preventing these apps from appearing on Android and ChromeOS easily and reducing people&#x27;s need to buy Apple and Microsoft&#x27;s devices. While these vendors may not say they are actively trying to lock in developers. They definitely don&#x27;t want the some developers who coded an complex application for their platform to easily move it to another platform. If this transition cost is too low, it doesn&#x27;t play into their business model. Their business model pushes them to differentiate their platform against others, and as a side effect, it increases the barrier and transition cost.<p>This is a tug of war between application developers desire to have all platform as similar as possible, and the platform owners desire to differentiate their platform and prevent other platforms obtaining the same capabilities as my platform.')