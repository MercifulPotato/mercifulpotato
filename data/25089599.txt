Item(by='deathanatos', descendants=None, kids=None, score=None, time=1605318494, title=None, item_type='comment', url=None, parent=25089293, text='Nothing about REST prevents strong validation of inputs. If anything, the notion that the ends should pass data using <i>well-defined</i> media types should push one towards something that can be validated. I don&#x27;t think &quot;everything chucks application&#x2F;json around and we have no idea what the JSON <i>represents</i> is in the spirit of REST at all.<p>The set of externally standardized media types is somewhat small. When I worked in real estate, there&#x27;s not really a standardized set of stuff for that problem domain, and we&#x27;re pretty much defining our own. And, worse, IMO, we did so badly, because we didn&#x27;t take the time to lay out a good, well documented specification. Some of the schema languages out there can help with that. (Though I don&#x27;t think they&#x27;re a panacea.)<p>Likewise, while I agree with some of the article, protobufs are just not terribly great. The lack of sum types really hampers how you can represent stuff in them. (We had other, more practical issues when we tried to adopt them over JSON in my last org.) But, also, if you want to define application&#x2F;vnd.foo.bar.baz as &quot;a protocol buf with this definition that contains data representing this&quot; … that can still be as RESTful as JSON.<p>(And, for the XML comparison… JSON is too verbose. XML is just even worse. JSON was a step in the right direction.)')