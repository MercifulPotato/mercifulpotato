Item(by='specialist', descendants=None, kids=None, score=None, time=1602110228, title=None, item_type='comment', url=None, parent=24711679, text='I like both imperative and functional style programming. They&#x27;re isomorphic if composition is favored. Imagine interpreters iterating over ASTs. Easy peasy.<p>I strongly dislike hybrids, multiparadigm, metaprogramming, and inheritance-heavy OOAD.<p>Most of our work is CRUD, meaning data centric. Right?<p>My arm wavy overgeneratalization is that functional programming promotes functional decomposition style programming, which emphasizes flow of control modeling over data modeling. Especially when noobs go overboard with lambdas, stream processing, reducers, and so forth, which obfuscates the data transformations.<p>Whereas imperative programming <i>can</i> be more straightforward for simple data processing. Until noobs go overboard with OOAD stuff like inheritance, making wrapper classes for everything, and design pattern overkill. Then the wheels fall off and the engine explodes once someone reads a book about inversion of control, dependency injection, mocking, aspects, or optionals (non-null).<p>YMMV.')