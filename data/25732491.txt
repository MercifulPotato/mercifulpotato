Item(by='sloaken', descendants=None, kids=None, score=None, time=1610386643, title=None, item_type='comment', url=None, parent=25729521, text='First off, sorry for your pain, and if you stay it will be a rough ride.<p>Initially I would say make sure you are paid for overtime, as when this thing breaks they will expect you to stay until it is done.<p>Other option is to get your resume together and plan for a new job.<p>Second make sure YOU have a backup copy of the code.  Yeah yeah they make backups... no you need a separate one.  Okay maybe you will not, but the smart money is saying you will.  Let us just hope you never need your personal backup.  Do it now, when you find out you needed it, it is too late.<p>Third make sure your boss realizes what a S** sandwich this is that you are being left with.  The &#x27;other&#x27; developer is clearly not a professional.  Your boss needs to realize that this other guy has left you with a HUGE technical debt.  If your boss actually needs this software, then he is going to have to spend a ton of resources fixing it.<p>Next start documenting what is there.  Sit the guy down and start having them explain the 1) Requirements including the goes into and goes out of.  Be leery of the would be nice if it does this. 2) Now start going over the design.  What are the 2&#x2F;3 or 4 MAJOR components.  What does each do.  How do you build &#x2F; compose them.  How do you test them.  Make sure all of this is written.  Test what you have written.  3) Understand the entry point of each system, and how to debug it.  4) for each major system ... what are the 2&#x2F;3&#x2F; or 4 major components.  What does each ... &lt;yes recursive&gt;<p>Although I agree you are over your head, it is also a great opportunity, if they pay overtime and respect the herculean effort they are asking you.  Sadly most places I have worked at did not understand how bad it is.<p>Rewrite would take a LOT of effort.  As it stands you can blame the previous person and their management for everything that goes wrong.  Once you rewrite you own it.<p>While rewriting you have to have the old stuff running.  If you break it down into parts, you can slowly replace a part at a time.  Same architecture, just better coding.<p>I wish you the best of luck.  I have been in similar shoes all too often.<p>First time, after documenting the code enough to make it understandable, started the rewrite.  Person I replaced was around for 3 months.<p>Second time, redid just the variable names, no variable name was less than 50 character, variable names included project name and company.  Other person was around, he resented my changing the variable names.<p>Third time, was laidoffed after 9 months as the project had not progressed enough.  Entire team doing the development left a month before I arrived.  They only had pretty pictures.<p>Fourth time, I started a week before the developer left.  He had his working project and a &#x27;new and improved&#x27; that was almost done.  The week of overlap was spent with him showing me things.  I was busy trying to absorb what he was saying, and did not realize he had not documented a thing.  Documented his stuff as best I could and kept the ship afloat, until I could get someone else to create a replacement.')