Item(by='kreetx', descendants=None, kids=[25728036], score=None, time=1610366100, title=None, item_type='comment', url=None, parent=25727462, text='To clarify the sibling, a signature of `Int -&gt; Int -&gt; Bool` can&#x27;t do any IO (so no connecting to databases, reading&#x2F;writing files, network requests), so it does tell you a lot about a function.<p>It <i>can</i> manipulate strings, decode JSON, but both of these are either (immutable) values from enclosing scope, or created within the function. But since they can&#x27;t be output anywhere (because no IO) then they don&#x27;t matter.<p>EDIT:<p>I&#x27;ll just add a few more counterpoints.<p>Agreed that DSLs are difficult, and often not worth the trouble. But if you do want to create a DSL, then haskell is a good fit because of monads and monad transformer stacks - i.e you can make the statement mean whatever you want it to mean, and keep the effects in check with types.<p>The synergy between higher order functions with typed IO is great, better than in other languages.<p>Agreed that IDE refactoring is convenient, and also refactoring in other languages with static type checking the process is similar to what they describe in the article, so no immediate &quot;pro&quot; there.')