Item(by='sixdimensional', descendants=None, kids=None, score=None, time=1609378642, title=None, item_type='comment', url=None, parent=25586063, text='XLL lets you also write .NET code, basically anything that can compile to a DLL, to make custom functions you can expose in Excel - and it is a pretty old supported integration method by Microsoft with Excel.   COM enabled DLLs were another way to do this, but they ran slower.<p>Not that I have any issue with getting Python in my Excel, but people seem to forget that .NET is also an option.<p>Getting these capabilities enabled in a locked down corporate IT environment traditionally was difficult but I suspect that is changing.<p>I have also lived the whole, turning a model in Excel into an app exercise.  At the time, we rewrote a fairly complex demand planning app from Excel&#x2F;VBA to C# since the other dev team members were C# devs and could support the app.<p>However, during the project, I did a demo of how one could build a Winforms app in VB.NET also, to the developer who was the Excel&#x2F;VBA guru.  He&#x27;d had no idea that coding in VB.NET and Winforms was close enough that he nearly could have been doing that instead.<p>The compiled C# version of the model we built, went from running a single instance of the model in 1 hour, to under 1 minute.  We could re-run their model for tens of thousands of instances daily, without breaking a sweat.<p>Ironically, the rewritten version in C# never saw the light of day as the project was canceled (corporate politics and wisdom).  However, the simple optimizations we identified in the rewrite were given to the Excel guru who actually made improvements to his tool that let it run in more like 10 minutes.. and it was even object oriented and modular!  He learned he could do a lot more in Excel&#x2F;VBA that he didn&#x27;t even know about.<p>Coding is coding.. just some tools make the jobs easier or harder.')