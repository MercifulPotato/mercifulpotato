Item(by='isochronous', descendants=None, kids=None, score=None, time=1607382527, title=None, item_type='comment', url=None, parent=25333373, text='See, and this is where I (and I&#x27;m guessing you) might beg to differ.  I&#x27;m a web developer, so the vast majority of my time is spent working in JavaScript.  Our team has been working in ES6 for the past ~2 years. Our lead developer just LOVES him some ES6 - destructuring, aliasing, lambdas, you name it, and he&#x27;s all-in.<p>Me, though?  Well, let&#x27;s just put it like this: when we find some framework-level bug that&#x27;s written in &quot;clever&quot; ES6 syntax, our first step in debugging is almost ALWAYS to rewrite the given function traditionally, without any of the ES6 shorthand. And the reason we do that is because reading and debugging a whole stack of anonymous lambda calls is a PAIN IN THE ASS. Or figuring out where a certain variable is coming from when someone uses overly-complex destructuring syntax to magically pull a value from deep within a nested object.<p>I mean, don&#x27;t get me wrong, I do like and use almost all of the modern ES6 niceties, but I also feel like it&#x27;s much more difficult to parse and understand code compared to what we were all writing a few years back.  People will, I&#x27;m sure, be arguing about what constitutes &quot;good code&quot; for decades to come, but to me, when working in an evolving codebase, especially with other people, plain ol&#x27; human readability is paramount.  If people can&#x27;t figure out what your code is doing without throwing in a breakpoint and stepping through line-by-line, you&#x27;ve failed at writing good code.  And this will be my opinion right up until the day humans stop writing code by hand.')