Item(by='rleigh', descendants=None, kids=None, score=None, time=1610281310, title=None, item_type='comment', url=None, parent=25703437, text='&gt; Any portable build system, that already requires EVERY user to have that build system installed, is DoA for being a viable portable build system.<p>I don&#x27;t understand the argument, it seems very circular.<p>Most software packages have a number of build dependencies as prerequisites for building, including a compiler, build tool like make&#x2F;ninja, libraries and headers, other processors and tools like doxygen, sphinx, static analysis etc.<p>What makes the &quot;build system generator&quot; so unique in its requirements that this one tool must be embedded in the source package?<p>Nothing.<p>It&#x27;s a convention adopted by the GNU Autotools initially for pragmatic reasons--the requirement that the end user install m4, perl, and a few other tools, and that in the early days the breakage between autoconf and automake minor versions was routine and really annoying.  Today you can just run &quot;autoreconf -fvi&quot; for the same effect, and many packages have stopped distributing the generated scripts.  Many distributions regenerate them as a matter of course, making the distributed copies redundant.  Today, when we have fully-described and automatic installation of build-dependencies on most platforms, the need for embedding no longer exists.<p>I&#x27;m afraid that I don&#x27;t buy your argument.  Don&#x27;t mistake historical conventions established for a single tool with a hard requirement.  The requirement doesn&#x27;t actually exist.')