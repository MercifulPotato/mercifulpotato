Item(by='tenebrisalietum', descendants=None, kids=None, score=None, time=1605287671, title=None, item_type='comment', url=None, parent=25084085, text='Mostly the instruction set architecture.  In the early 80&#x27;s when Acorn Risc Machines developed ARM, it was part of a then-newer &quot;Reduced Instruction Set Architecture&quot; school of thought that had the following goals:<p>- make instructions and CPUs simpler for the CPU and not human beings, since most assembly is created by compilers and not humans.\n - use a &quot;load-store&quot; paradigm that preferred registers over slower RAM for intermediate uses,\n - use the chip space saved by simpler CPU instructions for more registers to support #2 above.<p>x86 traces its lineage to the early 8080 CPU developed in the 70&#x27;s.  This is when RAM was as fast or slower than the CPU, when 4k of RAM was $2000, and hand-assembly was more common.  So it made sense to optimize for the most action out of each instruction and rely on memory for intermediate uses.<p>The RISC&#x2F;CISC &quot;war&quot; was before the early-to-mid 90&#x27;s brought multi-core CPUs, large CPU caches, SIMD instructions, and numerous things CPUs do to the instruction stream like branch prediction, register renaming, out-of-order execution and etc. that are common now.  So it doesn&#x27;t matter so much anymore.<p>SIMD in particular is something like the RISC paradigm on steroids - load large, wide register files with values and do operations on them all with a few instructions.<p>ARM&#x27;s simplicity, along with the fact ARM licensed its designs out to other silicon designers&#x2F;integrators, now translates into lower power usage&#x2F;heat output and ease of integration into system-on-a-chip designs.  Hence why it&#x27;s super common in phones.')