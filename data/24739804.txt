Item(by='steveklabnik', descendants=None, kids=[24740060], score=None, time=1602345625, title=None, item_type='comment', url=None, parent=24738933, text='Three IRs can actually help; it&#x27;s not that simple. For example, <a href="https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;inside-rust&#x2F;2019&#x2F;12&#x2F;02&#x2F;const-prop-on-by-default.html" rel="nofollow">https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;inside-rust&#x2F;2019&#x2F;12&#x2F;02&#x2F;const-prop...</a> is an example of performing an optimization on an earlier IR, which gives you a 2%-10% speed boost.<p>&gt; Even though LLVM has its own constant propagation pass, we see improvements because our pass operates on MIR while it is still generic. The more concrete instances of a generic function that are instantiated, the larger the payoff from this optimization.<p>It can be counter-intuitive, but it just really depends on the details. Of course, a single pass compiler will be faster to compile than a more complicated one, but it&#x27;s not as straightforward as &quot;more IRs == slower.&quot;')