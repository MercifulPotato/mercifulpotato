Item(by='coliveira', descendants=None, kids=[25126341, 25126543, 25126272, 25127352, 25126034, 25127911], score=None, time=1605631651, title=None, item_type='comment', url=None, parent=25124012, text='I have been programming in C for the last 25 years, and every year or so someone comes with a new shinny thing that will &quot;replace&quot; C. First it was C++ (we know how well it did...), then Objective-C, then Java, then C#, then Go, and now rust.<p>Everyone of these language brought new ideas, but they don&#x27;t stand a chance because their designers don&#x27;t understand the point of C. The C language didn&#x27;t win because it was the &quot;best&quot; language or had the best set of features. Far from it. Even in the mid 70s it was a backward language compared to other cool languages of the day like Algol and Lisp.<p>C won the competition because it just gives programmers the bare minimum functionality to put an operating system and a compiler in place! It is flexible, you can provide your own library if you want, and therefore gives your easy portability. OS writers will chose C any hour of the day or night because it makes their job easier.<p>By comparison, other languages will require a huge library to be available, and sometimes a complex runtime system, just for you to write a simple &quot;hello world&quot;! Imagine if you need to write a new OS, a compiler, a linker, or a shell interpreter... you get the idea.<p>My conclusion is that language designers still didn&#x27;t get what made C so successful and therefore keep coming up with shiny complex things that don&#x27;t stand a chance to become the next C.')