Item(by='andrekandre', descendants=None, kids=None, score=None, time=1610472461, title=None, item_type='comment', url=None, parent=25748299, text='good question, i guess it depends on the language... multiple inheritance without namespacing would either result in either method getting chosen randomly, or a build error...<p>for example, in swift you cant even inherit from two protocols that have default implementations... and i think in c++ you also cant call the method without specifying namespace...<p>so, i suppose, if you wanted to go all the way, you could even do namespace inference<p><pre><code>  def sepulka(zagizuga)\n    zagizuga::Something.doSomething()\n    zagisuga.doSomethingElse()\n</code></pre>\nso zagizuga is infered to be some type that inherits from `Something` namespace and expects that namespace to defined `doSomething()` function, in addition to providing `doSomethingElse()`<p>though that seems getting a bit fragile irl maybe...')