Item(by='mehrdadn', descendants=None, kids=[25429630], score=None, time=1608032923, title=None, item_type='comment', url=None, parent=25427529, text='Interesting. So I went back to look at the standard. Like you said, for the relational operators &lt;, &lt;=, &gt;=, and &gt;, they <i>do</i> explicitly say comparing unrelated objects <i>is</i> undefined behavior. But as you suggest, for == and != equality operators, they don&#x27;t say anything about undefined behavior for comparing pointers to unrelated objects; in fact they do say that unrelated pointers can point to adjacent memory locations if the implementation &quot;chooses&quot; to place unrelated objects in that manner.<p>However, they also throw in this wrinkle: <i>&quot;The == and != operators are analogous to the relational operators except for their lower precedence.&quot;</i><p>Does the analogy extend to the UB-ness for different objects? (If not, wouldn&#x27;t that seem to contradict this sentence?)<p>On the one hand, it would seem not, since they do say &quot;if and only if&quot; in that clause (which lacks any mention of UB).<p>On the other hand, I&#x27;m not sure how else to interpret that sentence... that sentence would seem superfluous if I just ignored it, since everything else seems to be spelled out already.<p>So I&#x27;m kind of at a loss now. Maybe you&#x27;re right then, I don&#x27;t know... at least you seem to be right about the fact that it <i>is</i> confusing. Possibly later standards clarify this? I haven&#x27;t checked.<p><a href="http:&#x2F;&#x2F;www.open-std.org&#x2F;jtc1&#x2F;sc22&#x2F;wg14&#x2F;www&#x2F;docs&#x2F;n1124.pdf#page=98" rel="nofollow">http:&#x2F;&#x2F;www.open-std.org&#x2F;jtc1&#x2F;sc22&#x2F;wg14&#x2F;www&#x2F;docs&#x2F;n1124.pdf#pa...</a>')