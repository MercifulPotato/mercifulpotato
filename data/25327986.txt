Item(by='codeulike', descendants=None, kids=None, score=None, time=1607300257, title=None, item_type='comment', url=None, parent=25327533, text='I think part of the problem is that the &#x27;simple plan&#x27; at the foundation of the attempt was this:<p><i>1. Have a background server process generate 8-second three-part-tune clips<p>2. Use some basic heuristics to guess at the key signature (“C# major”) of the clips, evaluate their intensity (lots of drum hits? loads of notes?) and save them in a huge clip database.<p>3. Create a search interface for the clip database.<p>4. Have the client request clips from the server in a specific key and intensity.<p>5. Weave two or three clips together, repeating them a couple of times, to make a full “song”.</i><p>I think thats just a bad plan, and if you start from that, any embellishments or improvements you try to make later just wont get anywhere.<p>Why is it a bad plan?<p>Working out what key signature a short phrase of music is in is not that simple.<p>e.g. you can look at the notes and say &#x27;well that fits C major&#x27; but actually C major and A minor contain the same notes, and the difference between them is subtle, its to do with how often the root note is used, or even more abstract stuff like how often the root note is implied. There is kindof a probability distribution of notes for each key signature, and that distribution is how we recognise them. Sometimes there&#x27;s ambiguity, and thats part of the art.<p>If the generated clip only uses (say) 6 semitones, there might be a multitude of differnt key signatures or scales that it could _potentially_ fit into to (Pentatonic, phrygian, Major, Minor etc etc with various different root notes), but the most accurate one musically would be very hard to determine out of context, because in reality the context around the clip (say the 20 bars before and after) play a big part in how a &#x27;clip&#x27; would be experienced.<p>And if you&#x27;re going to generate random clips to begin with (step 1), I&#x27;m hoping those werent random clips where any of the 8 tones or 12 semitones in play have an equal probability of being used, because thats just going to sound muddy.<p>I guess he was going for a system that had very few rules and then tried to get the system to learn from there, but I think thats just too muddy a starting point to ever get anywhere.<p>And obv purely generative music is hard, but what I&#x27;m talking about here I think explains why the stuff he generated was classified by him as &#x27;awful&#x27; rather than just &#x27;weak&#x27; or a bit boring.<p>TLDR: I think a misunderstanding of what a key-signature really is might be to blame. Its not just &#x27;which notes&#x27;, its a whole probability curve and its very contextual.')