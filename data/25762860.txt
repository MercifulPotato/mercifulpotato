Item(by='LargoLasskhyfv', descendants=None, kids=[25767380], score=None, time=1610550544, title=None, item_type='comment', url=None, parent=25760941, text='There was. But for Mips. By Microsoft which used NetBSD.<p><a href="https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;project&#x2F;emips&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;project&#x2F;emips&#x2F;</a><p><a href="https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;publication&#x2F;multicore-emips&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;publication&#x2F;multico...</a><p><a href="http:&#x2F;&#x2F;blog.netbsd.org&#x2F;tnf&#x2F;entry&#x2F;support_for_microsoft_emips_extensible" rel="nofollow">http:&#x2F;&#x2F;blog.netbsd.org&#x2F;tnf&#x2F;entry&#x2F;support_for_microsoft_emips...</a><p>The thing is, this is not just another step up in complexity as another poster wrote here, but several.<p>Because it requires <i>partial dynamic reconfiguration</i>, which   works with ram based FPGAs only (the ones which load their bitstream(containing their initial configuration) on startup from somewhere), not flash based ones which are &quot;instant on&quot; in their fixed configuration.<p>Regardless of that, partial dynamic reconfiguration takes time. The larger the reconfigured parts, the more time.<p>This is all very annoying because of vendor lock in because of proprietary tools, IP-protection, and so much more.<p>The few fpgas which have open source tool chains are unsuitable because they are all flash based AFAIK, and it doesn&#x27;t seem to be on the radar of the people involved in developing these, because why, if flash anyways?')