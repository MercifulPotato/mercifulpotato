Item(by='deathanatos', descendants=None, kids=None, score=None, time=1612236629, title=None, item_type='comment', url=None, parent=25988871, text='&gt; <i>Coming from Oracle, I was always taught that NULLs are not indexed</i><p>That left me wondering how, if all indexes are by default partial in Oracle… how does one make an unpartial? nonpartial? index.<p><a href="https:&#x2F;&#x2F;use-the-index-luke.com&#x2F;sql&#x2F;where-clause&#x2F;null&#x2F;index" rel="nofollow">https:&#x2F;&#x2F;use-the-index-luke.com&#x2F;sql&#x2F;where-clause&#x2F;null&#x2F;index</a><p>Apparently, you add a computed column to the index that just computes a constant value. And single non-null column then causes the nulls in other columns to get indexed, it&#x27;s only if the whole tuple is composed of nulls that it gets left out.<p>That also seems like a bug waiting to happen; someone inverts a query to find unset (NULL) entries, and now you&#x27;re doing a table scan.<p>…but it seems also like a form of brain rot, induced by a particular implementation, e.g., similar to how I&#x27;ve had MySQL users ask how to make a key on a table. Where a &quot;key&quot; is an index, it&#x27;s just that MySQL by default uses the word &quot;key&quot; to mean index, instead of … key¹. (The query language even <i>supports</i> &quot;INDEX&quot; in place of &quot;KEY&quot;, but things like &quot;SHOW TABLE&quot; default to the &quot;wrong&quot; (linguistically, not programmatically) word.) And then you might have to de-tangle why these two are different concepts, how they&#x27;re different. It&#x27;s very <i>Arrival</i>, in the sense of language (mis-)shaping perception.<p>¹a key is a set of columns that are sufficient to identify a row. The primary such set of columns is … the <i>primary</i> key. An index can index a key (if more than one exists within a table), but it doesn&#x27;t have to.')