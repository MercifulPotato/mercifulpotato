Item(by='michaelt', descendants=None, kids=[24763887, 24765108, 24768216, 24766470, 24765691], score=None, time=1602575716, title=None, item_type='comment', url=None, parent=24763182, text='In my experience, having started and abandoned side projects in both aws lambda and google app engine, half your project becomes:<p>* Well, obviously we use a hosted database<p>* And obviously, AWS provides our logging and all our analytics.<p>* Obviously when people call our lambda functions, they do so either through an AWS-specific API, or one constrained to a very limited set of forms.<p>* Of course, we can&#x27;t blindly let everything access everything, so naturally we have IAM roles and permissions for every lambda function.<p>* Well, the cloud provider will look after secrets and things like that for us, no need for us to worry about database passwords.<p>* Naturally, with all these functions and IAM roles to look after, and we need tagging for billing. We should define it all with CloudFormation scripting.<p>* Well, the nosql database the they provide comes with their specific library. And as it shards things like this, and doesn&#x27;t let you index things like that, you&#x27;ve got to structure your data this specific way if you want to avoid performance problems.<p>* You don&#x27;t want your function to take 200ms+ to respond, your users will notice how slow it is. So no installing things with apt-get or pip for you, let me get you a guide on how to repackage those into the vendor-specific bundle format.<p>* You want to test your functions locally, with access to an interactive debugger? You&#x27;re living in the past, modern developers deploy to a beta environment and debug exclusively with print statements.<p>* And so on.<p>In this case, a lot of the &#x27;complexity&#x27; one hoped to eliminate has just been moved into XML files and weird console GUIs.')