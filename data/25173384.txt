Item(by='qes', descendants=None, kids=None, score=None, time=1605999482, title=None, item_type='comment', url=None, parent=25166623, text='&gt; More like 3% here, 5% there and so on.<p>Ten years working on a code base that serves near-StackOverflow levels of traffic and 5% would be a _huge_ win. I don&#x27;t come across those, or even 3%, very often.<p>Our app has dozens of routes all seeing hundreds to thousands of requests a minute. To get a performance boost that big it has to be in some foundational code that&#x27;s used nearly everywhere, and that code&#x27;s already been poured over every way from Sunday.<p>Occasionally we&#x27;ll run into a bit of code that sneakily becomes a significant drag on the system as traffic through that code grows slowly over time. A fix might result in a large % load drop, but only because there&#x27;s some pathological problem, which I hesitate to call an &quot;optimization&quot; rather than a &quot;bug fix&quot;.<p>We did also uncover many significant optimizations after migrating from dedicated hosted bare metal boxes to the cloud, when our network latency assumptions got thrown out the window - but the bulk of those optimizations were simply &quot;cache it&quot;.')