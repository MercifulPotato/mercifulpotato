Item(by='tacitusarc', descendants=None, kids=[24979703, 24977869, 24977154, 24979801], score=None, time=1604378323, title=None, item_type='comment', url=None, parent=24963742, text='This is a debate I will never understand.<p>The position of the monolithics is &quot;you should have one thing&quot;. Well, that&#x27;s obviously wrong, if you&#x27;re doing anything even slightly complex.<p>The position of the microservice people is &quot;you should have more than one thing&quot;, but it gets pretty fuzzy after that. It&#x27;s so poorly defined it&#x27;s not useful.<p>How about have enough things such that all your codebases remain at a size where you don&#x27;t dread digging into even the one that you&#x27;re most prolifically incompetent coworker has gone to town on? Enough things that when not very critical things fail, it doesn&#x27;t matter very much.<p>But only that many things. If you need to update more than one thing when you want to add a simple feature, if small (to medium) changes propagate across multiple codebases, well, ya done messed up.<p>If you&#x27;re one of the people believing monoliths are The Way, you&#x27;re making a bizarre bet, because there&#x27;s N potential pieces you can have to create a complex system, and you&#x27;re saying the most optimal is N == 1. What are the odds of that? Sometimes, maybe. But mostly N will be like 7 or something. Occasionally 1000. Occasionally 2. But usually 7. Or something.<p>This seems really obvious to me.')