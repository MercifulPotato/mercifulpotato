Item(by='mehrdadn', descendants=None, kids=None, score=None, time=1603917822, title=None, item_type='comment', url=None, parent=24919671, text='Lots of reasons. It&#x27;s just something I&#x27;ve learned based on experience. They&#x27;re essentially free abstractions that confine a source of truth (the type of a variable) to a single location. They <i>codify</i> the abstractions as well. They make it easier to understand the semantic purpose of each type and can make meaningful distinctions when concrete types are the same (e.g. std::vector&lt;size_t&gt; is quite unilluminating compared to, say, &#x27;NameIndices&#x27; and &#x27;ValueIndices&#x27;). They make it very easy to change types down the road (as the concrete type is now declared in a single location). They give you control over the type inference procedure. And they give you the majority of the benefits of &#x27;auto&#x27; without the same pitfalls.<p>That said, I&#x27;m not suggesting you use them indiscriminately. &#x27;this_type&#x27; and &#x27;value_type&#x27; are often useful; &#x27;difference_type&#x27; and &#x27;size_type&#x27; generally won&#x27;t gain you anything...')