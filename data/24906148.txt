Item(by='chridou', descendants=None, kids=[24910677], score=None, time=1603795926, title=None, item_type='comment', url=None, parent=24902508, text='&gt; In order to have a meaningful discussion, let me expand on what I mean by &quot;boring&quot;.<p>This is the problem with how boring is used. According to Wiktionary it just means &quot;unable to engage or hold the interest&quot;. So how can this be a criteria for using a technology? Why do you redefine the word and deviate from the common meaning? What is the reason behind this? Why is it necessary that your understanding of &quot;boring&quot; has to be explained? It is a simple word which had a defined meaning for hundreds of years probably.<p>But here is my take on it: This was simply an attempt made by clever people within the industry to redefine the word so that they do not have to explicitly say what they really mean. Just call things  without having a proper definition &quot;boring&quot;. What is not boring must then be exciting. If we define boring to be good (which is actually crazy since the word itself has a negative connotation) everything exciting must be bad. Simple black&#x2F;white thinking. And now we can simply call things &quot;boring&quot; as we like and indirectly call everything else bad.<p>Also it totally makes no sense to call technologies &quot;boring&quot; or &quot;exciting&quot; and thereby categorizing them for suitability. &quot;Boring&quot; is highly subjective. Some find Go boring, other find it to be exciting. Some find VBA boring, others experience it to be exciting. This has nothing to do with how complex, simple, fancy, hyped or old a technology is.<p>&gt; To me, a boring language is one that is easy to learn, easy to read and which encourages somewhat homogenous code - through coding style and common idioms. It has few surprises and few dark corners.<p>Why is that boring to you? To me a language where I could easily reach a common ground with my colleagues so that we can together focus on business problems would be a very exciting language.<p>&gt; Now I can understand that some people like the excitement of exploring new languages. \nExcitement of exploring new languages does not mean that the explored language is exciting&#x2F;boring (whatever that means)<p>&gt;However, asking your employer to let you use some language on a project because you find it &quot;exciting&quot; is a big ask.<p>One should only ask the employer to be allowed to use a new language if there is some benefit or if it is an experiment which will clarify whether it will be beneficial. This has nothing to do with boring&#x2F;exciting.<p>&gt; They may, however, be somewhat scared of &quot;specialists&quot; (in the sense of programmers who will insist on niche languages or niche technologies) because if you pay someone to write code, you don&#x27;t want to have to search for &quot;specialists&quot; to maintain it or limit the size of your recruiting pool. You have an investment to manage.<p>True. This is where the risk parts enters the stage. It is always like this. The specialist might put you ahead of your competitors at a high risk while the generalist will keep you with the average at a low risk.<p>&gt; Do you really think the choice of language is what makes a programmer brilliant or mediocre? \nWhere did I even say this? What does talent have to do with the programming language being used?<p>&gt; Then why doesn&#x27;t reality agree with that view? If that were true then for every Donald Knuth, Fabrice Bellard, Jeff Dean and John Carmack there should be lots of even better programmers that do all their work in &quot;exciting&quot; languages. Where are they? They should be far easier to enumerate than the people who use &quot;boring&quot; languages?<p>Uh, with what view? Definitely not mine. Who says that the programming languages those people use are boring? I think you can simply choose any language and you are likely able to find 4 people who are potentially better programmers than the four mentioned. Not because they are bad or mediocre but because of the sheer amount of programmers in the world. Those four are simply famous but we have no proof&#x2F;numbers on how &quot;good&quot; they are compared to the rest of the world.<p>&gt; If you think caring about the long term value of code is &quot;boring&quot;: try to start your own company and bet your own money.<p>And again. I never said this. Which definition of &quot;boring&quot; are you using here?<p>Also that sentence is dangerous. Even if caring for long term value would be boring (for some it might be exciting!) the real motivation for this is to secure previous investments which is a perfectly valid reason. Whether the way of achieving is is boring or not is completely irrelevant. And even further: If I would find an exciting(for me, since excitement is subjective) way to secure or even grow my investments I should not do it because it has to be boring? Securing investments or caring for long term value has nothing to do with whether something is boring or not.<p>&gt; If you are that convinced of how &quot;exciting&quot; languages lead to brilliance it shouldn&#x27;t be a tough choice to make<p>And once again. I never said this. I just said &quot;Also we are scared of specialists and talent and want to stay mediocre&quot; which not even mentions programming languages&#x2F;technologies. I was just referring to how the word &quot;boring&quot; is misused and what might be the true intention behind the usage.<p>So in a summary: Good or bad decisions in business have nothing to do whether something is boring or not. This should never drive business decisions. But it seems like the word &quot;boring&quot; does.')