Item(by='santiagobasulto', descendants=None, kids=[25064740, 25064610], score=None, time=1605139592, title=None, item_type='comment', url=None, parent=25059296, text='I love this idea. I will express the ups and downs of it, and see if I&#x27;m missing something.<p>First, some background: I&#x27;m a heavy Django user. Django has settings that are loaded once at runtime and usually they&#x27;re in version control (they&#x27;re committed to the repo). That means that, if you want to change a value to a setting, you must commit to the repo and re-deploy. If you&#x27;re using Kubernetes, this might take several minutes (re build the images, upload to the registry, replicate on all the pods, etc).<p>That&#x27;d be the advantage of this solution. Imagine you have to change a setting IMMEDIATELY (something bad happen). You must:\n* commit to the repo and push\n* wait for CI (tests, formatting, protocols of PR approvals in a team, etc)\n* wait for CD (build image, push to registry, replicate, etc)\nIt can potentially take several minutes.<p>Now, the major drawbacks I see with this service are:\n* Security: do you guys feel confident&#x2F;strong enough to store important data of the app? Go so far as hosting secrets for example? (We use the Secret Manager in AWS).\n* Latency: in our case we read confs only once when the WSGI server starts. Can you be fast enough?\n* Availability: if your site goes down, my app goes down. Can you ensure 99.9999 availability?<p>Anyways, this is definitively a needed service. It does have its challenges, but you guys are onto something for sure. Congrats!')