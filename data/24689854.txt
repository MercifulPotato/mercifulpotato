Item(by='fishywang', descendants=None, kids=[24690716], score=None, time=1601918852, title=None, item_type='comment', url=None, parent=24689558, text='The problem is not on squash. The problem is on &quot;PR&quot; itself.<p>The pull request workflow popularized by Github and adopted by others (like Gitlab) is just bad for code reviews. They force you to choose between squash and history. Making several, smaller PRs are not the universal solution either. In a lot of cases those PRs have a dependency over each other and dependent PRs is also a pain in the ass in Github&#x27;s PR workflow.<p>In a better code review system you don&#x27;t have to make that choice. For example, in Gerrit (I _think_ this is also similar in phabricator, but I&#x27;m less familiar with that), every code review will end up a single commit when it&#x27;s merged (if you configured it so, and that&#x27;s the default configuration), and you don&#x27;t lose the history during the workflow, all the intermediate states are stored as git refs on the server (you can&#x27;t use bisect on them though, but they are there and you could write your own custom script similar to bisect to loop through them). Code reviews with dependencies are also handled naturally.')