Item(by='ChrisLomont', descendants=None, kids=[25533943], score=None, time=1608858121, title=None, item_type='comment', url=None, parent=25530805, text='&gt;assuming you have a perfect cryptographic hash function<p>Except there is no such thing (not in the sense you need it) - it too would be a perfect source of randomness, and you&#x27;re just pushing the problem down the road.<p>As an example, NIST publication 800-90B recommends multiple randomness extractors, one of which is SHA. They recommend using twice the amount of entropy in as the entropy out to get random &quot;enough&quot; bits. Thus even SHA is not going to mix bits well enough as you want.<p>(The things called perfect hash functions in the literature map N items into N slots with no collisions, which is not what is needed here).<p>As a perhaps surprising counterexample to any simple solution, here [1] is a math paper with a proof that there can be no optimal algorithm that is best for all values of coin bias.<p>Here&#x27;s [2] a cool walkthough on some of the ideas in theory that have been investigated.<p>[1] <a href="https:&#x2F;&#x2F;web.eecs.umich.edu&#x2F;~qstout&#x2F;abs&#x2F;AnnProb84.html" rel="nofollow">https:&#x2F;&#x2F;web.eecs.umich.edu&#x2F;~qstout&#x2F;abs&#x2F;AnnProb84.html</a>\n[2] <a href="http:&#x2F;&#x2F;www.eecs.harvard.edu&#x2F;~michaelm&#x2F;coinflipext.pdf" rel="nofollow">http:&#x2F;&#x2F;www.eecs.harvard.edu&#x2F;~michaelm&#x2F;coinflipext.pdf</a>')