Item(by='benjaminjosephw', descendants=None, kids=[25380432], score=None, time=1607639251, title=None, item_type='comment', url=None, parent=25379019, text='Here&#x27;s a cynical take: Very few people manage their own virtual machines anymore and cloud vendors have been happy to take over and package all kinds of hosting options as services. If you&#x27;re building something quickly, this is a massive boon since you can assemble a pretty complex application using a number of off-the-shelf cloud services. The downside is that vendor lock-in is 10x as strong as it was a decade ago and it&#x27;s very easy to become dependent on a particular provider&#x27;s set of services or to have your configuration rules tied in to their particular Identity and Access Management model.<p>You&#x27;re probably going to want to learn about containerization and Docker unless you want to go higher-level with services like Vercel or Netlify (both in the same kind of space as Heroku). The service offerings on AWS, GCP and Azure are worth taking a look at too to get a grounding for what&#x27;s out there.<p>Most cloud providers have a fair amount of overlap in what they offer but they&#x27;ve each got their own versions of services with their own quirks. Whatever you choose to dig into, you&#x27;re best off picking one provider&#x27;s platform to learn and understand in more detail before seeing how those concepts translate to other providers - otherwise there&#x27;s just too much ground to cover.<p>Although most new services and tools are vendor specific, the fundamental ideas have largely converged so don&#x27;t feel too overwhelmed. At the end of the day, it all still just boils down to VMs managed by someone else.')