Item(by='moron4hire', descendants=None, kids=None, score=None, time=1605197266, title=None, item_type='comment', url=None, parent=25070822, text='This isn&#x27;t even about C# at all, actually. This is about the web application framework ASP.NET Core.<p>And they don&#x27;t even have a point in this regard, because nothing is forcing you to use the DI. You wanna make a database connection with ADO.NET and a static connection string in your Controller? Go ahead. You can do that. It&#x27;s no more effort than it ever was.<p>You want to grow your app to run it in multiple environments and be confident you don&#x27;t clobber your configuration during migrations? Use ASP.NET Core&#x27;s DI.<p>Every app framework has some &quot;magic convention over configuration&quot;. I personally think ASP.NET Core&#x27;s &quot;magic&quot; is a lot less pervasive than in, say Django, or RoR. When I was first learning ASP.NET Core--coming from WebForms--there was a learning curve. You don&#x27;t just throw everything into a Web.config XML bag of doom anymore, with a single, static configuration reading tool that reads just that one file. That particular magic has changed. I mean, if you want to do that, you can, just read the file yourself. But it&#x27;s not wired up by default anymore. And the new way of doing things was easily learned with a couple of afternoons of reading the documentation.<p>Which you can do, because there is actually documentation, and a lot of it. I think part of the problem might be that people are used to other web app frameworks where the documentation is pretty lacking, so they don&#x27;t even think to go looking for documentation on ASP.NET Core and think they can just jump in and figure it out. I don&#x27;t think you could do that going from Django to RoR or vice versa, but people complain when they can&#x27;t go from ASP.NET WebForms to ASP.NET Core without learning new ways of doing things.<p>Don&#x27;t like ASP.NET Core? You don&#x27;t even have to use it. You can (rather easily) write your own web app framework. I&#x27;ve done it in the past, and there are FOSS projects for doing it (<a href="https:&#x2F;&#x2F;suave.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;suave.io&#x2F;</a>, <a href="https:&#x2F;&#x2F;www.abp.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.abp.io&#x2F;</a>, <a href="https:&#x2F;&#x2F;giraffe.wiki&#x2F;" rel="nofollow">https:&#x2F;&#x2F;giraffe.wiki&#x2F;</a>, <a href="https:&#x2F;&#x2F;dotnetify.net&#x2F;" rel="nofollow">https:&#x2F;&#x2F;dotnetify.net&#x2F;</a>, <a href="https:&#x2F;&#x2F;www.dotvvm.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.dotvvm.com&#x2F;</a>, <a href="https:&#x2F;&#x2F;coalesce.intellitect.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;coalesce.intellitect.com&#x2F;</a>).')