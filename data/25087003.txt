Item(by='masklinn', descendants=None, kids=[25087080], score=None, time=1605298953, title=None, item_type='comment', url=None, parent=25086837, text='Out parameter would generally be possibly uninitialised memory in which the function will put the output data, rather than allocated memory which the function will fill.<p>Out parameter is literally just a workaround for the lack of MRV, the callee still controls the allocation.<p>For instance `pthread_create` uses an out parameter:<p><pre><code>    pthread_t threadId;\n    int err = pthread_create(&amp;threadId, NULL, &amp;threadFunc, NULL);\n</code></pre>\nthe first parameter is uninitialised memory, it&#x27;s only <i>written to</i> by the function. If C had tuples &#x2F; MRV you&#x27;d say<p><pre><code>    (int err, pthread_t threadId) = pthread_create(NULL, &amp;threadFunc, NULL);\n</code></pre>\ninstead.<p>But might still use a &quot;destination passing&quot; function, because the point of destination-passing is to make the caller control the allocation, and allow amortisation. &quot;Destination passing&quot; is pretty common in low-ish level Rust APIs for instance, while &quot;out&quot; parameters is largely forbidden (you&#x27;d need a function taking a reference to a MaybeUninit or such nonsense).')