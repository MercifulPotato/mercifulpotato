Item(by='j45', descendants=None, kids=None, score=None, time=1611752801, title=None, item_type='comment', url=None, parent=25927184, text='Just did a deep dive with a group of devs with vue native, nativescript, ionic and more for building a mobile app in vue.<p>We all enjoy building in vue and we&#x27;re looking to extend that to mobile.  However in almost all cases, there were shortcomings and a lack of maturity in support compared to react or angular. A lot of time wasted.<p>Generally, Vue is not a first class citizen in these environments. Yet.<p>Vue Native began with a lot of promise and excitement. Documentation is ultimately sparse and examples either don&#x27;t exist or are out of date. Compiling the same code on Mac or windows yielded inconsistent build results. Debugging doesn&#x27;t have much research that is possible. Sometimes you have to compile 4 or 5 times. Still seems early.. Or not developing as quickly as other options. Doesn&#x27;t seem updated often.<p>Nativescript was next, looked very inviting and welcoming, but trying to reproduce the same resulted in a fair number of issues. It seems nativescript has less of a history with vue than react. Noted the documentation is deeper for other frameworks. Seems to be evolving for vue. Pass for now and check again in 6 to 12 months for progress.<p>Last, but not least, ionic. Right off the bat likely the deepest documentation. It had 2 approaches.. Package a vue.js app for mobile, or use capacitor to try and build more of a native experience. Capacitor is relatively new for vue.js and still maturing. Ran into similar issues as the others. Didn&#x27;t seem ready for production than using angular or react with ionic or capacitor. Vue supports in ionic are thinner than angular for sure and seemingly react.<p>For now, it was possible to build a vue web app to do what&#x27;s needed and add ionic to simply package it. No capacitor.<p>It pains a little to say this, but if we were building a more complex app, the react native tooling is what we&#x27;d have to consider. It&#x27;s far more mature and nearly every problem we encountered had a result of how to resolve it in react native.')