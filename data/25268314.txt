Item(by='Zach_the_Lizard', descendants=None, kids=[25268581], score=None, time=1606848198, title=None, item_type='comment', url=None, parent=25267956, text='If you&#x27;re at the scale where a data center going down is a problem and thus you need to run in multiple coasts for disaster recovery, you&#x27;re going to have to be able to handle the kinds of distributed computing issues that&#x27;ll crop up in both cases.<p>The advantage of AWS is that in theory you can script your infrastructure. Deploy to multiple zones, add hosts, remove hosts, deploy artifact, etc. Makes all kinds of things very easy. Dedicated SQL &#x2F; Cassandra &#x2F; DynamoDB offerings make that a few clicks to get going.<p>This saves people costs, but just so happens to be more expensive in terms of hardware costs.<p>You can replicate all of this in your own DC or whatever. You do need to invest in tooling, hardware, etc. which is worth it at the highest scales. Or worth it if you don&#x27;t need everything and thus don&#x27;t need to pay for it.<p>Personally, I think many large organizations can optimize by running with a mix of on-prem and cloud services.<p>Demand may be elastic but not totally elastic, so your base load could be cheaper in house. Storage is cheaper on premise for huge datasets.<p>You can afford enough staff to rack servers, but you aren&#x27;t dominated by the lack of servers.<p>You buy more EC2 instances to scale your business, letting the product team deliver the product, and deploy on-prem to squeeze out more efficiency behind them. Yes, you probably don&#x27;t use the full offerings of a cloud provider, but that also means less lock in at a cost of a little lower convenience and more staff.')