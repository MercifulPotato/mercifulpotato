Item(by='lolinder', descendants=None, kids=[25249675], score=None, time=1606692079, title=None, item_type='comment', url=None, parent=25246581, text='If you&#x27;d like to be able to understand the inner workings of your app, that&#x27;s great, and there are a lot of good suggestions here for how to do that.<p>However, from your description it sounds like you&#x27;re struggling to communicate about <i></i>what<i></i> the programmers should be building, rather than <i></i>how<i></i> it&#x27;s being built. If that&#x27;s the case, learning to program will likely not fix your problem, and will instead waste time that you could have spent on higher-leverage activities. I&#x27;d recommend the following:<p>1) Focus on learning <i>only</i> those technical details that are relevant to your app. For Thea (from your profile), you would want to spend some time understanding encryption, multi-factor auth, the basics of cloud hosting and storage (their respective Wikipedia pages would be a good starting point). You don&#x27;t need to know enough to build it, but you should be able to talk intelligently about each of these aspects of the system.<p>2) Don&#x27;t expect to successfully convey your design requirements in a single conversation turn. It doesn&#x27;t matter how good of a communicator you are, if there isn&#x27;t back-and-forth between you and the developers, they did not understand it. If they&#x27;re not asking questions, have them diagram what they understood as they explain it back to you.<p>3) Stop your developers if they start using jargon and ask them to explain it. Just as you expect them to ask questions, they should expect you to ask questions. This way, you&#x27;ll learn only the jargon that is relevant to your business requirements, rather than spending time learning stuff that will never come up in the context of your app.')