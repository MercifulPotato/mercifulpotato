Item(by='bigiain', descendants=None, kids=[25723416, 25714850], score=None, time=1610255052, title=None, item_type='comment', url=None, parent=25709722, text='&gt; When I was 11 years old I learnt to program starting with text based games in Turbo C++ or something.<p>I suspect those of us who grew up during the era when the games you wanted to play as a kid were Colossal Cave, Pong, Zork, and Space Invaders - had it _so_ much easier than kds today. The path for an 11 year old to get from from telling the computer:<p>10 PRINT &quot;HELLO WORLD!&quot;<p>20 GOTO 10<p>to a playable&#x2F;fun game, for me, was not an inconceivable journey at the time.<p>These days, I wonder if expectations of Minecraft&#x2F;Roblox&#x2F;Fortnite&#x2F;CallOfDuty&#x2F;CyberPunk2077 (or whatever 11 year old kids are playing these days) have made the path from &quot;Hey, I can make this computer print out some text&quot; to &quot;I could make my own computer game&quot; much less straighforward or conceivable?<p>As a kid in the late 70s&#x2F;early 80s, I wrote text adventures (as a tangled pile of global variables, if statements, and gotos) in Basic on computers like TRS80s, BBC Micros, AppleIIs, and an OsbourneII (a CPM&#x2F;Z80 &quot;portable&quot;). I worked out that printing characters at the right place on screen fast enough could let me write &quot;text mode&quot; ascii-art versions of games like Pong, Lunar Lander, and Space Invaders. The performance of Basic led me to learn to write the inside event loop in assembler (On the AppleII you&#x27;d POKE all your event loop assembler into a block of memory, then CALL to it from Basic to run your game code instead of the Basic interpreter.) LoRes graphics, HiRes graphics, sprites and sprite collisions - stuff lie that was all an understandable and achievable learning path for a curious enough kid, where the &quot;triple a&quot; games of the time (Sabotage! Olympic Decathalon! Choplifter! LodeRunner!) were all things that an 11&#x2F;12 year old with sufficient hubris and way too much time on his hands could &quot;understand&quot; how they worked, and imagine making it myself.<p>If &quot;learning to program games&quot; means to an 11 year old in 2021 &quot;I want to write my own version of Cyberpunk 2077&quot;, I have absolutely no clue how Id even _start_ to help them along that path... What are the spepping stones between a hand-me-down laptop or phone, where a kid could start and imagine themselves ending up at something like the game they want to play???')