Item(by='brandmeyer', descendants=None, kids=[24918079], score=None, time=1603854408, title=None, item_type='comment', url=None, parent=24914084, text='I think it depends a great deal on what you&#x27;re doing.  A fully pipelined double-precision floating-point fused multiply-add in FPGA tech will reach well over 500 MHz on current parts, but takes almost 30 cycles of pipelined latency to deliver each result.  On the same process node, a well-optimized CPU will run at 6-8x the clock frequency and only require 4 cycles of latency to deliver each result.<p>Is this flow filled with divide-and-conquer algorithms with very low work per step?  Yes.  Is that particularly ill-suited to FPGA logic?  Yes.  Is it unfair to the FPGA?  Not in my opinion.<p>I stand by my claim: If you normalize a general circuit&#x27;s speed in units of time instead of cycles, then you&#x27;ll find that ASICs come out much much farther ahead.')