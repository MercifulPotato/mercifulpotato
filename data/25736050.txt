Item(by='disgruntledphd2', descendants=None, kids=[25736883], score=None, time=1610396661, title=None, item_type='comment', url=None, parent=25735301, text='&gt; Snowflake has support for custom Javascript UDFs and a lot of built in features (you can do absurd things with window functions). I also found it much faster than Spark.<p>UDF support isn&#x27;t really the same, to be honest. You&#x27;re still prisoner of the select from pattern. Don&#x27;t get me wrong, SQL is wonderful where it works, but it doesn&#x27;t work for everything that I need.<p>I completely agree that it&#x27;s faster than Spark, but it&#x27;s also super-expensive and more limited. I suspect it would probably be cheaper to run a managed Spark cluster vs Snowflake and just eat the performance hit by scaling up.<p>Tensorflow, PyTorch (not sure if Ray is needed) and Mxnet all support distributed training across CPUs&#x2F;GPUs in a single machine or multiple machines. So does XGBoost if you don&#x27;t want deep learning.<p>I forgot about Xgboost, but I&#x27;m a big fan of unsupervised methods (as input to supervised methods, mostly) and Spark has a bunch of these. I haven&#x27;t ever tried to do it, but based on my experience of running deep learning frameworks and distributed ML, I suspect the combination of both to be exponentially more annoying ;) (And i deal mostly with structured data, so it doesn&#x27;t buy me as much).<p>&gt; You can then run them with KubeFlow or on whatever platform your SaaS provider has (GCP AI Platform, AWS Sagemaker, etc.).<p>Do people really find these tools useful? Again, I&#x27;m not really sure what SageMaker (for example) buys me on AWS, and their pricing structure is so opaque that I&#x27;m hesitant to even invest time in it.')