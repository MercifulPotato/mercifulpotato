Item(by='sktrdie', descendants=None, kids=None, score=None, time=1601627200, title=None, item_type='comment', url=None, parent=24648363, text='To some people comparing mobx to react saying that &quot;i just ditched mobx because react does the same thing&quot; I don&#x27;t believe this is true. Apart from the seperation-of-concerns benefit mobx is different in the sense that it works with observables whereas react works with diffing tree branches.<p>In other words react needs to work with DOM diffing and virtual dom whereas mobx and observables are granular &amp; directly manipulate the values.<p>This gives mobx in my opinion lots of benefits that are not so apparent in react. Mainly the benefit of performance where a computed property only reruns if any of its dependencies change whereas react updates when any of its props change, even if the prop wasn&#x27;t used!<p>A simple example is imagine in react:<p>props =&gt; if (props.a) bar() else if (props.b) baz()<p>React doesn&#x27;t care about a nor b and reruns this code whenever props changes.<p>In mobx (and other observable based systems) if the above computed function runs with prop.a equal to true will make mobx know that &quot;a&quot; needs to be tracked and mobx doesn&#x27;t yet know about &quot;b&quot; (because that branch has never been evaluated) hence doesn&#x27;t rerun if b changes.<p>This kind of reactive granularity is what sets the two apart imho.<p>solidjs [1] is a framework that works like mobx but for components; hence seems to be the best combination of mobx + react using observables (without virtual dom diffing)<p>1. <a href="https:&#x2F;&#x2F;github.com&#x2F;ryansolid&#x2F;solid" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ryansolid&#x2F;solid</a>')