Item(by='fuzzfactor', descendants=None, kids=None, score=None, time=1609015057, title=None, item_type='comment', url=None, parent=25533318, text='Excellent, these are four good sectors in this floppy-sized IMG.<p>Copy verbatim bitwise to a floppy and it boots bare metal in 5 seconds to the animated graphic.<p>You only need the first four sectors; 0, 1, 2, &amp; 3, or about 2K.<p>Sector 0 is a working MBR&#x2F;bootsector which continues with sectors 1, 2, and finishes with 3.<p>On a USB flash drive most BIOS will want to treat it like a HDD rather than a large floppy so you will need to add a partition table on sector zero before it will boot from a HDD.<p>So write zeros to the USB drive[0] then eject, reboot and copy the first four sectors (or the whole 2880) from treeosFloppy.img to the blank USB drive[1].<p>[0] dd if=&#x2F;dev&#x2F;zero of=&#x2F;dev&#x2F;sdx<p>careful with dd at the Linux command line, make sure &#x2F;dev&#x2F;sdx is the exact USB drive you want to wipe<p>[1] dd if=&#x2F;mountedlocation&#x2F;treeosFloppy.img of=&#x2F;dev&#x2F;sdx bs=512 count=4<p>Then partition the USB drive using CFDISK at Linux command line, in MBR layout, marked bootable, as type 0c FAT32.<p>-this simply adds a partition table to its designated empty space still remaining on sector 0, the treeOS MBR bytes are still there on sector 0 after this too.  The USB drive should now boot directly to the animated graphic not much differently than the floppy.<p>--treeOS MBR does not actually utilize the partition table bytes, but when it&#x27;s not a floppy, BIOS will not normally load &amp; run sector 0 unless an <i>active</i> marked bootable partition table of some kind is found in its proper place on the physical sector 0 to begin with.<p>Reboot to Windows then quick-format the USB drive FAT32 using Windows.  Do not repartition, just quick-format.<p>-the USB drive should now work normally for storage<p>--but when properly selected as a boot device, will go directly to the graphic<p>Alternatively using a regular HDD you can copy sector 0 of treeosFloppy.img to a new file on NTFS like c:\\treeos.mbr then Windows BOOTMGR and&#x2F;or NTLDR can be configured to put treeOS on its built-in Windows bootmenu alongside Windows by correctly referencing c:\\treeos.mbr as a bootsector entry. As long as Windows is installed on a MBR-layout HDD for BIOS booting.  With sectors 1, 2, &amp; 3 of treeosFloppy.img in place on the corresponding (otherwise unused by BIOS) 1, 2, &amp; 3 positions on the HDD, when c:\\treeos.mbr is selected you can get the treeOS graphic from a Windows bootmenu even while Windows occupies sector 0 with its own regular Windows MBR.<p>Plus then you&#x27;re already multibooting Windows the factory way.<p>Merry Christmas!')