Item(by='Pick-A-Hill2019', descendants=None, kids=None, score=None, time=1602708337, title=None, item_type='comment', url=None, parent=24770888, text='From [1]<p>Signature -<p>The Suricata signature for this vulnerability is located in cve-2020-16898.rules and contains the following logic:<p><pre><code>    alert icmp any any -&gt; any any (msg:&quot;Potential CVE-2020-16898 Exploit&quot;; lua:cve-2020-16898.lua; sid:202016898; rev:1;)\n\n    The corresponding Lua script may be found in cve-2020-16898.lua. It contains the logic necessary to properly parse the ICMPv6 layer and identify potential exploitation of Bad Neighbor, as follows:\n\n    Once we&#x27;ve located the start of the ICMPv6 layer, we test the first byte of the layer to ensure that it&#x27;s a Router Advertisement ICMPv6 packet (Type = 134) - if it isn&#x27;t, we exit.\n\n    Since Suricata primitives have not been updated to parse the ICMPv6 options, we simply jump to the 17th byte of the ICMPv6 layer, since that&#x27;s where the Options should start, if present (the first 16 bytes are static-length fields, per RFC 4443). From there, we loop over every Option until we run out of bytes in the packet. For each Option, we&#x27;re only interested in the first two bytes: the Option Type and Length fields, respectively. While we ignore all Options that aren&#x27;t RDNSS, for Option Type = 25 (RDNSS), we check to see if the Length (second byte in the Option) is an even number. If it is, we flag it. If not, we continue. Since the Length is counted in increments of 8 bytes, we multiply the Length by 8 and jump ahead that many bytes to get to the start of the next Option (subtracting 1 to account for the length byte we&#x27;ve already consumed).\n\n    With this rule, we also check to make sure that the Length is at least 3, since RFC 8106 requires it, but ultimately this check may be superfluous, since we&#x27;re only concerned with whether the Length is even or not.\n</code></pre>\n[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;advanced-threat-research&#x2F;CVE-2020-16898" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;advanced-threat-research&#x2F;CVE-2020-16898</a>  (HTH)')