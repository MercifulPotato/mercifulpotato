Item(by='JamesBarney', descendants=None, kids=None, score=None, time=1603952945, title=None, item_type='comment', url=None, parent=24926461, text='I think the biggest symptom of a legacy code is exactly &quot;better not touch unless absolutely necessary because I have no idea what I am going to break&quot;.<p>i.e. on a greenfield project if your expectations and application behavior disagree, the application is wrong. On a legacy code base if your expectations and the application behavior disagree, your expectations are probably wrong.<p>When someone asks the question &quot;why does the application do this?&quot; there is no one to answer the question, but everyone assumes it&#x27;s probably pretty important.<p>&gt; But there are legacy apps with good test coverage (typically another can of worms)<p>100% this.  Unit tests are usually so sensitive to changes they&#x27;ll break as often for a buggy fix and a bugless one. Last app I worked on I broke 12 unit tests without introducing a single bug.  Sometimes on a truly legacy app a unit test can break and you have no idea if you should change the unit test or your code.')