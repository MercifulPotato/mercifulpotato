Item(by='klenwell', descendants=None, kids=[25097205, 25094141, 25095265], score=None, time=1605376789, title=None, item_type='comment', url=None, parent=25091132, text='I&#x27;ve only recently started to pay attention to Elm after hearing some good things about it so this article was timely for me. I&#x27;ve also dealt repeatedly with the example the author uses, a wizard or multistep form, so I was definitely interested to see how it played out.<p>And I was nodding my head in rhythm with the author until he got to the section on lenses. He writes:<p><i>That’s 14 lines of code to update one single field. Not only is this single example somewhat confusing to follow, you also need to imagine how this update function will look when taking into account the five or so other fields just in the address record! This is — quite frankly — pretty terrible. The trick here is not to stare out of the window and contemplate rewriting everything in ClojureScript. Instead, the thing to do is write a whole bunch of lenses.</i><p>To my eye, the lenses code he ended up writing didn&#x27;t look all that much prettier or shorter to me. I guess it&#x27;s more neatly structured and could even be organized its own file?<p>Is the advantage that you&#x27;re providing access at each level of the nested record as you code it out? Are there other approaches to this nested field problem?')