Item(by='arghwhat', descendants=None, kids=[24970712], score=None, time=1604336078, title=None, item_type='comment', url=None, parent=24968835, text='&gt; The &quot;importance&quot; of the mailing list I&#x27;m trying to emphasize is the Schelling Point.<p>You have said Schelling Point enough times for me to have caught that. It is, however, not correct to assign this to the mailing list.<p>(Also, as a side-note, &quot;focal point&quot; is a more natural, common, and much less awkard term.)<p>&gt; The list also acts as a Schelling Point to coordinate and consolidate public discussions.<p>No, it does not. However, it does serve a similar (albeit unimportant) function: providing visibility into ongoing discussions for <i>outsiders</i>, as well as a way for people to join a discussion there were not otherwise introduced into by fellow maintainers.<p>As a point of reference, during the handful of kernel patches I have gotten upstreamed, the mailing lists themselves served no function. My only interaction with them was to Cc them, as per the guidelines. I did not read them, and all my interaction was with the individuals I To: or Cc:&#x27;d directly.<p>A key thing to note here is that historical discussions on a mailing list are not particularly important in mailing-list style development, as all relevant information should be in the commit message that the discussion culminated in. Likewise, being able to chime in on ongoing discussions are, on its own, not truly that important eitherâ€”in the worst case, something bad is implemented, and someone upon discovering this starts a new discussion and possibly end up changing it.<p>In big, or long-standing projects, this happens relatively often, as no individual has the bandwidth (or interest) to keep up with every discussion, and relies mostly on being introduced to discussions when others find them relevant (with git history revealing if they are relevant).<p>&gt; A mailing list also has a Schelling Point aspect where people can discover email addresses of maintainers.<p>&gt; How would new people easily discover the maintainers&#x27; email addresses without any Schelling Points?<p>&gt; I disagree. Today, if I notice a bug where youtube-dl is broken, I don&#x27;t have a canonical place to report the issue.<p>These are all the same argument, which I will consolidate as: &quot;You cannot discover the target address if the mailing list is down&quot;.<p>This is entirely false: the mailing list does <i>not</i> serve the function of <i>email address discoverability</i> in any form. Instead, the source is the source code itself, in which the target email addresses will be recorded ad nauseam.<p>Not only will you as holder of the source have the email address of every historic contributor and maintainer (including knowledge of who is relevant to what area), there will usually also be explicit listings available (README, maintainer lists, etc.). External sources might redundantly cover the information as well, but that is non-critical.<p>To carve it out: You, as a holder of the source code, will always be able to send patches, ask questions, as well as start discussions that others will organically be added to, using no other sources of information than the source, irrespective of mailing list availability, as long as you can <i>send</i> email, and that at least <i>one</i> of the maintainers or contributors of the source can still <i>receive</i> email.')