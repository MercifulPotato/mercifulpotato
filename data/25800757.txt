Item(by='29athrowaway', descendants=None, kids=[25805066], score=None, time=1610782183, title=None, item_type='comment', url=None, parent=25800625, text='Run this, please.<p><pre><code>    &#x2F;&#x2F; 100% type-safe function :-)\n    function f(a: Date): number {\n        return a.getDate();\n    }\n\n    &#x2F;&#x2F; Input to 100% type-safe function\n    const p = new Proxy(new Date(), {\n        get: function(target, prop, receiver) {\n            if (prop !== &#x27;getDate&#x27;) {\n                return Reflect.get(target, prop, receiver);\n            }\n\n            return function() {\n                console.log(&#x27;Not typesafe :(&#x27;);\n            };\n        }\n    });\n\n    f(p);\n</code></pre>\nOutput: &quot;Not typesafe :(&quot;<p>What happened? all type-safety was circumvented. The f function that should return a number did not return a number. In fact, it didn&#x27;t return anything.<p>The TypeScript compiler didn&#x27;t return any errors either. This is perfectly valid TypeScript.<p>Why? because TypeScript is based on JavaScript. It is not 100% typesafe and it will never be.<p>Is TypeScript an improvement? yes. Does it help a lot of people? yes. Is it 100% typesafe? no.<p>Did TypeScript &quot;fix&quot; JavaScript? Mostly, but no. I hope the mods unflag my original comment.')