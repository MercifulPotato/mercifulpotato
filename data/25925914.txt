Item(by='TeMPOraL', descendants=None, kids=[25926535, 25929077, 25927438, 25926005], score=None, time=1611738602, title=None, item_type='comment', url=None, parent=25925644, text='I think focusing on this comparison to the real world assemblies and constructions doesn&#x27;t yield much insight. The equivalent of a car being assembled is a compiler building an executable from source. You can consider factories to be just <i>very, very long</i> compiles, and forget about it.<p>The question of why software takes a long time to build pertains to the coding phase, to which real life&#x27;s analogue is drafting&#x2F;design phase. It is my impression that the drafting&#x2F;design phase in &quot;hard&quot; industries can be just as messy and hard to schedule as software development is - we just don&#x27;t pay attention, because for physical products, drafting&#x2F;design is nearly free (capex &amp; opex of the assembly phase dominates), whereas in software, the construction is nearly free (compiler time is too cheap to meter).<p>It&#x27;s true that, on the surface, software is &quot;always new&quot;. But after doing it for a while, I have this sinking feeling that a lot of it is old and repetitive work that we hadn&#x27;t yet automated - there are deep similarities between pieces of code we&#x27;re writing, but we don&#x27;t have a language to fully capture them and abstract them away.')