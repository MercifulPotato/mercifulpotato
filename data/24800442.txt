Item(by='WkndTriathlete', descendants=None, kids=None, score=None, time=1602853725, title=None, item_type='comment', url=None, parent=24798461, text='The big problem with implementations in interviews (or coding challenges in general) is that they don&#x27;t test what the interviewer is thinking they are testing, and it is usually a clear indicator that the business looking to hire has some major shortcomings in their developers.<p>For what it&#x27;s worth I&#x27;ve been on both sides of the table.  I don&#x27;t bother with code when I interview because it&#x27;s a waste of time.  I may show a (non-critical, not-worth-NDAing) section of code to a prospective employee and have a discussion about it, but in general I can suss out whether someone knows what they are doing in less than 30 minutes just by having a conversation with them.  Why make the applicant or me wade through 2-3 hours of code and not get a sense of what they are truly capable of when I can talk to them for 30 minutes and assess their technical ability, communications patterns, and fit for work culture simultaneously?<p>The smartest people I&#x27;ve ever worked or interviewed with don&#x27;t bother with code as interview.')