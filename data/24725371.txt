Item(by='saghm', descendants=None, kids=None, score=None, time=1602202208, title=None, item_type='comment', url=None, parent=24723491, text='&gt; Go&#x27;s (weak but convenient) universal error interface<p>Rust has an `Error` trait too, and you can always just use `Box&lt;dyn Error&gt;` as your error type if you&#x27;re fine with using a heap allocation to avoid caring about the concrete type (which is what&#x27;s happening in Go when you use the error interface as your return type anyhow). Rust just makes the more efficient (in terms of runtime performance, not necessarily usability) the default and the more expensive option opt-in. This is a common pattern in a lot of the language design choices: performant by default, with the option to opt into a less performant variant to make things easier if you&#x27;re okay with the cost. I think a lot of newcomers to the language (not saying you are one; I have no idea what your experience level is) don&#x27;t realize this because the Rust community tends tends to _really_ like doing things the &quot;proper&quot; way. This isn&#x27;t a problem per se, but I think there would be immense value in having more resources that made all of the options on the performance versus usability spectrum more clear.')