Item(by='segfaultbuserr', descendants=None, kids=None, score=None, time=1602192478, title=None, item_type='comment', url=None, parent=24716218, text='Recommended reading: <i>How did people use ed?</i> from Retrocomputing Stack Exchange, the answer by Raffzahn also includes an old-school programming story, <i>How Real Programmers Remember Code</i>.<p><a href="https:&#x2F;&#x2F;retrocomputing.stackexchange.com&#x2F;questions&#x2F;5341&#x2F;how-did-people-use-ed" rel="nofollow">https:&#x2F;&#x2F;retrocomputing.stackexchange.com&#x2F;questions&#x2F;5341&#x2F;how-...</a><p>&gt; <i>Using a line-based editor isn&#x27;t that hard. For one, yes, real programmers (as we all were back then) do remember their lines. A program grows in your head; the screen is just to dump the result, isn&#x27;t it? How are you able to understand your own program if you can&#x27;t visualize it in the first place?</i><p>&gt; [...] <i>Of course, these were all &#x27;super specialists&#x27; and way better than anything we were ... the usual game. And as so often they came up with the same questions, why not use a high level language, a standard DBS and so on. The usual crap. Seriously, with an application of that size, writing such components is just a minor add on. Eventually needing less code than using a standard interface requires - not to mention being faster because being tailored exactly to our needs.</i><p>&gt; <i>Anyway, let&#x27;s go for the story. One of these &#x27;specialists&#x27;, lets call him Mr. W., claimed that no one can oversee such a large codebase, not even partially. Heck, no one can even remember all code written by himself in 5 or more years. Ha! That was a claim that I couldn&#x27;t let stand uncontested, so one word yielded the next. Bottom line: we agreed for a bet, one beer, that I will be able (he said not able) to identify source name when presented a 10 line snippet, from random programs I did within the existing codebase. We agreed on 10 examples. Date was set the next morning.</i><p>&gt; <i>Morning came, I didn&#x27;t prepare nothing, but he came up with a stack of paper and a case of beer. I guess his intention was to show how much I didn&#x27;t gain by presenting every fail with a bottle. Also, he was so generous as to make the snippets a whole page each. I didn&#x27;t really need that. I named not only each routine he handed me, but also which module it belonged to, what&#x27;s the purpose, some workings, why variables are named the way they are, some caller or what was to be found on the pages before or after. Further, I also named the original programer, as he inserted a few pages from programs I didn&#x27;t write and identified a piece of code that was no longer used, told why and what has replaced it - he pulled it form a very old version :))</i><p>&gt; <i>The whole case of beer, bottle by bottle, changed sides :))</i><p>&gt; <i>The same time Mr. W. became more and more quiet. Needless to say that there was no further argument about readability of code or the ability to handle a large code base. Sure, there was still the database fight, but that&#x27;s a different story.</i>')