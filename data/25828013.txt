Item(by='mcguire', descendants=None, kids=None, score=None, time=1611012472, title=None, item_type='comment', url=None, parent=25823907, text='Ok, let&#x27;s get this straight right now.<p>&quot;<i>But ours is a world always in flux, where the laws of physics change weekly. If we did not quickly adapt to the unforeseen, the only foreseeable event would be our own destruction.</i>&quot;<p>The &quot;laws of physics&quot; as they apply to software are the same now as they were in 1968 when the term &quot;software crisis&quot; was created. They&#x27;re mathematics, logic, and algorithms---not the physics of engineers, but just as rock solid. All of the &quot;flux&quot; and change are either getting a new model of bulldozer or changing the color of the paint in the bathroom.<p>And yes, clients change their requirements in <i>every other field,</i> too. The major difference is that those other fields have the scones to tell the client, &quot;That will cost more.&quot; There is one difference, though.<p>&quot;<i>You need a license to be a “principal engineer”, a.k.a. the person who formally signs off on plans as valid.</i>&quot;<p>Yes, you need someone who accepts bottom-line responsibility. That is something that exactly no one in software development wants.<p>Now, me, I don&#x27;t claim to be any kind of engineer. (Unless I&#x27;m running the train. Toot! Toot!) I&#x27;m a programmer. That&#x27;s not because I don&#x27;t feel what I do to be <i>engineering-ish</i>. It is because I find that what passes for the actual field of &quot;software engineering&quot; (<a href="https:&#x2F;&#x2F;www.computer.org&#x2F;education&#x2F;bodies-of-knowledge&#x2F;software-engineering" rel="nofollow">https:&#x2F;&#x2F;www.computer.org&#x2F;education&#x2F;bodies-of-knowledge&#x2F;softw...</a>) is entirely disjoint from the production of software.')