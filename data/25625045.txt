Item(by='Matthias247', descendants=None, kids=[25626227, 25625612, 25625623, 25625083, 25627486, 25627037, 25627266, 25641078, 25626819, 25639922, 25631856], score=None, time=1609706609, title=None, item_type='comment', url=None, parent=25623634, text='Apart from those benchmark games a lot of real world C is a lot less performant than people think it might be. I spent a fair amount of time reviewing C code in the last 5 years - and things that pop up in nearly every review are costly string operations. Linear counts due to the use of null terminated strings and extra allocations for substrings to attach null terminators, or just deep copies because ownership can’t be determined are far more common than exceptional. This happens because null terminated strings feel like idiomatic C to most people.<p>Rust avoids those from the start by making slices idiomatic.<p>Another thing I commonly see is the usage of suboptimal containers (like arrays with linear search) - just because it’s there’s no better alternative at hand (standard library doesn’t offer ones and dependency management is messy). Which also makes it less surprising that code in higher level languages might perform better.')