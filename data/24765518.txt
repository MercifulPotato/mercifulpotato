Item(by='whalesalad', descendants=None, kids=None, score=None, time=1602597079, title=None, item_type='comment', url=None, parent=24761155, text='That is such a tough question to answer carte blanche.<p>All-in-all, Django is not bad software. I have a bad taste in my mouth though because as I learned and developed new approaches to solving problems in my career I feel like Django got in the way of that.<p>For instance, there are some really killer ways you can model certain problems in a database by using things like single table inheritance or polymorphism. These are <i>sorta</i> possible in Django&#x27;s ORM, but you are usually going against the grain and bending it to do things it wasn&#x27;t really supposed to. Some might look at me and go: ok dude well don&#x27;t do that! But there are plenty of times where it makes sense to deviate from convention.<p>That is just one example, but I feel like I hit those road blocks all the time with Django. The benefit of Django is it is pre-assembled and you can basically hit the ground running immediately. The alternative is to use a microframework like Flask which is very lightweight and requires you to make conscious choices about integrating your data layer and other components.<p>For some this is a real burden - because you are overwhelmed by choice as far as how you lay out your codebase as well as the specific libraries and tools you use.<p>After your 20th API or website backend you will start to have some strong preferences about how you want to build things and that is why I tend to go for the compose-tiny-pieces approach versus the ready-to-run Django appraoch.<p>It&#x27;s really a trade-off. If you are content with the Django ORM and everything else that is presented, it is not so bad. If you know better, you know better. Only time and experience will get you there.')