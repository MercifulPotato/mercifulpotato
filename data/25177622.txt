Item(by='danpalmer', descendants=None, kids=[25177829], score=None, time=1606054745, title=None, item_type='comment', url=None, parent=25175857, text='You make a good point, I’ve not thought about COBOL as a DSL before but the analogy fits.<p>I think there are legitimate criticisms, such as the fact that it’s not portable between architectures, compilers are typically closed source and expensive, code is typically not portable between compilers.<p>These are all things we mostly expect languages to have gotten past now, so I can understand the feeling that it’s stuck in the past. The thought experiment of what would a DSL for banking look like though does suggest COBOL isn’t too bad.<p>It feels like this approach would work well with the approach of companies like MicroFocus: compile COBOL to JVM&#x2F;CLR, and then allow pieces to be replaced with Java&#x2F;CLR languages as necessary, and allow running on “normal” machines, removing the dependencies on architecture (by emulating in the compiler). That way, these old codebases almost become a specialised VM language, while regular modern languages can be used to augment.')