Item(by='GoldenMonkey', descendants=None, kids=[25503275], score=None, time=1608614051, title=None, item_type='comment', url=None, parent=25502547, text='Okay.  I’ve been in mobile app development pre-iphone, when microsoft had smart phones.  Since 2006.  Have done native iphone since the first SDK was shipped in 2008.  And android when it was available.  Did Ionic, xamarin, react-native.<p>Shipped mobile banking, digital wallets and crypto wallets to 21 million customers, as architect and lead.<p>And yet, here we are in 2020... still there is this fantasy about xyz framework flavor of the year... write once... run everywhere...<p>Magical silver bullet to save time and development costs.<p>Because, who wants to learn the native language for the mobile platform.<p>And every single code once, write anywhere framework leads exactly to it’s own tradeoffs.<p>Let’s explore each.<p>React-native - if you enjoy debugging this is your platform of choice.  Have an obscure nodejs open source library you are dependent on?  That is being deprecated?  Have fun maintaining and upgrading it yourself.  Or how about 2000 security warnings you need to resolve... yeah, you’ll code once... and debug everywhere.<p>Like Iconic? - you won’t when iOS decides to upgrade the OS. And the look and feel and your app suddenly looks like it is a decade out of date.  Good luck upgrading the look and feel... re-write on next flavor of the platform.<p>Like xamarin bc you like C#?  Have fun learning microsoft’s unique mobile paradigm.  As well as needing to understand how iOS and android paradigm’s work.  And debugging across 3 platforms... trying to isolate whether the memory leak is on the microsoft or iOS side of things.<p>The reality is this.  There are tradeoffs.  And you are really only trading one pain for another pain.<p>Learning the native tools and languages are only one kind of pain.  And the least painful.')