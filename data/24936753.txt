Item(by='jhfdbkofdcho', descendants=None, kids=None, score=None, time=1604009739, title=None, item_type='comment', url=None, parent=24936536, text='Reminds me of this compression project from a few years back from Steve Chamberlin at Big Mess O&#x27; Wires, FC8.<p><i>FC8 is designed to be as fast as possible to decompress on &quot;legacy&quot; hardware, while still maintaining a decent compression ratio. Generic C code for compression and decompression is provided, as well as an optimized 68K decompressor for the 68020 or later CPUs. The main loop of the 68K decompressor is exactly 256 bytes, so it fits entirely within the instruction cache of the 68020&#x2F;030. Decompression speed on a 68030 is about 25% as fast as an optimized memcpy of uncompressed data.</i><p><i>The algorithm is based on the classic LZ77 compression scheme, with a sliding history window and duplicated data replaced by (distance,length) markers pointing to previous instances of the same data. No extra RAM is required during decompression, aside from the input and output buffers. The match-finding code and length lookup table were borrowed from liblzg by Marcus Geelnard.</i><p><a href="https:&#x2F;&#x2F;www.bigmessowires.com&#x2F;2016&#x2F;05&#x2F;06&#x2F;fc8-faster-68k-decompression&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.bigmessowires.com&#x2F;2016&#x2F;05&#x2F;06&#x2F;fc8-faster-68k-deco...</a>')