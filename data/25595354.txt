Item(by='derefr', descendants=None, kids=[25598398], score=None, time=1609438725, title=None, item_type='comment', url=None, parent=25593911, text='&gt; Systemd provides a lot of network functionality in systemd-networkd, journald, timesyncd, etc. that is remote attack surface.<p>Everything systemd does is something the OS <i>was already doing before</i>, just using a bunch of independent-upstream-project daemons glued together with RC scripts. That attack-surface existed before. That LOC-count existed before. It just wasn&#x27;t monolithic under one project&#x2F;org, and so wasn&#x27;t being perceived as a problem.<p>The various interactions <i>between</i> daemons, also weren&#x27;t getting audited during upstream-project security audits, because all the interaction potential only existed in the downstream distribution, rather than being part of systemd&#x27;s monolith + integration test-suite.<p>&gt; DBUS interfaces are quite fragile<p>What, and what it replaced (arbitrary ug+w sockets in &#x2F;var&#x2F;run, speaking to custom one-off RPC-listener ABIs for each daemon) <i>wasn&#x27;t</i> fragile?<p>IMHO, all that&#x27;s changed is that there&#x27;s more uniformity, meaning a single set of tools can be used to test+harden all such RPC interfaces, and security flaws can be fixed in one place (DBUS itself) rather than requiring theory-level descriptions of vulnerabilities to be communicated to each project, whereupon they&#x27;re <i>hopefully</i> translated to separate one-off patches the affected daemon.<p>&gt; systemd-udevd also has raceconditions galore, so sending any message to it in the wrong order relative to another one will kill the system, maybe even open exploit vectors<p>100% true of what came before it. Hell, some of my Linux systems from the 90s and early 2000s would lock up hard just because I `modprobe`d a webcam driver when the webcam was already USB-connected.')