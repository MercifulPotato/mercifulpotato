Item(by='kiliancs', descendants=None, kids=None, score=None, time=1611165856, title=None, item_type='comment', url=None, parent=25846861, text='&gt; I&#x27;m willing to accept the basic hypothesis that&#x27;s static typing makes for less runtime errors. The type system in well thought out languages like elm or rust makes coding in them pretty simple. I don&#x27;t think that typescript&#x27;s type system is good enough to actually deliver on this promise.<p>I can only share my experience in multiple companies and products that it does deliver and it can result in a dramatic decrease of defects.<p>&gt; I&#x27;m sure that this is partly due to my own lack of understanding. Typing is basically a huge add-on to the cognitive load when using this superset. [...] Of course, it could just be that I&#x27;m not very good at typescript. But it&#x27;s a new technology, and it&#x27;s very possible to find yourself on a project with people who aren&#x27;t that experienced with it.<p>Tools don&#x27;t come for free. You need to understand TypeScript in order to use it effectively. In my experience having at least a couple senior or principal developers with TypeScript proficiency makes a huge difference, not just because they can assist and guide you, but because with TypeScript they can create a well typed ecosystem that results in it being easier for developers to code safely and following a well thought-out architecture (or rather, make it harder to not do it right), and set up linters &amp; autofixers and other tooling to make things even easier.<p>&gt; Additionally, I think the type system really pushes you towards object oriented programming. This is fundamentally at odds with the way most people write ReactJS.<p>I&#x27;m curious what gives you this impression. The codebases I&#x27;ve worked with are heavily functional, with very little OO code —sometimes it makes sense— and if anything TS helps us do FP better.')