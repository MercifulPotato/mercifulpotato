Item(by='to11mtm', descendants=None, kids=[24693233, 24694224, 24692666], score=None, time=1601935540, title=None, item_type='comment', url=None, parent=24691674, text='Academically (And, to some extent, practically speaking) Orleans Virtual actors aren&#x27;t the same as Erlang (or Akka) actors.<p>Major differences:<p>- Normal actors are pretty flexible, can work in local or remote contexts. Orleans is probably best described as Sharded Actors, It&#x27;s a &#x27;guided&#x27; implementation of Actors compared to Erlang or Akka where you are given a toolkit and have to build out what you intend to do.<p>- Orleans doesn&#x27;t have any ordering guarantees. While this is not a firm requirement of the Actor model itself, both Erlang and Akka guarantee ordering between a given Sender-receiver pair (i.e. messages sent from A to C will be sent in order)<p>- Akka and Erlang have the concept of Supervision. i.e. An actor may have a child, and if that child crashes, the (parent) is notified and may choose how to react (restart child, don&#x27;t restart child, crash itself)<p>- Orleans may allow more than one activation of the same grain at the same time. A stable and properly configured Akka Shard cluster will never have more than one of the same entity actor alive at a time.<p>- Orleans can magically scale out with the cloud (If you&#x27;re running them on Azure.) Erlang&#x2F;Akka you&#x27;ll have to deploy your new nodes.')