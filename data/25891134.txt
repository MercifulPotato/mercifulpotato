Item(by='neurostimulant', descendants=None, kids=[25891256], score=None, time=1611487152, title=None, item_type='comment', url=None, parent=25888496, text='After a decade of dealing with a fleet of wordpress sites (most of our smaller clients has a wordpress site), our team has settled on a workflow when dealing with wordpress sites for our clients:<p>- a custom docker image suitable for use in docker&#x2F;kubernetes environment. Vanilla wodpress docker image is not suitable for most of our needs, so we build our own images which includes everything we need an nothing more.<p>- security issues are rare if you follow basic security practice: strong password for administrative users, not installing plugin&#x2F;themes from sketchy sources (pirated plugins&#x2F;themes), and keep the number of installed plugins minimal.<p>- Sometimes a site was hacked by automated bots exploiting zero days in some popular plugins, but we have a clamav instance scanning the wordpress fleet&#x27;s nfs volume regularly that flags them in timely manner. Containerization is a huge win here because it allows us to quickly redeploy the site with fresh install and prevent the bots from jumping between hosts (none of the bots we&#x27;re dealing with are sophisticated enough to escape the container).<p>- Content was a major headache. Each site can use different themes with varying level of quality. We solved this by using Beaver Builder for all new sites with a custom, super minimal theme. This allow our content people to build the site layout visually while minimizing code bloats. This setup is also very cache friendly, unlike some of the themes I encountered in the past.<p>- Caching is very easy as everything is containerized. Just add a new memcache&#x2F;redis container into the pod, which is just a few lines of yml or a checkbox in our internal tool. Same with daily backup and granting sftp access to external parties.<p>- When a client outgrows wordpress, we&#x27;ll transition them away into a custom solution.')