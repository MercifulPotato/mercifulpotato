Item(by='sradman', descendants=None, kids=None, score=None, time=1610821421, title=None, item_type='comment', url=None, parent=25801500, text='This article about the undocumented Apple AMX instructions is the missing piece of the puzzle for me. Various HN threads discussed SIMD [1] and ML&#x2F;DL [2] on the Apple M1. Daniel Lemire&#x27;s benchmark compared x64 SIMD (SSE, AVX) vs. ARM SIMD (Neon, SVE2 [next gen]). Apple&#x27;s AMX is a coprocessor that does Matrix math in addition to Vector SIMD math. Maynard Handley clearly understood this in his comment on Lemire&#x27;s blog [3]:<p>&gt; You (and other commenters) are aware of NEON, but apparently not of AMX.\nAMX may not work for the sorts of JSON parsing weirdness for which you use AVX256 (that’ll have to wait for SVE&#x2F;2, probably next year) but it does solve the problem of “I want to execute dense linear algebra fast”.<p>&gt; You might want to run some comparisons of that for your M1 vs Intel MacBooks… The API’s to look at are in Accelerate()<p>The Core ML [4] docs have a nice diagram that demonstrates the relationship with the lower level Accelerate [5] and Accelerate BNNS [6]:<p>&gt; Core ML is the foundation for domain-specific frameworks and functionality. Core ML supports Vision for analyzing images, Natural Language for processing text, Speech for converting audio to text, and Sound Analysis for identifying sounds in audio. Core ML itself builds on top of low-level primitives like Accelerate and BNNS, as well as Metal Performance Shaders.<p>Apple&#x27;s TensorFlow implementation for the M1 is analogous to Core ML. It probably invokes the appropriate Accelerate BNNS and&#x2F;or Metal library calls. Maynard Handley was exactly right, SIMD&#x2F;ML&#x2F;DL code that targets Apple silicon should link against Apple&#x27;s Accelerate or Core ML libraries. These libraries in turn invoke the appropriate AMX, Neural Engine, and GPU instructions for each target platform.<p>[1] <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25408853" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25408853</a><p>[2] <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25773109" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25773109</a><p>[3] <a href="https:&#x2F;&#x2F;lemire.me&#x2F;blog&#x2F;2020&#x2F;12&#x2F;11&#x2F;arm-macbook-vs-intel-macbook&#x2F;#comment-561810" rel="nofollow">https:&#x2F;&#x2F;lemire.me&#x2F;blog&#x2F;2020&#x2F;12&#x2F;11&#x2F;arm-macbook-vs-intel-macbo...</a><p>[4] <a href="https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;coreml" rel="nofollow">https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;coreml</a><p>[5] <a href="https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;accelerate" rel="nofollow">https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;accelerate</a><p>[6] <a href="https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;accelerate&#x2F;bnns" rel="nofollow">https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;accelerate&#x2F;bnns</a>')