Item(by='ardourdev', descendants=None, kids=[25623231], score=None, time=1609693057, title=None, item_type='comment', url=None, parent=25618346, text='Having recently acquired a NAS for use (among other things) as a single source of truth for photos spanning ~15 years, I have done a lot of research around backups.<p>These are the threats I have considered and would like to mitigate against, in no particular order:<p>1. Physical damage or theft to the NAS and supporting hardware (e.g. backup drives in my home).\n2. Accidental deletion or corruption of files through user error.\n3. Ransomware which targets my NAS. In particular a sophisticated malware author could target common cloud backup destinations by looking for credentials stored on the NAS, and delete any backups, although I have not heard of any such attacks in the wild.<p>The first threat seems simple enough to mitigate: make regular backups backed by cloud storage, and keep offline credentials for accessing the backup in multiple geographical locations as well as a cloud based password manager.<p>The second is also not troublesome: use a filesystem which supports versioning and take regular snapshots.<p>The third is where I have been somewhat disappointed by the options. An effective strategy is to keep an external hard drive which is plugged into the NAS regularly and keeps a clone of the data. However, an extremely cunning malware author could still pre-empt this by corrupting data on plugged in drives. This is extremely unlikely, but here&#x27;s where I was hoping for better options in cloud backups: effectively all the pieces are in place for immutable backups, except for the tooling.<p>Options such as restic and rclone don&#x27;t have good (if any) support for targets which support immutability, such as AWS S3 and BackBlaze B2. My current solution is to use a version of restic which I have patched to not require delete permissions when targeting B2, and very carefully manage API keys so that deleting backups would require compromising my BackBlaze account. In case a script does try to corrupt the backup repository, there are few if any supported ways of accessing a past version of a B2 bucket, although rclone comes very close and could support this very nicely with some minor tweaks to the B2 backend.<p>I will be keeping a close eye on this, and hopefully if I have the time I can make some PRs to push the open source tooling in this direction.')