Item(by='bluGill', descendants=None, kids=None, score=None, time=1604430625, title=None, item_type='comment', url=None, parent=24980263, text='I prefer to think of the vertical dimension of the testing pyramid as time not test type. Nobody can agree on what the different between a unit test and an integration test is, much less end to end.  Time is objective though.<p>At the bottom of my pyramid I have the tests that I always run - even if there is no way they could break (I just changed the IP network stack, there is no way the add() function could break - but I&#x27;ll run that test anyway.<p>Then I have the tests that run pretty fast, but I find it worth some effort to add some dependency analysis to ensure I only run them when it is possible my code broke them.<p>Next there are tests that are slow, so people working in the area it tests run, but everybody else disables them. These tests are just useful enough that the group that runs them doesn&#x27;t stop running them, but not useful enough for any other group working on a different area of the code.<p>Then there are tests that a very very slow, so I only run them when I am specifically worried I might have broke something that the test covers (typically never because you forget about them when you should, but there are just enough exceptions to get a mention).<p>Last are tests that I only look at after they have failed 3 times in a row on the CI system, and then I&#x27;ll spend a week wildly&#x2F;blindly throwing possible fixes at the CI system before I break down and run them myself.<p>Note that last two are for the CI system to run, not humans. In every case I&#x27;ve seen they take long enough that you have to combine the changes of several people before running them just so the CI system can keep up. They are still valuable to have because  some important things cannot be tested any other way. However where possible you should find a different way to test that functionality.')