Item(by='Vinnl', descendants=None, kids=[25292415], score=None, time=1607004166, title=None, item_type='comment', url=None, parent=25287781, text='I think you might be misinterpreting Tailwind&#x27;s &quot;pillars&quot;:<p>&gt; - Developers don’t want to write css so they add insane amounts of nuisance in templates. Impossible to read the design language.<p>It&#x27;s not so much that developers don&#x27;t want to write CSS, but that it&#x27;s largely impossible to delete lines of CSS.<p>&gt; - The original author of Tailwind complains about naming classes in the css but Tailwind ironically names things that are “tx—-bb-4-2” or whatever the hell that means. No thanks, I’ll write “customer-support-card” or something useful. Maybe even more generic - “card”.<p>So those are different complaints about naming. Your complain is that names are hard to understand. Tailwind&#x27;s complaint is that trying to define &quot;generic&quot; (i.e. reusable) classes is practically impossible. Is &quot;card&quot; the right abstraction? Is &quot;customer-support-card&quot;?<p>&gt; - Tailwind’s front page is everything that’s wrong with this. Moving around components with “mr-4” tags and shifting it up. Left. Right. Making it larger. That means that there is no standardized design language and you’ll create design that will have no cohesive unity. One component will have “mr-4” margin and another “mr-3”.<p>The idea is that all those margins are part of a set of &quot;constraints&quot; that all compose well together to form a cohesive unity. More about this is written here: <a href="https:&#x2F;&#x2F;styled-system.com&#x2F;guides&#x2F;why-powers-of-two" rel="nofollow">https:&#x2F;&#x2F;styled-system.com&#x2F;guides&#x2F;why-powers-of-two</a><p>&gt; We have the technology. Sass can create compositional components with reusability and logical hierarchy.<p>This might be the main point: Tailwind means you&#x27;re <i>not</i> defining reusable styles. All the styles are specific to the component, and the <i>component</i> is the thing you reuse - which we were defining already. So it actually gets rid of yet another tool to create compositional components with reusability and logical hierarchy.<p>(It&#x27;s less fast for me to get to something working than e.g. using Bulma is, but I&#x27;m expecting that it will rid me of a number of the pains I run to when I&#x27;m hitting the limits of its built-in component styles.)')