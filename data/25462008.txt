Item(by='mumblemumble', descendants=None, kids=None, score=None, time=1608248674, title=None, item_type='comment', url=None, parent=25461197, text='It&#x27;s, of course, impossible to do a practical experiment where someone <i>doesn&#x27;t</i> learn, and therefore become biased toward, one of them first, and then learn the other after.<p>For my part, what I can say is, I used Mercurial for one year, and Git almost exclusively (I do occasionally touch Subversion) for a straight decade after that. And I <i>still</i> find myself having to consult Git&#x27;s documentation far more often than I ever did with Hg. And, even now, I find myself having to un-pick minor screw-ups in Git more often than I did after only a couple months on Mercurial.<p>I&#x27;m pretty sure that the problem here is ultimately the UI and not the data model. No, I&#x27;m sure it is. Every time there&#x27;s a conversation about Mercurial vs Git, and someone says, &quot;Git&#x27;s not that bad, all you have to do is learn the data model, and then learn all the different ad-hoc ways the UI is bound to it,&quot; my immediate thought is, &quot;You see, that&#x27;s exactly the point. The thing that&#x27;s nice about Hg is that you don&#x27;t have to take this extra learning step, because the data model and the UI model are one and the same.&quot;<p>Also, merge conflicts seem much more common in Git. I&#x27;m not sure if that&#x27;s a UI problem or a data model problem; I could see it being either or both. In any case, I felt much more comfortable allowing branches to live for days in Hg. In Git, branches that survive past 24 hours seem to always result in either shaving or getting trampled by yaks.')