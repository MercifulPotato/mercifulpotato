Item(by='j-berman', descendants=None, kids=[25876951, 25879350, 25877162, 25877809], score=None, time=1611351531, title=None, item_type='comment', url=None, parent=25876587, text='Userbase is built on the assumption that in the event an attacker compromises the Userbase server and database, the attacker would not be able to access protected user data. We chose this assumption to build on because we figure that users and developers alike should assume that data stored at rest in cloud-based databases will eventually be leaked, as we&#x27;ve seen countless examples at almost every major company. Thus, we figured the default assumption is that usernames would not be expected to be private (and so yes, to answer your question, user enumeration is currently possible).<p>Additionally, practically defending against user enumeration beyond rate limiting sacrifices a level of security and privacy (for example, by requiring users provide an email to sign up to your service, or through some other means that likely ties the user to an identity and storing this in our database in plaintext), rather than allowing them to use pseudonymous usernames alone.<p>While we do recognize username enumeration is an issue (because users tend to reuse passwords from other sites, or don’t want to be found out using a site), we concluded that properly defending from user enumeration by default would have too material of a negative impact on user experience for little gain on top of what we already provide in way of protecting user data, and instead focused on defending against potential follow-up attacks by limiting brute force login attempts, and recommending that you tell your users to use a password manager at sign up.<p>The most significant place defending against enumeration affects is during sign up. When a user’s account already exists, we say the username is already taken, which isn&#x27;t possible when properly defending against enumeration.<p>We&#x27;re planning to allow you to enable email verification in your app if you want to, so users will need an email to successfully create an account. Once that&#x27;s in place, we&#x27;ll defend against enumeration more concretely. There are other places in addition to the salt retrieval that would be modified in similar fashion. For example, password reset will need to always successfully return even if a user provided the wrong username, and sharing a database with another user will always successfully return even if the other user doesn&#x27;t exist (e.g. from a typo).')