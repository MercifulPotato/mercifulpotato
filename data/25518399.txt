Item(by='vlang1dot0', descendants=None, kids=[25518496], score=None, time=1608736647, title=None, item_type='comment', url=None, parent=25517906, text='You&#x27;re right but at the same time people also need to evaluate the state of the language with respect to the claims made on the home page.<p>- autofree not only leaks memory but in some cases causes double frees or use after free resulting in UB. Look at issues tagged autofree on their repo.<p>- No UB is claimed but the compiler does nothing to stop you from doing it and V is a very thin layer on top of C so it&#x27;s trivial to cause UB. Signed integer overflow in V: instant UB.<p>- hot code reloading literally just overwrites the library in memory as the application is running. Better hope your compiler laid everything out exactly the same way or it will segfault and it usually does.<p>- Generics. Only one type argument is supported. The built in std types don&#x27;t even use them because the implementation is so broken.<p>- option types: why have Some(T) | None when you can mix error handling in too and have Some(T) | None | Error(E)? That&#x27;s right, option types three values. (Tri-state booleans anyone?)<p>- Compilation speed: V translates to C and then runs a C compiler. V isn&#x27;t going to compile any faster than your C will. The only reasons that it&#x27;s pretty fast right now are because most programs are very small and so is the std library and because they use tcc which performs no optimizations at all. If you want your C code to compile as fast as V does, just use tcc.<p>- Runtime speed: No rigorous benchmarks have been done. The claim of within 3% is a goal they have no idea how to achieve. Given their memory system relies on ref counting and optimizing out increments and decrements, they won&#x27;t be able to hit that only taking memory management into account. Other design aspects have serious implications in terms of performance such as array copying being implicit. (b = a) copies all of a into a new array.<p>This is fine for a learning experience and I hope everyone involved is learning a lot but pitching this as some kind of project that people should learn and write real code in is crazy.')