Item(by='dkarl', descendants=None, kids=None, score=None, time=1603113494, title=None, item_type='comment', url=None, parent=24825197, text='Reduce and fold capture the structure, but there is a readability problem with them, which is that the semantics of the accumulation value are often complex and not obvious.  It&#x27;s nice to give the accumulator a descriptive name, but the more complicated the value, the more likely a programmer is to give up and call it something unhelpful like &quot;x&quot; or &quot;accum&quot; instead of &quot;mapOfAccountIdAndSectionIdToCountAndSumAndCountOfTransactionsExceedingLimit&quot;.<p>To make sure code like that is readable, programmers have to declare types even when they&#x27;re optional, use descriptive names, and use comments when these methods don&#x27;t suffice.  Or in Scala, even declare case classes that are only used in a single complicated expression, which sounds extravagant, but when I&#x27;ve seen it, it turned code that might have taken ten minutes to decipher into code I could cruise right through.  Unfortunately, in my experience, this is rare.  Often my first step in figuring out someone else&#x27;s reduce or fold is to guess how I would have done it and then see if their code implements my guess, which is an assembly language level of readability.')