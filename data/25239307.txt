Item(by='geofft', descendants=None, kids=[25239415, 25239376], score=None, time=1606587530, title=None, item_type='comment', url=None, parent=25238453, text='How easy is it to &quot;port&quot; BUILD files between the various open implementations (Bazel, Buck, Pants, Please)? If you have a project someone else wrote with the intention of using it in e.g. Bazel, can you integrate it into your Please build system, or would you need to treat it as an opaque build process (same as if you were shelling out to .&#x2F;configure &amp;&amp; make)?<p>As a concrete example, one frustration at $DAYJOB is that building certain Google-released OSS is hard to integrate with our existing build system because Bazel is pretty opinionated about compiler-provided headers, output paths, etc. We&#x27;re calling Bazel as a subprocess during our build and making various files available to it to make our compiler build visible to it, and then we pack up the results. I&#x27;m pretty sure if we somehow adopted Bazel for our entire build this would be much better - would it also be better if we adopted one of those other systems?<p>(Maybe one way of asking this is, are any of the corporate sponsors of Buck, Pants, or Please building third-party Bazel code from source? Or vice versa?)<p>A broader question: would it be worth defining a compatible <i>subset</i> of BUILD file syntax and library calls (i.e., not just Starlark but also the rules themselves for common things like building C libraries or JARs)?<p>Are we in the build-system equivalent of the vendor-specific C &#x2F; C++ &#x2F; UNIX implementations, and will a cross-vendor standardization effort emerge one day?')