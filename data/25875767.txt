Item(by='WorldMaker', descendants=None, kids=None, score=None, time=1611346264, title=None, item_type='comment', url=None, parent=25872287, text='WPF controls are still system provided&#x2F;standardized &quot;common&quot; controls, though. Up until recently (.NET Core 3) all WPF releases were still Windows releases.<p>The issue isn&#x27;t necessarily caused by the controls themselves or even the theming engine baked into WPF. Had Microsoft prioritized it, WPF might have had stronger system theming&#x2F;retheming out of the box. It could have provided stronger design themes and more user choice in adopting theme. There&#x27;s a brief window in the Zune development life cycle where they almost delivered exactly such a thing for WPF. IIRC there were 3 or 4 prominent Zune themes and easy style sheet swaps (including on the fly) to switch between them in WPF and those base stylesheets were almost productionized and included in the system WPF resources. (Then of course we all know what happened to the Zune and things moved to other platforms.) They still likely would have been opt-in because Microsoft prioritizes backwards compatibility, but they were a glimpse to the timeline where Microsoft had maybe done that sort of design work further ahead of time and forced it to be opt-out by default. (Admittedly which they tried and failed to with Windows 8 because developers complained too much that the opt-out was too hard and we&#x27;d already lost the war for &quot;native controls&#x2F;native themes&quot; by that point to corporate&#x2F;enterprise designers and branding efforts.)<p>Of course the &quot;two worlds&quot; problem of having multiple &quot;competing&quot; systems controls between the classic Win32 world and the WPF&#x2F;XAML world is unlikely to ever be solved, given backwards compatibility assurances, but having &quot;two worlds&quot; shouldn&#x27;t have stopped Microsoft from a single unified theming engine had they the initiative&#x2F;prioritization. There&#x27;s even hints that some people at Microsoft were considering it back before WPF was launched. WPF was always a partial shell of the &quot;Avalon&quot; dream of Longhorn&#x27;s tumultuous development.')