Item(by='randomsearch', descendants=None, kids=[24763660, 24763470, 24763822, 24763339, 24763129, 24763068, 24763507, 24763767, 24763764, 24763570, 24765628, 24763170, 24763619, 24763183, 24763118, 24763240, 24765713, 24763259, 24765232, 24764004, 24765277, 24763799, 24763273, 24763335, 24767138, 24763126, 24763736, 24763039], score=None, time=1602572085, title=None, item_type='comment', url=None, parent=24758772, text='This advantage:<p>“Serverless models don’t require users to maintain their own operating systems, or even to build applications that are compatible with particular OSs. Instead, developers can produce generic code, and then upload it to the serverless framework, and watch it run.”<p>... is utterly compelling and is why serverless will not just win, but leave renting a server a tiny niche market that few developers will have an experience of post 2030.<p>Maintaining your own server is completely nuts. If that isn’t obvious now, it will be in another decade. It’s massively inefficient. Like running your own power plant to serve your factory, except you also have to worry about security and constant maintenance, along with all the moving parts that surround a server.<p>Almost all the objections in the article can be rephrased as “serverless is not mature enough yet”, and that’s accurate, but I suspect there’s also a bias against giving up control to the cloud companies, and some wishful thinking as a result.<p>The future of software development is going to be defined by cloud providers. They’re going to define the language ecosystem, the canonical architectures for apps etc... it’s just early days and cloud is really very primitive. Just clicking around Azure or GC or AWS illustrates how piecemeal everything is. But they have a lot to do, and just keeping pace with growth is probably hard enough. I’m not sure I’m super happy with this outcome, but I’m pretty certain the trend line is unmissable.')