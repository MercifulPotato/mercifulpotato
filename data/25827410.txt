Item(by='oh-4-fucks-sake', descendants=None, kids=None, score=None, time=1611008567, title=None, item_type='comment', url=None, parent=25823907, text='I&#x27;m a bit of a centrist here:<p>I think of software lies somewhere nebulously between craftsmanship and engineering.<p>There&#x27;s a flavor of pure craftsman&#x2F;artisan that can make an excellent product with overall little &quot;technical&quot; knowledge. A traditional potter works much on instinct, texture, feel. He might know how to select a clay by color, not knowing or even thinking about the constituent minerals. Water is added in eye-measured doses.<p>Then, there&#x27;s a flavor of pure engineer that executes most of his tasks in structured, industry-prescribed, formally-verified, deterministic ways. Particle aerospace engineers are the extreme in this category--they&#x27;re a slave to the formal methods that rule their design, build, and test processes.<p>But we software &quot;engineers&quot; float back and forth between the two--and all the time. One minute, we might hacking together a throwaway script that checks if Amazon has toilet paper. The next: writing a test for a rules engine that tests every corner case in a truth table. Or proving that some algo runs in O(log n) time.<p>Most craftsmen&#x2F;artisans lie somewhere on this spectrum, but I feel we software &quot;engineers&quot; wobble around a large swath.<p>So, call us software engineers, call us software craftsmen--they both apply.')