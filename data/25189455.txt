Item(by='jturpin', descendants=None, kids=[25195141, 25190064], score=None, time=1606153877, title=None, item_type='comment', url=None, parent=25188668, text='All of these tools (Terraform, Kubernetes, Github Actions&#x2F;Other CI) seem like overkill until a node dies and you need to recreate it, or configuration gets messed up and you don&#x27;t remember how you deployed it in the first place. It sounds like the OP has had experience with these problems. If these aren&#x27;t problems you have interest in solving, then Heroku or a similar platform would be the way to go.<p>Running a business on a single node is not advisable. If your scale is that small, or uptime doesn&#x27;t matter, then sure go with that. If you&#x27;re running on multiple nodes, you&#x27;re going to need a way to schedule containers to your cluster one way or another. Scheduling and orchestrating is where complexity get introduced - Kubernetes wrangles this complexity.<p>You can run a lot on a $5 server. I would probably run 3 $10 servers for a small business at least, which feels like still within the realm of a cheap budget for business infrastructure costs.<p>As far as Kubernetes complexity goes, I think this is a self-perpetuating idea on internet tech communities. I don&#x27;t think it compares to the complexity of actually programming the web apps themselves. There&#x27;s like 6 resource types you have to be familiar with to work with Kubernetes, and most of that will just be Deployments (where containers actually get scheduled and run, health checks, etc). The others are for configuration and routing.')