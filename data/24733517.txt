Item(by='dragonwriter', descendants=None, kids=None, score=None, time=1602271751, title=None, item_type='comment', url=None, parent=24732969, text='&gt; From my intuition, I don&#x27;t see anything stopping the function from existing<p>A datatable is (or is isomorphic to and can be analyzed as) a mapping from row numbers to tuples of a given shape[0].<p>The transpose of table will only be table (a mapping from rows numbers to tuples of a common shape) if the tuples of the starting table were homogenous (every field of the same type.)<p>This works with, say, matrices where all the elements are numbers; but it fails in the general case.<p>[0] Yes, I know, Julia defines them as columns of arrays, and columnar organization is ideal for all kinds of processing tasks. For me, thinking about and explaining the the problem with transpose works easier thinking about it in row-oriented form (which is logically equivalent). In column-oriented description, a datatable is an ordered set of columns, each of which is a homogenous array, but if you try to transpose it, each of the columns of the result would be a heterogenous array unless the columns were all of the same type to start with. So, again, it fails to be a table-&gt;table function except in the case where the starting table consists of columns of identical type.')