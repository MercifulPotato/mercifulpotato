Item(by='dwaite', descendants=None, kids=None, score=None, time=1610961745, title=None, item_type='comment', url=None, parent=25816606, text='&gt; what actually notifies Safari that an extension is available and whether it&#x27;s updated?<p>Since extensions are made available via app extensions, it is:<p>- installation of an app from the app store<p>- first run of an app which is not from the app store<p>This is actually the big reason why they require you to use apps - all system customizations (device drivers, web extensions, photo plugins, fonts, etc) are supported with an application life cycle, and support appstore-style review and updates.<p>I haven&#x27;t done enough development of safari app extensions in particular to fully understand how _live_ updates work. I typically just enabled the extension with Safari Tech Preview as the only extension, loaded on a test page, and would restart. There may well be logic now to do a page refresh when an enabled extension is updated, however.<p>&gt; With these apps it doesn&#x27;t even seem like the app itself is doing any work - there&#x27;s no code in there to for example connect to an internal socket or do some IPC to notify the browser and supply it with extension files<p>The app extension has a global JS file loaded, and the safari.extension object allows one to send IPC to the corresponding native Mac app. This is (for example) how 1Password and other password managers integrate with the native password store.<p>The native app is a pretty good place to put all the configuration options for your extension, which may eliminate the need to surface browser-bar buttons and the like.<p>(FWIW: my Safari extension was a prototype that was abandoned because Safari didn&#x27;t surface enough HTTP request&#x2F;response access in their old API. I haven&#x27;t checked yet if their Web Extension API surface includes what I needed.)')