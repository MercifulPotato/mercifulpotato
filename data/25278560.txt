Item(by='knorker', descendants=None, kids=[25278970], score=None, time=1606929076, title=None, item_type='comment', url=None, parent=25277144, text='I&#x27;m not following what you&#x27;re saying.<p>I&#x27;m saying &quot;mu.Unlock()&quot; except when deferred, is essentially <i>always</i> a bug. At the very least it&#x27;s a bug waiting to happen. You need to <i>prove</i> that everything between Lock and Unlock is exception-safe. And that&#x27;s rarely possible.<p>As I&#x27;ve said elsewhere you cannot rely on panic triggering program exit, since e.g. HTTP handlers swallow panics.<p>The fact that you seem to be saying you never see an Unlock deferred proves my point that saying &quot;Go doesn&#x27;t have exceptions&quot; hurts Go programming. And Go code is in fact full of bugs because there&#x27;s all this exception-unsafe code.<p>C++ is <i>naturally</i> exception safe, because RAII. Where it&#x27;s not exception safe it&#x27;s because RAII was not used.<p>Even something as simple as:<p>mu.Lock()<p>stats[metricName]++<p>mu.Unlock()<p>will throw if there&#x27;s a path where stats[] map was not inited, and if called in an HTTP handler will leave the lock in place, leading to probably a deadlock of the server. Not great.')