Item(by='ImprobableTruth', descendants=None, kids=[24761169], score=None, time=1602546938, title=None, item_type='comment', url=None, parent=24760586, text='&gt;Note that these are tactics for metaprogramming - the tactics are themselves for programming, not for use in programs.<p>I don&#x27;t understand what this is supposed to mean. How are e.g. coq tactics not the exact same?<p>&gt;The commands to the LSP tell it how to generate the code, and the code sticks around for editing afterwards.<p>Not having the metaprogram which generated the code around just strikes me more as an anti-feature.<p>&gt;What is &quot;normal&quot; metaprogramming?<p>Arbitrary, &quot;non-sequential&quot; code transformations.<p>&gt;The particular benefit of using tactics would be that they&#x27;re designed for small steps of in-flight editing, rather than generating something all at once<p>Well, for me tactics definitely invokes more serious proof automation than just what you could also do using Agda&#x27;s emacs commands. This is also the impression I get from the article, the image presented uses some form of auto tactic to generate an entire term in one go. Certainly not what I&#x27;d call &quot;small steps of in-flight editing&quot;.')