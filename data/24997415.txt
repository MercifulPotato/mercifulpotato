Item(by='GuB-42', descendants=None, kids=[24997638], score=None, time=1604577004, title=None, item_type='comment', url=None, parent=24996874, text='BTW, I think Python really did a great job here.<p>As a developer, I am not a big fan of Python. This is a personal opinion and you can disagree. However, what is great about Python is that it is hard to write code that is completely messed up. The most obvious is that code is always indented correctly, but more generally, the philosophy is that there is one &quot;pythonic&quot; way of doing things. It is not always the &quot;best&quot; way, but when you are not an expert, it is better to have something good enough and consistent than to mess things up with tools you have trouble using properly.<p>Python is also a high level language with good libraries for the tasks where performance typically matter most.<p>I&#x27;m saying that because I&#x27;ve seen code written in C++ by scientists that&#x27;s absolutely terrible. I don&#x27;t blame them, C++ is incredibly complex, requiring both low level (pointers, memory management, ...) and high level (objects, generics, ...) skills. Scientists are not software engineers, they have science to do first. Python code written at the same level of skill, by comparison, looks quite decent.<p>As for the basics of &quot;git, testing, review and CI&quot;, yeah, why not, but I don&#x27;t think that&#x27;s the right approach. It is not up to scientists to adopt a developer mindset, it is up to developers to provide the right tools to scientists (like Python did, IMHO). Git, IMHO, is a bit too developer centric. I love it, but I am a developer. There are other VCS, and they are often preferred by non-developer when given the chance. I am not deep into the scientific world but testing and review processes is something scientists should be particularly good at, so if anything, maybe we have to learn from them more than they have to learn from us. CI sounds like overkill.')