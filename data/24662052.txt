Item(by='badsectoracula', descendants=None, kids=[24663211], score=None, time=1601643101, title=None, item_type='comment', url=None, parent=24661595, text='Qt5.x.y might be compatible, but what about Qt4.x.y or Qt6.x.y? If some program is linked against Qt4.x.y it wont get any benefits and fixes from Qt5.x.y and the same will happen with Qt6.x.y.<p>And TBH i&#x27;m not sure if a C++ library can ever be backwards compatible, at least without major <i>major</i> hacks (think like automatically generating a &quot;proxy&quot; library that uses the old ABI to forward calls to the new ABI - i think the only C++ API that ever did something like that is Haiku so that they support both G++ 2.95 from BeOS and modern G++ programs from the same libraries - even then this is easier for them since they&#x27;re the OS and can decide they&#x27;ll always distribute those proxy libraries, which isn&#x27;t something you can rely all Linux distros to do), since C++ does not even pretend to have a stable ABI. I know that the G++ developers are trying to keep things compatible but i&#x27;m not sure of the C++ designers care that much.<p>On the other hand on Windows, just a few hours ago i was playing a recent(ish) game made with RPG Maker 2000, which as the name implies was made two decades ago and yet still works perfectly fine. And i have a bunch of older programs that work fine linking against the latest version of Windows 10&#x27;s libraries, with all the fixes and new features they&#x27;ve got over the years.')