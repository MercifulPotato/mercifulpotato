Item(by='jonathanstrange', descendants=None, kids=None, score=None, time=1610637748, title=None, item_type='comment', url=None, parent=25776124, text='Since I&#x27;m using libp2p in Go for a side project, may I take this opportunity to ask how this could work in principle for a decentralized network? The way I see it, this seems to be impossible but maybe I&#x27;m missing something.<p>For example, in my network, anyone can start a node and the user has full control over it. So how would you censor this node? The following ideas don&#x27;t seem to work:<p>1. Voting or another social choice consensus mechanism. Problems:<p>- Allows a colluding majority to mount DOS attacks against anyone.<p>- Can easily be circumvented by changing host keys &#x2F; creating a new identity.<p>2. The equivalent of a killfile: Users decide to blacklist a node, dropping all connections to it. Problems:<p>- Easy to circumvent by creating new host keys &#x2F; creating a new identity.<p>3. Karma system: This is just the same as voting &#x2F; social choice aggregation and has the same problems.<p>4. IP banning by distributing the blocked IPs with the binaries in frequent updates. Problem:<p>- Does not work well with dynamic IPs and VPNs.<p>Basically, I can&#x27;t see a way to prevent users from creating new identities &#x2F; key pairs for themselves whenever the old one has been banned. Other than security by obscurity nonsense (&quot;rootkit&quot; on the user&#x27;s machine, hidden keys embedded in binaries, etc.) or a centralized server as a gateway, how would you solve that problem?')