Item(by='mwcampbell', descendants=None, kids=[25667872], score=None, time=1609991207, title=None, item_type='comment', url=None, parent=25665851, text='Forgive the second top-level comment, but I have some thoughts on Narrator and Edge. Disclosure: I worked on the Windows accessibility team at Microsoft during the transition from EdgeHTML to Chromium, and as a third-party screen reader developer before that. But I won&#x27;t divulge anything confidential here.<p>It probably comes as no surprise that EdgeHTML and Chromium have completely different accessibility implementations. Narrator always had the best support for EdgeHTML. I was a third-party screen reader developer when EdgeHTML first came out, and for us third-party developers, EdgeHTML was a drastic change from IE. For over a decade, we had provided access to IE by injecting code into the IE process (yes, Windows lets you do that) and accessing the IE DOM in-process using COM. We did something similar for Firefox and Chromium, but using the IAccessible2 API (also COM-based). To improve security, old Edge disallowed this kind of injection; it could only be accessed through the UI Automation API. Narrator was built for this; the rest of us had to adapt after the fact. And since we could only access UIA through inter-process communication, not in-process like we did with the IE DOM and IAccessible2, there were performance problems, even with Narrator. (Luckily, I got to help solve those problems during my time on the Windows accessibility team.)<p>With Chromium (in both Google Chrome and the new Edge), screen readers can still inject code in-process and use the legacy IAccessible2 API. And NVDA, JAWS, and System Access (which I developed before joining Microsoft) do that. These third-party screen readers access Chrome and new Edge in the same way, at least inside the web content area, so if you&#x27;re testing with one of these screen readers, it probably doesn&#x27;t matter which browser you use. The situation with Narrator and Chromium-based browsers is more interesting. Narrator uses the UI Automation API to access all applications. Chromium has a native UIA implementation, largely contributed by the Edge team, but while that implementation is enabled by default in the new Edge, it isn&#x27;t yet in Chrome. So Narrator accesses Edge using UIA. But for Chrome, and other Chromium-based apps (e.g. Electron apps), Narrator uses a bridge from IAccessible2 to UIA that&#x27;s built into the UIA core module. So in corner cases, there may be differences in how Narrator behaves in Chrome and Edge.<p>So, should developers test with Narrator and&#x2F;or Edge? Well, I may be too biased to answer that. But I think it&#x27;s likely that Narrator usage is on the rise. While I was on the Narrator team at Microsoft, we heard from time to time about praise that Narrator was getting in the blind community. (Naturally I can&#x27;t take full credit for that; it was a team effort.) Moreover, since Narrator is the option built into Windows, there will come a point (if it hasn&#x27;t come already) when it&#x27;s good enough for many users and they have no reason to seek a third-party alternative. Also, there are some PCs where Narrator is the only fully functional screen reader, specifically those running Windows 10 S (the variant that doesn&#x27;t allow traditional side-loaded Win32 apps). I&#x27;d guess that an increasing number of students and users of corporate PCs are saddled with that variant of Windows. And while I can&#x27;t say anything about future versions of Windows, one can make an educated guess based on the broader trajectory of the industry.<p>As for whether it&#x27;s worth testing with Edge as opposed to Chrome, I don&#x27;t know. Fortunately, browser usage data is readily available.')