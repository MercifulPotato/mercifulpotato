Item(by='willseth', descendants=None, kids=[24923684, 24923563], score=None, time=1603914449, title=None, item_type='comment', url=None, parent=24922687, text='A different perspective is that Python leadership has been overwhelmed addressing the concerns of the enormous and growing Python community, for whom generally performance is not yet the primary concern - believe it or not. It&#x27;s probably fair to suggest PSF has stumbled in executing some of their goals, most notably and publicly the transition to v3, but overall it seems like the general Python community is most interested in language and ecosystem features, while performance-critical workloads are already being addressed in a number of projects (not just PyPy, but Numba, Cython, and others).<p>Data science may be at the heart of Python&#x27;s strengths, but it&#x27;s simply not accurate to suggest Python (whoever that is!) is resting on its laurels, as evidenced by the very active, albeit sprawling, package ecosystem. And while the CPython devs seem to have found their stride in 3.x releases.<p>It&#x27;s also inaccurate to suggest numeric computing in Python has a &quot;low performance ceiling,&quot; considering you can get near-C performance via JIT or AOT using a package like Numba, and in most cases it&#x27;s not even necessary because of Numpy and the many other highly optimized compute packages that can do most of the heavy lifting.<p>I think the main draw of Python is not just that the syntax and language features are approachable, but that the package ecosystem is so broad and active, you are likely to make lighter work of the same job done in another language. I think to displace Python you would have to displace the package ecosystem, which seems as big and broad as it&#x27;s ever been.')