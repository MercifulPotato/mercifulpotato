Item(by='schoen', descendants=None, kids=None, score=None, time=1605568880, title=None, item_type='comment', url=None, parent=25118224, text='&gt; Hence why they need results reviewed and a community to agree upon what&#x27;s acceptable as a proof. Otherwise reviewing a proof would be an automatic process, if everything was done in the world of syntactic symbols with clear rules that tie one statement to the next.<p>Nonetheless, we may still get to the second case because there are a couple of large projects that are trying to formalize all of mathematics in a way that a computer can verify.<p><a href="http:&#x2F;&#x2F;us.metamath.org&#x2F;" rel="nofollow">http:&#x2F;&#x2F;us.metamath.org&#x2F;</a><p><a href="https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;1910.09336" rel="nofollow">https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;1910.09336</a><p>If these catch on and become a deeper part of the mathematics research process, mathematicians would still discuss &quot;what&#x27;s acceptable&quot; in terms of their views of axioms, and they would presumably still discover proofs for theorems, but review for formal correctness of inferences <i>could</i> be an automatic process.<p>Note that some pretty impressively complex and abstract theorems have successfully been formalized in these systems (and their proofs checked by machine), even starting from quite small axiom systems.<p>Edit: In the mathlib paper they mention a much wider set of efforts along these lines:<p>&gt; In this section, we compare and contrast mathlib with other substantial formal libraries for mathematics, including libraries for Mizar [9,28], HOL Light [35], Isabelle&#x2F;HOL [49], Coq&#x2F;SSReflect [10,46], and Metamath [47]. Our goal here is not to provide detailed comparisons of the various de-sign choices, but, rather to sketch the design space in broad strokes, situate mathlib within it, and explain some of the decisions we have made. Our choice of comparisons is not meant to be exhaustive: there are also substantial mathematical libraries in HOL4 [55], ACL2 [42], PVS [50], and NuPRL [17], as well as notable libraries built on standard Coq, such as the Coquelicot analysis library [14].')