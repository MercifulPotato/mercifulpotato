Item(by='ragnese', descendants=None, kids=None, score=None, time=1603483719, title=None, item_type='comment', url=None, parent=24872477, text='&gt; It doesn&#x27;t need them IMO. It brings no benefit to the language, really. They would need to be type checked at runtime, which can become quite expensive. Static analysis is a better option for an interpreted language. Read this answer from Nikita (one of the top PHP contributors) <a href="https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;PHP&#x2F;comments&#x2F;j65968&#x2F;ama_with_the_ph" rel="nofollow">https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;PHP&#x2F;comments&#x2F;j65968&#x2F;ama_with_the_ph</a>...<p>Right. You need to use something like Psalm if you want the benefits of generics, which is basically a tacked on type system. Having static checking is absolutely beneficial. I&#x27;d be willing to bet good money that you don&#x27;t write PHP without typehints and&#x2F;or Psalm&#x2F;PHPstan.<p>&gt; Untrue. See <a href="https:&#x2F;&#x2F;www.php.net&#x2F;manual&#x2F;en&#x2F;book.spl.php" rel="nofollow">https:&#x2F;&#x2F;www.php.net&#x2F;manual&#x2F;en&#x2F;book.spl.php</a> It&#x27;s usefulness is limited though, because it&#x27;s rare that you need those types of data structures for web applications.<p>You&#x27;re totally right. I was thinking that you still needed to explicitly enable SPL, but that hasn&#x27;t been true for a long time, IIRC. So, fair enough. I was wrong here.<p>&gt; Untrue. All kinds of projects like Swoole (gives you a runtime similar to Go) and ReactPHP (runtime similar to Node) and <a href="https:&#x2F;&#x2F;github.com&#x2F;krakjoe&#x2F;parallel" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;krakjoe&#x2F;parallel</a> for lower level concurrency. There&#x27;s also pthreads <a href="https:&#x2F;&#x2F;www.php.net&#x2F;manual&#x2F;en&#x2F;book.pthreads.php" rel="nofollow">https:&#x2F;&#x2F;www.php.net&#x2F;manual&#x2F;en&#x2F;book.pthreads.php</a> But again most of these aren&#x27;t necessary for most apps because of PHP&#x27;s request-response model. Useful for one-off services though.<p>pthreads was never worth much. It never worked on web servers and is now deprecated. Parallel is a PECL extension, which may or may not be considered part of PHP, IMO. I believe it also doesn&#x27;t use threads unless you use pthreads (which you should&#x2F;can not). So it&#x27;s just multiple processes- not threads or async. I don&#x27;t know much about Swoole, etc, but those are frameworks- not PHP itself. Also, I believe Swoole is process based, not thread or (true) async. I could be mistaken. So, again, AFAIK, PHP does not have threads or async.<p>&gt; Completely untrue. <a href="https:&#x2F;&#x2F;www.php.net&#x2F;manual&#x2F;en&#x2F;functions.arguments.php#functi" rel="nofollow">https:&#x2F;&#x2F;www.php.net&#x2F;manual&#x2F;en&#x2F;functions.arguments.php#functi</a>...<p>That&#x27;s not what I meant. My wording was poor. I meant specifically `callable`. You can&#x27;t typehint the inputs and outputs of `callable` parameters. So passing around lambdas, etc, is not robust&#x2F;safe.<p>&gt; You do those like this: [Example::class, &#x27;someFunction&#x27;]<p>Yeah... an array of two strings. Again, I should&#x27;ve been more clear. I know that&#x27;s how you refer to functions in PHP. But it&#x27;s not the same as actually getting to write Example::someFunction and knowing that the inputs&#x2F;outputs line up with whatever you&#x27;re doing.')