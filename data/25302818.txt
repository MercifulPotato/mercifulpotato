Item(by='ragnese', descendants=None, kids=[25303347, 25310075], score=None, time=1607093545, title=None, item_type='comment', url=None, parent=25302470, text='I think that Kotlin&#x27;s existence has really given Java a kick in the pants. I agree that there has been a lot of people picking up Kotlin because of how verbose and &quot;last century&quot; programming in Java feels. Modern (static typed, imperative, algol-like) languages are so much more ergonomic (Rust, Go, Kotlin, Swift, TypeScript, etc), that it&#x27;s kind of painful to go back to Java, with its silly &quot;everything has to be an object, except we still have unboxed primitives for some reason&quot;, etc.<p>On the other hand, to their credit, the Java devs (Oracle, I guess) have really stepped up their game in response. Java just (fucking finally) got &quot;records&quot; (better than data classes, IMO), and sealed classes. Soon they&#x27;ll have virtual threads. And some day they may actually have what I think they call &quot;value types&quot; (bad name), which will be excellent news.<p>With these things, they&#x27;ve implemented basically all of Kotlin&#x27;s &quot;must have&quot; features except for null safety and clean, sexy, syntax. If they ever tack on some kind of &quot;strict null mode&quot; to Java, that might just be the end of Kotlin. Everyone who wants a functional JVM language will go to either Scala or Clojure, and the rest can stay on Java. That is, unless of course, the Kotlin guys pull more tricks out of their sleeves. But, in all reality, the entire purpose of Kotlin seems to have been to have a middle-ground between Java and Scala while learning from the mistakes of both. If those languages <i>also</i> learn from their own mistakes (they are), then Kotlin is in trouble.')