Item(by='ChrisMarshallNY', descendants=None, kids=[25344452], score=None, time=1607428048, title=None, item_type='comment', url=None, parent=25322938, text='One of the seminal books for me was <i>Writing Solid Code</i>[0], written about 25 years ago.<p>It&#x27;s quite dated, but has a lot of stuff that is still relevant.<p>I remember that one of his sections was titled <i>&quot;FLEXIBILITY BREEDS BUGS&quot;</i>.<p>Here&#x27;s the first paragraph:<p><pre><code>    Another strategy you can use to prevent bugs is to strip unnecessary flexibility from your designs.\n    You&#x27;ve seen me use this principle throughout the book.\n    In Chapter 1, I used optional compiler warnings to disallow redundant and risky C language idioms.\n    In Chapter 2, I defined ASSERT as a statement to prevent the macro from being mistakenly used in expressions.\n    In Chapter 3, I used an assertion to catch NULL pointers passed to FreeMemory even though it&#x27;s quite legal to call the free function with a NULL pointer.\n    From every chapter I could list examples in which I reduced flexibility in order to prevent bugs.\n</code></pre>\nI like to put flexibility into my designs, but I&#x27;ve learned to be very careful about it, and usually test the unused code paths anyway.<p>[0] <a href="https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;book&#x2F;10.5555&#x2F;2502682" rel="nofollow">https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;book&#x2F;10.5555&#x2F;2502682</a>')