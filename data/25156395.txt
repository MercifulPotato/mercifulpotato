Item(by='joseph', descendants=None, kids=[25156471], score=None, time=1605834895, title=None, item_type='comment', url=None, parent=25155797, text='I also love Concourse and feel it has the perfect set of abstractions to be able to compose arbitrarily complex pipelines. You can extend it by creating your own resources (I actually wrote a tool to help make this easier[0]). The pipeline visualization is better than anything else I&#x27;ve seen. I&#x27;m not aware of a hosted Concourse solution, but there really should be.<p>BOSH is not a requirement to host it yourself, and I&#x27;ve never used it.<p>Probably the easiest way to run it is to use the helm chart[1] and run it on Kubernetes. There are some things to keep in mind, like the workers have their own containerizer that is not Kubernetes-aware. You don&#x27;t want it competing with Kubernetes for scheduling containers, so it&#x27;s best to let the worker pods be the the &quot;owner&quot; of their node, and you can use affinities to enforce that.<p>At one company where we ran it directly on VMs in AWS, I used Ansible to build the CloudFormation stacks for the database (Aurora) and autoscaling groups, and the machines self-configured with Ansible to download and extract the Concourse tarball and start it. I wish I could make that code public but it now lives inside the company where I used it. I guess my point is that running it isn&#x27;t magic, it&#x27;s just a program (actually two, web and worker) that you start with some arguments that are pretty well documented[2].<p>0. <a href="https:&#x2F;&#x2F;github.com&#x2F;cloudboss&#x2F;ofcourse" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;cloudboss&#x2F;ofcourse</a>\n1. <a href="https:&#x2F;&#x2F;github.com&#x2F;concourse&#x2F;concourse-chart" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;concourse&#x2F;concourse-chart</a>\n2. <a href="https:&#x2F;&#x2F;concourse-ci.org&#x2F;install.html" rel="nofollow">https:&#x2F;&#x2F;concourse-ci.org&#x2F;install.html</a>')