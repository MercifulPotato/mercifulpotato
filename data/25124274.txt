Item(by='Communitivity', descendants=None, kids=None, score=None, time=1605624441, title=None, item_type='comment', url=None, parent=25121416, text='The UX design of git is horrible, granted. To me this article read as &quot;I want a GUI&quot;, while having some good points.<p>For example on knowing branches having local and remote versions, &quot;because why would they&quot;..they would because if they want to use the tool effectively then they need to know how it works. This is the same reason I learned how to use git prune. Would I ever use it on production code without a backup? No.<p>A GUI is not the solution, because a GUI can never equal the expressiveness and capability of skill combined with a parcity of input provided by the command line. If it did then the complexity of using the GUI would be just as hard, or harder, than the command line interface. However, there are many who do not need more than basic Git. Those can be served by a simple GUI, or by pre-provisioned Git aliases with documentation of what those aliases do.<p>I still dislike a GUI because I have had a number of people come to me to fix things on a team that used SourceTree and accidentally did something horrible, either because their finger slipped or because they didn&#x27;t realize what they were doing and the GUI made it too easy to do it.<p>All powerful tools should have a simple version and a complex version. Git is extremely powerful, but has no simple version for everything.<p>What helped training new people was telling them to think of git like a complex copy operation across computer boundaries, and explaining the commands in terms of that. Once they&#x27;ve gotten comfortable with the basics then you can explain how it differs from copy (and it does, greatly).')