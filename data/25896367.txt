Item(by='mint2', descendants=None, kids=[25896523], score=None, time=1611524319, title=None, item_type='comment', url=None, parent=25889406, text='Not having a formal cs background, the comments on HN that wax about predicate calculus and algebras always raise questions for me.<p>Is it a higher plane of programmer thinking or just abstract technical jargon and ideas that are suited for hard core technical cs research but bear little value in practical programming tasks?<p>Like knowing the Latin names and full phylogenic tree and exact relation of humans to the animal snuffling outside when all most people need to know is whether it’s a small animal like a raccoon or is large like a grizzly bear.<p>Like in the course of writing a feature engineering pipeline, tuning a ML model, and then deploying it as an api or as a scheduled batch predictor for another pipeline, at what point should one start thinking of parts of this in terms of “1st order predicate calculus” during the day to day tasks?<p>At what point in working on a feature card does someone generally think of relational algebra?<p>What tools don’t respect these things? What will happen by using them?<p>Like can anyone give an ELI5 of the day to day use of explicitly using these concepts to guide average programming tasks?')