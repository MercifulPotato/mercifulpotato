Item(by='gpderetta', descendants=None, kids=None, score=None, time=1606835351, title=None, item_type='comment', url=None, parent=25265423, text='Assuming that shared_ptrs themselves are thread safe is a common error :(.<p>The standard (and boost) does provide additional operations to manipulate shared pointers themselves in a thread safe way, for example void atomic_store( std::shared_ptr&lt;T&gt;* p,\nstd::shared_ptr&lt;T&gt; r ) but they are not guaranteed to be lock free (and they are not in practice) and have been deprecated in C++20.<p>It seems that your scenario would be best be handled via hazard pointers, but if you have an atomic variable per consumer I guess in practice it is the same thing (if not and it is just a shared counter, then consumers will be conflicting with each other).')