Item(by='mixedCase', descendants=None, kids=[25103918], score=None, time=1605467822, title=None, item_type='comment', url=None, parent=25103584, text='&gt; <a href="https:&#x2F;&#x2F;lists.sr.ht&#x2F;~sircmpwn&#x2F;sr.ht-dev" rel="nofollow">https:&#x2F;&#x2F;lists.sr.ht&#x2F;~sircmpwn&#x2F;sr.ht-dev</a><p>That&#x27;s a multi-purpose mailing list, where I had to read for a couple of minutes to assume belongs to the whole project sr.ht instead of a specific repo (I trusted your response to mean this was an actual 1:1 replacement and that I missed it), and I had to go into one of the patches and find a link to an issue in the tracker, and from there I had to go to the main page of that issue&#x27;s project, and from there I see there&#x27;s an ad-hoc association between the tracker and the actual repo by a link in the description which I assume you added because you noticed that it&#x27;s useful to associate issue trackers and repos. And that&#x27;s just for finding one of the repos that mailing list covers.<p>In the end, I still have to come up with custom filters to use to get only the patch requests for the specific repo I&#x27;m interested in, and assume everybody follows every single non-obvious instruction to the letter to make it all work.<p>The whole experience feels like a grabbing a bunch of general purpose tools and trying to get them to work for the project&#x27;s purpose as well as possible, because there is no solution that solves the problem in obvious ways that doesn&#x27;t require learning and carefully following a bunch of ceremony without failure. Except in this case, there are such solutions, and I&#x27;d have to be a sadist to try to get coworkers to learn and follow every single convention to the letter when they have problems just working well with git in the first place.<p>&gt; git commit &amp;&amp; git push also re-sends the entire thing<p>Which is not what I wanted, since even half-arsed PR implementations like Bitbucket&#x27;s (let alone better ones like GitLab&#x27;s) support dealing with direct feedback and changes that respond to them in a single PR.<p>&gt; assuming you rebased, and you should very definitely be rebasing.<p>I do, when working on feature branchs. But that&#x27;s another nonintuitive thing to get people to unlearn and relearn. Which of course, also includes git send-email.')