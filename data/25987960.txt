Item(by='aishwarydhare', descendants=9, kids=[25989463, 25989003, 25989048], score=2, time=1612181422, title='Problems in existing API Testing Tools. Are these problems real?', item_type='story', url=None, parent=None, text='Hello, I have been developing a no-code API testing tool for last 6 months to solve some really painful problems I felt in API Testing. Please give me your honest and toughest feedback.<p>The problems I felt are -<p>1.  There are a lot of tools, but none of them covers all the aspects of API Testing i.e. Functional (hit-n-trial), assertions, scenario (flow of APIs) and load testing\n2.  Because of lots of tools, its redundante to do configurations in each tool seperately when there are changes in APIs\n3.  All different tools requires us to go through a new learning curve to understand their usage, GUI, terminology and configuration options\n4.  JMeter has a complicated UI in comparison with Postman, which in 2021 looks to be more complicated then it needs to be\n5.  For scenario testing (flow of APIs) or assertion testing of APIs in Postman, you need to learn and write JavaScript\n6.  Devs use postman during development. They just test if APIs are working, but they don&#x27;t test how their APIs will behave under load, and how the host machine&#x27;s resources are being utilised with their API. I think the only reason for this is because JMeter looks more complicated and ancient than Postman. And its very time consuming to run multiple apps, do configurations, then run tests.\n7.  Since we use a lot of ORMs like Django-ORM, Mongoose, Sqlalchemy and tools&#x2F;libraries these days, it is hard to understand what is running under the hood hence its hard to debug. Developers spent a lot of time tracking what stored and loaded in database. There should be a single unified monitor to debug all these info (just like an APM)\n8.  Because no single tool covers all needs, there is need to purchase licenses of multiple tools. Breaking the whole API testing scene even more broken\n9. Devs can write better code if they themselves test and monitor how their APIs are performing under load')