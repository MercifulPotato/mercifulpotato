Item(by='tialaramex', descendants=None, kids=None, score=None, time=1603300076, title=None, item_type='comment', url=None, parent=24846613, text='For TLS 1.3 (a large fraction but not majority of today&#x27;s HTTPS servers) let&#x27;s go step-by-step like the article:<p>Random: Now all 32 bytes are random<p>Session ID: This will now all be random if we&#x27;ve never talked to this server before <i>or</i> if we believe it speaks TLS 1.3<p>Cipher suites: There are newer suites [with much shorter names] for TLS 1.3 because some parameters are now fixed.<p>SNI: This is still there (work on Encrypted SNI which became Encrypted Client Hello is ongoing)<p><i>NEW</i> Supported versions: Compliant servers pick the newest version they recognise from a list the client provides.<p><i>NEW</i> Key share: A TLS 1.3 client proposes one or more (Elliptic curve) Diffie Hellman key agreements. Most servers will accept one of them.<p>OK, on to the Server Hello...<p>Random: Again all 32 bytes are random <i>unless</i> the server speaks TLS 1.3 (or newer) and has the impression at this point that the client does not. In this case the server overwrites a few of the bytes with the ASCII &quot;DOWNGRD&quot; (downgrade). A TLS 1.2 (or older) client sees no significance in this, but a TLS 1.3 client is alerted that somebody is meddling, because it&#x27;s <i>extremely</i> unlikely that a server randomly spells &quot;DOWNGRD&quot; and also only knows an older protocol version.<p>Also, as a special case TLS 1.3 servers scribble over the entire random byte sequence with SHA256(&quot;HelloRetryRequest&quot;) if they wish you to try TLS 1.3 hello again with a different key share because all your proposals were unsuitable.<p>Session ID: The random nonsense from the client is echo&#x27;d back in TLS 1.3<p>Cipher suite: Still whichever suite the server picked.<p><i>NEW</i> Supported versions: TLS 1.3 or better servers will echo back versions they support.<p><i>NEW</i> Key share: Assuming the Client&#x27;s proposed key shares are acceptable in TLS 1.3 the server answers with a share of their own here and then...<p><i>In TLS 1.3 and newer everything else is encrypted</i>. Client and server have performed DH key agreement, so now they both know a random secret which they will use to begin encrypting any subsequent messages.<p>Certificate: is an example of something that&#x27;s now encrypted. Also in TLS 1.3 the <i>specification</i> follows real world practice that this isn&#x27;t necessarily a &quot;chain&quot; just one leaf certificate plus any other certificates that might help the client reach a trust decision.<p>The TLS 1.3 protocol is a relatively nice shape in its natural form, but what you see on the wire is spelled very weirdly because this is the only way for it to pass various rusty middleboxes and not blow up poorly implemented legacy servers out there in the real world.')