Item(by='hyper_reality', descendants=None, kids=[25077819, 25071668, 25070469, 25070352, 25070553, 25070358, 25070281, 25070223], score=None, time=1605190382, title=None, item_type='comment', url=None, parent=25069452, text='Nice list, here are suggestions for improving a few of the commands:<p><pre><code>  Generate Random Passwords\n  &gt;_ &lt; &#x2F;dev&#x2F;urandom  tr -dc _A-Z-a-z-0-9 | head -c6\n</code></pre>\nThis produces a 6-character password which only has 35 bits of entropy. It also doesn&#x27;t print a newline, causing the password to be on the same line as the next prompt. Better to use something like:<p><pre><code>  &gt;_ &lt; &#x2F;dev&#x2F;urandom  tr -dc _A-Z-a-z-0-9 | head -c12 &amp;&amp; echo\n</code></pre>\nOr the &quot;pwgen&quot; utility which can do this for you.<p><pre><code>  Find the process that is using a certain port e.g. port 3000\n  &gt;_  lsof -P | grep &#x27;:30000&#x27;\n</code></pre>\nThis command will be extremely slow on large systems with a lot of open files. It is essentially listing every open file (the -P flag just inhibits port mappings from e.g. &quot;port 22&quot; to &quot;SSH&quot;) and then grepping the output. Much better to run:<p><pre><code>  &gt;_  lsof -i :30000\n</code></pre>\nWhich is not only shorter, but much faster as it directly gets info about that port.<p><pre><code>  Add your public SSH key to a server in one command\n  &gt;_  cat .ssh&#x2F;id_rsa.pub | ssh hostname &#x27;cat &gt;&gt; .ssh&#x2F;authorized_keys&#x27;\n</code></pre>\nThis is what the &quot;ssh-copy-id&quot; utility, which is part of the openssh-client package, does already.<p><pre><code>  Harder, Faster, Stronger SSH clients\n  &gt;_  ssh -4 -C -c blowfish-cbc\n</code></pre>\nAll three of those points are debatable with that command. Just use the defaults.')