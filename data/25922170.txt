Item(by='bastawhiz', descendants=None, kids=None, score=None, time=1611702892, title=None, item_type='comment', url=None, parent=25918518, text='&gt; In both cases, each company&#x27;s non-sharded databases were FAR more operationally problematic than the sharded ones. The sharded database tiers behave in common ways with relatively uniform workloads, and the non-sharded databases were each special snowflakes using different obscure features of the database.<p>That&#x27;s because sharded tables restrict what features you can use (e.g., no JOINs). If you constrained the features on the non-sharded databases, you&#x27;d achieve the same net result.<p>Sharding _necessarily_ only solves one problem: queries operate against only a subset of data. While what you&#x27;re saying is true (sharding avoids certain problems) it also restricts your ability to perform other operations (more complicated queries or reports are ~impossible). It is not without its tradeoffs.')