Item(by='c-smile', descendants=None, kids=[25521585, 25522622, 25521582], score=None, time=1608752768, title=None, item_type='comment', url=None, parent=25518845, text='&gt; Because compiling Qt (and QtWebEngine) is a very heavy operation, we would need to pre-compile and distribute Qt so that the Dockerfile could simply download and include it in the build process (rather than compiling as part of the installation process).<p>Just in case: Release build of my Sciter.JS ( <a href="https:&#x2F;&#x2F;github.com&#x2F;c-smile&#x2F;sciter-js-sdk" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;c-smile&#x2F;sciter-js-sdk</a> ) gets re-compiled in <i>55 seconds</i> on pretty average dev machine that I have here. Sciter.JS is version of Sciter (<a href="https:&#x2F;&#x2F;sciter.com" rel="nofollow">https:&#x2F;&#x2F;sciter.com</a>) that uses JavaScript (ES6) script VM instead of custom TIScript.<p>Sciter.JS covers functionality of Qt UI, Qt Quick and QtWebEngine.<p>It already runs MithrilJS (micro-React), SvelteJS compilations, Leaflet (Maps) as they are. See: <a href="https:&#x2F;&#x2F;sciter.com&#x2F;sciter-js-runs-leafletjs-as-it-is&#x2F;" rel="nofollow">https:&#x2F;&#x2F;sciter.com&#x2F;sciter-js-runs-leafletjs-as-it-is&#x2F;</a><p>The end goal is to provide UI runtime that is in times smaller than Qt+QtWebEngine and ElectronJS but is still capable to run tons of existing Web components and frameworks.')