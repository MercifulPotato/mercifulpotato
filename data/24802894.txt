Item(by='taywrobel', descendants=None, kids=None, score=None, time=1602868669, title=None, item_type='comment', url=None, parent=24801700, text='Yeah, of course, I&#x27;m not looking for perfect code. Concurrency is hard, and as I mentioned, it&#x27;s probably the most common problem spot I see in interviews, so if I were a hard-ass about it I&#x27;d never hire anyone.<p>My expectations are that a candidate can identify that there is a concurrency consideration to be made in the first place, and have some knowledge around how to handle concurrency issues in their language of choice, since different languages take very different approaches.<p>For JS&#x2F;node that could mean identifying that the main execution is single threaded, so you need to use async&#x2F;await or callbacks for asynchronous tasks to prevent blocking all other execution. In go that could mean understanding that passing messages is generally safer than sharing memory. In java that could be an awareness of the concurrency primitives that the language has like atomics and concurrent data structures (I could never expect a candidate to fully grasp the concurrency nightmare that is java).<p>I also usually give candidates a laptop and free use of the internet. I try to ask questions that are more grounded in the actual work we do and not just toy algorithms, which means letting people look up documentation, data structures, and whatever else they want. If we&#x27;re being honest with ourselves, the ability to effectively search the internet is just as important to software engineering as the coding itself, if not more so.')