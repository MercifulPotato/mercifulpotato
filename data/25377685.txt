Item(by='ctvo', descendants=None, kids=None, score=None, time=1607629585, title=None, item_type='comment', url=None, parent=25373071, text='&gt; They want to suck the maximum money from consumers before they realize.<p>This is a naive understanding of how corporations like Google and Amazon work. Bad will and using gym membership tactics aren&#x27;t how they scale or make money. Getting you to confidently try things knowing you won&#x27;t get charged (the reason they have those free tiers) so you&#x27;ll get your company, your start-up, your next side project on it is much better for business.<p>It&#x27;s a miss that things like this aren&#x27;t implemented and widespread, not by design.<p>&gt; It&#x27;s not complicated to add configurable hard limits for these companies but they don&#x27;t allow it because the current situation is more interesting for them.<p>I&#x27;m not in this space, but from my observations:<p>- Each service has a different billing model and metering model. Most likely this data is held by the service. I&#x27;m familiar with AWS so I&#x27;ll use them as an example. I&#x27;d wager only DynamoDB or only Lambda (the service owners) know how much of those services you&#x27;ve consumed<p>- Billing is most likely reconciled asynchronously after collecting all data from all services by an entirely different department with knowledge of payments and accounting<p>- GCP, AWS, Azure launch 50+ services a year<p>- Each large customer most likely has a special rate. I bet Samsung or Snap pay an entirely different set of rates than the normal customer. There are thousands of these exceptions<p>- Cutting your service off when your over the limit is an incredibly complex set of edge conditions. Your long running instance hosting your critical service is shut off because of experimenting on a new ML workflow?<p>Even with only the above I can see the difficulty in globally limiting your spending limit at an accurate level. I know there are features for both AWS and GCP and they try.<p>It&#x27;s easy to stand on the sidelines and handwave away technical complexity at scale, but I&#x27;d encourage you to give all of these providers a more charitable view, at least on this topic.')