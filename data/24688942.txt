Item(by='vonmoltke', descendants=None, kids=[24690540], score=None, time=1601913735, title=None, item_type='comment', url=None, parent=24686698, text='It really depends on where you work and how your company&#x27;s repo is organized.  For instance, where I work 20 squash commits would represent, at most, 10 minutes worth of commits to the monorepo.  Not squashing on merge would quickly turn thousands of daily commits into tens of thousands.  It&#x27;s already impractical to find suspect commits via git, and we typically use our code review tool to find the change that broke something (and that change includes the developer&#x27;s full branch history).  Adding more commits would needlessly slow down the tooling that displays &#x27;git blame&#x27; results (and likely other commands).<p>I suspect there is a pattern in the comments here.  People who work on small teams with granular repos that, individually, don&#x27;t see a lot of daily activity think squashing is bad and erases valuable history.  People who work with large repos that see high commit velocity (like a monorepo) think squashing (at least merge squashing) is beneficial and don&#x27;t see the loss of information as problematic because it&#x27;s hard to access it in the first place.  Maybe I&#x27;m just projecting my own opinions on this; I&#x27;d like to hear perspectives that conflict with my assumptions.')