Item(by='szarnyasg', descendants=None, kids=[25548095], score=None, time=1609014262, title=None, item_type='comment', url=None, parent=25545479, text='There has been a lot of progress on creating standardized query languages for graphs. The two most notable ones are [2]:<p>- SQL&#x2F;PGQ, a property graph query extension to SQL is planned to be released next year as part of SQL:2021.<p>- GQL, a standalone graph query language will follow later.<p>While it is a lot of work to design these languages, both graph database vendors (e.g. Neo4j, TigerGraph) and traditional RDBMS companies (e.g. Oracle [2], PostgreSQL&#x2F;2ndQuadrant [3]) seem serious about them. \nAnd with a well-defined query language, it should be possible to build a SQL&#x2F;PGQ engine in (or on top of) SQLite as well.<p>[1] <a href="https:&#x2F;&#x2F;www.linkedin.com&#x2F;pulse&#x2F;sql-now-gql-alastair-green&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.linkedin.com&#x2F;pulse&#x2F;sql-now-gql-alastair-green&#x2F;</a><p>[2] <a href="http:&#x2F;&#x2F;wiki.ldbcouncil.org&#x2F;pages&#x2F;viewpage.action?pageId=106233859&amp;preview=&#x2F;106233859&#x2F;111706119&#x2F;ldbc_tuc_2019_sql-pgq.pdf" rel="nofollow">http:&#x2F;&#x2F;wiki.ldbcouncil.org&#x2F;pages&#x2F;viewpage.action?pageId=1062...</a><p>[3] <a href="https:&#x2F;&#x2F;www.linkedin.com&#x2F;pulse&#x2F;postgresql-oracle-graph-query-language-standards-adoption-green&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.linkedin.com&#x2F;pulse&#x2F;postgresql-oracle-graph-query...</a>')