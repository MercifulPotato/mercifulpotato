Item(by='cryptica', descendants=None, kids=[25162197, 25161045], score=None, time=1605880323, title=None, item_type='comment', url=None, parent=25158104, text='I share this point of view. For the last few years, this perfectly reasonable and balanced viewpoint was taboo so it&#x27;s good to see more and more people approaching the debate rationally as opposed to waging a religious war over gut feelings.<p>Personally, I have no issue with TypeScript purely as a language and I concede that it provides much better IDE code completion than JavaScript. That said, I don&#x27;t agree that its benefits offset the drawbacks of the transpilation step, the source mapping and the added versioning complexity between JS and TS.<p>I also miss the way that JavaScript encouraged people to define very simple function signatures (e.g. strings, numbers, plain objects&#x2F;clones as arguments and return values).<p>For example, I really liked how the React&#x2F;Redux community came up with a philosophy around cloning state objects before returning them from functions in order to prevent unexpected mutations later (essentially force everything to be pass-by-value). I think this philosophy does not translate very well to TypeScript which encourages developers to pass around complex live instances (which have their own methods) instead of raw objects and other primitive state representations.<p>As Alan Kay pointed out, OOP is not primarily about objects, &quot;The big idea is messaging&quot;. Instances should communicate with each other via simple insterfaces using simple messages; they should avoid passing complex live instances to each other. If an instance has methods, that is a complex live instance and it shouldn&#x27;t be used for messaging between different components.')