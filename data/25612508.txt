Item(by='cb321', descendants=None, kids=None, score=None, time=1609591994, title=None, item_type='comment', url=None, parent=25610996, text='It bears noting that the native Nim FFI is very &quot;thin&quot; &amp; easy.  E.g., at least for code anticipated to be compiled by the C backend, you can just declare the C function as a Nim proc (EDITTED to look nicer on mobile):<p><pre><code>  proc csetvbuf(f: File,\n                buf: pointer,\n                mode: cint,\n                size: csize):\n    cint {.importc: &quot;setvbuf&quot;,\n           header: &quot;stdio.h&quot;.}\n  # ...intervening code...\n  discard csetvbuf(stdout, nil,\n                   0, 16384)\n</code></pre>\nc2nim is more helpful for larger C APIs with a lot of C structs and a wide set of entrypoints&#x2F;API calls.  For simple enough C code it can be used as a &quot;starting point&quot; to port the whole thing, but you will probably at least want to change things like <i>a1</i>, <i>a2</i>, etc. parameter names (&quot;a&quot; for &quot;argument&quot;).  Nim has named arguments (like Python, f(x=2)) so such names are a bit more important.  (Not that all code meant to be read by a human should not have good param names.)')