Item(by='gsmecher', descendants=None, kids=None, score=None, time=1603303394, title=None, item_type='comment', url=None, parent=24849348, text='AsciiDoc (the format) is currently being developed in an Eclipse Foundation working group (<a href="https:&#x2F;&#x2F;projects.eclipse.org&#x2F;working-group&#x2F;asciidoc" rel="nofollow">https:&#x2F;&#x2F;projects.eclipse.org&#x2F;working-group&#x2F;asciidoc</a>). This working group includes leads from <i>both</i> the Asciidoctor&#x2F;Ruby and Asciidoc&#x2F;Python projects. (I&#x27;m lurking on the mailing lists but not really part of this effort.) It seems like the goal is to shore up the AsciiDoc standard and prevent further divergence between Python AsciiDoc tools and AsciiDoctor.<p>IMO AsciiDoc&#x27;s advantage over Markdown, RST, LaTeX and others is its adoption of DocBook XML as an industrial-strength backing format. The combination of a pragmatic markup language and a proven, stable, and relatively media-independent translation target is unique and extremely useful.<p>I&#x27;m an enthusiastic believer in Asciidoc-the-language, but the tooling situation is confusing in parts, fragmented in others, and not really living up to its premises. This is exactly why I&#x27;m watching the asciidoc-wg project with great interest.<p>My personal wish is for a modern and first-class replacement for the various AsciiDoc-to-PDF flows. I&#x27;d bet on CSS Paged Media, although it&#x27;s been a long haul. The current options (FO&#x2F;XSLT, dblatex, and asciidoctor-pdf) all have pretty severe limitations.<p>If any of the AsciiDoc&#x2F;AsciiDoctor devs are reading this, thank you 1,000,000 times for your efforts. It&#x27;s an extremely complex project and I am grateful there&#x27;s a community of talented people working on it.')