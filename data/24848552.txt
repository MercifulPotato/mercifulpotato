Item(by='gnulinux', descendants=None, kids=None, score=None, time=1603292799, title=None, item_type='comment', url=None, parent=24848480, text='It is undecidable. If we had an algorithm to compute # of steps in Busy Beaver (n) (let&#x27;s call it S(n)) then for all Turing Machines with n states run S(n) steps. If it doesn&#x27;t halt, it will never halt. Halting problem solved! (well, blank tape halting problem, which is as hard as halting problem).<p><a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Busy_beaver#Proof_for_uncomputability_of_S(n)_and_%CE%A3(n)" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Busy_beaver#Proof_for_uncomput...</a><p>&gt; On reflection though, that&#x27;s not just a bargain, it&#x27;s also an outright contradiction; we know no such program exists, so making this offer doesn&#x27;t affect the market at all. Perhaps there&#x27;s a sneakier variation on this.<p>We do know Busy beaver 1 to 4 (via brute force). We have lower bound for 5. It&#x27;s definitely possible to compute more of these values. Uncomputable does not mean not possible to compute, it means you cannot find an algorithm that solves the problem in general.<p>So, maybe by dedicating bizarre amount of compute, you could find BB # 1M to claim your $1M from me. Get rich quick!')