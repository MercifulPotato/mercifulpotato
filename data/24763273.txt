Item(by='CaptArmchair', descendants=None, kids=None, score=None, time=1602575589, title=None, item_type='comment', url=None, parent=24762980, text='&gt; When put like that, it’s amazing that we didn’t come up with this idea earlier.<p>It&#x27;s called time-sharing and it existed in the 1960&#x27;s. [1]<p>[1] <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Time-sharing" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Time-sharing</a><p>The difference between time-sharing and serverless is that the former solved the issue of expensive personal computing, until cheap personal computers took over that market. The latter solves perceived expensive computing on the &quot;server&quot; side.<p>But what does it serverless solve exactly? It doesn&#x27;t solve a technical problem, rather addresses concerns on the business side. Serverless solves a cost problem.<p>First, computing needs aren&#x27;t linear, they fluctuate. And so, there&#x27;s a problem of under- and over-utilization vs availability of resources. Serverless approaches computing power like tapwater: you&#x27;re essentially paying for the CPU time you end up using.<p>Second, elasticity. Instead of having staff struggle - losing time - with the fine intricacies of autobalancers, sharding and what not; you outsource that entirely to a cloud provider. Just like a tap, if you need more power, you just turn the tap open a bit more.<p>Finally, serverless services abstract any and all low level concepts away. Developers just throw functions in an abstraction. The actual processing is entirely black box. No need to worry about the inner details of the box.<p>Sounds like a good deal, right?<p>&gt; Like running your own power plant to serve your factory, except you also have to worry about security and constant maintenance, along with all the moving parts that surround a server.<p>Well... no. Outsourcing all of that to a third party cloud computing vendor doesn&#x27;t dismiss you from your responsibility. All it does is shift accountability to the cloud provider who agreed to take you on as their customer. Securing your factory still very much includes deploying a secure digital solution to manage your machinery and process lines.<p>Plenty of industries wouldn&#x27;t even remotely consider outsourcing critical parts of their operations, and this would include digital infrastructure. And this is regardless of the maturity of serverless technology. Risk management is a vast field in that regard.<p>Then there&#x27;s legal compliance. There are plenty of industry specific regulations that simply don&#x27;t even allow data to be processed by third party cloud services unless stringent conditions are adhered to. Medicine, banking and insurance come to mind.<p>Finally, when it comes to business critical processes, businesses aren&#x27;t interested in upgrading to the latest technology for the sake of it being cutting edge. They want a solution that solves their problem and keeps solving that problem for many years to come. Without having to re-invest year after year in upgrades, migrations and changes because API&#x27;s and services keep shifting.<p>Does that mean that there isn&#x27;t a market for serverless computing? Of course there is. Serverless computing is a JIT solution. It&#x27;s an excellent solution for businesses in a particular stage of their growth. And it closes the gap for plenty of fields where there really is a good match. I just feel that &quot;maintaining your own server is completely nuts&quot; is a bit overconfident here;')