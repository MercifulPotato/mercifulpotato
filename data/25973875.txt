Item(by='KirillPanov', descendants=None, kids=[25975266, 25974054], score=None, time=1612047407, title=None, item_type='comment', url=None, parent=25970690, text='If anybody knows how to forcibly override the &quot;pixels per mm&quot; reported by a monitor, you will be my hero forever.<p>Every solution I&#x27;ve found so far (including the QT&#x2F;GTK environment variables for overriding DPI) ends up instead causing scaling during compositing, rather than getting the apps to rasterize their fonts at the correct size in the first place.  The worst offenders are anything derived from Chromium (i.e. qutebrowser, who say the problem is a QtWebEngine bug that they can&#x27;t fix).<p>I&#x27;m using sway, but almost all the Wayland compositors lack this override-the-monitor-reported-DPI functionality, because (for good reason) their philosophy is to securely multiplex the hardware, not abstract it away.  They just pass through whatever values the monitor reports, to the client.<p>IMHO this does not make sense for physical pixel size, because it disregards the physical distance between the user&#x27;s face and the pixels.  What you <i>really</i> want to size your fonts based on is the number of <i>arc-radians</i> (or arc-degrees) per pixel, measured at the user&#x27;s eyeball.  In order to compute that you need to know both the physical pixel size (which can be queried from the device) and the physical eyeball-screen distance (which will need to be user-configurable).')