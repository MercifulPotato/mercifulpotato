Item(by='chubot', descendants=None, kids=None, score=None, time=1604379825, title=None, item_type='comment', url=None, parent=24975431, text='Reminds me of Joel Spolsky&#x27;s 2006 post on languages.  And it even mentions OCaml !!<p><a href="https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2006&#x2F;09&#x2F;01&#x2F;language-wars&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2006&#x2F;09&#x2F;01&#x2F;language-wars&#x2F;</a><p>FWIW I can see this igniting more arguments.  And it is for sure interesting that he mentioned as Python the 0.5 that&#x27;s on the edge, and Ruby on Rails that&#x27;s a little further on the edge.<p>And Ruby on Rails turned out to be phenomentally successful for many billion dollar companies since 2006.<p><a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24279611" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24279611</a><p>But that doesn&#x27;t make Joel wrong.  If you adjust 2006 to 2020, the same point can be made with different languages&#x2F;platforms.<p><i>I know that typically on new projects there’s a long evaluation period where you decide what technology to use, along with lots of debates that include some crazy person actually wasting quite a lot of time evaluating Squeak and Lisp and OCaml and lots of other languages which are totally, truly brilliant programming languages worthy of great praise, but just don’t have the gigantic ecosystem you need around them if you want to develop web software.</i><p><i>These debates are enormously fun and a total and utter waste of time, because the bottom line is that there are three and a half platforms (C#, Java, PHP, and a half Python) that are all equally likely to make you successful, an infinity of platforms where you’re pretty much guaranteed to fail spectacularly when it’s too late to change anything (Lisp, ISAPI DLLs written in C, Perl), and a handful of platforms where The Jury Is Not In, So Why Take The Risk When Your Job Is On The Line? (Ruby on Rails).</i>')