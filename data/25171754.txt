Item(by='dragonwriter', descendants=None, kids=[25171987], score=None, time=1605984405, title=None, item_type='comment', url=None, parent=25170837, text='&gt; This is not a good idea at all.<p>It&#x27;s an excellent idea.<p>&gt; One of the main point of a REST API is to abstract away your internal data structures for the clients that makes sense.<p>One of the points of database views, which are much older than REST, is to abstract away your internal data structures behind facades that make sense for the clients.<p>&gt; Also refactoring and database migrations should NOT change the public API of any software, especially not a REST API.<p>That&#x27;s...inaccurate. Refactoring, including of the base storage layer shouldn&#x27;t. The <i>exposed</i> schema of a database <i>is</i> an API, which is logically distinct from the base storage layer. Some designs may just expose base tables and handle mapping for the client outside of the database, but there&#x27;s no fundamental reason it has to be that way.<p>&gt; Now, when using something like this, even the most basic change will have a ripple effect on your whole infrastructure and break every client.<p>No, it won&#x27;t. PostgREST exposes a single schema. There&#x27;s no reason that schema should contain low-level implementation, just the views defining the public API.')