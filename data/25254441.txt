Item(by='chaorace', descendants=None, kids=[25255307, 25254547], score=None, time=1606748662, title=None, item_type='comment', url=None, parent=25254314, text='&gt; In Rust there generally isn&#x27;t a stack trace, because you generally can know where the error comes from.<p>I don&#x27;t understand. Does that mean that there&#x27;s <i>sometimes</i> a stack trace? Why would it matter if you had other ways to know where the error comes from? Surely you could say the same thing for the majority of programming languages.<p>Sure, Rust can wrap errors via the type system, but I don&#x27;t <i>think</i> that&#x27;s a compiler-level guarantee. Maybe it&#x27;s just a language design decision, then?<p>&gt; Generally you get an enum with the general error type, and maybe a way to access the specific error.<p>That seems odd to me! Is the presence of a pointer to an error object something that&#x27;s implementation-specific? If so, is it not typically done in the standard library? As far as you can speculate, what&#x27;s the design justification for that?')