Item(by='layoutIfNeeded', descendants=None, kids=[24948262, 24948608, 24949769, 24948546, 24948284, 24948173, 24949096, 24948162], score=None, time=1604101858, title=None, item_type='comment', url=None, parent=24944777, text='Yikes. Swift is becoming horribly complex and opaque. Yet another set of @shoehornedKeywords... Colored functions...<p>Let me ramble a bit here.<p>Apple’s platforms had always put users before developers, that’s why they were so successful. They’ve built the best user experience by far using nothing but a simple Smalltalk-esque language from the 80s. Look at their frameworks: CoreAudio, CoreAnimation, UIKit... Tremendously powerful, and the best in their league - <i>in terms of possibilities, not necessarily developer experience!</i> Others were shoving garbage-collected virtual machines in their devices, piling abstraction over abstraction, “fluent APIs” (remember those?); meanwhile Apple built an empire with this quirky dynamic language (plus some C++ under the hood), where you had to do manual reference counting as late as 2012! Developers were <i>livid</i>. “How am I supposed to program in this weird language?” “AutoLayout? Why can’t it be just like CSS or something??”\nBut Apple didn’t give a shit, they knew their platform, their frameworks were the best, period. And whiny devs had to adapt to gain access to the richest cohort of users in the computing landscape.<p>With Swift and SwiftUI we seem to be heading towards a different future, and I’m yet to be convinced that it’s the right one.')