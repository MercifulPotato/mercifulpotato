Item(by='anuraaga', descendants=None, kids=None, score=None, time=1609409879, title=None, item_type='comment', url=None, parent=25582962, text='I work on OpenTelemetry Java, including a Java Agent that is originally a fork from Datadog&#x27;s excellent base which they contributed to the project.<p>Protobuf definitely has a sizable footprint, but I guess it&#x27;s still ok compared to other popular libraries like Guava and Jackson. I suspect Richard is saving an article for gRPC+Netty which is extremely large :-) Lots of classes, and every shaded Netty on a classpath has its own arena of pooled buffers.<p>Wire format I like well enough though. I think protobuf does provide good expressiveness to allow nesting if that fits the bill, or more flat structures, where it is a joy to output repeated fields completely independently and even interleaved in a stream.<p>It&#x27;s unclear to me if protobuf itself is a bad wire format for telemetry or heavy use of nesting is. The OpenTelemetry Protocol is highly nested to be completely denormalized. This reduces data on the wire (or not so much compared to gzip, but can be considered a hand-coded gzip), but it means all data has to be traversed before any can be sent to compute the length prefix. I don&#x27;t know which wins in practice - I&#x27;ve just never seen any comparison of the exact same data with different formats. I&#x27;m hoping the CPU cache alleviates the double traversal though. But a less nested format in protobuf would easily be possible.')