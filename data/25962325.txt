Item(by='ohazi', descendants=None, kids=[25964593, 25964141], score=None, time=1611953376, title=None, item_type='comment', url=None, parent=25960206, text='&gt; using a commercial FPGA to ASIC service<p>This was not an FPGA conversion.<p>&quot;Commercial FPGA to ASIC service&quot; usually refers to Altera&#x2F;Intel&#x27;s HardCopy or Xilinx&#x27;s EasyPath. EasyPath is where Xilinx sells you defective FPGAs for way cheaper, but with just enough of the right parts of the fabric working that your design can still fit and work properly. HardCopy is where Altera sells you a small number of metal mask layers to implement your design on a much smaller&#x2F;faster sea-of-gates style ASIC that mimics the non-reprogrammable parts of the target FPGA.<p>The Raspberry Pi Foundation did neither of these things. They <i>tested</i> their design on an FPGA, which is common, and then used standard cell libraries and IP blocks provided by the fab and their partners to get through the <i>normal</i> ASIC workflow.<p>It turns out it&#x27;s just easier and faster to tell the tools to automatically place and route the core complex than to do a careful floorplan. Also given that the RP2040 is apparently &quot;very overclockable&quot; (the PIO bitbanged HDMI output bumped the clock to something like double the nominally guaranteed maximum), the merits of doing it this way seem sound.')