Item(by='bjoli', descendants=None, kids=None, score=None, time=1611569024, title=None, item_type='comment', url=None, parent=25898494, text='Anyone writing scheme&#x2F;racket like python is in for a bad time. I think languages either tend towards mutability or immutability. In clojure for example there is much emphasis on parallelism, which reflects itself in its choices of immutable data structures and atomic updates.<p>In scheme, despite not being traditionally multithreaded as a standard, any computation can always be returned to several times due to call&#x2F;cc. This means that even many cases of hidden otherwise &quot;safe&quot; mutability might lead to bad results.<p>Which is why scheme tends towards immutability. That is the safe thing, culturally and also by design. Whereas the happy path for python is generally one of mutability, the happy path for scheme is not.<p>Which is also something that I try to keep in mind when learning a new language. It is very tempting to try to write scheme in another language, but doing so in python will lead to sadness.<p>I have seen so many people trying to learn scheme by trying to write python in scheme, which usually ends up being awkward, slow and buggy in addition to not working with call&#x2F;cc or delimited continuations.<p>I had an epiphany about this when trying to write scheme in rust. I took a step back and realized that I was the python programmer :)')