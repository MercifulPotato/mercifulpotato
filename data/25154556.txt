Item(by='ralph87', descendants=None, kids=[25154710, 25155573, 25158141, 25156701, 25155225, 25158391, 25161839, 25154802], score=None, time=1605821106, title=None, item_type='comment', url=None, parent=25154300, text='Contra opinion: the VM option reduced the service interface between Windows and Linux to a single kernel implementation and a few drivers, rather than every possible userspace program ever written. It&#x27;s an amazing and obvious trade off. My inner architecture astronaut appreciates all the ideas in this post, but I&#x27;ve been trying to kill that guy for over a decade now. The bottom line is WSLv1 design SUCKED precisely because it tried to cross-breed 2 extremely complex semantically incompatible systems.<p>Example: Linux local filesystem performance mostly derives from the dentry cache. That cache keeps a parsed representation of whatever the filesystem knows appears on disk. The dentry cache is crucial to pretty much any filesystem system call that does not already involve an open file, and IIRC many that also do. Problem is, that same cache in WSL must be subverted because Linux is not the only thing that can mutate the NTFS filesystem - any Windows program could as well. This one fundamentally unfixable problem alone is probably 80% the reason WSL1 IO perf sucked - because the design absolutely required it.<p>Solutions are rip out a core piece of kernel functionality, and in the process basically taking over ownership and maintenance for ALL code anywhere in the kernel assuming the existence of said cache, engineer something that is somehow better, and support this in perpetuity, including any semantic mismatches that turn up much later that were never designed for<p>The idea of merged ps output where Windows binaries would show up in the Linux &#x2F;proc. How would you even begin to implement that without confusing EVERY process management tool ever written that interfaced with &#x2F;proc? What about &#x2F;proc&#x2F;...&#x2F;environ? On UNIX that has no character set. On Windows it is Unicode.<p>A trillion problems like this made WSL1 a beautiful nightmare. Glad it was tried and from watching the tickets, that team bled heroically trying to make it all work, but ultimately, I&#x27;m also glad it&#x27;s gone, because the replacement is infinitely easier to engineer, maintain, and use, and that team earns its quarterly bonus much more easily. Everyone wins, except the astronauts, but as experience teaches us they never do.')