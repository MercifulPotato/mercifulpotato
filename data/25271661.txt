Item(by='ohazi', descendants=None, kids=None, score=None, time=1606866803, title=None, item_type='comment', url=None, parent=25270783, text='It&#x27;s a &quot;let&#x27;s see where this takes us&quot; kind of project.<p>The big microprocessors and SoCs that you&#x27;d find in a laptop or smartphone have completely escaped anybody&#x27;s ability to scrutinize the design. Performance is excellent, but there&#x27;s so much stuff baked into the silicon that nobody actually knows about <i>all</i> of the quirks and hidden misfeatures. You can assume that most chips in this category are backdoored.<p>At the other end, most &quot;secure&quot; microcontrollers are a joke. Publicly available datasheets just list a pile of checkbox items for lazy compliance people. You need to sign an NDA to have any hope of actually talking to the hardware, and then both the designer and user are expected to trust that the vendor&#x27;s secret implementation isn&#x27;t utter trash. I&#x27;ve had to design products that relied on these microcontrollers and I just don&#x27;t trust them -- This is the main reason I&#x27;m not a big fan of security tokens like Yubikey. Given the ease and regularity with which these chips are broken, you can assume that most chips in this category are crap.<p>So where do we go from here? Desktop performance is nice, but there are lots of applications that don&#x27;t need it, especially stuff like basic communication and password management -- two areas where we also don&#x27;t want to trust to an almost-certainly-compromised SoC. Can we build a usable computing environment around a microcontroller? Probably -- you can get beefy microcontrollers with lots of memory and pseudo memory protection that can &quot;run&quot; something like Windows 95. FPGAs in the &quot;reasonably accessible&quot; category have also gotten good enough that you can plop down a few processor cores, peripherals, and bus interconnects. More importantly, the open source tooling and SoC-builder platforms like LiteX have seen enough development that experimenting with this sort of thing is actually practical now.<p>Also, the funding goal &#x2F; unit price is high because one of the explicit goals for the campaign is for bunnie and xobs to spend about a year working on the software, an aspect of crowdfunded electronic gadgets that&#x27;s frequently overlooked. This thing isn&#x27;t going to be useful if they just crank out the hardware as cheaply as possible and toss it over the fence. They have a history of doing really good work, and the fact that they&#x27;re interested in actually taking the time to develop this further leads me to believe that they&#x27;re likely to do a good job. I don&#x27;t think I would have backed the project if someone else was behind it.<p>I would consider the project a success if I can eventually store my password database on a precursor, so that I don&#x27;t need to keep copies on untrusted devices like phones and laptops. There are some usability questions around how this might work, and whether there&#x27;s a way for the precursor to authenticate on behalf of the device in some cases, but I think it&#x27;s pretty doable, and I like this approach a lot more than something like a Yubikey.')