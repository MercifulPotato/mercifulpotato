Item(by='skohan', descendants=None, kids=None, score=None, time=1610004876, title=None, item_type='comment', url=None, parent=25667402, text='That&#x27;s an interesting observation - as someone who&#x27;s built a few ECS implementations, one of the things I&#x27;ve always taken for granted is that things like cache line size are more or less set in stone, given the ubiquity of x86, so it&#x27;s interesting to consider that the rise of ARM might create additional complexities there.<p>I&#x27;m a bit of two minds about this: on the one hand, for a long time I&#x27;ve wanted a language for writing allocators which is more explicit about memory, and offers good abstractions for low-level memory operations (maybe Zig is going in this direction).  In some sense, it feels like the move towards programmers thinking less about memory management has been a bit of a dead-end, and what we really want is better tools for memory management.  Fragmentation in terms of how processors handle memory goes against this goal in some ways.<p>On the other hand, it&#x27;s a bit of a &quot;holy grail&quot; to imagine a hardware stack which obviates the need for memory optimization, and really does treat loading from and storing to memory anywhere on the heap as the same.  But I imagine that the interesting things which the M1 is doing with memory are helping a lot with the worst case performance, and maybe even average case performance, but they&#x27;re probably not doing much for the best case.')