Item(by='mehrdadn', descendants=None, kids=None, score=None, time=1610141150, title=None, item_type='comment', url=None, parent=25690483, text='You&#x27;re missing my point entirely. They <i>don&#x27;t need</i> to solve this by keeping the variable real at every step or anything like that. What they need to do is to ensure the final solutions are real. Which means they need to solve it in the complex domain entirely and then filter out non-real solutions at the end, where they have the final magnitudes of the real and imaginary components. The only place that would run into trouble is where the imaginary components are small but nonzero, where you&#x27;d just expect it to use some tolerance threshold as the cutoff, but that obviously isn&#x27;t the case in the first example (hence my comment).<p>There&#x27;s no reason that the algorithm <i>must</i> fail on univariate real polynomials if it can&#x27;t work equally well on arbitrary functions with arbitrary domains. It&#x27;s trivial for a symbolic engine to recognize a univariate polynomial. And practically speaking it&#x27;s <i>the</i> job of a computer algebra system to recognize different well-known classes of functions and treat them as well as it can. What I suspect likely happened here is they&#x27;ve been just so busy dealing with the more general problems (which are far more difficult) that they haven&#x27;t gotten around to implementing many better methods for the special cases (like polynomials). Which I sympathize with, as I&#x27;d have virtually no clue how to solve some of the more general problems to begin with.')