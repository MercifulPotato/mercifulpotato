Item(by='felixhuttmann', descendants=None, kids=None, score=None, time=1608620961, title=None, item_type='comment', url=None, parent=25500932, text='Examples:<p>1) Long-living connections. One part of your application offers large file downloads, so that your users sometimes take significant amount of time to download, and the error rate shall be low. Think people doing `curl -L <a href="https:&#x2F;&#x2F;github.com&#x2F;...&#x2F;some-commit-hash.zip" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;...&#x2F;some-commit-hash.zip</a>` in CI. I&#x27;d guess this is not served by github&#x27;s ruby monolith. Or you use websockets. Redeployments typically stop all running tcp connections. Splitting this part off allows you to redeploy the main application frequently without disrupting websockets or downloads.<p>2) Reduce startup time. For some languages&#x2F;ecosystems, startup time is significant and scales with the size of the codebase. For example, a typical java enterpise app like keycloak has half a million lines of code and takes about 1 minute only for startup. This is even more relevant when running things in AWS Lambda or google cloud run, and can also be relevant for integration tests. Having several deployables each handling a subset of the functionality may give you better cold start times than having one that contains all code.<p>3) Resiliency toward resource exhaustion. If two functionalities are served in the same process or VM, and one of them<p>* has a memory leak<p>* uses the connection pool to the database inefficiently and thereby clogs it up<p>* has an endpoint that is overloaded by a misbehaving client<p>then the other functionality is also affected, which can be avoided by putting them into separate processes&#x2F;containers&#x2F;VMs. Splitting services allows to reduce the effort spent on resource hygiene and rate limiting.<p>4) Binary size. It is often convenient to compile static info or asset-like things into the application, think geoinformation on timezones. This bloats the binary, splitting that part off into an independent deployable can give you a much smaller binary for the main application.')