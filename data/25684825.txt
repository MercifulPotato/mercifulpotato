Item(by='Someone', descendants=None, kids=None, score=None, time=1610114752, title=None, item_type='comment', url=None, parent=25684465, text='You’re not going to handle the Ackermann function that way, but for both simple recursive and mutually recursive calls, I would think you can often infer up front how many loops there will be, or just maintain a single counter counting the number of recursive calls, instead of counting using a linked list of stack frames.<p>Now, whether that’s worth the implementation effort, of course, would depend on whether the construct is used a lot, and that’s a catch-22.<p>For functions jumping into other functions, I guess that, when the program counter says you’re in <i>baz</i> while the first stack frame says <i>foo</i> got called, you could infer that <i>foo</i> called <i>bar</i> and <i>bar</i> called <i>baz</i> from metadata that the compiler would have to add.<p>Now, if <i>foo</i> can get into <i>baz</i> along multiple routes, you would have to record something, but I would guess there are plenty of those simpler cases. For those, the main challenge would be to infer recursion count for a recursive call.')