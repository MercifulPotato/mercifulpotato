Item(by='baybal2', descendants=None, kids=None, score=None, time=1610611529, title=None, item_type='comment', url=None, parent=25772078, text='&gt; If it notices that the driver&#x27;s head has turned, it adjusts the HUD elements being projected in less than 300 milliseconds to compensate.<p>It is very slow.<p>People feel discomfort when different &quot;overlays&quot; lag by as little as few tens of milliseconds.<p>People feel uncomfortable working with touchscreens because they feel &quot;unnatural&quot; when they push the button, and it only reacts, and plays animation half a second later.<p>What people say what feels most &quot;fake&quot; about touchscreens is  stuttering, and lagginess.<p>I believe you really need to go to sub-millisecond levels of latency for it to feel &quot;glued&quot; to the real world.<p>I had a touchscreen project in the musical instrument space, with a pressure sensitive touchscreen, where button animation had to match the touchscreen pressure.<p>Even with all tricks, lag on Android was making it completely unusable, not to say its audio API is completely unusable for serious audio work. In the end we went bare metal with it.<p>The lowest latency we got was 18ms by using the touchscreen interrupt to set the sensor value as a pointer to bitmap image of a button animation frame.<p>Yet, some more experienced musicians said that it was still felt off, from how real instrument reacts.<p>I&#x27;m thinking to go full FPGA next time I need to do any latency sensitive HMI with kinetic-screen interaction.')