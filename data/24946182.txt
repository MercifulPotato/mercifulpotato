Item(by='craigkerstiens', descendants=None, kids=[24946453, 24946961, 24946756], score=None, time=1604087330, title=None, item_type='comment', url=None, parent=24945673, text='Guest here. The context is Uber was on MySQL which by default doesn&#x27;t respect (or at least in their version and setup at the time) case sensitivity. To MySQL craig is the same as Craig when matching.<p>Their app for search relied on this. The solution for them was the citext data type to create a case insensitive string - <a href="https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;13&#x2F;citext.html" rel="nofollow">https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;13&#x2F;citext.html</a><p>I&#x27;m fairly familiar with Postgres, but have not heard of a collation that tackles case insensitivity without tweaking the system itself? Postgres you can tweak this at the system level, but I&#x27;ve not seen it in the wild and as per the docs you&#x27;re now non deterministic. For MySQL it appears you can change this, but seems a surprising default for them they expected case insensitivity.<p>Yes, another option could have been indexing and searching on lower or upper casing, but they wanted the minimal change to their app.<p>There was once a conference talk they gave about their migration process from MySQL-&gt;Postgres, but I&#x27;m not immediately able to find the video online so it may have been removed.')