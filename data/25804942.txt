Item(by='tromp', descendants=None, kids=None, score=None, time=1610826959, title=None, item_type='comment', url=None, parent=25803288, text='Note that f(n) = O(g(n)) denotes an asymptotic upper bound. So it would be correct (if confusing) to say that 2n+3 = O(n^2). This is important for use in algorithmic complexity because we may not always be able to determine the running time even up to a constant, but can more easily infer an upper bound.<p>Using Omega instead denotes an asymptotic lower bound.\nTo denote both, you use Theta:\nf(n) = Theta(g(n)) means that for two constants 0 &lt; c1 &lt; c2 and large enough n, we have c1 &lt; f(n)&#x2F;g(n) &lt; c2.<p>Finally, little o denotes vanishing behaviour. f(n) = o(g(n)) when f(n)&#x2F;g(n) goes to 0 in the limit.')