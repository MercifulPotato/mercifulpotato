Item(by='brennen', descendants=None, kids=None, score=None, time=1604004415, title=None, item_type='comment', url=None, parent=24929791, text='&gt; You think we could develop a unified data model that covers source code, static files, documentation, project management and community management as a single unified thing?<p>Realistically, not exactly, given how much space some of those things cover.<p>I do think that entities like code review are as much a part of the history of a project as the deltas to code.  Reviews not being first-class objects in the VCS itself has turned out to be a crack into which you can wedge an entire GitHub.<p>I won&#x27;t claim I know where best to draw the line here.  Better handling of large static files by default and a robust way to model relationships <i>between</i> projects obviously belong within the VCS.  On the other hand, relationships modeled in issue tracking systems and the like are also part of the software&#x27;s history, but past some level of complexity it gets much harder to imagine wedging them into something that you can pass around like you clone a Git repo.  All I can really say for sure is that it feels broken that all of this stuff lives in competing application silos.<p>(As a sidebar:  Not that you can&#x27;t jam things like review data into git-as-data-store. Gerrit does just that.  But nobody&#x27;s going to mistake that for a usable interface to code review.)<p>Anyhow, I don&#x27;t think you&#x27;re wrong about the social &amp; economic factors, but I think a different landscape with less concentration of power could have shaken out if (for example) easy code review had been baked in and host-agnostic early on.  Fully p2p architectures aren&#x27;t feasible, or even necessarily desirable, for a lot of problems - but it shouldn&#x27;t be too much to ask that things are able to be federated and resistant to capture by a single vendor.<p>&gt; Still... I completely agree that it would be awesome to have a more self-sovereign computing architecture writ large. Iâ€™m just pessimistic we can get there from here.<p>Yeah, fair enough. I am myself boundlessly pessimistic about the future of computing generally.')