Item(by='weinzierl', descendants=None, kids=None, score=None, time=1612204297, title=None, item_type='comment', url=None, parent=25976844, text='&gt; <i>&quot;And the best part of an approach like this: browsers could just ship better defaults for common fonts. There aren&#x27;t that many fonts in use, and at &lt;=64bit of information needed per font, browsers could easily ship fallback configuration for the ~1000 most common web font names.</i>&quot;<p>If we think this thought further we could separate the font metrics from the actual font shapes. The metrics are all that is needed for layout and the metrics data is tiny. We could load the metrics quickly then do layout and shape data loading in parallel.<p>This idea isn&#x27;t new. TeX works that way. In fact the tiny font metrics data is <i>all</i> that TeX ever cares about and this data is enough for TeX to do its job, which is laying out the page. The actual font shapes are only read by other programs that turn the output of TeX plus the shapes into something printable or viewable.\nYou could use TeX to typeset documents with fonts you didn&#x27;t own because the metrics are not protected and publishers used to distribute the metrics to authors freely. I remember that Springer did this with their Springer customized Myriad an Minion tfm files.<p>The idea is not even TeX  specific, as far as I know Adobe used to ship their fonts with separate metrics files too. *.afm - Adobe Font Metrics were a thing.<p>Wouldn&#x27;t it be nice to come full circle and separate the layout from the rendering again?')