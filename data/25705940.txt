Item(by='mechanical_berk', descendants=None, kids=None, score=None, time=1610233112, title=None, item_type='comment', url=None, parent=25680405, text='While I do not believe Broadcom has released any documentation on the 3D hardware in the Raspberry Pi 4, you can figure out a fair amount by looking at the Mesa driver. In particular see the shader processor instruction packing code (<a href="https:&#x2F;&#x2F;github.com&#x2F;mesa3d&#x2F;mesa&#x2F;blob&#x2F;master&#x2F;src&#x2F;broadcom&#x2F;qpu&#x2F;qpu_instr.h" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;mesa3d&#x2F;mesa&#x2F;blob&#x2F;master&#x2F;src&#x2F;broadcom&#x2F;qpu&#x2F;...</a>).<p>For vertex arrays, while in theory the driver could load vec2&#x2F;vec4 F16 attributes into the vertex shader as-is, AFAICT the Mesa driver does not attempt to do this; they get converted to F32 as they are loaded from main memory. There <i>would</i> be downsides to getting rid of this conversion... in particular the hardware does not support F32-&gt;F16 conversions when loading attributes, so the driver would have to recompile the shader if you switched the vertex arrays to F32 (or perhaps more likely recompile the shader when it realises you are using F16 vertex arrays rather than F32).<p>In any case, the hardware does support zero overhead F16-&gt;F32 conversions when loading attributes, so you should not see a performance <i>drop</i> when switching vertex arrays to F16! The performance should go up slightly as less data needs to be loaded from main memory. If you&#x27;re seeing an 80% performance drop something has gone terribly wrong!')