Item(by='namelosw', descendants=None, kids=[25940758], score=None, time=1611830982, title=None, item_type='comment', url=None, parent=25933121, text='I can get what the author is trying to say. But the article missed the most important point - OO for dynamically typed languages like Python&#x2F;Ruby&#x2F;JavaScript is for polymorphism, so that you can write a function accept an object that has print() method without knowing what it is.<p>Languages extensively use the &#x27;bag-of-functions&#x27; style usually have a way to dispatch functions based on type, so that people can extend packages without having to modify the source code. It could be multi-methods in Clojure, protocols in Elixir, polymorphic modules in OCaml, or even powerful ones like type classes in Haskell.<p>But yeah, I agree &#x27;bag-of-functions&#x27; is generally a net win in terms of language design - if the polymorphism counterpart exists.')