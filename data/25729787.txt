Item(by='mimixco', descendants=None, kids=None, score=None, time=1610377553, title=None, item_type='comment', url=None, parent=25729521, text='Big changes in architecture are often catastrophic and result in far more debugging costs than just fixing the current product piecemeal. I know that sounds terrible and unfun, but read Fowler on the concepts of refactoring and you&#x27;ll see that Job #1 is maintaining a working product. In other words, don&#x27;t throw the baby out. Change the bath water.<p>In refactoring, you attack one piece of &quot;code smell&quot; at a time. You can improve one variable name at a time, for example, and test to make sure it works. You can refactor a function and not touch any of its dependencies and see if it still works.<p>The worst thing would be to start a big rewrite and then leave the company without anyone to fix the old thing or complete the new one. I totally agree with you that documenting the current monster is a must-do. As you write that doc, you&#x27;ll see where the biggest code smells are. Things that make no sense in the doc or are hard to relate together in writing are probably poorly designed code.<p>Hope that helps!')