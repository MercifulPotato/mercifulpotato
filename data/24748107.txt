Item(by='cbkeller', descendants=None, kids=None, score=None, time=1602442505, title=None, item_type='comment', url=None, parent=24746577, text='I see what you mean, but from my perspective what this argument is missing is the context that a large and important subset of the scientific community has <i>never moved to Python to begin with</i>.<p>In other words, there is an even crankier and older community for which Julia may be the first actual change in a very long time.<p>This is particularly the case in HPC, where everyone still uses Fortran, C, or C++, and has never moved nor ever will move to Python because Python is fundamentally unsuited to these workloads. But in <i>some</i> cases, Julia is [1].<p>The best differential equation solvers (e.g., SUNDIALS [2] for a modern example) have been written in FORTRAN for the last 50 years. If Julia can challenge Fortran as the go-to language for this type of work (e.g. DifferentialEquations.jl [3] and SciML), that would hardly count as excessive churn.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;jeff-regier&#x2F;Celeste.jl" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jeff-regier&#x2F;Celeste.jl</a><p>[2] <a href="https:&#x2F;&#x2F;computing.llnl.gov&#x2F;projects&#x2F;sundials" rel="nofollow">https:&#x2F;&#x2F;computing.llnl.gov&#x2F;projects&#x2F;sundials</a><p>[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;SciML&#x2F;DifferentialEquations.jl" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;SciML&#x2F;DifferentialEquations.jl</a>')