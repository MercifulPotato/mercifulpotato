Item(by='mercer', descendants=None, kids=[25543388, 25543091], score=None, time=1608983996, title=None, item_type='comment', url=None, parent=25540583, text='Elixir&#x27;s&#x2F;Phoenix&#x27; LiveView (and clones&#x2F;similar approaches). It&#x27;s been discussed plenty on HN, so I don&#x27;t think I need to elaborate too much. But I&#x27;ll just say that as I&#x27;m using it in more and more new projects and adding it piecemeal to existing ones, I&#x27;m constantly amazed by how much complexity just disappears, and how pleasant it all is to work with.<p>I do feel that it&#x27;ll take another year or two for all of it to &#x27;mature&#x27;, though.<p>For one, I&#x27;m not a big fan of how it still relies on &#x27;old-fashioned&#x27; templating, but I&#x27;ve been looking into Surface [1] as a solution to that (it uses a more React-like component-based approach).<p>I also find that there&#x27;s often confusion about best practices. About what goes where exactly, asking myself whether to keep state in the top-level LiveView is best, or perhaps too much based on the old client-side React&#x2F;Redux paradigm and less necessary now that fetching data is a server-side-only DB call away (and using PubSub for any inter-LiveView communication).<p>But even with some of these &#x27;issues&#x27;, it&#x27;s probably the most fun I&#x27;ve had building interactive web apps!<p>[1]: <a href="http:&#x2F;&#x2F;surface-demo.msaraiva.io&#x2F;getting_started" rel="nofollow">http:&#x2F;&#x2F;surface-demo.msaraiva.io&#x2F;getting_started</a>')