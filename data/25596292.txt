Item(by='jimis', descendants=None, kids=[25597055, 25596900], score=None, time=1609443728, title=None, item_type='comment', url=None, parent=25594693, text='I would personally want to see the opposite: <i>disable PLAIN or LOGIN or HTTP basic auth methods or plaintext HTML password-entry forms, and never ever send a password without a digest challenge-response method, even over TLS</i>. Of course first the browsers would have to implement safer alternatives:<p><a href="https:&#x2F;&#x2F;bugzilla.mozilla.org&#x2F;show_bug.cgi?id=472823" rel="nofollow">https:&#x2F;&#x2F;bugzilla.mozilla.org&#x2F;show_bug.cgi?id=472823</a><p><a href="https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;chromium&#x2F;issues&#x2F;detail?id=1160478" rel="nofollow">https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;chromium&#x2F;issues&#x2F;detail?id=116047...</a><p>Why? Because I can&#x27;t trust all the 100s of companies and I login to, and their 1000s of employees. I don&#x27;t want them to choose storing my password securely or not. I want them to be forced to do that. Like I choose &quot;HTTPS everywhere&quot;, I want to choose &quot;SCRAM-SHA-512 everywhere&quot; or similar.<p>It&#x27;s technology that has to provide me guarantees, and user education must only complement that.<p>Unfortunately we are far from that. Passwords are flying plaintext-inside-HTTPS, with various risks:<p>* database storing passwords insecurely<p>* passwords being stolen on the authenticating server (either because of server being pwned or from internal eyes).<p>* passwords flying fully in plaintext (no TLS) in the internal network behind the authenticating server.<p>* self-signed HTTPS MITM attacks on already self-signed-cert websites (especially dangerous on intranet websites inside companies; you&#x27;d be surprised how difficult it is to setup proper PKI and internal CAs).')