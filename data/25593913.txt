Item(by='steveklabnik', descendants=None, kids=None, score=None, time=1609430970, title=None, item_type='comment', url=None, parent=25593852, text='So yes, that is because it is unsafe, according to Rust&#x27;s definition of safety. However, there are tools you can use to remove this.<p>First of all, I find that many people aren&#x27;t using multiple threads, and therefore, what they want is a thread-local, not a static. For that, you can use <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;stable&#x2F;std&#x2F;macro.thread_local.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;stable&#x2F;std&#x2F;macro.thread_local.html</a><p>If you do need a static, then there are libraries like <a href="https:&#x2F;&#x2F;docs.rs&#x2F;lazy_static&#x2F;1.4.0&#x2F;lazy_static&#x2F;" rel="nofollow">https:&#x2F;&#x2F;docs.rs&#x2F;lazy_static&#x2F;1.4.0&#x2F;lazy_static&#x2F;</a> and <a href="https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;once_cell" rel="nofollow">https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;once_cell</a> to help too. We have talked about adding something like this to the standard library, but it hasn&#x27;t landed yet. <a href="https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;74465" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;74465</a> is the tracking issue for when it does. The reason that we don&#x27;t have this yet is that it is not super urgent, given that the libraries already exist.<p>Now, both of those give you <i>immutable</i> statics, but that&#x27;s where interior mutability comes in. As you can see from the thread_local examples, you can use a RefCell there, and if your type is simple enough, maybe even regular Cell. For lazy_static or once_cell, you may want to use Mutex&lt;T&gt;, or RwLock&lt;T&gt;, or some other type. For simple integers, the various Atomic* types might be better, for example. The reason this isn&#x27;t built in is exactly because there are so many options; people need all of these specifics, so we have to provide them, so there&#x27;s no single built-in thing.')