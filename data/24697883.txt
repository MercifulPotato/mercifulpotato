Item(by='gwd', descendants=None, kids=[24698147], score=None, time=1601993967, title=None, item_type='comment', url=None, parent=24696442, text='Did you mean &quot;stub domains and driver domains&quot;?  I&#x27;m pretty sure dom0less was used in production before it even made it into the main Xen tree. :-)<p>As I said, using Xen from a plain vanilla distro is more difficult to set up.  There are a couple of reasons for this; one of them being simply that RedHat&#x27;s main product is itself a distro, and so the setup of their product translates over directly into making it easy to be set up within other distros.<p>The companies with products shipping Xen, on the other hand, <i>primarily</i> ship fully-integrated products.  Citrix Hypervisor (was XenServer) and XCP-ng are &quot;virtualization appliances&quot; in which everything is integrated.  OpenXT and QubesOS are the same way.  Citrix Hypervisor &#x2F; XCP-ng don&#x27;t use driver domains, but they do have custom QEMU deprivileging for device models.  OpenXT and QubesOS do (as I understand it).  If you install one of these, you get a secure setup by default.<p>Fundamentally, none of these organizations would benefit directly from making it easier to set up driver domains on plain vanilla distros; and so making it easier to use driver domains on a plain vanilla distro never gets to the top of their engineers&#x27; priority queue.  If you&#x27;re interested in using Xen on a server fleet, I would definitely recommend going with XCP-ng or Citrix Hypervisor; if you want a secure desktop, definitely go with QubesOS or OpenXT.  On the other hand, if having your fleet &#x2F; desktop based on a vanilla Linux distro is a priority for you, then KVM might be a better bet at the moment.<p>But as always, &quot;patches accepted&quot;. :-)')