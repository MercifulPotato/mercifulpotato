Item(by='chaorace', descendants=None, kids=[25719657, 25724796, 25721551, 25726855, 25719662, 25722372], score=None, time=1610311145, title=None, item_type='comment', url=None, parent=25718098, text='I played with NixOS and am willing to admit that it was too difficult. It&#x27;s probably great for devops, but it&#x27;s just <i>slightly</i> too rigid for my own personal use.<p>Let me give an example: let&#x27;s say you want to use xmonad on top of Plasma. NixOS doesn&#x27;t have any simple way to configure that. You have the mutually exclusive options for one or the other, basically.<p>I know Nix <i>is</i> powerful enough to do this, if I wanted to go offroad and create custom packages&#x2F;derivations, but that&#x27;s the point where I am no longer happy with the utility&#x2F;work tradeoff. It&#x27;s what ultimately sent me packing back over to arch.<p>When I came back to arch, I was left hankering for NixOS&#x27;s declarative package management, if that could be somehow reconciled with the baseline arch package system. This led me to using the aconfmgr utility, which checks in packages and system configuration files into a home-based filetree.<p>Once you&#x27;ve got it set up, aconfmgr can regenerate your current configuration from scratch, declaratively! I was able to check the aconfmgr tree into my dotfiles repo, so now it tracks my home state AND my system state. Unlike Nix, this still uses file-based configuration, but it&#x27;s all versioned and fully reproducible, so I no longer particularly care about that caveat.')