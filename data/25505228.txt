Item(by='williamdclt', descendants=None, kids=None, score=None, time=1608636634, title=None, item_type='comment', url=None, parent=25501830, text='Inefficient as in slow? Yes it is (slower than a JOIN, of course), this is explicitely a migration strategy to move from a MS architecture to a monolithic architecture. The alternative is a big-bang migration, which is a much bigger risk.<p>&gt; So are MS relevant&#x2F;appropriate when you are trying to push stuff through the door [...]<p>That really wasn&#x27;t my argument, I was highlighting that it&#x27;s possible to do a progressive migration from MS to monolith, I was not making an argument that one is &quot;better&quot; than the other.<p>To answer this question though: no. A MS architecture will probably give slower responses than the equivalent monolithic architecture (multiple DB lookups, inter-service comms), but that&#x27;s just one element in the balance (and rarely the most important one, it&#x27;s rarely important whether you get a response in 100ms or 200ms). I&#x27;m not going to go into &quot;why microservices&quot;, there&#x27;s plenty of litterature about it on the internet by people that know much more than me.<p>A decoupled monolith is _harder_ to achieve than decoupled services. Services are decoupled because they have to. It&#x27;s perfectly normal to go from &quot;ball of mud monolith&quot; -&gt; &quot;decoupled services&quot; -&gt; &quot;decoupled monolith&quot;. These transitions do not _need_ to happen either, they&#x27;re just perfectly okay')