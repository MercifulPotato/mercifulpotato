Item(by='sa1', descendants=None, kids=[25254906, 25254887], score=None, time=1606749749, title=None, item_type='comment', url=None, parent=25254102, text='In general thinking about concurrent code in terms of threads is easier than thinking in terms of async code(it&#x27;s a lower level abstraction).<p>&gt; Can you explain this? How is tokio&#x27;s task different then elixir processes?<p>Tokio&#x27;s tasks and go&#x27;s goroutines and kotlin&#x27;s coroutines are cooperatively scheduled, i.e a infinite loop can block other tasks from running.<p>Erlang and lunatic have pre-emptive schedulers(similar to a OS scheduler) that schedule processes fairly by giving time slices to threads.')