Item(by='IncRnd', descendants=None, kids=[24749617], score=None, time=1602453981, title=None, item_type='comment', url=None, parent=24749345, text='&gt; I&#x27;m talking about the right way (IMO) of assessing the software complexity of the codebase.<p>Yes, I get that, and that is what I meant, too.  The reason is that complexity scales with the code that is checked into the build system, not just with the meta-code.<p>I&#x27;ve written a lot of code generators for various purposes, and despite the efforts to only get meta-code checked into the build system, what has happened in almost every case is the generated code has been checked into the vcs.  Of course, this depends on the particular teams (or consumers) of the generator.<p>Eventually, the checked-in code gets changed.  Maybe not right away, but it will most likely happen someday.  That is why the complexity scales with the checked-in code and not with the original meta-code.<p>There are also other force-multipliers, so to speak.  For example, if there is a vulnerability in the generated code that was checked-in, the actual attack surface of the company can be multiplied by the number of instances of generated code <i>not</i> by the meta code.  Fixing one instance doesn&#x27;t fix any other instance.  Complexity and risk are inseparably entwined and should not be looked at separately.')