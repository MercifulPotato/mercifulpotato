Item(by='Twisol', descendants=None, kids=[25334943], score=None, time=1607363973, title=None, item_type='comment', url=None, parent=25334736, text='I can only speak from using GitHub (which I&#x27;m not overall very happy with anyway), but PRs on my team can recommend review either &quot;by file&quot; or &quot;by commit&quot;, with a very strong preference for the latter.<p>&quot;By file&quot; means that the reviewer should look at the diff between the branch base and tip, ignoring the intermediate changes along the way. If the individual commits really don&#x27;t matter, &quot;by file&quot; suggests that we ought to squash this branch into a single commit; and if they do matter, something prevented us from providing a proper, clean narrative. &quot;By file&quot; is a smell.<p>&quot;By commit&quot; is what the article assumes. Rather than look at the sum total of changes, you look at what each commit individually changed.<p>In GitHub, &quot;by file&quot; corresponds to reviewing by the &quot;Files changed&quot; tab, while &quot;by commit&quot; corresponds to reviewing by the &quot;Commits&quot; tab (and going through each commit in order).<p>At the command-line, &quot;by file&quot; corresponds to `git diff develop..feature`, and &quot;by commit&quot; corresponds to `git show --reverse develop..feature` (which shows all selected commits in order from least to most recent).<p>&gt; Given that I don&#x27;t control the tools used, how do I ensure that functional changes aren&#x27;t lost amidst formatting changes?<p>Given the above, you can and should isolate those kinds of changes into separate commits, so that the functional changes are the only visible changes in their respective commits.')