Item(by='dartmoose', descendants=None, kids=[25954515], score=None, time=1611897118, title=None, item_type='comment', url=None, parent=25953686, text='That&#x27;s fair, my point is that if you only care about rendering something quickly then a mesh is your best bet.<p>Are there applications you have in mind where the distance to the nearest surface is actually useful, regardless of the surface representation? As in, when would knowing the distance to the nearest surface be helpful when you&#x27;re working with meshes? It seems to me you only need to know the closest distance to a surface when you have an SDF and are trying to compute an intersection along a ray.<p>The nearest sort of application of this kind that I can think of is Walk on Spheres (cool recent paper <a href="https:&#x2F;&#x2F;www.cs.cmu.edu&#x2F;~kmcrane&#x2F;Projects&#x2F;MonteCarloGeometryProcessing&#x2F;paper.pdf" rel="nofollow">https:&#x2F;&#x2F;www.cs.cmu.edu&#x2F;~kmcrane&#x2F;Projects&#x2F;MonteCarloGeometryP...</a>), but in that case the authors do a closest point query, not a distance to the nearest surface. There&#x27;s a subtle difference here because you actually need the closest point (not just the distance) so that you can look up a boundary condition. It&#x27;s not clear to me how you could make use of an SDF in this setting, although maybe there&#x27;s an interesting research direction there.')