Item(by='sighingnow', descendants=None, kids=None, score=None, time=1611069624, title=None, item_type='comment', url=None, parent=25833733, text='Vineyard addresses on sharing &quot;distributed abstracted immutable data&quot; in memory, e.g., dask[1] generates a distributed dataframe (since the size of data cannot be fit into a single machine), and feed it to tensorflow as features for distributed training. Vineyard aims at sharing the &quot;DataFrame&quot; between these two engines, by memory sharing.<p>+ feather: as well as arrow, are focused on interoperable data stroage format. feather and arrow define a IPC serailziation schema for common data structures, e.g., tensor and DataFrame. Rather than do serailization for zero-copy (when possible) deserialization, vineyard organized data as a &quot;metadata&quot; and a set of &quot;blobs&quot;, the metadata decides how to interpret those blobs and blobs are shared in a zero-copy fashion. Moreover, vineyard could manages large that cannot be fit into a single machine as a &quot;GlobalObject&quot; and global objects can be shared efficiently as well.<p>+ fst: fst is also a serailization&#x2F;stroage format, but vineyard is not such a thing.<p>+ diskframe: diskframe is similar to fst, and works for data that cannot be fit into memory. Vineyard shares in-memory data that cannot be fit into a single machine between different engines (might be implemented in different languages).<p>+ duckdb: vineyard is not a SQL execution engine.')