Item(by='saagarjha', descendants=None, kids=[25956542, 25957797, 25955588], score=None, time=1611910840, title=None, item_type='comment', url=None, parent=25955367, text='I believe my analysis is both accurate and complete; actually, I would dispute many of the things you mention. &quot;Baking in&quot; randomization into a binary before installing it is rare; on Apple&#x27;s platforms ASLR is done at runtime. I am well aware that ASLR does not come for free; it requires position-independent code to function and support from the kernel to do randomization (for image base addresses and anonymous mmaps) and a dynamic linker aware of how to apply relocations. On iOS PIE code has been required for many years, and the various OS subsystems are not only aware of ASLR but ensure validity of code signatures regardless of load address. I suspect the expensive process that you are referring to is shared cache prebinding, which was never a thing on iOS AFAIK and is no longer used on macOS either.<p>To be clear, I am not complaining about a lack of ASLR where it would be prohibitive, such as mapping the shared cache at a different address for every process (which, unless done carefully, would kill the benefits of it being in shared memory as the pages would all be dirtied). I am talking more about various instances where Apple has generally used very poor slides for reasons that aren&#x27;t all that great, leading to the randomization being easy to break.')