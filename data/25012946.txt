Item(by='wokwokwok', descendants=None, kids=None, score=None, time=1604718101, title=None, item_type='comment', url=None, parent=25009968, text='I’ve worked in a startup where they were unable to deliver integrations in time because previous work had been done “quick and dirty”, and significant amounts of money were lost as a result.<p>Don’t kid yourself. That is technical debt, it was our fault.<p>Technical debt isn’t “bad code” it’s <i>what stops you from shipping features</i>; and it’s <i>more important</i> for startups to manage, not less.<p>What <i>youre</i> referring to is very early stage stuff, where the total LoC is so trivial that a few people can just remember all the details of it in their heads, so it doesn’t matter how messy it is.<p>...true, but there are finite physical limits to humans; you can only keep doing that for so long before you flub it up, and lose a lot of money for your employer.<p>This is one of those moments that people just flat out fail to have intuition about.<p>Same process, same results right?<p>Nope.<p>Same process with diminishing returns &lt;— reality of software engineering over time.<p>So specifically:<p>&gt; After all, whatever you think of the code or design decisions you&#x27;ve found, it has clearly justified itself just on basis that the company is successful enough for you to be there finding it.<p>This is wrong.<p>It was the correct decision&#x2F;code <i>at the time</i> for the scale <i>at the time</i>, which, since you <i>are there</i> looking at it, it is probably no longer suitable for.<p>Not intuitive is it?')