Item(by='jerf', descendants=None, kids=[24814758], score=None, time=1602972012, title=None, item_type='comment', url=None, parent=24813335, text='The &quot;sufficiently smart compiler&quot; [1] has been tried often enough, with poor enough results, that it&#x27;s not something anyone counts on anymore.<p>In this case, the most relevant example is probably the failure of the Itanium. Searching for that can be enlightening too, but heres a good start: <a href="https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;1011760&#x2F;what-are-the-technical-reasons-behind-the-itanium-fiasco-if-any" rel="nofollow">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;1011760&#x2F;what-are-the-tec...</a> (For context, the essential Itanium idea was to move complexity out of the chip and into the compiler.)<p>Also, don&#x27;t overestimate Haskell&#x27;s performance. As much fun as I&#x27;ve had with it, I&#x27;ve always been a bit disappointed with its performance. Though for good reasons, it too was designed in the hopes that a Sufficiently Smart Compiler would be able to turn it into something blazingly fast, but it hasn&#x27;t succeeded any more than anything else. Writing high-performance Haskell is a lot like writing high performance Javascript for a particular JIT... it can be done, but you have to know <i>huge</i> amounts of stuff about how the compiler&#x2F;JIT will optimize things and have to write in a very particular subset of the language that is much less powerful and convenient than the full language, with little to no compiler assistance, and with even slight mistakes able to trash the perfromance hardcore as some small little thing recursively destroys all the optimizations. It&#x27;s such a project it&#x27;s essentially writing in a different language that just happens to integrate nicely with the host.<p>[1]: <a href="https:&#x2F;&#x2F;duckduckgo.com&#x2F;sufficiently" rel="nofollow">https:&#x2F;&#x2F;duckduckgo.com&#x2F;sufficiently</a> smart compiler')