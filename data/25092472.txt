Item(by='colonwqbang', descendants=None, kids=None, score=None, time=1605364203, title=None, item_type='comment', url=None, parent=25077008, text='It&#x27;s understood that you can have &quot;parallelism&quot; by running two copies of your program using basic system facilities like fork(), or even by buying several computers and running one instance of your program on each of them. That&#x27;s not what is meant by a language &quot;supporting parallelism&quot;. If it was, then every language ever designed supports parallelism and so the term is meaningless.<p>To claim that a language &quot;supports parallelism&quot;, it has to do something more to facilitate parallel programming. I would say that parallel threads of computation with shared memory and system resources is the bare minimum. You can go the extra mile and support transactional memory or other &quot;nice&quot; abstractions which make parallel programming easier.<p>Saying that Python support parallelism because it has a fork() wrapper is like saying that Posix shell is a strongly typed language because it has strings and string is a type.')