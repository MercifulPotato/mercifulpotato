Item(by='whoisjuan', descendants=None, kids=[25399662, 25399725, 25400222], score=None, time=1607792381, title=None, item_type='comment', url=None, parent=25399250, text='I own a Screenshot API service (shameless plug: <a href="https:&#x2F;&#x2F;getscreenshot.rasterwise.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;getscreenshot.rasterwise.com&#x2F;</a>) and this exactly the argument that I make for small utilitarian services like mine. You shouldn&#x27;t build them because buying them is several orders of magnitude cheaper.<p>I have a small paragraph from a blog post where I explain this with some math that is probably crappy but captures the idea:<p><i>&quot;When you spend time in areas that are not the core of your product, you&#x27;re actually being financially inefficient. Taking screenshots is likely not a core task of your business so it doesn&#x27;t makes much sense to waste development resources in this area.<p>Here is a brief example of how inefficient it gets:<p>A mid-level developer in a small market earns $90K USD per year, working 40 hours per week. His&#x2F;her effective hourly rate is $47 USD per hour.<p>Writing a basic implementation of a screenshot utility will take at least 5 hours. But this is just a simple prototype. Many use cases will need to be addressed, and there&#x27;s likely going to be a large amount of time spent in optimizing, securing, provisioning, testing, etc.<p>A realistic utility that can be used for a development workflow is going to take at the very least 30 hours of development time, but likely more.<p>Other un-accounted areas of development time are: documentation, training and maintenance.<p>Given this scenario is very likely that writing a semi-good solution will take more than a week and maintaining it, will take at least an hour every month.<p>This means that writing this solution will cost almost $2000 USD of development time plus another $500 USD or so, just to support it every year. And of course, this doesn&#x27;t include the cost of the infrastructure you&#x27;re paying to run it.&quot;</i><p>My argument is that the more utilitarian the service, the more cost-effective that is to buy it instead of writing it. Writing it could be simple but there&#x27;s a drain in engineering resources when you try to maintain it in the long run.')