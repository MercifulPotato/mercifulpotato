Item(by='junon', descendants=None, kids=None, score=None, time=1609777698, title=None, item_type='comment', url=None, parent=25631559, text='In my experience, this dogmatic advice is often counterproductive.<p>If this is a switch that is reasonably defended (internal API, etc.) then leaving off a default in a fixed enumeration type switch (where you want to hit _every_ switch case value possible) is ideal.<p>Most modern processors will warn (or -Werror, as everyone should be using these days) if one of the enum constants is missing, reducing the surface area for logic bugs.<p>If you are really paranoid about out-of-bounds values in a switch statement, then insert an assert() after the statement itself with a negated string literal, e.g. assert(!&quot;invalid switch value&quot;);<p>This is a pretty reasonable approach for code that, again, is reasonably defended against faulty inputs or working with some degree of guarantee. If I&#x27;m not mistaken, often times such switch statements are even optimized to jump tables at compile time, too - namely if there are small&#x2F;few&#x2F;no gaps in the case values.')