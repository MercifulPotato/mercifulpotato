Item(by='bife_sans', descendants=None, kids=[25098879, 25098792], score=None, time=1605415108, title=None, item_type='comment', url=None, parent=25091132, text='It&#x27;s easily arguable why lenses are not needed.<p>The author himself admits that getting a value from a nested record is easy, so we don&#x27;t need lenses to do that.<p>Setting a value from a nested record can be easily achieved using plain functions -- no need for a complex abstraction.<p><pre><code>    updatePersonDetails : (PersonDetails -&gt; PersonDetails) -&gt; Model -&gt; Model\n    updatePersonDetails fn model =\n        { model | personDetails = fn model.personDetails }\n    \n    updateAddress : (Address -&gt; Address) -&gt; PersonDetails -&gt; PersonDetails\n    updateAddress fn details =\n        { details | address = fn details.address }\n    \n    updateLine1 : (String -&gt; String) -&gt; Address -&gt; Address\n    updateLine1 fn address =\n        { address | line1 = fn address.line1 }\n</code></pre>\nNotice that these functions are almost identical to the ones he wrote in order to build the Lenses.<p>This update functions can be composed easily:<p><pre><code>    updatePersonDetailsAddressLine1 : (String -&gt; String) -&gt; Model -&gt; Model\n    updatePersonDetailsAddressLine1 fn model =\n        updatePersonDetails (updateAddress (updateLine1 fn)) model\n</code></pre>\nor, if you are feeling fancy:<p><pre><code>    updatePersonDetailsAddressLine1 =\n        updatePersonDetails &lt;&lt; updateAddress &lt;&lt; updateLine1\n</code></pre>\nOn the other hand, nesting records is discouraged because it brings no benefit at all and it creates the problem of having to write extra boilerplate. He wouldn&#x27;t even have the problem that lenses solve if he had just stuck to the &quot;flat&quot; record.<p>Btw: I think it was a great article! I didn&#x27;t mean to sound too harsh criticizing; just wanted to clarify that point.')