Item(by='erichanson', descendants=None, kids=[25611492, 25610853, 25609917, 25609613, 25611211, 25612378, 25612806, 25611892, 25615603], score=None, time=1609549421, title=None, item_type='comment', url=None, parent=25608241, text='Not a lot of support for his sentiments here it seems, but to understand where he&#x27;s coming from you probably need to see the research he has been doing, largely aimed at entirely different <i>modes</i> of programming -- visualizing boolean logic trees and all kinds of other stuff, aimed at making programming more accessible and concrete to regular people.<p>You know in the movies where they have the futuristic user interfaces?  Well we&#x27;ve been able to put graphics on the screen for decades, but &quot;real&quot; enterprise programming is still mostly pounding keys into text files and fussing over semicolons and curly braces.  Visual interfaces are considered toys that &quot;real&quot; programmers don&#x27;t need.<p>And yet there&#x27;s a chasm of capability between programmers and users, and it&#x27;s actually true that what programmers do isn&#x27;t something most &quot;normal people&quot; will ever be capable of.  But is that because programmers have some wildly special form of intelligence that most people don&#x27;t have, or is it because our tools suck?<p>The divide between users and developers is as accepted and entrenched as it is archaic, not to mention a huge innovation and creativity bottleneck for the species, and by my estimation an embarrassing failure to innovate for our industry.  Jonathan has been pushing back for decades.  He&#x27;s not grumpy or cynical, he&#x27;s a relic from a time when the future of programming and &quot;what programming even looks like&quot; was still a wildly open question.<p>I wish more people thought like him.')