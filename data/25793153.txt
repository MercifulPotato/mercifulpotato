Item(by='qppo', descendants=None, kids=None, score=None, time=1610730458, title=None, item_type='comment', url=None, parent=25791676, text='I think the answer is to look at things that can&#x27;t be done by executing code from a library. In other words, think about something you can compile that isn&#x27;t executable code.<p>Some examples: hardware description languages (VHDL, Chisel), human readable graphics languages (shaders, SVG), languages for describing music or instruments (super collider, SOUL, Max&#x2F;MSP, Pure Data), other creative coding, generative art, etc. Essentially think about all the things that programs <i>arent</i>, and think of how a DSL can represent them - be it abstract information like art, physical things, or other things not readily represent able as digital data.<p>But to the first part of your question: it&#x27;s not hard to make a DSL. It&#x27;s hard to make one that people will use. The hardest problem in developing one is dogfooding it, you need users from Day 1 to give feedback on what works and what doesn&#x27;t make sense. Another way to think of it is that the technical problems of DSL development are straightforward, the social problem of making one that&#x27;s useful isn&#x27;t.')