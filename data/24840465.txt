Item(by='dvdhsu', descendants=None, kids=[24841758], score=None, time=1603216881, title=None, item_type='comment', url=None, parent=24840260, text='Hi! Thanks for the comment. I&#x27;m an engineer as well, so the concerns you raise are things I&#x27;ve thought a lot about. I think Retool does a few things differently, which help:<p>1. On We allow you to sync all your applications to Git. All Retool apps just JSON, and we serialize that to YAML (that has pretty diffs). So when you make changes to your application, those changes can be synced directly to your Git repository, and you can use code reviews, PRs, etc. in order to manage everything. This means we also support code transforms (if you want to bulk-change Retool applications), support staging and dev environments, and more. <a href="https:&#x2F;&#x2F;docs.retool.com&#x2F;docs&#x2F;git-syncing" rel="nofollow">https:&#x2F;&#x2F;docs.retool.com&#x2F;docs&#x2F;git-syncing</a><p>2. On the flexibility side â€” you can import your own React components. This lets you use the data-handling layers of Retool, but still customize the front-end as much as you want: <a href="https:&#x2F;&#x2F;docs.retool.com&#x2F;docs&#x2F;custom-react-components" rel="nofollow">https:&#x2F;&#x2F;docs.retool.com&#x2F;docs&#x2F;custom-react-components</a>.<p>3. Most serious Retool users host Retool on-prem: <a href="https:&#x2F;&#x2F;docs.retool.com&#x2F;docs&#x2F;setup-instructions" rel="nofollow">https:&#x2F;&#x2F;docs.retool.com&#x2F;docs&#x2F;setup-instructions</a>. By hosting Retool on-prem, you can be responsible for Retool&#x27;s up-time. And because all updates are shipped via Docker, you can always downgrade &#x2F; refuse to upgrade.')