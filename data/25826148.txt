Item(by='ThomPete', descendants=None, kids=[25826588], score=None, time=1611001294, title=None, item_type='comment', url=None, parent=25825244, text='In his book “Code Complete”, Steven McConnel speaks about metaphors. He reasons that metaphors are necessary to be a good developer as it helps visualize the act of coding. The metaphor he prefers is the “construction” metaphor. This metaphor he argues best explain the act (some would say art) of programming and gives developers a language to speak in that brings clarity to the development process.<p>When in construction you prepare the building site, lay a foundation, frame the house, put siding and a roof on it, and plumb and wire it. This is equivalent to programming. In other words through the lens of the construction metaphor, the developer is someone who ultimately build someones house by working together with different disciplines (Architects, designers, contractors etc)<p>The problem with that metaphor IMO is that it&#x27;s not actually what software development is.<p>The proper metaphor for software development is more <i>&quot;engineering and development of construction site equipment and material&quot;</i> i.e. a developer is not building buildings they are building the things necessary for building the building.<p>And so the developer will often find themselves in a situation where the material doesn&#x27;t exist and they have to invent it it or the material exist but we dont know how it&#x27;s going to work with some other material needed or the equipment used for that material isn&#x27;t made yet or doesn&#x27;t work with that material even though it normally does.<p>I.e. a developer is inventing, engineering and building all at the same time and that is what makes it impossible to estimate development regardless of process or metaphor.')