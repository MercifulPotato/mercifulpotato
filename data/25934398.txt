Item(by='Applejinx', descendants=None, kids=None, score=None, time=1611783772, title=None, item_type='comment', url=None, parent=25922866, text='No, it runs deeper than that. Dan came up with a really twisted, weird set of abstractions to link things that really weren&#x27;t as similar as he thought they were. After he was done, you had to keep track of whether things had sides or corners and how many of those there were, something that didn&#x27;t enter into how the original problems were framed. Instead of presenting &#x27;okay, here&#x27;s our resize for these respective things&#x27;, his (disavowed) code began demanding how many corners your thing had. What about orientation? If you have a star, with five corners, and you can rotate it 180 degrees, what do you then call &#x27;top left&#x27; to force that into your DRY not-repeating resize routine? Is it the bounding rect? If you&#x27;ve rotated the thing, is top left now bottom right or are you only concerned with the bounding rect? What if you have a non-contiguous selection so you&#x27;ve got two top lefts? Are they one big rect, or are you trying to resize each thing in its individual location?<p>The point of his article was that he&#x27;d CREATED possibly significant problems through imposing an abstraction where it didn&#x27;t fit. I can think of a number of new &#x27;things&#x27; for &#x27;resizing&#x27; that would be valid new &#x27;things&#x27; with intitutively sensible behaviors that would violate any enclosing abstraction he might have produced, especially the one he offered as a &#x27;bad example&#x27; where sides are conflated with corners and so on. He&#x27;s right to have realized he was on the wrong path.')