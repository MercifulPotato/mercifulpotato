Item(by='klodolph', descendants=None, kids=None, score=None, time=1605900377, title=None, item_type='comment', url=None, parent=25163265, text='Yes, from that explanation it sounds like they are equivalent to Rust’s impl return types.<p>Note that interfaces in Rust are <i>not</i> types, they do not name types. A value cannot have interface type. What happens when you return an “impl” type is that you return some unspecified type, but that type must implement the specified interface.<p>You could translate the D example to:<p><pre><code>    trait HasGetValue {\n        fn get_value(&amp;self) -&gt; i32;\n    }\n    fn create_voldemort_type(value: i32) -&gt; impl HasGetValue {\n        ...\n    }\n</code></pre>\nThe “create_voldemort_type” function simply returns a value of <i>unspecified type.</i> As far as I can tell, this is equivalent to the D code, except it doesn’t use type inference for the function type.')