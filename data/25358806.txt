Item(by='kmeisthax', descendants=None, kids=[25361094, 25361411], score=None, time=1607524203, title=None, item_type='comment', url=None, parent=25358541, text='No, the license that maximizes developer freedom is a permissive license, like Apache, MIT, BSD 3-clause etc. That lets you mix your code with either a proprietary or a copylefted project. Since a lot of Free Software is written by people who just want to solve a problem for themselves, they often just pick the permissive license.<p>Proprietary code is actually the most restrictive to both users <i>and</i> developers. That&#x27;s because you can&#x27;t legally mix proprietary code without a license at every step of the way. Any significantly large proprietary project becomes a mass of third-party dependencies with all sorts of license restrictions that your company is probably ignoring and breaking. Even if you follow all the tenants of those licenses, you don&#x27;t own your code at the end. A Node-style mess of dependencies becomes ten times worse when each dependency has license restrictions attached to it.<p>In other forms of media, you generally don&#x27;t see people try to license 30-50 different properties all at once for the same work, because that means nobody owns anything and the work will be really hard to market internationally. Software almost demands this sort of dependency soup, however, which creates all sorts of unique preservation problems. Whenever a large software project (or game engine) is discontinued, a lot of people wonder why the company who wrote it doesn&#x27;t just release the code as Free for third parties to maintain. The answer is that in most cases, it&#x27;s not their code to release.')