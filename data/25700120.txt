Item(by='zelphirkalt', descendants=None, kids=None, score=None, time=1610198343, title=None, item_type='comment', url=None, parent=25693254, text='As long as the language supports the primitives needed for implementing good parallelism, I do not see why it could not be done in form of a library. Of course the ecosystem would have to evolve to make use of such. However, it seems more and more language get on the bus for having concurrency libraries, that derive from CSP directly or indirectly as in &quot;we want concurrency like they have in language x&quot;.<p>In some languages functionality is integrated and in some languages people developed it as a library. Which one is the right thing to do probably depends on what you can work with in the language.<p>Just to name some examples that come to mind: Erlang (messag passing to actors), Go (hyped go routines), Rust (multiple frameworks, Bastion comes to mind), Guile (guile-fibers, a library, because the language offers the primitives), Pony (actors, similar to Erlang), Elixir (on top of Erlang)<p>I do not know sufficient Ruby, to tell whether or not it offers the primitives required to implement this stuff as a library. If it does, then there is a higher chance of anyone eventually getting it right. If it does not, it will depend on the language designers to get it right.')