Item(by='chubot', descendants=None, kids=None, score=None, time=1606720632, title=None, item_type='comment', url=None, parent=25243159, text='<i>Conceptually, I want the cluster orchestrator to populate a set of systemd units on each machine, and then switch to a very passive role in the nodeâ€™s life.</i><p>I tried to write a cluster manager from 2010-2015, and essentially what it did was write a big shell script for starting a service.  The node could then reboot on its own, and the init system would invoke all the shell scripts.<p>The &quot;host&quot; part of the command line was on the left, and specified the container, and the user parts go on the right, after --<p><pre><code>    my-container --fs &#x2F;images&#x2F;mine --bind ... -- my-server --port $PORT\n</code></pre>\nThere could also be a line before that to sync the container &#x2F; layers, etc.<p>I still think that is a good paradigm ... The whole thing could just be a &quot;shell script compiler&quot;, where the shell script uses a very small number of tools.<p>The problem with cluster managers is that you get into the &quot;inner platform&quot; problem.  Once you have a lot of software to run the cluster on each node, now you have to figure out how to update and monitor THAT software.  But you don&#x27;t necessarily have the update and monitoring mechanisms it implements!')