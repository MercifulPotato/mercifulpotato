Item(by='wassenaar10', descendants=None, kids=[25664458], score=None, time=1609963368, title=None, item_type='comment', url=None, parent=25657179, text='CPython is what&#x27;s slow, not Python itself. The main reason CPython is slow is that it&#x27;s purely a bytecode interpreter and it makes no use of AoT or JiT compilation unlike the JVM, CLR, or V8 JavaScript engine. If anything, the rapid growth and adoption of Python gives me hope that we&#x27;ll see something akin to the V8 engine for Python. Yes, things like Cython and PyPy exist but both have their issues.<p>Javascript had a reputation for being horribly slow before modern JIT compiled JS engines were created. I believe that around the time the V8 project began, a non-trivial number of browsers were using an AST-walk interpreter to execute JS (you can imagine how slow that was). If you look at some benchmarks for how V8 JS (for example Node.JS) performs relative to Java, C#, and C++, you will generally see that the performance gap between JS and Java&#x2F;C# is comparable to the gap between Java&#x2F;C# and C++. CPython, of course, is a lot slower.<p>There&#x27;s nothing about Python that&#x27;s fundamentally more dynamic than Javascript, though correct me if I&#x27;m wrong. Both languages have the ability to add arbitrary fields to objects at runtime (though I would say Python&#x27;s syntax and object model tries to sway you away from doing it more so that JS), both languages have similar type systems and essentially fully first-class functions with closures, and both languages have an eval method that can execute any string as source code. The saying goes, &quot;The squeaky wheel gets the grease&quot;, and for a long time Javascript was the squeaky wheel that everyone complained about but still had to use in order to target web browsers. That&#x27;s what encouraged a huge company like google to invest resources into making a fast Javascript engine. I would not be surprised if something similar ends up happening with python.')