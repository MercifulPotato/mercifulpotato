Item(by='WJW', descendants=None, kids=[25700035, 25703013], score=None, time=1610196932, title=None, item_type='comment', url=None, parent=25699736, text='I don&#x27;t think that quote is complete enough though. If you really believe that programming languages are just tools for building programs (in particular &quot;useful&quot; programs that make money) then yes, Haskell has not much to offer you over PHP or Ruby and other languages in that vein.<p>On the other hand if you are interested in research, exploring the extent of the design space for programming languages and what you can (or can&#x27;t) express in them, then Haskell is an excellent language for you. Both for the community of like-minded researchers and for the flexibility of the language&#x2F;compiler itself.<p>On a wider scale, I&#x27;ve always liked <a href="https:&#x2F;&#x2F;josephg.com&#x2F;blog&#x2F;3-tribes&#x2F;" rel="nofollow">https:&#x2F;&#x2F;josephg.com&#x2F;blog&#x2F;3-tribes&#x2F;</a> as an explanation for why this topic comes up again and again and again. The writer of the article is more of a &quot;type 3&quot; programmer. He wants to build a house but does not care much which tools he uses as long as they don&#x27;t get in the way. It is the end result they are interested in, not the process. Haskell is, by design as a research language, more process oriented than result oriented. And yes, you can still get results with it as IHP and SC and Jane Street have shown. But they seem to be the exceptions that show the norm.')