Item(by='rstuart4133', descendants=None, kids=None, score=None, time=1603249918, title=None, item_type='comment', url=None, parent=24832058, text='My organisation pays many $k in &quot;software support&quot;.  Having been in the open source world where we get along perfectly fine with no support whatsoever, that was a surprise.  I am perfectly capable of supporting software myself.<p>It turns out things are structured in commercial land so you really can&#x27;t do that.  All the usual remedies available to me, like source code, self describing config files, open data formats aren&#x27;t there.  What help the vendor is willing to offer is locked up behind paywalls you can only get past without paying yearly support.<p>Having run a commercial software company myself, this isn&#x27;t a surprise.  You have to have a continuous, reliable revenue stream to pay those continuous, ever reliable wage bills.  If you are making a few large sales a year those sales don&#x27;t cut it, so you engineer things so you get a regular income from software.  One way to do that is to ensure customers regularly run into things that can&#x27;t do themselves.<p>A very good example of was in the time before office365 subscriptions. Microsoft arranged to get a stead income by deliberately breaking the on disk format of Office files every year, so the old copies of office could not read files produced by the new version.  They would then seed the market by handing out free or very cheap copies of the new version of Office to students, so companies would start getting documents the could not open until they upgraded.<p>Not providing features only used once in a year, or making them unreliable or difficult to use are other ways of doing the same thing.  It&#x27;s all very ugly, but by its nature software lives forever once you get it right, so I don&#x27;t know how commercial programming teams would have survived without either subscriptions or pulling some stunt like that.')