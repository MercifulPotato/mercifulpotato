Item(by='psykotic', descendants=None, kids=None, score=None, time=1602310136, title=None, item_type='comment', url=None, parent=24736017, text='For C compilers like gcc and clang it&#x27;s comparing against -O0. Anyway, there are two issues with that long-term trend in compiler design from my perspective. The first is that the optimizing path is too slow and they don&#x27;t offer an intermediate point on the Pareto frontier that reflects my trade-off preferences because too much of the slowness is architectural in origin. But the second and much worse problem is that the non-optimizing path is barely any faster. You can&#x27;t make a fast non-optimizing or somewhat-optimizing compiler by taking the architecture of a heavyweight optimizing compiler and setting some internal flags and skipping a few passes. You need the fast compilation path to completely dictate the architecture from end to end, with the constraint of still supporting optimizing backends, and you need a development culture that treats the fast path&#x27;s performance as inviolate and sacrosanct.')