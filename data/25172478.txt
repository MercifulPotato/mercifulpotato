Item(by='mwcampbell', descendants=None, kids=None, score=None, time=1605989977, title=None, item_type='comment', url=None, parent=25168663, text='&gt; It also helps if you can split your app into an API and a client app, as APIs consume a lot less  resources than traditional web apps.<p>We shouldn&#x27;t focus so much on what&#x27;s best for us (at least in operating costs) that we sacrifice what&#x27;s best for the end-user. In many cases, a conventional server-rendered web application is what&#x27;s best for the end-user. If we develop one of those by combining an API backend with a separate server-rendered application consuming it, we&#x27;ve likely added extraneous complexity and resource consumption to get back to what we used to have in an integrated server-rendered web app.<p>Also, as DHH has written [1] [2], an integrated system, a.k.a. monolith, is best for programmer productivity and especially for getting the most out of a small team of generalists. I want to use a framework whose authors and community are opinionated about this. It seems to me that the Phoenix framework and the broader Elixir community fall into this category, while still delivering pretty good performance. I&#x27;ve also taken a hard look at ASP.NET Core, but I don&#x27;t think it&#x27;s as focused on the integrated approach. So, after being undecided for too long, I&#x27;m using Phoenix for my new project.<p>[1]: <a href="https:&#x2F;&#x2F;m.signalvnoise.com&#x2F;integrated-systems-for-integrated-programmers&#x2F;" rel="nofollow">https:&#x2F;&#x2F;m.signalvnoise.com&#x2F;integrated-systems-for-integrated...</a><p>[2]: <a href="https:&#x2F;&#x2F;m.signalvnoise.com&#x2F;the-majestic-monolith&#x2F;" rel="nofollow">https:&#x2F;&#x2F;m.signalvnoise.com&#x2F;the-majestic-monolith&#x2F;</a>')