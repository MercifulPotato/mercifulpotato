Item(by='dnautics', descendants=None, kids=None, score=None, time=1601920945, title=None, item_type='comment', url=None, parent=24689230, text='I think &quot;data are immutable&quot; should be qualified - usually it means &quot;data are immutable through your <i>codepaths</i>&quot; and if you are mutating data, you need explicit checkouts and checkins of the data.<p>This is the basic principle behind how sane database transactions work.<p>ORMs in some languages can be especially dangerous if they overload the getter&#x2F;setters of the object in such a way that the checkins and checkouts are obscured; you could be passing your object to a function or method that expects to mutate a polymorphic class[0] that is usually a traditional &quot;shared memory&quot; form of objects, well hopefully you can imagine the chaos, redundant database transactions, consistency problems, failure modes, uncaught exceptions, etc. that are going to be a nightmare to debug.<p>[0] worse yet, imagine if it&#x27;s someone else&#x27;s code and they change the api from not mutating to mutating for performance reasons.  Will you notice the documentation change or the changelog?  It&#x27;s bad enough in the case when it&#x27;s not an ORM and just a mutable object.')