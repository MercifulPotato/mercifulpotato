Item(by='vlovich123', descendants=None, kids=None, score=None, time=1611300830, title=None, item_type='comment', url=None, parent=25865786, text='Or the mapping info for your process is shared with that coprocessor (the OS just keeps this around in RAM anyway). Heck, you could have an OS-provided code that needs to be loaded so that it can properly  resolve that mapping (which is what the TLB does by the way - it has a well-defined structure and when it’s missing from the cache if I recall correctly it’ll fetch some info directly from RAM until it gets to a point where it has to generate a page fault).<p>I don’t disagree that the memory model becomes more complex. For one CPU cache invalidation becomes <i>really</i> tricky. So do memory coherence rules.<p>I’m less clear how mmap matters here. That’s just a mechanism the OS uses to hand out views into the page cache to the process - if you’ve solve the virtual-physical mapping (which you have to do) then mmap is not relevant.<p>You’re spot on though that the particular design decisions are critical for this to be successful - pick the wrong point on the complexity&#x2F;cost&#x2F;perf curve and your solution will definitely be DOA.')