Item(by='chubot', descendants=None, kids=[24956470], score=None, time=1604191129, title=None, item_type='comment', url=None, parent=24956214, text='This was an interesting paper, and I read over it while thinking about implementing ropes for <a href="https:&#x2F;&#x2F;www.oilshell.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.oilshell.org&#x2F;</a> (which would be a huge change, affecting the entire interpreter, since all shell scripts mostly deal with strings)<p>What surprised me is that Ruby template engines make heavy use of string concatenation?  Like &#x27;a&#x27; + &#x27;b&#x27; ?<p><i>The generated Ruby fragment from ERB makes heavy use ofstring concatenation, which is generally favorable to ropes. Theright-most graph of Figure 5 shows that TruffleRuby ropes are 9.4Ã— faster than MRI, rendering around 870 000 templates per second.</i><p>I would have thought the idiom for writing a template engine is to use something like Java&#x27;s StringBuffer, or the Python pattern of appending immutable strings to a list, and joining them at the end.  So you avoid a ton of intermediate strings that way.  (And I have written a template engine myself in both Python and JS, and that is the technique I used, and it&#x27;s plenty fast)<p>Would that technique speed up ERB, or is there something I&#x27;m missing?  Not to say it&#x27;s not worthwhile to still do ropes, but it seems like low hanging fruit.<p>-----<p>Though what turned me off of ropes is that for many workloads, most strings are small.  And small strings are often smaller than records of pointers (and they have more locality).  If I have a pointer to a string, a start offset, and an end offset, on machines that&#x27;s 8 + 4 + 4 = 16 bytes, which is already approaching the size of an HTML tag or two.  And a GC has to chase that pointer (in my situation), whereas a GC can stop if it&#x27;s a blob of bytes.<p>Not to say it&#x27;s not a useful technique of course ... I think it does make sense as an optimization when you have existing workloads to measure, but I was hesistant to do it starting from scratch.<p>-----<p>somewhat related: <i>Elixir RAM and the Template of Doom</i> <a href="https:&#x2F;&#x2F;www.evanmiller.org&#x2F;elixir-ram-and-the-template-of-doom.html" rel="nofollow">https:&#x2F;&#x2F;www.evanmiller.org&#x2F;elixir-ram-and-the-template-of-do...</a> (a syscall optimization that goes well with ropes)')