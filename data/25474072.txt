Item(by='avianlyric', descendants=None, kids=None, score=None, time=1608340678, title=None, item_type='comment', url=None, parent=25472310, text='My understanding from reading around (I can&#x27;t find sources right now) is that a big chunk of Apple&#x27;s performance comes from how wide their instruction decode hardware, and long their instruction pipeline is.<p>ARM instructions are fixed length so it&#x27;s very easy to stack up decoders next to each other. You don&#x27;t need complex logic to figure out where instruction boundaries are, which you do with x86.<p>This added to a super long instruction pipeline means that the M1 has the ability to reorder a significant (something silly like 2x longer than any AMD or Intel CPU) number of instructions to increase CPU utilisation and thus performance.<p>AMD can&#x27;t do this on an x86 CPU because the complexity involved is too high, and think someone has found comments from them basically saying so.<p>Yeah Apple did make gains from a better integrated package, some of that would be tricky to pull off else where without additional software support. Some of the other integrations would be tricky to pull of because it would reduce the amount of customisation OEM could do. Remember one of the big things Apple integrated was RAM, and making it unified memory for all the co-processors. That could be tricky to do, unless we move into a world where RAM is always integrated into CPUs.')