Item(by='bostik', descendants=None, kids=[25014945], score=None, time=1604744518, title=None, item_type='comment', url=None, parent=25013138, text='&gt; <i>It&#x27;s called wither &quot;Qt for Python&quot; or PySide2. I dunno why it has two names</i><p>That brought back some funky history.<p>In the days of yore, when Qt 4.5 roamed the lands and 4.7 did not exist yet, there was a set of Python bindings called PyQt. They were ... a bit clunky, but they worked. Perhaps more importantly, they were also a subject of cross-company political wrangling.<p>Nokia bought Qt back in mid-noughties and wanted to make the toolkit more easily accessible for mixed commercial use. Authors of PyQt didn&#x27;t want to relicense to include LPGL as an option.[0] So PySide was born.<p>When the development of Qt5 got under way, the developers realised they could finally break many of the internals and eliminate a <i>lot</i> of nasty legacy baggage. The public API remained mostly the same, but low-level bindings, and pretty much anything that poked under the hood, could expect APIs to change, headers to go through contortions and so on.<p>Considering that the bindings for Qt5 are called PySide2, I can make an educated guess that it was in the end easier to rebuild the new bindings from scratch for 5 and onwards, rather than try to shoehorn the use of possibly conflicting low-level APIs between the two major versions. The name &quot;PySide&quot; was already known in developer circles as &quot;LGPL friendly Python bindings&quot;, so holding on to the base name makes perfect sense.<p>0: <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;PySide" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;PySide</a>')