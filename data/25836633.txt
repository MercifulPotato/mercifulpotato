Item(by='proverbialbunny', descendants=None, kids=[25837699], score=None, time=1611080282, title=None, item_type='comment', url=None, parent=25836564, text='Black Scholes is a reasonably good way to estimate the value of an options contract, which is fine for floating point.  Anything &#x2F; just about anything that is macro (to the larger system) is fine with floating point.<p>But for actual simulating trading where calculastions compounds on itself, instead of one algorithm that calculates something and then is done, floating point becomes an issue.<p>----<p>Because of the downvotes, let&#x27;s take a step back to 101 about floating point error:<p>&gt;&gt;&gt; 1.20 - 1.00<p>&gt; 0.199999999999999996<p>In this example, you&#x27;re a penny off.  This is a single equation.  So you have to check for rounding error and possibly round up for EVERY calculation you do, which is time consuming.<p>Alternative, there is fixed precision types which are fast, very fast, faster than regularly checking for errors.<p>If you have an equation that calculates once and then is done, a penny or two off is no big deal, but when you&#x27;re backtesting, a penny or two off for every trade compounds and you end up with dollars a day off.  If the algorithm is identifying to the faction of a penny in the middle of the trading day and adjusting its configuration accordingly, it will be wrong, which creates a butterfly effect that ripples out into the day, and with high frequency trading it&#x27;s somewhat uncommon, but possible, to get 10% off a day from floating point precision due to the actual algorithm failing on deciding the correct path forward while trading significantly compounding the issue.  Now take that and compound it out months and you see the issue.')