Item(by='GordonS', descendants=None, kids=[25107778], score=None, time=1605439801, title=None, item_type='comment', url=None, parent=25096470, text='&gt;Ã—The web browser should then allow the user to create one and upload it<p>Your average user is not going to open a command prompt and dig into Openssl. There are (or were, I haven&#x27;t used them for a decade) browser-specific APIs for generating private keys locally, but they were very flakey, and the whole UX was very confusing for users.<p>And after this, the user can only sign in on the machine in which the key was created. Your average user will not have a clue how to move certificates and keys around between machines.<p>I have direct experience with this. Back in 2008 I led a team building an extranet site, and we used X.509 client certificate authentication. We had to build our own tooling for management of the PKI, which was no small task. But ultimately it was key creation and certificate distribution that were the biggest problem - our users absolutely <i>hated</i> the signup process, as well as the fact that they couldn&#x27;t later signin on another machine.')