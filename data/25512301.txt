Item(by='webmaven', descendants=None, kids=[25530730, 25525991], score=None, time=1608677209, title=None, item_type='comment', url=None, parent=25511040, text='<i>&gt; More and more, you’ve got 2-3 frontends (web and cross-platform mobile, or explicitly web, iOS and Android), and you want to power them all with the same backend.<p>RESTful APIs serving up JSON works for all 3, as does GraphQL [...]. This however is totally web-specific - you’ll end up building REST APIs and mobile apps anyways, so the productivity gains end up way smaller, possibly even net negative.</i><p>I bet someone will produce a native client library that receives rendered SPA HTML fragments and pretends it&#x27;s a JSON response. They might even name it something ironic like &quot;Horror&quot; or &quot;Cringe&quot;.<p>That said, an ideal API for desktop web apps looks rather different than one for mobile web or native clients. Basically, for mobile you want to minimize the number of requests because of latency (so larger infodumps rather than many small updates) and minimize the size of responses due to bandwidth limitations and cost (so concise formats like Protocol Buffers rather than JSON).<p>It is definitely possible to accommodate both sets of requirements at the same API endpoint, but pretending that having a common endpoint implies anything else about the tech stack is rather disingenuous. If you want server-side rendering and an API that delivers HTML fragments instead of PB or JSON, that can be done too.')