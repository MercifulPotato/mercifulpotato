Item(by='rektide', descendants=None, kids=None, score=None, time=1605811646, title=None, item_type='comment', url=None, parent=25148642, text='Having well set expectations &amp; standards for building out your microservices seems like a fairly obvious way to claw back many of the advantages &#x2F; normalizing behaviors that the pro-Monolith camp advocates.<p>This article seems to argue that making everyone use an RPC library is enough. But rarely is there good monitoring &amp; observability built in to that. Other tasks like discovery &amp;c may seem superflous, but it brings a well-defined set of expectations that incoming engineers stand a good chance of knowing. You&#x27;re not just bringing in Monolith style genetic material &amp; practice, you&#x27;re bringing in common genetic material that others will know &amp; be familiar with.<p>The overhead seems debateable. Performance can be quite good in some cases, depending on choices of underlying tech. The author talks about the cost of maintaining the system, but in the two modest sized environments I&#x27;ve seen (under 100 nodes), the transition was extremely painless &amp; fast &amp; required little effort, &amp; nearly no maintenance. It also drastically reduced the effort we had spent &amp; intended to spend instrumenting our existing services, so it felt to us like the maintenance cost was hugely negative.<p>The arguments about the proxies limiting your available options are somewhat interesting. For 99.999% of companies, I&#x27;d say that using RSocket or Aeron is way more fancy tech than you should be targeting. I do hope HTTP3 support emerges relatively quickly. My hope is that gRPC has some plans in the works somewhere, and that once gRPC starts to progress, the proxies will rapidly catch up.')