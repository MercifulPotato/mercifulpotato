Item(by='tzs', descendants=None, kids=[24956787], score=None, time=1604188610, title=None, item_type='comment', url=None, parent=24955342, text='The question of whether or not you can revoke an open source license would go away if the people writing the licenses would <i>say</i> in their licenses that they are irrevocable or perpetual or in perpetuity.<p>I have not been able to figure out why so few major ones do. Of the OSI approved licenses, I think the only ones that say so are AFL-3.0, AGPL-3.0, APL-1.0, APSL-2.0, Apache-2.0, CATOSL-1.1, ECL-2.0, EUDatagrid, EUPL-1.1, GPL-3.0, LiLiQ-P-1.1, LiLiQ-R-1.1, LiLiQ-Rplus-1.1, MulanPSL-2.0, NPOSL-3.0, OCLC-2.0, OSL-1.0, OSL-2.1, OSL-3.0, RPSL-1.0, SimPL-2.0, Simple-2.0, UCL-1.0, osl-1.0, osl-2.1, and the Unlicense.<p>Only AGPL, GPLv3, and Apache 2 from that list are really widely used.<p>Much less talked about than whether or not you can revoke a license, but probably as important for most open source licenses, is what happens if rather than trying to revoke the license you try to stop issuing <i>new</i> licenses?<p>Take GPLv2. Suppose I license some code I own to Alice under GPLv2. Later Alice gives a copy to Bob. Where does Bob&#x27;s license come from?<p>GPLv2 says, &quot;Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions&quot;. GPLv3 has similar language.<p>If I say that I&#x27;m no longer going to issue licenses, and sue Bob for copyright infringement, what will his defense be?<p>He could argue that my license to Alice obligates me to issue a license to him. That falls under an area of law called the law of third party beneficiaries. Commonly you run into that in situations such as life insurance. I enter into a contract with a life insurance company to benefit specific third parties named in the contract, and that gives them some rights to sue to enforce the contract even though they are not a party to it.<p>I haven&#x27;t seen much analysis of how the law of third party beneficiaries would work when applied to an open source license, but I&#x27;m not optimistic it would do much. Third party beneficiary rights tend to be weak at best if the third party is not a specific entity that the contract was made specifically to benefit. Someone downstream from Alice might be too vague to be a third party beneficiary, and it probably gets worse the farther downstream they are.<p>How about Alice? She could probably intervene to force me to honor my license to her and issue Bob a license. That&#x27;s still going to put a damper on downstream redistribution. If you want to use the code without much legal worry, you&#x27;d need to make sure you got it from someone who would be willing to intervene if you got sued by me.<p>As with the revocation question, this too could be avoided be better drafting of the licenses. It&#x27;s not a problem for Apache 2, for example, because the Apache 2 license grant is &quot;a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form&quot;.<p>The key in there is &quot;sublicense&quot;. When Alice gives Bob a copy, Bob can get his license directly from Alice via her use of the sublicensing right I gave her.<p>I think that the only widely used open source licenses that do this are Apache 2 and MIT.<p>The GPL family specifically says that you cannot sublicense. I <i>think</i> they did this because they did not want people using sublicensing to give out licenses that did not include all of the GPL rights. Better would have been to allow sublicensing but to explicitly say that when you sublicense you must include all the rights that were in the license you received from upstream.')