Item(by='nercht12', descendants=None, kids=None, score=None, time=1601828994, title=None, item_type='comment', url=None, parent=24677255, text='a&#x27;s type didn&#x27;t change. The trap was that the wrapping function returned its nested function instead of itself. You can do the same thing in other languages, it&#x27;s just easier to slip into code in Copper. Let me illustrate with pseudo C code:<p>[code]<p>class F {<p>int mydata;<p>F( int a ) : mydata(a) {}<p>F* operator( int p ) { a=p; return new Function(0); }<p>};<p>myF = new F(10);<p>doSomething( &amp;myFunc );<p>doSomething( myFunc() );<p>[&#x2F;code]<p>This is a basic formula for how things appear &quot;under the hood&quot; in the VM. Notice that doSomething() accepts F*, but in the first case, the F instance passed has a different mydata value. In Copper, the above code corresponds to:<p>[code]<p>doSomething( myF )<p>doSomething( myF: ) or doSomething( myF() )<p>[&#x2F;code]')