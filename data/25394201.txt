Item(by='Kranar', descendants=None, kids=[25394974], score=None, time=1607735856, title=None, item_type='comment', url=None, parent=25393911, text='A context free grammar has a formal and rigorous definition. One way to see that Dlang does not have a strictly context free grammar for its AST is the following snippet of code:<p>A[B] C;<p>That is parsed differently depending on whether B is a constant integer expression in which case it parses to the declaration of an array of type A with a size of B, or whether B is a typename in which case it parses into an hash map with keys of type B and values of type A.<p>This disambiguation can not be specified by the context free grammar and instead must be delayed until the semantic analysis (which is usually defined by a context sensitive grammar).<p>Pretty much all statically typed languages work this way with various kinds of ambiguities. In practice, it&#x27;s not a particularly big deal. But that&#x27;s kind of my point, there&#x27;s no need to work exceedingly hard to force a language construct to be context free, especially if making it context free results in a lack of readability or awkward syntax.<p>It&#x27;s perfectly fine to specify a superset of the language that is context free, parse an AST for the superset of that language and then resolve AST ambiguities in later phases, such as the semantic analysis phase or the type checking phase. Almost any tool written to assist an IDE with autocompletion or other functionality will have no problem working with the language superset.')