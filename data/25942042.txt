Item(by='FeepingCreature', descendants=None, kids=[25955071], score=None, time=1611843533, title=None, item_type='comment', url=None, parent=25940628, text='&gt; How would you prevent a group from trolling or performing a hostile takeover of a small domain?<p>Several ways.<p>If you are accessing the domain locally, you&#x27;d normally be looking for entries that match the private key you have stored. So if you ever went to that domain, you&#x27;ll get the same remote again.<p>If this is your first time accessing the domain, you&#x27;d ask your peers what version of the domain they have stored. Those aren&#x27;t randomly assigned, but people you know IRL, similar to Freenet. You could do some degree of onion routing if you care about keeping sites you go to private from your friends. And again, you&#x27;d only do it the first time. And this is hard to attack because you can&#x27;t <i>make</i> a person have friends in the WOT graph.<p>When you are following a link, the person placing the link could always just attach the full private key to the link tag.<p>If you are copying a URL from your browser bar, the browser could attach a random set of index-value pairs of the private key. This would be very hard to spoof, but not increase the size of the URL by much. That would cover you for posting links in forums and chat rooms.<p>Of course if you were searching for the domain, your first hit would almost certainly have the correct key.<p>Only if you are told the URL through an out-of-band source, and almost nobody you know (transitively) has gone to that domain, you are in the situation of having to figure out which key is the true key. In that case, you could fall back to certificate checks. Note that certificates as a market are a lot more competetive than the domain name market.<p>So there&#x27;s no one-size-fits-all solution, but just like right now, most of the time you wouldn&#x27;t have to think about it. And <i>unlike</i> right now, if it goes wrong you get a nice error instead of silently the wrong domain.')