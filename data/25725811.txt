Item(by='jimis', descendants=None, kids=[25726180, 25728034, 25726191], score=None, time=1610350102, title=None, item_type='comment', url=None, parent=25725778, text='I was looking for Twitter alternatives and found this one, which is old and stale but looks like a very interesting experiment! Quoting its frontpage:<p><pre><code>  But what&#x27;s wrong with Twitter?\n\n  I&#x27;M GLAD YOU ASKED. There are two aspects of Twitter that just bug me as an engineer:\n\n    Ruby on Rails - Using rails to prototype a system is fine — scaling up to a million hits a day with it is just a bad idea. As the service grew, I&#x27;m sure it cost them a lot more time than it saved.\n    140 characters is not enough - I routinely write sentences longer than 140 characters, so I can&#x27;t even begin to imagine making a point in such a small space. This textual confinement has led to the rise of URL shorteners, which are breaking the internet. \n\n  Blërg solves these problems by applying absurd reactionary engineering. Blërg&#x27;s database backend is a custom C program that handles requests over HTTP and stores data in a very small and efficient indexed log-structured database. The frontend is done entirely in client-side Javascript. A single post can be up to 65535 bytes in length.\n\n  Which is not to say that I believe writing your service in C is the solution to all your problems. Clearly, this approach has just as many hairy problems that will bite you in the ass sooner or later. The best way, as with most things, lies somewhere in the middle of high-level abstraction and ZOMGHARDCORE OPTIMIZATION.\n</code></pre>\nOr more politely described in the documentation page:<p><pre><code>   Blërg is a minimalistic tagged text document database engine that also pretends to be a microblogging system. It is designed to efficiently store small (&lt; 64K) pieces of text in a way that they can be quickly retrieved by record number or by querying for tags embedded in the text. Its native interface is HTTP — Blërg comes as either a standalone HTTP server, or a CGI. Blërg is written in pure C.</code></pre>')