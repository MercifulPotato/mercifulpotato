Item(by='fizixer', descendants=None, kids=[24749264], score=None, time=1602449074, title=None, item_type='comment', url=None, parent=24748670, text='Yes. Despite being an avid code minimalism and refactoring advocate, I have zero problems with auto generated code size, as long as the size of &quot;the source that generated the code&quot; is reasonable.<p>Here&#x27;s how I count the size of the code:<p>So if a codebase is 1 million lines, but 900k was autogenerated using, let&#x27;s say, a 10k line &#x27;metaprogram&#x27; (which is otherwise not included in the source), the real size of the code is 100k + 10k = 110k.<p>Now, with the stupid vcn_* .c duplication, that I have serious problems with. But what you could do is take a diff of the two vcn_* .c files, keep those diffs as part of the source code, plus only one version of vcn_* .c file, but now add a small script that generates the remaining vcn_* .c files during the build process by using the diffs, e.g., using the patch command. Now the size of the diffs and the size of the patch script, plus the size of one vcn_* .c files, is a better measure of the size of the code.<p>Of course this is a short-term workaround. There&#x27;s still a need to refactor the code properly.')