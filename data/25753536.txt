Item(by='brundolf', descendants=None, kids=[25754352, 25753852, 25753660], score=None, time=1610485083, title=None, item_type='comment', url=None, parent=25750969, text='It seems to me like generics are extremely important for &quot;library code&quot;, and not super important for &quot;application code&quot; (and in fact they can sometimes create more confusion than they&#x27;re worth in the latter context). Go also seems like a language that thrives in smaller-scale, application-focused contexts (microservices being the obvious example).<p>So in this light, and with the basic generic data structures supplied by the standard library, it seems to make sense for &quot;user-level&quot; Go code to generally be better-off without generics<p>Of course the line between &quot;library&quot; and &quot;application&quot; code isn&#x27;t well-defined (especially if you consider libraries outside of the standard one), which is probably where most of the pain-points are coming in')