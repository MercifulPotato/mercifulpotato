Item(by='amluto', descendants=None, kids=None, score=None, time=1611108489, title=None, item_type='comment', url=None, parent=25834896, text='I would argue that ISA does matter.  Beyond the decode width issue, x86 has some material warts compared to ARM64:<p>The x86 atomic operations are fundamentally expensive. ARM’s new LSE extensions are more flexible and can be faster. I don’t know how much this matters in practice, but there are certainly workloads for which it’s a big deal.<p>x86 cannot context-switch or handle interrupts efficiently.  ARM64 can.  This completely rules x86 out for some workloads.<p>ARM64 has TrustZone. x86 has SMM.  One can debate the merits of TrustZone. SMM has no merits.<p>Finally, x86 is more than an ISA - it’s an ecosystem, and the x86 ecosystem is full of legacy baggage. If you want an Intel x86 solution, you basically have to also use Intel’s chipset, Intel’s firmware blobs, Intel’s SMM ecosystem, all of the platform garbage built around SMM, Intel’s legacy-on-top-of-legacy poorly secured SPI flash boot system, etc. This is tolerable if you are building a regular computer and can live with slow boot and with SMM.  But for more embedded uses, it’s pretty bad. ARM64 has much less baggage.  (Yes, Intel can fix this, but I don’t expect them to.)')