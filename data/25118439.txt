Item(by='jlokier', descendants=None, kids=None, score=None, time=1605569370, title=None, item_type='comment', url=None, parent=25117774, text='You can exclude any <i>particular</i> Gödel statement (a specific string of symbols), and as you&#x27;re suggesting you can even exclude an infinite sequence of derived statements too, found by systematically adding the previous ones as axioms and applying a &quot;Gödelisation&quot; procedure to make another.<p>But &quot;this statement is not provable&quot; isn&#x27;t a statement in the logic.  It&#x27;s an English language description of a <i>type</i> of statement, one which has certain self-referential characteristics and shows us the incompleteness of the logic.<p>There are an infinite number of statements in the logic which fit that type by having the relevant characteristics, and they aren&#x27;t all obvious.  The self-referential recursion implied in Gödel&#x27;s construction is designed to make it obvious, but it can be encoded in less and less obvious ways while still containing an encoded image of themselves.<p>You can even get to statements where the self-reference is encrypted (using an actual encryption algorithm)!  Only a mathematician with the &quot;secret key&quot;, or a clever super-mathematician with amazing brute-forcing skills, would be able to read the statement and confirm that it&#x27;s true!<p>And so &quot;perceivable truth&quot; is a thing too.  Some truths are too complex for an ordinary mind to verify, yet still true.<p>To exclude all self-referential statements in the logic of type &quot;this statement is not provable&quot;, you would need a <i>decision procedure</i> to tell you which statements in the logic are those.<p>Unfortunately you can&#x27;t make such a decision procedure.  It&#x27;s very similar to Turing&#x27;s halting problem.  Just as you can&#x27;t make a program which will take any input X and tell you if the program encoded as X will eventually terminate, you can&#x27;t make a procedure which will take any statement S and tell you if it contains a fancy encoding of itself.<p>There&#x27;s just no way to do it.  The fact it can be related to Turing&#x27;s halting problem, which is about real machines and real algorithms running on them, may give you some idea that the core principle can be grounded in something quite down to earth which affects practical applications.')