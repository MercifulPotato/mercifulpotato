Item(by='infogulch', descendants=None, kids=[25657166, 25656188, 25657153], score=None, time=1609912717, title=None, item_type='comment', url=None, parent=25652369, text='Prolog implementations are too heavily reliant on the stated order of predicate rules in order to make execution progress. Many predicates are non-terminating or extremely inefficient when faced with goal inversion, but are often &#x27;fixed&#x27; by simply reversing the order of some of its rules (but making it useless in the original direction in the process). This is disappointing when trying to maximize prolog&#x27;s biggest potential: building true total relations that can project in any direction with a single definition.<p>There are technical reasons why the pursuit of term reordering is problematic, namely &#x27;cut&#x27;, which is a kind of out-of-bounds alteration of the program&#x27;s execution. Previous attempts to get rid of &#x27;cut&#x27; apparently ran into other problems. IMO the root of the issue is that prolog has no way to declare a &quot;closed&quot; predicate, and then optimize execution based on their presence. I think cut papers-over (heh) the lack of &quot;closed predicates&quot;.')