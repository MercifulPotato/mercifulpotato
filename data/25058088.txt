Item(by='hexa00', descendants=None, kids=[25058692, 25058372], score=None, time=1605100724, title=None, item_type='comment', url=None, parent=25033078, text='I work in a ML ecosystem ATM and concurrency is a major problem in python:<p><pre><code>  - Threads can&#x27;t be used efficiently because of the GIL\n\n  - multiprocesses has to serialize everything in a single thread often killing performance. (Unless you use shared memory space techniques, but that&#x27;s less than ideal compared to threads)\n\n  - You can&#x27;t use multiprocess while inside a multiprocess executor.  This makes building things on top of frameworks&#x2F;libs that use multiprocess a nightmare...  e.g try to use a web server like over something like Keras... \n</code></pre>\nThose are the top reasons I don&#x27;t like python but if you got appetite for more:<p><pre><code>  - The dependency ecosystem is a pita, between python versions, package versions pinned or unpinned, requirements.txt, pipenv, poetry, conda... pick one and you&#x27;re still sure to get into issues with other tools needing one system of another, or packages working a bit differently in conda etc... (I use poetry, with conda or pyenv)\n\n  - The culture of let&#x27;s write code easily is good to start with but it becomes a problem as people especially maybe in DS don&#x27;t go further then that... and you end up with bad practices all over the place, un-testable code (the tests systems are also a pain to navigate), copy &amp; pasted blobs etc...  Reading the code of some major libraries doesn&#x27;t inspire confidence, especially compared to like Java, C++, go...\n</code></pre>\nAnd last note I&#x27;ve seen way better emacs setup for python and presentations, it&#x27;s ok as it is but I would not call it a Jimi Hendrix of python like a comment said...<p>I wish ML&#x2F;DS would switch to Julia')