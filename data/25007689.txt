Item(by='VWWHFSfQ', descendants=None, kids=[25010872, 25007742, 25008529], score=None, time=1604672056, title=None, item_type='comment', url=None, parent=25007642, text='It&#x27;s a code-smell in Django, but I agree that this kind of thing shouldn&#x27;t be &quot;auto-fixed&quot; by a bot.  There are perfectly valid reasons why you might want to eschew the convention.<p>&gt; Avoid using null on string-based fields such as CharField and TextField. If a string-based field has null=True, that means it has two possible values for “no data”: NULL, and the empty string. In most cases, it’s redundant to have two possible values for “no data;” the Django convention is to use the empty string, not NULL. One exception is when a CharField has both unique=True and blank=True set. In this situation, null=True is required to avoid unique constraint violations when saving multiple objects with blank values.<p>[0] <a href="https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;3.1&#x2F;ref&#x2F;models&#x2F;fields&#x2F;#null" rel="nofollow">https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;3.1&#x2F;ref&#x2F;models&#x2F;fields&#x2F;#nul...</a>')