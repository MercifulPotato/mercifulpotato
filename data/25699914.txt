Item(by='dan00', descendants=None, kids=[25700785], score=None, time=1610196296, title=None, item_type='comment', url=None, parent=25699821, text='&gt; I would add that, after stack, tooling is not a problem anymore. It&#x27;s not as good and polished as rust&#x27;s cargo but it&#x27;s ahead several other languages.<p>In a way Cabal 3 is even ahead of cargo, by being able of sharing build libraries between different projects and still having a sandbox like build for each project.<p>&gt; There too many different ways of doing things (eg. strings, records), compiler errors need improvement, prelude has unsafe functions (eg. head), exceptions handling is not something I want in a pure language, ghc extensions change the language so much that using some extensions almost feel like having to learn another language.<p>For such a self called safe language, some things are almost comedy like, like getting exceptions for uninitialised record fields or unhandled alternatives in case expressions.<p>But Haskell still has a place in my heart and I‘m still following its development. But for my side projects Rust has replaced it, by being at some things even safer, but foremost safe at the places it‘s most important for me and also quite a bit more pragmatic. For me Rust combines the best parts of Haskell and C++.')