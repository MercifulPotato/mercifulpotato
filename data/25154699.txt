Item(by='cyberpunk', descendants=None, kids=None, score=None, time=1605821902, title=None, item_type='comment', url=None, parent=25148642, text='&gt; Why introduce a new concept to solve the problems that have been solved before?<p>Well, let me try and answer that -- I use istio in production and the reason I use it instead of, for instance, managing 30+ .p12&#x27;s for each individual java service that needs to talk to an external api via mtls (not to mention all of those plus the 20 or so others which all automatically get mtls &#x27;in-mesh&#x27;) is because it&#x27;s an absolute shitload easier to manage.<p>Is it complicated? Yes. Is it more complicated than orcestrating the cfgmgt to achieve the same thing via more traditional methods? No.<p>Don&#x27;t get me wrong, I have my problems with istio:<p>* Until about 1.5 the docs were at best sparodic.<p>* Finding out how to handle things like talking to an entpoint that does some ssl renegotiation without crapping out is still not easy<p>* The configuration &#x2F; yaml spec for the various options is not simple to write<p>However, those are really offset by what we get by using it. I have logs of every external api call my entire estate (a big complicated one) makes, I get automatic tracing, I can do some really cool shit like mirror traffic to a standby pod to do a&#x2F;b testing, none of my serivces need credentials for mtls calls baked into them (they just call http and &#x27;magic&#x27; happens on the egress).<p>End of the day, it&#x27;s a tool. If you don&#x27;t need it, don&#x27;t use it. This article comes across like it was written in the same vein as the old man screaming &quot;get off my lawn&quot;.')