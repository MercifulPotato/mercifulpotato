Item(by='mitchs', descendants=None, kids=None, score=None, time=1602891509, title=None, item_type='comment', url=None, parent=24805646, text='I was able to load up yocto&#x27;s standard VMDKs into HyperV on my windows desktop, but AWS&#x27;s import tool barfed on it. I build an embedded linux and wanted to use AWS as a hypervisor for larger scaled testing. (It was fairly easy to setup a custom machine config in yocto. (Require tune-core2.inc and you&#x27;re off to the races.) I use the variable overrides system to tweak build build arguments on some packages to have them stub out hardware in the virtual images.<p>I&#x27;ve found though that making your own image classes to be the most direct way of formatting your image if you need something exotic. The image classes system is kind of fun - you can keep stacking on more reusable classes that act as a kind of pipeline.<p>To get it working on AWS I ended up doing what I needed to do by spawning a VM with an off the shelf AMI, attaching a second disk, dd-ing my image on, and then capturing that as an AMI. (I&#x27;m kind of annoyed that I couldn&#x27;t find a proper API for this, but maybe I&#x27;m not looking in the right place. Their import tools all want to understand things about your image and mess with it, and I just wanted to send them a flat disk image.) This process was an annoying enough slow down for testing that I ended up making an image that would boot up just enough to get networking up, then fetch the real image from S3 based on directions in user-data, over-write itself, and reboot. If going with newer AWS instance types, don&#x27;t forget to include their kernel modules, and have fun debugging when it doesn&#x27;t boot :)')