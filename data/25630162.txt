Item(by='1337shadow', descendants=None, kids=None, score=None, time=1609761034, title=None, item_type='comment', url=None, parent=25627938, text='I agree with your point, but when it comes to tech choices I would say it depends on the experience, the point is that for an MVP you should go with things you know well and are efficient with.<p>One can setup a Gitlab pipeline with Docker and docker-compose and continuous deployment in something like 7 hours, when pretty used to it.<p>In this case, automating migrations can be done by running the migration script in Docker image command, and then you can have a proper RDMS that you have to add to docker-compose, if you&#x27;ve gone for a development framework that supports migration of course, which I believe you should in general.<p>For example, I made electeez.com which is now the less insecure online voting solution that I know of, thanks to homomorphic encryption library microsoft&#x2F;electionguard and Django, in 3 weeks, add another week for a proper TDD rewrite that accounts for security of the endpoints, at the pace of 3 work days per week. Of course, mvp.css helped a lot too!<p>If I were to implement a better webdesign, my next step would be to use the Material Components Web Components  served by Skypack and just follow the Material Design Guidelines so in another iteration of 3 days have something that&#x27;s a bit more beautiful ... but for sure, beauty doesn&#x27;t matter for an MVP, only usability does.')