Item(by='rektide', descendants=None, kids=[25932321, 25931491], score=None, time=1611767411, title=None, item_type='comment', url=None, parent=25930177, text='&gt; Realtime updates. Sometimes, you want data to be pushed, not pulled (eg. for things like notifications). But the APIs for pushing and pulling data are often different, both on the client and on the server.<p>Two and a half months since Google announced the removal of HTTP Push[1]. There&#x27;d been a number of threads open (some 5 years old now) asking the Fetch spec to please include some way to allow the page to be notified of Push[2], which would have made HTTP Push super interesting &amp; useful.<p>After 5 years, we never got anywhere, never got any help from standards body&#x2F;google in trying to get Push useful. The topic came up a couple times when Abort was being worked on, and it seemed like maybe we&#x27;d see some progress, but those finer points got drowned among the noise of the Abort work.<p>And then Google announced we developers weren&#x27;t using Push enough, &amp; that they were going to drop it. Without ever having tried to make it useful in the first place.<p>HTTP&#x2F;2 seemed to have such promise, was such elation finally getting released in 2015. Seeing so much promise go unfulfilled &amp; then get cancelled has been quite dark. Unlike so so many of the alternatives that we are up to for data fetching, this path was both realtime &amp; still http&#x2F;resource centric. It still felt like core web architecture, in a way few others do. The unfulfilment of this destiny, this loss, has been jarring, &amp; continues to leave us with these open quandries of what new entirely different alternatives do we invent, over WebSockets, over SSE, over WebTransport, &amp;c. HTTP (almost) was here.<p>[1] <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25064855" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25064855</a><p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;whatwg&#x2F;fetch&#x2F;issues&#x2F;51" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;whatwg&#x2F;fetch&#x2F;issues&#x2F;51</a><p>Edit: there was a deleted comment saying that this kind of use case is not what Push was for, is not there to send unprompted data. Technically, Push can only be done in reply to a http request, so there is a factual limitation. Web Push Protocol gets around this by holding a GET open, to allow &quot;unprompted&quot; data. I think a sizable amount of engineers at the time were indeed thinking of Push as an optimization, a way to get pages to load faster. But this contingent of folks who saw HTTP&#x2F;2 Push enabling pushing data capabilities, who were hungry for it, who counted on it&#x27;s maturation: I think they had reasonable expectations, and that we&#x27;re in a very weird place on the web, with HTTP technically having the ability to push semi-unprompted, but browsers never delivering that capability that&#x27;s now inbuilt in HTTP.<p>Using Push is still possible for so called unprompted updates even! At least it was till Push got removed. The trick is that the server needed some way to tell the browser  which resources to send: so the server might be pushing resources, then using SSE to notify the page of those updates, for ex.')