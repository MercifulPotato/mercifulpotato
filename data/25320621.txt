Item(by='ashton314', descendants=None, kids=None, score=None, time=1607223377, title=None, item_type='comment', url=None, parent=25313311, text='I&#x27;m curious as to why they didn&#x27;t mention Racket—perhaps they&#x27;ve just never heard of it.<p>My first programming language was Perl. After Perl came a little bit of C, but then I soon switched to Common Lisp. I wrote a lot of Common Lisp: I programed a text-based adventure game engine ala Zork entirely in CL! After reading Paul Graham&#x27;s On Lisp and learning about Scheme, I took a look. My dad got me a PDF of SICP; I learned to prefer the Lisp-1 style of Scheme to the Lisp-2 style of CL.<p>I&#x27;ve done a bit of Clojure—I feel like Clojure does a better job of making data structures more ergonomic than either Scheme or CL.<p>I&#x27;ve recently started working more in Racket and I am loving it. It feels like a Scheme with a more visible, vibrant ecosystem. (Could just be me not being aware of the Scheme ecosystem—I was only 15 or so at the time I started writing Scheme.) Racket is definitely optimized for building DSLs. But I feel like the standard library is a bit better documented and easier to work with.<p>Just my experience though. I could be totally missing out on some great Scheme libs.<p>At the end of the day, Lisp in all its flavors is great, and I want to write as much of it as I can in my career.')