Item(by='throwaway894345', descendants=None, kids=None, score=None, time=1604427898, title=None, item_type='comment', url=None, parent=24982206, text='&gt; The fact that it also has an active academic community of people who care about Fancy Type Systems does not strike me as an intrinsic downside.<p>No one is arguing that this is a downside. The downside is that there aren’t many people who care about making useful software, or at least there is a relative dearth of content devoted to that end.<p>&gt; To me, OCaml has a very different paradigm from most languages, and that can be a big strength. Implementing something in OCaml after you&#x27;ve written out the types can feel like you are doing a duet with the compiler.<p>I actually agree with this, but as much as I love a good type system, it’s gravy. I can ship software with Go because it has a decent runtime, tooling, ecosystem, learning curve, mindshare, etc even despite its simplistic type system; however, it’s much harder to do the same in OCaml. Also, there are languages like Rust with great type systems and concern about the more ruggedly practical concerns of software development.')