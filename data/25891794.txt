Item(by='orf', descendants=None, kids=[25892366], score=None, time=1611494407, title=None, item_type='comment', url=None, parent=25891719, text='But all this would require huge rewrites of code and would never be backward compatible. You’re trading “py2 vs py3” with “py2 mode vs py3 mode”.<p>So you’d have some magic code that switches py2str to bytes. Which means every py3 caller has to cast bytes into a string to do anything useful with it, because returning strings is the most common case. Then that code has to be removed when the code it’s calling is updated to py3 mode. Which is basically the blue&#x2F;green issue you see with async functions but way, way worse.<p>Then you’d need to handle subclasses, wrappers of bytes&#x2F;str, returning collections of strings across py2&#x2F;py3 boundaries (would these be copies? Different types? How would type(value[0]) work?), ending up with mixed lists&#x2F;dicts of bytes and strings depending on the function context, etc etc.<p>It would become an absolute complete clusterfuck of corner cases that would have killed the language outright.')