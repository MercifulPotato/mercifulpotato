Item(by='pjmlp', descendants=None, kids=[24675491], score=None, time=1601721375, title=None, item_type='comment', url=None, parent=24667080, text='No it doesn&#x27;t, hence why I mentioned that one should learn what OOP is all about.<p>Object based languages are part of the OOP universe from CS point of view, plenty of literature, that apparently is too much to ask to read about, some of which I have provided above.<p>So here we go about <i>std::set</i> and it being OOP.<p>1 - <i>class</i> set, a means for encapsulation, with most of its members de<p>2 - Uses delegation for memory allocation via the allocator_type<p>3 - Uses delegation for key lookups and value comparisasion<p>4 - Implements the concepts Container, AllocatorAwareContainer, AssociativeContainer, ReversibleContainer alongside their respective concept dependencies, which in OOP speak are protocols&#x2F;traits&#x2F;categories;<p>5 - The actual types used for comparisaion and allocation are instances of the respective protocols, with dispatch being decided at compilation time of std::set uses, given the respective implementations as type parameters, in a way similar to multi-method-dispatch.<p>As bonus here is a simplified UML diagram. It isn&#x27;t more detailed, because my patience to draw ASCII art is limited.<p><pre><code>    -------------------------------------------------------------------------------------------  \n    |std|                                                                                     | \n    -----                                                                                     |\n    |                                                           __________________            |\n    |                                                           | &lt;&lt;protocol&gt;&gt;    |           |  \n    |                                                           |   Container     |           | \n    |                                                           |-----------------|           |\n    |                                                           |-----------------|           |\n    |                                                           |-----------------|           | \n    |                                                           | constructor     |           |\n    |                                                           | copy-constructor|           |\n    |                                                           |   destructor    |           |\n    |                                                           |     begin()     |           |\n    |                                                           |      end()      |           |\n    |                                                           |     cbegin()    |           |\n    |                                                           |     cend()      |           |\n    |                                                           |     swap()      |           |\n    |                                                           |     size()      |           |\n    |                                                           |    max_size()   |           |\n    |                                                           |      empty()    |           |\n    |                                                           -------------------           |\n    |                                                                   &#x2F;\\                    |\n    |                                                                   --                    |\n    |                                                                    | extends            |\n    |                                                                    |                    |\n    |          ______________        _______________________    _______________________       |\n    |         | &lt;&lt;protocol&gt;&gt;|        |     &lt;&lt;protocol&gt;&gt;     |  |     &lt;&lt;protocol&gt;&gt;     |       |\n    |         |  Allocator  |        | ReversibleContainer  |  | AssociativeContainer |       |\n    |         |-------------|        |----------------------|  |----------------------|       |\n    |         |-------------|        |----------------------|  |----------------------|       |\n    |         | constructor |        |       rbegin()       |  |     key_comp()       |       | \n    |         |  destructor |        |       rend()         |  |     value_comp()     |       |\n    |         |  allocate   |        |      crbegin()       |  |----------------------|       |\n    |         |  deallocate |        |      crend()         |             &#x2F;\\                  |\n    |         |  max_size   |        |-----------------------             --                  |\n    |         |  construct  |                  &#x2F;\\                          |                  |\n    |         |  destroy    |                  --              implements  |                  |\n    |         ---------------                   |                          |                  |\n    |               &#x2F;\\                          |                          |                  |\n    |               --                          |  implements             &#x2F;                   |\n    |                |                          \\                        &#x2F;                    |\n    |                | implements                \\                     &#x2F;                      |\n    |                |                            \\                   &#x2F;                       |\n    |                |                             \\------------------                        |\n    |                |                                        |                               |\n    |                |                                        |                               |\n    |                |                                     ------------------                 | \n    |         ----------------                            | &lt;&lt;protocol&gt;&gt;     |                |\n    |         |  allocator&lt;T&gt; |          uses             |     set          |                |\n    |         |---------------|&lt;------------------------&#x2F;\\|------------------|                | \n    |         |---------------|                         \\&#x2F;|  constructor     |                | \n    |                                                     |  destructor      |                | \n    |                                                     |  begin()         |                |\n    |                                                     |  end()           |                |\n    |                                                     |  cbegin()        |                |\n    |                                                     |  cend()          |                |\n    |                                                     |  rbegin()        |                | \n    |                                                     |  rend()          |                |\n    |                                                     |  crbegin()       |                |\n    |                                                     |  crend()         |                |\n    |                                                     |  operator=       |                | \n    |                                                     |  get_allocator() |                |\n    |                                                     |  empty()         |                |\n    |                                                     |  size()          |                |\n    |                                                     |  max_size()      |                |\n    |                                                     |  clear()         |                |\n    |                                                     |  insert()        |                |\n    |                                                     |  emplace()       |                | \n    |                                                     |  emplace_hint()  |                |\n    |                                                     |  erase()         |                |\n    |                                                     |  swap()          |                |\n    |                                                     |  extract()       |                |\n    |                                                     |  merge()         |                |\n    |                                                     |  count()         |                |\n    |                                                     |  find()          |                |\n    |                                                     |  contains()      |                |\n    |                                                     |  equal_range()   |                |\n    |                                                     |  lower_bound()   |                |\n    |                                                     |  upper_bound()   |                |\n    |                                                     |  key_comp()      |                |\n    |                                                     |  value_comp()    |                |\n    |                                                      ------------------                 |\n    |-----------------------------------------------------------------------------------------|</code></pre>')