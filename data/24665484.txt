Item(by='lostcolony', descendants=None, kids=None, score=None, time=1601663137, title=None, item_type='comment', url=None, parent=24661411, text='Your statement about char I disagree with. A char is a byte, as you say. But that means it has numerical value as well. I could have a &quot;identityMatrix&quot; function that takes a char (because I decide I won&#x27;t have matrices with a dimension &gt; 256); it would be O(n^2) in operation though. In fact, I could have a 3 dimensional identity matrix creation function, and then it would be O(n^3). I could have a brute force generation of all possible permutations of the numbers 0-input, and now it&#x27;s O(256!). The input of the function does not tell you anything about the complexity of the function (though it may tell you the max value of N. But, for instance, a function of O(n!) is almost assuredly going to be far, far worse than one with O(1), even if the size of N is maximally 256).<p>All that aside, I agree that the OP is O(1). It does 5 comparisons. It always does 5 comparisons, regardless of the input of the isVowel function. Yes, includes, evaluated out of context, is O(n), but you know something about the context it&#x27;s used in to be able to give isVowel a tighter bound. That&#x27;s usually what the goal of Big O is; not to define ~a~ bound, but define the most conservative.')