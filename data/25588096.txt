Item(by='bastawhiz', descendants=None, kids=[25597510], score=None, time=1609374671, title=None, item_type='comment', url=None, parent=25582962, text='Ignoring the bits about Java specifically, one thing that jumps out at me (while reading through the comments) is the distinction between use cases. It seems that the wire format puts some extra burden on the encoding side, but has the benefit of making decoding nice.<p>In a situation where you&#x27;re using protobufs internally, you&#x27;re both encoding and decoding the messages. CPU hours aren&#x27;t fungible, but you&#x27;re paying a small latency cost <i>somewhere</i> in your system between when the data is produced and when it can be consumed.<p>In the case of telemetry, such as with Datadog, you pretty much only encode the data. That is, if I&#x27;m a Datadog customer, I&#x27;m literally never decoding the encoded data on my own servers. That being the case, it would seem that the argument is that if encoding performance is a desirable property, protobufs add overhead that doesn&#x27;t offer any meaningful tradeoff to the user (&quot;you&#x27;re using more CPU on my server and I don&#x27;t see tangible benefits&quot;).<p>Is this an incorrect interpretation?')