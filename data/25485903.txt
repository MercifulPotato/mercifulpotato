Item(by='floatboth', descendants=None, kids=[25486537, 25493554, 25486183], score=None, time=1608468629, title=None, item_type='comment', url=None, parent=25484853, text='RISC-V is just an ISA. How exactly can it popularize the already extremely popular idea of shoving a bunch of peripherals onto a SoC?<p>&gt; RISC-V was designed in a way to accommodate such co-processors, with limited instruction sets that make its CPU design simpler<p>This only affects the extremely tiny embedded space, only under the most extreme constraints you have the &quot;simpler ISA → simpler CPU core design → more space on the silicon for coprocessors&quot; thing.<p>For a general purpose high performance SoC, you don&#x27;t want a simple CPU design, you want a <i>fast</i> CPU design, and you have space for all the coprocessors you want anyway.<p>Other than &quot;being simple&quot;, there&#x27;s nothing an ISA has to do with coprocessors. There&#x27;s nothing ISA-specific about having memory-mapped peripherals.<p>Adding custom instructions directly to the CPU ISA instead? That&#x27;s not exactly coprocessors, that&#x27;s more like modifying the main processor, it&#x27;s annoying (fragmentation) and Apple for some reason was allowed to do it with Arm anyway &gt;_&lt;<p>&gt; Intel and AMD processors currently don&#x27;t have these specific units integrated with their CPU<p>Of course they have GPU, video encode&#x2F;decode, &quot;secure enclave&quot; (fTPM).<p>There&#x27;s even an ISP on some Intel laptop chips:\n<a href="https:&#x2F;&#x2F;www.kernel.org&#x2F;doc&#x2F;html&#x2F;v5.4&#x2F;media&#x2F;v4l-drivers&#x2F;ipu3.html" rel="nofollow">https:&#x2F;&#x2F;www.kernel.org&#x2F;doc&#x2F;html&#x2F;v5.4&#x2F;media&#x2F;v4l-drivers&#x2F;ipu3....</a><p>Neural thingy.. I&#x27;m happy not to pay for one :P')