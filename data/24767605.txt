Item(by='ImprobableTruth', descendants=None, kids=None, score=None, time=1602609538, title=None, item_type='comment', url=None, parent=24764138, text='&gt;Code has a clear context (variables and functions in scope) and a clear goal (return type).<p>At the top level, sure, but if you have a more complex proof term this breaks completely down. You&#x27;d have to evaluate potentially arbitrary expressions to determine the types and furthermore there is nothing to indicate the &#x27;human&#x27; rather than mechanical structure of the proof since metavariables are just completely gone. It&#x27;s just not my experience that I could look at a complex proof term (where I don&#x27;t already know the underlying proof) and figure it out without using an interactive prover.<p>&gt;Add or remove a tactic, and the rest of the proof can be completely invalidated<p>Just like if you randomly removed a part of a proof in term form it wouldn&#x27;t typecheck anymore? &#x27;stupid&#x27; tactics are just as localized as inserting the corresponding term with metavariables . If you&#x27;re talking about how automation tactics are heavily context dependent, this is more of a fundamental quality of automation rather than tactics. Automation done via reflection suffers from the same issue.')