Item(by='kbenson', descendants=None, kids=[25162506], score=None, time=1605891895, title=None, item_type='comment', url=None, parent=25156694, text='&gt; Okay. So using a browser library for building a browser is a shortcut, and that disqualifies it from being a &quot;full&quot; browser.<p>Using an off-the-shelf library to provide core browser functionality disqualifies it from being on a list of browsers that do not use and off-the-shelf library to provide that functionality, yes.<p>I didn&#x27;t say it wasn&#x27;t a full, browser, so please to imply that I did, I said it was a shortcut to providing a full browser (which implies it is a full browser), and it <i>is</i> a shortcut compared to writing one from scratch.<p>Bottom line, if you write software utilizing libraries in a way that is extremely close or identical to a way that other software does and that method is being blacklisted for security, expect problems.  It&#x27;s the same for interpreted code and app stores.  For security they don&#x27;t want programs that can change how they function after review, so they often disallow interpreted code and downloading code to run, and in Apple&#x27;s case, require their own webview library to view remote sites because of this.  They don&#x27;t even allow a set of other valid webview libraries, they just draw a line in the sand and say &quot;ours only&quot;.<p>&gt; Of course any application that uses the COF is indistinguishable from Chremium itself, but Google won&#x27;t then distrust Chremium because it can&#x27;t distinguish it from COF any more, right?<p>Probably.  Seems like a bad business plan to follow in your snarky alternate reality.  A better one might be to figure out how Google disambiguates Safari from the iOS webview, Chrome from the chromium webview, etc, and follow the same path.  You might have had to trade some of the snarkiness in your example for reality, in that case.')