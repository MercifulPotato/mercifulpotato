Item(by='Spivak', descendants=None, kids=[24861283], score=None, time=1603388950, title=None, item_type='comment', url=None, parent=24856502, text='This seems like a <i>lot</i> of work for such a small problem in Ansible that can actually be fixed without any patches. Here&#x27;s an example.<p><pre><code>    - name: Pretend to install stuff.\n      debug: var=item\n      with_items: [git, httpd, vim]\n      when:\n        - &quot;&#x27;all&#x27; in ansible_run_tags or item in ansible_run_tags&quot;\n        - item not in ansible_skip_tags\n      tags: always\n</code></pre>\nIf you run without any tags it will install everything and if you specify --tags=git it will only install git and if you specify --skip-tags=vim it will do the correct thing.<p>Ref: <a href="https:&#x2F;&#x2F;docs.ansible.com&#x2F;ansible&#x2F;latest&#x2F;reference_appendices&#x2F;special_variables.html" rel="nofollow">https:&#x2F;&#x2F;docs.ansible.com&#x2F;ansible&#x2F;latest&#x2F;reference_appendices...</a><p>And in the specific case of installing packages you can speed this process up dramatically with something like the following without having to use tags.<p><pre><code>    - name: Probe the host for installed packages.\n      package_facts:\n\n    - name: Install packages.\n      package: name={{ item }}\n      with_items: [git, httpd, vim]\n      when: item not in ansible_facts.packages\n</code></pre>\nBut this itself is really inefficient too because you&#x27;re still calling the module for every package instead of calling the module once with all the packages. Older versions of Ansible did this automatically but it was super magic so it&#x27;s probably better that it was removed. We can do it ourselves though.<p><pre><code>    - name: Install packages.\n      package: name={{ to_install }}\n      vars:\n        packages: [git, httpd, vim]\n        to_install: &quot;{{ packages | difference(ansible_facts.packages) | list }}&quot;</code></pre>')