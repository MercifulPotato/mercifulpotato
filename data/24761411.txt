Item(by='SavageBeast', descendants=None, kids=None, score=None, time=1602552662, title=None, item_type='comment', url=None, parent=24760950, text='This author makes some good points - and I happen to agree. Tech Debt is like any other kind of debt in that it allows for you to have something today that you pay for later.<p>My personal rule of thumb regarding TD is this: Have we achieved Product Market Fit yet? The answer means a lot.<p>If we have PMF, then we&#x27;re working on a product with customers and expectations around performance. Its important to do good work here because in all likelihood, this code is and will continue to be generally long lived. Its OK to take a little extra time and design something that is reasonably future-proof.<p>If we have not achieved PMF - all bets are off. The customer has no idea how elegant the code is and doesn&#x27;t care - if there even IS a customer in the first place at this stage. Tech Debt here can be a savior in that taking some well-hidden-from-view shortcuts enables you to iterate faster, get more features in front of a (potential) customer, fix more bugs and generally Learn Faster.<p>By the time you have PMF you will for the first time know your Real Requirements (and not before). I can&#x27;t even remember how many times Ive seen perfectly good code scrapped because of a change in direction at an early stage of a product. That was fine too because it was developmental code full of debt. Imagine if we&#x27;d fully engineered it only to scrap it?<p>I propose that Tech Debt can be a good thing in this context.')