Item(by='demurgos', descendants=None, kids=None, score=None, time=1605864296, title=None, item_type='comment', url=None, parent=25154128, text='Congratulations to the Ruffle team!<p>I maintain Open-Flash [1], another project around maintaining Flash. It was started following the discontinuation of Mozilla&#x27;s Shumway emulator.<p>I wanted to write a Node.js program to parse and merge SWF files. I hoped to import Shumway&#x27;s parser and reuse it for my own project but it turned out that Shumway wasn&#x27;t modular  enough. This prompted me to write my own parsers and emitters for SWF and AVM1 (the actionscript bytecode used by Flash &lt; 9). At this point I was able to process my SWF files, and started to dream of going further and provide a full emulator.<p>I wrote a small renderer and VM, and was able to render a few simple files [2]. This happened around 2017-2018, before Ruffle was announced. Unfortunately I was only working on this project only during my free time while I was studying: I did not have much time to dedicate to it. Running a few SWF files is quite easy, but implementing the whole Flash API is a large task hard to achieve alone.<p>When Ruffle was announced, I was happy that there were other people working on a Flash emulator, backed by a company. Ruffle moved fast and quickly surpassed my player. It required me to rethink my goals: there was no point in competing with them. I moved to other projects, but still maintain Open-Flash from time to time: it now pivoted to be more focused on its original goal - processing SWF files. I am using it to analyze SWF files, extract assets, replace assets, recompile the bytecode, decompile it back to ActionScript, etc. My end goal would now be to provide a way to convert SWF files to no longer need a full Flash emulator (for example we could keep the Flash renderer but use JavaScript directly instead of the ActionScript bytecode bu processing the files ahead of time).<p>There&#x27;s still a lot of work to do, but today I am happy for Ruffle: the project continues to advance and it bought us time to save Flash files and avoid us from losing part of internet&#x27;s history.<p>[1] <a href="https:&#x2F;&#x2F;open-flash.github.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;open-flash.github.io&#x2F;</a>\n[2] <a href="https:&#x2F;&#x2F;open-flash.github.io&#x2F;domu-player&#x2F;" rel="nofollow">https:&#x2F;&#x2F;open-flash.github.io&#x2F;domu-player&#x2F;</a>')