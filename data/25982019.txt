Item(by='southerntofu', descendants=None, kids=None, score=None, time=1612123282, title=None, item_type='comment', url=None, parent=25979804, text='&gt; Matrix has a really good solution for end to end encrypted group chat<p>It&#x27;s basically the same encryption scheme as Jabber&#x2F;XMPP uses with OMEMO. The two were developed around the same time. On Jabber existing rooms need to be set to &quot;members only&quot; and &quot;non-anonymous&quot; for encrypted groupchat to take place because Jabber multi-user chats enable using nicknames (only the MUC operators know your address) which prevents clients from querying each other&#x27;s key.<p>&gt; I had to bundle something like 30 megs of jar files for a simple hello world app.<p>That sounds horrible. There&#x27;s pretty good XMPP libraries around nowadays, like slixmpp if python is your thing. There&#x27;s also a WIP Rust xmpp library if you&#x27;d rather.<p>&gt; Also some silly things like ejabberd refusing to hash passwords<p>That sounds creepy. However, prosody does that very well though. And it seems ejabberd supports SCRAM authentication since 2007?<p>&gt; Matrix, with Element (...) If XMPP has anything like that<p>ConverseJS is a web-based Jabber&#x2F;XMPP client that does encrypted groupchat. It&#x27;s supported by other clients as well (such as Conversations on Android). Movim, the more popular Jabber web client (because it has social features) does not support OMEMO yet unfortunately.<p>ConverseJS may not be as user-friendly as Element though because they don&#x27;t have (yet?) the $$$$$$ of VC&#x2F;government money matrix has.<p>&gt; still working on getting a committee together to form the standards<p>There is a bureaucratic tendency around the XMPP Standards Foundation, because standardization is very important to avoid lock-in. However client devs have pushed features before&#x2F;meanwhile publishing specifications and bureaucracy does not seem to be a concern for (some?) devs in practice.')