Item(by='dragonwriter', descendants=None, kids=[24733973], score=None, time=1602274462, title=None, item_type='comment', url=None, parent=24733873, text='&gt; Scenario #1: If the tuples are the same shape (type, size), it&#x27;s fine<p>In the row-oriented view: each row of a datatable is a tuple of the same shape (size and <i>order of types</i> as every other row) -- just like a database table. So, if the shape is (string, int, date) for row #1, its that shape for <i>every</i> row.<p>In the column-oriented view, each column is a homogenous array: every element in the column has the same type.<p>&gt; [ (string, int, date) (string, int, date) (string, int, date) ]<p>Sure, this is a fine starting table; in row-oriented, its shape (the shape of every row) is (string, int, date). In column-oriented view, the table as a whole can be viewed as a tuple of shape (string[3], int[3], date[3]) because it has three rows. Cool.<p>&gt; transposed:<p>&gt; [ (string, string, string) (int, int, int) (date, date, date) ]<p>Right, this is no longer a datatable. The first row has shape (string, string, string). So, if its a table, the other two rows must also have shape (string, string, string); but instead, each has a <i>different</i> shape.')