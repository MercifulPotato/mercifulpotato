Item(by='derekp7', descendants=None, kids=None, score=None, time=1610665061, title=None, item_type='comment', url=None, parent=25783955, text='In the one case I&#x27;m backing up about 60 development &#x2F; testing VMs (they are based on a handful of RHEL &#x2F; CentOS versions).  The backup speed runs at the speed of my network connection (or the disk that I&#x27;m pulling from).  For each snapshot, it takes about 2 - 3 minutes to transfer the full file manifest from the client to the Snebu server, and typically my backups are only a few minutes of transferring the modified files.<p>I have noticed that if I backup to a low-performance 2.5&quot; USB drive, then if the SQLite DB is on that drive the SQL queries can be time consuming (slow seek times on the drive).  But in the case of using my Raspberry Pi 4, I keep the SQLite on the internal SD card and dump a copy of it to the external hard drive after backups, and it is much faster.<p>Compared to Borg, Snebu can handle dozens of servers going to the same repository, and does file-level dedplication across clients (since many are based on the same base build, there is a lot of space saving there).  However, compression is a bit less because I&#x27;m using LZO, and not doing block-level deduplication -- on my test setup I see Snebu taking about 5 - 10% more space than Borg on an initial backup (haven&#x27;t tested Borg on much more than that, but will at some point).<p>Also, compared to Borg and Restic, if you are backing up something with large databases or VM image files, Snebu may not be suitable as it is file-level deduplication instead of block level.  However I typically back up VMs from inside the VM (not from the bare metal host), and for databases I do a full hot backup once a week and just do archived redo logs daily.<p>There&#x27;s documentation on how to create plugin scripts for DB&#x27;s and the like (with a template script in the docs) -- I&#x27;m putting together more examples that handle Oracle, Postgresql, and maybe LVM snapshots specifically.')