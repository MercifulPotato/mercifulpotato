Item(by='bitwize', descendants=None, kids=None, score=None, time=1607486705, title=None, item_type='comment', url=None, parent=25352015, text='I&#x27;ve said it before: one of the goals of Agile methodologies as sold to management is the promise of emulating a good developer with a redundant array of mediocre developers. Good developers can produce good work fast. They can take feedback on an iteration and turn it into working code for the next iteration quickly. But they&#x27;re <i>unreliable</i> -- prone to getting cranky or bored -- and they&#x27;re a single point of failure: If they die or quit because they got too cranky or bored, million dollar projects can be put in jeopardy.<p>But by spreading the work out over a <i>team</i> and making them <i>collectively</i> responsible for the code, and by keeping them constantly in communication, it is hoped, you can take advantage of their cumulative brainpower to get good developer quality and turn around time while smoothing over the reliability issues because any one developer is fungible with the rest.<p>It is hoped, that is. Reality is usually quite different...')