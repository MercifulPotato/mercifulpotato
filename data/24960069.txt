Item(by='throwaway894345', descendants=None, kids=[24969573], score=None, time=1604244494, title=None, item_type='comment', url=None, parent=24958009, text='You and I have disagreed on Go in the past, and I appreciate people’s criticism for Go. The type system isn’t the elegant algebraic ideal that many of us have, and it’s not even the messy generic implementation that many of us are familiar with (a la Java et al). The thing one must confront is that Go is designed to be a pragmatic software engineering language, and type systems (or really any individual in-language feature) simply aren’t going to make a big difference in most projects. The things that matter are tooling, ecosystem, learning curve, deployment story, standardization, etc and Go really shines in these regards. Go mostly gets out of your way and it will steer you toward the happy path, which can be really grating if you have strong preferences (Go values standardization above individuality, personal flourishes, and ego). That said, Rust does a very good job of being pragmatic while also allowing for more personalization, elegance, and so on, so I expect it will gain market share.')