Item(by='scotty79', descendants=None, kids=None, score=None, time=1610122609, title=None, item_type='comment', url=None, parent=25684650, text='What I meant was that sometimes in the handler you might need datum both for the item that the handler is in and the item of the surrounding block (or even blocks).<p><pre><code>    &lt;!-- #each row in rows --&gt;\n    &lt;tr&gt;\n    &lt;!-- #each field in row --&gt;\n    &lt;td&gt;{{field}}&lt;button onclick=&quot;edit&quot;&gt;...&lt;&#x2F;button&gt;&lt;&#x2F;td&gt;\n    &lt;!-- &#x2F;each --&gt;    \n    &lt;&#x2F;tr&gt;\n    &lt;!-- &#x2F;each --&gt;\n</code></pre>\n`edit` might need both row and field to perform the edit, and even possiby # of row and # of field.<p>So a richer context passed to handler might be useful.<p>---<p>Regarding not calling functions from template by design it&#x27;s all good, but you might consider introducing the ability to call some functions (through html attributes prefixed with : or _) during template interpolation.<p>Those could be plugins of your templating system that perform some operations (like generating attribute &quot;hidden&quot; or not depending on boolean argument, or binding form field to view model, or binding event handler, or something else).<p>Those functions might benefit from knowlege of template context they were called from (for example handler binders might want to pass this context along into bound handlers, like you already do with current item and your built-in handler binding solution).<p>I understand that this a bit different from what you made, but by extracting all of that functionality into separate self-contained functions exposed to the user, instead keeping it as integral, internal part of your template interpolation process, you could do yourself a favor. Because people who are missing some funtionality you haven&#x27;t thought of yet might implement it themselves easily. This might increase usage of your framework and contributions from users.<p>---<p>Those are just some ideas where you might go further with your templating engine while keeping it simple. I hope I communicated them clearly enough, but if not and you are interested, please ask.')