Item(by='patrec', descendants=None, kids=[25671817], score=None, time=1610029658, title=None, item_type='comment', url=None, parent=25670724, text='A good example would take a fair amount of space, but let&#x27;s try this bogus example:<p>This is ipython:<p><pre><code>    In [2]: os.path.join(None)\n    ---------------------------------------------------------------------------\n    TypeError                                 Traceback (most recent call last)\n    &lt;ipython-input-2-ba05fdaae739&gt; in &lt;module&gt;\n    ----&gt; 1 os.path.join(None)\n\n    &#x2F;opt&#x2F;anaconda3&#x2F;lib&#x2F;python3.8&#x2F;posixpath.py in join(a, *p)\n         74     will be discarded.  An empty last part will result in a path that\n         75     ends with a separator.&quot;&quot;&quot;\n    ---&gt; 76     a = os.fspath(a)\n         77     sep = _get_sep(a)\n         78     path = a\n\n    TypeError: expected str, bytes or os.PathLike object, not NoneType\n</code></pre>\nThis is SBCL:<p><pre><code>    * (merge-pathnames nil)\n\n    debugger invoked on a TYPE-ERROR in thread\n    #&lt;THREAD &quot;main thread&quot; RUNNING {1000560083}&gt;:\n      The value\n        NIL\n      is not of type\n        (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING PATHNAME SYNONYM-STREAM\n            FILE-STREAM)\n\n      when binding PATHNAME\n\n    Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.\n\n    restarts (invokable by number or by possibly-abbreviated name):\n      0: [ABORT] Exit debugger, returning to top level.\n\n    (MERGE-PATHNAMES NIL 70256781343884 MERGE-PATHNAMES) [external]\n    0]\n</code></pre>\nI find the first much quicker to read and parse (better layout, no SHOUTING, color coded, context info) and you can immediately see what file and location you&#x27;d need to &quot;fix&quot;. What is an example were you prefer the lisp stacktrace to something you&#x27;d get in interactive development with ipython or in production with newrelic or anything else that captures python stacktraces?')