Item(by='arh68', descendants=None, kids=None, score=None, time=1610745892, title=None, item_type='comment', url=None, parent=25787107, text='You know, I largely agree with the author, I do feel sympathetic.  I kinda feel a, idk, lack of sympathy in this thread.  Of course you have to learn the machine in front of you, but would you ever have to set $PATH on an iPad?  If perhaps I could program Fortran on an iPad, would I <i>really benefit</i> from having the history, the context&#x2F;history&#x2F;knowledge of knowing what a $PATH is?  Maybe.  I doubt it.  Knowing &#x2F;bin from &#x2F;usr&#x2F;bin from &#x2F;sbin from putting . first or last, do you <i>know</i> for fact which $PATH cron&#x2F;crontab will use? &amp;c &amp;c.  Knowing if .bash_profile runs, or .bashrc, or .profile, knowing exactly when they run.. I have not found it fun.<p>I think you have to admit, most people anyways, that you&#x27;re ignorant of a lot of systems that came before you.  If I gave you an IBM 704, would it be &quot;easy&quot; to program?  I would not enjoy that, I think we&#x27;d all rather write Fortran on a MacBook.  (ask yourself why?)<p>I have replaced an alternator, but I just learned older cars had &quot;generators&quot; and they&#x27;re quite distinct (though very similar).  I don&#x27;t know much about &quot;points&quot; or distributors, but I&#x27;ve replaced ignition coils &amp; spark plugs, I feel like I basically understand the gist of that.  But I don&#x27;t know what came before it.  I wouldn&#x27;t fault a mechanic for not knowing points, but an automotive engineer should.<p>To me, this is where perfectly good wrenching (programming, coding, per se) on its own might be unlikely to advance the state of the art (in software&#x2F;automotive design).  Maybe: To be a really good technician, you should focus narrowly on the hardware&#x2F;software you service, and not necessarily what came before.  But to be a really good engineer&#x2F;developer&#x2F;designer, you should focus broadly on everything, to as much depth as you can.  Ideally, why not both?<p>I learned HTML in notepad, then looked for game makers, played with Winamp visualization language, anything that was easily programmable.  Did y&#x27;all just go straight to writing Rust in Vim?')