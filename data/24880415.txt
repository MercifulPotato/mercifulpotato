Item(by='eyelidlessness', descendants=None, kids=[24880559, 24880586], score=None, time=1603558780, title=None, item_type='comment', url=None, parent=24879763, text='Honestly I think this conclusion comes more from lack of familiarity with how people solve similar problems with FP than anything. For example, in the author’s followup post:<p><pre><code>        All you have to do is pass the world state to each function and return a new state.\n\n    True, yes, but...yuck. It can be clunky in a language with single-assignment. And what is this really gaining you over C?\n</code></pre>\nI mean, if you stop there, sure that’s ugly. But if you model your program with that as the foundation, then break it down (and generalize where breaking it down is general), it’s pretty easy to reason about. And what it “gains you” is never having to think about something changing in a way that produces invalid or unexpected state. (This is more true in statically typed languages of course.)<p>In any program of any real complexity, you will eventually be inclined to break the problem down into smaller pieces. If your smaller pieces are functions, you can be certain about the state that’s returned by them. If they’re stateful subroutines, then you have to think about multiple pieces at the same time.')