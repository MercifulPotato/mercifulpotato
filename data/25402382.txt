Item(by='demosito666', descendants=None, kids=None, score=None, time=1607812148, title=None, item_type='comment', url=None, parent=25400294, text='&gt; Depending on the language they&#x27;ll show me all references, take me to the definition or declaration, stack those jumps so as I follow the links I can pop back a level to where I was. All of this is instant.<p>Vim can do this too and (rip)grepping the code is only needed if you&#x27;re looking for, you know, text. I have &#x27;gd&#x27; mapped to &quot;go to declaration&quot; and &#x27;gr&#x27; to &quot;find references&quot;. Works across dozens of languages, can be further scripted upon. Basic refactoring (renaming class method in several files) should also work, but I use it so rarely that actually can&#x27;t testify about it (I use rope bindings for python refactoring but it&#x27;s usually limited to a single file).<p>It&#x27;s not as honed as purposely built 5GB IDE of course. But having one editor for all languages and syntaxes is really nice. Things like VSCode have this one too, but I wouldn&#x27;t call them and IDE either.<p>I haven&#x27;t been using IDEs any meaningful amount of time as I&#x27;m not a developer, but if the things you mentioned (go to definition, changing names) are the main reasons for an IDE, one could argue that terminal workflow has substantial benefits, like better understanding of the toolchain, simpler integration with ci&#x2F;cd tools, endless customization, single tool across languages and other standard cons of CLI tools.<p>I do, however, find vim without extensions useless for editing code as well.')