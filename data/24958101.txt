Item(by='sergeykish', descendants=None, kids=None, score=None, time=1604220309, title=None, item_type='comment', url=None, parent=24956938, text='undefined would be rare<p><pre><code>    foo\n    &#x2F;&#x2F;Uncaught ReferenceError: foo is not defined\n</code></pre>\nif not property access, and it lies<p><pre><code>    o = { foo: undefined }\n    o.foo \n    &#x2F;&#x2F;undefined\n    o.hasOwnProperty(&#x27;foo&#x27;)\n    &#x2F;&#x2F;true\n</code></pre>\nArray is an object, access by index is property access<p><pre><code>    a = []\n    a[0]\n    &#x2F;&#x2F;undefined\n</code></pre>\nThat&#x27;s unfortunate. In Ruby:<p><pre><code>    foo\n    #NameError (undefined local variable or method `foo&#x27; for main:Object)\n    defined?(foo)\n    #=&gt; nil\n\n    o = Object.new\n    o.foo\n    #NoMethodError (undefined method `foo&#x27; for #&lt;Object:0x000055f2f4e56e78&gt;)\n\n    a = []\n    a[0]\n    #=&gt; nil\n</code></pre>\nAnd Ruby enforces method arity and keyword parameters:<p><pre><code>    def foo(value)\n    end\n    foo\n    #ArgumentError (wrong number of arguments (given 0, expected 1))\n    \n    def bar(value:)\n    end\n    bar\n    #ArgumentError (missing keyword: :value)\n</code></pre>\nBasically it throws on undefined.<p>I think reimplementation is a great way to uncover how things work, Ruby &quot;fix&quot; for property access<p><a href="http:&#x2F;&#x2F;sergeykish.com&#x2F;ruby-like-javascript-undefined.rb" rel="nofollow">http:&#x2F;&#x2F;sergeykish.com&#x2F;ruby-like-javascript-undefined.rb</a><p>Anyone knows how to relax arity?')