Item(by='josefx', descendants=None, kids=[25319205], score=None, time=1607205716, title=None, item_type='comment', url=None, parent=25318070, text='&gt;  at least not in code that is intended to be remotely portable across time, space and architecture.<p>intmax_t exists probably because most integer types in C are not portable. You can&#x27;t write C code that uses int64_t and expect it to compile, the type doesn&#x27;t have to exist, neither do int32_t or int16_t. Say you have a generic int lowestBitSet(intmax_t) function and want to make it available, you don&#x27;t care how large the input integer is as long as you do not truncate the largest type available to whoever ends up using it. Without intmax_t you end up with library developers having to either setting their own upper limit, limiting the portability of their library or checking for the availability of each type themselves.')