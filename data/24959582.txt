Item(by='hn_throwaway_99', descendants=None, kids=None, score=None, time=1604239823, title=None, item_type='comment', url=None, parent=24958656, text='I don&#x27;t think this is an absurd edge case at all, and your initial paragraph doesn&#x27;t make sense to me.<p>Let&#x27;s say I have an object that represents an object in the DB, and one of the properties on that object represents an relationship to another entity which may not always be there. Then setting null on the object would mean set the corresponding DB column to null. How is that a discrepancy?<p>The problem with JS isn&#x27;t that it doesn&#x27;t really need null, it&#x27;s that it doesn&#x27;t really need undefined, but now that undefined is there it&#x27;s impossible to rip it out. Most other languages that have null also have a <i>separate</i> concept of &quot;doesn&#x27;t exist&quot;: accessing a non-existent property would throw an exception, not return null, and for example you could tell the difference between whether a Map has a value at all vs has a null value by calling the equivalent of map.containsKey. Point is it is often necessary to tell the difference between &quot;object doesn&#x27;t have a property&quot; vs. &quot;property is null&quot;, and for better or worse (I think mostly worse) JS uses undefined to distinguish between those cases.')