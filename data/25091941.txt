Item(by='josephg', descendants=None, kids=[25091979], score=None, time=1605357394, title=None, item_type='comment', url=None, parent=25091720, text='Thanks. It looks like I have a deep philosophical disagreement with Linus:<p>&gt; Theory and practice sometimes clash. And when that happens, theory loses. Every single time.<p>I think he&#x27;s wrong. Compiler &#x2F; PL theory works. Distributed systems theory (TLA+, etc) allow us to write correct software. I&#x27;ve used fuzzers to find and fix bugs in databases and concurrency algorithms, and the result is robust, working code.<p>Theory can add complexity, but complexity added in one place can remove complexity from another. (Eg TCP is complex but reliable, in order delivery in the network layer makes the application layer much simpler and free of bugs.)<p>Linus&#x27;s argument is that users will keep writing open(); write(); close();. I think he&#x27;s half right - thats the right level of complexity the API should have, with no tricky, buggy fsync barriers. But we&#x27;ve known how to write simple, correct APIs for modifying data like this for decades. The answer is transactions. Keeping the kernel as it is just keeps us in a dark age of buggy software.')