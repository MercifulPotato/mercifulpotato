Item(by='nescioquid', descendants=None, kids=None, score=None, time=1607713169, title=None, item_type='comment', url=None, parent=25388209, text='Of course, you&#x27;re absolutely right in your reductive view, but it is not what I was trying to suggest.<p>I remember an explanation that Sussman gave for why MIT retired the SICP course, replacing with it a course in which students program robots with Python.<p>He said (and I&#x27;m badly paraphrasing) that one used to be able to scale up your reasoning about how a piece of software works in a similar way to how you do it when looking at a circuit diagram: you have these little components with discrete behaviors and you can simply combine them and be able to predict the result.<p>Today, however, as programmers (to a greater extent than before) we create systems by cobbling together large, opaque, libraries whose properties are poorly described and require one to essentially &quot;do science&quot; on those black boxes.<p>And the trade-off is that we&#x27;re often better off plugging A into B, and hence there&#x27;s a lot more of that sort of line work in industry.<p>edit: I should say that I don&#x27;t much like that sort of work, but it was unwarranted to say it is &#x27;alarming&#x27; that the trend has gone this way.')