Item(by='flukus', descendants=None, kids=[25415982], score=None, time=1607942002, title=None, item_type='comment', url=None, parent=25414941, text='Java was full of AbstractSingletonBeanFactory classes long before unit testing became a thing, or at least before it was a widespread. I think IOC containers actually helped eliminate many of these abstraction overall, you need many less singletons and factories.<p>&gt; intercept and rewrite code at execution time<p>I think &quot;execution time&quot; is one of the big issues, a lot of these patterns evolved from application server middleware like glassfish that would introspect and run packages and often provide services at runtime, sun and IBM were busy selling licenses and support for these applications servers so these abstractions were great for their bottom line.<p>Take away the execution time requirement and injects mocks&#x2F;fakes&#x2F;stubs at compile time suddenly you don&#x27;t need interfaces to make mocking easier, static methods are easy to mock and you probably don&#x27;t need DI&#x2F;IOC.')