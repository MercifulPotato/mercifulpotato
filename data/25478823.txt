Item(by='jodrellblank', descendants=None, kids=None, score=None, time=1608397351, title=None, item_type='comment', url=None, parent=25476290, text='Dyalog APL has a safety blanket of procedural programming[1], it&#x27;s another strange aspect of APL and the internet that it seems almost completely overlooked - unremarked upon and never discussed. e.g. this is roughly a prompt-for-username and validate-username code:<p><pre><code>    ∇result←verifyUserName userName\n\n     isValid←1\n     message←&#x27;&#x27;\n\n     :If (userName≡&#x27;&#x27;)∨(8&lt;≢userName)\n         message←⊂&#x27;Please enter a name between 1 and 8 characters long&#x27;\n         isValid←0\n     :ElseIf &#x27; &#x27; ∊ userName\n         message←⊂&#x27;Please enter a name with no spaces&#x27;\n         isValid←0\n     :EndIf\n    ∇result←isValid message\n\n\n\n    ∇userName←getUserName\n  \n      nl←⎕UCS 13 10   ⍝ carriage return, newline\n  \n      :Repeat\n          ⍞←&#x27;Enter a username: &#x27;,nl\n          newName←⍞       ⍝ Read from keyboard input\n      \n          nameIsValid message←verifyUserName newName\n      \n          :If 0≡nameIsValid\n              ⍞←message\n          :EndIf\n      \n      :Until 1≡nameIsValid\n    ∇userName←newName\n\n</code></pre>\nIt&#x27;s unexciting compared to the dense showoffy codegolf APL which is normally posted on the internet, and what you still don&#x27;t get with it is things like `string.Length` or `or` or `Console.WriteLine()` etc. That is, procedural&#x2F;imperative APL looks like APL and doesn&#x27;t save you from having to know APL symbols or execution model. But it could save you from having to wrangle some weird mathematical dodge around a simple :If&#x2F;:Else branch or trying to use ⍣ when you really just want to write :For i :In 2 4 6 8 10<p>It has an OOP&#x2F;Class system as well, but that doesn&#x27;t save you from having to know APL either.<p>[1] I don&#x27;t think NARS2000 does, and I&#x27;m not sure about the bigger IBM &#x2F; Sharp APLs. I don&#x27;t think J or K have.')