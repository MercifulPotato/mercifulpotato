Item(by='dan-robertson', descendants=None, kids=None, score=None, time=1608660960, title=None, item_type='comment', url=None, parent=25505715, text='I didn’t find any reference but the algorithm is approximately this:<p>1. Assume there is one point source of sound which dominates everything else<p>2. Input two frames of samples, s and t, and compute cross correlation: a measure of how similar they are for a given delay between samples<p><pre><code>  n(k) := sum(s(i) t(i+k)) &#x2F; (s•s)(t•t)\n</code></pre>\n3. Find the k which maximises n(k)<p>4. Do some beamforming to improve the signal to noise ratio. This sounds complicated but basically you just shift t by k samples and average it with s.<p>I’m not really sure how this works if k changes over time, but I guess something could be done to change it in a more continuous way.<p>I also don’t really know how it works with more than two microphones or if you know the geometry of the array.')