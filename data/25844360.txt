Item(by='samatman', descendants=None, kids=[25844616, 25844761, 25845357, 25844892, 25844705, 25845414, 25846253, 25845000], score=None, time=1611134857, title=None, item_type='comment', url=None, parent=25833557, text='0-based indexing with closed intervals is better for slicing. This shouldn&#x27;t be controversial. It&#x27;s because you can represent a zero interval cleanly: [3,3) is an empty interval after slot 2, representing a single cell is [3,4).<p>This has two nice properties. One is that two slices are adjacent if the beginning and ends match, and the other, far more important, is that the length of the slice is <i>end - start</i>.<p>That&#x27;s the one that really gets us something. It means you can do relatively complex offset math, without having to think about when you need to add or subtract an additional 1 to get your result.<p>I use Lua every day, and work with abstract syntax trees. I mess this up all. the. time.<p>Of course you can use closed intervals and stick with 1-based indexing. But for why you shouldn&#x27;t, I&#x27;m going to Appeal To Authority: read Djikstra, and follow up with these.<p><a href="https:&#x2F;&#x2F;wiki.c2.com&#x2F;?WhyNumberingShouldStartAtZero" rel="nofollow">https:&#x2F;&#x2F;wiki.c2.com&#x2F;?WhyNumberingShouldStartAtZero</a>\n<a href="https:&#x2F;&#x2F;wiki.c2.com&#x2F;?WhyNumberingShouldStartAtOne" rel="nofollow">https:&#x2F;&#x2F;wiki.c2.com&#x2F;?WhyNumberingShouldStartAtOne</a>\n<a href="https:&#x2F;&#x2F;wiki.c2.com&#x2F;?ZeroAndOneBasedIndexes" rel="nofollow">https:&#x2F;&#x2F;wiki.c2.com&#x2F;?ZeroAndOneBasedIndexes</a>')