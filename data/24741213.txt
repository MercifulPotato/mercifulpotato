Item(by='existencebox', descendants=None, kids=[24741341], score=None, time=1602357947, title=None, item_type='comment', url=None, parent=24739699, text='This was an very solid breakdown.  If I may lend some color: (disclaimer: I&#x27;m part of a team doing architectural design of new SDKs at MS, and am somewhat proud that we&#x27;re actually Trying To Get Outside Involvement, so willing to hold that up here, all thoughts and opinions are only my own.)<p>To your points about &quot;api-level&quot; and &quot;open source&quot;, in my end of the world I have the rare opportunity to share &quot;Real world examples&quot; of how we do architectural design, as we&#x27;re extremely open with that process&#x2F;do an increasing amount on github.  @Op, feel free to take a peek if it&#x27;d be useful, we try to do enough of our discussions in issues&#x2F;PRs (tagged per product) that you may be able to get a sense. [0]<p>The parent&#x27;s comment certainly covered the bulk of my bigCo experiences, but I&#x27;d be remiss to not give examples of the niches where more of this does happen; as we also tend to cover many of the questions OP asked (guidelines on tech and arch choices, documentation, alignment and freedoms, etc)  The downsides may also be apparent from this example, especially to anyone who has been an open source participant:  Many cooks in the kitchen, many competing interests, and many often conflicting idioms.  While these are in some part specific to shared API architecture over e.g. system architecture, I do find they take the same broad shape (largely incentive&#x2F;stakeholder based) as the compromises we make broadly, but indexing far higher on backcompat, consistency, and alignment.<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;Azure&#x2F;azure-sdk-for-net&#x2F;tree&#x2F;master&#x2F;sdk" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;Azure&#x2F;azure-sdk-for-net&#x2F;tree&#x2F;master&#x2F;sdk</a>')