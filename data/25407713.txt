Item(by='nchelluri', descendants=None, kids=[25407789], score=None, time=1607877132, title=None, item_type='comment', url=None, parent=25407596, text='I agree with some of your points and disagree with others.<p>The human body is exceptionally awesome, but also so very fragile. I think we can do better with well-thought-out design, and a part of that that I embrace is the value of simplicity.<p>My thoughts can be best said with a quote (especially the part about a complexity budget):<p>&gt; I used to tolerate and expect complexity. Working on Go the past 10 years has changed my perspective, though. I now value simplicity above almost all else and tolerate complexity only when it&#x27;s well isolated, well documented, well tested, and necessary to make things simpler overall at other layers for most people. For example, the Go runtime is relatively complex internally but it permits simple APIs and programming models for users who then don&#x27;t need to worry about memory management, thread management, blocking, the color of their functions, etc. A small number of people need to understand the runtime&#x27;s complexity, but millions of people can read &amp; write simple Go code as a result. More importantly, Go users then have that much more complexity budget to work with to build their actual application. I would&#x27;ve never built Perkeep had I needed to fight both its internal complexity and the complexity imposed on me by other contender languages&#x2F;environments at the time.<p>&gt;<p>&gt; All that is to say, simplicity is not only refreshing, but it also enables. Go made me feel productive in a way I hadn&#x27;t felt in many years where everything just felt like it was getting more complex. Ever since finding Go, I&#x27;ve been regularly hunting for other technologies that provide simplicity as a feature.<p><a href="https:&#x2F;&#x2F;bradfitz.com&#x2F;2020&#x2F;01&#x2F;30&#x2F;joining-tailscale" rel="nofollow">https:&#x2F;&#x2F;bradfitz.com&#x2F;2020&#x2F;01&#x2F;30&#x2F;joining-tailscale</a>')