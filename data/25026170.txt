Item(by='thomastjeffery', descendants=None, kids=None, score=None, time=1604847798, title=None, item_type='comment', url=None, parent=24999103, text='I made an analogy in another comment that I think is a really great expression of this problem:<p>Programs are like houses. They are made of walls.<p>Traditional UI gives users doorways and windows, but users are not allowed to pass through walls.<p>Even the most liberal programs that allow users to redecorate or even move walls do not give the user ultimate and immediate freedom.<p>Say a user wants to make a new room. They can move some walls around and shove the room in the space left over, but where do the doors in that room lead?<p>In order to make deep refactoring UI changes, the user must undo the careful design that developers gave them.<p>The ultimate freedom would be for the user to rebuild from scratch, but that&#x27;s too much work, right?<p>What if the house was entirely configuration? What if every wall was optional? What if our program was fundamentally just an empty floor with an optional example house built on it?<p>That&#x27;s what we almost get with shell commands. That&#x27;s what we almost get with web browsers. That&#x27;s what we almost get with Emacs. That&#x27;s what we almost get with tiling window managers.<p>I&#x27;ve never seen an ultimate instance of this. I have, however, seen a trend away from it, and that trend is frustrating.<p>This topic is something that is vitally important to software design, and yet we don&#x27;t even talk about it. We just keep rolling with the status quo until someone breaks down a wall and becomes a hero.')