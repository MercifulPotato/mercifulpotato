Item(by='LukeShu', descendants=None, kids=None, score=None, time=1607050575, title=None, item_type='comment', url=None, parent=25298320, text='Yes and no.<p>Specifically with regard to compiling: OpenGL 2.0 introduced the &quot;GLSL&quot; shader language, which is a C-like language that compiles to run on specific GPUs.  OpenGL has an API call that says &quot;given this GLSL string, compile it for the current GPU&quot;, and the libGL driver compiles that string for the program at runtime.  You don&#x27;t compile it ahead-of-time.<p>But also, the 3D APIs exposed by the kernel are pretty low-level, mostly just slightly abstracting over what the hardware itself exposes, essentially exposing a different API for each family of GPUs.  The work of abstracting over those different low-level APIs in to a vendor-neutral API (in this case, the OpenGL API), is the job of a userspace library (in this case, libGL).<p>(Now, 2D acceleration, the kernel does a lot more work to provide a consistent 2D API between different devices.)')