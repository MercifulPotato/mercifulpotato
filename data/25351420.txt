Item(by='BoorishBears', descendants=None, kids=None, score=None, time=1607462014, title=None, item_type='comment', url=None, parent=25351055, text='I know this is just a throwaway example, but feel <i>just looking at the code layer</i> this kind of elegance is comes at the cost of clarity and conveying intent, and I see that happen a lot.<p>The second method explicitly checking for null is great because it&#x27;s telling me so many things very plainly:<p>1. There can be no address for a user\n2. There is otherwise one address per one user\n3. If there is no address we explicitly do nothing (if clause with no else)<p>If we do the same analysis for the first method it actually feels like it&#x27;s conveying false conclusions. It&#x27;s implying there&#x27;s multiple addresses per user, for example.<p>And the fact that if a user has no address we don&#x27;t do anything is still true, but the intent feels buried in the behavior of the loop.<p>By default I try to value writing code in a way that conveys the most intent possible over how it feels to write<p>For example, another language with nullable types (Kotlin) has<p><pre><code>    user.address()?.let { it.sendMail() }\n</code></pre>\nI&#x27;ve seen people write code like this, and it just feels so unnecessary, how much longer does it take to parse? And it still doesn&#x27;t have the clarity of intent that a simple null check has.')