Item(by='marcan_42', descendants=None, kids=[24727353, 24707363, 24707339, 24726280, 24709159, 24707079], score=None, time=1602068448, title=None, item_type='comment', url=None, parent=24705992, text='FireWire is a much better design than USB in many ways. I still use a FireWire audio interface purchased not that long ago (though now it has to go through a Thunderbolt adapter).<p>The problem with USB 1 and 2 is that it was designed by insane committee. This resulted in stuff like those versions not using true differential signaling (like USB3 does) even though that was common technology at the time. Instead they have end of packets delimited by single-ended conditions. That, coupled with a single ground wire for power and data makes for a world of ground loop issues.<p>And then they made the frame rate 1kHz, which is right in the peak of human hearing sensitivity. And so, USB&#x27;s terrible design is single-handedly responsible for a huge amount of, even most, noise and interference issues in audio systems involving it. Especially in low cost consumer hardware, but it has made its way into many professional productions. Any time you hear a constant 1kHz beep of interference, mixed with some fuzzy crackling, nine times out of ten that&#x27;s a ground loop with USB and audio involved. It&#x27;s everywhere once you listen closely. Headphone output on your laptop or phone is noisy when you access a USB drive, or has a 1k beep? USB. USB audio widget has background fuzz and a beep? USB. Slight 1k beep in the background of a news cast? Someone had the bright idea of using USB somewhere along the line.<p>It didn&#x27;t have to be this way. Ethernet, SATA, plenty of other protocols use proper differential signaling and don&#x27;t have this issue. How to do this properly was well established long before USB existed.<p>And to add insult to injury, while USB 2 specifies a transaction translator, so you can run USB 1 devices on a USB 2 bus, USB 3 does not. And so, while USB 3 devices don&#x27;t have this problem any more, <i>you can&#x27;t plug in a USB 2 device into a USB 3 bus or a USB 3 hub</i>. And nobody uses USB 3 for low channel count audio interfaces, so this problem will remain forever. Oh sure, you can plug it into a USB 3 <i>port</i>, which is actually a USB 3 port and a USB 2 port in one. And you can plug it into a hub labeled &quot;USB 3&quot; which actually has a whole USB 2 hub along side it in parallel. The communication from USB 2 devices remains USB 2 all the way to the host. And so, not only do USB 2 devices only get 480Mbps of <i>total</i> bandwidth on a USB &quot;3&quot; hub (minus a ton of overhead, because the protocol is terrible), it doesn&#x27;t fix this issue! And did I mention USB 2 is impossible to galvanically isolate in any kind of cost-effective way?<p>I could go on and on about how the polled architecture causes performance bottlenecks, about how it&#x27;s impossible to tunnel without unfixable corner cases, about how its latency requirements preclude lots of innovative ideas, about how the descriptor and device inquiry protocols are practically designed to guarantee that implementations are vulnerable and have exploitable bugs (yes, your USB stack is vulnerable. They all are. This is how the PS3 got hacked. And the Switch. And tons of other devices. USB developers like me know misbehaving USB devices crash hosts all the time).<p>I don&#x27;t like USB.')