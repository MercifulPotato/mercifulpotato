Item(by='gchamonlive', descendants=None, kids=[25841755], score=None, time=1611102163, title=None, item_type='comment', url=None, parent=25833122, text='Pipes in powershell are just as powerful as in bash.<p>Every curly braces pair is a lambda function with a single parameter $_.<p>You can approach powershell very functionally and the abstractions work fine.<p>It is however a minefield of pitfalls.<p>Obscure error handling at the root script. Always run code at a main function that is called in the root script.<p>Permissive undefined variables and parameters access.<p>Unwinding nested attributes by referring to it at the root object level: what if you need a variable attribute from an object but the attribute collides with a built in method?<p>Truthy and equality are not interchangeable. -eq and Object.Equals produces vastly different results, due to the first not being type safe.<p>Some functions are sintactically similar to flags and parameters: -join.<p>Case insensitivity. Seriously...<p>All in all, if you are mindful of the pitfalls, use Set-StrictMode early on and don&#x27;t run code at the script root, you are fine. Better than bash. A well written poweshell code is in my opinion way more readable and maintainable by than a well written bash code, despite its shortcomings.<p>However both of them don&#x27;t come close to what python is in terms of type safety, error handling, legibility, flexibility and maintainability, even for system scripting.')