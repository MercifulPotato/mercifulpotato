Item(by='coldtea', descendants=None, kids=[25282807], score=None, time=1606948979, title=None, item_type='comment', url=None, parent=25282444, text='&gt;<i>Iâ€™m trying so hard not to rant here</i><p>Not that hard, there&#x27;s a bias showing.<p>First, those things you&#x27;ve mentioned are nothing to sneer at, are actual very good decisions (even if accidental) for a webserver-centric language.<p>They enable even naive developers to achive good scalability and isolation, and make fast development&#x2F;debug cycles trivial.<p>Second, PHP has been improved by leaps and bounds from the days of 4, to the point of being a totally different language - all of the above points are already made in TFA.<p>Most arguments against it are moot today, or only apply superficially to the standard library, not the language (order of arguments, and so on).<p>Plus, it is speedy too, post 6, and especially post 7 (and there&#x27;s a whole new JIT in 8). In any case, it has constant work on speed and memory reduction.<p>And of course it has a huge ecosystem of libs, projects, and frameworks, including not available anywhere else projects like Wordpress.<p>And the standard library (warts included) between JSON, DB drivers, LDAP support, SMTP, etc., is one of the most complete ones this side of Python, and perhaps even fitter than Python&#x27;s for typical web development work.<p>Plus the deployment model is one of the best. Copy your files to a directory. Done. Add a redirect instruction to your server if you want to make it more fancy...<p>For third party libs, composer is up there with any major package dependency&#x2F;install solution.<p>And for the core libs, plugins, etc installation is handled perfectly by the standard package managers in all Linux distros (and probably Windows too), and is even easier with MAMP, WAMP, etc for local development. Trivial to dockerize too if that&#x27;s your thing.')