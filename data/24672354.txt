Item(by='riskable', descendants=None, kids=[24675025, 24672430, 24673067], score=None, time=1601736054, title=None, item_type='comment', url=None, parent=24671403, text='This is awesome!  I&#x27;ve been developing firmware in Rust for a Hall Effect keyboard (with springless, magnetic separation switches!) I&#x27;m developing&#x2F;inventing (just ordered the first PCBs!).  I really wish we had something similar in the embedded Rust ecosystem as a lot of the crates mentioned don&#x27;t support #![no_std] (declaration you make at the top of your Rust code to indicate that the compiler should <i>not</i> include the standard library).<p>The world of embedded Rust seems to be developing incredibly fast.  Especially since there&#x27;s so much hardware that you can use with it now and more is on the way (especially in the world of RISC-V...  Holy crap there&#x27;s a lot of interesting and exciting hardware coming!).  As a result of that I seem to be regularly encountering situations where I try to do something basic but no one has &quot;made a crate for that yet&quot; (that works with #![no_std]).<p>Just the other day I found out just how difficult it is to benchmark something (i.e. grab the current time, do something, get the time again, then subtract the difference...  It&#x27;s really, <i>really</i> complicated!  Way moreso than it should be).  If someone wanted to make a name for themselves by developing widely-used software <i>now is the time</i> to make your mark!  The world of embedded Rust is waiting for you!<p>FYI: I&#x27;m still a newbie when it comes to Rust but I was able to develop a <i>universal</i> driver (works with any hardware platform) for working with 74HC4067 and 74HC4051 analog multiplexers in just a few days...  <a href="https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;analog-multiplexer" rel="nofollow">https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;analog-multiplexer</a>')