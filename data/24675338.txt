Item(by='brendangregg', descendants=None, kids=None, score=None, time=1601766458, title=None, item_type='comment', url=None, parent=24674719, text='Thanks for getting the BPF book. Further references for BPF bits would be the kernel docs (Documentation&#x2F;bpf), kernel source (kernel&#x2F;bpf, include&#x2F;...&#x2F;<i>bpf</i>), the self tests (tools&#x2F;testing&#x2F;selftests&#x2F;bpf), Cilium&#x27;s docs (<a href="https:&#x2F;&#x2F;docs.cilium.io&#x2F;en&#x2F;stable&#x2F;bpf&#x2F;" rel="nofollow">https:&#x2F;&#x2F;docs.cilium.io&#x2F;en&#x2F;stable&#x2F;bpf&#x2F;</a>), and if all else fails, mailing lists like iovisor-dev.<p>It sounds like there should be a deep book on BPF internals (written by maintainers Alexei &amp; Daniel), but it would be a tough sell: you really do need the maintainers to author it or be heavily involved to do it well, and it&#x27;s a lot of work for a changing target, and without a large audience (lots of people will use BPF, but few will code it at that level. I&#x27;d guess 100 world-wide. Not a great case for a book!) Compare it to my BPF perf tools book: big audience (end users: developers, SREs, perf engineers, etc), and has a long shelf life (the tools are done, and work, and should keep working).')