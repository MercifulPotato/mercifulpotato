Item(by='WorldMaker', descendants=None, kids=[25475147], score=None, time=1608249399, title=None, item_type='comment', url=None, parent=25456976, text='You could trial implement some of these ideas as a design pattern in the existing Hooks design as essentially an &quot;HOC&quot;.<p><pre><code>    interface HookClassComponent {\n        render(): React.JSX\n    }\n\n    interface HookClassComponentConstructor {\n        new(): HookClassComponent &#x2F;&#x2F; all hooks should happen here\n    }\n\n    function renderHookClass(hookClass: HookClassComponentConstructor) {\n        const instance = new hookClass()\n        return hookClass.render()\n    }\n</code></pre>\nThat said, if you were to actually try to build HookClassComponents like this you&#x27;d see some of why React presumably didn&#x27;t bother to include an &quot;HOC&quot; like this. A lot of the hooks rely on simple arrow function closures around variables and it would presumably be a lot easier to make mistakes in handling that temporary mutable state directly as class (private) properties than in single function scopes, and there would presumably be a lot more pressure to make such state modifiable by outside components.<p>I&#x27;d be curious though to see more people try an &quot;HOC&quot; like this, though, and report back what sort of results they get.')