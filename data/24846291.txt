Item(by='dspillett', descendants=None, kids=None, score=None, time=1603274843, title=None, item_type='comment', url=None, parent=24844772, text='Look for a good reference about handling trees in SQL. There are a number of books on the whole area, and many smaller more focused articles online.<p>The most common place I&#x27;ve encountered recursive CTEs being massively useful in real world work is working with company responsibility &amp; reporting hierarchies (line management, regulatory supervision, &quot;spans of control&quot; reporting, ...) where there is not a fixed number of levels.<p>When there are a small and fixed number of levels (for instance every drone has a supervisor and senior supervisor and you don&#x27;t monitor connections above that) there are often other solutions that people find easier to understand and&#x2F;or perform faster but for deeper trees or those where the level structure is any less static, recursive CTEs are a godsend.<p>Other examples include nested taxonomies (nature, book or other publication filing, nested tags for categorisation), properly threaded discussion records, family trees (though these are graphs rather than trees unless you impose some strict limits on what you count), representing file-system like structures in the DB, ...<p>Graphs get tricker (trees are a subset of graphs) as you may need to consider multiple paths to the same node, infinite loops, and other complications, so I suggest looking into trees first then expending your research.')