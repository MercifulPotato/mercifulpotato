Item(by='imtringued', descendants=None, kids=None, score=None, time=1609158818, title=None, item_type='comment', url=None, parent=25554865, text='Going by what the article says<p>&gt;First it is combining two instructions into one through compression.<p>&gt;Then it splits it into two through decompression.<p>&gt;The combine them back into one operation through macro-op fusion.<p>The general pattern appears to be: load 8 32bit instructions (2 compressed instructions count as 1 32bit instruction), convert them to up to 16 32 bit instructions. Now your macro op fusion would only have to operate on 32bit instructions.<p>Although the decoder sounds trivial the macro op fusion still has a massive problem. x86 macro op fusion only needs to look at the first instruction to know which macro op fusion to apply because x86 does not fuse more than 2 instructions.<p>The type of macro op fusion that RISC-V needs to be competitive would span up to 6 instructions. At that point your instruction decoding problem is as complicated as a regex which means unbounded complexity compared to whatever x86 does. Solving this problem efficiently would require some sort of &quot;hint prefix&quot; on the first instruction. This is far more complicated than just adding a new instruction.')