Item(by='DoofusOfDeath', descendants=None, kids=[25409331], score=None, time=1607881953, title=None, item_type='comment', url=None, parent=25408157, text='&gt; I feel like this article gave up way too fast on gdb&#x27;s tui mode, especially given that gdb works and tui didn&#x27;t crash like half the debuggers in the list, other than &quot;the command tui disable crashes gdb.&quot; which I can&#x27;t reproduce.<p>I&#x27;ve had the same conundrum for a various categories of development tools on Linux:<p>For a particular category (e.g., remote debugging, Vim C++ autocomplete system, etc.), an initial search uncovers 3-10 software combinations that people have documented as working.<p>And when I work through the list, trying to find one that works for me, I often hit problem after problem. It&#x27;s hard to know if (a) that particular recipe is no longer workable, (b) there&#x27;s something about my particular setup that will forever damn that approach, or (c) I just need to keep working through the problems until I finally get things working.<p>So it&#x27;s hard to know how long to bang away at a particular recipe to determine if it&#x27;s (a), (b), or (c).<p>The unfortunate result is I often run out of time for the investigation, and fall back to using Vim + gdb + ctags for developing on remote servers.<p>Mostly I&#x27;m just surprised that Visual Studio in 1999 gave me a better debugging experience than I&#x27;ve been able to cobble together on Linux in 2020.')