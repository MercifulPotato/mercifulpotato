Item(by='bertr4nd', descendants=None, kids=[24921498], score=None, time=1603900325, title=None, item_type='comment', url=None, parent=24901244, text='One of the reasons it’s hard to talk about clean C++ codebases is that there’s a huge range of possible complexity.  The gap between “Solve a particular problem” and “provide a generic library” is very big.  Template metaprogramming deservedly gets a lot of the blame, but implicit heap management via constructors&#x2F;destructors is also pretty hard to follow.<p>The upshot is that “professional grade” C++ is often impenetrable (I tried to understand the implementation of boost::intrusive_list once. Yikes.)<p>LLVM is often cited as a very clean codebase and I think that holds up.  Facebook’s folly is another good one (although it occasionally dives into template metaprogramming madness).<p>Hopefully I’ll be forgiven for also plugging a few projects I used to work on, that might hit a sweet spot between utility and code complexity:\n- Glow, a compiler for neural networks: <a href="https:&#x2F;&#x2F;github.com&#x2F;pytorch&#x2F;glow" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;pytorch&#x2F;glow</a>\n- ReDex, a bytecode optimizer for Android: <a href="https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;redex" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;redex</a><p>There was a nice blog post a few years back called “c++11 is a scripting language” that is unfortunately offline now; it did some task like reading lines from a file and sorting them, and it wasn’t dramatically more complicated than the same thing in Python.  It’s worth doing a few of those kinds of exercises to get a feeling for the language.')