Item(by='tzs', descendants=None, kids=[24691263], score=None, time=1601923870, title=None, item_type='comment', url=None, parent=24685772, text='A large fraction of the comments are about how if you do this and then someday your requirements change you might have to redo your underlying data structures or databases, with the implication being that you should therefore make those as general and flexible as possible.<p>That reminds me of an interesting point I saw in a book whose title and author escape me. He said one of the reason you encounter so many bad designs in Java programs is that many new Java programmers look at the design of Swing to learn good design.<p>He wasn&#x27;t saying that Swing is badly designed--but Swing is a framework&#x2F;library, not an application. What it takes to be a good framework&#x2F;library is different than what it takes to be a good application.<p>If you are writing an inventory management application you can design your tables and data structures and interfaces around things inventory management applications need. If you are writing a medical billing application you can design around what medical billing needs.<p>If you are writing a framework or library that might be used by inventory management applications and medical billing applications and all the other nearly infinite kinds of applications people will write you need to keep it very general and flexible...but you also have to keep it fast and not too bloated. It&#x27;s a much harder design problem, with different best practices for what is good design and what is not.')