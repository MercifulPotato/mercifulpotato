Item(by='Joker_vD', descendants=None, kids=[24658039], score=None, time=1601581306, title=None, item_type='comment', url=None, parent=24655140, text='Well, you&#x27;ve implemented let* :<p><pre><code>    (let* ((a 1) (b a)) (+ a b))\n</code></pre>\nis equivalent to:<p><pre><code>    ((((lambda (a) (lambda (b) (+ a b))) a) 1)\n</code></pre>\nAnd anyway, implementing &#x27;letrec&#x27; in C&#x2F;Asm is really not that hard: allocate cells, assign names to them, compute the values. Compare that with the machinery of making closures (flat or linked?) and function invocation.<p>I personally prefer to have &#x27;letrec&#x27; as a primitive and implement non-recursive &#x27;let&#x27; on top of it by checking whether any newly bound names are referenced from the bound values.')