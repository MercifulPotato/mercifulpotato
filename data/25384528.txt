Item(by='kzrdude', descendants=None, kids=[25384597], score=None, time=1607685777, title=None, item_type='comment', url=None, parent=25383066, text='As has been noted in other forums, this article does not cover implementing Functor&#x2F;Monad for the Option type family (for example) faithfully.<p>What&#x27;s missing is implementing Functor for `Option` (the &quot;unapplied&quot; option, without a type parameter), in such a way that it is evident in from the trait implementation that if you pass an Option to `fmap`, then you get an Option out (not just any Functor). In other words, that the particular flavour of functor or monad is preserved in these operations.<p>Proof of concept code for this exists, but Rust doesn&#x27;t support it in a fluent way, even with the GAT feature.')