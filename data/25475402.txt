Item(by='Geminidog', descendants=None, kids=[25476570, 25476030, 25475572], score=None, time=1608356799, title=None, item_type='comment', url=None, parent=25475235, text='&gt;This sounds like Hungarian notion taken to the extreme.<p>No it&#x27;s sanity taken to the extreme.<p>Have you ever noticed that all things written to communicate things to people in the United States outside of programming is written in a very verbose manner using a language called English? It&#x27;s used for technical manuals, text books, and stories.<p>Is English &quot;hungarian notation taken to the extreme?&quot; No dude. People actually find verbose English stuff easier to read. You don&#x27;t have English writers abbreviating words and coming up with elegant acronyms in a physics text book.<p>&gt;Why not write a comment if a paragraph is required to understand what you are doing.<p>I didn&#x27;t say name your function after a paragraph. A functions English language analog is a word and at most a sentence. A paragraph would be several functions chained together. If you name your functions well, composed procedures will read close to an actual English paragraph.<p>That being said there&#x27;s nothing wrong with comments, comment away but don&#x27;t call your function doXYZ and put the entire description in the comment. Your comment doesn&#x27;t follow the a function call.<p>Here&#x27;s an example:<p><pre><code>    list_of_profiles = get_list_of_profiles_from_file(&quot;profiles.txt&quot;)\n    list_of_profiles_named_bob = filter_profiles_by_name(&quot;Bob&quot;, list_of_profiles)\n    list_of_profiles_named_jane = filter_profiles_by_name(&quot;Jane&quot;, list_of_profiles)\n    list_of_profiles_named_bob_and_jane = concatenate_profile_lists(list_of_profiles_named_bob,\n                                              list_of_profiles_named_jane)\n    list_of_pairs_with_a_married bob_and_jane = merge_married_profiles_into_list_of_pairs(\n                                                   list_of_profiles_named_bob_and_jane)\n</code></pre>\nTrust me, you may think your eyes are bleeding but they are not. The above is actually closer to the English language then 90% of code out there. What you don&#x27;t realize is that there wasn&#x27;t a need for a single comment and there wasn&#x27;t a need to dive into any of these functions to read the definition. You just read the variable and function names and you know exactly what&#x27;s going on. If you recompose these functions to do something else it&#x27;s like recomposing sentences and words in the english language. The end result is still readable without the need for new comments.<p>When you read a recipe or follow directions to build something does the writer give you those directions in some coded nomenclature? No the writer writes verbose English with clear grammar. The point is clarity in naming in these entities, it makes zero sense why we don&#x27;t do the same in programming.<p>&gt;Writing a paragraph kills any formatting in vi&#x2F;vim.<p>You know this might be a really different chain of thought that goes against the grain...<p>But maybe due to this lack of formatting in vi&#x2F;vim makes vi&#x2F;vim an extremely bad editor for programming? Seriously, humans are weird (Japan for example still uses fax machines). If it&#x27;s so bad why do so many people use it? Maybe to look smart or maybe for the same nonsensical irrationality as to why we have to come up with some unreadable but &quot;elegant&quot; name for every programming primitive but at the same time we have to be extremely verbose for ALL other forms of written communication with English.<p>Programmers like to think they&#x27;re smart and original. Most aren&#x27;t... they follow the same tropes as every other programmer trying to come up with elegant names for no reason whatsoever and strangely unable to see the purposelessness behind this whole naming thing. If you can&#x27;t come up with a good &quot;name&quot; for it, make the name an entire sentence, it&#x27;s that simple... it&#x27;s the reason why sentences exist.')