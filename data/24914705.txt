Item(by='Ericson2314', descendants=None, kids=None, score=None, time=1603854864, title=None, item_type='comment', url=None, parent=24913404, text='I think the a good place to get a sense of the motivation is <a href="https:&#x2F;&#x2F;existentialtype.wordpress.com&#x2F;2011&#x2F;03&#x2F;27&#x2F;the-holy-trinity&#x2F;" rel="nofollow">https:&#x2F;&#x2F;existentialtype.wordpress.com&#x2F;2011&#x2F;03&#x2F;27&#x2F;the-holy-tr...</a> &#x2F; <a href="https:&#x2F;&#x2F;ncatlab.org&#x2F;nlab&#x2F;show&#x2F;computational+trinitarianism" rel="nofollow">https:&#x2F;&#x2F;ncatlab.org&#x2F;nlab&#x2F;show&#x2F;computational+trinitarianism</a><p>Let me break it down even more basically:<p>1. There&#x27;s a sense in many corners academia that there&#x27;s too much new but ephemeral work, and not enough librarian work codifying and polishing existing ideas for more better presentatinon. (See <a href="https:&#x2F;&#x2F;hapgood.us&#x2F;2015&#x2F;10&#x2F;17&#x2F;the-garden-and-the-stream-a-technopastoral&#x2F;" rel="nofollow">https:&#x2F;&#x2F;hapgood.us&#x2F;2015&#x2F;10&#x2F;17&#x2F;the-garden-and-the-stream-a-te...</a> for a good digression on that.)<p>2. Category theory, and related fields, emerged as a conceptual framework to organize many disparate parts of mathematics into a tighter whole, addressing such concerns (though it predates the modern form of those concerns).<p>Category theory however still came about as &quot;regular&quot; math with pen, paper, thinking, and informal natural language proofs.<p>3. A bunch of computer scientists studying programming languages become interested in Category Theory and Type Theory. They pretty quickly become the main people perusing both of those fields. They also decide they fit together quite well.<p>(If you are Platonist, this is not surprising as both are very general. If you a Conwayist, this is not surprising because if the same people are interested in two things, either those things will become increasingly intertwined, or if they really are incompatible and the group of people will disaggregate.)<p>4. Programming language theorists are not content with just a common mental framework for all math, they also want computer-codified proofs and computer-aided workflows. (See <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Automath" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Automath</a> for the first major attempt.) Type theory, being far more mechanistic&#x2F;syntactic than category theory, is their obvious go-to.<p>------<p>5. Enter Vladimir Voevodsky. Vladimir Voevodsky is a fields medalist, i.e. a bonafide exceptional mathematician by mainstream standards who can finally lend some legitimacy to the efforts of these mathematician-computer scientists who often raise eyebrows. VV&#x27;s field specialty is (within) topology, which always had a friendlier relationship with category theory, and so easily picks everything up after an experience with bad proof of his that no one else caught leads him to think formal methods are needed.<p>6. HoTT was sparked by some insight from VV. The intent is actually 2-fold: both to fix some annoyances with the automated theorem proovers, and to make some progress on advanced topology. It just so happens that the same tricks looked promising for both problems.<p>So HoTT in particular is useful for cutting-edge topology research (that&#x27;s few of us) or better human computer interaction (that&#x27;s far more of us). For the latter, just getting on board with Category theory and type theory before the HoTT special sauce is most of the mental work. HoTT is a not big additional step <i>if</i> others are doing the heavy lifting to figure out what it is in the first place.<p>7. During all of this, the US military decided that cybersecurity is a problem, and that programming language theorists had a compelling story on how to do defense more aggressively than traditional security types. That has injected a bunch of money into this stuff whereas before there was hardly any (by computer scientist standards).')