Item(by='diarrhea', descendants=None, kids=[24842416, 24842765, 24841910, 24841955, 24842175, 24843596, 24842731, 24842632, 24844137, 24842217], score=None, time=1603224230, title=None, item_type='comment', url=None, parent=24839744, text='I don&#x27;t have a CS background, so maybe that&#x27;s how I&#x27;m missing the point here, but I don&#x27;t see what is so supposed to be so special about Julia&#x27;s multiple dispatch. In fact, reading more about it and knowing Python, single dispatch&#x2F;polymorphism feels more natural to me. This would allow a `plot` function in Python, originally written for the float data type, to also work for float-like (quacks like a duck) data types, like `Decimal`. I struggle to see what about Julia improves on this situation or makes it conceptually different.<p>Lastly, the article mentions that `plot` also works for uncertainty-carrying floats, because the `Measurements` package has implemented &quot;a simple recipe&quot; for this case. But doesn&#x27;t this mean very tight coupling? The `Measurements` author very specifically (if I understand this right) implemented a `plot` functionality. For the end user, this allows things to just work, which is great. But under the hood, it seems this depends on package authors having to be aware of all possible use cases for their library code.')