Item(by='GordonS', descendants=None, kids=None, score=None, time=1610909494, title=None, item_type='comment', url=None, parent=25812274, text='I mainly use work with Azure, but have worked with AWS too, and not yet with GCP. I&#x27;m a bit fan of Azure - the service on offer and the tooling.<p>Azure&#x27;s UI is unusual, polarising even - you either love it or hate it, but I&#x27;m more on the &quot;love it&quot; side. When it was first released some years ago, it had some perf problems, but it got over those long ago. In use, I find it to be a really good UX - not sure I ever recall swearing at it because it was in my way :) I like that it has themes (e.g.  dark mode), and for the <i>most</i> part, I also find it far more consistent than the AWS UI, which often feels like it&#x27;s been cobbled together by several different teams. I also find the AWS UI feels pretty &quot;clunky&quot; and dated. And in terms of cost management, Azure is way more transparent and useful than AWS.<p>Regarding SDKs,  not sure if you were really thinking of a single service in particular or more generally, but assuming the latter, I <i>mostly</i> disagree about Azure&#x27;s SDKs. Some of the SDKs have had too much churn for my liking, and the docs don&#x27;t always keep pace with those changes. In general though, I find them really good.<p>I&#x27;m not a huge fan of ARM templates for anything but the simplest deployments, but they get the job done. Bicep[0] shows MS are improving things, and there are a couple of nice OSS alternatives now, like Farmer[1].<p>I&#x27;m not a big fan of PowerShell in any form, but it&#x27;s cross-platform, and I use it on occasion for Azure automation, and again it gets the job done without issues.<p>Azure CLI, I <i>really</i> like - it&#x27;s OSS, cross-platform, and covers pretty much all services. Extensions&#x2F;plugins mean that even new services are covered quickly. The syntax and commands are very consistent (there are a few exceptions, of course), and being able to output results in either JSON or CSV is great for parsing from the likes of Bash scripts. Also like the way you can filter and project output, without the need for something like jq.<p>Don&#x27;t recall a single instance of something I could do in the UI but not via automation; aside from monitoring, cost reporting and quickly deploying throw-away stuff during dev, I don&#x27;t feel compelled to use the UI.<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;Azure&#x2F;bicep" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;Azure&#x2F;bicep</a><p>[1] <a href="https:&#x2F;&#x2F;compositionalit.github.io&#x2F;farmer&#x2F;" rel="nofollow">https:&#x2F;&#x2F;compositionalit.github.io&#x2F;farmer&#x2F;</a>')