Item(by='zinekeller', descendants=None, kids=None, score=None, time=1611396272, title=None, item_type='comment', url=None, parent=25880355, text='Actually pointed out in the document:<p><i>The next question, if you&#x27;re not napping, is to ask yourself is whether there&#x27;s an alternative to shutting down this API. Everything you turn off will break somebody&#x27;s code and take their time to fix it. It&#x27;s good for the health of your client ecosystem and the web as a whole if APIs keep working.</i><p>There are valid reasons to shut down an API (outside of &quot;the company will shut down&quot;). Some API shutdowns are security-wise, for example the API relies on an outdated authentication scheme that can easily be cloned or bruteforced. Assuming that you are in 2012 when credential sharing <i>were</i> acceptable, it&#x27;s impossible to develop a backwards-compatible API because simply the method to authenticate is now vastly different (tokens versus classic username-password credentials). Some will argue &quot;oh, just generate app passwords!&quot; but unless your audience is that savvy enough, having the API left on will shift the burden from a one-time change to a continual cycle of explaining users to use an app password (which will hit you very badly).<p>At other times, you need to shut down an API due to an external change. For example, separating APIs by region (note that &quot;oh, just geodetect it&quot; haven&#x27;t really been sent up letters from a <i>government agency in charge of data and privacy</i>).')