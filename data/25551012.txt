Item(by='wegs', descendants=None, kids=None, score=None, time=1609077053, title=None, item_type='comment', url=None, parent=25550666, text='There&#x27;s a tendency to downplay the difficulty of many fields, science, engineering, math, and computer science. It&#x27;s a white lie designed to bring in more women and minorities, but I think it does great harm.<p>What I&#x27;ve seen:<p>* A person is tricked into thinking software engineering is like baby intro &quot;get into CS&quot; projects, and by the time they find out it&#x27;s not for them, it&#x27;s too late. I know several people who went this route, and range from having gone on to law school&#x2F;MBA to working retail. The law school&#x2F;MBA types are extremely successful, with the dual background. But I feel pretty bad for the folks working retail, with crushing engineering school debt.<p>* Companies have a severe shortage of qualified employees. Under-qualified employees have a severe shortage of jobs. I feel bad for people who can&#x27;t find jobs.<p>My own opinions:<p>1) No, code camps are not sufficient prep.<p>2) No, application-focused CS undergrad programs are not sufficient prep (where you&#x27;d historically learn Java web development, or the current Microsoft stack)<p>3) Yes, having rigorous background in something, be it machine learning, low-level systems engineering, compilers, or what-not makes you far more effective. Ideally, a few.<p>4) Yes, freshman weeder courses are important<p>5) But no, having &quot;highly-selective schools&quot; like MIT or Stanford is not helpful (and no, it&#x27;s not sour grapes, I went to one of those). Anyone should be able to try a freshman weeder course, rather than going through insanely competitive admissions criteria which correlate poorly with the ability to do this stuff.<p>I will say familiarity with code varies person-by-person. I&#x27;m generally known as at least a 10x developer, since I&#x27;ve created several major tools with name-brand recognition. I&#x27;m not great at jumping into other people&#x27;s code, though. The article would have resonated with me if everyone&#x27;s brain was wired like mine, but...<p>... one of the best developers I&#x27;ve worked with can jump into complex codebases in what seems like overnight (a couple of weeks to be literal), and work with them better than the original developers. You toss him a complex system with a bugs, and it will be debugged in a month, where it&#x27;d take me a year or two of work to even understand that code. On the other hand, I wouldn&#x27;t trust him to write a new piece of complex code.<p>So it seems we&#x27;re wired differently. I&#x27;m better than he is at imagining a new system, foreseeing possible use-cases, designing an architecture that&#x27;s general in the right ways to allow all conceivable uses, yet constrained in the right ways to still be simple, and then building it quickly. I&#x27;m better than him at designing novel algorithms and data structures too. On the other hand, if I have a bug in a third-party library, I&#x27;ll take literally 10-100x as long to fix it as my friend. And he&#x27;ll be better at understanding the algorithms and data structures in existing systems (you can throw something complex like Cassendra at him, and he&#x27;ll understand the design and its implications nearly overnight).')