Item(by='amf12', descendants=None, kids=[25228835], score=None, time=1606472056, title=None, item_type='comment', url=None, parent=25226677, text='&gt; <i>If someone wants me to write a basic sorting function, then I would have no issues. But if someone expects me write an optimised quicksort function, nah.</i><p>Let me be a devils attorney here. Understanding efficient sorting and how quicksort works is fundamental CS knowledge. I would say the idea is if you know how quicksort works, you should be able to write the code, no? If one is okay with writing a basic sort function but not quicksort - it could mean (1) that person does not know quicksort, (2) knows quicksort but not a good enough engineer to write code for it or (3) idealistic.<p>That said, I personally don&#x27;t believe in testing whether a candidate can write the code for quicksort. I have however found that &#x27;general problem solving skills&#x27; typically correlate with good engineers at places where one isn&#x27;t just building yet another MEAN stack app.<p>&gt; <i>Well, I think I did come up with a good alternative, basic interview with work trials.</i><p>Not practical enough. Do you expect, in the current scenario where there is a demand surplus, for candidates to happily sign up for a trial stint - that is for the &quot;interview&quot; to last one or three months? I personally won&#x27;t be okay with it  because it messes up with a persons stability, their ability to interview at multiple places.<p>Even if you expect this to be AFTER the onsite interviews, like a probation period, both the company and candidate will  want to maximize the # of candidates staying on, which means it doesn&#x27;t really solve the problem you intended to solve.')