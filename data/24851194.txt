Item(by='StefanKarpinski', descendants=None, kids=None, score=None, time=1603308738, title=None, item_type='comment', url=None, parent=24846818, text='&gt; it’s just your grandpa’s same old static multiple dispatch.<p>This is very much not the case. People are often confused about this — probably because the difference between static and dynamic dispatch in general can be confusing, never mind multiple dispatch, but also because they look so similar syntactically. They are, however, very different beasts. It&#x27;s particularly worth noting that statically overloading function on argument types is entirely equivalent to putting argument types in the function name — it can be done completely mechanically (that&#x27;s actually how C++ does it internally) and adds no additional expressiveness over C, which has no built-in dispatch of any kind.<p>Here&#x27;s a discussion where someone was convinced that Julia was not actually doing dynamic dispatch, which has many posts which may help clarify the issue for you (or anyone else):  <a href="https:&#x2F;&#x2F;discourse.julialang.org&#x2F;t&#x2F;julia-isnt-multiple-dispatch-but-overloading&#x2F;42370" rel="nofollow">https:&#x2F;&#x2F;discourse.julialang.org&#x2F;t&#x2F;julia-isnt-multiple-dispat...</a>. There&#x27;s a lot of posts expressing and addressing various aspects of this confusion, so it&#x27;s hard to know which specific one to point to, but the bottom line is that despite the superficial similarity, static overloading and dynamic multiple dispatch are very different: the former is a purely syntactic convenience, while the latter is an entirely different language paradigm.')