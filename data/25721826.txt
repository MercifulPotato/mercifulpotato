Item(by='bigiain', descendants=None, kids=[25723099], score=None, time=1610322606, title=None, item_type='comment', url=None, parent=25720611, text='Jira, for all it&#x27;s warts, is a massively configurable piece of software that can be deployed&#x2F;used in a hugely broad variety of ways.<p>I once worked at a place where Jira was without doubt a positive force within the company. There was an Altassian-trained Jira specialist working there who collaborated setting up each Jira project, and provided ongoing advice&#x2F;assistanece to users (both PMs and devs). This was in a company of around 40 devs, 8 QAs, and 6 PMs, running perhaps 10-12 concurrent projects (almost all websites&#x2F;webapps). It worked _really really_ well. (And I&#x27;ve spent th3e last 5-6 years looking for excuses&#x2F;opportunities to poach that specialist...)<p>The key takeaways I learned from her was to identify and get leadership agreement right up front about whether a particular project was going to be &quot;agile&quot; or &quot;waterfall&quot; - because if you are going to be agile, Jira wants to be set up as a high level todo list of features&#x2F;functions. If _any_ of the Jira tickets start to decree (from a PM&#x2F;BA&#x2F;manager) _how_ a feature or function is to be accomplished, you&#x27;re fooling yourself and should have set it up as a waterfall project full of disposable-worker-bee style tickets.<p>I&#x27;m sure my takeaway was only scratching the surface of the deep understanding she had about project planning and managements styles, but that has work OK for me over the years. Either provide Jira tickets for features, and let the devs create their own sub tickets to document how they&#x27;re doing things (and to get discussion&#x2F;signoff on thing they ask for input on), or have the PM&#x2F;BAs document a project in minute detail and fill each dev&#x27;s schedule with sprints full of tickets representing 2 hours work or less.<p>I guess my point here is &quot;Don&#x27;t blame Jira. It&#x27;s widely criticised flaws are largely a problem with the way it&#x27;s used rather than a fundamental flaw in the tool. Poor project management results in shitty Jira use. Great project management will shine even if using postit notes stuck to devs laptops every day.&quot;')