Item(by='dragontamer', descendants=None, kids=None, score=None, time=1602697340, title=None, item_type='comment', url=None, parent=24775057, text='Okay, I had something wrong earlier, but I deleted my earlier, incorrect post. That&#x27;s what I get for rushing and trying to do this in one go. I think I got it correct this time:<p><pre><code>    struct Node{\n        char rep[64]; &#x2F;&#x2F; 64-bytes per node\n    };\n\n    struct StackLink {\n      struct StackLink* prev;\n      Node* nodePtrs[4096];\n    };\n\n    static StackLink* last; &#x2F;&#x2F; Points to nullptr when empty\n    static int stackLinkSize;\n</code></pre>\nIt&#x27;d be a stack, not a queue. So I changed the name to &quot;stack&quot; to better represent the strategy. stackLinkSize doesn&#x27;t need to be part of the link structure.\nThat&#x27;s why the fast path is simply:<p><pre><code>    return root-&gt;nodePtrs[stackLinkSize--];\n</code></pre>\nThis basically breaks down into:<p><pre><code>    dereference(root + offsetOf(nodePtrs) + stackLinkSize * sizeof(Node))\n</code></pre>\nJust one dereference, if I&#x27;m counting correctly.<p>I think I agree with you that &quot;size&quot; is dereferenced (for dereference #2), but since its &quot;Hot&quot; I don&#x27;t think it would be the bottleneck for anything. L1 references are very fast.')