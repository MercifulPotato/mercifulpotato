Item(by='socialdemocrat', descendants=None, kids=[25486064], score=None, time=1608464887, title=None, item_type='comment', url=None, parent=25483717, text='That is like saying, why do people use C++ to make fast compilers, couldn&#x27;t they just add a fast compiler for Python and everybody is happy?<p>You interface whether a programming language, library API or and ISA has strong implications for what optimization and implementer than do.<p>The ARM ISA has many advantages over x86:<p>1) Fixed sized instructions, which make it easier to add more instruction decoders. Discussed here: <a href="https:&#x2F;&#x2F;debugger.medium.com&#x2F;why-is-apples-m1-chip-so-fast-3262b158cba2" rel="nofollow">https:&#x2F;&#x2F;debugger.medium.com&#x2F;why-is-apples-m1-chip-so-fast-32...</a><p>2) More registers. ARM64 has 32 general purpose registers and 32 registers for SIMD stuff. x86 has fewer registers which are also wasted on all sorts of legacy junk.<p>3) More lax restrictions on memory-write back. It is easier to optimize the Out-of-Order execution on ARM, as you don&#x27;t need to write back everything in order to memory.<p>As for everybody else. ARM designs from ARM Ltd. is showing rapid performance increases and gradually closing the gap to x86. It really is inevitable as there is NOTHING special about the x86 ISA that gives it higher performance. Nothing prevents other ARM makers from catching up: <a href="https:&#x2F;&#x2F;medium.com&#x2F;swlh&#x2F;is-it-game-over-for-the-x86-isa-and-intel-5ce1b00fbd1" rel="nofollow">https:&#x2F;&#x2F;medium.com&#x2F;swlh&#x2F;is-it-game-over-for-the-x86-isa-and-...</a>')