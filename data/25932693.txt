Item(by='chrismorgan', descendants=None, kids=[25935115, 25940296, 25933244, 25933983, 25938686], score=None, time=1611775623, title=None, item_type='comment', url=None, parent=25932256, text='The trouble is that you can’t support HTTP without completely undermining HTTPS.<p>If you support HTTP <i>at all</i>, you’re damaging the experience for the almost everyone that <i>could</i> have used HTTPS: almost no one will get the HTTPS version unless you deliberately push them over to it, which you will only be able to do <i>after page load</i> by some JavaScript-based user-agent or feature-based sniffing, so now the page loads and then reloads immediately, every time the user visits your site by URL, and you’re causing trouble with search engines, and it’s a regular maintenance burden because no one treads this path so you’ll have to figure out the cut-off points yourself as certificates change, and on top of that it’ll always be subject to a downgrade attack, so now you can’t ever depend on HTTPS.<p>Remember also that various new features are gated on using a secure context (which roughly means “HTTPS”), like HTTP&#x2F;2 and HTTP&#x2F;3. And as for entering passwords or the likes, you’d be opening quite a can of worms if you allow that over cleartext HTTP.<p>So… yeah, it sounds nice in theory, but I think that it’s just not practical or advisable to retain plain HTTP support. Even supporting TLS &lt; 1.2 or older cipher suites is steadily becoming inadvisable, only to be used on a few sorts of websites. The unfortunate fact of the matter is that you <i>can’t</i> support ancient devices without harming things materially for everything else.')