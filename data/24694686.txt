Item(by='chrismorgan', descendants=None, kids=[24695052, 24695225], score=None, time=1601958480, title=None, item_type='comment', url=None, parent=24685267, text='I’m being triggered by the use of Unlicense, a license that I abhor purely because of its catastrophically bad name.<p>The problem is that when expressed in the past tense (-ed suffix), “Unlicense” means <i>precisely the opposite</i> of an existing English word.<p>If software is unlicensed, it means you have no license, no permission, to do anything with it. (Or, if it is your code, it means that you have not granted license&#x2F;permission to anyone else to do anything with it.)<p>If software is Unlicensed, it means you have permission to do absolutely anything with it.<p>That’s a recipe for confusion.<p>In old versions of npm, to convey “all rights reserved” or “proprietary” you used to need to set the license field in package.json to &quot;UNLICENSED&quot;; so that &quot;UNLICENSED&quot; was the opposite of &quot;Unlicense&quot; (and I <i>think</i> it was case-insensitive, too).<p>And just so we’re clear, it’s not the word “unlicensed” that’s at fault, it’s Unlicense that’s at fault for hijacking an existing word to mean the opposite thing. Which is hardly a new phenomenon in language, I suppose (let, cleave, sanction, <i>&amp;c.</i>), but still—.<p>When I want public domain and want to be nice about the legal technicalities for all jurisdictions, I use CC0 instead, largely just because its name isn’t bad, but also because its contents seem to be slightly more highly regarded legally. <a href="https:&#x2F;&#x2F;creativecommons.org&#x2F;choose&#x2F;zero&#x2F;" rel="nofollow">https:&#x2F;&#x2F;creativecommons.org&#x2F;choose&#x2F;zero&#x2F;</a>')