Item(by='mikelevins', descendants=None, kids=None, score=None, time=1609779181, title=None, item_type='comment', url=None, parent=25633092, text='You misunderstand me.<p>I am not saying that your language or your way of working is not as good as mine. I&#x27;m not saying that you or anyone else should discard your ways of working and adopt mine.<p>I&#x27;m not saying that Python&#x27;s repl isn&#x27;t actually a repl. I&#x27;m not saying that everything needs to have breakloops. I&#x27;m not saying that I or anything I like is any holier than anyone else.<p>What I&#x27;m saying is I like a specific style of programming and it makes me happy. I think more people should know about it because it will make some of them happy, too. I would like that.<p>Besides just liking to make people happy because that&#x27;s the kind of personality I have, I would also like it if demand for tools that support my preferred way of working increased, so that there are more of them available over time rather than fewer.<p>And, finally, I like to use the phrase &quot;repl-driven programming&quot; for the style I like because some time ago someone asked about what distinguished old-fashioned Lisp and Smalltalk environments from others that the questioner was more familiar with, and &quot;repl-driven programming&quot; was a phrase that person used. So I adopted the terminology. I think it&#x27;s a reasonably good piece of jargon for its purpose.<p>We can sensibly distinguish a repl-driven environment--that is, an environment whose design is driven by the requirements of interactive programming with a read-eval-print loop--from an environment that merely has a repl as one of its affordances.<p>If the distinction isn&#x27;t meaningful to you, then presumably &quot;repl-driven&quot; design isn&#x27;t either, and you&#x27;re presumably not one of the people I&#x27;m talking to.')