Item(by='jarek83', descendants=None, kids=None, score=None, time=1607435333, title=None, item_type='comment', url=None, parent=25334106, text='Well, I don&#x27;t like Tailwind and I admit that haven&#x27;t use it. \nI browsed a lot about it and read the rationale twice already (it&#x27;s looks amazing how often this article has been cited in just this thread). And I got more away from it after first read, and even more opposed to it after the second read.<p>I maintain projects, across multiple stacks, and Tailwind just looks like it would be a nightmare to maintain in the projects I work and worked. I&#x27;ve played a lot with the <a href="https:&#x2F;&#x2F;play.tailwindcss.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;play.tailwindcss.com&#x2F;</a> and my objections are even greater. Repetition of classes would cause much more painful style changes. Debugging in chrome looks like a struggle. Cryptic class names that might be used by many other libs or even might be meaning completely different things in other than the current project, renders codebase modularity as not possible - if I want to take something and then show it somewhere else outside my project, I will have hunt for WTH is overriding my styles, just to figure out that one of the &quot;py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7&quot; (instead of &quot;content-container&quot;), means something else on target site and simple name spacing encapsulation does not work fully. The example page does not even semantic use HTML tags - which to me tells that &quot;semantic&quot; might be completely misunderstood by the lib author.<p>Simple design doc in the project would solve problems raised in the said rationale. Indeed - Tailwind seems to be a ready-to-eat design doc. The problem is that it is the same design doc for all people using it.<p>Those reasons makes me not even remotely tempted to try Tailwind.')