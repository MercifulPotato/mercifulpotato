Item(by='qwantim1', descendants=None, kids=None, score=None, time=1611754622, title=None, item_type='comment', url=None, parent=25927374, text='The BFF pattern[1] may be more useful today to many, due to various types and sizes of devices and different sorts of integrations.<p>MVC can be used in its place, but it would often introduce unnecessary complexity, e.g. additional controllers.<p>MVC works for contextually equivalent interaction, which is still very useful, too.<p>Mostly just do what makes sense.<p>The challenge is, as it has been, how to be flexible, smart, and forward-looking, but developing quickly for what’s needed now.<p>But whether you’re coding a quick prototype or designing a large project (which is risky because a feedback loop from all users may be longer), focusing too much on the how and specifics instead of the overall experience may get you into trouble later.<p>For example, you could have what sounds ideal: microservices, individual teams each working on them focused on their own goals, powering a site with the latest, well-used JS framework, able to deploy quickly and developing quickly with a lot of fun-but-professional-looking communication, and end up with a slow, broken application.<p>[1]- <a href="https:&#x2F;&#x2F;samnewman.io&#x2F;patterns&#x2F;architectural&#x2F;bff&#x2F;" rel="nofollow">https:&#x2F;&#x2F;samnewman.io&#x2F;patterns&#x2F;architectural&#x2F;bff&#x2F;</a>')