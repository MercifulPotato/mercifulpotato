Item(by='MaxBarraclough', descendants=None, kids=[25595112, 25595895], score=None, time=1609418980, title=None, item_type='comment', url=None, parent=25591596, text='I&#x27;d say it depends.<p>&gt; heartbleed was bad, but those type of bugs are <i>rare</i><p>Not really. There&#x27;s a constant stream of security vulnerabilities arising from buffer-overflows and memory-management bugs, even in the most high-profile C&#x2F;C++ codebases like the Linux kernel and Chromium. C and C++ are minefields for undefined behaviour, and many security vulnerabilities can be tracked back to instances of undefined behaviour. Rewriting in a safe language, like SPARK or the safe subset of Rust, would close the door on these vulnerabilities.<p>That&#x27;s not to say I&#x27;d uncritically jump aboard a safe-Rust replacement for OpenSSL. As you say, there&#x27;s much value in mature and battle-tested code, and Rust&#x27;s safety guarantees wouldn&#x27;t guarantee you a bug-free SSL library, they only guarantee the absence of certain kinds of errors. Even a fully formally verified implementation in SPARK could still have side-channel vulnerabilities (e.g. timing issues).')