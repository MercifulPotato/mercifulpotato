Item(by='pcr910303', descendants=None, kids=None, score=None, time=1602936776, title=None, item_type='comment', url=None, parent=24809321, text='While I don&#x27;t think adding C++ interoperability is one of the&#x27;mashup of features&#x27;, one example of a feature that adds complexity and conflicts is the function builders (result builders)[0].<p>It doesn&#x27;t interact well with other language features (e.x. if let wasn&#x27;t supported for a long time), it isn&#x27;t really extensible (transforms are specified by the language), and yet it adds a bunch of complexity in both the language, implementation and reading code.<p>It seems clear, at least to me, that this is something that happens if you try to make a feature &#x27;generic&#x27; without a lot of time and design consideration, due to Apple&#x27;s internal politics on SwiftUI. I like SwiftUI, and some features that support it are great (like custom attributes), but I firmly think that they should have taked the time to produce a better design.<p>[0]: <a href="https:&#x2F;&#x2F;github.com&#x2F;apple&#x2F;swift-evolution&#x2F;blob&#x2F;main&#x2F;proposals&#x2F;0289-result-builders.md" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;apple&#x2F;swift-evolution&#x2F;blob&#x2F;main&#x2F;proposals...</a>')