Item(by='jcelerier', descendants=None, kids=None, score=None, time=1602955794, title=None, item_type='comment', url=None, parent=24810264, text='&gt;  E.g. every C++ library should come with an optional C-API to simplify language bindings, or even just compiling that library into a DLL.<p>hard to do without incurring additional dynamic allocations though. e.g. how would you make, say, an API that wraps construction &#x2F; doing stuff &#x2F; destruction of something that&#x27;d look like this :<p><pre><code>    namespace mylib { \n    struct node { \n      std::vector&lt;node&gt; children;\n      std::optional&lt;float&gt; value;\n    }; \n    }\n</code></pre>\nin C you&#x27;d likely have to have something that looks like<p><pre><code>    mylib_node* mylib_node_alloc(void);\n    void mylib_node_free(mylib_node*);\n\n    &#x2F;&#x2F; and then... \n    float* mylib_node_value(mylib_node*); &#x2F;&#x2F; this ? \n    float mylib_node_value(mylib_node*, int* ok); &#x2F;&#x2F; or this ? \n\n    void mylib_node_set_value(mylib_node*, float value, int set); &#x2F;&#x2F; then there&#x27;s this ?\n    void mylib_node_set_value(mylib_node*, float* value); &#x2F;&#x2F; or this ?\n    void mylib_node_unset_value(mylib_node*); &#x2F;&#x2F; or maybe this ? \n</code></pre>\nand all this cannot really be done without a dynamic allocation (which <i>hopefully</i> looks terrible to everyone), unless you fancy doing ugly ugly ugly stuff like<p><pre><code>    struct mylib_node { char storage[sizeof c++ struct that was computed manually)]; }; \n</code></pre>\nso anything that&#x27;d allow other languages to understand at least C++ vocabulary would be a great boon in terms of perf, etc')