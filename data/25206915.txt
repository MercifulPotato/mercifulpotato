Item(by='dvt', descendants=None, kids=[25207841, 25210878, 25207943, 25207011, 25207567], score=None, time=1606291273, title=None, item_type='comment', url=None, parent=25206182, text='&gt; I’m not going to list specific examples or tips here, as tastes and conventions differ anyway. There usually isn’t “one right way”.<p>The philosopher in me doesn&#x27;t mean to be snarky, but what the author concedes here is that APIs actually <i>aren&#x27;t</i> like user interfaces. Because when we&#x27;re talking about UIs, there are most definitely &quot;ways of doing things&quot; and &quot;ways of not doing things&quot; -- after 50-odd years of user interfaces, we ended up with scrollbars and buttons and tabs for a reason.<p>The point is interesting, but lacks force without actual examples. APIs can vary immensely in application: some might take huge arrays of data, others might take neatly formatted arguments, others might just consume bit streams. There&#x27;s certainly a point to be made about the <i>ergonomics</i> of an API, but -- even though I may have an intuitive <i>feel</i> for it -- I&#x27;d need to think more about how to exactly explain what I mean. I have a feeling the author is in the same boat.<p>Further, there&#x27;s a fundamental element of documentation when dealing with APIs. Even the most unwieldy[1] API can be grokked if documentation is apt. I&#x27;d argue that more work (at least 50% more) should be put in <i>documenting</i> APIs. Technical writing is a lost art.<p>[1] <a href="https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;winuser&#x2F;" rel="nofollow">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;winuser&#x2F;</a>')