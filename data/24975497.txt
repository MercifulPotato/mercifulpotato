Item(by='banashark', descendants=None, kids=[24976535, 24975577, 24975566, 24977050], score=None, time=1604367628, title=None, item_type='comment', url=None, parent=24975330, text='I enjoy f# a lot, but it doesn&#x27;t necessarily help with all of their problems.<p>One of the biggest problems they mention is with postgres. F# has a postgres problem as well.<p>Your options in f# for postgres usage include the following high-level categories:<p>• Dapper&#x2F;RepoDb&#x2F;Other community libs<p>• Typeprovider based like Fsharp.Data.Npgsql<p>• EF core (where you build the fsharp design-time support yourself)<p>• Using C# in another project as a database interaction abstraction<p>I&#x27;ve had to mix and match for the projects I&#x27;ve worked on because I&#x27;ve had trouble finding a single library where:<p>1) Joins are supported in a sane way<p>2) Batch inserts work<p>3) Interacting with native features (views, functions, SET variables) works<p>4) It&#x27;s still in fsharp<p>It&#x27;s not bad, but when I work on $DAYJOB projects in Typescript&#x2F;etc where database access is smooth, I wonder how long it might take to rewrite for the database heavy projects.<p>Also should mention that I&#x27;m very thankful for the libraries that _do_ exist, and the effort put into making them as feature as they are. It&#x27;s just one of the areas that I don&#x27;t think is a strength of F# right now.')