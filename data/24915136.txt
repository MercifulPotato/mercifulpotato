Item(by='aseipp', descendants=None, kids=None, score=None, time=1603858479, title=None, item_type='comment', url=None, parent=24914185, text='The commercial FPGA tools have tremendous technological advantages, but the free part is inherently what many FOSS users value, not the other stuff. You&#x27;re trying to talk about technical QoR between tools but the difference for anyone who really cares is ideological, not technical.<p>&gt; The reason is if it has not happened for the first (and arguably easiest) step in the chain i.e. System Verilog, they why would it happen for the others?<p>Ehhhhh, I don&#x27;t think I buy this at all. There are dozens of alt-HDLs out there, many of which are quite powerful, designed by solo users. People had working, simple-but-practical PnR for real devices in a ~7k C++ LOC codebase written by an individual (arachne-pnr) and many individuals have independently reverse engineered small-ish scale device families for packing utilities. nextpnr was written by a very small group (solo?) in a year or something. I don&#x27;t think you could fit an equivalent <i>parser</i> for SV2017 in ~7k LOC, much less elaboration, type checking, a netlist database, to all go along with it. SystemVerilog might actually be the most difficult part of the whole equation because it simply has so much surface area. PnR tools are limited by their target: only targeting small iCE40 devices? Your PNR algorithms don&#x27;t need to be cutting edge. Targeting SV2017? Your job is hard no matter what device you synthesize for. And I can&#x27;t think of even a single commercial tool I know from <i>any</i> vendor that supports all of it, up-to-date with SV2017.<p>All that said, I use SystemVerilog as my &quot;normal&quot; RTL when using commercial tools for stitching together IP, wiring up top modules, etc.')