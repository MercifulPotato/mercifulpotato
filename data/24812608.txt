Item(by='skohan', descendants=None, kids=None, score=None, time=1602963887, title=None, item_type='comment', url=None, parent=24811412, text='Have you worked with Swift at all?  Because the features you&#x27;re complaining about aren&#x27;t really difficult to understand in practice, and they&#x27;re a major part of what makes Swift really clear and nice to work with.<p>&gt; Keywords? Or parens? Both!<p>Why should they be mutually exclusive?<p>Swift&#x27;s named parameters are great!  For instance they allow for default parameters, which is something I really miss in Rust for instance where I have to use the builder pattern everywhere.<p>&gt;  And the weird case of having two keywords, one with a colon and one without, because we decided to make the keywords the names of the parameters. Sometimes.<p>Swift&#x27;s rules for parameter naming are very simple, consistent, and easy to understand.  Given the signature:<p><pre><code>    func foo(first second: Type)\n</code></pre>\n`first` is the name used outside of the function, or the keyword for this argument, and `second` is the name used inside the function, or the parameter name.  If the two names are the same, the second name can simply be elided.  So for instance this signature:<p><pre><code>    func foo(x: Int)\n</code></pre>\nIs just syntactic sugar for this:<p><pre><code>    func foo(x x: Int)\n</code></pre>\nIt&#x27;s super simple and something which every swift developer can pick up within minutes of starting their first tutorial.  I don&#x27;t really understand why you seem to getting so agitated over this non-issue.')