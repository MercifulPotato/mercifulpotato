Item(by='lasagnaphil', descendants=None, kids=[25129845, 25123845], score=None, time=1605617165, title=None, item_type='comment', url=None, parent=25122897, text='C# is better for gamedev for quite a lot of reasons, but most importantly because it has value types (structs) that arenâ€™t boxed. In gamedev you use a lot of small-size types such as Vector3 or Vector4 for all sorts of math, but if you implement them naively in Java you have to always heap-allocate them, which brings severe penalties in terms of cache locality and GC. Modern Java gamedev libraries like JOML tries to avoid this by using NIO buffers (JVM provides some utilities to manually alloc&#x2F;dealloc memory), but the API is quite finicky as a result. (Plus, there is no operator overloading in Java, which is another bummer.) Project Valhalla is trying to add proper value types to the JVM, but sadly as of today the project seems a bit abandoned... (See <a href="https:&#x2F;&#x2F;wiki.openjdk.java.net&#x2F;display&#x2F;valhalla&#x2F;Main" rel="nofollow">https:&#x2F;&#x2F;wiki.openjdk.java.net&#x2F;display&#x2F;valhalla&#x2F;Main</a>)')