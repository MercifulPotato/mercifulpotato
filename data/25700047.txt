Item(by='qwantim1', descendants=None, kids=[25700121, 25702301], score=None, time=1610197571, title=None, item_type='comment', url=None, parent=25699890, text='This is a good point.<p>The language doesn’t have to be good to make money, in fact in can be quite bad.<p>Oddly, while modern development embraces agility, many things often benefit from small changes, and a bad language has small change built-in.<p>Why? Well, if the language is bad, you have to pay your developers well to retain them, since there are few that want to program in that language. The developer comes aboard because of the money and the challenge. Once they join the company and become a developer in a bad language, there are fewer alternatives for the developer to find another job in that bad language. This means that they  have to stay around and get to know that bad language better, making to even harder for the business to hire others to help or replace them. So, the development doesn’t suffer as much from team scaling problems, and change can’t happen as quickly.<p>This isn’t what you want for everything of course. Especially when talking with a VC about a startup.<p>But JS, an ok language, has gotten to a similar level of nonsense through the difficulty and complexity of its rapidly changing ecosystem and changing browsers.<p>And few languages have really avoided unnecessary difficulty over time in their ecosystems.')