Item(by='sohamsankaran', descendants=None, kids=None, score=None, time=1605093141, title=None, item_type='comment', url=None, parent=25056752, text='As it turns out, you can build most distributed protocols on top of an API which only allows you to append to and read from a shared log -- for example, if you want to do consensus across a number of actors, you can just have each one write their proposed value and the current epoch to the log, and the value that is written into the earliest log slot wins. In general, shared total orderings are equivalent to consensus -- this is clear when you consider that State Machine Replication (Paxos, Raft) is all about ensuring that all actors perform the same set of commands in the same order.  If you&#x27;re looking for a more detailed exposition of the shared log abstraction and its uses, you might benefit from reading the Corfu (<a href="https:&#x2F;&#x2F;www.cs.yale.edu&#x2F;homes&#x2F;mahesh&#x2F;papers&#x2F;corfumain-final.pdf" rel="nofollow">https:&#x2F;&#x2F;www.cs.yale.edu&#x2F;homes&#x2F;mahesh&#x2F;papers&#x2F;corfumain-final....</a>), Tango (<a href="http:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;~taozou&#x2F;sosp13&#x2F;tangososp.pdf" rel="nofollow">http:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;~taozou&#x2F;sosp13&#x2F;tangososp.pdf</a>), and FuzzyLog (<a href="https:&#x2F;&#x2F;www.usenix.org&#x2F;system&#x2F;files&#x2F;osdi18-lockerman.pdf" rel="nofollow">https:&#x2F;&#x2F;www.usenix.org&#x2F;system&#x2F;files&#x2F;osdi18-lockerman.pdf</a>) papers from the lead author that precede this one.')