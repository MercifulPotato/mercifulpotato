Item(by='alquemist', descendants=None, kids=None, score=None, time=1606870050, title=None, item_type='comment', url=None, parent=25270515, text='RAII can be decoupled from ctor&#x2F;dtor mechanism, see Python&#x27;s &#x27;with&#x27; statement. Javaish pseudocode, similar to a &#x27;for&#x27; loop:<p><pre><code>    &#x2F;&#x2F; on exit the finally fn will be called with &#x27;x&#x27; as an argument.\n    with (Type x: create(args); finally (Type x) -&gt; cleanup(x)) {\n      &#x2F;&#x2F; safely use x, throw at will.\n    }\n</code></pre>\nRe C++ and exceptions, there is an additional layer of wrinkles: throwing exceptions from ctors or, worse, dtors. Herb Sutter used to have a loooong list of what can go wrong in such situations back in the day. Explicit error codes happen to make it impossible to write ctors &#x2F; dtors that can enter an error state by virtue of the fact that there is no way to return the error. My suspicion is that this is 50% of the reason of banning C++ exceptions in solid C++ style guides.')