Item(by='dalbasal', descendants=None, kids=[25480541, 25480284, 25498023], score=None, time=1608397973, title=None, item_type='comment', url=None, parent=25477852, text='I think this can be generalised as &quot;more power to users.&quot; You might want to filter Pinterest. OP wants to avoid mainstream news, social media, nor shopping&#x2F;product sites. This requires users to be involved.<p>Filters, refinement, user preferences. etc etc. Search is a powerful tool, and the power has been growing exponentially since 1995. But, almost all of that power is channeled into instant results, intuitiveness, &quot;sane defaults&quot; and such. All the capabilities are in the background and the assumed user is lowest denominator on all fronts. The low effort, low technical capabilities, low understanding, etc. This <i>is</i> most people (me included) most of the time, but not <i>all</i> of the time. Maybe I want to filter seo spam (like pinterest) more aggressively. Etc.<p>This isn&#x27;t a slam on google really. One thing can&#x27;t do everything and the thing google search does is what most people need most of the time. It&#x27;s definitely the thing that makes the most money. But... none of a search engines power has been channeled into making search a power tool. It&#x27;s a tool that everyone uses many times per day, but there is no learning curve. No getting better. You can&#x27;t really invest effort and get rewarded for that effort.<p>Pity really, all this power is there. It&#x27;s right under the surface. Let us be more than the lazy, dumb user sometimes.<p>Google have reversed the User Interface paradigm. Instead of users learning the software and telling it what to do, the software learns the user. I don&#x27;t necessarily mean NNs or personalisation. I mean that the paraign is software-centric. &quot;If the user does X, how should the software respond?&quot; instead of &quot;If the user user wants Y, how does she make the software do it?&quot; That&#x27;s great for intuitiveness, but it also creates a frame where the software gets better over time but the user never does.')