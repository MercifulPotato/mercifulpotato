Item(by='cataphract', descendants=None, kids=[25803068, 25803127], score=None, time=1610812912, title=None, item_type='comment', url=None, parent=25801986, text='The article seems to boil to down to: you need to understand Groovy to effectively use Gradle.<p>It&#x27;s impossible to disagree with this, but this is a realization you should have after interacting with it after 10 minutes.<p>I may be biased because I&#x27;d been using Groovy (Grails apps) for years before I used Gradle so the syntax was not a problem at all for me. For me, the problem with Gradle is the very poor documentation. If I want to do something more complex, I either find the answer in Stackoverflow&#x2F;the Gradle message board, or I will have to look at the source code of the plugins. Creating a task for scratch is fairly simple, it&#x27;s interacting with the plugins that&#x27;s difficult, and while I agree with the author that excessive abstraction through DSLs doesn&#x27;t help, if these DSLs didn&#x27;t leak and were properly documented it wouldn&#x27;t be a problem.<p>Another problem is that it&#x27;s clear what the right conventions are. Say you want some classes to some exec task. Where should these classes live? Do you use a configuration? Create a sourceSet? Add a directory to an existing sourceSet? You just edit the classpath property in the task to point to a directory? I miss some of the rigidity of Maven, though not its XML syntax. The ability to write actual functions in Groovy (e.g. a closure implementing a file filter) is very much welcome.')