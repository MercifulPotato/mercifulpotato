Item(by='disambiguation', descendants=None, kids=None, score=None, time=1606332196, title=None, item_type='comment', url=None, parent=25209600, text='I did a medium skim of the whole doc, so apologies if I missed anything.<p>The following is my TL;DR takeaway:<p>* Everything is consolidated into JSON. HTML and CSS elements are now expressed in a uniform JSON format. You can express a whole element (whole == styled + functional) as one JSON blob or define individual blobs and link them by class reference.<p>* By consolidating, we eliminate redundancies across the front-end landscape.<p><pre><code>    * I didn&#x27;t see it explicitly, but I think it&#x27;s implied that everything by default is a div, but you can define a &quot;type&quot; whether that&#x27;s an &quot;input&quot; or a &quot;style&quot;\n\n    * CSS is called out as being too bloated and &quot;functional&quot;, so his approach strips out everything from CSS that isn&#x27;t basic cartesian positioning. The rest is deferred to javascript.\n\n</code></pre>\nReactions<p>* Overall I like it, very developer centric. I&#x27;m biased towards JSON &gt; XML which is a plus. But just the idea of keeping track of one parser in my head for all of front end development, instead of the current 3, is a big win.<p>* IMO it seems like a lot of this could be achieved today in React, and It&#x27;d be cool to see a POC trans-piler that does exactly that! :)<p>Critiques<p>* Before the POC stage, special care has to go into deciding what bits of the declarative web are getting eliminated.<p><pre><code>    * ex. Relative positioning, if this gets removed I see it leading to a lot of &quot;re-inventing the wheel&quot; but maybe that&#x27;s your intention? Everyone is already overly reliant on things like flex-box, so maybe this just results in flex-box-js :shrug\n</code></pre>\n* Maybe I missed it, but there seems to be a bunch of other loose ends:<p><pre><code>    * State-management \n\n    * inheritance (both state and style)\n\n    * rendering&#x2F;lifecycles\n\n</code></pre>\nP.S. A lot of commentators are concerned you&#x27;re trying to throw out the entire declarative web, but that wasn&#x27;t my takeaway at all. Rather it&#x27;s a call to refine the declarative foundation of the web.')