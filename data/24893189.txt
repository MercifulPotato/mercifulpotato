Item(by='andreareina', descendants=None, kids=[24893221], score=None, time=1603691817, title=None, item_type='comment', url=None, parent=24893041, text='&#x27;unless vs &#x27;if-not vs &#x27;negat-if is &quot;just&quot; a naming issue, it&#x27;s the same in any other language wrt functions. IME a bigger issue is jumping between code and data, both for the writer of the macro (viz macros to ensure that a form is evaluated at most once) and the user (is this thing a macro? Is this form going to be evaluated or quoted?).<p>The benefit is being able to extend the language. Context managers in Lisp are just macros. Clojure&#x27;s spec and async are macros.<p>For sure, the joke about blowing your whole leg off (as opposed to just your foot) applies, but it&#x27;s the same for concurrency, distributed systems, cryptography, etc. The answer isn&#x27;t to ban it, it&#x27;s to exercise more care in the construction of these abstractions so that mere mortals can use them safely.')