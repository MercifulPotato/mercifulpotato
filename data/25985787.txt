Item(by='vbuterin', descendants=None, kids=[25986223], score=None, time=1612156706, title=None, item_type='comment', url=None, parent=25984356, text='&gt;  Second, any consensus protocol can only remain live as long as there are no more than f faults out of 3f+1 replicas. This is again irrespective of the network model<p>We actually know of consensus protocols that require synchrony including between participants and clients that go up to 99% fault tolerance for both liveness and safety; in fact Lamport himself described one in his original paper (remember that it&#x27;s &quot;written messages&quot; and not &quot;oral messages&quot; in his vocab that&#x27;s the relevant category; these days public key cryptography is cheap and uncontroversial so there&#x27;s no need to care about the &quot;oral&quot; case). There&#x27;s also a table on page 291 in the 1988 DLS paper (see <a href="https:&#x2F;&#x2F;groups.csail.mit.edu&#x2F;tds&#x2F;papers&#x2F;Lynch&#x2F;jacm88.pdf" rel="nofollow">https:&#x2F;&#x2F;groups.csail.mit.edu&#x2F;tds&#x2F;papers&#x2F;Lynch&#x2F;jacm88.pdf</a>, the &quot;authenticated byzantine&quot; row and the &quot;synchronous&quot; column) that gives an overview of the fault tolerance levels in various different cases.<p>The original definition of consensus did not have a notion of passive clients needing to learn the result, so the &quot;active participants synchronous, passive clients asynchronous&quot; model common in blockchain land was not really analyzed well back then. It turns out that with a synchronous network, the passive client requirement is what brings safety and liveness down from 99% to 50%. And it also happens that the 50% fault tolerance protocols are less fragile in the case that the synchrony assumption breaks temporarily.')