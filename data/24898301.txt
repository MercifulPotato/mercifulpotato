Item(by='bluestreak', descendants=None, kids=[24898467, 24898589], score=None, time=1603731449, title=None, item_type='comment', url=None, parent=24897746, text='We have written a database in zero GC java and one thing I have not seen any evidence of &quot;escape analysis&quot;.<p><pre><code>   @State(Scope.Thread)\n   @BenchmarkMode(Mode.AverageTime)\n   @OutputTimeUnit(TimeUnit.NANOSECONDS)\n   public class EscBenchmark {\n\n       Rnd rnd = new Rnd();\n\n       public static void main(String[] args) throws RunnerException {\n           Options opt = new OptionsBuilder()\n                   .include(EscBenchmark.class.getSimpleName())\n                   .warmupIterations(5)\n                   .measurementIterations(5)\n                   .forks(1)\n                   .addProfiler(GCProfiler.class)\n                   .build();\n\n           new Runner(opt).run();\n       }\n\n       @Benchmark\n       public int testEscapeAnalysis() {\n           int[] tuple = {0, 2}; &#x2F;&#x2F; esc analysis? where are you?\n           return tuple[rnd.nextPositiveInt() % 2];\n       }\n   }\n\n</code></pre>\nAnd the output of GC profiler:<p><pre><code>  Benchmark                                                     Mode  Cnt     Score     Error   Units\n  EscBenchmark.testEscapeAnalysis                               avgt    5     8.234 ±   0.029   ns&#x2F;op\n  EscBenchmark.testEscapeAnalysis:·gc.alloc.rate                avgt    5  2647.216 ±   9.275  MB&#x2F;sec\n  EscBenchmark.testEscapeAnalysis:·gc.alloc.rate.norm           avgt    5    24.000 ±   0.001    B&#x2F;op\n  EscBenchmark.testEscapeAnalysis:·gc.churn.G1_Eden_Space       avgt    5  2643.140 ± 177.137  MB&#x2F;sec\n  EscBenchmark.testEscapeAnalysis:·gc.churn.G1_Eden_Space.norm  avgt    5    23.963 ±   1.613    B&#x2F;op\n  EscBenchmark.testEscapeAnalysis:·gc.count                     avgt    5   157.000            counts\n  EscBenchmark.testEscapeAnalysis:·gc.time                      avgt    5   103.000                ms</code></pre>')