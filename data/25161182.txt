Item(by='kmeisthax', descendants=None, kids=None, score=None, time=1605885228, title=None, item_type='comment', url=None, parent=25156321, text='Could have? They actually did - they were abandoned for various technical and marketing reasons. The only legal issue I could foresee is the questions of law raised in Oracle v. Google, which won&#x27;t be decided until February... and even then, I wouldn&#x27;t be surprised if SCOTUS rules narrowly on that case.<p>Google had Swiffy, an online service that took your SWF and repackaged it in a non-Flash form. It was primarily intended for advertisers but it eventually had AVM1 and 2 support. It&#x27;s discontinued because advertisers moved away from Flash faster than expected (and Adobe Animate got some amount of HTML5 export capability). I&#x27;m also not sure how well it handled some of Flash&#x27;s trickier to emulate behaviors.<p>Mozilla had Shumway, a browser extension that runs SWF files in JavaScript. According to another comment in this particular thread, Shumway was discontinued when Mozilla started bumping up against large compatibility problems. I can hazard a guess as to why: AVM1 in particular is a garbage fire of poorly-specified behaviors and execution order. Macromedia provided no runtime error behavior and had extreme deference to backwards compatibility. Movies are versioned and things like whether or not variables are case-sensitive change based on what SWF version it was compiled for. Furthermore, this VM was originally not intended to run an ECMAScript-like language, you originally put together AVM1 opcodes by hand, so a lot of opcodes are far more tolerant of programmer error than they have any right to be.<p>As an example of this, ActionGetVariable and ActionSetVariable (the thing that handles statements like &quot;child_clip.var&quot;) aren&#x27;t just limited to taking an object and a property name string, because that&#x27;s not how they were originally intended to be used. Originally, those actions would take a whole path to the variable, and it was in slash-path syntax, e.g. &quot;\\child_clip:var&quot;. You could also chain paths in one op, and the implementation would dutifully parse the path out and traverse it to get the variable. This means that there are movies that will issue opcodes like &quot;ActionGetVariable this &#x27;\\level.Alien\\bullet:speed&#x27;&quot; and we have to support any combination of slashes, colons, and dots or SWFs will break.<p>AVM1 is a bottomless pit of those kinds of odd exceptions, and you have to support them all in order to get good compatibility with games. This is the sort of thing that only makes sense for an entity like Ruffle funded entirely by people who want to make old games work. It does not make financial or any other kind of sense to sink many hours of development time into an old-and-busted proprietary animation platform other than on the basis of preservation.')