Item(by='Foxboron', descendants=None, kids=[25763077], score=None, time=1610544678, title=None, item_type='comment', url=None, parent=25761622, text='&gt; Whether the vendoring approach is used depends on the actual tools being used, but that is mostly irrelevant.<p>I don&#x27;t think it is though? Because...<p>&gt;So to answer your question, you only need to change a single file. For the requests library, this one[1]. You might also be interested in how Nix manages patches for NPM packages[2]. The amount of manual fixes required is surprisingly few.<p>Right, I assume python is easier in this scenario since there are not many cases where a python project would install N different versions of one package. I don&#x27;t quite understand how these work if a python project depends on separate versions?<p>For the nodejs part I&#x27;m more curious. node_modules sometimes contain multiple versions of the same dependency, sometimes across multiple major versions. The patching in the files seems fairly trivial sed replacements and rpath rewrites. But how would security patches be applied across versions?<p>I also took a quick look at the go stuff, and it seems like there is no such thing there as `deleteVendor` defaults to false thus each Go application is self-contained. How would patching dependencies work here?<p><a href="https:&#x2F;&#x2F;github.com&#x2F;NixOS&#x2F;nixpkgs&#x2F;search?q=deleteVendor" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;NixOS&#x2F;nixpkgs&#x2F;search?q=deleteVendor</a>')