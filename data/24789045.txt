Item(by='ptx', descendants=None, kids=None, score=None, time=1602772532, title=None, item_type='comment', url=None, parent=24774964, text='The PEP appears to contradict itself about implementing the with statement using macros.<p>&gt; It is possible to demonstrate potential language extensions using macros. For example, macros would have enabled the with statement and yield from expression to have been trialed.<p>But later, in the example showing an implementation of the with statement:<p>&gt; The above would require handling open specially.<p>If the macro-based with statement implementation can only handle the built-in open function and not arbitrary context managers, it&#x27;s much more limited and not really the same feature. Does this mean that macros as proposed here cannot actually be used to implement something like the with statement?<p>Also:<p>&gt; Annotations, either decorators or PEP 3107 function annotations, have a runtime cost even if they serve only as markers for checkers or as documentation.<p>But this runtime cost, if the decorator returns the original function, is essentially the cost of a function call when the module is loaded. If the decorator doesn&#x27;t put a wrapper around the original function, there is no runtime cost when the function is called, only when it&#x27;s defined. You would need a huge number of decorated functions for this to have a a detectable effect on module loading performance, I&#x27;d expect.')