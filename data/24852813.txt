Item(by='brundolf', descendants=None, kids=[24852954, 24853643, 24854614, 24853646, 24853849, 24856084, 24853764, 24853883, 24855948, 24853059, 24856430, 24853286, 24854018, 24852973], score=None, time=1603318400, title=None, item_type='comment', url=None, parent=24846987, text='&gt; Linux is 15+M lines of code....But at only 9,000 lines, Unix v6 was tractable, people continued to study it (and maybe still do), and the famous comment lived on.<p>&gt; Reading real programs is a part of learning computer science that should be emphasized more. As an undergraduate, we mostly programmed in BCPL, a local Cambridge language that is the fore-runner of C and C++. We had access to the full source code of the compiler and reading it was as valuable as the more theoretical aspects we learned in our compiler-writing course. Today, with open source, it is easy to read the source code for many systems actually in use (Linux, the Apache web server, Hadoop, TensorFlow, and thousands more) but these are hundreds of thousands, if not millions, of lines of code. As I said above, Linux is somewhere between 15M and 20M lines of code, depending on just what you include.<p>This is an interesting problem. Modern software is so huge and complicated that it&#x27;s not feasible to go read it just as a learning exercise. Linux devs can probably spend years contributing to the project without having even visited all of its dark corners, much less understanding them.<p>Not sure what can be done. Though I am tempted to go see what a 9,000 line OS looks like.')