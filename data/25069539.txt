Item(by='mgechev', descendants=None, kids=[25073226, 25071344, 25069866, 25074951], score=None, time=1605187364, title=None, item_type='comment', url=None, parent=25069131, text='Angular team member :)<p>&quot;Inputs as observables&quot; is probably the most discussed feature request on our issue tracker. I agree that there are strong arguments for going in this direction, but we generally try to keep `@angular&#x2F;core` agnostic in this sense and not couple it to RxJS (EventEmitter is the only dependent abstraction right now). There are different reasons for that, but I&#x27;d say the two main arguments are: out of order component loading and ergonomics.<p>There are a lot of developers who are comfortable with RxJS and enjoy how expressive it is. Simultaneously, we have a less vocal majority of either beginners or people who oppose such expressive APIs. Both of these groups use Angular, and we need to keep the framework ergonomic for them.<p>That&#x27;s why we have community libraries such as `ngrx`, which we consider as reactive extensions of @angular&#x2F;core.<p>&gt;- The reactive forms has been untyped for years. It feels weird to ship with a forms module that seems to work pretty well, heavily invest on typescript, and then the forms are simply `any` - I mean what the hell?<p>We developed reactive forms when TypeScript was still not as powerful as it is today. For the past years, however, the language evolved and it has very strict and expressive type system.<p>We <i>really</i> want to make reactive forms much more struct :) Our team has been looking actively into that, but it&#x27;s not trivial to fix the problem without introducing breaking changes in the public API surface. That&#x27;s something on our radar, and we&#x27;ve been doing a lot of exploration, but given the adoption of Angular, we want to be careful and land it without breaking the ecosystem.<p>In the meantime, we have community modules that provide much stricter forms implementation.<p>Regarding fragments and the input&#x2F;output model, we haven&#x27;t received much of your feedback, but that&#x27;s something I&#x27;ll bring up to the team.')