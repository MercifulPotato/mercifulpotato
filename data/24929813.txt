Item(by='pwdisswordfish4', descendants=None, kids=[24931801], score=None, time=1603974941, title=None, item_type='comment', url=None, parent=24928282, text='The question asking for clarification is itself vague.  Examples of which part?<p>Look at JS that&#x27;s written for serious applications today, identify the stuff that you&#x27;d label as &quot;idiomatic&quot;, and then look at code that was written 10 years ago for serious applications, and see if it matches what your conception of &quot;idiomatic JS&quot; is.  Good references for the way JS was written for high-quality applications without the negative influence of the new idioms (because they didn&#x27;t exist yet): the JS implementing Firefox and the JS implementing the Safari Web Inspector.<p>Examples of how &quot;idiomatic JS&quot; is often written by people who are working against the language instead of with it:<p>- insistence on overusing triple equals despite the problems that come with it<p>- similarly, the lengths people go to to treat null and undefined as if they&#x27;re synonymous<p>- config parameter hacks and hacks to approximate multiple return values<p>- `require`, NodeJS modules, and every bundler (a la webpack) written, ever<p>- `let self = this` and all the effort people go through not to understand `this` in general (and on that note, not strictly pure JS, but notice how often the `self` hack is used for DOM event handlers because people refuse to understand the DOM EventListener interface)<p>- every time people end up with bloated GC graphs with thousands of unique objects, because they&#x27;re creating bespoke methods tightly coupled via closure to the objects that they&#x27;re meant for because lol what are prototypes<p>These &quot;idioms&quot; essentially all follow the same &quot;maturation&quot; period: 1. A problem is encountered by someone who doesn&#x27;t have a solid foundation  2. They cross-check notes with other people in the same boat, and the problem is deemed to have occurred because of a problem in the language  3. A pattern is adopted that &quot;solves&quot; this &quot;problem&quot;  4. Now you have N problems<p>People think of this stuff as &quot;idiomatic JS&quot; because pretty much any package that ends up on NPM is written this way, since they&#x27;re all created by people who were at the time trying to write code like someone else who was trying to write code like the NodeJS influencers who are considered heroes within that particular cultural bubble, so it ends up being monkey-see-monkey-do almost all the way down.')