Item(by='that_guy_iain', descendants=None, kids=[25915625, 25915096, 25915674], score=None, time=1611655367, title=None, item_type='comment', url=None, parent=25894810, text='I&#x27;m actually working on an AI-based monitoring product[1] that I plan on launching next month. Mines is based on anomaly detection for ecommerce systems with the emphasis on anomalies with the orders. My take is, normally IT just look to see if they&#x27;re still processing payments and still taking orders. They&#x27;ll often have a dashboard within their office where they can see the orders and go check that dashboard manually throughout the day. Any process that has manual actions are prone to failure. They don&#x27;t look for 6 hours or maybe forget for a few days. But even then, if you&#x27;re looking to ensure that you&#x27;re still accepting orders, you may be accepting orders, but a random feature may be reducing the sales. An example that I&#x27;ve been told happens a lot, the dropdown to select which variant you want may break. There are also other things other than technical errors that could affect sales, such as changing the layout, it may all work but conversion rates could drop. Noticing a 25% drop in sales is a hard thing to notice by eye and often something that will only get picked up weeks later and cause a whole bunch of painful meetings.<p>Overall, I think anomaly detection is a major thing we need in monitoring. I generally want to have it with my logging which is where I got the idea for my project, and I will be extending it to work with my logging system even if it&#x27;s just for me. There are so many issues in legacy production systems where if it happens once that&#x27;s ok, but if it happens 100 times, it&#x27;s not ok. Writing rules for all of these seems near impossible if you have a large startup system you need to make reliable.<p>[1] <a href="https:&#x2F;&#x2F;www.ootliers.com" rel="nofollow">https:&#x2F;&#x2F;www.ootliers.com</a>')