Item(by='Galanwe', descendants=None, kids=None, score=None, time=1602321694, title=None, item_type='comment', url=None, parent=24737506, text='That was already accounted in my answer<p>&gt; whenever a header is compiled, you could store a hash of all used defines and their checksum. Whenever that file should be read again, compare the checksum of the used defines to the one stored. If they are the same, you can reuse the precompiled header. If not, create a new version of the precompiled header for a different set of defines.<p>In this example, when compiling b.h, you can store that this compiled header is for when state&lt;I_LIKE_FEATURE_X=1&gt;. Next time you have to include it, check if the state matches. If that is the case, use the precompiled header. If not, create a new version for state&lt;I_LIKE_FEATURE_X=0&gt;. As also already mentioned, it is quite rare for a single project to include the same file with a different configuration of defines that would change it. 99.9% of the times you would just -DI_LIKE_FEATURE_X project wide, so Ã  single precompiled header only would be necessary')