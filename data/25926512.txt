Item(by='jabl', descendants=None, kids=[25926830, 25926922, 25928137], score=None, time=1611743627, title=None, item_type='comment', url=None, parent=25925012, text='Some kind of sandboxing (mumble mumble containers) is necessary for the Linux desktop. In 2021 the security threat to a desktop user largely isn&#x27;t other users on the same box poking around in your files, which is what the POSIX permissions protect against, but that every process you run has full access to all your files.<p>Meanwhile, the distro packaging process isn&#x27;t keeping up with packaging all interesting FOSS out there, e.g. it has more or less completely dropped the ball on integrating with the many language-specific package managers out there like cargo, npm, pypi. And also it seems processes and workflows are stuck in the 1990&#x27;ies further preventing progress (e.g. <a href="https:&#x2F;&#x2F;michael.stapelberg.ch&#x2F;posts&#x2F;2019-03-10-debian-winding-down&#x2F;" rel="nofollow">https:&#x2F;&#x2F;michael.stapelberg.ch&#x2F;posts&#x2F;2019-03-10-debian-windin...</a> ). Ironically people run more up to date FOSS on windows or macOS than on Linux, where you&#x27;re stuck with the schedule of your distro. There&#x27;s also the irony that some FOSS apps fund themselves by providing builds for money on the commercial app stores, but they have no way to similarly monetize Linux users (e.g. Krita).<p>So some kind of base system + app store where the app developers can push sandboxed stuff with some automated or human curating like the mobile app stores around now looks like a reasonable model. I guess this is what flatpack and snaps are aiming for. Also, where should the line be drawn between the base and the app store apps? Presumably we don&#x27;t want coreutils to come packaged as a container, but I don&#x27;t have a clear answer to where the line should be.')