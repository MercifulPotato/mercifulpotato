Item(by='alanfranz', descendants=None, kids=[25414985], score=None, time=1607934967, title=None, item_type='comment', url=None, parent=25414725, text='&gt; have to first find the single implementing class<p>This _can_ be a problem with Java, admittedly. Sometimes you&#x27;ve got a single meaningful implementation, but you need an interface either for using it with services that implement such interface at runtime to create proxies (e.g. Spring, Hibernate, others) that augment its functionality, or to properly mock a dependency. BUT: the IDE should be your friend. Almost every Java IDE supports &quot;go to the implementation&quot;.<p>And, what is the alternative? Fewer interfaces sometimes lead to even worse patterns (for testing: monkeypatching and concrete class subclassing). I prefer the clarity of declaring an interface wherever an interface makes sense.<p>Using a lot of interfaces and defining APIs (which are, mostly, collections of related interfaces) makes the Java ecosystem highly pluggable. I can mix-and-match a lot of different libraries and&#x2F;or implementations, as long as there&#x27;s an interface they can work together in a rather good fashion.<p>Consider Python: there&#x27;re very few (and sometimes poorly defined) interfaces and API; so, quite often you need to pick a library&#x2F;framework which implements everything and works poorly with other implementations.')