Item(by='cjfd', descendants=None, kids=[25044827, 25046421], score=None, time=1605007632, title=None, item_type='comment', url=None, parent=25043731, text='The ease of branching has people treat branches as if they were cookies. You cannot possibly have too many of them. But, actually, branches make refactoring more difficult. What if one person just added a parameter to a function while another person is adding new calls to that same function. The automated merge cannot fix this conflict. The KISS principle that is the corner stone of all software development would dictate that you should have the smallest number of branches possible so everyone gets the latest code as soon as possible and conflicts get minimized. For unfinished features one can have feature flags. While there are cases where one needs a feature branch I think it is best to only make feature branches if they are necessary and most development does not need to be on a feature branch. The git flow also features a development branch besides the master branch. This also seems an unneeded complication for most projects. If you have specialized testers you probably do need release branches for every release that you make but then again if you don&#x27;t have specialized testers you probably don&#x27;t. Here is a good talk about the harmful nature of feature branches. <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=h7LeD7VevyI" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=h7LeD7VevyI</a>')