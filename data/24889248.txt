Item(by='lanstin', descendants=None, kids=None, score=None, time=1603654816, title=None, item_type='comment', url=None, parent=24889159, text='Explain the Java services that only ever return an HTTP 200 and either return the proper XML response or a java stack trace formatted into HTML.<p>And my point is those if statement are wanted by the people that write high reliability software in C. There just isn’t a substitute for thinking about errors. Even well done exception throwing systems will specific “this layer can throw, this middle layer won’t worry about errors, then this higher layer will restart or retry or whatever”. And in go within one layer you can usually have all those steps in one function and for error cases with the same handling just check for if err != nil. When I read code without explicit error handling I worry. I guess this debate is probably an aesthetic debate, and different type of code have different urgency. The extra check for error return is like the check for parameter correctness at the top of a function, which is common in robust C code. You can’t trust the callers too much and better to log an error than terminate the process.')