Item(by='IIAOPSW', descendants=None, kids=None, score=None, time=1612043183, title=None, item_type='comment', url=None, parent=25971102, text='I think what you are asking is given a time series (x_0, x_1... x_n), what is the 6 month high (or low) on day i? In other words you want the max (or min) of the sub series (x_{i-180},x_{i-179}... x_i).<p>x_0 is obviously the 6 month high at day 0 (since there is no previous data). If x_1 &gt; x_0 then x_1 is the new 6 month high so we can discard x_0 on day 1. If x_1 &lt; x_0 then x_0 is still the 6 month high on day 1, but we cannot discard x_1 because it might become the 6 month high when x_0 expires on day 181. So we need to maintain some sort of data structure of potential 6 month highs such that we can lookup the current high and remove these highs as they expire or get replaced. The easiest way to do this is with a list of pairs [(x_i1, i1), (x_i2, i2)...] sorted by increasing x_i. Because it is sorted, the current high is always found on the element closest to the end of the list. Furthermore when a new element (x_k, k) is added, it replaces all the elements which come before it (thus they can be removed). As a corollary, because the newest element is always added to the back (after removing what&#x27;s in front of it), the list is also sorted by order of expiry (with the oldest (x_i,i) at the end). Start with an empty list and i = 0<p>Find the sorted insertion point in the list for (x_i,i).<p>Remove everything prior to the insertion point.<p>Insert (x_i, i) at the start of the list.<p>If the element at the end of the list (x_n, n) is expired (n &lt; i+180) then remove it.<p>The 6 month high on day i is found in the element at the end of the list. Store this in a new series h_i.<p>Increment i by 1 and repeat.<p>This method trivially works for finding the 6 month low as well.')