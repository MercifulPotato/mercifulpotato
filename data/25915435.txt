Item(by='cheph', descendants=None, kids=[25916398], score=None, time=1611667105, title=None, item_type='comment', url=None, parent=25915139, text='&gt; Talking about RDF is absolutely meaningless without talking about Serialisation (and that includes ...URGH.. XML serialisation), XML Schema data-types, localisations, skolemisation, and the ongoing blank-node war.<p>Don&#x27;t implement XML serialization. The simplest and most widely supported serialization is n-quads (<a href="https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;n-quads&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;n-quads&#x2F;</a>). 10 pages, again with exaples, toc, and lots of non-normative content.<p>You don&#x27;t need to handle every data type, and you can&#x27;t even if you wanted to because data types are also not a fixed set. And whatever you need to know about skolemisation, localization, and blank-nodes is in the standards AFAIK.<p>&gt; C&#x27;mon, rdflib is a joke. It has a ridiculous 200 issues &#x2F; 1 commit a month ratio, buggy as hell, and is for all intents and purposes abandonware.<p>It works, not all functionality works perfectly but like I said I have used it and it worked just fine.<p>&gt; rdflib.js is in memory only, so nothing you could use in production for anything beyond simple stuff. Also there&#x27;s essentially ZERO documentation.<p>For processing RDF in browser it works pretty well, not sure what you expect but to me RDF support does not imply it should be a fully fledged tripple-store with disk backing. Also not really zero documentation: <a href="https:&#x2F;&#x2F;github.com&#x2F;linkeddata&#x2F;rdflib.js&#x2F;#documentation" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;linkeddata&#x2F;rdflib.js&#x2F;#documentation</a><p>&gt; &gt; What are the alternatives?<p>&gt; SIMPLICITY!<p>&gt; But the great thing about it is that there could be dozens of equally simple systems and standards, and we could actually see which approaches are best, from usage.<p>Okay, so you roll your own that fits your use case. Not much use to me and it is not a standard. Lets talk again when you standardize it. Otherwise do you mind giving an alternative that I can actually take off the shelf to at least the extent that I can with RDF?<p>I am not going to roll my own standard, and if all the RDF data sets instead used their own standards instead of RDF it won&#x27;t really improve anything.<p>EDIT: If you compare support for RDF to JSON schema, things are really not that bad.')