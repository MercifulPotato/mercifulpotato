Item(by='Jtsummers', descendants=None, kids=None, score=None, time=1611183611, title=None, item_type='comment', url=None, parent=25852968, text='I actually started writing a comment about that. Teaching VHDL (my experience) to most programmers is an entertaining experience because they expect effects to be immediate, not executed collectively and simultaneously but mediated by a clock or other mechanism. So in an HDL:<p><pre><code>  x &lt;= y;\n  y &lt;= y * 20;\n</code></pre>\nThese two effects actually occur simultaneously, which is different again from what mathematically inclined learners might expect since there is still mutation. It is more akin to the common notation:<p><pre><code>  x&#x27; = y\n  y&#x27; = y * 20\n</code></pre>\nWhere the &#x27; indicates the <i>next</i> value of x or y (as opposed to the derivative). Or perhaps:<p><pre><code>  x_n = y_{n-1}\n  y_n = y_{n-1} * 20\n</code></pre>\nAnd many programming languages don&#x27;t even have a good notion for similar parallel evaluation and assignment. Python does, with:<p><pre><code>  x, y = y, y * 20\n</code></pre>\nCommon Lisp has <i>psetf</i> which permits this:<p><pre><code>  (psetf x y\n         y (* y 20))\n</code></pre>\nLanguages with pattern matching&#x2F;destructuring bind are your best bet for writing this directly without needing temporary variables.')