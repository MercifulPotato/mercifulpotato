Item(by='jabl', descendants=None, kids=[25927239, 25927072], score=None, time=1611747620, title=None, item_type='comment', url=None, parent=25926830, text='&gt; The home OS should containerize all externally obtained binaries, assigning limited resources to them, as chosen by the user. The package distributors do not get to decide what level of access do they need; from they point of view, all resources are available; but the user must be able to add limits from the other side, unbeknownst to the (potentially hostile) package distributor.<p>The problem is that the user can&#x27;t be expected to know which resources an app needs (&quot;Hey, this thing wants to access &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so, sounds suspicious, let&#x27;s deny it&quot;), but OTOH you&#x27;re fully correct that the user must have the choice to deny specific access, perhaps by giving the app fake or empty data. So I think both are needed, so honest app developers can specify a minimum set of permissions the app needs to work to reduce the havoc a programming error in the app can create, but also giving the user opportunity to limit what the app can see (the user presumably want a word processor to be able to read and write a document the user is working on at the moment, but not everything in the users home directory).')