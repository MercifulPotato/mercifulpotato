Item(by='steveklabnik', descendants=None, kids=[24946232, 24944169], score=None, time=1604069407, title=None, item_type='comment', url=None, parent=24941873, text='I agree that Express&#x2F;Slim&#x2F;Flask is a better comparison.<p>But, to answer your core question, there are a few different reasons:<p>* Performance. The simple, straightforward Rust code will often be much faster than the usual suspects here. Sometimes, I&#x2F;O is your bottleneck, but sometimes it&#x27;s not. Maybe you only move some backend services over. npm is an example of a company that did this; some high performance services were implemented in Rust because Node was struggling.<p>* Consistency. Resource usage tends to be very flat. This helps with things like capacity planning, but also reliability (which is a later bullet point).<p>* Cost. This is directly related to performance, but also on a different axis: memory usage. We&#x27;ve seen people switch code to Rust, and while the performance doesn&#x27;t change things for end users, the extra overhead means smaller servers, or less servers, which translates directly into $$$. There are some big, not super public success stories here I wish I could tell you about, but a public example is Rubygems. They had a lambda doing some log processing, and the performance benefit of Rust made things fast enough to move it onto lambda&#x27;s free tier. Infinity savings! (Though of course it was actually from $12,000&#x2F;year -&gt; $0)<p>* Reliability. Back to the npm use-case, they had a lot of ops issues with Node. The Rust code ran for something like a year, year and a half, before ever having a single production issue. Static typing helps here, less variable resource usage helps here.<p>* Static types. Some people have come to prefer developing in a language with static types. Rust doesn&#x27;t have a monopoly here, but it is among very few languages that have many of its features, and many of them don&#x27;t check those previous boxes.<p>Of course, things aren&#x27;t a panacea either. The ecosystem isn&#x27;t as mature, even if this web page says it is. Async is great, but not perfect. Some people really <i>do not</i> like static types. Etc.')