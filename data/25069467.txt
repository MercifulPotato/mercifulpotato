Item(by='mgechev', descendants=None, kids=None, score=None, time=1605186858, title=None, item_type='comment', url=None, parent=25069345, text='Angular team member here.<p>&gt;In templates is the biggest example - where you can use some JS constructs but not others, and have to learn a new set of directives instead of using if&#x2F;for&#x2F;while etc.<p>Templates, just like JSX have their own trade-offs. They are statically analyzable, so relatively easy to optimize by our tooling. Having HTML templates allows us to generate efficient JavaScript instructions for rendering and change detection.<p>This has almost zero overhead on runtime and lets us perform change detection as fast as possible (we know <i>exactly</i> what has changed in the view).<p>&gt;Not to mention needing to bundle a compiler, unless you use AOC<p>You don&#x27;t need to bundle a compiler in Angular. The compilation happens at build time. After that we perform a lot of optimizations (having JavaScript instructions instead of HTML templates allows us to tree-shake more efficiently).<p>&gt;debugging is a nightmare<p>Browsers hide the part of the stack trace that&#x27;s coming from node modules, others let you blackbox non relevant scripts. To ensure smoother debugging experience for folks, we&#x27;ve been also working on providing better debugging guides and development tooling. We&#x27;ll be rolling this out in 2021.<p>&gt;And the trouble is that, as a new language that you have to learn, it is significantly inferior to JS&#x2F;TS. So yes, give me React any day, where I can use real Javascript and not have to feel like the framework is fighting the language it&#x27;s written in.<p>As I said above, it&#x27;s all about trade offs. JSX is very expressive, but sets its own limitations. It locks you to a specific paradigm for incremental computations, which is not necessarily the most performant one. Templates are less expressive. At the same time, they are easy to optimize ahead of time. Neither of both is JavaScript, as described by ECMA-262.<p>Comparing templates and JSX is definitely an interesting topic that&#x27;s hard to cover in a comment on HN :)')