Item(by='ChicagoDave', descendants=None, kids=None, score=None, time=1610324854, title=None, item_type='comment', url=None, parent=25716306, text='There&#x27;s a progression ever developer that grew up on SQL Server&#x2F;relational data needs to go through...<p>1. The models (plural intended) of a business are not necessarily a relational. There could be an upstream&#x2F;downstream relationship. There could be an event-based relationship. There may be no relations at all (documents are handy in these scenarios).<p>Stop assuming you start with an entity relation diagram. That&#x27;s an immediate limiting factor when listening to the business describe their processes.<p>2. There is no such thing as immediate updates to any database. There is _always_ latency. Build software understanding this.<p>3. Operational data and Analytical data are TWO DIFFERENT THINGS. (sorry for the shouting)<p>Operationally, I only need concern myself with the immediate needs of the user or process. If I&#x27;m doing &quot;something&quot; to the customer domain, I don&#x27;t need to know or do anything else. If I&#x27;m doing something to the order domain, I may need to notify some other domains of what I&#x27;m doing or have done, but that&#x27;s secondary and not _immediately important_. Inventory systems should have built-in mechanisms for levels and never need to know the exact up-to-date figures.<p>My operational domains can notify whole other systems on changes in data. So your analytical system can subscribe to these changes and normalize that data all it wants. I can even build user interfaces that display both operational and analytical data.<p>Micro-services are brilliant at operational domain boundary adherence. Events are brilliant at notifying external boundaries of change.<p>The caveat I point out to my clients is that thinking in this way is very different than we&#x27;re used to and often comfortable with. It takes time to identify the best boundaries and events for the models of a business. But if you put in that time, the result will be software that your business personnel can actually understand.')