Item(by='bogomipz', descendants=None, kids=[25244873], score=None, time=1606653880, title=None, item_type='comment', url=None, parent=25243159, text='&gt;&quot;So, for starters, let’s rip out all k8s networking. Overlay networks, gone. Services, gone. CNI, gone. kube-proxy, gone. Network addons, gone.&quot;<p>Then they go on to to suggest:<p>&gt;&quot;If you have more elaborate connectivity needs, you bolt those on as additional network interfaces and boring, predictable IPv6 routes. Need to secure node-to-node comms? Bring up wireguard tunnels, add routes to push node IPs through the wireguard tunnel, and you’re done.<p>and<p>&gt;&#x27;We could also have some fun with NAT64 and CLAT: make the entire network IPv6-only, but use CLAT to trick pods into thinking they have v4 connectivity. Within the pod, do 4-to-6 translation and send the traffic onwards to a NAT64 gateway.&quot;<p>So changing one type of NAT translation for another type of NAT translation and throw in some additional tunneling in there? How is that any simpler, more elegant or even more manageable than the current state of K8S networking? There is no requirement that you have to have an overlay network at all. If you bring up EKS cluster today in AWS the default is the aws-vpc CNI which is a flat address space the same as your VPC there is no overlay.<p>Then further:<p>&gt;&quot;Sticking at the pod layer for a bit longer: now that they’re mutable, the next obvious thing I want is rollbacks. For that, let’s keep old versions of pod definitions around, and make it trivial to “go back to version N”.<p>&gt;&quot;Now, a pod update looks like: write an updated definition of the pod, and it updates to match. Update broken? Write back version N-1, and you’re done.&quot;<p>This is exactly what using a GitOps operator does. Then they go on in the next sentence to call Gitops &quot;nonsense&quot;?<p>Not much of this is convincing or even well-throught out. This is definitely not &quot;from the ground up.&quot; It&#x27;s more like &quot;throwing some shit against the wall and seeing if something sticks.&quot;')