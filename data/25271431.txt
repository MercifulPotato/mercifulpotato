Item(by='roasbeef', descendants=None, kids=None, score=None, time=1606865205, title=None, item_type='comment', url=None, parent=25270637, text='&gt; Then, if you require P2P protocol compatibility, I would say this issue shows that nobody really cares about alternate implementations<p>Does that? What I see here is bitcoind adding a new feature that isn&#x27;t yet implemented in btcd. The new feature uses a different extension mechanism in the p2p protocol (a new message to signal knowledge of a new feature vs using the existing version message bits in the main p2p handshake). That new version of bitcoind also hasn&#x27;t yet been released, but I&#x27;d imagine that btcd will land a fix sooner to permit unknown message types being sent from its PoV.<p>&gt; Check this vulnerability, which was caused by LND relying on the btcd project&#x27;s library<p>Incorrect. The btcsuite libraries we use weren&#x27;t related to the bug at all. Instead, the bug was introduced by _new_ code which attempted to convert between the fixed 64-byte signature encoding used in the LN Protocol, and the variable sized encoding used in the base Bitcoin protocol. The resulting signatures _were_ valid ECDSA signatures, but didn&#x27;t adhere to an additional constraint that the Bitcoin system places on this signatures from a mempool policy standpoint. The signatures themselves were still valid from the PoV of Bitcoin consensus, in that they would be included in blocks.')