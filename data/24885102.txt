Item(by='pyrale', descendants=None, kids=None, score=None, time=1603619920, title=None, item_type='comment', url=None, parent=24883935, text='&gt; That doesn&#x27;t leave many exceptions.<p>Examples of programs which are useful and terminate are batch programs. Besides that, even in a server, you may want to ensure that a subset of the program terminates. For instance, if you&#x27;re using a serverless architecture, knowing that your lambda will terminate may be useful.<p>Much like the separation between pure and impure functions in fp, having a distinction between total and non-total functions means that you can limit your non-total code to a couple dozen LoCs, which is a reasonable thing to manually check.<p>&gt; But I don&#x27;t think this is very useful, because even in safety-relevant, hard real-time contexts, termination is not sufficient, but termination within a certain timespan.<p>Once you&#x27;ve broken the non-termination issue, it becomes much more reasonable to start working on time estimates. Basically, once you&#x27;ve said that the number of instructions needed to solve the problem is a function of your input size, calculating that function becomes a possibility.')