Item(by='haberman', descendants=None, kids=[24841594, 24840360], score=None, time=1603210048, title=None, item_type='comment', url=None, parent=24835357, text='Very interesting set of observations. As a C and C++ programmer, I am feeling more and more excited about Zig.<p>One thing that feels missing from Zig though is encapsulation. I don&#x27;t believe that you can declare struct fields private, such that they can only be accessed by methods.  This seems really important to me, not only as a technical means of enforcing invariants, or hiding internal-only implementation details that may change, but even just as a communication of intent. There is a big difference between &quot;you are invited to read&#x2F;write this directly&quot; and &quot;please don&#x27;t read&#x2F;write this.&quot;<p>C doesn&#x27;t have this, true, but at least in C you can put internal-only structs in a .c file instead of .h, making the members effectively invisible to clients.  Does Zig have anything comparable?')