Item(by='7373737373', descendants=None, kids=None, score=None, time=1604940043, title=None, item_type='comment', url=None, parent=25034468, text='&gt; Resource bounded languages such as Hume, which allow better analysis and implementation techniques by restricting how expressive the language is.<p>Hume seems to use a finite state machine and recursive functions as its &quot;substrate&quot;: <a href="https:&#x2F;&#x2F;www.macs.hw.ac.uk&#x2F;~greg&#x2F;hume&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.macs.hw.ac.uk&#x2F;~greg&#x2F;hume&#x2F;</a><p>There&#x27;s a more intuitive way: In a virtual machine interpreter loop, increase a value (commonly called &quot;gas&quot;) at every instruction step (or each block of instructions). Different instructions can have different costs.<p>The Ethereum Virtual Machine (EVM) uses this for example: <a href="https:&#x2F;&#x2F;blockgeeks.com&#x2F;guides&#x2F;ethereum-gas&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blockgeeks.com&#x2F;guides&#x2F;ethereum-gas&#x2F;</a><p>Stackless Python as well: <a href="https:&#x2F;&#x2F;stackless.readthedocs.io&#x2F;en&#x2F;latest&#x2F;library&#x2F;stackless&#x2F;pickling.html" rel="nofollow">https:&#x2F;&#x2F;stackless.readthedocs.io&#x2F;en&#x2F;latest&#x2F;library&#x2F;stackless...</a><p>This can even work recursively: <a href="https:&#x2F;&#x2F;esolangs.org&#x2F;wiki&#x2F;RarVM" rel="nofollow">https:&#x2F;&#x2F;esolangs.org&#x2F;wiki&#x2F;RarVM</a>')