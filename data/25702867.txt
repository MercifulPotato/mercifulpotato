Item(by='jstanley', descendants=None, kids=[25702947, 25703480], score=None, time=1610216132, title=None, item_type='comment', url=None, parent=25700135, text='I&#x27;m trying to learn FPGA by making a really tiny CPU: <a href="https:&#x2F;&#x2F;github.com&#x2F;jes&#x2F;jescpu" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jes&#x2F;jescpu</a><p>&gt; An 8-bit CPU, and 8-bit address space. This means there are only 256 bytes of memory available.<p>&gt; There are no register operands, no immediate mode operands, and no indirect addressing. All operands are direct addresses. In particular this means that to use pointers you need self-modifying code (i.e. rewrite the address of the instruction to match the address that your pointer points to).<p>It works right now, but only if I run the CPU at 1&#x2F;8th of the clock speed of the memory (see slowclock.v). I understand that it takes an extra cycle for reads from memory to get the signals back to the CPU, but don&#x27;t yet understand why it takes 8 cycles.<p>Eventually I would like to expand it to support 16 bit addresses, put it in a fancy box with some actual IO devices, and possibly even implement it with logic gates instead of an FPGA.')