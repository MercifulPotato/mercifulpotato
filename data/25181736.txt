Item(by='skybrian', descendants=None, kids=[25182576], score=None, time=1606084281, title=None, item_type='comment', url=None, parent=25181166, text='It does help by telling you what&#x27;s wrong. But in a way, increased precision makes the problem worse.<p>Suppose you have have a language with two categories of functions, those that can fail (returning an error) and those that can&#x27;t.<p>It&#x27;s nice that within the &quot;functions that can fail&quot; category, you don&#x27;t have to worry about what kind of error it might be. Error propagation can happen in a generic way. Adding a new kind of error doesn&#x27;t change any API&#x27;s.<p>If instead, you have different kinds of errors and <i>declare</i> them everywhere, you end up with a situation like Java&#x27;s checked exceptions. The problem is being <i>too precise</i>, which doesn&#x27;t leave room for changes later.<p>Similarly, we could be very generic about effects. Maybe we could just say &quot;this function has effects&quot; and treat them all the same? By not being precise about what the effects might be, we aren&#x27;t promising too much, so we allow ourselves room for change.<p>The downside is that the caller has to assume any effect is possible. This is a fundamental tradeoff between caller and callee convenience. You need to be specific enough for the caller to be able to deal effectively with the effects you declare, but not too specific, or you&#x27;re painting yourself in a corner.')