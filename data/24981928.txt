Item(by='ernst_klim', descendants=None, kids=None, score=None, time=1604425409, title=None, item_type='comment', url=None, parent=24979038, text='&gt; For the better or the worse, this is literally the #1 priority one has to have before trying to technically evaluate a language &#x2F; framework these days.<p>Well, people use OCaml, I&#x27;ve introduced and used it in a couple of workplaces. OCaml shines in domains like system programming, and it&#x27;s worth trying to introduce it for your team and see how it will end (for small projects if OCaml fits the domain).<p>I did that couple of times and people were glad not only because it&#x27;s a delightful language to work with, but also because you can learn some stuff while working with it.<p>&gt; Sure, many other languages suffer from that but it&#x27;s still a very good ideal to strive for<p>I think that it&#x27;s an unachievable ideal. There are two approach: batteries included and community driven.<p>Former leads to bloated slow half-baked or even straight incorrect implementations of every algorithm or parser or server people need in the standard library (python way).<p>Latter leads to fragmentation. Neither is perfect, and I haven&#x27;t seen a language without such troubles.')