Item(by='nickjj', descendants=None, kids=[24655893, 24654161, 24654663], score=None, time=1601574330, title=None, item_type='comment', url=None, parent=24653711, text='&gt; For beginners, almost anything will be hurdle till the get the hang of it. Afterwards, they&#x27;ll be practitioners. Being a beginner is a temporary situation; practitioners are forever.<p>What about languages who support multiple ways to do something in a semi-inconsistent manner?<p>For example with Elixir, in a lot of cases you end up calling certain standard library functions like foo(hello: :world) while others are foo(:hello, :world). Now, there&#x27;s special magic happening in the first case but stuff like this is super confusing and it gets easily compounded with more complex examples.<p>As a beginner I found Ecto&#x27;s various ways to calls things super confusing and I had to reference examples almost all the time to get the syntax right (which often had multiple ways of being &quot;right&quot;), but I&#x27;ve also talked with more experienced Elixir developers and they get hung up with Ecto&#x27;s syntax too.<p>So where do you draw the line between making the language &#x2F; DSL better and keeping it catered to only folks who are basically at the same skill level of the language creator?')