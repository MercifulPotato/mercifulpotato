Item(by='dmit', descendants=None, kids=None, score=None, time=1606247640, title=None, item_type='comment', url=None, parent=25201028, text='&gt; Applications of Java and Rust do not overlap.<p>Both are general purpose languages, so of course they overlap.<p>&gt; Good luck rewritting all the big data tools from Java (Elasticsearch, Spark, Kafka, Hadoop, Neo4j, Deeplearning4j, Cassandra, Solr, Arrow, OrientDB)<p>Cassandra (<a href="https:&#x2F;&#x2F;scylladb.com" rel="nofollow">https:&#x2F;&#x2F;scylladb.com</a>) and Kafka (<a href="https:&#x2F;&#x2F;vectorized.io" rel="nofollow">https:&#x2F;&#x2F;vectorized.io</a>) have already been rewritten once in C++, with massive latency and throughput improvements. No reason why they couldn&#x27;t get their superior Rust clones in the observable future.<p>Materialize (<a href="https:&#x2F;&#x2F;materialize.com" rel="nofollow">https:&#x2F;&#x2F;materialize.com</a>), Noria (<a href="https:&#x2F;&#x2F;github.com&#x2F;mit-pdos&#x2F;noria" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;mit-pdos&#x2F;noria</a>), and Sled (<a href="https:&#x2F;&#x2F;github.com&#x2F;spacejam&#x2F;sled" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;spacejam&#x2F;sled</a>) are just some of the Rust database projects that are aiming at unseating the de facto standard implementations in the space. InfluxDB (<a href="https:&#x2F;&#x2F;www.influxdata.com" rel="nofollow">https:&#x2F;&#x2F;www.influxdata.com</a>) is now doing major Rust development as well.<p>The future is almost here. It&#x27;s just not evenly distributed yet.')