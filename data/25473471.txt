Item(by='nickjj', descendants=None, kids=None, score=None, time=1608334674, title=None, item_type='comment', url=None, parent=25468282, text='I was nodding along until the last sentence of:<p>&gt; In unkind learning environments like tennis, jazz, or marketing, the key is to learn as many things as you can as broadly as you can, to gain a reservoir of ideas to use.<p>I think this very much applies to kind (programming) too. Sometimes the biggest programming level ups requires broadly knowing about this, that and the other thing.<p>For example, you can practice writing file upload code until your eyes bleed but if you&#x27;re unaware of the implications of what uploading to local disk brings in a containerized or Heroku-like platform then a lot of what you know suddenly falls apart. Your entire basis of what you&#x27;ve been doing might need to be rewritten or drastically altered (creating a &quot;storage&quot; abstraction, etc.).<p>With software development it&#x27;s super valuable to get a broad understanding of many parts of the stack, not just individual features. I say &quot;feature&quot; here because in a golf analogy a feature would be putting within 6 feet, chipping under 20y, or using a driver. In golf you can individually learn these things in isolation and your overall game improves in the end. In programming this isn&#x27;t as clear cut IMO.')