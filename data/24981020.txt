Item(by='metajack', descendants=None, kids=[24981348], score=None, time=1604420571, title=None, item_type='comment', url=None, parent=24980875, text='Diane wrote an analysis of how many bugs would have been avoided had the Servo style system been in Gecko all along:\n<a href="https:&#x2F;&#x2F;hacks.mozilla.org&#x2F;2019&#x2F;02&#x2F;rewriting-a-browser-component-in-rust&#x2F;" rel="nofollow">https:&#x2F;&#x2F;hacks.mozilla.org&#x2F;2019&#x2F;02&#x2F;rewriting-a-browser-compon...</a><p>&quot;Thereâ€™s a significant overlap between memory vulnerabilities and severe security problems. Of the 34 critical&#x2F;high bugs, 32 were memory-related.&quot;<p>Rust doesn&#x27;t fix everything, and this result won&#x27;t hold for code that is itself security logic (ie, crypto implementation) as logic errors are also very bad. But fixing memory safety does address almost all the high and critical severity issues.<p>Microsoft published similar research: <a href="https:&#x2F;&#x2F;msrc-blog.microsoft.com&#x2F;2019&#x2F;07&#x2F;18&#x2F;we-need-a-safer-systems-programming-language&#x2F;" rel="nofollow">https:&#x2F;&#x2F;msrc-blog.microsoft.com&#x2F;2019&#x2F;07&#x2F;18&#x2F;we-need-a-safer-s...</a><p>Keep in mind that the Gecko style system has had two decades of work before the Rust code came along, and was written by some excellent programmers. It was extensively fuzzed for years. And still, Rust has enormous potential to solve these security issues.<p>Only time will tell if the next decade with Rust will pan out as the data seem to predict, but I am quite hopeful.')