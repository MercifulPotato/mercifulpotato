Item(by='BoorishBears', descendants=None, kids=None, score=None, time=1602521886, title=None, item_type='comment', url=None, parent=24755716, text='Apples to oranges would be the understatement of the century here...<p>Monogame is _literally_ an implementation of XNA 4: <a href="https:&#x2F;&#x2F;www.monogame.net&#x2F;about&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.monogame.net&#x2F;about&#x2F;</a><p>&gt; MonoGame is an Open Source implementation of the Microsoft XNA 4 Framework.<p>It&#x27;s raison d&#x27;etre is to let you run stuff that ran on XNA 4 specifically, you could almost say it&#x27;s psuedo-ABI is XNA 4. So while they&#x27;ve built on that... it shouldn&#x27;t be surprising that yes, literally the one thing it was built to do, works.<p>I mean it&#x27;s to the point once upon a time XNA&#x27;s API reference <i>was</i> MonoGame&#x27;s documentation and to this day they match, even if it takes harming the soundness of the API:<p><a href="https:&#x2F;&#x2F;gamedev.stackexchange.com&#x2F;questions&#x2F;67040&#x2F;where-is-monogames-api-reference" rel="nofollow">https:&#x2F;&#x2F;gamedev.stackexchange.com&#x2F;questions&#x2F;67040&#x2F;where-is-m...</a>\n<a href="https:&#x2F;&#x2F;github.com&#x2F;MonoGame&#x2F;MonoGame&#x2F;issues&#x2F;5487" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;MonoGame&#x2F;MonoGame&#x2F;issues&#x2F;5487</a><p>-<p>Also you realize XNA broke stuff on it&#x27;s major releases too right?<p>It&#x27;s actually kind of ironic and funny you&#x27;d bring up XNA 4, because it REALLY broke stuff:<p><a href="https:&#x2F;&#x2F;www.shawnhargreaves.com&#x2F;blog&#x2F;breaking-changes-in-xna-game-studio-4-0.html" rel="nofollow">https:&#x2F;&#x2F;www.shawnhargreaves.com&#x2F;blog&#x2F;breaking-changes-in-xna...</a><p>Literally the words of a Microsoft dev lead at the time:<p>&gt; I was relieved when the comments on my earlier post about backward compatibility agreed with the approach we chose for XNA Game Studio 4.0. Banjobeni summed up the general sentiment:<p>&gt; &quot;If you break it, break it good.&quot;<p>-<p>But also, and I mean you allude to this right there in the first sentence, it doesn&#x27;t have half the surface area Unity has, it&#x27;d be like pointing out SDL&#x27;s API staying stable?<p>Even if you look at something that isn&#x27;t Monogame I&#x27;m sure you&#x27;ll find some frameworks that have had static APIs for decades, after all, if your layer of abstraction is high enough while your scope is small enough, DrawPixel 0,0 is still probably going to end up drawing a pixel somewhere just like &quot;forward 50&quot; is going to &quot;move the turtle forward 50&quot;...<p>But then to that point, the basic APIs like that in Unity haven&#x27;t been completely ripped out or something, they&#x27;re still there in the same way they were.<p>I googled &quot;how to jump unity&quot; with older than 2007 and this code still works 7 years later: <a href="https:&#x2F;&#x2F;answers.unity.com&#x2F;questions&#x2F;30127&#x2F;how-can-i-make-my-character-jump.html" rel="nofollow">https:&#x2F;&#x2F;answers.unity.com&#x2F;questions&#x2F;30127&#x2F;how-can-i-make-my-...</a><p>Sure Unity added a new Input system, but they don&#x27;t force it on you, it&#x27;s not even enabled in new projects by default (probably so you can cut and paste 13 year old code and have it work)<p>Even Unityscript, the most glaring removal since Unity 1, has an official conversion tool, and deprecation wasn&#x27;t even started until heavy usage had dropped to under 4%. I actually find it a great example of how to deprecate software gracefully. They waited for usage to fall off, they had excellent reasons to drop it, and they bent over backwards to make it painless.<p>If you&#x27;re just doing basic stuff like moving CharacterControllers around and stuff decade old code still works in Unity. Most basic tutorials from back in the day still work.<p>What broke was fancy shaders that were written back when graphics models we use today weren&#x27;t even an academic concern... and like you pointed out, that&#x27;s stuff that breaks as time moves on because it&#x27;s just not high-level enough to be easy to have work in a backwards compatible manner')