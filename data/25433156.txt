Item(by='Technically', descendants=None, kids=None, score=None, time=1608056444, title=None, item_type='comment', url=None, parent=25432655, text='&gt; GraphQL is too prone to N+1s and other inefficiencies because its in direct opposition of the way data is stored.<p>A GraphQL server stack makes a lot more sense when you structure the data around the queries you want to make. This often isn&#x27;t realistic when converting an existing relational model. There&#x27;s an inherent tradeoff with the backend you use between SQL-like querying and GraphQL-like querying—they&#x27;re built around different use cases. I&#x27;d recommend approaching GraphQL data modeling around the indexes used to support the queries you want to use—you can then bound (and, if you want, restrict) the resulting number of backend queries based on the input query, not the backing data.<p>However, this would represent large shift from using an ORM dedicated to SQL access for many developers.')