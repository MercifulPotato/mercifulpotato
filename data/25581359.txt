Item(by='leni536', descendants=None, kids=[25581438], score=None, time=1609333985, title=None, item_type='comment', url=None, parent=25576466, text='The performance of sort being exactly the same as the C++ implementation looked a bit suspicious to me at first. Notable that in the C++ performance test a function pointer is passed to std::sort in a similar way how the C library is used [1].<p>This is probably a good way to check that the C library doesn&#x27;t do worse in this case, but it&#x27;s notable that C++ has potentially faster ways to do the sorting:<p>1. Pass a function object (even a lambda that just wraps &quot;compare&quot;)<p>2. Don&#x27;t pass a comparison at all for the &quot;vector&lt;int&gt;&quot; case, as the default works there.<p>Both of these methods have better chances for inlining the comparison within the sort implementation. For the function pointer case it would require constant propagation and possibly &quot;cloning&quot; to do the same, which is less likely for a complicated algorithm like sort.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;glouw&#x2F;ctl&#x2F;blob&#x2F;09f5e0a89d3fc621aff94290c4a3565ce53fd685&#x2F;tests&#x2F;perf&#x2F;vec&#x2F;perf_vector_sort.cc#L20" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;glouw&#x2F;ctl&#x2F;blob&#x2F;09f5e0a89d3fc621aff94290c4...</a><p>edit: I wonder how ctl&#x27;s vector sort compares to qsort, I expect it to be faster.')