Item(by='sillysaurusx', descendants=None, kids=[25331469], score=None, time=1607329426, title=None, item_type='comment', url=None, parent=25327533, text='Hello, I made some ML generated videogame music: <a href="https:&#x2F;&#x2F;soundcloud.com&#x2F;theshawwn&#x2F;sets&#x2F;ai-generated-videogame-music" rel="nofollow">https:&#x2F;&#x2F;soundcloud.com&#x2F;theshawwn&#x2F;sets&#x2F;ai-generated-videogame...</a><p>There are ballroom themes, battle themes, boss fights, and the last one is my attempt at a final battle track. If there&#x27;s interest, I can walk through how the model works. Gwern&#x27;s writeup is here: <a href="https:&#x2F;&#x2F;www.gwern.net&#x2F;GPT-2-music" rel="nofollow">https:&#x2F;&#x2F;www.gwern.net&#x2F;GPT-2-music</a><p>All 25 tracks were made in a single night. That&#x27;s the kind of boost you can get from ML.<p>Note that it&#x27;s not entirely automatic. But that&#x27;s a benefit, not a downside. It&#x27;s more like an AI instrument that you play.<p>The songs each contain the ABC source code that generated it. (Click on the song&#x27;s description to see.) You can replicate the song for yourself by copying the source code into a text file, then running something like this:<p><pre><code>  abc2midi &quot;${1}.abc&quot; -o &quot;${1}.mid&quot; &amp;&amp; timidity &quot;${1}.mid&quot; -Ov -o &quot;${1}.ogg&quot; &amp;&amp; timidity &quot;${1}.mid&quot;\n</code></pre>\n(That&#x27;s from my bash script called &quot;abc2ogg&quot;.)<p>An effective model will &quot;group&quot; its data in a way that the model can understand. That&#x27;s the essence of why this model worked so well.')