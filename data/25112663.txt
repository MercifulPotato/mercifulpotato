Item(by='Benjammer', descendants=None, kids=None, score=None, time=1605539765, title=None, item_type='comment', url=None, parent=25111765, text='Thanks for this, I&#x27;m going to use the sports analogy in the (near) future the next time I discuss this with anyone.<p>It&#x27;s all politics. Estimation is a purely political game by EMs&#x2F;TPMs&#x2F;PMs to try and shirk responsibility for engineering outcomes.<p>Here&#x27;s another neat tack to try in this conversation. Ask for individual examples of &quot;good estimators,&quot; and ask for details about what makes them good estimators. You&#x27;ll rarely (if ever) hear that someone was so accurate that it materially impacted a project in a positive way. What would that even look like? &quot;I was sooo accurate that the client success people were able to say that our new product would be ready 6 months ago, and now didn&#x27;t have to send a follow up email to update the timeline!!!&quot; The only answers I&#x27;ve gotten are that people who are good at estimating are the ones where nobody ever really has to look at their schedule and there is no drama because they are always getting things done. This is highly contextual and rarely has to do with that person&#x27;s individual estimating skill. It has to do with their project, team, EM, PM, experience relative to teammates, etc. Recently I was given an example of a client-side developer who is far more experienced than the back-end guy building his API, so he&#x27;s always just sitting around waiting for the API to be finished to build his features. He almost always does 3&#x2F;4 of his tasks ahead of time and then just waits for the API to be done and puts his ticket in as completed at that point. So he&#x27;s not really estimating at all, and he&#x27;s not accurate, it&#x27;s just that the project is bottle-necked on the back-end dev speed regardless, so nobody ever cares about his estimates.<p>It all just seems so wishy-washy and bullshit. It&#x27;s just about pushing people to work hard and get more done (&quot;you need to hit your estimates, think of them like commitments!&quot;). Framing this all as somehow single-handedly the engineer&#x27;s problem is just a sign of someone who doesn&#x27;t know how to operate a software development team effectively. Estimation is a team effort in scheduling, delegation, planning, and communication.<p>Why in the world (if not politics) would anyone invent a concept where it punishes someone who over-achieves and chooses to work harder for a short period of time? (&quot;you should try to be more accurate about estimates, even if you have to slow down your work, and over working like this leads straight to burn out, be careful!) It&#x27;s all just nonsense invented by MBAs who have no actual experience in anything except inane &quot;policy&quot; and &quot;oversight.&quot;<p>Software project estimation is a real thing, but it has nothing to do with one person&#x27;s ability to predict the future. It&#x27;s an analytical data methodology far more than an individual, experiential skill.')