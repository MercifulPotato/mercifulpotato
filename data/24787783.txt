Item(by='AnIdiotOnTheNet', descendants=None, kids=[24788197, 24788898, 24790016, 24787825], score=None, time=1602764300, title=None, item_type='comment', url=None, parent=24783387, text='Honestly I think a lot of ideas about where to go with Desktop OSs these days are just complexity fetishist slashfiction. I don&#x27;t think we need new complicated paradigms, instead we should take a look at our history of what worked and what didn&#x27;t and build based a simple combination of good ideas we already have.<p>My opinion, short version, hastily written, and incomplete:<p>1) Applications are self-contained objects that can be simply copied and deleted instead of installed and uninstalled. They should run from any location on any media. AppImage implements this in Linux and modern Mac application bundles are already this, but the concept goes back to almost the beginning of desktop computers.<p>2) Spacial file manager (MacOS), drag and drop saving (RiscOS), desktop and quick-launch menus are just views of a folder structures (Windows).<p>3) All applications in their own namespace and they only get access to what the user configures for them (do <i>not</i> do &quot;allow&#x2F;deny&quot; popups!).<p>4) Everything scriptable and something like AutoHotKey built into the OS at a fundamental level.<p>5) Switchable &quot;user profiles&quot; instead of &quot;user accounts&quot;, which are an artifact of giant shared computer systems. User profile just contains personalized settings and can be located anywhere, including removable media so you can take yours to other computers. If you want to keep things safe from others, encrypt them. Otherwise there are no permissions except those applied to applications themselves.<p>6) Sound <i>and video</i> should be routable like you see in DAWs. Plug outputs into inputs, add filters, split, mix, etc. This is of course scriptable so you can make it do what you want on arbitrary events.<p>7) Backwards compatibility should be a high priority, but accomplished via shim layers and&#x2F;or emulation and&#x2F;or vms when clean breaks are necessary. A wide array of such should be included with the OS from the beginning. In 2020, there is no excuse for not being able to run old software.')