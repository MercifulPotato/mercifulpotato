Item(by='AnimalMuppet', descendants=None, kids=[24829687], score=None, time=1603132551, title=None, item_type='comment', url=None, parent=24828973, text='Very, very wrong.<p>&gt; In fact the very phenomenon of Technical debt arises from logic that&#x27;s hard to uncouple.<p>No, <i>one</i> kind of technical debt arises that way.  Not the only kind.  There&#x27;s another kind that arises when everything is in such small pieces that nobody can tell how the pieces relate to each other.  You can easily understand each piece, but you have to go through a chain of a bazillion function calls to see what&#x27;s actually going on.<p>&gt; By having every sector of your program be a lego brick you are preparing your program for an inevitable future where the structure must be reconfigured.<p>This is like economists, who have correctly predicted nine of the last two recessions.  Sure, you&#x27;re prepared for when the change comes (if you can find where to make it - see above).  You&#x27;ve also prepared for all the changes that <i>never</i> come.  That&#x27;s rather wasteful.<p>&gt; Because you cannot predict the future of your program. Coupled logic that seems correct now may need to be uncoupled in the future.<p>Sure, it may.  And when that happens, we&#x27;ll decouple it.  And in the meantime, we&#x27;ll enjoy the coupling that, at the moment, is the correct thing.<p>See, this is all in the context of SOLID, the very first piece of which is &quot;Single Responsibility&quot;.  We don&#x27;t couple things on a whim.')