Item(by='drbawb', descendants=None, kids=[24848222, 24848244], score=None, time=1603288685, title=None, item_type='comment', url=None, parent=24845300, text='The last bit of the article reminds me of an experience I had recently working w&#x2F; another group of developers. They write in C# w&#x2F; Entity Framework, but they just use it to map stored procedures to C# data-types. All queries to their database go through a stored procedure w&#x2F;o exception.<p>They push as much of the business logic as possible to the database. Their reasoning being that if the client insists on a separation between the DB &amp; application servers: you should do as much computation as close to the data as possible. Then just send the end result over the wire.<p>Due to my own ORM-induced brain damage I found it hard to wrap my head around this at first: a data type in the application no longer represented a table, but the result of a query. Once you realize the database is just another API though it clicks really nicely into your architecture.<p>I think I still prefer things like Linq, jOOq, Arel, Ecto, etc. where you can write the query in your programming language and have it translated to SQL. It&#x27;s just nice to see your query right next to the code when debugging. The author is absolutely right though you still have to <i>know SQL</i> to use tools like that effectively, so you might as well just learn it early instead of wasting effort learning the quirks of a specific ORM.')