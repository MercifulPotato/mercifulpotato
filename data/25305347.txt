Item(by='smt1', descendants=None, kids=None, score=None, time=1607103790, title=None, item_type='comment', url=None, parent=25303824, text='It&#x27;s too bad JVM happened. Solaris was innovative before Java, which became monetized primarily by the fees.  They released Self, SmallTalk, and Squeak before that. I think the latter is still very innovative today, because of it&#x27;s Morphic interface (it&#x27;s category theoretic). I think you could teach kids the computational equivalent of pretty high level mathematical physics, which is pretty interesting relative to other standard CS101 intros (like python, etc). TeleScript, which was basically inverse JVM was also made around this time, it would have been interesting if the Newton hadn&#x27;t been discontinued:<p><a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Telescript_(programming_language)" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Telescript_(programming_langua...</a><p>These days, ironically, Telescript is a model for how distributed computation works in the 3rd world, and even in the first world. But Telescript basically would have made the lattice structures more hybridizable to project information and jobs within the context of already existent social networks and maybe provided a better nexus for useful work done vs power given up (it was made on a very astute observation about the energy, work, power, time, information, transmission nexus) before anyone named a &quot;peer to peer network&quot;, a distributed consensus protocol, or introduced money into the picture.')