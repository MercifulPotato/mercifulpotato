Item(by='rjknight', descendants=None, kids=None, score=None, time=1607357422, title=None, item_type='comment', url=None, parent=25333090, text='&gt; HTML&#x2F;CSS was supposed to separate content from looks. Of course that ship has sailed long ago, since modern day development seems to be insistent and mushing HTML, CSS and JS together in the same file.<p>As a developer, what incentive do I have to scrupulously maintain the separation between content and appearance? Users do not appear to demand it, and customers or employers will not demand it either - they might care if the users hassled them about it, but this does not happen.<p>&gt; HTML&#x2F;CSS was also supposed to be re-usable. Now instead the re-usability is within react&#x2F;angular&#x2F;etc. components, so you now have to use react and javascript everywhere you want to show similar elements - if you want to have the ability to easily change them later.<p>If HTML&#x2F;CSS was supposed to be re-usable, then it might have been a good idea to have designed those languages to support the kinds of re-use that are actually needed. One of the useful features of Tailwind, for instance, is that it becomes possible to copy HTML from one page to another while preserving consistent appearance, because all of the information necessary to display the element is contained within the class names. With most CSS, this is not the case: styles will depend on complex selectors, such that an element may appear completely differently depending on its ancestor elements.<p>The brittleness of CSS leads to various hacks and abstractions, and it is these hacks and abstractions that make re-use difficult. In reality, CSS depends on the structure of the HTML to work properly, and HTML has to be structured to suit the needs of CSS. This makes it hard to write general-purpose CSS that can effectively re-skin a HTML page, and to write HTML that is easy to lay out in the desired manner with pure CSS. It just doesn&#x27;t work well enough to make the dream of decoupled content&#x2F;styling workable in enough cases.')