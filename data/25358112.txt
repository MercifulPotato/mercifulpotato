Item(by='IshKebab', descendants=None, kids=None, score=None, time=1607519657, title=None, item_type='comment', url=None, parent=25353453, text='The core idea is kind of ok. But they screwed it up in a few ways:<p>1. Using Javascript. It&#x27;s not a good language, especially without Typescript. And it&#x27;s type system doesn&#x27;t match C++&#x27;s well at all. For example you can&#x27;t really pass uint64s to QML very easily. Apparently Javascript will be optional in 6.1.<p>2. The scene graph. A good idea but I&#x27;m pretty sure there&#x27;s <i>still</i> no way to make custom QML widgets that contain text because there&#x27;s still no public QSGTextNode (at least last time I looked into it). Here&#x27;s people trying to do it in 2013: <a href="https:&#x2F;&#x2F;forum.qt.io&#x2F;topic&#x2F;24179&#x2F;how-to-draw-text-in-qquickitem" rel="nofollow">https:&#x2F;&#x2F;forum.qt.io&#x2F;topic&#x2F;24179&#x2F;how-to-draw-text-in-qquickit...</a><p>I think they&#x27;ve pretty much given up on letting users make custom QML widgets - instead you have to use QPainter and it copies the resulting image across, which seems like a step backwards.<p>3. The encapsulation is really bad. I honestly never figured out the rules around widget ID scope because it seems like they are all in a global scope so all widgets can refer to any other widget (e.g. children can depend on their parents) which encourages spaghetti. Not sure if they&#x27;re fixing this.<p>4. It&#x27;s really hard to do transient widgets like dialogs. This is kind of the same as in React but it still seems like a step backwards from QtWidgets.<p>5. Lots of the QtQuick widgets are really lacking features compared to QtWidgets. It&#x27;s like they got to the MVP and then gave up.<p>I haven&#x27;t tried it for a number of years so some of those thing may have improved but I haven&#x27;t heard about it. I get the impression that 90% of their income comes from car manufacturers using Qt for their software, which is why there is such a focus on fancy 3D UIs.')