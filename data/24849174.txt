Item(by='TeMPOraL', descendants=None, kids=[24850485], score=None, time=1603296600, title=None, item_type='comment', url=None, parent=24848169, text='I&#x27;ve been thinking about this a bit before seeing this discussion, and I&#x27;m starting to feel that abstracting at database level makes sense, because it turns your RDBMS from being just a dumb SQL execution engine into an application-specific API.<p>If you consider restricting operations on your data close to the storage layer, you can imagine wrapping DB access with an app exposing business-specific API, and route all your actual code through that API. Doesn&#x27;t seem like an unreasonable design to me - particularly, if the same database is used by multiple applications. But if you do that, it may make sense to just put the API inside the RDBMS - giving you one networked software component less to manage.<p>(I&#x27;ve done work on a project using lots of stored procedures only once, and my tasks were unrelated - so I have no practical experience here. But through this discussion, I think I&#x27;m starting to understand why enterprise projects are anecdotally so in love with stored procedures.)')