Item(by='jstrong', descendants=None, kids=None, score=None, time=1610053890, title=None, item_type='comment', url=None, parent=25674950, text='this looks pretty promising. what I am most excited about is the way that the syntax minimizes repetition.<p>from the examples[1], this is pandas:<p><pre><code>    tips[(tips[&#x27;size&#x27;] &gt;= 5) | (tips[&#x27;total_bill&#x27;] &gt; 45)]\n</code></pre>\nthis is preql:<p><pre><code>    tips[size &gt;= 5 or total_bill &gt; 45]\n</code></pre>\nrepeating the names over and over again like in the pandas example (would also be true in sql, probably moreso) drives me nuts. I&#x27;ve honestly dreamed of a nice query syntax that cuts that down.<p>in contrast, influxdb recently released v2.0 with a new query language, flux. this is the top example in the docs:<p><pre><code>    from(bucket:&quot;telegraf&#x2F;autogen&quot;)\n      |&gt; range(start:-1h)\n      |&gt; filter(fn:(r) =&gt;\n        r._measurement == &quot;cpu&quot; and\n        r.cpu == &quot;cpu-total&quot;\n      )\n      |&gt; aggregateWindow(every: 1m, fn: mean)\n</code></pre>\nso much needless typing!! `r._measurement`? `from(bucket:&quot;table_name&quot;)` is considerably worse than `select .. from table_name`, which isn&#x27;t great.<p>this code is write once code for exploring data, and my brain is constantly ahead of my fingers. thank you preql, will give this a close look.<p>[1] <a href="https:&#x2F;&#x2F;preql.readthedocs.io&#x2F;en&#x2F;latest&#x2F;comparison.html" rel="nofollow">https:&#x2F;&#x2F;preql.readthedocs.io&#x2F;en&#x2F;latest&#x2F;comparison.html</a>')