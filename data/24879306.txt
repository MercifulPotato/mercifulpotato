Item(by='IggleSniggle', descendants=None, kids=None, score=None, time=1603548481, title=None, item_type='comment', url=None, parent=24878934, text='`open |myProgram` returns a file-descriptor for a pipe (that you can explicitly open for read, write, or read&#x2F;write), and `exec ls |grep {myPattern}` will pipe the output of ls into grep...okay nevermind I do see your point.<p><pre><code>    p1 | p2 | p3 &gt; file\n</code></pre>\nis certainly nicer for interactive use, although I would argue that a hand-rolled pipe operator to give you the same in tcl comes with some pleasant fp benefits, and it’s only a few lines to define it to get the above, or supply alternative syntax like<p>| {p1} {p2} {p3} {[open file w]}<p>or if you want to also define the redirect,<p>| {p1} {p2} {p3} {&gt; file}<p>where each portion of the pipe can be much more clearly manipulated in-stream, and with whatever interpreter, before returning the pipeable.<p>This gets especially nice for gluing when you want to run scripts in multiple interpreters but they are short and you want to maintain the context for readability between multiple execution contexts:<p><pre><code>    | {node -e {\n        console.log(“start”)\n      }}\n      {DSL1 {\n        MyDSLScriptHere\n      }}\n      {grep {whatever}}\n      {&gt; file}\n</code></pre>\nSometimes the extra context hurts readability, but sometimes it’s invaluable.')