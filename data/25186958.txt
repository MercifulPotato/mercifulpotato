Item(by='spijdar', descendants=None, kids=None, score=None, time=1606141089, title=None, item_type='comment', url=None, parent=25186534, text='Actually, they might not be able to.<p>Everything comes with a cost when you&#x27;re working in silicon. You can add more cores, yes, but to do so, you either must make each core smaller, or increase the maximum distance between two cores.<p>This is important, because the longer the distance, the harder it is to maintain e.g. cache coherency between all cores. There&#x27;s a physical limit to the speed electrons travel, and you have to account for that.<p>Intel&#x27;s designs rely on pretty teeny cores with small L1{I,D} caches and small private L2 caches on a ring bus topology, with the iGPU on one polar end, and the system agent&#x2F;memory controllers on the other ends. [0] [1]<p>Zen takes a slightly different approach, using individual ICs with four cores on a single IC complex, sharing a single, relatively slow L3 cache, with small private L2 caches per core. The &quot;chip complexes&quot; are contained on a carrier chip which takes care of PCIe and the memory controller, similar to Intel&#x27;s system agent, but farther from every core. [2] [3]<p>Apple has instead opted for all the cores to, instead, share a single large L2 cache, with enormous L1 caches. Both the GPU and CPU appear to have point-to-point connections to the memory controller and to the other peripherals.<p>Because they use 1) large caches and 2) squash everything together, they&#x27;ve managed to achieve ridiculously high memory bandwidth with teeny L1 latency.<p>For example, while Intel&#x27;s latest uarch requires 5 CPU cycles to read L1D cache, M1 can do so in 3 cycles. Zen requires either 4 or 5 cycles.<p>There&#x27;s no free lunch here, and I doubt they could maintain this same architecture while adding many more cores. They&#x27;re missing the interconnects and necessary silicon to do so, and adding it would add latency and&#x2F;or shrink existing caches. The design seems to be predicated on being small with minimal distance between components.<p>Caveat emptor, I&#x27;m not an engineer, this is all idle speculation.<p>[0] <a href="https:&#x2F;&#x2F;en.wikichip.org&#x2F;w&#x2F;images&#x2F;thumb&#x2F;c&#x2F;cf&#x2F;coffee_lake_overview.svg&#x2F;1000px-coffee_lake_overview.svg.png" rel="nofollow">https:&#x2F;&#x2F;en.wikichip.org&#x2F;w&#x2F;images&#x2F;thumb&#x2F;c&#x2F;cf&#x2F;coffee_lake_over...</a><p>[1] <a href="https:&#x2F;&#x2F;en.wikichip.org&#x2F;w&#x2F;images&#x2F;5&#x2F;53&#x2F;coffee_lake_die_%28octa_core%29_%28annotated%29.png" rel="nofollow">https:&#x2F;&#x2F;en.wikichip.org&#x2F;w&#x2F;images&#x2F;5&#x2F;53&#x2F;coffee_lake_die_%28oct...</a><p>[2] <a href="https:&#x2F;&#x2F;en.wikichip.org&#x2F;w&#x2F;images&#x2F;a&#x2F;a7&#x2F;amd_zen_ccx_2_%28annotated%29.png" rel="nofollow">https:&#x2F;&#x2F;en.wikichip.org&#x2F;w&#x2F;images&#x2F;a&#x2F;a7&#x2F;amd_zen_ccx_2_%28annot...</a><p>[3] <a href="https:&#x2F;&#x2F;en.wikichip.org&#x2F;w&#x2F;images&#x2F;7&#x2F;75&#x2F;amd_zen_octa-core_die_shot_%28annotated%29.png" rel="nofollow">https:&#x2F;&#x2F;en.wikichip.org&#x2F;w&#x2F;images&#x2F;7&#x2F;75&#x2F;amd_zen_octa-core_die_...</a>')