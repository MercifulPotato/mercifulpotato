Item(by='cipherboy', descendants=None, kids=None, score=None, time=1603251726, title=None, item_type='comment', url=None, parent=24844444, text='&gt; Citation needed. I&#x27;ve seen people claiming this for years, and I&#x27;ve yet to see a single case where handwritten assembler actually did better than spending the same amount of effort on speeding up the compiled program (e.g. taking 5 minutes to actually set the right target architecture).<p>Take some time looking at established open source projects where IBM has heavily invested in optimizing for the POWER architecture. I&#x27;m thinking things like glibc, gmp, Golang, openssl, ... The results they get from their hand rolled assembly far exceeds what gcc&#x2F;llvm spit out. (At least, it did 2-3 years ago.)<p>Back when the Linux Technology Center (LTC) was a thing, I was fortunate enough to meet many of the individuals working on these projects. They are all wizards. Brilliant.<p>One of them retired recently and went on to start pveclib to make some of these optimizations in number crunching more accessible to others: <a href="https:&#x2F;&#x2F;github.com&#x2F;open-power-sdk&#x2F;pveclib" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;open-power-sdk&#x2F;pveclib</a><p>I was once in his office asking about assembly instructions for SHA-3 (a project that sadly didn&#x27;t go very far) and he could quote useful scalar&#x2F;vector instructions to me and their timing&#x2F;latency stats faster than I could find them in the manual.')