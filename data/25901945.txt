Item(by='bko', descendants=None, kids=None, score=None, time=1611573412, title=None, item_type='comment', url=None, parent=25899490, text='Software in cars is not &quot;a new thing&quot;. Safety has increased immeasurably in cars over the last few decades, in no small part due to software. Complexity and opacity are a problem, but cars are much safer and more efficient today due in large part to software. I don&#x27;t think that would have happened if there was some regulatory committee in place to audit the software for safety. We have liability for that, a much better model than a regulatory one.<p>&gt; However, as the importance of electronics and software has grown, so has complexity. Take the exploding number of software lines of code (SLOC) contained in modern cars as an example. In 2010, some vehicles had about ten million SLOC; by 2016, this expanded by a factor of 15, to roughly 150 million lines. Snowballing complexity is causing significant software-related quality issues, as evidenced by millions of recent vehicle recalls.<p><a href="https:&#x2F;&#x2F;www.mckinsey.com&#x2F;industries&#x2F;automotive-and-assembly&#x2F;our-insights&#x2F;rethinking-car-software-and-electronics-architecture" rel="nofollow">https:&#x2F;&#x2F;www.mckinsey.com&#x2F;industries&#x2F;automotive-and-assembly&#x2F;...</a>')