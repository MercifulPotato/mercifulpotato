Item(by='mikhailfranco', descendants=None, kids=[25187485], score=None, time=1606095822, title=None, item_type='comment', url=None, parent=25181295, text='The stateful receive (2) just means that an Erlang process should be modelled as a state machine with some variety of automaton. Each receive blocks on a finite ordered sequence of (possibly overlapping) pattern-matching expressions. The priority sequence means it behaves more like a PEG than an NDA or DFA.<p>Writing down the PEG <i>message grammar</i> for the process becomes quite easy. Pattern matching is well-defined. The number of states may be large, but can often be factored nicely by data types and ranges (e.g. tagged tuples). However, PEG semantics make it difficult to analyze composition of receive statements in the general case.<p>It&#x27;s easy to <i>solve</i> the Halting Problem in Erlang - just add a timeout to your receive and accept some false positives :)')