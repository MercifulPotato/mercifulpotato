Item(by='dragontamer', descendants=None, kids=[24775057], score=None, time=1602639717, title=None, item_type='comment', url=None, parent=24771504, text='I&#x27;m just making this up as I go, but I&#x27;m only seeing 1x pointer dereference in the hot-loop (the &quot;if-side&quot; of the following if statement. The &quot;else-side&quot; is more complex, but not really bad)<p><pre><code>    if(this-&gt;size &gt;= 0){\n      return lastLinkedSlab[this-&gt;size--];\n    } else {\n      auto old = lastLinkedSlab;\n      lastLinkedSlab =  lastLinkedSlab-&gt;next;\n      delete old;\n      if(lastLinkedSlab == nullptr){\n          lastLinkedSlab = new LinkedSlab();\n      }\n      this-&gt;size = 16384 - 1;\n      return lastLinkedSlab-&gt;heap[this-&gt;size--];\n    }\n</code></pre>\nOr something like that. I&#x27;m not really seeing how this scheme incurs many indirect pointer references.<p>&gt; And yes, of course you would allocate your nodes from a linear contiguous (but possibly chunked) fix size bump allocator first.<p>Hmm, that&#x27;s probably a bit more efficient, but probably not a big deal because its a &quot;once ever&quot; optimization. You usually want an optimization to loop over itself a few times...')