Item(by='jl2718', descendants=None, kids=None, score=None, time=1607441338, title=None, item_type='comment', url=None, parent=25329108, text='I’m trying to understand the DevOps of this concept. Is everybody working in the same repo, or are these personal forks that get hammered until nice merged PRs can be submitted? Do devs complete whole features before submitting, or do they submit partial work that everybody else is trying to contribute to? Are multiple developers working on the same code modules, or have they been split out? Are there tests and interfaces written ahead of time, or do they do tasking by prose?<p>The goal of software management is to keep everybody productive. If you have an imbalance in commits or pull requests in the main repo&#x2F;branch, that’s a strong sign of a broken process. Tasks should be given according to familiarity and skill so this doesn’t happen.<p>This also says something about software design. Good design is easy to split up. Bad design requires a ‘go to’ person. Therefore, a ‘go to’ person is by definition not a good software engineer, because their design was bad, and&#x2F;or they never fixed it. And if it worked the first time, you wouldn’t have to ‘go to’ anybody.<p>The skill ladder of software engineering goes something like: watching, practicing, contributing, designing, teaching, leading. Every developer goes through this process from scratch in every project. Getting stuck is a problem (as is skipping steps). Preventing other people from progressing is a bigger problem.<p>Perhaps rethink this.')