Item(by='nullc', descendants=None, kids=None, score=None, time=1603120289, title=None, item_type='comment', url=None, parent=24826704, text='Noise is spread out over frequency, you see under the noise floor by using signal-locked narrow filtering that rejects almost everything except the signal in question.  All of the target signal is admitted by your filter, but only a tiny amount of the noise is,  so your signal is no longer under the noise.<p>If that isn&#x27;t much, run slower and coherently combine more data. White noise power with averaging will fall with the reciprocal square root, while your coherent signal power will add linearly-- eventually you overcome the noise assuming your transmitter&#x2F;receiver oscillators are locked well enough to sum coherently.<p>If the noise is not white, e.g. if there are tones in it-- these steps work less well.<p>Now consider how direct sequence spread spectrum works:<p>I take a slow signal-- like a 50 bit per second 100Hz wide BPSK signal-- and spread it out by xoring it with a fast random sequence (say a 1MHz random sequences).<p>The result looks like noise. But if you xor it again you get the original signal back.<p>When you transmit it, the receiver gets a sum of your signal  and noise sources. We can analyize each separately: If you xor white noise with your random sequence -- nothing much happens: you end up with white noise with the same power. So when the receiver xors the received signal with the random sequence, as mentioned nothing much happens to white noise. But any tonal noise gets converted into white noise (because it is independent of the random sequence), and your transmitted signal is recovered and ready for reception using a narrow locked filter.<p>Modern digital communication almost always uses error correcting codes which allow perfect reception even when some bits are corrupted (early space probes were among the first applications of powerful error correcting codes).')