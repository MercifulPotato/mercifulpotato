Item(by='gopalv', descendants=None, kids=None, score=None, time=1607455617, title=None, item_type='comment', url=None, parent=25348584, text='&gt; Accumulating more stored data doesnâ€™t make it slower<p>That is a valid theory when we talk about readers which look at recent data or when you are trying to append data to the existing system.<p>But in practice, the accumulation of cold data on a local disk is where this starts to hurt, particularly if that has to serve read traffic which starts from the beginning of time (i.e your queries don&#x27;t start with a timestamp range).<p>KSQL transforms does help reduce the depth of the traversal, by building flatter versions of the data set, but you need to repartition the same data on every lookup key you want - so if you had a video game log trace, you&#x27;d need multiple materializations for (user) , (user,game), (game) etc.<p>And on this local storage part, EBS is expensive to just hold cold data, but then replicate it to maintain availability during a node recovery - EBS is like a 1.5x redundant store, better than a single node. I liked the Druid segment model of shoving it off to S3 and still being to read off it (i.e not just stream to S3 as a dumping ground).<p>When Pravega came out, I liked it a lot for the same - but it hasn&#x27;t gained enough traction.')