Item(by='buybackoff', descendants=None, kids=[25987808], score=None, time=1612176747, title=None, item_type='comment', url=None, parent=25987119, text='F# generates weird, verbose, opinionated IL code that is often JIT-unfriendly and rather focused on reference types. JIT is tailored to C# patterns and JIT is rather simple in .NET (e.g. vs JVM), so it&#x27;s easy to break or miss some optimizations.<p>Yes, it&#x27;s not a fundamental limitation of the language itself. But considering the amount of hypothetical efforts required to fix all that vs investments from MSFT in F#, it is fundamental. F# lags by several years behind JIT and TPL improvements, the issues are mostly known. But it feels like it&#x27;s not that important for F#. It&#x27;s is not for writing fast libraries, but for Python-like use cases, explorative programming, or writing code fast when performance is not important (no hot loops in F# code) but strict typing discipline makes code less buggy and more maintainable from the first attempt. They used to say that &quot;if F# code compiles, it&#x27;s probably correct&quot; - that is close to the truth, but do not expect top performance without fighting with the F# compiler. Even one of the best known and oldest F# library FParsec has it&#x27;s high-performance parts in C# - that&#x27;s telling.')