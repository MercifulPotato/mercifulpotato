Item(by='jerf', descendants=None, kids=[25497121, 25503889], score=None, time=1608564270, title=None, item_type='comment', url=None, parent=25491440, text='&quot;If I remember correctly some fundamental aspects of fuzzy-set theory are still unproven and possibly shown undecidable.&quot;<p>If I remember correctly, and I may not, fuzzy logic fell out of mathematical interest when it was proved all fuzzy logic statements can be converted into conventional logic statements without loss, by adding some additional terms representing various ranges of values, e.g., if we have a sensor $T that senses the temperature in a range from 0.0 - 1.0, the fuzzy statement<p><pre><code>     if $T &gt; .6 then TurnOffBurner else TurnOnBurner\n</code></pre>\ncan be converted to the conventional-logic statements<p><pre><code>     $TAbove0.6 -&gt; TurnOffBurner\n     $TBelow0.6 -&gt; TurnOnBurner\n</code></pre>\nWith the obvious mapping of what the two values on the left are.<p>Proving that the entire logic can be so converted is less trivial as the statements interact but IIRC it was done.<p>The whole hype of fuzzy logic is, well, how it was presented in this article, that it could somehow deal with the real world better than conventional logic. The proof that there was nothing it could say that conventional logic couldn&#x27;t ended that conclusively.<p>However, it can still be a useful &quot;programming API&quot;, for obvious reasons. But then, you don&#x27;t really need a specialized &quot;fuzzy logic&quot; necessarily, for a lot of tasks, a big set of if statements based on non-boolean values (which, you know, are easy to come by in programming languages) does the same job. While expressing it directly in fuzzy logic might open up some mathematical analysis possibilities, expressing it in conventional programming languages opens up a lot of software engineering possibilities, so <i>shrug</i>. This is just another expression of the decades-long and ongoing arguments about how mathematical programming really is.')