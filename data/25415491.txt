Item(by='usrusr', descendants=None, kids=None, score=None, time=1607942232, title=None, item_type='comment', url=None, parent=25415139, text='&gt; Use &lt;T&gt; even if you only use it with strings, the extra cost while creating the class is almost nothing, but the cost of a future refactorization will surely be greater.<p>Allow me to question the &quot;almost&quot; in &quot;almost nothing&quot;. Java generics are famously unreified, at runtime it&#x27;s exactly the same.<p>I have noticed this habit of what could be called redundant genericity in my own code as well. Sometimes the motivation seems to be hardly more than a coping strategy for the notoriously verbose class names of idiomatic java. But it can also provide self-describing value: at the use site, Bag&lt;String&gt; reads better than BagOfStrings and on the implemention side, class Bag&lt;S&gt; makes it clear that nothing in there will look at e.g. individual characters. Obviously, if you do need to consider individual characters, go with BagOfStrings - or go with class Bag&lt;S extends CharSequence&gt;, which would notify the reader right in the headline that somewhere in the implementing it requires access to the actual text nature of its data.<p>As a bonus, even if production code only ever fills the angulars with one specific type, chances are that it&#x27;s a type that is painful in a unit test. If you do esoteric set operations on WhateverFactoryFactories or something like that it&#x27;s super-convenient if you can just play them through with strings.')