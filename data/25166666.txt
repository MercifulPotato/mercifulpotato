Item(by='muyuu', descendants=None, kids=None, score=None, time=1605917233, title=None, item_type='comment', url=None, parent=25164451, text='I apologise in advance for the wall of text.<p>One of the problems is that experience is highly dependent on hardware choice and&#x2F;or distro&#x2F;software choice in rather unpredictable ways.<p>Generally I agree with grandparent: Linux for the desktop is a lot more reliable than for the laptop. The kind of stuff that needs to work on a desktop&#x2F;server has considerably more testing and polish behind. With the laptop is about as hit-and-miss as things used to be for desktop in the late 90s. A surprising amount of people just accept some stuff not working or working unreliably in their laptops (some of my mates just &quot;deal with it&quot; - for instance one has a webcam that simply isn&#x27;t supported, just got an external one - and same for the microphone; another one has trouble with external monitors not keeping config or even crashing the machine sometimes: &quot;it&#x27;s ok I don&#x27;t need to use an external monitor&quot;, eventually managed to make it work after some research - but I&#x27;d rather not have to deal with that sort of thing... etc etc).<p>Having said that, Apple is so far gone that I&#x27;m going to have to move to Linux for my next laptop (Linux is already my main choice on the desktop for a long time).<p>But the thing is, the way that computers work nowadays, the &quot;choose-your-own-OS model&quot; is broken. It&#x27;s &quot;less broken&quot; for desktop hardware because it moves so much more slowly and incrementally than they used to, especially at the interface level, but laptop hardware moves faster and mobile a lot faster. Hardware-OS combos with OEM pre-made troubleshooting and tailor-made workarounds (hardware nowadays is very buggy, but the user is sheltered from this fact mainly by kernels and drivers). This is much worse in mobile, btw, people are not expected at all to alter hardware or even connect peripherals beyond strong constraints.<p>So the situation is that you usually get a machine with something installed that has testing done on it as a combo, and &quot;it works&quot; even if the &quot;internal components&quot; (hardware, OS sub-services, etc) don&#x27;t quite work to spec. You break this link and someone has to do the patching work, which is often &quot;the community&quot;, driver&#x2F;kernel hackers, etc. But this is a lot harder than working with fixed solutions and stuff keeps breaking, and there&#x27;s when the end user comes in with some final, hopefully trivial fixes. Or, if the machine is popular enough, &quot;the community&quot; again. But few machine-Linux combos are really popular these days, especially compared to Apple laptops.<p>TL-DR; server computing is pretty solid, desktop computing is rather solid, laptop computing is a mess, mobile computing is a messy hack. The more things are &quot;integrated&quot; and not expected to be interchangeable, the more likely you are to find hiccups along the way, and the shorter hardware cycles don&#x27;t help - so it&#x27;s not a problem with Linux per se (the work behind Linux is amazing in terms of adapting to large ranges of hardware, even when hardware vendors didn&#x27;t facilitate things) but a problem with installing and troubleshooting your own OS rather than having the OEM do it with flexibility to just change their hardware to make the system work best.')