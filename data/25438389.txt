Item(by='LukeShu', descendants=None, kids=[25439714], score=None, time=1608086391, title=None, item_type='comment', url=None, parent=25438075, text='That&#x27;s even a problem with a few pieces of GNU software.  The GNU documentation on how to use the software is Free, but if you want to contribute to it, you might need to acquire some pricey and non-Free specifications.  For instance: If I wanted to work on modern C features in the C frontend in GCC, I&#x27;d probably need a copy of the ISO C18 spec, which would run me a bit over $200 (though in the case of the C standard I could instead get a late-2018 draft for free, and assume it didn&#x27;t change too much between that draft and the final version).<p>But note that this is a distinct issue from what RMS&#x27;s essay is talking about! (The confusion owing to the word &quot;free&quot; being overloaded in English.)  &quot;Free documentation,&quot; as defined in the essay, means documentation that can be copied and modified, and RMS gives this as justification for those 2 freedoms:<p><i>&gt; Redistribution (including commercial redistribution) must be permitted, so that the manual can accompany every copy of the program, on line or on paper.</i><p><i>&gt; But there is a particular reason why the freedom to modify is crucial for documentation for free software. When people exercise their right to modify the software, and add or change its features, if they are conscientious they will change the manual tooâ€”so they can provide accurate and usable documentation with the modified program. A manual which forbids programmers from being conscientious and finishing the job, or more precisely requires them to write a new manual from scratch if they change the program, does not fill our community&#x27;s needs.</i><p>The ISO and ANSI standards that the software conforms to don&#x27;t really meet either of those justifications:<p>Copy: A user of GCC doesn&#x27;t need to read the ASNI standard, the GCC manual is plenty good for explaining how to write C that GCC understands.  A user of your crypto library doesn&#x27;t need to read the FIPS standards to learn how to use your library.  The standards are useful to the developers of the software, not the users; so the standards needn&#x27;t accompany every copy of the program.<p>Modify: A lone programmer working on GCC has no business editing the standards.  Agreement between multiple parties is the entire point of the standard; it doesn&#x27;t make sense to grant permission for just anyone to make edits.  RMS is generally pretty clear there are many types of writing that he doesn&#x27;t believe you are obliged to grant permission for others to edit.<p>That said, the situation with non-gratis standards is problematic, it means that there&#x27;s a monetary moat around contribution.  But this is an entirely orthogonal problem to what&#x27;s discussed in &quot;Why Free Software needs Free Documentation&quot;.')