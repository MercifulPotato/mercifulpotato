Item(by='sjrd', descendants=None, kids=[24987478], score=None, time=1604479086, title=None, item_type='comment', url=None, parent=24987114, text='Your comment makes sense if we think of FP as being about &quot;function values&quot;. In a world where all sorts of programming languages have function values, this is not a strong enough characterization anymore (if it ever truly was).<p>Functional programming is about programming with <i>immutability first</i>. So OOFP is about immutable objects. I go even further to say it is about objects with <i>immutable interfaces</i>, but the implementations can be imperative as long as <i>encapsulation</i> hides the mutable aspects from the user of the object. This is what you see in Scala&#x27;s collections library: we use mutability inside the implementation but we expose an immutable API.<p>I gave an entire talk on that very topic at Scala Italy in 2019: <a href="https:&#x2F;&#x2F;vimeo.com&#x2F;362001027" rel="nofollow">https:&#x2F;&#x2F;vimeo.com&#x2F;362001027</a>')