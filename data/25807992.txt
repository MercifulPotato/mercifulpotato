Item(by='permille42', descendants=None, kids=None, score=None, time=1610856296, title=None, item_type='comment', url=None, parent=25807215, text='I opened the article to begin with to see if it contained some argument for why using the standard library instead of a framework makes sense.<p>It contained no explanation or reasoning to that end. It is purely what it is titled as: An explanation of how to do it with the standard library.<p>In that sense I don&#x27;t think there is anything wrong with it. It doesn&#x27;t make any claims; it simply provides the information it said it would.<p>Also, one of the main selling points of Golang is that it aims to deliver functionality with minimal additional cruft&#x2F;add ons. Many of the standard library things are this way and don&#x27;t provide the &quot;extra stuff&quot; you are desiring.<p>You mention auth, but many of the frameworks for Golang don&#x27;t even implement auth and merely provided the ability to add auth if desired.<p>Logging is a debatable topic because the &quot;standard&quot; logging method is very inadequate, and so each of the various frameworks has to just choose a random logging system to use. ( or several )<p>While some frameworks do offer the ability to restart without killing active connections &#x2F; requests, it is a more generalized issue with any service in Golang. It is also best addressed by writing your service in a scalable fashion and doing a rolling upgrade. Stop sending traffic to an instance, wait till current requests are done, then kill it. It doesn&#x27;t need to be addressed within the service itself.')