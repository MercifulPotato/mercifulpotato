Item(by='muststopmyths', descendants=None, kids=[24919562], score=None, time=1603896651, title=None, item_type='comment', url=None, parent=24901244, text='I would pick an area you are already familiar with and then look for public codebases in that field. Otherwise it can be hard to just read C++ code and figure out the organization&#x2F;abstractions.<p>To generalize:<p>- Google software like protobufs and chrome are good examples of accepted C++ practice in the general software industry. It goes a bit overboard in the C++-iness for my taste, but that&#x27;s just a personal thing.<p>- For game engines, Unreal Engine 4 is good example of pretty well-organized large C++ codebase. For size and complexity of the beast, it is not hard to read the code. Understanding the overall structure depends on how deep you are already into games.<p>- There are some games over the years that have released their source code. I consider Monolith&#x27;s games (F.E.A.R, No One Lives Forever 2) to be pretty well-organized C++ code.  They&#x27;re very out of date now, but you can apply newer C++ features to their basic structure and still come away with decent code.<p>To learn C++, I would start with your own C code and the morph it in the following ways:<p>- Use C++ objects to represent functionality boundaries and data abstractions.  You probably have a bunch of structs and functions that operate on them. Convert those to C++.<p>- Start using destructors to automatically clean up objects. Read up on RAII patterns.<p>- Use smart pointers instead of dynamically allocating&#x2F;freeing memory with malloc&#x2F;new&#x2F;free&#x2F;delete.<p>After these basics, you can branch out into exploring more in depth with templates, fancy C++17&#x2F;20 features etc.  Don&#x27;t try to use all the features and capabilities at the outset. You can end up with a codebase you won&#x27;t want to read in a year, let alone other people on your project.  \nI&#x27;ve seen massive, unreadable templated code because someone got a shiny new template hammer and banged away at every problem as a nail.')