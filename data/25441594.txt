Item(by='rendall', descendants=None, kids=None, score=None, time=1608120122, title=None, item_type='comment', url=None, parent=25428936, text='Thanks for taking the time to explain! Much appreciated.<p>&gt; <i>They use a plain android thread that runs at fixed 15ms intervals and buffers exactly one frame in advance</i><p>From the article: &quot;...buffers several seconds worth of video and audio data on the device, then delivers video and audio frames one-at-a-time to the deviceâ€™s playback hardware&quot;<p>And: &quot;under normal playback the thread copies one frame of data into the Android playback API, then tells the thread scheduler to wait 15 ms and invoke the handler again&quot;<p>And: &quot;When you create an Android thread, you can request that the thread be run repeatedly, as if in a loop, but it is the Android Thread scheduler that calls the handler, not your own application.&quot;<p>But from OP <i>...you need to be capable of buffer filling way more than one frame&#x27;s worth of audio - at least 100ms, preferably much more. Not just for robustness, but also for battery life.</i><p>I suspect there is a misapprehension here. &quot;...under normal playback the thread copies one frame of data into the Android playback API, then tells the thread scheduler to wait 15 ms and invoke the handler again&quot;. I suspect that one can call that handler more often than every 15ms to fill the playback buffer, and then in normal playback one adds frames one at a time to keep the buffer filled <i>and no faster</i>, but on quick reading it sounds like as the OP stated.')