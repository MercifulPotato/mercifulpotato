Item(by='boogies', descendants=None, kids=None, score=None, time=1604186535, title=None, item_type='comment', url=None, parent=24955208, text='&gt; I&#x27;ve always heard about this possibility but I wonder how one would rewrite code, should the need arise. Wouldn&#x27;t it be hard to do without effectively making a derivative work?<p>This is an issue GNU has faced, they recommend optimizing for different things:<p>&gt; If you have a vague recollection of the internals of a Unix program, this does not absolutely mean you can’t write an imitation of it, but do try to organize the imitation internally along different lines, because this is likely to make the details of the Unix version irrelevant and dissimilar to your results.<p>&gt; For example, Unix utilities were generally optimized to minimize memory use; if you go for speed instead, your program will be very different. You could keep the entire input file in memory and scan it there instead of using stdio. Use a smarter algorithm discovered more recently than the Unix program. Eliminate use of temporary files. Do it in one pass instead of two (we did this in the assembler). — <a href="https:&#x2F;&#x2F;www.gnu.org&#x2F;prep&#x2F;standards&#x2F;standards.html#Reading-Non_002dFree-Code" rel="nofollow">https:&#x2F;&#x2F;www.gnu.org&#x2F;prep&#x2F;standards&#x2F;standards.html#Reading-No...</a><p>In fact RMS had experience from his competition with Symbolics:\n<a href="http:&#x2F;&#x2F;www.gnu.org&#x2F;gnu&#x2F;rms-lisp.en.html#foot-6" rel="nofollow">http:&#x2F;&#x2F;www.gnu.org&#x2F;gnu&#x2F;rms-lisp.en.html#foot-6</a><p>&gt; The Symbolics source code was available at MIT, where I was entitled to read it, and at first that&#x27;s how I found out about their changes.<p>&gt; But that meant I had to make a special effort to solve each problem differently, in order to avoid copying Symbolics code. After a while, I concluded it was better not to even look. That way I could write code in whatever way was best, without concern for what might be in Symbolics&#x27; code.<p>(of course, this applies more to larger utilities, inopinatus’ comment <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24955918" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24955918</a> should come in handy for smaller code snippets)')