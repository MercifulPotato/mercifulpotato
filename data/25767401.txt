Item(by='jeff-davis', descendants=None, kids=[25772927, 25768049, 25773710], score=None, time=1610569000, title=None, item_type='comment', url=None, parent=25767128, text='This post illustrates the difference between persistence and a database.<p>If you are expecting to simply persist one instance of one application&#x27;s state across different runs and failures, a database can be frustrating.<p>But if you want to manage your data across different versions of an app, different apps accessing the same data, or concurrent access, then a database will save you a lot of headaches.<p>The trick is knowing which one you want. Persistence is tempting, so a lot of people fool themselves into going that direction, and it can be pretty painful.<p>I like to say that rollback is the killer feature of SQL. A single request fails (e.g. unique violation), and the overall app keeps going, handling other requests. You application code can be pretty bad, and you can still have a good service. That&#x27;s why PHP was awesome despite being bad -- SQL made it good (except for all the security pitfalls of PHP, which the DB couldn&#x27;t help with).')