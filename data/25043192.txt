Item(by='chriswarbo', descendants=None, kids=[25043299], score=None, time=1604988194, title=None, item_type='comment', url=None, parent=25039459, text='Merging is only one aspect of version control. Also, merging (especially automatically) is limited by the quality of the data. For example, it&#x27;s common for git to mix up function definitions by fixating on common lines (e.g. braces), e.g.<p><pre><code>    -def foo()\n    -{\n    +def bar()\n    +{\n    +  doBarThing;\n    -  doFooThing;\n     }\n</code></pre>\nThere are many ways to represent the same diff, but this sort of half-and-half result happens so often, and is such a minor problem, that it&#x27;s usually not worth bothering to fix when committing. Yet it&#x27;s the sort of weird input that can complicate later merges, cherry-picking, etc.<p>A semantic-aware diff could do better. Again, there are many ways to represent the diff, but it could be as fine-grained as the token-level, e.g.<p><pre><code>    def -foo+bar()\n    {\n      -doFooThing+doBarThing;\n    }\n</code></pre>\nOr as coarse-grained as the definition level, e.g.<p><pre><code>    -def foo()\n    -{\n    -  doFooThing;\n    -}\n    +def bar()\n    +{\n    +  doBarThing;\n    +}\n</code></pre>\nEither way (or something in-between), these represent more meaningful changes, and hence provide more useful input to subsequent processing (e.g. merging).')