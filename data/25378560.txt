Item(by='yazaddaruvala', descendants=None, kids=[25379067, 25379699, 25379850], score=None, time=1607633879, title=None, item_type='comment', url=None, parent=25363056, text='I&#x27;m sure Fauna is a great database and probably cheaper in many cases. I just have some issues with the &quot;Complex Example&quot;. I just don&#x27;t feel it is realistic that anyone familiar with DynamoDB would create such a schema. It comes across like a good schema for Fauna is being forced onto DynamoDB, without an evaluation of what would be the recommended &quot;DynamoDB way&quot; of solving the customer&#x27;s needs.<p>&gt; We have an accounts table with 20 secondary indexes defined for all the possible sort fields (DynamoDB’s maximum—Fauna has no limit).<p>The usecase of having 20 secondary indexes in DDB is an extremely rare case. Arguably should be considered an anti-pattern, only used for an application transitioning query patterns in some way. If this is the norm for an application, I&#x27;d argue the product managers&#x2F;developers do not understand their customer&#x27;s needs well enough. I&#x27;d assume that at this stage in the product&#x27;s life, a basic Postgress installation is likely a better choice.<p>Additionally, if the query pattern really needs to be &quot;super flexible&quot; for the long term, you&#x27;ll find that eventually you&#x27;ll need more and more of ElasticSearch&#x27;s tech (or similar tech). A very common pattern is to use DDB Streams to ElasticSearch connector (obviously sacrificing query-after-write consistency).<p>&gt; Viewing just the default account screen queries 7 indexes and 25 documents. A typical activity update transactionally updates 3 documents at a time with 10 dependency checks and modifies all 35 indexes.<p>This is such a red flag. If your application requires this from DDB, you should change your schema (probably more de-normalization). However, the example doesn&#x27;t have enough information for me to suggest a better schema to meet the customer&#x27;s needs.<p>Disclaimer: I work at Amazon, but not in AWS. My opinions are my own.')