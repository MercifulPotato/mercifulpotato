Item(by='barrenko', descendants=None, kids=[25287957], score=None, time=1606993015, title=None, item_type='comment', url=None, parent=25285862, text='To borrow a reference from Alex Crompton, building software is both &quot;Math hard&quot; and &quot;Bodybuilding&quot; hard. Coding itself is then recursively &quot;Math&quot; hard and &quot;Bodybuilding&quot; hard.<p>Math hard is when to get something to work it&#x27;s really hard &quot;mentally&quot; to achieve&#x2F;produce&#x2F;figure out, but when it works it&#x27;s not a problem anymore and you can explain it to kids (like Pythagorean theorem). Bodybuilding hard is when there is clear and simple &quot;process&quot; to achieve a thing, but it&#x27;s really hard to stick to it, because to not do so is way easier.<p>In coding e.g, it&#x27;s boring to refactor and optimize code and not put all stuff in one place and write shitty functions.<p>In actual software development&#x2F;management (one level &quot;above&quot;) it seems it&#x27;s really really hard for the team&#x2F;company&#x2F;PM&#x2F;CEO to fight bloat. It&#x27;s hard not to go for building new stuff and adding features. There is nothing to talk about and waste meetings on and add administrative and marketing staff early on if you&#x27;re not working to &quot;add new features&quot;. Mainly because there is no definable primary feature, no actual purpose for the software, no really good coders, and in 99% of cases no actual product and &#x2F; or underlying business.')