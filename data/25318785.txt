Item(by='floatingatoll', descendants=None, kids=[25319346, 25319241], score=None, time=1607205311, title=None, item_type='comment', url=None, parent=25315180, text='I have one regret from this article, and that’s the explanation that sRGB hex color #ffffff (255, 255, 255) is being remapped. It’s not. The OS simply isn’t restricting the display pipeline to sRGB anymore, and that allows content which exceeds sRGB to do so.<p>#ffffff is L=100%. What is L=800%? It exists in HDR content, and we can’t just make the web color #ffffff a dim gray to the eye.<p>We must start thinking in terms of HSL or LAB or even RGBL, and consider that L &gt; 100% is where HDR peak brightness lives.<p>HDR’s color space exceeds the luminosity that sRGB hex triplets can represent, and remapping HDR color spaces into sRGB hex gives you horrendous banding and requires complex gamma functions. The CSS colors spec is finalizing on this, but essentially we’re at the last days of hex codes being a great way to express color on the web. They’ll remain good as a last resort, but it’s time to move a step forward.<p>Apple is pinning sRGB hex #ffffff to “paper white” brightness because the hex color specification can’t encompass the full spectrum of monitors anymore. The different between #ffffff and #fefefe can be enormous on a display with 1800 nits of peak brightness, and if you map #ffffff to peak brightness, you burn out people’s eyes with every single web page on today’s legacy sRGB-color Internet (including Hacker News!). That’s why HDR has “paper white” at around 400 lumens in calibration routines.<p>So, then, sRGB hex colors have no way to express “significantly brighter than paper white #ffffff”, and UI elements have little reason to use this extended opportunity space - but HDR content does, and it’s nice to see Apple allowing it through to the display controller.<p>But there’s no way to make use HDR in web content - other than embedded images and videos - if we continue thinking of color in terms of hex codes. This insistence that we remap hex codes into thousands of nits of spectrum is why web colors in Firefox on an HDR display make your eyes hurt (such as the HN topbar): it’s rescaling the web to peak brightness rather than to paperwhite, and the result is physically traumatic to our vision system. Human eyes are designed for splashes of peak brightness, but when every web page is pouring light out of your monitor at full intensity, it causes eye strain and fatigue. Don’t be like Firefox in this regard.<p>“But how do we conceive of color, if not in hex codes?” is a great question, and it’s a complicated question. In essence you select color and brightness independent of each other, and then make sure that it looks good when peak brightness is low, and doesn’t sear your eyes when peak brightness is high.<p>If this interests you, and you’d like to start preparing for a future where colors can be dimmer <i>or</i> brighter than sRGB hex #FFFFFF, here are a couple useful links to get you started:<p><a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=15534622" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=15534622</a><p><a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22467744" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22467744</a><p>As a final note, there are thermal reasons why peak brightness can be so much higher than paperwhite: your display can only use so much power for its thermal envelope. Yes, HDR displays have thermal envelopes. So overusing peak white, such as scaling #ffffff to the wrong brightness, can actually cause the total brightness of the display to drop when it hits thermal protections, while simultaneously wasting battery and hurting your users’ eyes.')