Item(by='switz', descendants=None, kids=[24926580, 24926626, 24928244, 24927904, 24928213, 24934097], score=None, time=1603935298, title=None, item_type='comment', url=None, parent=24925151, text='&gt; developing became more and more inefficient<p>Anecdotally I find the opposite to be true. I&#x27;ve been writing frontend code for over a decade, but I&#x27;ve never moved faster and wrote less buggy code than now. Is that because I&#x27;ve become a better developer? Sure, a little bit. But by and large, I don&#x27;t believe that ultimately is the reason. I think it&#x27;s the maturity in the technology. My growth as a programmer is hardly linear and the past 5 years have not matched the growth I achieved in my first 5. Frontend tooling has never been better than it is today.<p>What I believe, is that the bar to build web applications has been lowered, and there are more programmers than today than ever before. You have people who are not experts in frontend development and javascript trying to build complex UIs and applications. So you take this person who doesn&#x27;t have the requisite experience and put them to work on a paradigm with <i>a lot</i> of depth (frontend) using frameworks that are really simple and easy to get started with, but compound problems as they are misused.<p>Another factor is that since SPAs are stateful, complexity mounts aggressively. Instead of a refresh on a stateless page every few seconds, one page causes bugs that rear their head for the duration of the session. These inexperienced people are put in charge of designing codebases that don&#x27;t scale and become spaghetti. But when designed properly, these problems are largely negated.<p>I&#x27;m not advocating that SPAs are the solution to all problems. I think there&#x27;s gross overuse of SPAs across the industry, but that is not an indictment of SPAs themselves. That is someone choosing the wrong technology to solve the active problem.<p>With respect to angular (1, I never touched 2) specifically, I always found it extremely overengineered, poorly designed, with terrible APIs. But that&#x27;s a problem with that specific framework and says nothing at all about SPAs at all.')