Item(by='icegreentea2', descendants=None, kids=[25614048, 25614738], score=None, time=1609599772, title=None, item_type='comment', url=None, parent=25613078, text='I use a mix of WSL2, and VMs. WSL2 has a few nice properties for some use cases:<p>a) It comes default with some network binding magic (ok, just configuration) that makes your WSL env almost actually behave like localhost. I know you can configure this yourself, but it&#x27;s nice out of the box. (on the other hand, sometimes is this exactly the opposite of what you want...)<p>b) My main machine is a bit RAM constrained, and WSL2 will &quot;magically&quot; reclaim RAM when I close the consoles (unless I left something running...). Once again, not the biggest win, especially if you spec&#x27;d out your machine to run VMs, but still nice.<p>I think WSL2&#x27;s biggest wins are not for &#x27;full out development&#x27;. But it&#x27;s nice when you need want to jump in and poke at something quickly in Linux land. The startup time for the console&#x2F;VM is fast enough (~1-2 seconds), and the cleanup is good enough I can quickly jump between, without having a VM actually hanging around all the time.<p>I&#x27;m sure the file system integration is useful for some usecases... classic one would be if someone emails you data files or something. You download in your browser in Windows and then can access pretty seamlessly from WSL.<p>I think I would summarize WSL&#x27;s advantages as being a bunch of little quality of life advantages that are very much suited for Windows dominant workflows that periodically jump into Linux.<p>There are all sorts of other disadvantages though - I would not recommend anyone who has a comfortable VM based workflow to ditch for WSL. An example of an uncomfortably stupid rough edge would be periodically time-desyncing: <a href="https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;WSL&#x2F;issues&#x2F;4149" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;WSL&#x2F;issues&#x2F;4149</a> . I shit you not, my workaround is to manually adjust my linux time forward and back with `sudo date --set &quot;${INCREMENT} seconds&quot; until it gets close enough that OAuth doesn&#x27;t shit itself.')