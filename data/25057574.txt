Item(by='pjc50', descendants=None, kids=[25057629], score=None, time=1605095407, title=None, item_type='comment', url=None, parent=25057383, text='&gt; JIT is normalizing creating new executable code at run-time<p><i>shrug</i> the alternative is to be iOS, where programming languages are banned.<p>The simple and now widespread mitigation is &quot;W xor X&quot;: enforcing that pages must either be data or code, but if something is supposed to be executable it must not be writable. So JITs must build their code and then call the operating system to change the page into executable.<p>But even this isn&#x27;t entirely sufficient in situations where &quot;ROP&quot; (return oriented programming) is possible; this relies on finding &quot;gadgets&quot; at the tail end of functions that contain a wide enough selection of instructions to do what you want, and then overwriting the stack with a big pile of return addresses. The chain of returns then executes each gadget in sequence.<p>An advanced mitigation against that is stack &quot;canaries&quot;, such as <a href="https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1909.05747.pdf" rel="nofollow">https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1909.05747.pdf</a>')