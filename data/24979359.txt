Item(by='est31', descendants=None, kids=[24979399, 24979546, 24980691, 24979382], score=None, time=1604409636, title=None, item_type='comment', url=None, parent=24979097, text='When I read &quot;Colored function problem&quot; and &quot;make complexity explode&quot; I thought it was some weird NP-complete scheduling issue having to do with graph coloring or something, but it turns out it&#x27;s just a fancy term for not wanting to add async to everything that calls async. Basically just an ergonomics issue.<p>First, in Rust this isn&#x27;t really a problem. You can always turn async calls into blocking ones in Rust by calling block_on [0]. In some languages block_on doesn&#x27;t exist, like in in-browser js, because here, code is supposed to be async. But in Rust there is no requirement, so there&#x27;s no colored function problem here.<p>Second, I don&#x27;t think it&#x27;s a big problem in the first place. In one of my projects, I&#x27;m using an async library and have isolated the async-ness by creating a dedicated thread that communicates with the library. The thread provides a queue of messages that the remaining code of my project can handle.<p>[0]: <a href="https:&#x2F;&#x2F;docs.rs&#x2F;tokio&#x2F;0.3.3&#x2F;tokio&#x2F;runtime&#x2F;struct.Runtime.html#method.block_on" rel="nofollow">https:&#x2F;&#x2F;docs.rs&#x2F;tokio&#x2F;0.3.3&#x2F;tokio&#x2F;runtime&#x2F;struct.Runtime.htm...</a>')