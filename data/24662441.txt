Item(by='cloverich', descendants=None, kids=[24668309, 24668919], score=None, time=1601645880, title=None, item_type='comment', url=None, parent=24661611, text='(Thinking in terms of local stores)<p>&gt; how do your &#x27;not connected&#x27; stores know when, say, a user logs out?<p>If they need this information, it can be passed in from above, or pulled from context. But unless the store and component need to stay mounted when user logs out, they might not need to do anything. There&#x27;s nothing wrong with a local store being created by a component that receives props and provides them via constructor arguments.<p>&gt;  write code, bespoke to each object, to be able to reset these objects too?<p>I almost never do this, and nearly always create a new store when the component mounts. The combination of `useLocalStore`[1] with mobx-react-lite makes this straight forward. So per the above example, your component could `useLocalObservable(() =&gt; new Store(props.user))`<p>[1]: <a href="https:&#x2F;&#x2F;mobx.js.org&#x2F;react-integration.html" rel="nofollow">https:&#x2F;&#x2F;mobx.js.org&#x2F;react-integration.html</a>')