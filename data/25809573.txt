Item(by='0xbkt', descendants=None, kids=[25810986, 25810662, 25810271, 25809767], score=None, time=1610878426, title=None, item_type='comment', url=None, parent=25805158, text='I would probably go with gRPC + grpc-gateway[1] instead. Declaring your services and models in proto files, annotating your services with google.api.http to help grpc-gateway scaffold your HTTP base. Then just implement your services from the interface generated by grpc-go. You can even register your gRPC services to grpc-gateway without actually bringing up a gRPC server. You finally end up having your exact data models injected to your service handlers. Thus, you don&#x27;t  have to repeat yourself preparing the groundwork to call into your services.<p>This is mostly the way today services in big OSS projects are exposed outside for consumption in a RESTful style. One exception I know of is sourcegraph&#x2F;sourcegraph.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;grpc-ecosystem&#x2F;grpc-gateway#usage" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;grpc-ecosystem&#x2F;grpc-gateway#usage</a>')