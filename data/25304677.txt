Item(by='skohan', descendants=None, kids=[25305394], score=None, time=1607101098, title=None, item_type='comment', url=None, parent=25304416, text='I disagree.  I think often times &quot;making things testable&quot; leads to code which is much harder to follow.  For instance, dependency injection often leads to things depending on abstract interfaces rather than concrete implementations, and it becomes much harder to trace through code.<p>I actually think integration tests are <i>vastly</i> more useful than unit tests, and in general unit tests should be employed: a) if you are testing business logic which is not obvious, b) as a method of debugging or c) when it makes it faster to iterate on a particular piece of code during development.<p>I think excitement about unit-testing has become over-generalized to domains where it doesn&#x27;t make sense.  For instance, in a mobile application unit testing your networking layer does not add value 99% of the time, will be way less helpful than hands-on testing of the UX, and just adds busy work to modifying the code-base because you have to maintain the tests as well.')