Item(by='Huggernaut', descendants=None, kids=None, score=None, time=1603657232, title=None, item_type='comment', url=None, parent=24888283, text='I&#x27;m in strong agreement with this summary.<p>Although I don&#x27;t write Go so much anymore, I had the benefit of working in Go for a few years on a team that developed a strongly shared style. A few years later, one of those team members sent me a package they had been working on, and it was an absolute breeze to understand in comparison to the Rust and TypeScript I had been working on. This is not to knock on Rust or TypeScript, as there are absolutely solutions that are better expressed in those languages, but if I&#x27;m honest, the vast majority of software is &quot;plumbing&quot; - get data, manipulate data, put data - and Go is an extremely pragmatic choice for this in my opinion.<p>A few other thoughts...<p>I really don&#x27;t take issue with `if err != nil` and though I like Monadic types, I&#x27;ll take errors as values over exceptions 100% of the time.<p>I&#x27;ve also written a lot of CLIs and Go&#x27;s build process here is superb.<p>I think the Go community has a strong testing culture, and although I like BDD, the work put into the std test tooling has really helped form that.')