Item(by='seg_lol', descendants=None, kids=[24780014], score=None, time=1602694899, title=None, item_type='comment', url=None, parent=24775034, text='Wow! I had no idea that Microsoft made a Lisp?! MuLISP [0]<p>I think there are two issues with the implementation of macros, and I am not really qualified, but this the internet so here goes.<p>1. Getting access to the quoted parse tree<p>2. Writing code to either generate, modify, etc, that parse tree.<p>So folks already do (2) by spraying code into a buffer and exec or evaling it.<p>They do some of (1) by reading the textual src, the bytecode or the parse tree. Mentioned elsewhere in the thread are MacroPy and HyLang.<p>All of that said, I think a language with better semantics about deferred evaluation or a pre-eval step (maybe it doesn&#x27;t need need full macro macros), who knows.<p>One thing that I found really powerful in Zig [2] and Dlang are the facilities around CTFE (compile time function evaluation) [1] and how they obviate solve many of the same problems.<p>Minor nit, I think the PEP could have done a better job showing now HOW it could be used, but what EXISTING programs could be made simpler or achieve things not possible with the current system.<p>I do think that some sort of lightweight code generation step could both reduce the lines of code, make things simpler for the outer layers of the stack and make things more performant. Obviously, they can go the other way, but limiting the upside because of possible downsides isn&#x27;t something we should do with code. Python already has an infinite number of ways to have unmaintainable, inscrutable code, you should see my list comprehensions and my itertools code! :) What is another one if it captures more of the original essence of Python?<p>[0] <a href="http:&#x2F;&#x2F;www.edm2.com&#x2F;index.php&#x2F;MuLISP" rel="nofollow">http:&#x2F;&#x2F;www.edm2.com&#x2F;index.php&#x2F;MuLISP</a><p>&gt; In addition to an interpreter and compiler the system includes an editor with a WordStar-like command set<p>Wait what? I am getting flash-forwards of a ColorForth like environment for Lisp using DOS graphics. This is like some retro-futuristic timeline where Microsoft went down the Lisp+Xenix path!<p>[1] <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Compile_time_function_execution" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Compile_time_function_executio...</a><p>[2] Which also mentions Terra, which I think should be required in any discussion around macros  <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13761571" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13761571</a><p><a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Compile_time_function_execution" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Compile_time_function_executio...</a>')