Item(by='haberman', descendants=None, kids=None, score=None, time=1609367261, title=None, item_type='comment', url=None, parent=25586639, text='&gt; Don&#x27;t people use pb so they do not have to deal with JSON?<p>I think that&#x27;s one reason, but there are others too, like getting generated type-safe accessors and an explicit schema.  I&#x27;ve sometimes used protobuf for this reason even when I&#x27;m not planning to use binary format.<p>&gt; I&#x27;d expect that for a truly lean pb implementation, adding JSON is a 300% increase in code size?<p>Here is a breakdown of a binary that uses upb and links in binary format, JSON format, text format, and some generated protos:<p><pre><code>         VM SIZE\n     ---------------\n      20.6%  26.5Ki    Generated Reflection\n        45.7%  12.1Ki    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;src&#x2F;google&#x2F;protobuf&#x2F;test_messages_proto3.upbdefs.c\n        39.3%  10.4Ki    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;src&#x2F;google&#x2F;protobuf&#x2F;test_messages_proto2.upbdefs.c\n         5.0%  1.33Ki    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;conformance&#x2F;conformance.upbdefs.c\n         3.1%     832    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;struct.upbdefs.c\n         2.4%     648    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;wrappers.upbdefs.c\n         1.2%     320    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;timestamp.upbdefs.c\n         1.2%     312    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;duration.upbdefs.c\n         1.1%     304    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;field_mask.upbdefs.c\n         1.1%     296    [1 Others]\n      19.1%  24.5Ki    JSON\n        60.4%  14.8Ki    upb&#x2F;json_decode.c\n        39.6%  9.67Ki    upb&#x2F;json_encode.c\n      14.7%  18.9Ki    Reflection Runtime\n        81.9%  15.4Ki    upb&#x2F;def.c\n        18.1%  3.41Ki    upb&#x2F;reflection.c\n      13.9%  17.8Ki    Generated Code\n        46.9%  8.34Ki    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;wrappers.upb.c\n        17.6%  3.12Ki    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;src&#x2F;google&#x2F;protobuf&#x2F;test_messages_proto3.upb.c\n        16.4%  2.92Ki    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;src&#x2F;google&#x2F;protobuf&#x2F;test_messages_proto2.upb.c\n        14.7%  2.61Ki    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;descriptor.upb.c\n         2.0%     356    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;conformance&#x2F;conformance.upb.c\n         1.4%     264    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;struct.upb.c\n         0.5%      88    [2 Others]\n         0.3%      48    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;any.upb.c\n         0.3%      48    bazel-out&#x2F;k8-opt&#x2F;bin&#x2F;external&#x2F;com_google_protobuf&#x2F;google&#x2F;protobuf&#x2F;duration.upb.c\n      10.0%  12.9Ki    Binary Format\n        54.0%  6.95Ki    upb&#x2F;decode.c\n        46.0%  5.92Ki    upb&#x2F;encode.c\n       8.8%  11.3Ki    Core Runtime\n        66.3%  7.52Ki    upb&#x2F;table.c\n        17.8%  2.02Ki    upb&#x2F;upb.c\n        15.9%  1.80Ki    upb&#x2F;msg.c\n       5.6%  7.19Ki    [34 Others]\n       3.8%  4.94Ki    Text Format\n       100.0%  4.94Ki    upb&#x2F;text_encode.c\n       3.5%  4.46Ki    [section .rodata]\n     100.0%   128Ki    TOTAL\n</code></pre>\nSo JSON is pulling in 25Ki directly, plus it depends on the 19Ki reflection runtime and the generated reflection.<p>But it is all a la carte: if you don&#x27;t want JSON, just don&#x27;t use it and don&#x27;t link it in.<p>(btw that 7Ki for upb&#x2F;table.c is to support protobuf maps, I want to make that a la carte also so that you don&#x27;t pay for it when you don&#x27;t use maps).')