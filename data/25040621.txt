Item(by='ohazi', descendants=None, kids=None, score=None, time=1604960291, title=None, item_type='comment', url=None, parent=25039013, text='Oh hey, I was just playing with this... it&#x27;s really cool!<p>There&#x27;s a &quot;Linux on LiteX-VexRiscv&quot; design [1] that adds a DDR controller and MMU to the shared bus as well as a handful of other pieces that allow you to boot a Linux kernel image, mount a filesystem, and get a shell prompt over a serial terminal or ssh.<p>You can then use familiar interfaces to talk to whatever peripherals you decided to include, e.g.:<p><pre><code>    $ echo 1 &gt; &#x2F;sys&#x2F;class&#x2F;gpio&#x2F;gpio508&#x2F;value\n    $ echo 50 &gt; &#x2F;sys&#x2F;class&#x2F;pwm&#x2F;pwmchip0&#x2F;duty_cycle\n</code></pre>\nI got it to run on Greg Davill&#x27;s [2] Orange Crab FPGA board [3] last night, which was actually pretty easy, as it&#x27;s one of the supported boards. It was <i>surprisingly</i> usable, even with the soft processor only running at 64 MHz. This was also the first time I used the open source synthesis &#x2F; place-and-route tools to do anything more complicated than an adder, and they were <i>fast</i> and worked flawlessly.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;litex-hub&#x2F;linux-on-litex-vexriscv" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;litex-hub&#x2F;linux-on-litex-vexriscv</a><p>[2] <a href="https:&#x2F;&#x2F;twitter.com&#x2F;gregdavill" rel="nofollow">https:&#x2F;&#x2F;twitter.com&#x2F;gregdavill</a> - He posts a lot of really cool macro and microscope photos of electronics assembly<p>[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;gregdavill&#x2F;OrangeCrab" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gregdavill&#x2F;OrangeCrab</a>')