Item(by='jws', descendants=None, kids=None, score=None, time=1608960385, title=None, item_type='comment', url=None, parent=25540458, text='I emit LLVM IR as text in my compiler. It’s painless, almost. Some points off the top of my head…<p>- I started out just printing strings, but found I wanted a bit more structure so I wrote a dozen or so functions to do the printing. Things at the level of call(name,rags). All make a single line of IR. It helps keep the typos down.<p>- just run your IR through clang to compile it. It has good enough error messages that you won’t go mad.<p>- you will need to make a bunch of DI metadata to get debug information into your programs. It took me about 8 hours to get enough that I have line number information and LLDB will show me functions and source lines on a backtrace. I should have done this much earlier than I did. I was getting by with line number comments in my IR, which is simple, but useless if you Give yourself an access violation.<p>- learn to write little C programs and use clang to emit the IR. This will let you sort out how to do things. The IR manual is good, but there are concepts which are omitted because they were obvious to the authors, but won’t be to you.<p>- local symbols have to be in strict, ascending, no skipped values numerical order. Screw that. Grab a dollar sign and make your own numeric local-ish symbols and don’t sweat reordering them.<p>- it doesn’t seem to care what order you emit things in, other than lines in a block of course, so just do what is easy for you.<p>- get a grip on getelemtptr and phi. The first may not be what you think it is, learn what it is. The second is just part of the magic of SSA.')