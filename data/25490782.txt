Item(by='inclemnet', descendants=None, kids=[25490903], score=None, time=1608508784, title=None, item_type='comment', url=None, parent=25490496, text='&gt; The question is, who actually uses these projects? The people developing them? Hobbyists? Language diehards?<p>This is an interesting question, and one that (as Kivy developers) we wonder about ourselves. Others may have different perspectives, but mine is:<p>* Kivy is very much community built and community driven, it has no serious financial backing (though we are grateful for the donations we do get!) and a fairly small developer pool.<p>* Most of the commercial use of Kivy that I&#x27;m aware of is small companies using it for specific reasons that happen to make sense for them, usually involving some technical reason such as the combination of Python and a flexible drawing toolkit fitting both their dev interests and product requirements. I don&#x27;t think there is a lot of commercial use, but e.g. one of the Kivy founders has been using Kivy commercially for many years in a variety of interesting projects.<p>* Kivy is not mobile-only or even mobile-focused, and the commercial usage reflects that. This is worth noting because people often think it was invented for mobile: it wasn&#x27;t, it was invented to be very flexible, and this happened to make it mobile-ready.<p>* Most use of Kivy is probably from Python hobbyists, and may well be more weighted towards mobile since that&#x27;s the most obvious standout feature as a Python gui toolkit (although not the only one).<p>I&#x27;ve been involved with Kivy for a long time, but never commercially - I got into it for fun while looking to make an app and strugging with an android development tutorial (turns out the instructions were just wrong for Linux...), and stayed with it for also fun. I&#x27;m most interested in the general principle that app development ought to be simple and easy for a wide range of tasks, and that in pursuit of this goal it does <i>not</i> have to be perfect. I like the idea that e.g. someone who has programmed a simple game or visualisation should be able to easily share it with their friends, on any platform including mobile. This is just my perspective of course, others do use it for other things.<p>I have a couple of my own apps that I think emphasise this perspective. Lazy Baduk (<a href="https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=net.inclem.lazybaduk" rel="nofollow">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=net.inclem.laz...</a>) is a Go analysis tool that bundles a superhuman AI: I threw it together in a weekend using some existing Python code I had lying around, because there was no Android app currently supporting the functionality I wanted. If I couldn&#x27;t do that with Python, the app simply wouldn&#x27;t exist. ColourBlind (<a href="https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=net.inclem.colourblind" rel="nofollow">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=net.inclem.col...</a>) runs the camera feed through a basic colour blindness simulation filter, I made this one just because I wanted to see what it was like and all the existing apps I could find were rubbish (in my opinion!). Even with the limitations of Python, I like mine much better than them.')