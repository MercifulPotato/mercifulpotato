Item(by='exmadscientist', descendants=None, kids=None, score=None, time=1603262102, title=None, item_type='comment', url=None, parent=24844684, text='The ARM Cortex-M series was designed from the ground up with the goal of being 100% programmable in C. And it has succeeded at that goal, with only a few rare exceptions.<p>The times I have found it necessary to write assembly (as opposed to just reading compiler output) in the past few years of microcontroller programming seem to fall into three main categories:<p>1. The vendor-provided startup code is broken and it needs to get fixed. Usually this is indeed 100% written in C for Cortex-M cores, but some vendors get... creative. Vendor code is special. Vendor code has always been special.<p>2. The compiler is too stupid to use a particular processor feature. This is usually related to performance, and in particular to the math and DSP instructions being too complicated for the poor compiler to understand. This is relatively rare, but when it&#x27;s in a hot area, a single intrinsic call (sometimes you have to write the intrinsic...) can make a huge difference.<p>3. You need to debug something hairy and low-level hacks can help you do that. Usually this kind of debug solution only occurs to people who already <i>have</i> good low-level intuition; everyone else just finds a different way to solve the problem, which ends up working out just fine either way.')