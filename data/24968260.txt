Item(by='neomantra', descendants=None, kids=None, score=None, time=1604326234, title=None, item_type='comment', url=None, parent=24964966, text='Using UDS to seamlessly move Proxygen workloads like that is so slick!<p>Here&#x27;s how we&#x27;ve used this file descriptor transfer feature:<p>We made a transport which can accept local connections on a Unix Domain Socket and then &quot;upgrades&quot; that connection to two pipes (read and write).  Those pipes are passed over the UDS and the client&#x2F;server communicate over them.<p>We use a kernel-bypass library (OpenOnload) that implement pipes as shared memory in user-space.  Very low latency and high throughput.<p>We made a `boost::asio` implementation of this available on GitHub.  It is old and I&#x27;m not sure if it works with latest Boost, but it is quite readable for people to play with.  We once bolted it onto Redis&#x27; Unix Socket transport for fun, but abandoned it as it was a hassle to maintain.<p><a href="https:&#x2F;&#x2F;github.com&#x2F;neomantra&#x2F;asio-pipe-transport" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;neomantra&#x2F;asio-pipe-transport</a>')