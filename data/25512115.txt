Item(by='nicolast', descendants=None, kids=None, score=None, time=1608676061, title=None, item_type='comment', url=None, parent=25509721, text='&gt; first of all with k3s keeping a production cluster running is still pretty easy.<p>Fair enough. I&#x27;ll admit I have no direct experience with K3s. There are, however, many K8s deployment systems out there which I would not consider &#x27;production-ready&#x27; at all even though they&#x27;re marketed that way.<p>&gt; second you should always be ready to start from scratch, which is also pretty simple, because of terraform.<p>That may all be possible if your environment can be spawned using Terraform (e.g., cloud&#x2F;VMWare environments and similar). If your deployment targets physical servers in enterprise datacenters where you don&#x27;t even fully own the OS layer, Terraform won&#x27;t bring much.<p>&gt; a lot of people are scared of k8s but they did not even try. they prefer to maintain their scary ansible&#x2F;puppet whatever script that works only half as good as k8s.<p>We&#x27;ve been deploying and running K8s as part of our on-premises storage product offering since 2018, so &#x27;scared&#x27; and &#x27;didn&#x27;t try&#x27; seems not applicable to my experience. Yes, our solution (MetalK8s, it&#x27;s open source, PTAL) uses a tech &#x27;half as good&#x27; as K8s (SaltStack, not Ansible or Puppet) because you need <i>something</i> to deploy&#x2F;lifecycle said cluster. Once the basic K8s cluster is up, we run as much as possible &#x27;inside&#x27; K8s. But IMO K8s is only a partial replacement for technologies like SaltStack and Ansible, i.e., in environments where you can somehow &#x27;get&#x27; a (managed) K8s cluster out of thin air.')