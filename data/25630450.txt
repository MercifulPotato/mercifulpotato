Item(by='usrusr', descendants=None, kids=[25631648], score=None, time=1609763213, title=None, item_type='comment', url=None, parent=25629989, text='The difference is that the password works as a shortcut for situations where the email approach adds lots of friction (working on a &quot;guest&quot; device, latency, the entire world  spam countermeasures). Friction is very much acceptable for password recovery (arguably even desirable), but not so much for conventional login.<p>A nice middle ground would be allowing to opt out of passwords, for people who are happy with the combination of device token plus email OTP. This would work even better if device tokens were not binned with all those junk cookies: I think it could be valuable to have a class of &quot;qualified cookies&quot; that can only be written on user prompt and have reads optionally protected by additional local authentication requirements (configured on the user prompt), basically something that sits right in the middle between the streaming heap of cookies a browser stores and the browser&#x27;s password store that allegedly nobody uses. I believe that this could be a major win for web privacy, &quot;delete all cookies except for those which the store considered important enough to depend on a user prompt&quot; (obviously, the client needs to include a &quot;pretend to store, but actually keep only for the session&quot; option to prevent abuse)<p>You could almost implement this for a site already using the web storage API, except for the unclear client prompts and lack of fine-grained tying into additional client side authentication measures (e.g. like how you might want a password manager to maintain very different master key freshness requirements for different entries)')