Item(by='mehrdada', descendants=None, kids=None, score=None, time=1608886110, title=None, item_type='comment', url=None, parent=25535119, text='I ran a multithreaded poker solver (a Windows executable) on top of Wine on Rosetta on base MacBook 13 M1 and it beats the performance of base MacBook Pro 16 inch (Intel 6-core) with Windows running on bare metal by a small margin.<p>(M1 fan actually turned on, which is a rare occurrence; at the same time MacBook Pro 16 Intel would be frying my laps.  Ballpark estimates on the internet seem to pin it down beating MBP16 6-core i7 and trailing MBP16 8-core i9 on pure CPU performance benchmarks, power obviously much lower; GPU far better than Intel UHD 630 and close but not quite as good as Radeon 5300M.)<p>For most applications that aren&#x27;t especially pathological for Rosetta (e.g. V8 x64), it seems not more than 10-30% slower than arm64.<p>(Don&#x27;t feel too surprised. If your binary is static code, it is pretty much a static compiler from x86 to ARM [albeit an incredibly well executed one], so not magic: in fact if you disable SIP on your system, you can peek into the translated executables in `&#x2F;var` and look into them via `objdump`&#x2F;`otool`)<p>--<p>Another benchmark that is a bit worse for Rosetta:<p>Compiling gRPC from clean source (not quite Apple to Apple comparison cause under Rosetta, it runs LLVM x86 codegen vs LLVM arm64 codegen outside Rosetta and I did not want to mess with the flags). I also feel like process creation under Rosetta can be more expensive, but not sure.<p>- MacBook 16 (i7-9750H, 16GB): 67s<p>- MacBook 13 (M1, 8GB): 48s<p>- MacBook 13 (M1, 8GB, Rosetta): 85s<p>Now I have my Intel Macs to list on Craiglist...')