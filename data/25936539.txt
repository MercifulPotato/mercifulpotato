Item(by='throwaway894345', descendants=None, kids=[25937259, 25937092], score=None, time=1611794815, title=None, item_type='comment', url=None, parent=25935965, text='&gt; The same is true of functional and procedural programming, too.<p>There are some specific criticisms that are levied against FP for which proponents respond “that’s not true FP”. For example, the criticism “FP is too preoccupied with monads” might engender such a response; however, this response is appropriate because it’s not one of the defining features of FP. Yet for FP, there are still pretty widely-agreed upon features or conventions (functional composition, strong preference for immutability, etc).<p>For OOP, I can’t think of any features or styles that are widely agreed upon. If you mention inheritance, half of OOP proponents will argue that inheritance isn’t a defining characteristic because Kay didn’t mention it in his definition. If you mention message-passing, many others will object. If you mention encapsulation, then you’ve accidentally included virtually all mainstream paradigms.<p>If OOP is a distinct thing, and it isn’t about inheritance or message passing or encapsulation or gratuitous references between objects (the gorilla&#x2F;banana&#x2F;jungle problem), then what exactly <i>is</i> it?')