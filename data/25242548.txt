Item(by='gitgud', descendants=None, kids=None, score=None, time=1606617826, title=None, item_type='comment', url=None, parent=25234313, text='I think we&#x27;re in agreement, originally it was suggested to use a &quot;null&quot; string, instead of NULL as a value, which is what I said might cause weird error cases.<p>&gt; <i>So in the JSON itself, you literally remove the field.</i><p>That&#x27;s a good point, but in some cases having a `null` is an easier option, as you only need to determine if the value is valid, not if it exists AND is valid (but I suppose you could say it&#x27;s always valid if it exists... that&#x27;s if you trust the endpoint to provide valid values though).<p>&gt; <i>But consider an example where you&#x27;re loading some code into a VM&#x27;s RAM</i><p>Allocating memory locations from dynamically created JSON values is bound to lead to many different errors...<p>I guess my main point is that JSON is inherently untyped and suited for messy data or user input. This messiness makes data validation on the consumer of the JSON necessary, which means the consumer has to check if the value is valid before using it. In most cases `null` is considered invalid but if the field isn&#x27;t there, then it could be an error in the JSON provider.')