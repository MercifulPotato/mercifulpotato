Item(by='skrebbel', descendants=None, kids=[24691784, 24691799, 24691404, 24692058], score=None, time=1601927383, title=None, item_type='comment', url=None, parent=24691170, text='I&#x27;ll bite. I&#x27;m 37, a tech startup founder. I&#x27;m wary of ageism and I&#x27;ve long believed that <i>not</i> being ageist would allow us to hire smarter than competitors.<p>However:<p>- The amount of programmers grows exponentially. I&#x27;ve seen stats claiming it doubles every 5 years.<p>- This means that at any time, 50% of the available workforce has &lt;5y experience. Often this overlaps with young ages.<p>- It also means there are simply <i>way</i> more programmers under 40 than over. If you randomly hire 9 programmers there&#x27;s a fair chance they&#x27;re all under 30.<p>- Anecdotally, less than 5% of the job applicants we got was over 40.<p>- Young programmers haven&#x27;t had time yet to make the mistake to &quot;repeat the same year of experience 10 years in a row&quot;. If you hire a young, junior programmer, you know they&#x27;re junior - what you see is what you get. If you hire an older programmer they might be great or they might be that same junior programmer but more stubborn and with higher salary expectations.<p>As an avid anti-ageist, in fact I&#x27;m rather disappointed about that last point. I&#x27;ve met <i>many</i> programmers at around or above my age that have gotten completely stuck into a tiny niche of experience and, even there, seem to not really have progressed much in terms of depth. Why do people let this happen to themselves? I mean I met people who spent the last 10 years developing just-not-the-same custom Magento webshop plugin over and over again, each time with a slightly different twist for a different customer. Not hiring someone like that isn&#x27;t ageist, it&#x27;s common sense. Once Magento is out of fashion these people have a pretty serious problem.<p>The reason I don&#x27;t understand this is because with each new technology you learn, there&#x27;s a diminishing effort to learning the next because there&#x27;s so many similarities to a thing you already known. There&#x27;s a reason most people complaining about &quot;javascript fatigue&quot; are young.<p>As an example, when React&#x2F;Flux&#x2F;Redux first came to the scene, old farts like me could recognize that its &quot;unidirectional data flow&quot; wasn&#x27;t fundamentally different from the good old desktop MVC UI pattern (before Rails hijacked the name and gave it a different meaning). I imagine that this made learning React and architecting decent apps on it easier for me than for people who&#x27;d never seen data &quot;flow&quot; in circles before.<p>Age definitely can be an advantage. But it isn&#x27;t by definition. Keep learning new stuff folks! And if that ever stops being fun, you can always become a manager.')