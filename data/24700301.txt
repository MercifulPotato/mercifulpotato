Item(by='benesch', descendants=None, kids=[24701622], score=None, time=1602005461, title=None, item_type='comment', url=None, parent=24699659, text='&gt; I hit in Postgres recently that is terribly documented.<p>I&#x27;m going to have to disagree with you there. This issue is quite well documented in the &quot;SQL Functions Returning Sets&quot; section [0]. The relevant bit starts thusly:<p>&gt; ...Set-returning functions can be nested in a select list, although that is not allowed in FROM-clause items. In such cases, each level of nesting is treated separately, as though it were a separate LATERAL ROWS FROM( ... ) item...<p>And there&#x27;s even a note about the crazy behavior pre-PostgreSQL 10:<p>&gt; Before PostgreSQL 10, putting more than one set-returning function in the same select list did not behave very sensibly unless they always produced equal numbers of rows. Otherwise, what you got was a number of output rows equal to the least common multiple of the numbers of rows produced by the set-returning functions. Also, nested set-returning functions did not work as described above; instead, a set-returning function could have at most one set-returning argument, and each nest of set-returning functions was run independently. Also, conditional execution (set-returning functions inside CASE etc) was previously allowed, complicating things even more. Use of the LATERAL syntax is recommended when writing queries that need to work in older PostgreSQL versions, because that will give consistent results across different versions.<p>I agree that allowing SRFs in the SELECT clause is a wart that should never have been permitted, but I think the PostgreSQL docs do a pretty great job describing both the old behavior and the new behavior that has to balance backwards compatibility with sensibility.<p>(And, indeed, the 9.6 docs have this to say on the behavior of SRFs in the SELECT list: &quot;The key problem with using set-returning functions in the select list, rather than the FROM clause, is that putting more than one set-returning function in the same select list does not behave very sensibly.&quot;)<p>I do think one notable defect with the PostgreSQL docs is that they were designed in a time before modern search engines. They are better understood as a written manual in electronic form. Almost always the information you need is there, but possibly not in the chapter that Google will surface. But there are all sorts of tricks you can use if you update your mental model of how to read the PostgreSQL docs. For example, there&#x27;s an old-style index! [1]<p>[0]: <a href="https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;current&#x2F;xfunc-sql.html#XFUNC-SQL-FUNCTIONS-RETURNING-SET" rel="nofollow">https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;current&#x2F;xfunc-sql.html#XFUNC...</a>\n[1]: <a href="https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;current&#x2F;bookindex.html" rel="nofollow">https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;current&#x2F;bookindex.html</a>')