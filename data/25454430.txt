Item(by='ljm', descendants=None, kids=[25454932], score=None, time=1608202485, title=None, item_type='comment', url=None, parent=25453421, text='The problem I see with hooks is how they replace one set of problems with another, and demand you structure your code in a way to avoid those pitfalls. You know, how to structure conditional code, how to use loops when dealing with hooks, having to think about function object equality, having to supply the functions and variables your callback&#x2F;effect closes over as dependencies (I still don&#x27;t understand why you would do some of that in favour of pulling your callback out of the component)... and for what? For it all to change in another year or so when the JS community starts hankering for another paradigm?<p>Lately when working with all this I feel as if the same code would be simpler and easier to follow if it wasn&#x27;t shoehorned into JS. It&#x27;s like the uncanny valley of functional programming.<p>But more fundamentally, dealing with frontend application code is mentally exhausting in a way I haven&#x27;t experienced before. I feel like I&#x27;m no longer learning Javascript as a language, but just keeping up with the novel abstraction of the month.<p>I should add that I don&#x27;t hate it, and there&#x27;s plenty still to appreciate. Some of it is a joy and it&#x27;s refreshing to work on projects that embrace more functional styles over the typical CRUD and OOP taxonomy construction you get in a typical backend job. Different set of problems once you get away from the typical framework stuff (react, redux, saga boilerplate).')