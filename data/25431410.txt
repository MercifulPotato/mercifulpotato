Item(by='Jtsummers', descendants=None, kids=None, score=None, time=1608047927, title=None, item_type='comment', url=None, parent=25431143, text='I&#x27;ve used it for small-scale concurrent systems and it&#x27;s been useful. I&#x27;ve never used it for large distributed systems as I don&#x27;t build or work on those.<p>Most of the time I choose built-ins that largely handle the normal concurrency problems (once you have a concurrent queue, if you <i>never</i> share data otherwise, a lot of problems are just gone). But in embedded systems that&#x27;s not always an option (either you have to build it yourself or the structure of the hardware doesn&#x27;t really lend itself to it). Sharing data across co-processors can lead to subtle and hard to detect issues. Reasoning about how they communicate via TLA+ (and other systems) can help make these issues tractable and repairable (or prevent them if applied in advance).<p>And learning to reason using TLA+ doesn&#x27;t necessarily mean having to use the full toolkit and run models. Just describing the system at this higher level can make issues in the design apparent (this has been my experience, at least).')