Item(by='qqwy', descendants=None, kids=None, score=None, time=1604766951, title=None, item_type='comment', url=None, parent=25014968, text='They are not equivalent, as Erlang&#x2F;Elixir uses structural typing whereas Haskell&#x2F;ML uses nominal typing.<p>In Erlang you can define the following:<p><pre><code>  equal(X, X) -&gt; true;\n  equal(_, _) -&gt; false.\n</code></pre>\nIn Haskell, the following does not compile:<p><pre><code>  equal x x = True\n  equal _ _ = False\n\n</code></pre>\ninstead, we need to write something like<p><pre><code>  equal x y | x == y    = True\n            | otherwise = False\n\n</code></pre>\nA subtle difference, but in some cases the structural semantics really do make patterns a lot cleaner (shorter without sacrificing readability).\nI think that this style of pattern-matching semantics is a consequence of Erlang&#x27;s roots in Prolog, which works similarly (and not only checks for structural equivalence but even does unification when necessary).')