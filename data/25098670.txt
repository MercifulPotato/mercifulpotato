Item(by='valenterry', descendants=None, kids=[25101262], score=None, time=1605419897, title=None, item_type='comment', url=None, parent=25097155, text='&gt; You can&#x27;t &#x27;think away&#x27; the additional complexity of lifetimes and the borrow checker though<p>Of course you can&#x27;t. But the problem of lifetimes does not go away, not matter if you use statical or dynamic typing. However, in javascript this problem does not exist, so obviously that can&#x27;t be compared to Rust. If you use Rust, then because you _need_ this for performance.<p>&gt; In my opinion, Java without type inference is fine<p>Fair enough, but most people see that very different, hence the unhappiness.<p>&gt; Eh, Rust traits are better than Java&#x27;s interfaces, but you can implement multiple interfaces for your own objects in Java without any wrappers. The issue is extending external objects to support new interfaces.<p>That&#x27;s exactly what I said or at least meant. :)<p>&gt; The error messages for Rust can be much more complex than Java<p>No no, not the error messages that the rust compiler gives you. I&#x27;m talking about error handling that the developer does.<p>&gt; I would say the benefits of Java&#x27;s type system far outweigh the imperfections and tiny costs when compared to a language like JS.<p>I agree, but just because the benefits outweight the problems, that doesn&#x27;t mean people will be frustrated by these problematic parts. And let&#x27;s not call it imperfections. Java is _so_ far away from perfection, that just gives your post a sarcastic touch.')