Item(by='alerighi', descendants=None, kids=[25157155, 25155908, 25155645], score=None, time=1605828149, title=None, item_type='comment', url=None, parent=25154556, text='Correct, but... this is not WSL. This is a VM.<p>Let&#x27;s see this from the opposite point of view: WSL1 is to WSL2 what WINE is to a VM running Windows. Two completely different approaches.<p>The thing that would have allowed the WSL1 to do was to really integrate between Windows and Linux: imagine writing running a Linux command, piping its output in a Windows command to pipe it again in a Linux command. Imagine sending a signal to a Linux process from a Windows process. Or imagine accessing physical hardware from the Linux subsystem. With the WSL2 is impossible to even use a serial port!<p>WSL1 had performance problems. That thing about the filesystem performance could have been the occasion to optimize NTFS and even to add to the NT kernel the support for other filesystem, natively. Or why not add to the NT kernel other Linux functionality, to make them available both in the Linux and Windows subsystems.<p>Of course not everything would have been possible to map on the NT kernel. That is fine. But for most application really the WSL1 was usable.<p>Maybe the real problem with the WSL was only having called it &quot;Widnows subsystem for <i></i>Linux<i></i>&quot;. They should really have made WSP: Windows Subsystem for POSIX. Drop the binary compatibility with Linux requirement and just make it an environment in which you can compile code that uses the POSIX API and interface with Windows. Not having binary compatibility with Linux is not a big deal, thing about it but is what macOS does and nobody seems to care, and users would have created a package manager just like there is brew in macOS to easily install software.')