Item(by='spijdar', descendants=None, kids=None, score=None, time=1605955467, title=None, item_type='comment', url=None, parent=25168596, text='As a 23 y&#x2F;old younger (well, young-ish) dev, it strikes me that this isn&#x27;t anything new. Old commercial solutions since nearly the beginning have been predicated on proprietary solutions specific to some vendor&#x27;s UNIX based OS. HP-UX, AIX, even back to the really early commercial releases of v7 all seem to have a common theme of having that unix core but with a lot of nice features added on, typically with pretty insane and convoluted frameworks. Tru64&#x27;s clustering, AIX&#x27;s management interface, all the competing UIs and management interfaces. All nice features deeply integrated into a proprietary solution as a form of vendor lock-in.<p>To your point, it seems like eventually this ends poorly for the incumbents, when they become too bloated and too difficult to extend or modify, since you have to work around some over-engineered high-availability process clustering to touch anything.<p>In Linux&#x27;s case, I think the kernel itself is actually fine, but the user land is increasingly tightly glued to an increasingly convoluted set of RedHat stacks.<p>I mean, it always has -- RedHat made the modern posix threads library, Linux&#x27;s PAM, and several other core parts, but at least those were pretty modular and &quot;unixy&quot;, by comparison to the monolith being developed now.')