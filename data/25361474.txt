Item(by='theptip', descendants=None, kids=None, score=None, time=1607536815, title=None, item_type='comment', url=None, parent=25351477, text='If you read the &quot;Feral concurrency control&quot; paper I linked above, particularly section 7 on conclusions, they make the case that serializable is the only isolation level that&#x27;s actually safe with naive coding styles on frameworks like Rails and Django which do application-level validation. If you do validation in your application and don&#x27;t use serializable isolation, then you have to be careful about manually locking, OR just be sure that your usage pattern isn&#x27;t vulnerable to the anomalies that you&#x27;re introducing by using a weaker isolation level.<p>If you&#x27;re building a financial ledger, you absolutely must use serializable isolation. If you&#x27;re building a Twitter clone, sure, use something weaker that will gain you some performance.<p>I&#x27;d make the case that we should be recommending the use of serializable by default unless you have a reason why you think it&#x27;s OK to use something weaker, rather than having the default be better-performing-but-unsafe. The sort of concurrency validation errors that you get if you needed Serializable and used Read-Committed instead are really, really hard to reproduce, debug, and diagnose.')