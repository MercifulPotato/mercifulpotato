Item(by='adamkl', descendants=None, kids=[24920186, 24920190, 24927048], score=None, time=1603892112, title=None, item_type='comment', url=None, parent=24915497, text='I spend a lot of time thinking about these sorts of topics (actually, I just taught a 4 hour session yesterday that used most of the terms in this article), working with newer, less experienced developers, and trying to figure how to distill the essence of &quot;architecture&quot; down to something simple that everyone can start with.<p>This is what I’ve started telling people:<p><i>Use mostly functions, try to make most of them pure.</i><p>I think that can get people (even new devs) 80% of the benefits (testability, composability, loose coupling, and the ability to reason about code) of more complicated, prescriptive architectures (Hexagonal, Onion, Ports &amp; Adapters, Clean, etc) with a minimal amount of ramp up.<p>Of course, this isn&#x27;t the solution to every problem (it obviously depends on the domain you are working in, for me its webDev and backends), but I think maybe its a good way for people to start.<p>Edit: Here is a great talk demonstrating that by following a simple functional approach, your code can naturally fall into a “pit of success”:  <a href="https:&#x2F;&#x2F;youtu.be&#x2F;US8QG9I1XW0" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;US8QG9I1XW0</a>')