Item(by='pydry', descendants=None, kids=None, score=None, time=1609257923, title=None, item_type='comment', url=None, parent=25569148, text='Fred Brooks suggests in 1986 that future productivity improvements focus more on:<p>&gt;Exploiting the mass market to avoid constructing \nwhat can be bought<p>In 2020 danluu says that:<p>&gt;In 1986, there would have been no comparable language, but more importantly, I wouldn&#x27;t have been able to trivially find, download, and compile the appropriate libraries and would&#x27;ve had to write all of the parsing code by hand, turning a task that took a few minutes into a task that I&#x27;d be lucky to get done in an hour.<p>IME this demonstrates remarkable prescience by Brooks. The only real difference between Brooks&#x27; hypothetical future where software is assembled from bought components and the one danluu lives in is that the components are, in this case, free.<p>Package managers might seem obvious and necessary today, but I don&#x27;t think they were at all obvious in 1986 (or even in 1996). Fuck, golang didn&#x27;t even think they were necessary in 2009.<p>Also:<p>&gt;Looking at the specifics with the benefit of hindsight, we can see that Brooks&#x27; 1986 claim that we&#x27;ve basically captured all the productivity gains<p>I don&#x27;t believe that this <i>was</i> his claim. He claimed that productivity gains from improved programming language <i>design</i> would be <i>incremental</i> rather than game changing (hence: no silver bullet).<p>Some people probably will argue that there is a 10x difference in language productivity due to language but I don&#x27;t think that is the case. In fact, I think there&#x27;s a class of people who keep getting proved wrong and wrong again about the relative importance of package management ecosystems over &quot;game changing&quot; language features like non nullable types that <i>are</i> incrementally better, but <i>not</i> an order of magnitude better.')