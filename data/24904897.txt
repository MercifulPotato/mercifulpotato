Item(by='dmw_ng', descendants=None, kids=None, score=None, time=1603779684, title=None, item_type='comment', url=None, parent=24904725, text='There is a much better reference somewhere (possibly from Ingres times, or later), but here is Stonebraker describing how PostgreSQL ended up with connection-per-process in 1986:<p>&gt; DBMS code must run as a sparate process from the application programs that access the database in order to provide data protection. The process structure can use one DBMS process per application program (i.e., a process-per-user model [STON81]) or one DBMS process for all application programs (i.e., a server model). The server model has many performance benefits (e.g., sharing of open file descriptors and buffers and optimized task switching and message send-\ning overhead) in a large machine environment in which high performance is critical. However, this approach requires that a fairly complete special-purpose operating system be built. In constrast, the process-per-user model is simpler to implement but will not perform as well on most\nconventional operating systems. We decided after much soul searching to implement POSTGRES using a process-per-user model architecture because of our limited programming\n resources. POSTGRES is an ambitious undertaking and we believe the additional complexity introduced by the server architecture was not worth the additional risk of not getting the system running. Our current plan then is to implement POSTGRES as a process-per-user model on Unix\n4.3 BSD.<p>(THE DESIGN OF POSTGRES, <a href="https:&#x2F;&#x2F;dsf.berkeley.edu&#x2F;papers&#x2F;ERL-M85-95.pdf" rel="nofollow">https:&#x2F;&#x2F;dsf.berkeley.edu&#x2F;papers&#x2F;ERL-M85-95.pdf</a> )<p>There is another reference directly related to Postgres or PostgreSQL that made it even more clear, I expect it was probably later on. In effect it indicated someone involved in the project had strong intentions of getting to adding threading &quot;real soon now&quot;. I&#x27;ll update the comment if I figure out where that&#x27;s from.<p>Threads were still a research thing by the mid 80s, so its absence from such an old design is easy to understand. Pthreads wasn&#x27;t even standardized until 1996, although several unices (e.g. SunOS) already had popular implementations long before that.')