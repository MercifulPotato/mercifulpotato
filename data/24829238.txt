Item(by='pthaine', descendants=None, kids=None, score=None, time=1603131742, title=None, item_type='comment', url=None, parent=24828994, text='Thanks for your comments!\n- homomorphic encryption is much much faster now, so the latency argument against won’t hold much longer\n--&gt; I can see that as being true for private libraries, hopefully this will become reality soon once public libraries integrate GPU or FPGA support<p>- with multi-key FHE, you could replace MPC, without the integration complexity and increased bandwidth cost<p>-&gt; Good point! Multi-key FHE is still pretty tricky to implement, however. Though the research is getting there!<p>- Trusted Execution Environments are not about protecting user data (that’s the purpose of FHE) but rather about protecting the software itself from people having access to the physical machine. An example would be running a sensitive ML model in the cloud: you would want to use FHE to process the user data encrypted, inside an TEE that would protect your model from the cloud vendor.<p>-&gt; It can be and is used for both code protection and user data protection (e.g.,  for authentication)')