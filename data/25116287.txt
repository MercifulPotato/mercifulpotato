Item(by='dnr', descendants=None, kids=None, score=None, time=1605556861, title=None, item_type='comment', url=None, parent=25108271, text='&gt; When that video was made, github CLI was not an official thing, and I have never even heard of a gitlab CLI.<p>I used &quot;hub&quot; back in 2013, so it&#x27;s at least that old. It wasn&#x27;t official, though I&#x27;m not sure why that makes any difference. Searching on google for &quot;gitlab cli clients&quot; shows a bunch, at least some of which have histories dating back to 2013.<p>&gt; You can mark emails with labels though depending on your Email client. The onus is on you.<p>But those are local to you and your client. I&#x27;m talking about labels that are shared state, that the whole project and the public can see. Those are widely used on github for categorization, triage, communicating the stage of the review, etc. They&#x27;re undeniably useful to teams. You can put all that information in English text in email bodies, but then everyone has to read a whole thread to understand the state of things, and there&#x27;s more potential for confusion.<p>&gt; You can assign a review to someone. You literally just CC them on the email.<p>Same thing: how do I assign a reviewer so that everyone can quickly and unambiguously see who is assigned to review that PR&#x2F;patch set? With PR metadata, this is trivial. With mailing lists, it depends on social conventions.<p>&gt; If that is a lot of friction for you, then you probably either have a horrible email client, or don&#x27;t know how to use it.<p>Thank you for insulting my intelligence. I didn&#x27;t say it&#x27;s <i>hard</i>, I said that it adds friction.<p>I&#x27;m not claiming that the web-based PR and review UI works for everyone; obvious email works fantastically well for Linux (though I&#x27;m not convinced something else couldn&#x27;t work even better). I do think it works very well for small to medium size projects (which are most projects, after all).<p>An accurate comparison of the strengths and weaknesses of each model would need to be much more thorough and look at the entire development cycle, for projects of different sizes. I don&#x27;t agree that that video was anything like that. It seemed like a cheap shot, based on one cherry-picked metric (time to submit an initial patch starting from nothing) that&#x27;s not particular representative.')