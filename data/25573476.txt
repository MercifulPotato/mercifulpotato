Item(by='unabst', descendants=None, kids=[25574920], score=None, time=1609268751, title=None, item_type='comment', url=None, parent=25573294, text='You&#x27;re missing the point which is context. If you&#x27;re the accountant, the tax code is essential. HTML is accidental. If you&#x27;re the programmer, then HTML is essential. The outcome of your page is accidental. Accidental is what you have control over. Essensial is what you&#x27;re forced to work with.<p>If you&#x27;re being forced to code in HTML, just as an accountant is forced to work with the tax code, the domain knowledge as provided and exposed as specs, be it HTML specs or the Tax Code cannot be altered. So if the argument is that the tax code is essential complexity for an accountant, then the analogy holds.<p>To an accountant writing an HTML page for their firm or a one page app implementing some accounting feature for clients, HTML is all accidental. They could use anything else. What is essential to the accountant is accounting.<p>But since we&#x27;re talking programming, the situation applied to a programmer: The HTML specs are essential complexity for a web programmer. They must work with it, and cannot work around it. And this is how complexity is passed on through the layers of the system.<p>And with the case of an accountant needing programming, the line of complexity between them is violated all the time. A web programmer hired by an accountant fails to implement good accounting software by being bound by the essential complexities of HTML. The accountant doesn&#x27;t care what cannot be done because of some HTML spec. The web programmer must find ways to work around this through engineering, or compromise. This leads to further accidental complexity.<p>edit&#x2F;addendum:<p>&gt; I whip out web dev<p>The moment you go with web dev, this is the act that now makes HTML specs essential. The only way to escape HTML specs is to use something else, which you cannot do if you&#x27;re already decided on a web app. Just as the only way an accountant can escape the tax code would be to change professions.<p>To align the argument with the original article, if HTML specs are half the web app, then the web app cannot be less complex than, say, half. And the only way to get there is to delete everything you did&#x2F;added which is your page&#x2F;program. Coding complexity can never break the essential complexity barrier, and accidental complexity in the form of your code is always a positive value.<p>edit&#x2F;addendum2:<p>When adding a framework or library to reduce complexity, there must be a pragmatic replacement&#x2F;swap of original essential complexity abstractions. The new library is positive, in that you&#x27;re adding more code, and carries its essential complexity. But when the complexity of, say, jQuery can replace a priori javascript essential complexity, then we can make it out ahead. With the added complexity of replacing complexity.')