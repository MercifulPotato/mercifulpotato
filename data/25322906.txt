Item(by='matfil', descendants=None, kids=None, score=None, time=1607255144, title=None, item_type='comment', url=None, parent=25320835, text='The presence of bugs doesn&#x27;t necessarily indicate useless software.  If tests are failing (or flaky...), that&#x27;s probably something to look at at some point, but that doesn&#x27;t necessarily mean it&#x27;s the <i>highest</i> priority to look at.  In most places where CI gets deployed -- at least in commercial environments -- there seems to be a goal of making test failures a non-maskable interrupt.<p>I did admit this was controversial!  But it fits in with a more general view that there are a lot of tools which make good servants but poor masters.  Auto-builders <i>are</i> a good thing, partly because (as you say) they can help to clarify what is required to make a build, and partly because (especially for dependency-heavy software, which seems to be the norm nowadays) they can help catch things quickly when the dependencies shift beneath you.  Making them a hard gate on releases seems a little too close to making the tooling your master, though.<p>(Somewhat separately, I also worry about CI acts as a hiding place for complexity.  Sometimes it reaches that point where nobody knows how to make a build <i>without</i> the CI tool any more.  Then local testing and debugging becomes difficult.)')