Item(by='plextoria', descendants=None, kids=[24690395, 24689146, 24687999], score=None, time=1601902751, title=None, item_type='comment', url=None, parent=24686527, text='`squash` is a tool and it&#x27;s neither good nor bad; it needs to be applied where it makes sense.  \nThe title is indeed click-baity. It would have been more interesting to read that the bug&#x2F;mistake was caused as a result of squashing. It&#x27;s not the case and I take issue with the way the author describes his commits.<p>The problematic commit is described &quot;Extract CreateTokenValidationParameters method&quot;, without an explanation of why the refactoring is necessary or what problem is it solving. It looks like it is improving code readability, but it doesn&#x27;t go as far as fixing the more glaring issue with global variables. Other commit messages seem to follow the same pattern.<p>In other words, the commit:<p>- has minor code readability improvements<p>- contains no useful message for the future programmer (why is it needed?)<p>- provides no new functional feature&#x2F;improvement&#x2F;business value<p>- is later found to contain a bug<p>I find squash&#x2F;rebase&#x2F;cherry-pick useful when reviewing my work and deciding what should go in the current pull-request. For example, a refactoring might be postponed for later if it is deemed too time-consuming or irrelevant to the current PR. Or, one can squash logically related commits together, add a useful message and merge them separately. The resulting commit log will still be bisect-able.<p>For beginners: there&#x27;s a very good article with tips for Git Commit Messages[0] that helped me have git histories I enjoy reading.<p>[0] <a href="https:&#x2F;&#x2F;chris.beams.io&#x2F;posts&#x2F;git-commit&#x2F;#why-not-how" rel="nofollow">https:&#x2F;&#x2F;chris.beams.io&#x2F;posts&#x2F;git-commit&#x2F;#why-not-how</a>')