Item(by='cogman10', descendants=None, kids=None, score=None, time=1607132906, title=None, item_type='comment', url=None, parent=25309922, text='I actually think there&#x27;s a pretty easy way around this for Google.  They could create a ARM -&gt; RISC-V translation layer.  That works well because RISC-V already has a very limited instruction set.  In order to make things fast, you don&#x27;t need to do a lot of fancy transforms.<p>The issue with doing the same ARM-&gt;x86 translation is the x86 instruction set is vast and to get the best performance requires you effectively use those instructions.  That requires you to merge instructions that you wouldn&#x27;t have merged (think of things like the lea instruction).<p>There&#x27;s less of an instruction impedance mismatch going from ARM to RISC-V.<p>Interestingly, I think going from x86-&gt;ARM or RISC-V would present less of a performance problem.  That&#x27;s because most of the work would be splitting one instruction into many.  The evidence of this is the x86-&gt;IA-64 which resulted in something like a 10-&gt;20% performance loss vs a natively compiled IA-64.')