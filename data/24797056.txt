Item(by='wahern', descendants=None, kids=None, score=None, time=1602817829, title=None, item_type='comment', url=None, parent=24796784, text='Distributed consensus doesn&#x27;t require a leader. The same process used to elect a leader (i.e. change leader state) can simply be used to change state generally. See, e.g., There Is More Consensus in Egalitarian Parliaments: <a href="https:&#x2F;&#x2F;www.cs.cmu.edu&#x2F;~dga&#x2F;papers&#x2F;epaxos-sosp2013.pdf" rel="nofollow">https:&#x2F;&#x2F;www.cs.cmu.edu&#x2F;~dga&#x2F;papers&#x2F;epaxos-sosp2013.pdf</a><p>In fact, for something like what etcd is used for in k8s, as the root and lynchpin of all state, but not direct application I&#x2F;O (pods use their own data stores, and even for cluster management etcd usually just contains pointers to external data), a leaderless architecture makes the most sense. Protocols to choose a leader are latency and throughput optimizations, but the core state for a cluster (members, pod metadata, etc) shouldn&#x27;t require very much state and therefore should be relatively low traffic as compared to most database applications. And as shown in the above paper, for certain scenarios (including, arguably, the k8s scenario) a leaderless architecture can have better latency and throughput, not to mention availability.')