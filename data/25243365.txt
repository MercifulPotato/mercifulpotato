Item(by='tgbugs', descendants=None, kids=None, score=None, time=1606631555, title=None, item_type='comment', url=None, parent=25235516, text='Consider a use case where you need high concurrent write performance and you don&#x27;t want the things you are writing to be accidentally dissociated from the file. If you have to write to a zip file there will be overhead every time you append a new &quot;file&quot; because you have to rewrite the central registry at the end of the file.<p>Basically there is no way to say to you operating system &quot;hey, can I get a no-nonsense, don&#x27;t what to have to come up with some other conventions that will be broken, way to have some additional storage and file system paths that are just for this file so I don&#x27;t have to worry about name collisions?&quot; I already have a perfectly good unique name under which I could stash information, but the posix standard basically prevents me from using that name as a way to safely namespace things that I need per file.<p>However, to your original point I have partially implemented this [0] using zip files on the read side. I treat the internal paths inside the zip file as if they are rooted at the zip file itself. I haven&#x27;t implemented rewriting though.<p>0. <a href="https:&#x2F;&#x2F;github.com&#x2F;tgbugs&#x2F;augpathlib&#x2F;blob&#x2F;master&#x2F;augpathlib&#x2F;zip.py" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;tgbugs&#x2F;augpathlib&#x2F;blob&#x2F;master&#x2F;augpathlib&#x2F;...</a>')