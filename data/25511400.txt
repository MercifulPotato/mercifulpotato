Item(by='amedvednikov', descendants=None, kids=[25513823, 25511615, 25511606, 25513182, 25513896], score=None, time=1608672185, title=None, item_type='comment', url=None, parent=25511347, text='From the home page:<p>V avoids doing unnecessary allocations in the first place by using value types, string buffers, promoting a simple abstraction-free code style.<p>Most objects (~90-100%) are freed by V&#x27;s autofree engine: the compiler inserts necessary free calls automatically during compilation. Remaining small percentage of objects is freed via reference counting.<p>The developer doesn&#x27;t need to change anything in their code. &quot;It just works&quot;, like in Python, Go, or Java, except there&#x27;s no heavy GC tracing everything or expensive RC for each object.<p>For developers willing to have more low level control, autofree can be disabled with -noautofree.<p>Note: right now autofree is hidden behind the -autofree flag. It will be enabled by default in V 0.3.<p>---<p>So yes, for the ~0-10% of objects not freed by V&#x27;s autofree, ARC will be used. We will implement weak references and probably have a simple cycle detector, so pretty much a minimal GC.<p>Unlike in Go or Swift, it won&#x27;t be used on all objects, but only on the small percentage that couldn&#x27;t be handled by autofree.<p>In the YouTube demo I posted, 100% of all allocations in the text editor is handled by autofree.')