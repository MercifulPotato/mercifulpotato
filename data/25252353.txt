Item(by='slx26', descendants=None, kids=[25252364], score=None, time=1606731436, title=None, item_type='comment', url=None, parent=25251965, text='While I don&#x27;t disagree, there might be many other issues:<p>- Frameworks and tools are almost always ill-fitting. You have many features you don&#x27;t need, you lack many features you need. You have dependencies you don&#x27;t want, code that you don&#x27;t know, models that might not match your own (and might not be explained well enough, or might not even be consistent with themselves anyway).<p>- Frameworks and tools are often leaky. They don&#x27;t solve problems perfectly anyway. They substitute the problem of having to develop a custom solution to the problem with having to figure out how to use the tool effectively, plus any problems derived of the shortcomings of the tool itself, which are often harder to solve on a tool you didn&#x27;t develop yourself. The better you want to do something, the more disappointed you become with leaky solutions. And other people leaks are far more uncomfortable than your own leaks.<p>- Some people just want to have control and know what they are doing, even if they need to put much more work on it. Not productive, but more consistent.<p>- Writing your own tools deepens your understanding of the landscape. This is particularly significant in a world where we have hundreds of frameworks and tools, but very few coherent explanations of the context they work on and the problems they really try to solve. We have reached the point where if someone wants to make a non-trivial website, we tell them to learn React instead of sending them to learn how the internet and websites work so they can choose a tool for their needs afterwards. And this piles up and giving coherent explanations of any landscape becomes harder because no landscape is coherent anymore.<p>- Related to the previous, there&#x27;s a certain trend that emerges where the more dependent we become on frameworks and tools, the more the problems in a given scenario are ignored or solved by adding more abstration layers and fancier features on tools, instead of working on the root underlying issues, and the problems become fuzzier. Working on the actual problems by yourself helps you see how much cruft and dirt there is behind even well established technologies... and some of us are masochists and want to know about all that sh*t, because if it remains hidden there&#x27;s little chance to fix it.')