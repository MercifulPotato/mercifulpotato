Item(by='1vuio0pswjnm7', descendants=None, kids=[25757530], score=None, time=1610506739, title=None, item_type='comment', url=None, parent=25752202, text='Surely I will be swiftly corrected by DNSSEC experts and I will dare to use less-than-correct terminology but doesn&#x27;t DNSSEC make DNS more not less centralised.  With DNSSEC, as I have seen it used in practice, a &quot;root&quot; must in effect &quot;approve&quot; of each domainname.  In other words, cooperation from a root is required in order &quot;certify&quot; a domainname as &quot;authentic&quot;.  So if hypothetical internet user wants to serve her own RRs from her own nameserver for her own self-hosted own web resources on the internet, then she has to make sure a &quot;root&quot; approves of her source registry and registrar.  Without the root&#x27;s (indirect) blessing, her domainname is not &quot;authentic&quot; and should not be held in any shared cache.<p>Here is a different idea.  The intent is not &quot;world-takeover&quot; or &quot;winning&quot; any imaginary popularity contest but just a different kind of DNS service, because, well who needs a reason.  Because we feel like it, how&#x27;s that.  The idea is: Start a registry that only allows djb-designed per-packet encrypted DNS to be used.   That is, all persons running authoritative nameservers must follow some rules.  They must publish public keys in subdomains of the nameserver&#x27;s domain.  For an example of how this looks, do an NS query to ianix.com.  All authoritative nameservers in this imaginary registry would be required to offer per-packet encypted DNS.  It would not be that difficult to start something like this at least on a small scale.  People running authoritative nameservers simply need to run a CurveDNS forwarder in front of their preferred authoritative nameserver implementation. The CurveDNS forwarder is a small piece of free, open-source software.  This type of encryption is different from DNSSEC, so this is not a &quot;replacement&quot; or even an &quot;alternative&quot; to that movement.  It is something totally different.  The purpose is not to address risk associated with shared DNS caches (e.g., poisoning and other tricks) as DNSSEC is intended to address, it is not to distinguish an &quot;approved&quot; domainname versus an &quot;unapproved&quot; one by creating some &quot;chain of trust&quot; to a &quot;root&quot;.  The purpose is just to encyrpt DNS packets.  The focus is authoritative DNS, the folks that actually own the web resource, not recursive DNS, third party DNS cache providers, etc.  There are couple of reference implementations of the DNSCurve-enabled cache and one of a dig-like client users would run on their home&#x2F;own networks to send encypted queries and decrypt responses.  This whole system for encrypting DNS has been around for over a decade and IMHO is easily as &quot;battle-tested&quot; as anything DNSSEC.  Does that mean everyone should use it.  No.  But it means anyone could use it.  For no other reason that because they feel like it.<p>The main problem something like Handshake is purportedly aimed at solving, namely centralisation of who controls &quot;the&quot; DNS, is IMO caused by the commercialisation and making a &quot;market&quot; for names.  There is no way anyone is going to solve the centralisation problem by offering a commercial alternative that replays the &quot;Gold Rush&quot; of the first DNS (not to mention all the corruption that followed, culminating in &quot;new gTLDs&quot; for $185,000+).  If we want to level the DNS playing field, then IMO we would have to take the money out of it.  That might mean &quot;vanity&quot; names are not as important.  Who knows, public keys might play a more important role.  I am thinking of those Facebook workers who &quot;brute-forced&#x2F;mined&quot;  some .onion name they thought was more recognisable.  Silly. &quot;Decentralised&quot; would seem to imply more equality across the namespace, not &quot;I snagged the best names before everyone else&quot; (using x kilowatts in the process) or &quot;That name sucks.&quot;<p>Just an opinion.  Good luck with the blockchain.')