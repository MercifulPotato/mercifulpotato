Item(by='simias', descendants=None, kids=[25739801, 25739770], score=None, time=1610405511, title=None, item_type='comment', url=None, parent=25730145, text='Seems awfully complicated, slow and error-prone to use full blown RSA for this. Why not send a challenge token and hashing salt and ask the user to reply with the (effectively one type password) crypto_hash(crypto_hash(salt, password) + token)?<p>On the backend they already have crypto_hash(salt, password), they know the token they sent so they can build the same hash and see if it matches. This way the backend actually never has access to the non-hashed password.<p>The only inconvenient I can see is that you can&#x27;t transparently rehash on login on the backend if you decide to migrate to a different, potentially stronger hash algorithm later. But then again if the worry is that passwords could leak in the backend, using hashes makes it effectively impossible by construction.<p>I guess nobody gets fired for using RSA. But at the same time doing &quot;serious&quot; crypto in JS always feels icky to me.')