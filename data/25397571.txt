Item(by='RobertKerans', descendants=None, kids=[25397615], score=None, time=1607772161, title=None, item_type='comment', url=None, parent=25397358, text='Nope, that is not what I&#x27;m thinking about. B2C applications have different constraints, sure, but that&#x27;s not really anything to do with this.<p>&gt; If you look at the output of many software agencies, most of what they are producing is simple CRUD applications (and some startups do this too, I guess) which probably could be built by the users themselves, if it&#x27;s basic enough.<p>...said every business manager ever. It&#x27;s simple! Let the client configure it! [And normally] let&#x27;s burn an absolute shit-ton of cash building unecessary things!<p>I&#x27;m sorry to be dismissive here, but B2B UIs almost <i>always</i> have to reflect very specific business rules, they require careful turning for the clients. This doesn&#x27;t mean they needs to be complicated, but they will have complexity.<p>If a company <i>allows their client to use a no code framework to build the UI of the product they are selling the client</i> (I stress this is what is being suggested here, I am absolutely not saying that the UI itself cannot be built using prebuilt components), then there is another UI required to underly that, then an API&#x2F;various APIs, etc, inception style. What the company has to build is a general framework to allow a client to use a framework to use the company&#x27;s tool.<p>By analogy, if a business is selling a tool, <i>sometimes</i> yes, it is correct to sell the parts of the tool instead for assembly by the client, but this adds an enormous amount of complexity to the product production and maintenance. More often selling the tool itself is the better option.<p>Other commenters have noted how &quot;no-code&quot; tools will lead to productivity wins in some cases, as it&#x27;s done for all similar tools in the past.')