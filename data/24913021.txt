Item(by='ojnabieoot', descendants=None, kids=[24913251], score=None, time=1603839383, title=None, item_type='comment', url=None, parent=24912513, text='Disclaimer: I am not a domain expert in type theory and my background is algebraic combinatorics, not computer science. I also hate online courses, don’t like collaborative learning, and tend to read books and papers by myself. So I’m not a great source of advice for most people.<p>Unfortunately I don’t have many more suggestions that would be good <i>pedagogically.</i> Benjamin Pierce (who wrote Software Foundations) has another very famous intro book, Types and Programming Languages: <a href="https:&#x2F;&#x2F;www.cis.upenn.edu&#x2F;~bcpierce&#x2F;tapl&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.cis.upenn.edu&#x2F;~bcpierce&#x2F;tapl&#x2F;</a> which is regarded as a “Bible” of type theory for computer scientists. Note: I haven’t personally read this, but I have read the sequel, Advanced Types and Programming Languages. Both books have exercises and most exercises have solutions.<p>Simon Peyton-Jones wrote a very good book, the Implementation of Functional Programming Languages. It is old (1987), but free, a good read, and covers most of the “important” topics without assuming too much background: <a href="https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;publication&#x2F;the-implementation-of-functional-programming-languages&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;publication&#x2F;the-imp...</a><p>For formal verification - there are definitely better-qualified people than me. I found a lot of the source code to CompCert C (a verified C compiler) illuminating: <a href="https:&#x2F;&#x2F;github.com&#x2F;AbsInt&#x2F;CompCert" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;AbsInt&#x2F;CompCert</a> However, it will be difficult to understand without doing Software Foundations first (I still find personally tactics-style proofs in Coq confusing and don’t like Coq as much as Idris or Agda).<p>I am very shy and can’t help you with the online communities :) The type theory subreddit is pretty active and they seem nice.')