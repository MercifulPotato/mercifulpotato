Item(by='nemo1618', descendants=None, kids=[25680456, 25680066, 25680619], score=None, time=1610066849, title=None, item_type='comment', url=None, parent=25655639, text='&gt; The usual list monad is only one of infinitely many ways to turn the List functor into a monad.<p>So simple, and yet this is a point that I think is rarely made clear enough in &quot;monad explainers.&quot; For instance, they almost always talk about &quot;the Maybe monad&quot; -- but this is conflating two things: the Maybe <i>data type</i>, and the Monad <i>instance</i> defined on that type. Propagating &quot;Nothing&quot; is <i>not</i> inherent to the Maybe data type, it&#x27;s just a convenient behavior to have.<p>Talking about &quot;the List monad&quot; is even more confusing for a newcomer. When they hear &quot;the List monad implements a kind of nondeterminism,&quot; it sounds like nondeterminism is a property <i>inherent to lists themselves</i> -- but of course it is nothing of the sort. All Monad instances are, in a sense, arbitrary.')