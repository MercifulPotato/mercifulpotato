Item(by='diggan', descendants=None, kids=[25025194], score=None, time=1604836696, title=None, item_type='comment', url=None, parent=25025084, text='I&#x27;m running NixOS in a VM, trying to evaluate if it&#x27;s worth switching from Arch to NixOS before making the leap.<p>&gt; possibility of all-mighty failures caused by adding the extra layer of abstraction and complexity<p>In the end, I think all distributions ends up with similar layers of abstractions and complexity, mostly regarding packaging, but sometimes also other components.<p>What I&#x27;ve found when using NixOS compared to Arch, is that if I screw up my Arch installation I either need to sacrifice my time to try to fix the screw up (which sometimes adds spending time just learning&#x2F;reading about some concept I don&#x27;t know about) or I need to recover from backups, so I can get back to work.<p>With NixOS screw ups, I simply choose the previous version on boot and I&#x27;m &quot;recovered&quot;. Leads to me getting back to what I was doing faster, but missing the opportunity to learn my own personal stack better. But not every moment needs to be &quot;understand everything 100%&quot;, which in Arch-land, tends to happen, otherwise you continue to screw up.<p>Although I&#x27;m still on the fence of upgrading to NixOS because the OS as an concept + it&#x27;s own language is still not easy to learn, especially for more advanced usage, it&#x27;s getting closer each day to just dump Arch and start using NixOS full time. Mostly because the reproducible nature of the OS.')