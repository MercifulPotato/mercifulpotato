Item(by='RangerScience', descendants=None, kids=[25305746], score=None, time=1607103977, title=None, item_type='comment', url=None, parent=25304677, text='&gt; depending on abstract interfaces rather than concrete implementations<p>That&#x27;s definitely a problem... in Java. I&#x27;ve had to deal with it before (in Java), and I think part of the problem is that people start using that abstraction pattern before there&#x27;s actually multiple potential concrete implementations. In Ruby, I&#x27;ve applied something like this pattern, except all I&#x27;m doing is wrapping the service library to make my own DSL, and it&#x27;s working tremendously well and allowing for excellent testing.<p>And yes. Anything can be overapplied &#x2F; mis-applied, and sure, unit testing might be more susceptible &#x2F; abused in these ways.<p>Essentially, I unit-test my functional code (libraries, etc) and I integration test my OO code (actual features, as the whole feature). It&#x27;s not only a really easy way to test each kind of thing, but enforcing the functional library &#x2F; OO features has led to (IMO) practically perfect code :D')