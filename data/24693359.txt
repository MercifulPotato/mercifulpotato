Item(by='gpderetta', descendants=None, kids=[24695097], score=None, time=1601941704, title=None, item_type='comment', url=None, parent=24693184, text='<p><pre><code>  thread_local x;\n  \n  void foo() {\n    x = 10; &#x2F;&#x2F; x in thread 1\n    foo(); &#x2F;&#x2F; moves this coroutine to thread 2\n    x = 20; &#x2F;&#x2F; might erroneously write to x of thread 1\n</code></pre>\nThe issue with dynamic libraries is that TLS computation is slightly more expensive (as the TLS offset is not statically known) so the compiler is more likely to cache the TLS address computation. So the above function might be more likely to &quot;miscompiled&quot; if is part of a .so translation unit.<p>edit: also yes, forcing inlining off is not guaranteed to disable cross procedure optimizations. At the very least you have to disable function cloning. In fact I see that GCC now has attribute noipa which is probably a better solution.')