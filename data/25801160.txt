Item(by='bonzini', descendants=None, kids=[25801467], score=None, time=1610789186, title=None, item_type='comment', url=None, parent=25797506, text='KVM and QEMU maintainer here.<p>&gt; most stock QEMU-KVM deployments simply run qemu as root with no extra sandboxing or MAC like SELinux&#x2F;sVirt.<p>This is not true. OpenStack uses Libvirt for example, so on Red Hat&#x2F;CentOS systems it <i>will</i> be hardened with SELinux by default. The same is true for virt-manager, which runs as either an unprivileged &quot;qemu&quot; user or as the user that invokes it.<p>Not all the code in QEMU is of identical quality, but the subset that is used by cloud providers is very mature and is also tested in Google&#x27;s open source fuzzing cluster. Thanks to a student from Boston University who came up with some pretty cool techniques, we can cover devices effectively without having to teach the fuzzer about each device&#x27;s registers.<p>&gt; many cloud providers use KVM-the-kernel-module, but an in-house replacement for QEMU.<p>Two of them--certainly they are the big ones, Amazon and Google, but pretty much everybody else is using QEMU. For what it&#x27;s worth, Amazon is also using QEMU on their old Xen-based instance types.<p>Firecracker is the only open source virtual machine monitor that cloud providers use in production apart from QEMU, as far as I know. It&#x27;s a very interesting project and the people behind it have also started rust-vmm, a library of Rust crates for virtual machine monitors and device emulation backends. Several QEMU developers also contribute to rust-vmm, focusing especially on the abstractions needed to avoid unsafe code in virtual machine monitors. There was already an instance last year of problematic unsafe code in Firecracker that wouldn&#x27;t have been there had it used rust-vmm&#x27;s vm-memory crate, and in fact Firecracker has since switched to vm-memory. So there is plenty of collaboration between the authors of various VMMs.')