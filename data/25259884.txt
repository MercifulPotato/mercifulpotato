Item(by='pclmulqdq', descendants=None, kids=None, score=None, time=1606775405, title=None, item_type='comment', url=None, parent=25259575, text='I have usually heard the top-line number as the issue width, not the decode width (so Zen 2 is a 6-wide issue machine).  Most instructions run in loops, so the uop cache actually gives you full benefit on most instructions.<p>On the Apple chip: I believe the entire M1 decode path is 8-wide, including the dispatch unit, to get the performance it gets.  ARM instructions are 4 bytes wide, and don&#x27;t generally need the same type of micro-op splitting that x86 instructions need, so the frontend on the M1 is probably significantly simpler than the Zen 2 frontend.<p>Some of the more complex ops may have separate micro-ops, but I don&#x27;t think they publish that.  One thing to note is that ARM cores often do op fusion (x86 cores also do op fusion), but with a fixed issue width, there are very places where this would move the needle.  The textbook example is fusing DIV and MOD into one two-input, two-output instruction (the x86 DIV instruction computes both, but not the ARM DIV instruction).')