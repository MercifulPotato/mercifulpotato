Item(by='chriswarbo', descendants=None, kids=None, score=None, time=1604693335, title=None, item_type='comment', url=None, parent=25010401, text='&gt; General recursion is equivalent to goto.<p>Yes, but goto requires a whole bunch of machinery in order to make any sense. It (a) needs a notion of time&#x2F;sequencing, (b) needs a notion of statement and (c) needs a notion of labelling.<p>(a) and (b) are often taken as given in imperative programming languages (e.g. C, assembly, etc.), but Haskell has none of them. It&#x27;s hard to ascribe any meaning to &quot;goto&quot; in Haskell; other than some embedded language like ST or something.<p>&gt; It is nicer when recursion can be wrapped up in a higher level combinator (map, fold, etc.) or other even higher level abstraction.<p>I agree, but I was counting those as (indirect) recursion for the purposes of explaining the parent&#x27;s observation.')