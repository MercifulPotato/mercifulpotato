Item(by='mbakke', descendants=None, kids=[25402043], score=None, time=1607697075, title=None, item_type='comment', url=None, parent=25382712, text='One cool feature of functional package managers such as Nix and Guix is that the dependency graphs are entirely transparent and can be inspected programmatically.<p>I wrote a script that lists the number of dependents for each package in Guix by traversing the package graphs:<p><a href="https:&#x2F;&#x2F;gist.github.com&#x2F;mbakke&#x2F;f354272666fbef09c5229f7b853778f1" rel="nofollow">https:&#x2F;&#x2F;gist.github.com&#x2F;mbakke&#x2F;f354272666fbef09c5229f7b85377...</a><p>Running it takes about 16 seconds on my laptop, and piping to &#x27;grep -v bootstrap | sort -rn | tail -n 20&#x27; gives:<p><pre><code>  16695 guile\n  16692 ld-wrapper\n  14686 pkg-config\n  14512 perl\n  14444 ncurses\n  13135 readline\n  13133 zlib\n  13022 libffi\n  12470 xz\n  12448 libunistring\n  12433 openssl\n  12353 bash\n  12050 libxml2\n  12016 gettext-minimal\n  11950 tar\n  11942 bzip2\n  11896 expat\n  11857 tzdata\n  11850 net-base\n  11846 python-minimal\n</code></pre>\n(GCC, glibc and binutils are missing for complicated reasons, but should be up there with Guile)<p>By changing (all-packages) on line 26 to:<p><pre><code>  (fold-packages (lambda (package result)\n                   (if (string-prefix? &quot;python-&quot; (package-name package))\n                       (cons package result)\n                       result))\n                 &#x27;()))\n</code></pre>\nWe get the most popular Python projects:<p><pre><code>  6672 python-setuptools-scm\n  6667 python-nose\n  6662 python-pyparsing\n  6662 python-more-itertools\n  6661 python-wcwidth\n  6660 python-py\n  6660 python-pluggy\n  6660 python-atomicwrites\n  6657 python-six\n  6593 python-mock\n  6587 python-appdirs\n  6586 python-lxml\n  6584 python-filelock\n  6584 python-distlib\n  6583 python-sortedcontainers\n  6580 python-hypothesis\n  6577 python-elementpath\n  6576 python-xmlschema\n  6575 python-pytest\n  6303 python-libxml2\n</code></pre>\nThis approach misses &quot;end user&quot; packages such as browsers and QEMU, but provides some insight into high value targets.<p>For end user packages, Debians &quot;popularity contest&quot; can be useful:<p><a href="https:&#x2F;&#x2F;popcon.debian.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;popcon.debian.org&#x2F;</a>')