Item(by='414owen', descendants=None, kids=[25734020], score=None, time=1610390320, title=None, item_type='comment', url=None, parent=25730411, text='Sure thing.<p>I&#x27;m not sure what your current level is, but I can give some general advice for people that happen upon this:<p>---<p>Haskellers are generally expected to understand most of the typeclassopedia (<a href="https:&#x2F;&#x2F;wiki.haskell.org&#x2F;Typeclassopedia" rel="nofollow">https:&#x2F;&#x2F;wiki.haskell.org&#x2F;Typeclassopedia</a>), don&#x27;t worry about learning it all in one go. I had to read this page many times before I grokked most of it.<p>---<p>Avoid tutorials that overuse analogies. A Monad only adds one operation to Applicative:<p><pre><code>  class Monad m where\n    (&gt;&gt;=)  :: m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\nThis reads as: `m` is a monad if, given an `m a`, and an `a -&gt; m b`, you can construct an `m b`.<p>---<p>It&#x27;s important to be really good at using Monads that support multiple effects, to create little DSLs. If I want a component of my program to support throwing errors, creating a log, and reading an environment, (all purely), I&#x27;d use something like this:<p><pre><code>  type MyDSL\n    = ReaderT Environment\n        (WriterT [String]\n          (Except ErrorType))\n</code></pre>\nThese are monad transformers from the mtl library.<p>Where I work we use free monads instead of monad transformers, but that&#x27;s just an implementation detail, it&#x27;s used the same as a transformer stack.<p>---<p>Create a cool project, Haskell people like languages. When I was interviewing I showed off a tiny lisp-like language implemented in Haskell (<a href="https:&#x2F;&#x2F;github.com&#x2F;414owen&#x2F;phage" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;414owen&#x2F;phage</a>). This was my first non-trivial Haskell project so don&#x27;t judge it too harshly.<p>---<p>Read Haskell Weekly (<a href="https:&#x2F;&#x2F;haskellweekly.news&#x2F;newsletter.html" rel="nofollow">https:&#x2F;&#x2F;haskellweekly.news&#x2F;newsletter.html</a>). It&#x27;s a great source of ideas and knowledge.<p>---<p>A lot of Haskell shops use, or are migrating towards using, nix (<a href="https:&#x2F;&#x2F;nixos.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;nixos.org&#x2F;</a>).<p>---<p>Apply! The Haskell market seems to favor the interviewee. In the end, I had more than one offer, even for my first Haskell job.<p>Good luck!')