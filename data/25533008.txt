Item(by='geofft', descendants=None, kids=[25533496], score=None, time=1608856275, title=None, item_type='comment', url=None, parent=25531685, text='If you follow the link next to that text, it says that they&#x27;re ripping out sync Python using Flask from their monolith and replacing it with async Python using Tornado in a microservice, though some teams are also exploring Go.<p>Which seems like an entirely reasonable way to use Python (no quotation marks needed), and exactly what I&#x27;m advocating - Python is a language where you can ship something today and reimplement it next year, also in Python, for the same engineering effort that you&#x27;d spend doing it once in a more highly structured language. Alternatively, you can reimplement it in another language. You can safely rip out and replace the original Python, because it&#x27;s a language that optimizes for <i>humans</i> both reading and writing it.<p>And just about every place I&#x27;ve worked, business requirements are constantly changing, and the scale and structure of the company (and associated Conway&#x27;s Law implications) are changing, and so code you write today is going to be tech debt in a year <i>anyway</i>. A language that encourages you to write outrippable code and makes it easy to replace it is your ally under these conditions.<p>(Put another way: Python is a language that is readable enough to avoid the <a href="https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2000&#x2F;04&#x2F;06&#x2F;things-you-should-never-do-part-i&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2000&#x2F;04&#x2F;06&#x2F;things-you-should-...</a> trap, which is fundamentally about code that is so complex that a human can&#x27;t figure out all of what&#x27;s going on and the <i>only</i> safe way is to treat the existing code as a relic.)<p>Again, I&#x27;m not saying this is the language for everyone to use for all cases. There are cases where you want to make the code a little harder for humans to read and write so that the computer can help you with things. If that is indeed your use case, go write Java! But I think there&#x27;s plenty of stuff you can call &quot;production-ready&quot; that doesn&#x27;t fit this particular mold.')