Item(by='brundolf', descendants=None, kids=None, score=None, time=1610386692, title=None, item_type='comment', url=None, parent=25732423, text='Type systems are really good for detecting contradictions; they&#x27;re much less good at figuring out which piece should be <i>different</i>. For any given type error, there may be half a dozen different changes to the code that would resolve it in different ways. Type systems often have no real way of guessing the user-intent there. There are loose heuristics, like... an explicit return type is more likely to be intentional (and therefore correct) than the type of the local value that&#x27;s being returned. But I&#x27;m not aware of any formalism around this &quot;ranking&quot; of which types are most likely to be unintentional. Maybe we need one.<p>The only immediate solution I can see is to keep types simple enough that the user can fit the entire relevant type-space in their head (and in the IDE dialog!), so that they themselves can determine which part is actually &quot;wrong&quot; (as opposed to just contradictory).')