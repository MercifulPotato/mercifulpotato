Item(by='simongray', descendants=None, kids=None, score=None, time=1611332771, title=None, item_type='comment', url=None, parent=25872784, text='The qualifiers are relevant here, specifically:<p>&gt; basic application<p>&gt; simple concepts<p>Topological sorting (along with basic graph theory) is something any beginners course on discrete mathematics should already have taught you. You would reach for that in most cases where you need to deal with a graph of dependencies.<p>The other part of the puzzle is about storing calculations, i.e. memoization. This is trivial in my language of choice, but really it&#x27;s not a hard problem to solve in any language. You map function inputs to outputs somewhere in memory and retrieve the results when needed.<p>These techniques are broadly applicable in many domains. To many people, the intuition would be to reach for them directly when they have a task that looks like a graph search, rather than go look for a framework or library that they would then need to read the documentation for and spend time integrating with their code. Sometimes less is more.<p>My point is really just that a lot more people would think about this as a graph or memoization problem than would ever think to go look for a Rust framework. Maybe if their own solution at some point doesn&#x27;t work out, they will start searching for frameworks or libraries.')