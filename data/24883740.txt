Item(by='marta_morena_28', descendants=None, kids=[24883872, 24886896, 24883816, 24884160, 24883956, 24886741], score=None, time=1603598495, title=None, item_type='comment', url=None, parent=24883672, text='It&#x27;s actually even worse than that. Functional programming is on pretty much all accounts FASTER than imperative programming by design. Imperative programming heavily relies on state mutation and branching. FP relies on immutability, purity and streaming. Essentially all those are properties that make code faster&#x2F;parallelizable. Yes, you can usually write SOME imperative form of an algorithm that is faster than its FP counterpart, but generally it will be much less readable and maintainable. The beauty about FP is that you can get readable, maintainable code that is often on par or faster than &quot;good looking&quot; imperative code and also parallelizable. Writing imperative, parallel code is often an absolute nightmare, that any entry level programmer and even experienced programmers will get wrong.')