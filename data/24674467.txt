Item(by='lumost', descendants=None, kids=[24674504], score=None, time=1601756982, title=None, item_type='comment', url=None, parent=24673239, text='First off, thank you for all of the work you&#x27;ve put into Rust!  I think the challenge that you face is that if the problem is CS101 courses, then Rust will always be unfamiliar to the majority of practicing professionals.<p>Cyclic&#x2F;recursive datastructures are common in web services, where one needs to model bidirectional relationships ( just think of friends on a social graph ).  As well as several primitive datastructures such as the O(1) LRU cache.<p>Checking the Rust docs out, a dev who encounters this problem for the first time will eventually need<p>- &quot;Reference Cycles Can Leak Memory&quot; <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch15-06-reference-cycles.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch15-06-reference-cycles.html</a>\n   -- caveat: what if ownership is truly bidirectional?<p>- &quot;unsafe&quot; <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch19-01-unsafe-rust.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch19-01-unsafe-rust.html</a><p>- 5 different primitive lists which don&#x27;t tell you how to make a friends graph: <a href="https:&#x2F;&#x2F;rust-unofficial.github.io&#x2F;too-many-lists&#x2F;infinity-double-single.html" rel="nofollow">https:&#x2F;&#x2F;rust-unofficial.github.io&#x2F;too-many-lists&#x2F;infinity-do...</a><p>- Someone elses attempt: <a href="https:&#x2F;&#x2F;rcoh.me&#x2F;posts&#x2F;rust-linked-list-basically-impossible&#x2F;" rel="nofollow">https:&#x2F;&#x2F;rcoh.me&#x2F;posts&#x2F;rust-linked-list-basically-impossible&#x2F;</a><p>- Careful reading of the LinkedList implementation to see that unsafe is probably the best approach: <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;src&#x2F;alloc&#x2F;collections&#x2F;linked_list.rs.html#38-43" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;src&#x2F;alloc&#x2F;collections&#x2F;linked_...</a><p>I&#x27;m a little biased on this front, when I first picked up Rust I chose to tackle an O(1) LRU cache as a quick learning exercise.  I ended up beating my head against a wall for 20 hours.  However on my current project I&#x27;m analyzing the wikipedia dataset ( another bidirectional structure ).<p>It would be useful to have a canonical&#x2F;standard way to address such programming tasks other than &quot;don&#x27;t&quot; - particulary if the way to address them is substantially different from what someone would have learned in a different language.')