Item(by='Twisol', descendants=None, kids=None, score=None, time=1604133997, title=None, item_type='comment', url=None, parent=24949807, text='&gt; Really you have little choice in how to do things as the current structure dictates your options.<p>I really like this framing. The architecture of the code should reflect the flexible and rigid parts of the domain, and how they interact. A good design will let small changes in the domain become small changes in the codebase -- and large changes in the domain will at least not be arbitrarily larger in the codebase.<p>Software architecture feels like a very code-centric and technical thing -- and it&#x27;s not like it <i>isn&#x27;t</i>, exactly -- but it&#x27;s really driven by a solid understanding of the system into which the software will be placed. Often, the pre-existing system is a bunch of humans, and people who previously interacted with humans will now interact with software. Also often, the pre-existing system is some mix of humans and software. And even if the pre-existing system is pure software, some of the internal or external boundaries will undoubtedly shift.<p>&gt; But itâ€™s really challenging reaching that point.<p>We as a profession need to acknowledge that not everything is &quot;solved&quot; by software, and that we really need people with design experience, human factors experience, and the ability to distill the domain into something that <i>can</i> be addressed by software engineering. I think &quot;reaching that point&quot; is predominantly led by these factors, and <i>not</i> technical excellence in the strict sense.')