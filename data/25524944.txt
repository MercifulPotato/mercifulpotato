Item(by='tialaramex', descendants=None, kids=None, score=None, time=1608782609, title=None, item_type='comment', url=None, parent=25521761, text='Other people responded to your CAA mistake (CAA absolutely shouldn&#x27;t be enforced by anybody else except a CA, even researchers monitoring it for other sites is dubious, though as a research project it isn&#x27;t inherently dangerous like enforcement would be)<p>But let&#x27;s talk about PSKs (pre-shared keys).<p>TLS 1.3 itself doesn&#x27;t care why this PSK is used. It&#x27;s true that today your Web Browser will only use it for resumption, because it offers a significant speed-up in some scenarios on second and subsequent visits.<p>But for IoT applications it is envisioned that a group of devices might share one or more PSKs out of band. Maybe they&#x27;re a factory setup thing, maybe the devices are to be set up in close physical proximity using low bandwidth Bluetooth, then they&#x27;ll build themselves a WiFi network when deployed using PSKs to secure TLS.<p>Browsers <i>could</i> do that, but all the vendors are clear there&#x27;s no way they&#x27;d actually want to do that. What would the UX look like? &quot;Please enter the hexadecimal PSK for the site in this box?&quot;. So today they only use PSKs for resumption.<p>The reason this one feature (PSKs) has two very different purposes is to narrow the security proof work. Mathematicians worked really hard to prove some important things about TLS 1.3 and the more extra different features it has, the less focus can be put on any particular feature.<p>Even as it is they missed the fact that PSKs are symmetric. If Alice and Bob have a single PSK to &quot;authenticate&quot; them and are both capable of serving, then Mallory can trick Alice into thinking she&#x27;s talking to Bob when she&#x27;s actually talking to herself. It&#x27;s a small problem, but the proofs didn&#x27;t cover it, and so it was not spelled out in the TLS 1.3 document that you should worry about this.')