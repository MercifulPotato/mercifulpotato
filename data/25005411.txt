Item(by='peterwwillis', descendants=None, kids=None, score=None, time=1604643601, title=None, item_type='comment', url=None, parent=24999190, text='This is the question that needed to be asked. What are the people building production with your PaaS going to use?<p>First and foremost, infra engineers use generally one tool to build their Infrastructure as Code (Terraform, Pulumi, Ansible, Puppet, etc). This is the heart of their deploys and whatnot, so they need robust tools that integrate with all the different services they use, handle deployment complexities, etc.<p>Second they use a [web] GUI. If you want to prototype something or throw together a quick MVP, you don&#x27;t spend a week fidgeting with a console, you open a GUI and just make it work. If developers have access, they can prototype things very quickly. I also tend to then use Terraformer to spit out HCL for what I&#x27;ve created in the GUI, so I don&#x27;t have to spend hours&#x2F;days fucking around with making Terraform modules just to reproduce what I did in 5 minutes in the GUI. (hey, CLI writers: please don&#x27;t intentionally make your tool a fucking pain in the ass just so your company can make more money off of consulting or whatever your excuse is, because now I resent your company for making my life harder rather than easier)<p>Next comes CLIs. Why are they third? Because you&#x27;re not using them to prototype (see above) and you&#x27;d be using your all-in-one tool for long-lived IaC. The CLIs are used for quick hacks and investigations and the like. And of course they&#x27;re all different, and most of their UXs suck, because the designers of them apparently have never used GNU tools before.<p>Finally come the APIs when nothing else works. Typically scripting something with <i>bash</i> and <i>curl</i>, or Python, Ruby or Node.js for those who aren&#x27;t console cowboys.')