Item(by='brandmeyer', descendants=None, kids=[24788588], score=None, time=1602768734, title=None, item_type='comment', url=None, parent=24785574, text='I <i>love</i> &lt;random&gt;.  Really.  Sure, some other languages make the simple cases a little simpler, but no other system offers up the flexibility and control that &lt;random&gt; does.<p>Lets take PCG&#x27;s author&#x27;s comments one by one:<p><a href="https:&#x2F;&#x2F;www.pcg-random.org&#x2F;posts&#x2F;cpp-seeding-surprises.html" rel="nofollow">https:&#x2F;&#x2F;www.pcg-random.org&#x2F;posts&#x2F;cpp-seeding-surprises.html</a><p>Re: Predictability.  I don&#x27;t care.  Truely.  If unpredicatablity is important, the application must use a cryptographic random number generator.  Those are the <i>only</i> known family that are hard-to-predict.  Valuing un-predictabiltiy from a non-cryptographic PRNG has always been one of PCG&#x27;s demerits in the xoshiro-versus-pcg debacle.<p>Re: Seed_seq&#x27;s problems.  The biases she&#x27;s making out to be catastrophic are really quite small.  In actual scientific monte carlo simulations, they don&#x27;t affect things at all.  I want to know the difference between 10^6 floats generated from the gaussian distribution, one with seed-seq&#x27;s optimally seeded and one with it sub-optimally seeded.  Because the &quot;motivating scenario&quot; isn&#x27;t. You shouldn&#x27;t ever be using a PRNG if all you need is one random number.  You just grab a seed from a strongly-random generator like &#x2F;dev&#x2F;random.<p>The argument about seed_seq failing to be a bijection is completely irrelevant.  You just need it to uniquely select one internal state of MT from the one initial value.  So long each sequence of the first 600-someodd values drawn from it are unique, you&#x27;ve done that.<p>The demonstrated bias in MT&#x27;s initial conditions doesn&#x27;t matter one whit.')