Item(by='Cloudef', descendants=None, kids=None, score=None, time=1603358808, title=None, item_type='comment', url=None, parent=24845899, text='I&#x27;m not sure I agree with the complexity. You can go read CMake&#x27;s and Meson&#x27;s source code and probably agree with me it&#x27;s not very trivial. Sure they can provide you a &quot;cross-platform&quot; build with ease, but it doesn&#x27;t come free. You are  giving away flexibility and it only works when it works. When it doesn&#x27;t work you usually have to employ ugly hacks or your build files start to creep in way more complexity than would be needed with native solution, or even by using a simple Makefile or heck even a shell script. In worst case, you&#x27;ll become a CMake or Meson developer to add that missing functionality, or fix bugs whatever, just to get your thing to build.<p>I also want to point out that the build system isn&#x27;t just for you, it&#x27;s also for the users and packagers. Especially for packagers it&#x27;s important the flexibility is there.<p>I used to use CMake myself a lot way back as well, but eventually got fed up with its problems it always caused (mostly when other people tried to package my projects and there was always some incompatibility or dependencies not being linked correctly, etc...).<p>I also used to think Makefiles are bad, but actually when I sat down reading the GNU Make&#x27;s manual many things clicked with me, and (GNU) Makefiles are actually very good at building stuff and they aren&#x27;t that complex at all. Sure there&#x27;s lots of bad Makefiles around the internet (just like there&#x27;s also bad CMakeLists) the Makefiles are very powerful when written correctly, and most importantly they are very very fast.')