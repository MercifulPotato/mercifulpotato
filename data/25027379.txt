Item(by='nexuist', descendants=None, kids=[25027558], score=None, time=1604857661, title=None, item_type='comment', url=None, parent=25025402, text='An infinite loop as you described however is not really an error condition; in fact this is the premise of the Halting Problem [1] which is not solvable as far as we know. There&#x27;s no way for the media provider to know if the loop will ever resolve and it may just be the case that you have an absolutely massive photo library that takes a lot of time to load. You could argue that they could add some sort of background timer that triggers an error if the provider takes too long to deliver data, but then what should that timeout be? What if the user&#x27;s device is just naturally slow or the photo library is stored on some sort of external storage device (SD card maybe) with awful bandwidth? If your timeout is too low, it will prevent users from legitimately accessing their photo library; if it&#x27;s too high, it ruins the point of having a timeout in the first place.<p>In this sort of scenario the better choice rather than implementing error detection is just fixing the original problem that caused an infinite loop so users don&#x27;t need to fix anything in the first place. I think the reason why debugging&#x2F;resolving issues seems so complicated in modern times is in part because we already did fix most&#x2F;all the &quot;easy&quot; issues from the past generation -- the only remaining issues are extremely hard to catch or, in the case of the Halting Problem you experienced, mathematically impossible.<p>[1] <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Halting_problem" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Halting_problem</a>')