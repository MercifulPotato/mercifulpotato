Item(by='jpfr', descendants=None, kids=[25826842, 25824967, 25822197, 25822077], score=None, time=1610972266, title=None, item_type='comment', url=None, parent=25820457, text='I teach a graduate course in optimization methods for machine learning and engineering [1,2]. Julia is just perfect for teaching numerical algorithms.<p>First, it removes the typical numpy syntax boilerplate. Due to its conciseness, Julia has mostly replaced showing pseudo-code on my slides. It can be just as concise &#x2F; readable; and on top the students immeditaly get the &quot;real thing&quot; they can plug into Jupyter notebooks for the exercises.<p>Second, you get C-like speed. And that counts for numerical algorithms.<p>Third, the type system and method dispatch of Julia is very powerful for scientific programming. It allows for composition of ideas in ways I couldn&#x27;t imagine before seeing it in action. For example, in the optimization course, we develop a mimimalistic implementation of Automatic Differentiation on a single slide. And that can be applied to virtually all Julia functions and combined with code from preexisting Julia libraries.<p>[1] <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLdkTDauaUnQpzuOCZyUUZc0lxf4-PXNR5" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLdkTDauaUnQpzuOCZyUUZ...</a><p>[2] <a href="https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1WWVWV4vDBIOkjZc6uFY3nfXvpaOUHcfb?usp=sharing" rel="nofollow">https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1WWVWV4vDBIOkjZc6uFY3...</a>')