Item(by='lambda', descendants=None, kids=[25566030], score=None, time=1609140322, title=None, item_type='comment', url=None, parent=25553674, text='Huh. That&#x27;s an interesting question. I looked up the original LISP paper (<a href="http:&#x2F;&#x2F;www-formal.stanford.edu&#x2F;jmc&#x2F;recursive.pdf" rel="nofollow">http:&#x2F;&#x2F;www-formal.stanford.edu&#x2F;jmc&#x2F;recursive.pdf</a>), and it looks like the -p convention hadn&#x27;t been established yet at that point, none of the predicates have that suffix in the paper. But it does say this:<p><pre><code>  (LABEL, SUBST, (LAMBDA, (X, Y, Z), (COND ((ATOM, Z), \n  (COND,(EQ, Y, Z), X), ((QUOTE, T), Z))), ((QUOTE, T), (CONS, \n  (SUBST, X, Y,(CAR Z)), (SUBST, X, Y, (CDR, Z)))))))\n\n  This notation is writable and somewhat readable. It can be \n  made easier to read and write at the cost of making its \n  structure less regular.  If more characters were available \n  on the computer, it could be improved considerably.[4]\n  \n  ----\n  [4] 1995: More characters were made available on SAIL and \n  later on the Lisp machines.Alas, the world went back to \n  inferior character sets againâ€”though not as far back as \n  when this paper was written in early 1959\n</code></pre>\nSo at the very least, some of the syntactic conventions of LISP were mostly due to limited character sets at the time.<p>Trying to binary search through history to figure out when the -p convention was introduced, I checked the original Scheme paper (<a href="https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20171201033214&#x2F;http:&#x2F;&#x2F;repository.readscheme.org&#x2F;ftp&#x2F;papers&#x2F;ai-lab-pubs&#x2F;AIM-349.pdf" rel="nofollow">https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20171201033214&#x2F;http:&#x2F;&#x2F;repository...</a>), which has some examples in Scheme as well as implementation code in MacLISP. It looks like the predicate convention wasn&#x27;t really strongly established at that point; in a few places, they use variables with a trailing `?` in the Scheme code, but I don&#x27;t see any use of a predicate convention in the MacLISP implementation code.<p>Going back a bit, I do see the predicate convention mentioned in an Interlisp manual from 1974, but without an explanation of its origin (<a href="http:&#x2F;&#x2F;bitsavers.trailing-edge.com&#x2F;pdf&#x2F;xerox&#x2F;interlisp&#x2F;Interlisp_Reference_Manual_1974.pdf" rel="nofollow">http:&#x2F;&#x2F;bitsavers.trailing-edge.com&#x2F;pdf&#x2F;xerox&#x2F;interlisp&#x2F;Inter...</a>).<p>A MacLISP manual from the same year also mentions the -p convention, but not its origins. So looks like it had been firmly established by 1974: <a href="http:&#x2F;&#x2F;www.softwarepreservation.org&#x2F;projects&#x2F;LISP&#x2F;MIT&#x2F;Moon-MACLISP_Reference_Manual-Apr_08_1974.pdf" rel="nofollow">http:&#x2F;&#x2F;www.softwarepreservation.org&#x2F;projects&#x2F;LISP&#x2F;MIT&#x2F;Moon-M...</a><p>Going back further, the LISP 1.5 manual (second edition, 1965, though the printing was from 1979) has a number of numeric predicates with the -p suffix, but it does not make note of the suffix convention (<a href="https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;lisp15programmer00john&#x2F;page&#x2F;26&#x2F;mode&#x2F;2up?q=predicate" rel="nofollow">https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;lisp15programmer00john&#x2F;page&#x2F;26&#x2F;m...</a> , free registration required). It does use a lot of language discussing &quot;predicate&quot; and use the term &quot;p position of a conditional expression&quot; (<a href="https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;lisp15programmer00john&#x2F;page&#x2F;22&#x2F;mode&#x2F;2up?q=predicate" rel="nofollow">https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;lisp15programmer00john&#x2F;page&#x2F;22&#x2F;m...</a>), so the use of &quot;p&quot; for &quot;predicate&quot; rather than &quot;?&quot; seems to be somewhat well established. LISP 1.5 had a very restrictive syntax for identifiers, they were just alphanumeric.<p>So, I&#x27;m going to say that while it&#x27;s possible that the usage of P for this purpose comes from substitutiong P for ?, all of the sources I&#x27;ve found seem to indicate that it stands for &quot;predicate.&quot;')