Item(by='steveklabnik', descendants=None, kids=[25471718], score=None, time=1608323708, title=None, item_type='comment', url=None, parent=25471365, text='&gt; Most of the time, you want to bias for action<p>Not everyone agrees with this. One of Rust&#x27;s core values is stability, and that involves making sure to not move fast and break things.<p>That said, there is always a balance. This is also why I had &quot;almost&quot; in there. There are a few exceptions in certain cases.<p>This is a significant difference between the Apache and Rust outlooks on things.<p>&gt; But &quot;full consensus&quot; has a problem with scale â€” the more eligible voting members you have, the more likely it is that you get a holdout on some issue.<p>This is true, but you can solve this problem in different ways. Rust takes a federated approach. In the early days, there was only the core team. Eventually, we ran into scale issues. So we broke things out into multiple, smaller teams with full autonomy. This process has continued over time.<p>A lot of the procedural issues you cite only come into effect once you&#x27;ve rejected full consensus. If there&#x27;s no voting, there&#x27;s no need for complex supermajority overrule processes.<p>That being said, I fully agree that a common set of rules is a good thing. There&#x27;s always tension here, because there are pros and cons to uniform rules. We have very common rules for making decisions, but complete balkanization of chat platforms, for example.')