Item(by='maccard', descendants=None, kids=None, score=None, time=1608818642, title=None, item_type='comment', url=None, parent=25524648, text='&gt; But we&#x27;re presumably talking about two types of performance:<p>Agreed, and you only need to look at C++ linkers for proof this. LTCG can take minutes (or even hours) for marginal gains.<p>That said, this entire article is about migrating the development builds and still being painfully slow. The links I shared to esbuild point to building release-able bundles, I.E. &quot;Optimised&quot;. And let&#x27;s be honest, the optimised bundles here (i.e. the output of webpack) aren&#x27;t performing inlining, constant folding, expression simplification, dead code analysis, or anything of the sort, they&#x27;re doing some fairly rudimentary file IO. Only the most invasive optimisations (whole program optimisation) should explain the orders of magnitude of a difference.<p>The reason they&#x27;re slow is because they&#x27;re written in JS, single threaded, with no considerations for performance. As esbuild has proven, rewriting in go with consideration for perf can provide a 100x speedup!<p>&gt; but realistically does it exist right now?<p>Yes, it does it&#x27;s esbuild and I linked to it in my comment above!<p>&gt; That&#x27;s probably a trite&#x2F;obvious argument, but it&#x27;s worth mentioning nonetheless.<p>Honestly it&#x27;s probably the truth but it&#x27;s insane how we&#x27;ve managed to get here!')