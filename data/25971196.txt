Item(by='dgb23', descendants=None, kids=None, score=None, time=1612029198, title=None, item_type='comment', url=None, parent=25970583, text='I don’t quite understand what you’re trying to convey with your example in regards to FP.<p>First of all, both data and functions are first class concepts in the functional paradigm and are not glued together as classes. So you’re not modeling your domain as „account service“ and „customer service“, but rather have data representation of these concepts and functions that query&#x2F;reduce etc on those. In your example that would be a relational model, described as sets of tuples&#x2F;maps, and relational functions do derive new data. There is no need for circular dependence, because your operations are generic over relational data.<p>I agree with the notion that the purely functional approach doesn’t dominate, for good reason. But more and more languages are incorporating FP concepts since about a decade or longer, at least the basic building blocks like closures, immutability and function composition have gained massive traction and eliminate the need for many of the complex patterns in traditional, class based OO.')