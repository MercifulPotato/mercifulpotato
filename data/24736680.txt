Item(by='justinlloyd', descendants=None, kids=[24737148], score=None, time=1602304092, title=None, item_type='comment', url=None, parent=24736571, text='I&#x27;ve developed software for 6502 (the first processor I learned assembly language for, but not the first CPU I programmed at the machine code level), Z80, 6809, 68000 series (x00, x20, x30, x40), a variety of MIPS (R3000, R4000, R10000), ARM and a number of variations on it, x86 and all its variations, T800 Transputers, various 4-bit and 8-bit microcontrollers, and well over a dozen more CPU types over the years.<p>For real world processors, I would say that the 68000 is probably the best introduction to assembly level programming. For a real-world CPU. Lots of registers, usually a flat and easily understood memory map, a clean instruction set, and instructions that have direct parallels to many of the basic operations you would find in higher level languages, e.g. multiply, divide, addition and subtraction of 32-bit numbers, easily understood loops, various conditionals and so forth. Certain early ARM variants would run a close second of &quot;try this out, it&#x27;s easy to understand.&quot; Though even then, I&#x27;d hesitate to introduce someone to ARM programming unless they had a real interest in learning assembly programming.<p>6502 is simple, I agree with that, but moving beyond the most basic of operations takes careful thought.<p>So for an introductory assembly language on a real world processor, I would have someone start with 68K. Once they grasp that, which, if they are a reasonably competent programmer, facile in their language of choice, they should be able to crank out 68K assembly that does useful work in a couple of days. It is possible to then consider the 6502 or Z80 or 6809 as options for a less capable, but certainly more difficult next step in assembly language.<p>I would strongly disagree that 6502 is designed for human readability or that it is the pinnacle of assembly language programming options. For real world processors, I would be hard pressed to rank it in the top 10 of &quot;processor of choice to solve this task because of capability.&quot; Perhaps up to about 1982 it could be considered reasonably competent. But &quot;pinnacle&quot; is not a word I would ever use to describe that CPU no matter how fond my memories are of learning to program it or shipping my first video games on it. The 6502 CPU has a number of shortcomings that were clearly evident in the late 1970s when it was at peak popularity. The one thing it did have going for it was that it was cheap and that it was easy to get going on a board with some supporting chips.')