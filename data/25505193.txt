Item(by='saberience', descendants=None, kids=[25506442], score=None, time=1608636349, title=None, item_type='comment', url=None, parent=25504536, text='This comment shows an extreme naïveté. Just because at your anecdotal example, a monolith, works, it does not mean that it always works. There is a time and a place for every kind of design.<p>There are many different kinds of applications and the number of users isn&#x27;t the only factor when trying to understand the optimal architecture. In many cases you can have lots of users but what the application is doing is relatively simple, especially in terms of the data access patterns, state, etc. At other companies, they might have low numbers of users, but extreme requirements in terms of latency or data integrity (e.g. HFT applications or bank ledgers) Look for example at the requirements of Netflix (obviously lots of users) versus the requirements for Reddit (also lots of users). Both sites have high usage but have completely different use-cases and as such, their architectures will be radically different.<p>I&#x27;ve also worked for a company with insanely high numbers of concurrent users (along with very sensitive latency requirements), and one where I&#x27;m sure performance was more critical than your systems, and we didn&#x27;t use a monolith. There&#x27;s no way that company could operate with a single monolith for the various products. Again, this is just an anecdote, just like yours, and just as meaningless.')