Item(by='rektide', descendants=None, kids=[25005331], score=None, time=1604634317, title=None, item_type='comment', url=None, parent=25004471, text='The only downside is that k3s takes almost half a gig of ram. That does bump up the minimum VPS side a bit. It is overkill, but, in my mind, it is wonderful &amp; greatly liberating overkill.<p>It feels a little silly setting up a webserver the first time with a 45 line yaml file, but as you continue to make your way in the world, kubernetes is just such an amazingly pleasant top-down way of controlling systems, where it&#x27;s so easy to see what you have, to see what is behaving and what isn&#x27;t, and it&#x27;s so easy to talk &amp; share &amp; communicate with other people about what you are doing versus trying to understand some handjammed nonsense a previous sysop scratched together 4 years ago.<p>I&#x27;m rapidly planning out how to extend my Kubernetes life further. I&#x27;ve spent years writing Ansible scripts to automate setting up workstations, but I&#x27;d really like to switch over the bulk of the things I rely on to being more Kubernetes based. For example, I run prometheus&#x27;s node-exporter to monitor the health of my systems. But if the config changes, or if I add a plugin, or if I start using a new laptop, I need to go re-run the script, and any other scripts. With Kubernetes, I can create a daemonset and it&#x27;s fire and forget. It&#x27;ll run on every node, and any changes I make will get applied to all nodes, whenever the node comes online or joins. Also my prometheus server wont need to be manually updated to point to these nodes when they get added.<p>Quick note: K3s embed kubectl and helm in it; the install script symlinks helm and kubectl to the k3s binary. Also crictl for the container runtime tool. If you ask for k3s, you get these other things.')