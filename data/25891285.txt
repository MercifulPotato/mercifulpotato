Item(by='natmaka', descendants=None, kids=None, score=None, time=1611488811, title=None, item_type='comment', url=None, parent=25890930, text='&gt; may be oflags=direct is faster?<p>oflag=direct does direct I&#x2F;O =&gt; copied data won&#x27;t go into the buffercache.<p>On Linux search for &#x27;O_DIRECT&#x27; in the open(2) manpage.<p>oflag (for output) and iflag (for input) are indeed useful.  During&#x2F;after a massive non-&#x27;direct&#x27; copy a system running other processes which benefit from data in the buffercache may crawl if the system, while copying, replaces some of it by the copied data, then has to re-read it.<p>In other terms this seems adequate when copying data which will not be, after the copy, soon read by any process.  A raw filesystem image is a good candidate.<p>As usual YMMV.  If most of the data to be copied already is in the buffercache or if it will occupy some unused part of the core memory... such optimization is useless.  However in most cases (on most adequately-dimensioned non-idle systems) &#x27;O_DIRECT&#x27; induces less systemwide load than cp, cat, pv(...) when copying a large set of data if most of it will not be, then, immediately read by anything.<p>Other tools (cp, cat, pv...) just cannot easily work in &#x27;O_DIRECT&#x27; mode.  Using some trick to enable it thank to a local version of openat() and LD_PRELOAD (which calls openat in O_DIRECT mode), albeit possible, isn&#x27;t realistic in most contexts.<p>$ cd ~&#x2F;tmp<p>$ strace -e openat dd if=&#x2F;etc&#x2F;hosts of=useless.tmp count=1 &gt;&amp; nodirect<p>$ strace -e openat dd if=&#x2F;etc&#x2F;hosts of=useless.tmp iflag=direct oflag=direct count=1 &gt;&amp; direct<p>$ diff direct nodirect<p>5,6c5,6<p>&lt; openat(AT_FDCWD, &quot;&#x2F;etc&#x2F;hosts&quot;, O_RDONLY|O_DIRECT) = 3<p>&lt; openat(AT_FDCWD, &quot;useless.tmp&quot;, O_WRONLY|O_CREAT|O_TRUNC|O_DIRECT, 0666) = 3<p>---<p>&gt; openat(AT_FDCWD, &quot;&#x2F;etc&#x2F;hosts&quot;, O_RDONLY) = 3<p>&gt; openat(AT_FDCWD, &quot;useless.tmp&quot;, O_WRONLY|O_CREAT|O_TRUNC, 0666) = 3<p>Moreover &#x27;dd&#x27; has many options without equivalent in most other readily available tools.')