Item(by='exikyut', descendants=None, kids=None, score=None, time=1611572924, title=None, item_type='comment', url=None, parent=25898243, text='This is both an awesome story and IMHO a great example of why &quot;scalability&quot; and &quot;future-proof design&quot; and object-oriented-everything-successfully-talks-to-all-the-stuff-that-hasn&#x27;t-been-written-yet are not the be all end all.<p>My beef: the chances that someone setting up that demo would have gone &quot;wait, hang on, where is this actually going?&quot; would IMO have been <i>significantly</i> higher in a pragmatic&#x2F;imperative&#x2F;monolithic design context, because that detail would have been within the scope of consideration of the application itself. CORBA just makes that sort of thing disappear into... *<i>gestures at everything and nothing</i>*<p>The whole OOP notion of normalizing components and the connections between them is just a software encoding of bureaucracy meeting the human physiological response to Dunbar&#x27;s number.<p>It&#x27;s kinda sad that &quot;let&#x27;s build the perfect object-oriented communications system&quot; can, when squinted at from the right angle, sometimes look like The One Last Thing We Will Ever Need To Do With A Computer To Build The Good Parts Of Skynet - all we get is (for want of a better word) institutionalization instead. And as the domain-specific semantic significance of discrete pieces of information are normalized^H&quot;abstracted&quot; away, it becomes extremely hard to regroup that significance into that mental place where we&#x27;re able to subconsciously consider and weigh things up very effectively.<p>I wonder what the business equivalent to OOP is?')