Item(by='hyperpape', descendants=None, kids=None, score=None, time=1602254804, title=None, item_type='comment', url=None, parent=24708472, text='It seems to me that whether the distinction this article makes is necessary depends on what angle you view the situation from.<p>When looking at how you introduce technical debt, it matters a lot. The kind of technical debt Cunningham talks about is inevitable with any kind of iterative development. In contrast, the shortcuts, hacks and mistakes that normally get called technical debt can be minimized by taking some time up-front.<p>But from the perspective of paying down technical debt, I&#x27;m not sure it matters as much. The code has features that will continue to slowly cost you time and energy until you fix them. It doesn&#x27;t matter why they were introduced.<p>The author&#x27;s point that Cunningham&#x27;s form of technical debt won&#x27;t appear in any kind of static analysis is still a nice observation.')