Item(by='mercer', descendants=None, kids=None, score=None, time=1603971918, title=None, item_type='comment', url=None, parent=24929323, text='&gt; My experience is that LiveView is fine for all but the last use case.\n&gt;&gt; I wouldn&#x27;t want to impose a 50-500ms+ delay on someone to show a menu drop down or a tooltip or most of the other things listed out.<p>It&#x27;s basically a UX standard that a tooltip only shows up after a few seconds, so that strikes me as a particularly bad example. That said, sure, if instant tooltips are important, a tiny bit of js and a specific class name in your markup would solve it.<p>&gt; With LV everything involves a server round trip. That&#x27;s great for when you need to make a round trip no matter what (which is often the case, such as updating your database based on a user interaction), but it creates for very unnaturally sluggish feeling UIs when you use LV for things that you expect to be instant.<p>Yeah, I do agree on that. While I feel using a tooltip is a bad example, in practice I wouldn&#x27;t implement tooltips or menus in LiveView. Those would just be solved via some CSS trick or some plain old JavaScript.<p>&gt; LV feels amazing on localhost but the internet is global. I still think it&#x27;s worth minimizing round trips to the server when you can, not because Phoenix and LV can&#x27;t handle it but because I want my users to have a good experience using the sites I develop.<p>I&#x27;ll give you that generally I wouldn&#x27;t use LV for tooltips and popups. But in part because those are really easy to solve without it.<p>But for &#x2F;so&#x2F; much of the stuff involved in a SPA the latency has not been a problem in practice.<p>Consider tabbed content. Sure, I could make it all &#x27;instant&#x27; by preloading the various bits of content and writing js to switch between these bits. But I can avoid that entirely by preloading those bits in my templates and using LV to switch&#x2F;update classes. The tiny latency downside is worth the upsides: being able to update the content in those tabs live with no extra code (no API calls, no client-side frameworks, and server-side rendered as a nice bonus!).<p>My general approach is that I use LV as a default, and then use the &#x27;Hook&#x27; system and some custom JS when latency is a concern. In practice that doesn&#x27;t amount to much. So it&#x27;s not a silver bullet, but it simplifies so much of what a typical SPA does.')