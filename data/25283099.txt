Item(by='calzone', descendants=None, kids=None, score=None, time=1606951004, title=None, item_type='comment', url=None, parent=25266287, text='<p><pre><code>    Location: Southern New Mexico\n    Remote: Yes\n    Willing to relocate: Yes (conditionally)\n    Technologies: HTML&#x2F;CSS&#x2F;JS, ES6, TypeScript, React, Redux, webpack, Git, Shopify\n    Résumé&#x2F;CV: https:&#x2F;&#x2F;quxbaz.github.io&#x2F;resume&#x2F;\n    Email: davidy889@gmail.com\n</code></pre>\nI am looking for a position as a mid-level or senior front-end engineer. I have 6+ years of experience working with various levels of responsibility as a front-end dev. For the last 3 years I&#x27;ve worked as a woodworker and programmer for my own company which has instilled in me the idea that there is a real cost and consequence to shallow decision making.<p>I believe I have enough maturity as a developer to balance the cost of writing maintainable software with the need to write effective software, fast. I understand software is inherently complex, and if neglected, tends to devolve into something very difficult. I also understand businesses and companies operate with limited funds, and that failure and collapse are always very real possible outcomes, and my own decisions as a developer can contribute to important outcomes.<p><i>I&#x27;ve been thinking about</i>... The nature of complexity in software. What is the categorical difference between a program like &quot;grep&quot; or &quot;gzip&quot; and a program such as &quot;LinkedIn&quot; or &quot;Facebook&quot; that leads to such a stark difference in complexity. How do we organize a program like &quot;Photoshop&quot; such that it operates with the constrained complexity of something closer to &quot;curl&quot;. How can we apply functional programming concepts to a domain that is largely event-driven and mobilized by effects? How can we reduce excessive &quot;wiring&quot; between components and increase modularity? How do we balance the need for &quot;correctness&quot; (typing, tests, refactoring, experimentation) with the need to deliver a product within limited constraints?<p><i>I describe myself as</i>... Easygoing, reliable, flexible, adaptable, and a clear communicator.')