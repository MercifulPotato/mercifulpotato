Item(by='Cthulhu_', descendants=None, kids=[25032649], score=None, time=1604909861, title=None, item_type='comment', url=None, parent=25032454, text='I think for a lot of companies that would be an instant turn-off, especially if they&#x27;re still starting up.<p>Besides, it would have to be a lot more formal; another commenter mentioned the Unreal Engine, which states something to the tune of &quot;free to use until you earn over X, then you pay us Y% of your revenue&quot;.<p>Cynically, open source libraries need to use the err, hook-and-sinker approach? Be really good at bootstrapping a company or part thereof, then when they have buy-in, start charging. It&#x27;s what Unreal and (I think?) Unity do, it&#x27;s what Slack did (really successfully, in a lot of places where it was introduced it was snuck in the back door by employees, used for a couple of months until the restrictions became too much, then the company started to pay for it; I&#x27;ve never seen &#x27;grassroots&#x27; software deployment like that before and I&#x27;m impressed).<p>But it&#x27;ll be difficult to pull off fully without the software being as-a-service or DRM things.<p>I wonder if the package manager systems could play a role in that. Require you to register your application at e.g. NPM, then every time an `npm install` is done, keep track of it. If usage does not decrease, start charging for things.<p>One could also consider an alternative, compatible package manager; an open source publisher could opt to only push to and promote that one. The package manager charges for use, and pays package maintainers relative to usage.')