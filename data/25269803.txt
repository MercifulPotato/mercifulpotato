Item(by='wgjordan', descendants=None, kids=None, score=None, time=1606856228, title=None, item_type='comment', url=None, parent=25266992, text='Here&#x27;s my attempt to summarize what this service actually does, after reading the documentation in more detail:<p>Proton is an opinionated, &#x27;self-service&#x27; application CI&#x2F;CD workflow built on top of CloudFormation (for now, however it appears intentionally designed for future expansion).<p>The service defines separate workflows for two distinct teams in an organization, the &#x27;Platform Team&#x27; and &#x27;Developers&#x27;.<p>The Platform Team publishes two types of &#x27;Template Bundles&#x27; (&#x27;Environment&#x27; and &#x27;Service&#x27;) for self-service usage by Developers:<p>- &#x27;Template bundles&#x27; consist of a stack template (CloudFormation yaml that gets passed through a Jinja template filter), a schema file (defining inputs and outputs), and a manifest (metadata specifying the template language [CFn] and rendering engine [Jinja], intended for future expansion).<p>- &#x27;Environment&#x27; templates define the set of shared resources and policies that Services are deployed into (e.g., VPCs, clusters, and shared load balancers or API Gateways);<p>- &#x27;Service&#x27; templates define the AWS resources specific to the service (e.g., Lambda functions, ECS tasks, associated IAM roles, etc), Service bundles also include a separate &#x27;Pipeline&#x27; template which defines a separate set of resources (e.g., CodeBuild Projects + CodePipeline Pipelines) used for building&#x2F;testing&#x2F;deploying instances of the service.<p>Developers then consume these template bundles for self-service deployment of CI&#x2F;CD pipelines for their applications. First they create an Environment from a published Environment template, then create Services (containing one or more Service Instances) in an Environment from published Service templates. When a Developer creates a Service they connect it to their code repository, so new commits trigger the service pipeline to build+deploy the application code.<p>Finally, the Platform Team maintains its template bundles over time by publishing new minor&#x2F;major revisions, and Developers manually opt-in to these version updates for their deployed Environments&#x2F;Services.<p>The service also provides some curated template bundles (for Lambda and Fargate-based services), which is helpful because there&#x27;s a ton of boilerplate in wiring up all of these parts together.<p>Overall, Proton seems to occupy a similar space as Service Catalog (admin-curated CloudFormation stack templates for self-service deployment by developers), but it provides a more managed, opinionated workflow with a shared Environment stack and separate CI&#x2F;CD pipeline stack for each Service. Seems like an interesting attempt to standardize a bunch of these elements that go into a common use-case of CloudFormation-managed CI&#x2F;CD pipelines for self-service application development.')