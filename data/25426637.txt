Item(by='Veedrac', descendants=None, kids=None, score=None, time=1608002998, title=None, item_type='comment', url=None, parent=25426400, text='&gt; Except, you know, the whole point of VLIW<p>It&#x27;s really indicative of the problem I&#x27;m talking about that so many people think the options are either a standard, Intel Core-style OoO or Itanium-style VLIW. Not only is VLIW a massive range of potential things, and Itanium is not the natural implementation of it, but I never even said we should go with VLIWs! I&#x27;m personally more enamoured with CG-OoO style hierarchical reordering, though were rewriting the world possible I&#x27;d do something that exposed more of that to software (probably microthread style).<p>&gt; Provide real examples of how Itanium could have been done better.<p>Although Itanium seems like a dead-end strategy to me, three things it got really wrong were:<p>* software data misprediction recovery,<p>* overly large register files,<p>* compiler target locks in uarch decisions.<p>The Mill is sort of what Itanium would be with all the rough edges sanded over, though it&#x27;s sort of a moot point since the Mill will never exist outside of talks.<p>Again, static schedules aren&#x27;t the approach I&#x27;d advocate for, since there are some things they just can&#x27;t do.')