Item(by='gampleman', descendants=None, kids=None, score=None, time=1607427819, title=None, item_type='comment', url=None, parent=25322656, text='One issue that&#x27;s been on my mind is how to actually fund a new programming paradigm. As far as I can tell there are the following options:<p>1. Start a business and seek investment (examples: Unison, Dark). This is tricky since programming environments are hard to monetise (all the competition is free), and the investment is quite large (you need a great team working for many years to maybe make something good enough you can actually attempt to charge for it).<p>2. Do it as a hobby project (examples: many of the small PLs nobody uses in production). This is hard because it takes a LOT of work to just get a good programming language, and then you need to also produce great tooling, a decent number of good libraries, amazing learning materials, etc.<p>3. Academia (examples: Haskell, Idris, Elm, ...). This can work, but generally the focus will need to be on some academically interesting problem. But a lot of what it takes for a language to succeed is a lot of down to earth engineering, which academic positions aren&#x27;t generally great at (i.e. it took Haskell about 20 years to start being somewhat successful outside academia).<p>4. Corporate sponsorship (examples: Elm, C#, Swift, ...). This generally needs alignment between the language and the corporation&#x27;s goals. This typically limits the amount of radical inventions you can make, as well as how freely you can pivot to new ideas.<p>Fundamentally none of the above are readily useable for radical reinventions, but more for incremental improvements.')