Item(by='StefanKarpinski', descendants=None, kids=None, score=None, time=1603228567, title=None, item_type='comment', url=None, parent=24841811, text='The core problem with class-based object orientation is that methods go <i>inside</i> of the type instead of being added externally. That means everyone has to agree on what methods can be called on a class or they have to subtype it, which sounds harmless, but is actually a big problem when what you really wanted to do was just define a new method for an existing type. My best attempt at explaining: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=kc9HwsxE1OY" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=kc9HwsxE1OY</a><p>There&#x27;s also the issue that one sometimes needs to specialize generic operations in generic algorithms on something other than the receiverâ€”sometimes even on more than one of the arguments. Single dispatch forces you to use something slow and awkward like double dispatch in cases like this. And that&#x27;s assuming the person who wrote the generic code anticipates the need for specialization! If they don&#x27;t allow for it, then you&#x27;re just stuck. With multiple dispatch, you can just define the method you need the specialization for and you&#x27;re done.')