Item(by='mjburgess', descendants=None, kids=[24846676], score=None, time=1603267350, title=None, item_type='comment', url=None, parent=24845514, text='It has nothing to do with it being interpreted (this is a common misidentified issue with dynamic langs).<p>The fundamental issue is that python is a pointer machine: everything requires a dynamic lookup in memory.<p>Eg.,<p><pre><code>    x = [1, 2, 3]\n\n    len(x)\n\n</code></pre>\nHere `x` is an actual string in memory which is a key in a locals() dictionary which holds values. (cf. with C where it is just a memory address).<p>Likewise the list is a list of pointers (not a sequential array). And its heterogenous, ie., the contents can be of any type.<p>Likewise `len` is a string into a dictionary of functions which has to be looked up.<p>etc.<p>The whole thing is many levels of indirection. Applying an operation to a value (eg., even x + y) requires jumping around the memory of the machine many times.<p>This is necessary, in general, to deliver on the dynamic lang. features python provides.<p>Julia solves some of these issues by using static type information to ditch this dynamic behaviour. My suspicion is that python can follow a similar path (eg., above, x should be compiled to a static homogenous <i>array</i> of ints).')