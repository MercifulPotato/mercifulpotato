Item(by='rrss', descendants=None, kids=None, score=None, time=1610818954, title=None, item_type='comment', url=None, parent=25803183, text='I think you&#x27;ve misunderstood my comment. Obviously I am not arguing that apple doesn&#x27;t know what they are doing.<p>The article suggested that ARM announced that architecture licensees can add instructions to ARMv8-A, which isn&#x27;t true, so I posted a comment saying that. The point isn&#x27;t that Apple can&#x27;t do this, it&#x27;s that this situation seems to be out of the ordinary, and therefore even more interesting than the article indicated.<p>Clearly Apple can do this because they did, and I&#x27;d like to know what kind of terms Apple has, but I doubt that info will ever be public.<p>Since you&#x27;re interested in going through my comment history, you can see that I made a (incorrect) comment in which I said AMX was probably an out of core accelerator, and then I had an interesting exchange with &#x27;my123 in which I learned that I was wrong and AMX really is a set of CPU instructions.<p>&gt; Further, you seem to be misunderstanding ARM compliance. If Apple has 100% coverage of the ARM test suite<p>You&#x27;re assuming the ARM architecture has undefined behavior or entirely implementation defined behavior for unused opcodes, which is not generally true. The behavior of raising illegal instruction exceptions or whatever is mandated by the architecture.<p>&gt; And the thing about the embedded processors is for low level subscribers, with a built-in mechanism for decoding the extension and delegating it to the custom block. e.g. stock cores, low license. Apple is using neither stock cores or a low license.<p>This was my point, yes. The announcement of arm custom instructions is irrelevant to AMX, but the article said otherwise.<p>Yeah, you really got me here. I&#x27;m interested in watching Apple extend the architecture after ARM has aggressively defended their ownership and controlled fragmentation for decades, and I&#x27;m curious if it really is &quot;ARM, shut up and look at our market cap, Love Apple&quot; and Apple can take this as far as they want, or, if not, what kind of rules ARM has made for Apple (e.g. don&#x27;t document the instructions or include them in public toolchains). When people say things that suggest Apple is not doing anything out of the ordinary (stuff like &quot;lol any architecture licensee can add instructions&quot;, or &quot;Having additional instructions -- you know, being an architectural licensee&quot;), I point out that has not been true.')