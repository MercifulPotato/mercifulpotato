Item(by='LeonidasXIV', descendants=None, kids=None, score=None, time=1605532558, title=None, item_type='comment', url=None, parent=25108320, text='&gt; Treating unicode as something optional was fine for early 2000s, but it&#x27;s really not fine today. Most user facing applications need first class support for internationalized strings much more than other stuff like Big_int that&#x27;s actually implemented in Ocaml stdlib.<p>This is certainly a valid argument, but honestly most languages handling of Unicode is really poor to the point where I actually prefer OCaml&#x27;s not handling it since then I can use dbunzli libraries and get stuff to work correctly. Just try reversing a Unicode string and you&#x27;ll see all kind of languages &quot;with Unicode support&quot; fail miserably, e.g reversing ðŸ‡ºðŸ‡¦ into ðŸ‡¦ðŸ‡º.<p>Go outside the BMP and see how nearly nobody has bothered to implement proper support for Unicode glyphs, let alone word boundaries etc. Swift might be one of the exceptions but outside of that? Bummer. Bonus points to Python 3 for breaking compatibility because of Unicode and then doing it wrong anyway.')