Item(by='pron', descendants=None, kids=[25305238], score=None, time=1607081970, title=None, item_type='comment', url=None, parent=25300233, text='&gt; It does nothing for you if you have computationally intensive tasks and want to keep all processor cores busy.<p>I would argue this isn&#x27;t concurrency at all (the job of juggling mostly independent tasks, and scheduling them to a relatively small number of processing units), but parallelism (the job of performing a single computational task faster by employing multiple processing units), and exactly the job of parallel streams.<p>&gt; It doesnâ€™t help you with user interfaces that use a single event thread.<p>It might. Loom allows you to plug in your own scheduler, and it is a one-liner to schedule virtual threads on the UI thread:<p><pre><code>    var uiVirtualThreadFactory = Thread.builder().virtual(java.awt.EventQueue::invokeLater).factory();\n</code></pre>\nAll threads created by this factory will be virtual threads that are always &quot;carried&quot; by the UI OS thread. This won&#x27;t currently work because each of those threads will have its own identity, and various tests in the UI code check that the current thread is actually the UI thread and not any thread that is mapped to the same OS thread. Changing these tests is something the UI team is looking into.')