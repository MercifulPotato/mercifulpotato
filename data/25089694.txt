Item(by='marta_morena_28', descendants=None, kids=[25090985, 25090370, 25090060, 25090944, 25090776, 25090812, 25090461, 25090160, 25090945, 25090474, 25089737], score=None, time=1605319669, title=None, item_type='comment', url=None, parent=25085276, text='&gt; Two decades ago, it was widely argued that dynamic programming languages were more productive because you didn&#x27;t have to spend time dealing with type signatures. The only reason, then, to use a statically typed language, was for better performance.<p>This boggles the mind. I am using typed languages since I can think. I never once recall an instant where I was saying &quot;Uh uh, this type signature is driving me craaazy&quot;. Like seriously, I don&#x27;t even know what articles like this are talking about. Types are not your enemy, they surface issues early. Yeah you can whip something up in Python and JS, but ultimately you DO have to deal with types, except now you don&#x27;t have a compiler doing this job anymore, you have to do it yourself... Somehow.<p>The only thing typed languages need is something like `dynamic` from C#, which automatically boilerplates untyped access with reflection, without cluttering your code. I.e. duck typing is one of the things some languages like Java need to get better at. But the situations in which I yearn for this are far and few between.<p>You don&#x27;t think about types, unless you are new to typed languages... It&#x27;s really that simple. I never have to think about types. Perhaps its subconcious, but its definitely not slowing me down, its making things faster through robust refactoring, auto-complete and welll doh: TYPE SAFETY!')