Item(by='whizzter', descendants=None, kids=[24899581], score=None, time=1603736500, title=None, item_type='comment', url=None, parent=24898175, text='What the GP is referring to (Misc.Unsafe) is basically going back to manual pointer reads&#x2F;writes (IE writing more or less C code in Java), the benefit is you get C speed&#x2F;memory layout&#x2F;cache-locality but with the downside of writing it in a less suited language (Java).<p>HOWEVER If you DO _allocate_ much then 1TB seems like a great choice since GC pauses are killers w.r.t. latency in comparison to cache issues. A cache line (often 64 bytes) would probably only hold at most a couple of Java objects  (minimum is probably like 16 or more bytes for each small object) so cache locality won&#x27;t be improved much by a GC (Yes, the G1 GC in newer JDK&#x27;s does neighbour compacting iirc so you get a little cache locality but only if the patterns were bad from the start, but avoiding GC entirely is better)')