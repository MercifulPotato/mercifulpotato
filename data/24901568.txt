Item(by='mjg59', descendants=None, kids=[24903164], score=None, time=1603747224, title=None, item_type='comment', url=None, parent=24900586, text='Bootguard isn&#x27;t UEFI Secure Boot, and it works with Intel PTT in that the bootguard data is measured into the TPM. The signing keys used for Bootguard aren&#x27;t in the TPM. Bootguard only protects system firmware, it does nothing to protect the ME firmware (which is where PTT lives). The flow is:<p>1) You apply power. The ME is powered up and reads its firmware out of flash. Most components of this firmware have signatures verified[1] and the ME then boots\n2) The ME examines the state of the fuses in flash in order to determine whether to impose a Bootguard policy. If so, it verifies the signature of the firmware bootblock against a key fingerprint that&#x27;s been blown into the chipset fuses. Depending on policy, a failed validation will either block the system from booting, allow the system to boot but cut power after 30 minutes (in order to allow remediation to occur) or do nothing. If the policy specifies that measurements should be performed, a measurement will be generated and pushed to the TPM (PTT, if you&#x27;re using it)\n3) The system firmware bootblock (running on the system CPU) will perform validation of the rest of the firmware, generating additional TPM measurements. The TPM is a passive component here - no key material is stored in the TPM, and the TPM cannot prevent boot proceeding if the signatures don&#x27;t match. It&#x27;s up to the firmware code itself to do that.\n4) Once the firmware is up and running, it&#x27;ll end up loading a bootloader. If UEFI Secure Boot is enabled, the signature on the bootloader will be verified against a set of permitted certificates stored in a UEFI variable in flash. The bootloader will be measured into PCR 4 and the certificate used will be measured into PCR 7, but again the TPM doesn&#x27;t hold any key material and isn&#x27;t able to block the system from booting.\n5) If you&#x27;re booting Windows and Bitlocker is enabled, the OS will ask the TPM to hand over the disk encryption key. The TPM will only do so if the PCR values match the policy associated with the key (usually just the value of PCR 7). This is the first time the TPM can do anything that would stop the system from booting, and also the first time we&#x27;re using any key material that&#x27;s in the TPM. But at this point, we&#x27;re well past UEFI Secure Boot.<p>&gt; Do you mean chipset (which could be on the motherboard)<p>Yes, otherwise you wouldn&#x27;t be able to move CPUs between boards that have firmware signed by different vendors. The exception is the U and Y series mobile parts, where the chipset is on-package with the CPU. But those are only available as SMT parts, so it&#x27;s less of an issue.<p>[1] The ME stores and parses some data files, which aren&#x27;t verified. This resulted in <a href="https:&#x2F;&#x2F;www.blackhat.com&#x2F;docs&#x2F;eu-17&#x2F;materials&#x2F;eu-17-Goryachy-How-To-Hack-A-Turned-Off-Computer-Or-Running-Unsigned-Code-In-Intel-Management-Engine.pdf" rel="nofollow">https:&#x2F;&#x2F;www.blackhat.com&#x2F;docs&#x2F;eu-17&#x2F;materials&#x2F;eu-17-Goryachy...</a>')