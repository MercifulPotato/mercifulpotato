Item(by='coolvision', descendants=26, kids=[25726120, 25721645, 25723632, 25718072, 25726697, 25719072, 25726654, 25725333, 25722121, 25721493, 25725056, 25724654, 25719314, 25719236], score=55, time=1610303306, title='Ask HN: How do you think software development will look in 20 years?', item_type='story', url=None, parent=None, text='Would programming still look like sitting in front of VS code (and chrome tab open with stack overflow explanation for that pesky compiler error)? I hope not. \nI like this quote from &quot;coders at work&quot;<p>&quot;So I think one direction Erlang might take, or I would like it to take, is this component direction. I haven’t done it yet, but I’d like to make some graphic front ends that make components and I’d like to make software by just connecting them together. Dataflow programming is very declarative. There’s no notion of sequential state. There’s no program counter flipping through this thing. It just is. It’s a declarative model and it’s very easy to understand. And I miss that in most programming languages.&quot;<p>Do you have any interesting books &#x2F; articles that discuss this topic?')