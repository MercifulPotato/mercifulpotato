Item(by='nendroid', descendants=None, kids=[24750905, 24751402], score=None, time=1602433212, title=None, item_type='comment', url=None, parent=24744906, text='<p><pre><code>  struct BoxDimensions {\n        topLeft, topRight, bottomLeft, bottomRight\n    }\n</code></pre>\nI agree it is a better name. My version was deliberately designed to hurt your eyes to show you that the pain is just psychological. There is no intrinsic difference between your naming versus mine other than mine takes a millisecond longer to read the longer names. My version is quite ugly as well, but ugly naming has no negative effect on your code. It&#x27;s all about understandable naming.<p>Not every concept can fit into a beautiful name as you did here. What if the box was a very specific box out of many boxes and I needed to specify the details?<p><pre><code>   DimensionsOfBlueBoxFromRoom253 = { ... }\n</code></pre>\n&gt;The second only need a glance, the first you have to read&#x2F;scan multiple times to dig out which delta it is.<p>That&#x27;s only because you already know what Dim means. Many many times I see abbreviations that are unknown. For example:<p><pre><code>   TranBox.Dow\n</code></pre>\nWould it be clear to you that Trans means translation and Dow means down?<p>&gt;Code with longer names are harder to scan.<p>Same with english. It&#x27;s a small price to pay but people tend to enjoy reading english more than programming abbreviations and shortcuts. You spend an extra second reading a line, but you gain much more clarity about the intention of the programmer. Where with an abbreviated name you can often be unsure of what the programmer meant and you&#x27;d have to dig into the surrounding context.<p><pre><code>       trueBox.bottomLeft - measuredBox.bottomLeft\n</code></pre>\nSee? already I don&#x27;t even know what you mean by true. True can mean anything. Could it be you&#x27;re referring to a box with the the word true printed on it? A layman will not understand the difference between a truebox and a measuredbox. The below is infinitely better:<p><pre><code>       BoxWithEstimatedDimensions\n       BoxWithActualDimensions\n</code></pre>\nPerhaps it&#x27;s ugly and offensive to your aesthetic tastes, but there&#x27;s zero ambiguity here. In fact I would use snake case for even more clarity:<p><pre><code>      Box_with_Estimated_dimensionS\n</code></pre>\nThat variable name is not elegant but there is literally zero way I can misunderstand the meaning. Note how I combined snake case with alternating camel case above. This really pisses some people off, but when you think about it mixing camel case with snake case is just aesthetic bs that have nothing to do with the ultimate goal of your programming style: Readability. Also note the capital S at the end of the name. Believe it or not the capital S has ZERO effect on the quality, readability and even the verbosity of your source code yet this is what programmers will bitch and moan about the most.<p>&gt;The second one is just exhausting to me at least.<p>Exhausting like the english language is exhausting? Exhausting like commenting your code is exhausting? People don&#x27;t complain about the verbosity of English and all I&#x27;m suggesting is bringing the verbosity of programming a bit closer to English so that the understandability of your code is ALSO closer to english.')