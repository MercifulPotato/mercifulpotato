Item(by='klodolph', descendants=None, kids=None, score=None, time=1603940920, title=None, item_type='comment', url=None, parent=24926598, text='&gt; If you go listen to Google people talk about dependency&#x2F;version management. It&#x27;s like they think it&#x27;s global lock vs inconsistency. Monorepo or chaos. This false choice irks me.<p>I watched this talk: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=tISy7EJQPzI" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=tISy7EJQPzI</a><p>I’d say this is a much more nuanced look at dependencies &amp; versioning. We all know these days that something like semantic versioning is not enough, because it is too easy to depend on behavior which the developers of your dependencies did not expect you to depend on. So you need something more powerful than just having a bunch of developers get together and agree not to break each others’ code.<p>Bazel is a part of that solution—if you can analyze and understand the dependencies in a project, and do so in a very automatic and reliable way, you can provide people with tools tools for updating downstream code when upstream code changes.<p>I think people are focusing too much on Bazel as <i>only a build system</i> and not as part of a platform for building developer tooling, and people are focusing too much on Bazel’s original incarnation as a build system for a massive monorepo.<p>I think there’s also a reality that we must deal with that is—as software gets larger and more complex, and as we have more dependencies, relying on version pinning for stability is <i>losing ground</i> as a technique for making our software more reliable. We have many more dependencies in our software now, so just subscribing to a mail feed of all of the version bumps in the libraries you use would be enough to drown you, and the longer you stay on older versions the more painful it can be to upgrade.')