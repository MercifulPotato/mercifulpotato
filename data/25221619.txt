Item(by='PaulHoule', descendants=None, kids=None, score=None, time=1606409757, title=None, item_type='comment', url=None, parent=25221385, text='PEG for one thing offers the possibility of composibility.<p>For a language like Python or Java it shouldn&#x27;t be much harder to add an &quot;unless(X) {Y}&quot; equivalent to &quot;if(!X) {Y}&quot; than it is in LISP if the compiler was structured in such a way that you could take &quot;Java Compiler A&quot; and specialize it to &quot;Java Compiler B&quot; such that one term was added to the grammar and one AST tree transformation that writes the term.<p>Exclusive of POM files, import statements and other packing material that should be less than 50 lines of code if we built compilers to be extensible.<p>The arangodb database has a kind of SELECT statement that returns a list of unordered dictionaries which is frustrating if you want to plot the result in a pandas Dataframe.  I wrote something in Python using PEG that would parse an adb query and static analyze it and determine the intended field order when definite.<p>I am up for any compiler technology that makes it easy to do that even if it means I don&#x27;t get compilation as fast as Go.<p>Another issue that matters in error handling.  Drools is a great rules engine on paper,  but as it is composed with an external Java compiler you can often get into cases where the error messages don&#x27;t make sense at all and it isn&#x27;t like the Jena rules engine which is simple enough that I could get quick results looking at it in the debugger.  That&#x27;s a complicated example but I think language users deserve better error handling and compiler authors need better tools to do that.')