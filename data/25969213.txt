Item(by='Sesse__', descendants=None, kids=[25969257, 25969609, 25969477, 25969550], score=None, time=1612016007, title=None, item_type='comment', url=None, parent=25969169, text='Standards aside, returning EINTR on a write to local file is extremely rare in POSIX.<p>Almost any syscall can return EINTR, but in practice, for all previous OSes, it has been reserved for those that can hang for an undetermined amount of time -- that is, anything from the network. Local I&#x2F;O should complete in a bounded amount of time, so that kind of sleep is usually implemented as uninterruptable.<p>There&#x27;s one highly relevant edge case: NFS. NFS looks like local I&#x2F;O, but if the NFS server goes away, what do you do? Traditionally, the process just hangs in the hope that the server will come back, which leads to the dreaded issue of processes being stuck and unkillable. On Linux, can add the “intr” flag to the mount (possibly via a remount) to allow signals to interrupt the syscall and break the deadlock -- but then you break a ton of software, because, again, EINTR on local file I&#x2F;O is unheard of.')