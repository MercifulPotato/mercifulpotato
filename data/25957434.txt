Item(by='quelltext', descendants=None, kids=[25958348, 25958401], score=None, time=1611930044, title=None, item_type='comment', url=None, parent=25956992, text='Hmm, I&#x27;ll bite.\nWhat exactly in your opinion makes the difference here with awareness or lack thereof (of the distinction)?<p>The way I see it mocks are the all encompassing tool here. With mocks you can both stub behaviors and, if you want, verify behaviors.<p>And in reality every mock needs to act as a stub, e.g. a mocked method returning a preset value.\nSo, it seems natural that &quot;mocking&quot; as more encompassing concept is what is used in library names. If people end up using those to mostly create stubs instead of mocks so what?<p>My experience so far has been that people naturally flock to a solution for testing that is flexible and lets them quickly cover the boundaries of the code they are testing. If people want to check if their code calls a method x times but are not interested in what that method does for the test, they use mocks. If they do they use &quot;the real thing&quot; or a fake on which they can validate state later. And if they just need a method to return something and don&#x27;t care about whether it&#x27;s called or how often they use a stub.<p>I feel that often when you stub you can also go ahead and add code to verify some behaviors (mock) to get some extra coverage. I don&#x27;t know I just don&#x27;t think it&#x27;s bad to mix and match if it gets you to more things tested.')