Item(by='reader_mode', descendants=None, kids=None, score=None, time=1604271587, title=None, item_type='comment', url=None, parent=24962504, text='I&#x27;m starting a new project in flutter and have a decent chunk of experience with frontend tech.<p>Here&#x27;s my thoughts on it so far, starting with the good:<p>- Rendering performance is really good<p>- Live reload is the best I&#x27;ve seen on any platform<p>- Layout&#x2F;rendering engine is powerful and the widgets are high-quality - building your own widgets for a cross platform UI framework is the right way to go because building abstractions between cross platform stuff (like Xamarin.Forms) winds up giving you the lowest common denominator<p>The bad :<p>- Dart language while functional is very tedious and pointlessly rigid - you can see the language is designed by VM engineers - it makes silly UX choices for the sake of implementation performance - TypeScript is a much better language despite it&#x27;s legacy JS constraints<p>- tooling works (which is a nice surprise in the npm era) but can be spotty (eg. IDE&#x2F;analysis engine craps out hard on invalid code it brings my 32GB ram&#x2F;6 core i9 to a crawl at times)<p>- the framework itself is also designed in the spirit of the language - a lot of effort towards implementation and performance convenience and very little effort on developer usability for the APIs - the new Navigator 2.0&#x2F;Router is an excellent example - the worst router implementation I&#x27;ve seen to date. Also their documentation leaves a lot to be desired<p>- Flutter framework architecture seems immature - it lacks tools for efficient design patterns from both OO and FP worlds, their BLoC state management is a complicated mess that offers very little value - Redux is far superior in this regard but the language is so limited that using Redux approach is just too verbose<p>I agree with authors objections but I disagree with the conclusion - I think web apps need to move away from DOM as the UI rendering engine - DOM was built for documents not applications - the semantic information he&#x27;s crying about is a result of patchwork of repurposed tools.<p>Flutter has really good accessibility tech and IMO the Flutter Web problem is IMO that they are not taking the DOM out of the equation far enough - ideally it would just be a WebGL canvas rendering the UI and it would integrate with accessibility tech in other ways. The practical problem with that is that WebGL is a sandboxed version of native GL API so the performance of building Skia on WebGL could be significantly worse than native.')