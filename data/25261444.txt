Item(by='Geminidog', descendants=None, kids=None, score=None, time=1606788046, title=None, item_type='comment', url=None, parent=25259106, text='The author is talking about representation of data, I&#x27;m talking about something different. I&#x27;m talking about scoping, grouping, modularity and free variables.<p><pre><code>  y = 6\n  f(x) = x + y\n</code></pre>\ny is called a free variable and f is dependent on it. I cannot move f to another place because y will now be undefined. OOP is a more extreme version of this.<p><pre><code>  class X\n     y = 6\n     b = 8\n     f(x) = x + y \n</code></pre>\nNow f can&#x27;t even be moved to another place without b. If you want to move f you have to move b as well.<p>Combinators vs. free variables is the fundamental issue of OOP which this article writer effectively side steps with a unique definition of OOP where the method returns an entirely new object with differently defined methods.<p>It&#x27;s ok. It&#x27;s worth talking about the trade offs of unique definitions of OOP but I think the author needs to mention that this is also not a mainstream definition and therefore sidesteps all the mainstream controversy.')