Item(by='didibus', descendants=None, kids=[25257186], score=None, time=1606760036, title=None, item_type='comment', url=None, parent=25256525, text='I think I don&#x27;t often hear it in the context of C# and Rust maybe, or what I mean is, in the context of a multi-threaded environment, so in combination with a Thread Pool.<p>Say you used the thread pool model. And you receive 100 requests, and you have a thread pool of 50. Your first 50 requests go to your 50 threads, and the other 50 get queued up. After any of the running 50 requests make non-blocking IO, they release the thread back to the pool, and they yield themselves into an IO waiting queue. Then the scheduler takes from either the request queue or the IO waiting queue prioritizing one over the other as see fit. If any of the queues are full, then the system blocks and waits, dropping requests that&#x27;d come in during that time.<p>Or some similar models.<p>Is this just async&#x2F;await that I described?')