Item(by='pron', descendants=None, kids=[25305281, 25304612], score=None, time=1607099517, title=None, item_type='comment', url=None, parent=25304020, text='The first part of the answer is the same as that for a similar question we&#x27;ve been asked about LinkedList: we don&#x27;t deprecate things that are heavily used, however useless or superseded by something else, unless they are very harmful. Deprecation in Java does not mean &quot;unrecommended&quot; but &quot;absolutely do not use this if you want your program to continue working on future versions.&quot; Not only is it a compile-time warning, but JDK tooling even checks for uses of deprecated APIs in binaries and warns about them. Ideally, deprecated usages should break people&#x27;s builds. In other words, deprecation is a big deal and not taken lightly. We might need another standardised term for &quot;unrecommended&quot; or &quot;superseded&quot;.<p>The second part of the answer is that there are still good uses cases for heavyweight threads, that are backed by one OS thread. For example, as carriers for virtual threads or parallel streams, i.e. as approximations of CPU cores, and also for cases where FFI is used for IO or some other native interaction. This is very rare in Java, but very rare could mean &quot;used only in tens of thousands of programs rather than tens of millions&quot;.')