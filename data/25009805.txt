Item(by='chriswarbo', descendants=None, kids=None, score=None, time=1604686587, title=None, item_type='comment', url=None, parent=25008320, text='From a computational perspective you&#x27;re right, but for languages which allow formal verification (like ATS) there is a big difference between infinite loops and long-running loops.<p>In particular, if we only care whether something exists then we can accept a long-running computation as proof without having to run it, whilst an infinite loop may be false. For example, a function which takes a list, an index and a proof that the index occurs in the list: we can look up the index safely, without having to care about the actual contents of the proof (the language ensures it&#x27;s valid).<p>On the other hand, we can write an infinite loop which <i>claims</i> to prove anything we like, but never actually has to cough up anything. For example:<p><pre><code>    ProofOfRiemannConjecture myProof {\n      while (true) {}\n    }</code></pre>')