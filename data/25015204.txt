Item(by='alquemist', descendants=None, kids=[25015343], score=None, time=1604758816, title=None, item_type='comment', url=None, parent=25014756, text='Nitpick: Actors or goroutines or async are mostly used to deal with concurrency. CUDA &amp; friends are used for parallelism.<p>The paper: The motivation is a problem suitable to be solved via rule systems. It&#x27;s a bit unclear why the rule system needs to be grafted on top of an actor model.<p>Actors: Programming with async messages is hard. Message ordering matters, no clear error reporting, no stack traces, distributed state. This is hardware hard, as in bring in formal verification methods hard. To be avoided in favor of a centralized coordinator solution if at all possible.<p>I wonder if, alternatively, one could use Rx processing over the stream of events.<p>Motivating example from the paper:<p>1. Turn on the lights in a room if someone enters, and the ambient light is less than 40lux.<p>2. Turn off the lights in a room after two minutes without detecting any movement.<p>3. Send a notification when a window has been open for over an hour.<p>4. Send a notification if someone presses the doorbell, but only if no notification was already sent in the past 30 seconds.<p>5. Detect home arrival or leaving based on a particular sequence of messages, and activate the corresponding scene.<p>6. Send a notification if the combined electricity consumption of the past three weeks is greater than 200 kWh.<p>7. Send a notification if the boiler fires three Floor Heating Failures and one InternalFailure within the past hour, but only if no notification was sent in the past hour.')