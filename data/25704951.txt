Item(by='jacques_chester', descendants=None, kids=[25705406, 25706204], score=None, time=1610227630, title=None, item_type='comment', url=None, parent=25704556, text='&gt; <i>How has Kubernetes being a giant reactive resource API panned out?</i><p>It was never reactive, at least in the sense of the Reactive Manifesto. There is no system of backpressure.<p>&gt; <i>Did the custom resource controllers pan out well?</i><p>I think it will prove to be useful for a handful of uses, but that in general, it will wind up like Wordpress and Jenkins plugins. Powerful, popular, but a guaranteed mess.<p>Kubernetes was not originally designed to accommodate CRDs. There&#x27;s no concept of tenancy, only things you can cobble together into tenancy-ish-alike-kinda shapes. There&#x27;s RBAC, but it was designed before CRDs and means that poorly designed custom controllers can be attack vectors.<p>I think CRDs are useful and necessary[0], but that they are greatly overused and have expensive design flaws. Unfortunately, I don&#x27;t have the wits to join into the multi-billion dollar market of &quot;papering over things Kubernetes doesn&#x27;t do very well but which can&#x27;t now be changed&quot;.<p>[0] I mean, I wrote a book about Knative, which is a purely CRD-based architecture.')