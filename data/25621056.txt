Item(by='KronisLV', descendants=None, kids=None, score=None, time=1609671709, title=None, item_type='comment', url=None, parent=25620906, text='But that&#x27;s the thing - if so many projects are using these bad practices, then doesn&#x27;t that mean that there&#x27;s something fishy going on i.e. it&#x27;s difficult to do things the &quot;proper&quot; way and therefore most people simply don&#x27;t? Why must we <i>follow</i> these best practices at all - why aren&#x27;t they simply the default way of doing things, e.g. <i>having</i> to specify a user for the process in the container to run, instead of defaulting to root?<p>For example, look at SSL&#x2F;TLS certificates - before Let&#x27;s Encrypt ( <a href="https:&#x2F;&#x2F;letsencrypt.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;letsencrypt.org&#x2F;</a> ) and tools like either Certbot ( <a href="https:&#x2F;&#x2F;certbot.eff.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;certbot.eff.org&#x2F;</a> ) or even web servers like Caddy ( <a href="https:&#x2F;&#x2F;caddyserver.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;caddyserver.com&#x2F;</a> ) which automate both provisioning and renewing certificates, people used to simply run HTTP. But now, it&#x27;s easier than ever to use them for transport level security, and the stats seem to vaguely back this up, for example: <a href="https:&#x2F;&#x2F;www.welivesecurity.com&#x2F;2018&#x2F;09&#x2F;03&#x2F;majority-worlds-top-websites-https&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.welivesecurity.com&#x2F;2018&#x2F;09&#x2F;03&#x2F;majority-worlds-to...</a><p>Why should users inside of containers be any different? What are the factors that prevent safe defaults from being implemented? That&#x27;s what i don&#x27;t understand.<p>Disclaimer: i&#x27;m not advocating for running things as root, but rather my claim is that if things are hard to do, they simply won&#x27;t be done unless absolutely necessary. Any tech vendor should acknowledge this and make sure that doing things the &quot;right way&quot; is as easy as possible.')