Item(by='Geminidog', descendants=None, kids=None, score=None, time=1609099234, title=None, item_type='comment', url=None, parent=25553603, text='&gt;I too used to believe that knowledge was only real if it was formalized, and that intuition is fake and inferior. Now, while formalized knowledge is easier to record and convey, I realize that it is intuition that does the vast majority of the work in most settings. The ability to convey and gradually formalize intuition is indeed a mark of intelligence, but it is not necessary, sufficient or even desirable to wait until all intuition is converted to formalism before acting.<p>I never said all knowledge is invalid if it&#x27;s not formalized. Far from it. I gave an example of a human getting from point A to point B. Clearly we have no choice but to rely on informal solutions when devising a &quot;design&quot; for aspects of out lives that are not open to formal treatment.<p>Overall My point is two things:<p>1. Often people don&#x27;t know the difference between intuitive knowledge and formalized knowledge and attribute way too much legitimacy to &quot;systems design.&quot; People think of these guys as scientists when they&#x27;re really just making stuff up.<p>2. Informal intuition can as a result devolve into a trap where we endlessly come up with new frameworks, new metaphors and new &quot;designs&quot; without improving anything because there&#x27;s no formal way of verifying what is optimal. I am arguing that the author of this article and articles like this is just the latest iteration of an endless circle. He introduces nothing new and instead provides a new metaphor for us to ponder about. Literally read it. Did anything change did you actually learn anything new? Was anything actually improved? No. And this blog post is one out of multitudes of &quot;system design&quot; and &quot;system architecture&quot; blog posts that have led to no real insight on anything. It&#x27;s not just the blog posts either. The post is representative of &quot;systems design&quot; in the entire industry... endless circles of going nowhere.<p>The best example of the above two points is monolith vs. microservices? Which is actually better? What are the actual tradeoffs here? Nobody really knows, hence the reason why the concepts have oscillated in popularity and the resulting non-answer people come up with is: &quot;Depends on your use-case.&quot; And still you get &quot;experts&quot; who pretend to understand this stuff as if it&#x27;s legitimate &quot;theory.&quot;<p>The industry is ripe for formality in this area as we&#x27;ve been going in circles for decades. We are dealing with computers here: virtual idealized worlds ripe for systematic formalism. We don&#x27;t even need scientific experimentation... just raw mathematical logic as there&#x27;s no need to put a computer in a wind tunnel to measure unexpected aerodynamic effects.')