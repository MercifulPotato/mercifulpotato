Item(by='nh2', descendants=None, kids=None, score=None, time=1602582403, title=None, item_type='comment', url=None, parent=24760045, text='It&#x27;s silly that this is being downvoted.<p>Of course POSIX doesn&#x27;t &quot;require that filesystems not get completely corrupted in the event of a system crash&quot;, in the same way that it doesn&#x27;t require that your RAM isn&#x27;t faulty or that the computer manages to turn on at all after the next reboot.<p>A software specification and its guarantees only make sense in the context of properly functioning hardware and surrounding software.<p>In this case, that translates to &quot;hardware doesn&#x27;t randomly lose data&quot; and &quot;file systems do not randomly corrupt themselves&quot;, because that is the <i>fundamental job</i> of those systems.<p>fsync() <i>is</i> about durability, telling the POSIX-implementing OS interface to instruct the underlying software (e.g. file system) and hardware to sync the described volatile data into persistent state. For a system running on a ramdisk, that naturally means a no-op; for a network mount it means a roundtrip; for a PC with a hard disk it means that the described data is now on disk, and that it is there, uncorrupted, after an ordinary power failure. If you have broken RAM, a disk that lies about flush commands, or synced only a part of the intended data (forgotten to fsync the dir), then the POSIX system has still done its job regarding durability, and fulfilled its guarantees.')