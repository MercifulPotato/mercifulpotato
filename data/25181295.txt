Item(by='filmor', descendants=None, kids=[25182815], score=None, time=1606080707, title=None, item_type='comment', url=None, parent=25180311, text='As far as I&#x27;m aware there are a few major problems with static typing in Erlang that can&#x27;t be solved so far and are not solved here either:<p>1. If you have a function that calls into other modules like `other_module:some_func(X)`, then the typing of this call can change at runtime. You could first have<p><pre><code>    some_func(N) when is_number(N) -&gt; N + 1.\n</code></pre>\nand later load a new version with<p><pre><code>    some_func(N) when is_integer(N) -&gt; N + 1.\n</code></pre>\nThe older version accepts all numbers, i.e. floats and integers, while the second only accept integers.<p>2. Erlang message passing can not be typed statically in a meaningful (i.e. non-trivial) way, as the typing may be state-dependent:<p><pre><code>    Pid = spawn_link(fun () -&gt;\n        receive\n            first -&gt; ok;\n            _ -&gt; error(bad_message)\n        end,\n        receive\n            second -&gt; ok;\n            _ -&gt; error(bad_message)\n        end\n    end)\n</code></pre>\nNow, the static typing of sending to `Pid` depends on what you&#x27;ve sent before. This could maybe be handled by &quot;enumerating&quot; the receives, but I think that invites the halting problem into your type system.')