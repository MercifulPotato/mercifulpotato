Item(by='johnmaguire2013', descendants=None, kids=None, score=None, time=1609811892, title=None, item_type='comment', url=None, parent=25640869, text='I don&#x27;t think you&#x27;re responsible for the content, nor have I stated you must agree with it deeply. In fact - I am arguing the opposite: The cited article does not make an argument for technical debt killing a product. As you stated above, it&#x27;s an argument that &quot;a technical-debt-driven rewrite killed Netscape.&quot;<p>&gt; A total rewrite, if done well, is going to take less resources and way less calendar time than a refactor-and-cleanup approach done equivalently well.<p>This is totally up for debate, and largely what Joel&#x27;s article is talking about. Does &quot;less resources&quot; include opportunity cost? You may be able to get something out in less calendar time, but will it be as feature complete? Will it get rid of the old bugs that plagued the product? Will it avoid introducing new ones? There are many reasons to believe that a refactor would be better - for most projects this is probably true (at least in my opinion, and evidently in Joel&#x27;s too!)<p>I, like many others, have seen the disastrous results rewriting from scratch can produce - if they produce results at all.<p>I&#x27;m not sure that the time builds take has any impact on which approach is faster. Certainly tooling advances might - but it&#x27;s unclear to which approach the advantage is given. And while tests certainly make refactoring far easier, this can often be done as part of the refactoring.<p>And let&#x27;s also remember that the article cited is written 20 years ago - the timeframe you&#x27;re referring to. This idea that rewriting from scratch is dangerous and costly is not predicated on recent advancements in tech.<p>We can argue whether Netscape&#x27;s approach to rewrite from scratch was the right approach to take, and we can also argue about whether rewriting from scratch is generally appropriate, but the intention of my original comment was to point out that Joel specifically makes the argument that it was rewriting from scratch that killed Netscape - not technical debt itself - and that there are alternatives which would&#x27;ve been far less risky (from his POV.)')