Item(by='orf', descendants=None, kids=[25270972, 25270959, 25272169, 25270966, 25270991, 25270955], score=None, time=1606861373, title=None, item_type='comment', url=None, parent=25267204, text='&gt; A commonly used datatype to store monetary values is the MONEY data type. In SQL Server, the MONEY data typeâ€™s behavior is fixed using four digits to the right of the decimal (e.g., $12.8123). However, in PostgreSQL, the MONEY data type is fixed using two digits to the right of the decimal.<p>&gt; So, when the application tries to store a value of $12.8123, by example, PostgreSQL will round to $12.81. This subtle difference will result in a rounding error and break an application if not correctly addressed. To ensure correctness in Babelfish, we need to ensure such differences, small and large, are handled with absolute fidelity.<p>How are they going to solve this with just a query translation layer? Isn&#x27;t information lost on save?')