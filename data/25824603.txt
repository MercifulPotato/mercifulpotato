Item(by='krumbie', descendants=None, kids=None, score=None, time=1610993121, title=None, item_type='comment', url=None, parent=25822993, text='I have created one of the recent competitors in this space [1], and I think it&#x27;s not so bad, as long as the macros are reasonably simple to understand. If you look in the readme of my project, the four syntax examples actually look quite similar so I don&#x27;t anticipate they&#x27;d cause a lot of confusion.<p>When I got annoyed in my own work that some data wrangling syntax was repetitive I was just really glad that I could easily build my optimal solution and didn&#x27;t have to just accept that there&#x27;s one suboptimal (for me) way. In Python and R, if you like what they offer that&#x27;s good, if not - not so good.<p>Part of the problem comes from Julia not being geared towards DataFrames like R is, but I gladly trade a bit of convenience in one domain against a lot of expressive freedom with very clean rules that apply everywhere.<p>For example, I think it&#x27;s quite good that you can only have &quot;weird&quot; behavior in Julia with macros, but they give you a visual indicator with the @ that you&#x27;re seeing non-standard syntax. While in R, the non-standard evaluation means that literally anything could happen to the variables you pass into any function. It makes for some convenient syntax in some cases, yes, but it&#x27;s so confusing as a system for writing software! You never really know if you&#x27;re looking at a variable or just a name, for example.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;jkrumbiegel&#x2F;Chain.jl" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jkrumbiegel&#x2F;Chain.jl</a>')