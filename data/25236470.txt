Item(by='rlonn', descendants=None, kids=None, score=None, time=1606555256, title=None, item_type='comment', url=None, parent=25235548, text='Tsung was made in another era, before devops. I think it shows in the UX and everywhere when using the tool that it wasn&#x27;t really meant for developers.<p>Specifically, and with the disclaimer that I haven&#x27;t used Tsung so much, I&#x27;d say the biggest difference is that k6 tests are scripted in a real language (JS) as compared to Tsung&#x27;s XML.<p>But k6 also has a modern CLI UX that beats Tsung (and most other tools) by a mile, more integrations now and possibly support for more protocols, or at least more relevant ones (not sure if Tsung supports HTTP&#x2F;2 for instance). Plus k6 is being very actively developed.<p>From what I&#x27;ve seen of Tsung I really like it though. Seems like a very performant and solid piece of software. But like mentioned earlier, it was made in another era. Just like Jmeter. If I ranked tools in terms of ascending &quot;DevOps:ness&quot; and UX for developers it&#x27;d probably be something like:<p>Lowest: Jmeter, Tsung<p>Low: Gatling<p>Medium: Apachebench, Siege, Hey, Wrk (simple testing)<p>High: Artillery, Locust<p>Highest: k6, Vegeta (though Vegeta is only for simple&#x2F;static tests)<p>I wrote an article about this topic also: how most load testing tools we have are just not geared for developers and DevOps: <a href="https:&#x2F;&#x2F;k6.io&#x2F;blog&#x2F;another-load-testing-tool" rel="nofollow">https:&#x2F;&#x2F;k6.io&#x2F;blog&#x2F;another-load-testing-tool</a>')