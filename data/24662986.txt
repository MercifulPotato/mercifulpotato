Item(by='jerf', descendants=None, kids=[24663930], score=None, time=1601649110, title=None, item_type='comment', url=None, parent=24659059, text='&quot;What&#x27;s a use case where strict ordering is critically important?&quot;<p>In general, as the use case grows, every use case where the developers did not make explicit and careful provision for ensuring that order is not important, with quite non-trivial effort.<p>Even a lot of systems whose developers <i>think</i> they have no ordering dependencies are wrong in at least one subtle way without realizing it.<p>If you need to megascale, you&#x27;re going to have to bite the bullet and build a system that can handle out-of-order, but there&#x27;s a <i>lot</i> of systems out there where you don&#x27;t need megascale, and you can get rid of that &quot;quite non-trivial effort&quot; to deal with out-of-orderness by asking for messages to arrive in order.<p>To get a sense of just how useful that can be... bear in mind that every time you open a TCP socket instead of a UDP one, you just made <i>exactly that choice</i>, to use an ordered message system when you didn&#x27;t &quot;need&quot; one. Take a look at everything you do with a TCP socket and think about trying to run it over UDP, and not with something like QUIC that basically adds half of TCP back on it, but with UDP straight-up. That&#x27;s what kind of things can use in-order delivery... lots of things.<p>Almost everything can be simplified by guaranteed in-order delivery. It&#x27;s just that some things can&#x27;t afford the downsides.')