Item(by='geoffpado', descendants=None, kids=[25548132], score=None, time=1609021347, title=None, item_type='comment', url=None, parent=25545967, text='&gt; This is the same IP address: 3232271615. You get that by interpreting the 4 bytes of the IP address as a big-endian unsigned 32-bit integer, and print that. This leads to a classic parlor trick: if you try to visit <a href="http:&#x2F;&#x2F;3232271615" rel="nofollow">http:&#x2F;&#x2F;3232271615</a> , Chrome will load <a href="http:&#x2F;&#x2F;192.168.140.255" rel="nofollow">http:&#x2F;&#x2F;192.168.140.255</a>.<p>This was the source of one of my favorite “bugs” ever. I was working on multiple mobile apps for a company, and they had a deep link setup that was incredibly basic: &lt;scheme&gt;:&#x2F;&#x2F;&lt;integer&gt;, which would take you to an article with a simple incrementing ID.  This deep link system “just worked” on iOS and Android; take the URL, grab the host, parse it as an int, grab that story ID. Windows Phone, however… the integers we were parsing out were totally wrong, returning incredibly old stories!<p>Turned out that the host we were given by the frameworks from the URL was auto-converted to an IP in dotted-quad format, and then the int parser was just grabbing the last segment… which meant that we were always getting stories &lt;256, instead of the ~40000 range we were expecting.')