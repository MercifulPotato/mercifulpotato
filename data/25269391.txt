Item(by='Wowfunhappy', descendants=None, kids=None, score=None, time=1606853988, title=None, item_type='comment', url=None, parent=25267210, text='The Hackintosh community sometimes uses custom kernels, although much less often nowadays than they once did. There are custom kernels to add support for AMD processors (most common by far), and kernels to add compatibility with Intel processors that don&#x27;t work natively (e.g. Atom). These do work on real Macs too, I used one a couple months ago for something stupid: <a href="https:&#x2F;&#x2F;apple.stackexchange.com&#x2F;questions&#x2F;402726&#x2F;how-can-i-attempt-to-boot-an-older-version-of-macos-than-my-hardware-supports" rel="nofollow">https:&#x2F;&#x2F;apple.stackexchange.com&#x2F;questions&#x2F;402726&#x2F;how-can-i-a...</a><p>Nowadays, however, Hackintosh tends to rely entirely on patching the kernel in memory, even on esoteric platforms like AMD. Custom kernels are really inconvenient for a few reasonsâ€”they get set back to stock after every update (which potentially means your computer won&#x27;t boot, if you forget to put the custom kernel back before your machine restarts), and Apple releases XNU&#x27;s source on a ~6 month delay.<p>I would love to see more kernel experimentation, but I think there&#x27;s just not a lot of reason to do it? If you&#x27;re on a Mac, you don&#x27;t need to add support for new hardware.<p>That said, it would be great to get a kernel which e.g. disables TCC, or maybe which removes Big Sur&#x27;s signed snapshot stuff. Both of those feel like achievable tasks, and they would have a real use!')