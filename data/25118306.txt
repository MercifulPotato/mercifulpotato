Item(by='megameter', descendants=None, kids=None, score=None, time=1605568276, title=None, item_type='comment', url=None, parent=25117857, text='I agree with this assessment: MMOs are very good at getting a person into a skill-acquisition mindset. I&#x27;ve been off-and-on with Planetside 2 for a few years now(it&#x27;s been getting good updates lately, and I&#x27;ve been seeing new players popping up - good time to get in) and while not every part of it is as deep as it could be, it&#x27;s got an absolutely huge surface area to study - MMO, FPS, vehicle gameplay, construction, leadership, strategy, and all the edges where these things meet - which means you can feel you&#x27;ve hit your limit in one area and simply shift over to another instead of quitting the game entirely.<p>Unlike many MMOs the grind is not heavily stat-focused either: while you can get unlocks and upgrades, most of them constitute &quot;sidegrades&quot; into a specialty role. On the field, your effectiveness still comes down to knowing the ins and outs of the gameplay. And there are leaderboards to motivate competitive players, but it&#x27;s widely acknowledged that playstyles are not represented equally on these boards: it is straightforward  to get a very high K&#x2F;D by learning one of the various kill-farming techniques, and to get a lot of experience points with a support role around a meatgrinder battle. But those things don&#x27;t necessarily contribute the most to your faction.<p>It&#x27;s things like that that suggest where the model breaks down on application to real world skills. Generally, once a person is <i>aware</i> of the things they need to focus on, through good feedback, they can stay on the task. But if you look at a thing like programming, it&#x27;s like, &quot;where&#x27;s the feedback?&quot; It&#x27;s not the butt-in-chair hours that are doing the lifting here. And it isn&#x27;t reducable to lines compiled or issues cleared or other single-number metrics either. &quot;Speedcoding&quot; is only good in rare circumstances. It&#x27;s more like a finished project is a series of quests that build on each other, with each quest having some checklist pass&#x2F;fail requirements. But each one is bespoke, and hard to compare to others even if it&#x27;s applying the same skills.<p>Indeed I actually do write down pass&#x2F;fails conditions as a checklist in the comments to start with a complex implementation, and to create a kernel of documentation. Having tools helps, but it&#x27;s that early conceptual&#x2F;goal-setting where I put down boundaries that seems to make the biggest difference.')