Item(by='jackcviers3', descendants=None, kids=[24734629, 24736013, 24739507], score=None, time=1602277214, title=None, item_type='comment', url=None, parent=24733677, text='I&#x27;m not commenting on Julia per se. I&#x27;m commenting on the state of discussions surrounding programming languages in general.<p>&gt; if you interview 100 engineers who&#x27;ve tried deploying Julia, a vanishingly small % would recommend it if at all.<p>Popularity of a choice does not correlate with a choice being correct. It is a fallacy to evaluate a particular tool&#x27;s usefulness for a particular job by how popular that tool is. And doubly so when most of a random sampling of engineers includes virtually no one experienced in using said tool.\nIn discussions of virtually any non-popular programming language today, the vast majority of commenters on the language have absolutely 0 experience using it day in and day out for its intended use case. All you have in that discussion are hammer users. To them everything is a nail. And they universally hate any new tool that doesn&#x27;t look like a hammer, because they can&#x27;t take the time to learn the new tool. Why would they? Everything is a nail anyway.\nThis is disappointing, especially here, because Hacker News is the place where the concept of using a non-familiar language was expressed as a super-hack for startups.\nMy original reply expresses the conjecture that eventually, all pls will look the same and nobody will be able to develop a language that will truly provide an increase in quality, decrease development or maintenance costs, or improve the reliability and safety of systems the world runs on, because people who evaluate languages actually evaluate them for the tooling that largely gets bolted on after the fact by nonexperts (the lsp server &#x2F; vscode crowd).\nThere are three lsp servers for <i>python</i>. Only one of them works with pipenv on Windows. Does that make python bad?  If python were introduced today, as it was when it first came out, would it gain popularity with all the expectations we place upon a language? No. And that would be a shame. The same is true of Javascript and Java. C and c++ would go nowhere. About the only language that would have made it is Csharp and Visual Basic and Kotlin, because they were written to SELL IDEs and tools.')