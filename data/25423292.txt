Item(by='hpoe', descendants=None, kids=[25423465, 25423504, 25423437, 25424467, 25423985, 25423756], score=None, time=1607979881, title=None, item_type='comment', url=None, parent=25422756, text='Just an FYI. This is about Amazon&#x27;s MWS API, which is Merchant Web Services, used to interact with the Amazon part of Amazon not the AWS side of Amazon.<p>Also having working on an OSS Ruby library for it, and having to had work with it quite a bit, I can confirm. The MWS APIs leave a lot to be desired of, but they are an absolute gem compared to the Ebay APIs.<p>My take on the problem is that these APIs were developed in the early to mid 2000&#x27;s when e-commerce was taking off, so they are architected using the tech and philosophies from back then (XML, SOAP, SOA, etc) however we are no in 2020 and people expect up to date modern interfaces and APIs, and communication protocols; but these API&#x27;s can&#x27;t be shut down or risk major breaking changes because so much other stuff is built on top of them.<p>Really at the core of the day the problem is that so much crap on the Web is considered ephemeral and so many business come and go so quickly that the question of what to do about legacy tech on the web isn&#x27;t much of an issue because things don&#x27;t last long enough to be legacy. The exceptions are some of the e-commerce APIs of these big tech companies such as Ebay, and Amazon that managed to thrive, but now are faced with a challenge most people never are of how to migrate legacy web services.<p>EDIT: Updated appearantly I was not reading closely enough, this is not for the MWS API but the new REST version of their Seller APIs. That being said I&#x27;d still be willing to wager a pretty penny they slapped together a REST-to-XML translation layer on top of the MWS APIs and called it a day.')