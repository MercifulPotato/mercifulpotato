Item(by='TheDong', descendants=None, kids=None, score=None, time=1604601924, title=None, item_type='comment', url=None, parent=25000089, text='I still don&#x27;t understand what you&#x27;re suggesting a couple comments up. You said &quot;They need to protect their Gemfile&quot;. What did you mean by &quot;protect their gemfile&quot;? It&#x27;s already out there.<p>&gt; It increases downstream risk to GH enterprise<p>I disagree with that. People have been able to de-obfuscate and read github enterprise&#x27;s source code for pretty much as long as github enterprise has existed. Researching security vulnerabilities in it is not really any different.<p>&gt; Because one who chose to can start analyzing methods for privileged code access.<p>As above, people already could do this; the deobfuscated GHE code is pretty easy to get your hands on. And the chance of there being a remotely exploitable vuln that exfiltrates code or gives you an admin account.. well, that seems to remain at &quot;pretty unlikely&quot;.<p>If this were to logically follow, than no one would run Gitlab, an open source equivalent, because the source code is available for people to &quot;analyze methods&quot;. However, I have a similar level of respect for github and gitlab&#x27;s security teams, and I tend to think the security of both of them is pretty decent, irrespective of whether the code is leaked, open source, or proprietary.<p>&gt; CISOs would want to add additional review<p>I also disagree with that understanding. A CISO in the past would have already decided &quot;We trust github&#x27;s security practices enough to run GHE here and put our code in it.&quot; The fact that the code has leaked changes that not-a-wit. The CISO still trusts github&#x27;s security practices, and those practices haven&#x27;t changed.')