Item(by='ignoramous', descendants=None, kids=None, score=None, time=1604469817, title=None, item_type='comment', url=None, parent=24981914, text='&gt; <i>With that said, why did you prioritize spending your limited resources solving for multi-cloud?</i><p>We keep asking ourselves the same too. We initially wandered down the &quot;mutli-cloud&quot; path because it made a lot of sense in terms of cost (like somewhere in the region of 10x lower costs)... but as we chipped away at code, it became quite obvious that the inherent complexities could have been avoided especially since we&#x27;re so early and barely have a user-base.<p>&gt; <i>I&#x27;m curious if the cost savings of optimizing cross clouds was worthwhile vs. the engineering effort &#x2F; constraints you introduced into your systems at your scale.</i><p>The uber low-cost setup allowed us to offer our services for free to gauge overall interest (given we&#x27;re a consumer product). My assumption is that free customers are free publicity (in that they help spread the word) and that around 1% would convert to paying customers eventually.<p>We also biased towards &quot;serverless&quot; offerings to avoid DevOps and SRE, and that has worked quite well: In the three months our alpha has been been live taking ~30M requests a month (ignoring the occasional DDoS), we haven&#x27;t had a single outage or even bothered to look at the error logs (there aren&#x27;t any).<p>So to answer your question, yes I believe it was worthwhile since the cost difference is 10x and we were able to offer a free-tier because of that (we&#x27;re not an enterprise business). Obviously, it sucks that engineering time had to be sacrificed for it, but hey, no pain no gain.')