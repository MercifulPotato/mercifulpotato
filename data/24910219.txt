Item(by='commandlinefan', descendants=None, kids=[24910759, 24914248, 24910670, 24911830, 24913579], score=None, time=1603822787, title=None, item_type='comment', url=None, parent=24910043, text='&gt; automatic programming always has been a euphemism for programming with a higher-level language than was then available to the programmer<p>And it seems to me that progress is going in the opposite direction than &quot;they&quot; want.  Every time you move up the abstraction stack, you&#x27;re surrendering some decision-making to the lower levels.  If the underlying technologies guess right every time, you have no need to understand what they&#x27;re doing.  The first time they guess wrong, you have to spend a lot of time understanding not only how the lower layers work, and not only why they did the &quot;wrong&quot; thing in this one instance, but how to fiddle correctly with the layer you&#x27;re operating at to get the lower layers to behave properly.  You can work quickly with the high-level abstractions only as long as you understand the lower levels reasonably well.<p>Optimal machine learning requires a good understanding of memory cache hierarchies, parallel instructions and complexity theory - not to mention the statistics and calculus that it&#x27;s formed on.  And &quot;optimal&quot; isn&#x27;t some trivial &quot;save a few seconds&quot; but often &quot;return an answer within the lifetime of the universe&quot;.')