Item(by='TeeMassive', descendants=None, kids=[24685123], score=None, time=1601875759, title=None, item_type='comment', url=None, parent=24683974, text='&gt; This article triggers my Scrum™️ PTSD. The Way of DevOps? Am I going to have to fight off DevOps™️ certified consultants for the next five years now?<p>I feel you. Agile &#x2F; DevOps certified consultants are an oxymoron. Outside of evangelization and some advice, they have no clue of the project and as such are just outsourced bosses. The core concepts are not that hard to grasp: teams are responsible to deliver value in small batches to the client so they can get quick feedback from the client. Having to employ them should be seen as a failure and as a symptom of a dysfunctional organization where the teams are not trusted by the higher ranks to have a say in how they organize themselves and thus they hire expansive people who gave them a sale pitch that corresponds initial vision. tl;dr: agile comes from within, people telling you how to work are just other way to say &quot;boss&quot;.<p>&gt; By the way, I would recommend not trying to make your systems clever and “learn”, as the Third Way™️ suggests. Keep them dumb and understandable. The last thing a critical service needs is mysterious, unpredictable, unexplainable behavior. This point alone is a huge red flag for me, brace yourselves for five years of over-engineering as people blindly latch on to advice like this.<p>If that happens the problem is not the people who try to develop improvements, it&#x27;s the system that is not resilient to changes. These &quot;mysterious, unpredictable, unexplainable&quot; behaviors rarely manifest themselves all at once just by magic. They are usually caused by a comorbidity of problems that has accumulated due to a lack of will to fix them promptly or the lack of tools to catch and identify them early.<p>Blaming your developers because they attempted to improve the system is just downright counterproductive and demoralizing because you will end up with a Tech Lead™️ playing police because they think they must protect the System like the Secret Services must protect VIPs from threats that could come up in all directions.<p>Instead ask yourself those questions: How many times have you heard &quot;we don&#x27;t have time to fix this&quot;? How many sheets of paper would you use to explain the multitasking architecture of your system? Can you test your system on a single thread so you can make sure your sequential logic is sound? How much time does it take to run all the tests? How much does your development environment differs from production? Can you easily toggle a feature to test it?<p>The problem is not the &quot;3rd way&quot;. There is a reason why they have numbered it from 1 to 3, it&#x27;s because you can&#x27;t achieve the third without the second and the first before that. In other words you can&#x27;t learn acrobatics without learning how to walk first.<p>&gt; I suppose this is the next round of silver bullets after “microservices”.<p>Fads are universally bad yes, but as with most prejudices they always have a kernel of truth.')