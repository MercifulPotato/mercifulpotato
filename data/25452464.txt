Item(by='skissane', descendants=None, kids=[25453589], score=None, time=1608179324, title=None, item_type='comment', url=None, parent=25451726, text='&gt; If by &quot;performant&quot; you mean &quot;as fast as it used to run on x86 Mac hardware&quot; than the answer is: No, it&#x27;s emulation, and it&#x27;s slower than Rosetta2.<p>I wonder if this would motivate someone to build an x64-to-ARM translation layer for Linux which is closer to Rosetta2 than qemu-user-static in performance?<p>One of the secrets of Rosetta2&#x27;s performance is Apple Silicon processor extension enabling ARM code to use the x86 memory model. There is no reason in principle why some x64-to-ARM translator running on Linux on Apple Silicon could not exploit the same processor extension.<p>Another secret is that it predominantly does AOT translation, and only uses interpretation&#x2F;JIT for x64 code generated dynamically (such as by an x64 JIT). There is no reason in principle why something on Linux couldn&#x27;t do the same thing.<p>Perfect world scenario, Apple would open source Rosetta2 and it would be ported to Linux. Apple probably won&#x27;t do that because they&#x27;ve invested a lot of money into it and it gives them a competitive advantage over other ARM-based platforms (such as Microsoft Surface Pro X). (I do hope I&#x27;m wrong about this though.)')