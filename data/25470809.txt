Item(by='dmitriid', descendants=None, kids=[25471043], score=None, time=1608319209, title=None, item_type='comment', url=None, parent=25468122, text='&gt; You don&#x27;t &#x27;style&#x27; pages, you &#x27;construct&#x27; and &#x27;architect&#x27; them.<p>&gt; I think that understanding this is one of the key differentiators between developers who are good with CSS and those that struggle.<p>Yeah, no.<p>HTML is a single-root hierarchy whose only primary job is to display text and maybe some images. That&#x27;s <i>it</i> and it pretty much sucks even at this job.<p>CSS is and will remain a bunch of hacks trying to force the web page into something it&#x27;s not. Saying that CSS and HTML are meant to be used together to construct and architect pages is some serious re-writing of history and evolution of CSS and some impressive mental gymnastics.<p>For a great immediate overview why that is, it&#x27;s enough to look at this page: <a href="https:&#x2F;&#x2F;csstriggers.com" rel="nofollow">https:&#x2F;&#x2F;csstriggers.com</a> When changing text-shadow causes your entire page to reflow and repaint, there&#x27;s no &quot;architecting&quot; or &quot;constructing&quot;. It&#x27;s piling hacks on top of each other in the hopes it somehow works.<p>For most of its life since inception in 1996 CSS was <i>nothing but simple styling</i> of HTML pages. There were a few feeble attempts like `display:float` and `position:absolute` to pretend it&#x27;s not, but the enduring resilience of the Holy Grail kept obliterating that idea. This changed around 2008 with the meteoritic rise of mobile phones and mobile apps (thanks, Apple and Google). It still took w3c 5 years to come up with a solution that could barely place boxes in a relative position to each other without increasing developer suicide rates. I&#x27;m talking about flexbox, of course.<p>Side note: Terrainformatica&#x27;s Sciter had already had a solution to this for several years, and it was simpler, faster, and required significantly less cognitive load: [1] Not to mention Cassowary which was proposed all the way back in 1999 (can&#x27;t find the link now).<p>I think it took MS and then w3c a combined of 10 years to get Grid off the ground.<p>And all that to be able to finally say: hey, we can barely position an element vertically. Of course, they still can&#x27;t, as the OP link demonstrates: you need a brand new layout module + a brand new alignment directive to achieve something most GUI libraries in the world have had since Palo Alto&#x27;s Xerox in 1979. And yeah, it still has cons that has to be remedied by &quot;Gentle Flex&quot;.<p>And, of course, all of this is as brittle as the tail of Prince Rupert&#x27;s drop. You even glance at it sideways, and it breaks in countless unimaginable ways. Attempt a slightly different layout? Just lift the layout with the markup and attempt to place it in a different position on the page? Adjust sizes in the most minuscule way? Place these things side-by-side? Oh, great constructing and architecting work guys, everything is broken.<p>And, of course, it cannot be in any way, shape or form properly refactored because it&#x27;s a flat system where everything is global, styling a single tree tailored to display text and images.<p>[1] <a href="https:&#x2F;&#x2F;terrainformatica.com&#x2F;w3&#x2F;flex-layout&#x2F;flex-vs-flexbox.htm" rel="nofollow">https:&#x2F;&#x2F;terrainformatica.com&#x2F;w3&#x2F;flex-layout&#x2F;flex-vs-flexbox....</a> and <a href="https:&#x2F;&#x2F;terrainformatica.com&#x2F;2018&#x2F;12&#x2F;11&#x2F;10-years-of-flexboxing&#x2F;" rel="nofollow">https:&#x2F;&#x2F;terrainformatica.com&#x2F;2018&#x2F;12&#x2F;11&#x2F;10-years-of-flexboxi...</a><p>From last link:<p>--- start quote ---<p>As a result 12 (sic!) new flexbox-only-properties were added to already huge CSS property namespace (200 properties and counting). All that just to make FlexBox anyhow useful.<p>But the biggest problem of the solution is that the flexbox breaks existing CSS box model – dimensions of elements are now defined not just by width&#x2F;height properties but bunch of others like align-items and align-self.<p>Go figure out why “align” property shall change dimensions and why explicit height:100px declaration shall be ignored<p>--- end quote ---')