Item(by='Xylakant', descendants=None, kids=None, score=None, time=1603296824, title=None, item_type='comment', url=None, parent=24848917, text='&gt; a) the fact that a corporation uses a language is meaningless and can&#x27;t be used as an argument for anything - except maybe what to learn if you want to get a job there.<p>I disagree with you here. This is a low level production grade application in a domain that requires secure and stable operation. The fact that a team picked a specific language for this application demonstrates a certain level of stability and suitability for various problem domains. There are more examples of large scale rust codebases. That does not imply that rust is magically suited to all problems or that you should pick rust for your project at all cost and without further consideration, but it does mean that rust is used in “serious” projects that have significant monetary value attached to it.<p>&gt; b) that all arguments based on Rust&#x27;s novelty, call it &quot;serious language&quot; &quot;mainstream language&quot; or whatever - have merit. Rust is obviously not mature enough for many potential users and you can&#x27;t convince them by talking about RFCs.<p>You’re again arguing against points I never made. Rust has no ISO standard - true. But the point I was responding to was “the implementation is the spec” and that’s plain false. The RFC is written first and the implementation is tested against the RFC. There is a written document that specified expected behavior. Sometimes you need to follow the chain if RFCs modify existing behavior and there’s certainly cases where the implementation doesn’t follow the RFCs, but it not like all c compilers are 100% spec compliant all of the time.')