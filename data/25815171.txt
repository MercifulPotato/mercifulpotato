Item(by='bilinguliar', descendants=None, kids=None, score=None, time=1610919103, title=None, item_type='comment', url=None, parent=25814837, text='Do not get me wrong, k8s is a revolutionary piece of software, but it is not the best example of a clean Go project.<p>There are a few disturbing things:<p>1) Usage of `utils` package. Points against it were made in:<p><a href="https:&#x2F;&#x2F;dave.cheney.net&#x2F;2019&#x2F;01&#x2F;08&#x2F;avoid-package-names-like-base-util-or-common" rel="nofollow">https:&#x2F;&#x2F;dave.cheney.net&#x2F;2019&#x2F;01&#x2F;08&#x2F;avoid-package-names-like-...</a><p><a href="https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;go&#x2F;wiki&#x2F;CodeReviewComments#package-names" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;go&#x2F;wiki&#x2F;CodeReviewComments#package...</a><p>2) Check out the number of dependencies. This looks almost like NPM hell.<p>3) Lack of standardization and consistency. This project is so big, and there are so many contributors with their coding styles that the project looks untidy.<p>4) A lot of import renaming is a symptom of package name clashing or simply poor package naming. You usually do not need to rename import, and this is simply not required if your package structure was carefully thought about.<p>Again, k8s is great. K8s solves a lot of problems. I love it, but it is not a great example of Go code.')