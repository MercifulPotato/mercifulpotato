Item(by='rleigh', descendants=None, kids=None, score=None, time=1611668054, title=None, item_type='comment', url=None, parent=25910496, text='Can&#x27;t disagree with most of the points made here, except for a handful.<p>Firstly, that the &quot;Autotools are not obsolete&quot;.  Sorry, but they are.  They have been for well over a decade.  They don&#x27;t serve today&#x27;s needs effectively, and that is the reason for the decline in contributors and end users.  They moved on.  And that includes me too (I did the initial support for multiple language standards in Autoconf, starting with C99).  Support for new language standards and features in Autoconf is woeful.  Support for integration with various libraries, tools and frameworks is woeful.  Other systems support them out of the box.<p>As for whether support for them should continue.  That depends upon what individual projects need in terms of portability requirements.  Clearly a lot of projects have multiple decades of investment into the Autotools.  There is a sunk cost here, and replacement is costly.<p>Despite that, I&#x27;ve converted all of my own projects, plus many other projects I work with, over to CMake.  In every case it was a net improvement, and well worth the migration hassle.  Many projects overestimate the difficulty.  In doing these migrations, I&#x27;ve seen many examples of buggy use of the Autotools.  It only provides &quot;theoretical portability&quot;.  Unless you actively test it, it&#x27;s most likely broken.  In direct comparisons during project conversions, CMake has worked on various minor platforms (Cygwin, MinGW, Solaris) where the Autotools support was broken for years and no one noticed.  That is to say, direct empirical evidence showed worse Unix portability for the Autotools than CMake.<p>If the Autotools want to retain relevance, the main hurdle they need to cross is portability to modern platforms.  They can&#x27;t stick to Unix-only portability problems of the &#x27;90s and remain relevant.  So many projects have needs beyond that, and that is the main reason for the declining use.  Fix that, and people might have a reason to stay.<p>Unfortunately, if you follow the mailing list and such, you&#x27;ll see that most of the long-time developers and users have zero interest in portability outside the niche they have inhabited for the past 25 years.  They don&#x27;t understand how the rest of the world works or what their needs are.  There is no comprehension about using tools other than shell and make.  The developers who did care about this stuff moved on.  I became a CMake contributor instead.  Newer build systems moved on to ninja and other tools, support various IDEs, and integrate with all sorts of other systems and tools.  The Autotools don&#x27;t do any of that, and likely never will.  Yet for most developers, these are non-negotiable.  Want to use CLion, Visual Studio or Eclipse?')