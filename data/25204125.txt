Item(by='fwip', descendants=None, kids=None, score=None, time=1606259485, title=None, item_type='comment', url=None, parent=25203404, text='If you&#x27;re trying to reduce the memory usage of calculating the median, you&#x27;re not motivated by 5 element streams.<p>Further, I don&#x27;t think &quot;number of items &gt; k*median&quot; is a particularly grueling criterion for this algorithm (where k is some constant based on the delta).<p>Here is the first paragraph of the Introduction, for your reference:<p>&gt; Modern applications require processing streams of data for estimating statistical quantities such as quantiles with small amount of memory. A typical application is in IP packet analysis systems such as Gigascope [8] where an example of a query is to find the median packet (or flow) size for IP streams from some given IP address. Since IP addresses send millions of packets in reasonable time windows, it is prohibitive to store all packet or flow sizes and estimate the median size. Another application is in social networking sites such as Facebook or Twitter where there are rapid updates from users, and one is interested in median time between successive updates from a user. In yet another example, search engines can model their search traffic and for each search term, want to estimate the median time between successive instances of that search.<p>You can also read the paper to see how they implement Frugal-2U, which has better convergence characteristics for twice the memory.<p>They even address your specific complaint: &quot;Note that Frugal-1U and Frugal-2U algorithms are initialized by 0, but in practice they can be initialized by the first stream item to reduce the time needed to converge to true quantiles.&quot;')