Item(by='wahern', descendants=None, kids=None, score=None, time=1602223597, title=None, item_type='comment', url=None, parent=24726922, text='&gt; This mixes up the functional aspects of designing methods with the stylistic aspects of API design.<p>Yes, it does mix them up. That&#x27;s exactly what the merger doctrine is intended to do: the expressive character &quot;merges&quot; with the functional character.<p>From an abstract standpoint it seems that it gives short shrift to the purpose of copyright. But it&#x27;s necessary if you want to maintain an <i>effective</i> distinction between ideas (including systems and processes) and creative expressions in determining copyrightable subject matter. In practice, if you look hard enough there&#x27;s almost <i>always</i> some amount of creative originality in <i>any</i> piece of work, no matter how utilitarian it is; originality that by necessity must be copied. (Though Google didn&#x27;t do itself any favors by stipulating to literally copy+pasting the Java API.) The whole point of the merger doctrine (at least an assertive application of it) is to prevent a court from looking too closely at certain classes of works which, through custom and experience, should be considered as having a principally functional character.<p>And that&#x27;s why Google was bound to lose on this particular argument, because the experience and wisdom that begat the merger doctrine--that without a robust merger doctrine the distinction between idea and expression cannot be sustained in practice--has been forgotten. As time marches on earlier precedent has receded into the darkness and Feist becomes the <i>first</i> word on the matter; and all Feist really cares about is creative originality. The <i>entire</i> software industry, AFAICT, universally supports the notion that APIs, per se, shouldn&#x27;t be copyrightable. (Contrast with software patents, where a substantial fraction do disagree.) But show me an <i>actual</i> implementation or API specification where you could with any degree of confidence [in litigation] separate the expressive from the functional character in a way that preserves the principle and allows you to reimplement the API with minimal risk. Ultimately it&#x27;s really only viable if you have a special rule for APIs.<p>Of course, we still have Fair Use, similarity, and other defenses. But those are far more subjective, involve a substantial amount of litigation, and are generally high risk defenses. Without a bright line rule then as a practical matter people should and will be risk averse. Even if a court might judge a particular work functional, it&#x27;ll never get the chance to say so.<p>The whole expression-idea dichotomy is a complete fiction. It&#x27;s certainly not a law of nature. The idea of copyright is rather artificial as well. So it shouldn&#x27;t be surprising that we will often face such dilemmas and inconsistencies where theory and practice meet. The purpose of the merger doctrine is to give &quot;idea&quot; its due when otherwise &quot;expression&quot; would almost always win out, despite what would be optimal for the promotion of new works. Theoretically the legislature could carve out exceptions, but legislatures suck at that sort of thing, despite what they often teach in law school. More often its the courts, who wrestle first-hand with the ugly technical details and the real-life interests at stake of applying (over years, decades, and even centuries) the abstract concepts, who are best positioned to carve out exclusions or to subtly put their thumbs on the scales to further the ultimate purpose of the law. But, again, this role of the courts is frowned upon today, at least in an area such as this.')