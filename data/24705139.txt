Item(by='pdfernhout', descendants=None, kids=None, score=None, time=1602042857, title=None, item_type='comment', url=None, parent=24704174, text='You might also like &quot;The Pragmatic Programmer: From Journeyman to Master&quot; by Andrew Hunt and David Thomas. One of the ideas there is &quot;Software Development as Gardening&quot;. From an interview with the authors (originally from here but it is no longer accessible easily: <a href="https:&#x2F;&#x2F;community.oracle.com&#x2F;docs&#x2F;DOC-982950" rel="nofollow">https:&#x2F;&#x2F;community.oracle.com&#x2F;docs&#x2F;DOC-982950</a> ):<p><pre><code>    Bill Venners: In your book, The Pragmatic Programmer, you say, &quot;Rather than construction, programming is more like gardening.&quot; I really like your gardening metaphor for software development. Can you elaborate on it?\n    Andy Hunt: There is a persistent notion in a lot of literature that software development should be like engineering. First, an architect draws up some great plans. Then you get a flood of warm bodies to come in and fill the chairs, bang out all the code, and you&#x27;re done. A lot of people still feel that way; I saw an interview in the last six months of a big outsourcing house in India where this was how they felt. They paint a picture of constructing software like buildings. The high talent architects do the design. The coders do the constructing. The tenants move in, and everyone lives happily ever after. We don&#x27;t think that&#x27;s very realistic. It doesn&#x27;t work that way with software.\n    We paint a different picture. Instead of that very neat and orderly procession, which doesn&#x27;t happen even in the real world with buildings, software is much more like gardening. You do plan. You plan that you&#x27;re going to make a plot this big. You&#x27;re going to prepare the soil. You bring in a landscape person who says to put the big plants in the back and short ones in the front. You&#x27;ve got a great plan, a whole design.\n    But when you plant the bulbs and the seeds, what happens? The garden doesn&#x27;t quite come up the way you drew the picture. This plant gets a lot bigger than you thought it would. You&#x27;ve got to prune it. You&#x27;ve got to split it. You&#x27;ve got to move it around the garden. This big plant in the back died. You&#x27;ve got to dig it up and throw it into the compost pile. These colors ended up not looking like they did on the package. They don&#x27;t look good next to each other. You&#x27;ve got to transplant this one over to the other side of the garden.\n    Dave Thomas: Also, with a garden, there&#x27;s a constant assumption of maintenance. Everybody says, I want a low-maintenance garden, but the reality is a garden is something that you&#x27;re always interacting with to improve or even just keep the same. Although I know there&#x27;s building maintenance, you typically don&#x27;t change the shape of a building. It just sits there. We want people to view software as being far more organic, far more malleable, and something that you have to be prepared to interact with to improve all the time.\n</code></pre>\nAnyway, interesting to me to see how the &quot;gardening&quot; theme can apply both to the design (and use) of software to make ambient music and also to the software development process itself.')