Item(by='rakoo', descendants=None, kids=[25241145], score=None, time=1606598806, title=None, item_type='comment', url=None, parent=25236474, text='From <a href="https:&#x2F;&#x2F;github.com&#x2F;josephernest&#x2F;nfreezer&#x2F;blob&#x2F;master&#x2F;nfreezer.py" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;josephernest&#x2F;nfreezer&#x2F;blob&#x2F;master&#x2F;nfreeze...</a>, this is how you decrypt files:<p><pre><code>   [...]\n   with open(f2, &#x27;wb&#x27;) as f, src_cm.open(chunkid.hex(), &#x27;rb&#x27;) as g:\n      decrypt(g, pwd=encryptionpwd, out=f)\n   [...]\n\n   \n   def decrypt(f=None, s=None, pwd=None, out=None):\n     [...]\n     while True:\n        block = f.read(BLOCKSIZE)\n        if not block:\n            break\n        out.write(cipher.decrypt(block))\n     try:\n        cipher.verify(tag)\n     except ValueError:\n        print(&#x27;Incorrect key or file corrupted.&#x27;)\n</code></pre>\nSo, basically, you decrypt the whole file and write the result before checking the tag. You&#x27;re using a block cipher in a streaming fashion, and as has already been said before (see <a href="https:&#x2F;&#x2F;www.imperialviolet.org&#x2F;2015&#x2F;05&#x2F;16&#x2F;aeads.html" rel="nofollow">https:&#x2F;&#x2F;www.imperialviolet.org&#x2F;2015&#x2F;05&#x2F;16&#x2F;aeads.html</a>, &quot;AEADs with large plaintexts&quot;) this is dangerous if you don&#x27;t do it correctly. Your data may be garbage, but it&#x27;s too late it&#x27;s already written on the disk before you know it&#x27;s bad, it&#x27;s not deleted and you won&#x27;t know which file it was.<p>As some HN crypto celebrity said some time ago, if you write &quot;AES&quot; in your code then you&#x27;re wrong. You <i>MUST</i> use misuse-resistant libraries unless you know exactly what you&#x27;re doing.<p>TL;DR: your crypto is broken, use NaCl instead of doing it yourself.')