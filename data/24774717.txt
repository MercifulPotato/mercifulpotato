Item(by='twic', descendants=None, kids=[24785836, 24775085, 24775061], score=None, time=1602667216, title=None, item_type='comment', url=None, parent=24773659, text='You don&#x27;t need microservices to do this.<p>Build a monolith which does everything. Deploy multiple instances. Route booking requests to a subset of the instances. Route other requests to the other instances.<p>We did this at an old job. We had a data-intensive app which had a web UI for users, an admin UI, and an API for data export. They all had lots of common code for persistence, querying, aggregation, etc. Because of the common code, the simplest way to implement the three interfaces was in a single codebase. But because API requests could sometimes crash the app (we didn&#x27;t do a great job here!), we segregated the API into its own pool of instances. We didn&#x27;t segregate the admin UI, but could have done that if necessary.<p>As well as simplicity, another advantage of this approach is that the decision about how to split up traffic is very dynamic: you can change it just by adding or removing instances and changing load balancer config, without having to make any code changes. if you split the traffic up into separate microservices, you have to make that decision upfront, and changing it is a lot of work.')