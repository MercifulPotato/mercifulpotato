Item(by='013a', descendants=None, kids=None, score=None, time=1604435559, title=None, item_type='comment', url=None, parent=24981164, text='What high watermark? Was that when MongoDB switched their licensing on v4.0 to force all hosted service providers to open source their entire software stack if they wanted to host it, a requirement they themselves are exempt from with Atlas? Was it in 2017 when Docker locked important pieces of the Docker ecosystem behind the closed-source Enterprise Edition?<p>Its risky to mistake a golden age of open source with &quot;these companies just had infinite VC funding for a while, before realizing they need a sustainable business&quot;. So they try to strike a balance, which makes everyone unhappy because the open source advocates say they&#x27;re turning back on their promise to the community, while enterprise advocates say they&#x27;re too focused on hyperscale and not enough on solving actual enterprise problems. Some have survived, some are still in the VC honeymoon phase, many died (RethinkDB, CoreOS, etc).<p>These companies, and the products they made&#x2F;make, do not represent a high watermark of open source because generally speaking their products die with them. There&#x27;s no community to sustain it when the corporate sponsors disappear. And here&#x27;s the funny thing: If there were a community, if you built a product so awesome that people love it and develop for it and use it by the millions, you&#x27;re now Docker. The open source gets you to where you are, and now you just handed all of your competitors not just market validation, but the literal specification on what to build. And what it takes to protect from that would make you MongoDB; kinda open source, definitely not FOSS, lots of closed source components, enterprise, no community. Neither of these are model high water mark open source companies, because one is bad open source, and the other is a bad company (financially).<p>What&#x27;s the best kind of open source? Code which was written to solve a problem a company (or person) has in their business (or personal life), then released because more people than they are having this problem. Golang? Made at Google as a language that was simpler to write and harder to mess up for engineers right out of college. Rust? Improving Firefox reliability. I almost weep at the strong story behind these projects; the technology wasn&#x27;t created just to sell, it <i>had a purpose</i> that was <i>validated</i> (to some degree). Not technology for the sake of technology, nor technology directly for the sake of money, but for problem solving. Docker, MongoDB, CoreOS, none of these companies had problems; they invented problems, or inherited problems from previous jobs, then sold solutions.')