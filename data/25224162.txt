Item(by='bArray', descendants=None, kids=None, score=None, time=1606431603, title=None, item_type='comment', url=None, parent=25221638, text='I think booleans might even be the most problematic, as it&#x27;s _really_ implementation specific. In C for example you might expect 1 == TRUE, but in other languages this is not the case.<p>The real problems come in when you handle unexpected cases - and there&#x27;s no real answer as to whether you return true, false or an error. Personally I think the responsibility should be thrown back at the coder. E.g. I will sometimes do:<p><pre><code>    if(!(jobj.get(&quot;key&quot;, &quot;true&quot;).contains(&quot;f&quot;)))fun();\n</code></pre>\nWhere &quot;true&quot; is considered safe and default. Generally you need to make some effort to switch it off by making sure an &quot;f&quot; exists somewhere, but either case is fine.<p>Imagine for example that the value &quot;true&quot; turns on something potentially dangerous, you might want to guard against accidentally switching it on with:<p><pre><code>    if(jobj.get(&quot;key&quot;, &quot;false&quot;).equals(&quot;true&quot;))fun();\n</code></pre>\nSo you for sure have to make sure the string is &quot;true&quot; to switch it on, nothing else.')