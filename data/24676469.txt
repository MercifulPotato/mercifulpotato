Item(by='geofft', descendants=None, kids=[24676703], score=None, time=1601784687, title=None, item_type='comment', url=None, parent=24676169, text='The code <i>already</i> has that problem. Certainly, if you&#x27;re using YAML, a user could type &#x27;version: 2.2.5&#x27; where you&#x27;re expecting a major version number (an int), and all of a sudden your code is passed a string instead (or a string-flavored variant). You can imagine the same sort of problem in JSON too, usually from someone leaving off a quote where you&#x27;re expecting a string. NestedText&#x27;s philosophy seems to be, you&#x27;re going to need your code to handle this <i>anyway</i>, we&#x27;ll just pass you a string in all cases and it&#x27;s up to you to convert it to an int on your own and validate it.<p>Frankly, in most languages, this is better because you don&#x27;t have the types of objects randomly change based on user input. (In a few languages, with a few libraries, you can specify the type of the document to the parser and have it fail to parse the entire document if it can&#x27;t deserialize to the right type, in which case this is a little weaker. But you can still do that with NestedText, just one step after the parser - have your own function that takes a ComplexStructure&lt;..., String, ...&gt; and returns a ComplexStructure&lt;..., int, ...&gt; or throws an error.)')