Item(by='zmmmmm', descendants=None, kids=[25936131, 25935548], score=None, time=1611784051, title=None, item_type='comment', url=None, parent=25933121, text='So the example manages to evade any need for encapsulation. It&#x27;s viable because the internal hidden state is so cheap to compute (the full URL) that it can afford to reconstruct it within every call.<p>But imagine if constructing the url was a more expensive operation. Perhaps it has to read from disk or even make a database call. Now you really need to cache that as internal state. But doing that means external manipulation of root_url or url_layout will break things. Those operations need to be protected now. So do you make &quot;set_url_layout&quot; and &quot;set_root_url&quot; functions? And hope people know they have to call those and not manipulate the attributes directly? Probably you&#x27;d feel safer if you can put that state into a protected data structure that isn&#x27;t so easily visible. It makes it clear those are not for external manipulation and you should only be interacting with the data through its &quot;public interface&quot;.<p>Of course this brings about all the evils of impure functions, mutated state etc. But if you are going hardcore functional in the first place then it becomes rather obvious OO is not going to fit well there, so its a bit of a redundant argument then.')