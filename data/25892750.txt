Item(by='orf', descendants=None, kids=[25893024], score=None, time=1611501880, title=None, item_type='comment', url=None, parent=25892675, text='&gt; You&#x27;re definitely not writing general-purpose libraries that guarantee correctness for a wide variety of usage.<p>At the risk of sounding like a dick, I’m a member of the Django technical board and have been involved with its development for quite a while. Is that widely used or general purpose enough?<p>If you want a string then it needs to be a valid string with a known encoding (not necessarily utf8). If you want to pass through any data regardless of its contents then you use bytes. They are two very different things with very different use cases.<p>If I read a file as utf8 I want it to error if it contains garbage, non-text contents because the decoding failed. Any other way pushes the error down later into your system to places that assume a string contains a string but it’s actually arbitrary bytes. We did this in py2 and it was a <i>nightmare</i>.<p>I concede that it’s convenient to ignore the difference in some circumstances, but differentiating between bytes&#x2F;str has a lot of advantages and makes Python code more resilient and easier to read.')