Item(by='jiggawatts', descendants=None, kids=None, score=None, time=1611106037, title=None, item_type='comment', url=None, parent=25841326, text='&gt; bash set -e.(really really miss this)<p><pre><code>    Set-PSBreakpoint -Command Write-Error -Action { break; }\n</code></pre>\nsimilarly:<p><pre><code>    trap { &lt;# IDE breakpoint here #&gt; }\n</code></pre>\n&gt; Find it hard to set a script to abort with a stack trace.<p><pre><code>    $script:ErrorActionPreference = &#x27;Stop&#x27;\n    # or\n    throw &quot;Oops!&quot;\n</code></pre>\n&gt; Find it hard to deal with relative imports<p>That&#x27;s a very unfortunate limitation that I&#x27;ve never understood myself, to be honest. The typical &quot;best practice&quot; is to <i>not</i> use relative imports, but to use &quot;installed&quot; modules or scripts instead.<p>&gt; explaining the scoping rules<p><a href="https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;powershell&#x2F;module&#x2F;microsoft.powershell.core&#x2F;about&#x2F;about_scopes" rel="nofollow">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;powershell&#x2F;module&#x2F;microsoft...</a><p>&gt; Disklike explains how your array is now a single object when you returned it from a function<p>This is also &quot;one of those irritations&quot; that tends to bite people when dealing with search results, e.g.: &quot;Get-ADUser&quot;. If you always want an array (even an empty or single-valued array) then wrap functions in @(...), e.g.:<p><pre><code>    $users = @( Get-ADUser -Filter ... )\n</code></pre>\nThis is also the syntax to create an empty array, or an array of one item:<p><pre><code>    $empty = @()\n    $listOfOne = @( &#x27;foo&#x27; )\n</code></pre>\n&gt; miss native yaml support<p>But this would be <i>trivial</i> to add. Writing a module to provide commandlets such as &quot;ConvertFrom-Yaml&quot; and &quot;ConvertTo-Yaml&quot; is about a <i>day of effort</i> in PowerShell. Good luck doing the same thing in Bash and producing something useful, let alone full-featured!<p>In fact, someone has done it:<p><a href="https:&#x2F;&#x2F;github.com&#x2F;cloudbase&#x2F;powershell-yaml" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;cloudbase&#x2F;powershell-yaml</a><p>&gt; auto generated help canâ€™t be done via single line comment to function<p>Two lines for <i>automatically</i> generated help is one too many?<p><pre><code>    # .SYNOPSIS\n    # This works...\n    echo &#x27;foo&#x27;</code></pre>')