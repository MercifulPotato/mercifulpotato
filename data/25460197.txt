Item(by='PragmaticPulp', descendants=None, kids=[25462507, 25461159, 25460244, 25465739, 25476736, 25460526], score=None, time=1608238049, title=None, item_type='comment', url=None, parent=25459278, text='I stopped trying to debate open vs. closed software in a business setting long ago. There is a time and place for both, and rational actors will evaluate the tradeoffs given their circumstances.<p>When people start believing that open source software is inherently superior in every situation, or that ideological purity is the most important consideration, they aren&#x27;t making decisions in the best interest of the company. Engineers are especially prone to overestimating the downside risks of using closed source software (A long list of what-ifs such as &quot;What if the vendor goes out of business without warning?&quot;) and underestimating the downsides of using open source alternatives (Notably, the inability to pick up the phone and have another company&#x27;s engineers deal with the problem, per your contract). The situation is compounded by engineers who genuinely enjoy tinkering with open source software on the company&#x27;s dime and, frankly, would prefer to be paid to do so rather than purchase a more efficient closed-source solution.<p>Of course, there are some situations where open-source software is practically superior to alternatives. I don&#x27;t claim to suggest otherwise. However, the endless debates about ideological purity and avoiding hypothetical edge cases with 3rd party vendors frequently cloud decision making abilities in a business context.<p>For personal and open source projects, I&#x27;m all-in on free software alternatives. For business purposes, I&#x27;ll evaluate the available options and try to make the best business decision for the company.')