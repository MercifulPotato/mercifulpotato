Item(by='stickfigure', descendants=None, kids=[25900067], score=None, time=1611552212, title=None, item_type='comment', url=None, parent=25897829, text='&gt; safe refactoring ends up breaking format compatibility<p>I have a moderately strict rule for my teams that API objects must exist separately from normal domain objects (ie, persistence). And any APIs that have separate lifecycles (say, private webclient API vs official published API) get separate DTOs (which is what they really are).<p>This works fine? It&#x27;s not much work, not even in Java (thanks to lombok). There&#x27;s clear migration strategies for these api objects and you can refactor your domain objects without risk of breaking something.<p>I guess this is the &quot;by hand&quot; mapping that the article concludes with, but honestly it seems like a lot of words just to say &quot;keep your API objects separate from your domain objects&quot;.<p>&gt; JSON cannot directly represent cycles<p>It&#x27;s incredibly easy to tweak JSON to allow it, and you don&#x27;t even need a special parser. I wrote this five years ago:  <a href="https:&#x2F;&#x2F;github.com&#x2F;jsog&#x2F;jsog" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jsog&#x2F;jsog</a>')