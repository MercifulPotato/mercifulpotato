Item(by='DonHopkins', descendants=None, kids=[24993012, 24991610], score=None, time=1604509492, title=None, item_type='comment', url=None, parent=24989199, text='I agree. They work fine for simplistic interfaces with a few buttons, but what about more complex widgets, like plain&#x2F;rich&#x2F;code text editors, that have a lot of different callbacks and fire many different asynchronous events?<p>Sure, a button function that returns a boolean can be used as a simple parameter to an if statement, but you would would need a switch statement to test for all the different events that a text editor could send. That&#x27;s a terrible clumsy API! And where do you store the complex state of the attributed text, or parsed source code in a code editor? Do you just pass the entire string in every frame and re-parse html each time?<p>Where do you store and how do you access all the hidden state, like keyboard focus, cursor position, editing modes, etc, that object oriented user interfaces simply expose as properties, getters or setters?<p>And how do you implement an outliner? Do you have to write recursive immediate code that traverses the entire tree every frame? Where do you store the outline opened&#x2F;closed state, per-item state, and the cursor position?<p>You can&#x27;t just store that state in the actual objects you&#x27;re showing in the outline, because that mixes your user interface layer with your data modeling layer. The cure is worse than the disease. You end up cobbling together your own spaghetti-coded special-purpose object oriented retained mode adaptation layer, just what you were trying to avoid by using immediate mode in the first place.<p>And how do you implement efficient scrolling lists or tables or spreadsheets containing thousands or even hundreds of thousands of items? Do you have to pass every single item through the API every frame, instead of implementing callbacks to only pass and cache the items that fit on the screen?<p>And how do you implement graphics editors? Or drag and drop previewing? Or popping up item specific menus and submenus when you right-click on a list or outline item? Or anything more complex than a simple button?<p>Objects and closures and asynchronous event handlers are the best thing that happened to user interface programming since the pixel. Use them!')