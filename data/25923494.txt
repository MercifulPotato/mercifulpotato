Item(by='adam_arthur', descendants=None, kids=None, score=None, time=1611713827, title=None, item_type='comment', url=None, parent=25921992, text='DRY is about creating a common abstraction for code that is &quot;semantically&quot; equivalent, not &quot;incidentally&quot; equivalent.<p>Even if the code is the same today, is there a case to be made for a new feature that would require them to evolve independently? If so, the &quot;logical&quot; meaning of your function is independent between the two use cases. The code looks the same, incidentally (by accident). Speaking moreso to &quot;domain&quot;&#x2F;business logic.<p>And of course, there&#x27;s the more obvious DRY case of truly context agnostic operations, like math functions, string manipulations etc. Ideally you&#x27;re using some standard library for these things... agree with the author that it&#x27;s better to avoid sharing tiny custom libraries if amount of logic is too low to warrant the extra abstraction. The cost of abstraction is not fixed, of course, but dependent on how common and familiar that abstraction is to the broader audience.')