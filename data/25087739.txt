Item(by='com2kid', descendants=None, kids=[25095987, 25089514], score=None, time=1605303048, title=None, item_type='comment', url=None, parent=25087494, text='&gt;  They reference Protocol Buffers as a source&#x2F;definition of a &quot;schema&quot; at the bottom and IMHO they&#x27;re pretty rotten as schema definitions.<p>A past team of mine went from &quot;raw C structures over the wire consumed by 4 different implementations on 4 platforms&quot; to protobufs and it was a <i>huge</i> improvement.<p>One schema definition shared by all the teams was an end to the nightmare of some developer putting a field in the wrong order and burning debugging time trying to figure what was going on. Or even better, that bug we hit in .NET that, even though we explicitly defined the struct, size, and ordering, the compile reordered one of our fields and we couldn&#x27;t find a way around the bug so we had to make changes to the structure on all platforms so the bug didn&#x27;t exhibit itself.<p>Or the great lengths we went through to avoid making any sort of breaking changes. We didn&#x27;t originally pad our structures out more than an occasional handful of bytes (embedded, constrained storage and slow transfer speed over BTLE) so we quickly ran into all sorts of horrid issues.<p>Life was <i>much</i> better with protobufs.<p>Our main complaint was the lack of unsigned types. That sucked.<p>We didn&#x27;t use any of the RPC stuff, we just used it for the schema and as a binary data format. Worked great, would recommend any day over raw C structs.')