Item(by='08-15', descendants=None, kids=None, score=None, time=1602169765, title=None, item_type='comment', url=None, parent=24716525, text='&gt; static types are ... checking whether the shapes of your data and functions all line up<p>They definitely do more than that in Haskell.  You can define distinct types with the same &quot;shape&quot;, and the `newtype` keyword specifically creates a new type that has the same &quot;shape&quot; as an existing one, but is nominally distinct.<p>This nominal typing, as it&#x27;s called, allow you to express intent in types.  Type checking then doesn&#x27;t just check whether &quot;shapes&quot; line up, but also whether your intentions line up.  If you express contradictory intentions, you probably made a mistake.<p>Practically speaking, if the only types ever used in a Haskell program are `Int`, `Float`, `Char` and nested lists of those, all the type checker can ever do is tell me when I miscount square brackets or forget a `fromIntegral`.  Those programs never run on the first attempt.')