Item(by='dbandstra', descendants=None, kids=None, score=None, time=1602626958, title=None, item_type='comment', url=None, parent=24769560, text='This is a really nice system. Quake used it back in 1996 to fit the game in 8MB. They called it a &quot;hunk&quot;[0] and it worked pretty much exactly as you said.<p>The main drawback I find is that you can&#x27;t use some generic data structure implementations that expect to be able to free memory out of order, unless you&#x27;re fine with leaking before the final cleanup (if integrated into a generic allocator interface, the &quot;free&quot; method will probably be a no-op). For example, maybe you need a temporary hashmap to help with parsing a text file. It can be interesting to come up with implementations that work without freeing out of order.<p>Of course, you can always opt to use another, more general purpose allocator, on a block of memory retrieved from the hunk (see Quake&#x27;s &quot;zones&quot;).<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;id-Software&#x2F;Quake&#x2F;blob&#x2F;master&#x2F;WinQuake&#x2F;zone.h" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;id-Software&#x2F;Quake&#x2F;blob&#x2F;master&#x2F;WinQuake&#x2F;zo...</a>')