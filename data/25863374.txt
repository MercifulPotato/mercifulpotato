Item(by='e12e', descendants=None, kids=[25863933], score=None, time=1611258951, title=None, item_type='comment', url=None, parent=25863222, text='&gt; The Let&#x27;s Encrypt post does not describe how they implement off-machine and off-site backup-and-recovery. I&#x27;d like to know if and how they do this.<p>The section:<p>&gt; There wasnâ€™t a lot of information out there about how best to set up and optimize OpenZFS for a pool of NVMe drives and a database workload, so we want to share what we learned. You can find detailed information about our setup in this GitHub repository.<p>points to:\n<a href="https:&#x2F;&#x2F;github.com&#x2F;letsencrypt&#x2F;openzfs-nvme-databases" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;letsencrypt&#x2F;openzfs-nvme-databases</a><p>Which states:<p>&gt; Our primary database server rapidly replicates to two others, including two locations, and is backed up daily. The most business- and compliance-critical data is also logged separately, outside of our database stack. As long as we can maintain durability for long enough to evacuate the primary (write) role to a healthier database server, that is enough.<p>Which sounds like traditional master&#x2F;slave setup, with fail over?')