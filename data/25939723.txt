Item(by='BerislavLopac', descendants=None, kids=None, score=None, time=1611824091, title=None, item_type='comment', url=None, parent=25937695, text='It seems to me that you&#x27;re conflating two unrelated things. Yes, I agree -- there are perfectly legitimate reasons to implement module level functions instead of class and instance methods; but avoiding typing four extra characters just to be more like some other arbitrary language is not one of them.<p>Python has a different &quot;philosophy&quot; than &quot;C++ et al&quot;. Literally everything is an object, and everything has attributes; some of those attributes are objects that implement the Callable protocol. And it&#x27;s a syntactic sugar that some of those callables are implicitly passed certain predefined arguments; the default is passing the instance of the object itself. The exact same thing could have been implemented without it, like this:<p><pre><code>    foo.some_callable_attribute(foo, another_argument)\n</code></pre>\nSince methods are usually called more often than they are declared, it makes sense to make this first argument the default.')