Item(by='IggleSniggle', descendants=None, kids=[25862728], score=None, time=1611248504, title=None, item_type='comment', url=None, parent=25860158, text='Try thinking of it as `git` but for an entire OS instead of merely a filesystem, and that you have multiple branches of your git tree opened simultaneously in different locations.<p>Or think of it as a set of databases that include the combination of the current state and the code (&quot;migrations&quot;) to achieve that state, while allowing those databases to share the same history.<p>In other words, containers are a solution to state problems, not <i>only</i> &quot;works on my machine&quot; problems. The benefits are reproducibility and shared resources. It is &quot;functional OS&quot; as in &quot;functional programming,&quot; a pipe of common operations to apply to inputs to generate a consistent output, and which can be forked anywhere in the history&#x2F;pipeline long as the pipeline does not hide held state.<p>Coming back to the `git` analogy, a traditional VM with Snapshots is like saving ProjectV1, ProjectV2, ProjectV3, ProjectV2_fixed, ProjectV2_fixed_final, while a container solution is saving only the history and places where histories diverge.<p>To answer your alternative question, nix package manager (which can also be run as a standalone OS, NixOS) is an interesting alternative solution from Docker. Reading its documentation may also help in appreciating the alternative set of perspectives.')