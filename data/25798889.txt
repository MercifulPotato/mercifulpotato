Item(by='iLemming', descendants=None, kids=None, score=None, time=1610759540, title=None, item_type='comment', url=None, parent=25797314, text='&gt; what seem to be pretty clear trends<p>Clojure is a Lisp. Lispers simply failed to convince the younger generation of programmers how powerful and versatile Lisp can be. Any Lisp dialect these days gets rather automatically rejected. Of course, Clojure (or any other Lisp dialect) currently would struggle to gain momentum and compete with other non-lispy languages.<p>But if you look at the stuff that Lispers are capable of incubating, you&#x27;d be amazed. Today Clojurists figuring out interop with Python, Julia and R. They&#x27;ve built Clojure-like PLs for other language ecosystems: Golang, Lua, Erlang, etc. They are pushing Clojurescript on microcontrollers. They&#x27;re building neural networks, graph databases, and mobile apps. They&#x27;re borrowing good ideas from other languages, frameworks, and tools.<p>This isn&#x27;t a sprint, it&#x27;s a marathon. Look at the bigger picture. Notice things like Idris, which uses Chez Scheme for its backend. Chez Scheme is almost 40 years old!<p>And within various Lisps, Clojure is undoubtedly a resounding success. If anything at this point truly could de-throne Clojure, it won&#x27;t be something like Elixir. It would be a better, faster, perhaps more efficient fork of Clojure.<p>What&#x27;s keeping it from achieving growth in adoption is not something internal to Clojure. Or something that Clojurists can turn around. It&#x27;s the fact that it is a Lisp. And that&#x27;s not going to change. In fact, before Clojure, Lisps seemed to be getting out of fashion. Clojure made Lisp (somewhat) popular again.')