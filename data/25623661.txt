Item(by='adamkl', descendants=None, kids=[25625233, 25624491], score=None, time=1609697956, title=None, item_type='comment', url=None, parent=25623374, text='&gt; I feel about them the way I do about switch statements - they&#x27;re brittle and inextensible.<p>What is meant by this statement is that pattern matching violates the open&#x2F;closed principal. If you add a new type to switch on, you need to update all the pattern matching code in the whole application to account for the new type.<p>It’s one of the two sides of the “expression problem”[0] (the other being object oriented polymorphism).<p>Clojure’s approach to this is to use “multi methods” which is sort of a “pattern matching”&#x2F;“strategy pattern”. You are free to add in a new implementation of the multi method without having to update existing code<p>Here is a great post that talks about Clojure’s approach to polymorphism and covers multi methods in detail:\n<a href="https:&#x2F;&#x2F;aphyr.com&#x2F;posts&#x2F;352-clojure-from-the-ground-up-polymorphism" rel="nofollow">https:&#x2F;&#x2F;aphyr.com&#x2F;posts&#x2F;352-clojure-from-the-ground-up-polym...</a><p>[0] <a href="http:&#x2F;&#x2F;wiki.c2.com&#x2F;?ExpressionProblem" rel="nofollow">http:&#x2F;&#x2F;wiki.c2.com&#x2F;?ExpressionProblem</a>')