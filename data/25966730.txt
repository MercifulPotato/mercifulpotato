Item(by='dataflow', descendants=None, kids=[25967054, 25967212], score=None, time=1611987571, title=None, item_type='comment', url=None, parent=25966576, text='What do you mean by &quot;everything moves around&quot;? Are you referring to how the tool window layout is independent for debugging vs. developing (like in Eclipse)? That&#x27;s actually something many of us find incredibly helpful because some toolboxes don&#x27;t even make sense in the development perspective (like the Locals toolbox), so we don&#x27;t want them there. I&#x27;d bet once you got the hang of it and customized it, you wouldn&#x27;t want the exact same toolboxes in both places either. (Eclipse does this too, except it&#x27;s awful because it doesn&#x27;t switch back automatically when exiting debugging.) What you want to do there <i>is</i> to customize it when debugging, but that takes like 1-3 minutes tops, and you just do it once and never have to think about it again. Tossing it out because of that is like abandoning your home because you don&#x27;t like your room layouts and you don&#x27;t want to arrange things in more than one room... if this is what&#x27;s bugging you, you should really reconsider.<p>As for VS being slow, it mainly depends how big your project&#x2F;solution is. Where I know it can be unreasonably slow is when you have <i>lots</i> of projects (several dozen) and you&#x27;re trying to change all their settings, or something like that. However, if you&#x27;re referring to the startup time specifically, it might actually be due to your computer not having generated the native images yet (try running ngen.exe executeQueuedItems for both 64-bit and 32-bit). If you mean editing source code, it shouldn&#x27;t be sluggish at all. But if you mean features like Find Reference, Go To Definition, etc., those rely on Intellisense which takes a while to update for a complicated language like C++ (or a dynamic one like Python)—I don&#x27;t expect much variation across IDEs here.<p>___________________________<p>UPDATE: I think you deleted your reply, but I replied to it already, so I&#x27;ll paste it here:<p>You&#x27;re talking just about when you hover on the tool tabs, right? (i.e. the delay should not be there if you click, right?) It takes 400ms to open by default because that&#x27;s the default menu show delay on Windows. It&#x27;s the same delay you see if you right-click inside a folder and hover on New, for example. The delay actually works well for menus for older folks&#x2F;non-techies, but it&#x27;s glacially slow for developers (including for menus) unfortunately. You can reduce the delay by changing<p><pre><code>  HKEY_CURRENT_USER\\Control Panel\\Desktop\\MenuShowDelay\n</code></pre>\nin the registry from 400 to something else (I like 40) and then logging out and logging back in.<p>I can&#x27;t speak to what CLion does with the memory you give it, but it&#x27;s generally bad for programs to take up arbitrary amounts of memory, given that&#x27;d deny the memory to other apps. I wouldn&#x27;t judge a program positively if it takes up more and more memory the more I give it.<p>For the ngen thing this is specifically what you want to run:<p><pre><code>  C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\ngen.exe executeQueuedItems\n  C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\ngen.exe executeQueuedItems\n</code></pre>\nIf this is the reason for the slow startup, it should reduce the startup time drastically. For reference, on my laptop (almost 3GHz) VS 2019 takes around ~1 second to launch into an empty environment, which I find pretty acceptable for an IDE.<p>As to what you&#x27;re missing by using CLion, well the first thing is the subscription money and the second thing is that it doesn&#x27;t support nearly as many languages. Beyond that, I&#x27;m not sure I can give an accurate response right now because CLion has changed a fair bit since I last tried it, and added new features it didn&#x27;t use to have before. I know one thing I can think of off the top of my head is that CLion uses Make and&#x2F;or CMake, both of which have so many rough edges (like relative paths, paths with spaces, etc.) that anything based on them turns me off a priori (and in fact terrifies me because it means my files might get accidentally wiped). Other than that, I&#x27;d have to try it again myself and see what might have changed. You should just give both of them a real try and compare; you might end up liking both for all I know. But I can&#x27;t think of anyone I know who&#x27;s given VS a real chance and disliked it—the only exceptions I know are people who just hate it because they hate things Windows things altogether.')