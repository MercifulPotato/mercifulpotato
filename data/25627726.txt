Item(by='a1369209993', descendants=None, kids=None, score=None, time=1609731659, title=None, item_type='comment', url=None, parent=25625183, text='&gt; but it doesn&#x27;t change the probability<p>Actually, a,b,c are <i>also</i> sampled from the range of valid bit indexes (not uniformly on 0..127), so you might be able to pick a cardinality-72 subset of 0..127 such that random a^b^c is disproportionately likely to fall outside that subset (and thus get diagnosed as not a valid single-bit error correction). I don&#x27;t know that any existing ECC implementations actually <i>do</i> that, though.<p>Edit: did some cursory testing and using indexes 0..71 actually catches only ~24.04% (86016&#x2F;357840) of triple-bit errors, compared the theoretical 43.75% (156555&#x2F;357840, I think?) from a random error index. So &quot;doesn&#x27;t change the probability&quot; is just completely wrong given that a,b,c are randomly chosen from the 72 substrate bits, rather than from 128 possible 7-bit indexes.<p>Oddly enough, testing random selections of 72 valid indexes (eg 74773982&#x27;EBD0D35C&#x27;C5BEB2D8&#x27;C3FE9C5E, where set bits correspond to used indexes) actually gives slightly better results than theory (44.97% for that one, 44.65% is the lowest in the last dozen or so), which is somewhat interesting, but I still haven&#x27;t found any bit assignment that gives better than 50% (178920&#x2F;357840) catchment of triple bit errors.')