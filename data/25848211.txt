Item(by='masklinn', descendants=None, kids=[25850127], score=None, time=1611159495, title=None, item_type='comment', url=None, parent=25845241, text='&gt; It&#x27;s designed to force people to handle the damn error as near to the call as possible.<p>Except for not even remotely doing that:<p>1. if a call can fail but returns no useful value (or the caller cares little about it, and thus ignores everything it returns), Go will <i>not</i> complain that you&#x27;re ignoring the return value entirely<p>2. if you have several calls which can fail, nothing forces you to actually handle <i>all</i> the errors, because Go doesn&#x27;t check for that, it relies on the compiler error that a variable must be used:<p><pre><code>    v1, err := Foo(false)\n    if err != nil {\n        fmt.Println(&quot;error&quot;)\n        return\n    }\n    fmt.Println(&quot;first&quot;, v1)\n    v2, err := Foo(true)\n    fmt.Println(&quot;second&quot;, v2)\n</code></pre>\nwill not trigger any error, because the second calls simply reassigns to the existing `err`, which has already been used once, and thus is fine by the compiler.')