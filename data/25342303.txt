Item(by='bcrl', descendants=None, kids=[25344692, 25343444], score=None, time=1607406234, title=None, item_type='comment', url=None, parent=25339338, text='Hardware designers basically started making bad decisions on this issue around the time that VLAN tagging was introduced, as well as harware forwarding of IP packets.  When VLAN tags are inserted or removed, the CRC of a packet needs to be adjusted to reflect the inserted, removed and&#x2F;or modified bytes from the VLAN header. Additionally Both the CRC and IP checksum of a packet needs to be adjusted when TTL is decremented as part of IP routing.<p>When implementing this functionality, the naive hardware designer will strip the existing CRC from the packet, modify the contents of the packet and then reuse the handy dandy CRC calculation block to place a newly calculated CRC on the packet.  Similar choices are made for the adjustment of the IP&#x2F;TCP&#x2F;UDP checksums.  If any errors are introduced in the contents of the packet by the data path prior to the new CRC is calculated, this results in the CRC being &quot;corrected&quot; to include the erroneous data.<p>A far more understanding hardware designer will instead calculate how to adjust the CRC by the changes introduced in the packet contents.  Sadly, this is far more complicated to get right, and it goes against the drive of hardware designers to reuse blocks of code wherever possible.  Every hardware designer working on networking has a block of Verilog or VHDL code to calculate and append a CRC to a packet.  Only the most dedicated will attempt to apply only the delta needed to the CRC or checksum.')