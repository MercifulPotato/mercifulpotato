Item(by='wool_gather', descendants=None, kids=None, score=None, time=1601652396, title=None, item_type='comment', url=None, parent=24660503, text='This is in the context of properties in ObjC, which will synthesize accessor methods for the developer. If the property is marked `atomic` (which is also the default), the getter and setter will share a mutex. The mutex makes reads and writes effectively &quot;atomic&quot; -- gets and sets on different threads will never interrupt one another.<p>But that&#x27;s <i>all</i> you get. And the catch is that there&#x27;s usually more you need to do to guarantee thread safety for a particular operation.<p>For example, `@property (atomic) NSMutableArray *array;` has no guarantees about appending or removing the array&#x27;s _contents_.<p>For another example `@property (atomic) NSUInteger count;` is a mildly subtle trap, because a statement like `self.count += 1;` is _not atomic_. It&#x27;s an atomic read, an increment, and an atomic write. You need another synchronization mechanism to make the whole update threadsafe.')