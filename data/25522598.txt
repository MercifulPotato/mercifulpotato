Item(by='ibraheemdev', descendants=None, kids=[25523701, 25522634], score=None, time=1608759928, title=None, item_type='comment', url=None, parent=25522471, text='&gt; when you have a huge number of very small tasks running concurrently because that&#x27;s generally where OS-driven parallelism tends to suffer but is it such a common scenario<p>Web servers are all about I&#x2F;O and handling small tasks (requests), and are a perfect use case for asynchronous programming.<p>&gt; That sounds like premature optimization in many situations IMO<p>Maybe in some cases... but then just don&#x27;t use futures. Rust does not have a runtime, so it gives you the choice. std is all blocking, so you can spawn threads and do event-driven programming, which might be just fine for a lot of people.<p>async is more ergonomic for Rust specific reasons, makes sense for a lot of use cases, and was a highly requested language feature, so it was added to the language. OS threads can work just fine for many people. If that includes you, you don&#x27;t have to use async.')