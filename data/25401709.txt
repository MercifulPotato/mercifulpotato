Item(by='agallego', descendants=None, kids=[25401806], score=None, time=1607807182, title=None, item_type='comment', url=None, parent=25401677, text='so redpanda partitions &#x27;raft&#x27; groups per kafka partition. so in the `topic&#x2F;partition` model every partition is it&#x27;s own raft group (similar to multi raft in cockroachdb). So it is in fact even more important due to the replication cost and therefore the additional work of checksumming, compression, etc.<p>Last, a coordinator core for the one of the TCP connections from a client will likely make requests to remote cores (say you receive a request on core 44, but the destination is core 66), so having a thread per core with explicit message passing is pretty fundamental.<p><pre><code>    ss::future&lt;std::vector&lt;append_entries_reply&gt;&gt;\n    dispatch_hbeats_to_core(ss::shard_id shard, hbeats_ptr requests) {\n        return with_scheduling_group(\n          get_scheduling_group(),\n          [this, shard, r = std::move(requests)]() mutable {\n              return _group_manager.invoke_on(\n                shard,\n                get_smp_service_group(),\n                [this, r = std::move(r)](ConsensusManager&amp; m) mutable {\n                    return dispatch_hbeats_to_groups(m, std::move(r));\n                });\n          });\n    }\n\n</code></pre>\nHere is some code that shows importance of <i>accounting the x-core comms explicitly</i>')