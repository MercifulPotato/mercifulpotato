Item(by='dexwiz', descendants=None, kids=None, score=None, time=1603557393, title=None, item_type='comment', url=None, parent=24879763, text='The middle part about insects, their spawn rates, types, and mutating values is all about state. No matter how much you try to go &quot;stateless&quot;, there will be some state implied by your data. Functional programming as the author describes it is good at calculating state, but bad at accessing it. The only for functions to access state is through parameters, which have a final single value in your closure (no out parameters please). They don&#x27;t have registers&#x2F;variables&#x2F;properties to modify.<p>Functional programming says values like spawn rate or type should be the output of an expression. Monads try to solve this, but storage must be the output of an expression, and is always more complex than simple assignment.<p>There is one more secret about programming that functional tries to ignore, that it runs on physical machines. Even though some would like to describe programs pure mathematically, they still are bound by physical mechanisms. Most of those mechanisms are for storing state in memory or transferring state to another location. Abstracting over this fact makes programming painful once performance is taken into account.')