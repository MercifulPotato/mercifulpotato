Item(by='theptip', descendants=None, kids=None, score=None, time=1603998463, title=None, item_type='comment', url=None, parent=24929488, text='The tension I observe is: when should you use a highly productive and well-known framework like Django or Rails, and when should you build your own DDD&#x2F;Clean architecture?<p>This discussion has gone on for a long time, e.g. see the back-and-forth around <a href="https:&#x2F;&#x2F;dhh.dk&#x2F;2014&#x2F;test-induced-design-damage.html" rel="nofollow">https:&#x2F;&#x2F;dhh.dk&#x2F;2014&#x2F;test-induced-design-damage.html</a> after Weirich demonstrated what sort of thing is required to use the Hexagonal Architecture with Rails.<p>I believe that if your system is sufficiently complex, you&#x27;ll start to see the benefits of a more structured architecture, but it&#x27;s a net drag on productivity for small projects. These days perhaps you chop your monolith into microservices before reaching the ROI point for Clean&#x2F;Hexagonal?<p>I could believe that a &quot;framework-first&quot; architecture is more productive while you have &lt;100kloc. Or maybe it&#x27;s &lt;10kloc, I don&#x27;t know. I&#x27;m certainly seeing the architectural strain with a Django-first architecture in the current 150kloc monolith I&#x27;m working on, and chopping into a few services makes sense there for other reasons, so it might obviate the need for a bigger refactor onto Clean&#x2F;Hexagonal.')