Item(by='nercht12', descendants=None, kids=[24677255], score=None, time=1601744893, title=None, item_type='comment', url=None, parent=24673155, text='The dropping of semicolons and commas isn&#x27;t what makes it simple, I&#x27;ll agree. I was referring to the simplicity of the parse tree as a whole. It&#x27;s easier to figure out what a Copper statement does because there are very few types of statements. Yes, there are a couple of traps [1]. Try reading this example [2] and see how you like it.<p>[1] When passing either an object or data to a function, the parameter is stored as a function. e.g. if f=[p]{}, then f(a) and f(5) have p=a and p=5 respectively. If a=5, then the results are identical. The trap is that if a={ret({ret(5)})}, which is a wrapping function, and you call &quot;a&quot; before passing it to &quot;f&quot;, then you get the nested function  {ret(5)} instead of the wrapping function {ret({ret(5)})}. Having worked with Copper in practice, it&#x27;s not too hard to spot the error, but it is one of those things that will catch beginners off guard.<p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;chronologicaldot&#x2F;CupricBridge&#x2F;blob&#x2F;master&#x2F;examples&#x2F;Tic%20Tac%20Toe&#x2F;main.cu" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;chronologicaldot&#x2F;CupricBridge&#x2F;blob&#x2F;master...</a>')