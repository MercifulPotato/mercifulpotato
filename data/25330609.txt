Item(by='benjaminjosephw', descendants=None, kids=[25347043, 25331130, 25343230, 25349542, 25330850, 25331670, 25332311, 25335003, 25330805, 25331180], score=None, time=1607333274, title=None, item_type='comment', url=None, parent=25330241, text='Exactly. A paradigm shift implies new mental models and new metaphors for our abstractions that might not be valuable to people who think our current abstractions serve us well.<p>A great example of this is the fact that we still use the metaphor of files and folders for organizing our source code. The Unison language works directly with an AST that is modified from a scratch file[0]. For people committed to new models of distributed computing, that makes sense; for everyone else, it might be seen as an idea that messes with their current tooling and changes existing and familiar workflows.<p>I think the really big leaps forward are going to go well beyond this and they will look like sacrilege to the old guard. New programmers don&#x27;t care if a programming language is Turing complete or if the type system has certain properties, they only care about working software but existing programmers are dogmatic about these concepts. I think the next leap forward in programming is going to offend the sensibilities of current programmers. Having to break with orthodoxy to get a job done won&#x27;t worry people who don&#x27;t know much about programming tradition to begin with.<p>[0] - <a href="https:&#x2F;&#x2F;www.unisonweb.org&#x2F;docs&#x2F;tour#-to-the-unison-codebase-manager" rel="nofollow">https:&#x2F;&#x2F;www.unisonweb.org&#x2F;docs&#x2F;tour#-to-the-unison-codebase-...</a>')