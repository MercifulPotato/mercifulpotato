Item(by='ncmncm', descendants=None, kids=None, score=None, time=1604877184, title=None, item_type='comment', url=None, parent=25025047, text='It would be good if Rust doesn&#x27;t die. In order not to die, it would need to get its adoption rate up by two or more orders of magnitude. That would require some big changes in how Rust conducts business, that I don&#x27;t see any indications of beginning.<p>Most important would be to cut the number who try it, and give up before they have got their legs under them.<p>Changes in how borrow checker enforcement is applied could go a long way. But, even mentioning the topic, people come out of the woodwork shrieking that you want to turn off the borrow checker. It is a real embarrassment to the Rust community to have these people.<p>Another critical problem is the extremely slow compiler. It really should be two orders of magnitude faster. There has been extremely heavy lifting to get it just percentages faster, that will not be enough.<p>There is really no objective reason for a Rust compiler to be slow. C++ has unfortunate historical baggage that slows it down, but Rust doesn&#x27;t have any of that. I don&#x27;t see how to get a good compiler for Rust short of writing a new one. If an undergraduate class can all write a Java compiler in a semester, why is there still only one, slow, Rust compiler?<p>* * *<p>Go might survive if it can break out of its cloud niche. Cloud is trendy now, but trends change. Other languages have had much wider usage than Go has, and faded. Nothing about Go makes it uniquely suited for coding cloud operations. As it gets more complex, its ease of adoption and fast compilation will both become less pronounced.')