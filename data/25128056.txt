Item(by='dilap', descendants=None, kids=[25128775], score=None, time=1605639579, title=None, item_type='comment', url=None, parent=25127325, text='(HN reply speed limitations are silly. :)<p>Right, as you noticed in your second comment, I&#x27;m talking about the inner -1, which should never be hit. The issue is broader than just the specific issue of binary search; it&#x27;s a question of, which language design features lead you to writing more reliable software, more easily?<p>I&#x27;m unconvinced about array access returning Maybe being a good idea, because it&#x27;s generally a bug, not actual uncertainty. The fact that the usage of the returned maybe value just serves to obscure possible bugs in the implemenatation of binary search is one example of that.<p>At the broadest level, running a program can be thought of as the combination of two things:<p>1. The program itself<p>2. The input to the program<p>Now there are two ways your program can encounter an &quot;error&quot;. It can be because there is a bug in (1), or it can be because there is bad input in (2).<p>I think as a general rule, to handle (1) you just need to crash gracefully. The program itself has become confused; there is nothing you can do to recover. For (2), the program itself is not confused, and it should handle the data it has been given in the best possible way.<p>Thus, things like sum-types are appropriate for type 2 errors, but not for type 1 errors.<p>(That&#x27;s my argument, anyway.)<p>(I recommend checking out the Zig language, which gets this exactly right IMO.)')