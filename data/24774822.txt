Item(by='csala', descendants=None, kids=None, score=None, time=1602668368, title=None, item_type='comment', url=None, parent=24770954, text='Simply saying prefer &quot;this&quot; over &quot;that&quot; without adding any context to the equation is the best recipe to end up doing the wrong thing in the wrong place. Or maybe you mean that you can make the same decisions when testing a Web based app UI than when testing a cryptographic function in the Linux kernel?<p>IMO, both mocks, fakes and &quot;reals&quot; (to put it in the same language) need to be first class citizens of software testing, each one of them used in the right circumstances.\nJust like resorting to unit testing only is as much a bad practice as it is to use acceptance testing only.<p>A good testing strategy should be adapted to each software and context, and potentially include all types of tests: unit, end-to-end, integration, numerical, acceptance, etc. and all sorts of resources: mocks, dummy data, substitutes, testing engineers, test databases, real databases, real users, etc.')