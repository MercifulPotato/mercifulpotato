Item(by='siraben', descendants=None, kids=None, score=None, time=1604888798, title=None, item_type='comment', url=None, parent=25030720, text='If your langauge is functional (has closures), I would recommend checking out[0] which is a full end-to-end tutorial on compiling a functional language to C and could be adapted to LLVM, using Haskell as the implementation language.<p>Basically the only slightly non-trivial step is closure conversion[1] which lifts free (AKA &quot;captured&quot; in C++ terminology) variables from a closure, which lets you encode closures faithfully in a first-order language with structs.<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;jozefg&#x2F;pcf&#x2F;" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jozefg&#x2F;pcf&#x2F;</a><p>[1] <a href="http:&#x2F;&#x2F;lampwww.epfl.ch&#x2F;teaching&#x2F;archive&#x2F;advanced_compiler&#x2F;2007&#x2F;resources&#x2F;slides&#x2F;act-2007-05-closure-conversion.pdf" rel="nofollow">http:&#x2F;&#x2F;lampwww.epfl.ch&#x2F;teaching&#x2F;archive&#x2F;advanced_compiler&#x2F;20...</a>')