Item(by='cannam', descendants=None, kids=None, score=None, time=1603707495, title=None, item_type='comment', url=None, parent=24890463, text='My favourite thing about SML is that it&#x27;s a relatively idiot-proof language. It has something of Python&#x27;s &quot;one obvious way to do it&quot; - a good chance of being able to understand someone else&#x27;s code. This is partly because the language is small and features many sensible decisions, and partly because it isn&#x27;t particularly malleable at the syntactic level (compared to your Lisps or Haskell).<p>The tradeoff is that it can be more laborious than other functional languages. My code would be shorter if it had record updating, a single-character lambda syntax, contextual operators for real or int arithmetic, etc. Not only does it lack syntactic sugar for associative containers, it doesn&#x27;t even have them in the standard library. Nor sorting, nor random numbers, nor complex numbers or matrices, nor uniform type-to-string formatting or string interpolation. Some of these holes can be filled by libraries, but then library choice becomes a problem.<p>I can live with an awful lot of that though, given the relative clarity of the language, the really practical module system, and the delightful feeling you get when using a language standardised over 20 years ago that, once written, your code can stay written.')