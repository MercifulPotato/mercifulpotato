Item(by='gjulianm', descendants=None, kids=[25003652, 25004837, 25006703, 25003640, 25004763, 25004090, 25004937, 25004176, 25007824], score=None, time=1604621615, title=None, item_type='comment', url=None, parent=25001789, text='This is very well written, but also a marvel of overengineering in my opinion. It needs to<p>- Set up a k3s cluster<p>- Set up an ingress controller<p>- Set up a certificate manager<p>- Set up a Github actions pipeline to build and push Docker images<p>All of that to deploy a bunch of standard applications in a single server, with very low load. So now, not only do you have to worry about the applications themselves and their configuration, but you also have to worry about all the layers on top of them. And the guide sounds good and easy when you read it, but I wonder how much time will you spend implementing it, working out issues and quirks and adding new things compared to the time you&#x27;d need doing a standard installation with a regular Ubuntu, Debian, Fedora or whatever system. And the resource overhead is important too, specially in disk space (60G in system disk for a home server sounds like a lot to me).<p>I don&#x27;t see the advantage here, honestly. I see a lot of moving pieces and complexity added and the only thing you seem to get out of it is an automated deployment, which is not very useful for a home server and also doable with simpler tools (you could even do it with a set of basic scripts that install software and copy configuration files).<p>Maybe it&#x27;s more secure due to isolation, but for a simple home server you can (and should) protect yourself against 99% of the attacks by using 2FA for SSH, a firewall with only the ports you want opened (and possibly restricted to certain IP ranges) plus basic auth + HTTPS on Nginx with fail2ban.')