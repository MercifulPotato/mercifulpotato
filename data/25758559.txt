Item(by='qudat', descendants=None, kids=None, score=None, time=1610515640, title=None, item_type='comment', url=None, parent=25757891, text='This is where our preferences probably differ.<p>I’m not a fan of ActiveRecord or ORMs in general. I’d much rather write raw sql queries with a little help to improve reusability.<p>I found Prisma to be super basic. Anything complex like joins or a composition of where’s and ors and it didn’t work.<p>It also nests related objects where for my purposes I wanted everything to be flat. So if a list has a user associated with it, I want to flatten it like: { list, user }.<p>I also didn’t like how Prisma has a generate cli to integrate end developer models that must be integrated into your build step to deploy if you’re using typescript.<p>Its schema cli command worked but in weird ways that I didn’t like. Sharing Prisma types with the client was not automatic. For example, Prisma coverts datetime columns into dates, which sounds nice, but when I send that data as an api response it turns into a string. Now I can’t use their interfaces without plucking the date times and converting it to a string. It just wasn’t as useful as I had hoped.<p>Knex does exactly what I want and nothing more. All of my raw sql queries were easily converted and worked perfectly. I build the interfaces and knex uses them. There’s no special command that converts their schema format into something I can kind of use.<p>Their typing was nice once I got it working however, and for simple things it worked fine. I just noticed I had to write a lot of raw sql.')