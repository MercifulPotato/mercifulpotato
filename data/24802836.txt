Item(by='nivviv', descendants=None, kids=[24803205, 24803325], score=None, time=1602868290, title=None, item_type='comment', url=None, parent=24800161, text='A small perspective insight from a game developer:<p>We (Beamdog) are using nim in production for Neverwinter Nights: Enhanced Edition, for the serverside parts of running the multiplayer infra.<p>nim is uniquely good in providing an immense amount of value for very little effort. It gets _out of my way_ and makes it very easy to write a lot of code that mostly works really well, without having given me any serious traps and pits to fall into. No memleaks, no spurious crashes, no side-effect oopses, anything like that. It&#x27;s C&#x2F;++ interop has been a huge enabler for feature growth as well, as we can partly link in game code and it works fine. For example, our platform integrates seamlessly with native&#x2F;openssl&#x2F;dtls for game console connectivity. And it all works, and does so with good performance. It is all now a set of quite a few moving components (a message bus, various network terminators, TURN relays, state management, logging and metrics, a simple json api consumed both by game clients and web (<a href="https:&#x2F;&#x2F;nwn.beamdog.net" rel="nofollow">https:&#x2F;&#x2F;nwn.beamdog.net</a>), ...).<p>We&#x27;re still lagging behind and are on 1.0.8, but that is totally fine. It&#x27;s tested and works, and there&#x27;s no real incentive to move to 1.2 or 1.4 - yet!<p>Usage for our game has expanded to provide a few open source supporting utilities (<a href="https:&#x2F;&#x2F;github.com&#x2F;Beamdog&#x2F;nwsync" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;Beamdog&#x2F;nwsync</a>) and libraries (<a href="https:&#x2F;&#x2F;github.com&#x2F;niv&#x2F;neverwinter.nim&#x2F;" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;niv&#x2F;neverwinter.nim&#x2F;</a>) too. The good part about those is that they are cross-platform as well, and we can provide one-click binaries for users.<p>OTOH, There&#x27;s been a few rough edges and some issues along the way. Some platform snafus come to mind, but those have been early days - 0.17, etc. Some strange async bugs had been found and fixed quickly though.<p>Good and bad, at least for me, nim has been a real joy to work with. If I had the chance to message my 3-years-younger, I&#x27;d just say &quot;yea, keep going with that plan&quot;, as it turned out to save us a lot of development time. I suspect the features we&#x27;ve put in wouldn&#x27;t have been possible in the timeframe we had, if it would have been all written in, say, C++.')