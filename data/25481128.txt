Item(by='_cart', descendants=None, kids=None, score=None, time=1608411488, title=None, item_type='comment', url=None, parent=25480990, text='First: I won&#x27;t pretend to be a Unity DOTS expert, but I have worked with it briefly. There are many similarities:<p>1. The general data model: entities, components, systems<p>2. Running systems in parallel<p>3. Archetypal ECS: a specific ECS storage strategy that groups entities of the same &quot;data layout&quot; together to increase cache friendliness during iteration.<p>Bevy has a lot of query&#x2F;filtering&#x2F;change detection features that I haven&#x27;t seen implemented the same way elsewhere. But I can&#x27;t comment on whether or not Unity DOTS has those features because I don&#x27;t have enough experience with it.<p>I think we differ the most in UX. Wild (hard to verify) claim: I think Bevy has the most ergonomic ECS in existence. If you compare a Unity example (<a href="https:&#x2F;&#x2F;github.com&#x2F;Unity-Technologies&#x2F;EntityComponentSystemSamples&#x2F;tree&#x2F;master&#x2F;ECSSamples&#x2F;Assets&#x2F;HelloCube" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;Unity-Technologies&#x2F;EntityComponentSystemS...</a>) to a Bevy example (<a href="https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;blob&#x2F;master&#x2F;examples&#x2F;2d&#x2F;sprite.rs" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;blob&#x2F;master&#x2F;examples&#x2F;2d&#x2F;s...</a>), I think its clear which one is easier to read&#x2F;write (especially when you factor in the fact that the Bevy example is fully self contained). But its also worth pointing out that Unity is still one of the _more_ ergonomic ECS-es out there. Its still pretty good.')