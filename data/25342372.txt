Item(by='Cyph0n', descendants=None, kids=[25342463], score=None, time=1607407137, title=None, item_type='comment', url=None, parent=25342318, text='In Rust, you would implement From&lt;ErrorA&gt; and From&lt;ErrorB&gt; for a custom Error enum defined in your application&#x2F;library. This will allow you to convert any ErrorA or ErrorB into Error.<p>Then, you could simply return Result&lt;Integer, Error&gt; from your function, and the conversion would happen for you behind the scenes.<p>Of course, unless you track the original error types, you will lose some information. But itâ€™s a very clean way to handle multiple error types within your library imo.<p>An example of how this works: <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;rust-by-example&#x2F;error&#x2F;multiple_error_types&#x2F;wrap_error.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;rust-by-example&#x2F;error&#x2F;multiple_err...</a>')