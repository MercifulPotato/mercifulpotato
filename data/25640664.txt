Item(by='majormajor', descendants=None, kids=None, score=None, time=1609809134, title=None, item_type='comment', url=None, parent=25626202, text='&gt; The problem is that the reader of your code is not going on that journey with you. They are coming in naively without knowing all of that experimentation you did. The writer now has the opportunity to create code that &quot;just happens&quot; to work by a magic of coincidences and conveniences based on very subtle non-obvious properties of the APIs and systems they are working with. The reader is severely disadvantaged and will have a much harder time to reach parity with the state of knowledge that the writer had. For example, some property of a function or object may not be documented at all, but through the REPL the writer has ascertained it is true. How can the reader know this?<p>If these sorts of things aren&#x27;t documented then not having used a REPL won&#x27;t save you.<p>Someone ran a function with a println or in a debugger, figured out the answer, then removed the debug stuff... but did it by repeatedly compiling&#x2F;running instead of in a REPL.<p>(Or, my personal favorite... someone <i>didn&#x27;t bother</i> to run that particular code, but just made some assumptions, so has no idea those edge cases are even there...)')