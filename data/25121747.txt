Item(by='DominikD', descendants=None, kids=[25123992, 25122422, 25124043, 25122367], score=None, time=1605605672, title=None, item_type='comment', url=None, parent=25121456, text='&gt; If you have a software engineer being promoted to senior software engineer (1 -&gt; 2) without at least intermediate knowledge of the codebase, that&#x27;ll make other seniors suspicious&#x2F;wary.<p>She clearly did. Without that she would not be able to onboard or contribute to the design discussions and would not be able to help customers out. You can&#x27;t assume that customers implies non-technical. In mid to large orgs most of your customers are other teams with very technical needs.<p>&gt; if you hire a software engineer that does mainly&#x2F;only glue work, you mis-hired<p>No, it depends on what your team needed. You can&#x27;t have a 5-person team where everyone is great at crunching code unless your only success metric is LOC produced. You need diverse set of skills to deliver and maintain the product. You mis-hired only if your glue competencies are already covered.<p>In general I see this as a massive problem that many engineers believe that technical excellence is all that&#x27;s needed to build a product. It isn&#x27;t. Design reviews, code reviews, and onboarding for technical staff are very much technical.<p>And simple technical tasks that are tedious and boring are still technical tasks. And as a senior I would never assign them to a junior developer unless there&#x27;s a lesson to be learned by doing them (once). If your glue person is picking them and you judge glue person&#x27;s output by the complexity of those tasks (not technical enough!) then your metrics are wrong.')