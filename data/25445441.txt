Item(by='lock-free', descendants=None, kids=[25446584, 25445735], score=None, time=1608139966, title=None, item_type='comment', url=None, parent=25445126, text='I was just checking the build times from your github repo by running cargo build. If I used it in a project it would be multi-language and require linking against native code through a C shim. It would be great if that was provided and had a stable ABI + .so for the rust code that I could install through a .deb or .rpm instead of building through cargo.<p>&gt; Though we are pretty lean on dependencies, and I would expect most projects using oso would be using serde anyway.<p>It would be great if `serde` was opt-in through cargo features, which is pretty common in the Rust ecosystem. While your manifests are small there&#x27;s still quite a bit getting pulled in. Might want to inspect the dependency graph to see if there&#x27;s anything excessive or some features that can be non-defaulted.<p>&gt; That being said those times you&#x27;re seeing seem very long, even for Rust!<p>Not in my experience. This was a clean debug build. It&#x27;s not that uncommon on CI runners to have much longer times than developer machines (MacOS CI runners are especially bad about this, and also cost a lot more money). That&#x27;s why I do profiling on a weaker one when evaluating build times. Incremental builds are faster, they&#x27;re also harder to orchestrate.<p>Not trying to be overly critical, just trying to give a view! Compiling on other people&#x27;s machines is expensive, a good way for me to buy into something like this instead of doing it myself (which is how I&#x27;m doing it right now!) is to reduce the dependency tree and make building stupid fast&#x2F;easy.')