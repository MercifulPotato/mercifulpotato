Item(by='lhorie', descendants=None, kids=None, score=None, time=1607667238, title=None, item_type='comment', url=None, parent=25382284, text='&gt; there&#x27;s no reason a front end developer should need to care about it<p>Well, yes and no. You&#x27;re right that trying to express every nook and cranny of the business rules as solely a UI problem is a wrong way of trying to understand the complexity. But a frontend developer does need to care about how to surface whatever complexity needs to be surfaced, and likewise, backend developers need to know how to model the complexity, and there needs to be some level of orchestration between all the moving parts. Remember, Uber is built on a microservice architecture, and many things that would be arbitrary hardcoded values in projects elsewhere (e.g. pricing) are instead tied to complex dynamic systems in Uber.<p>In the pricing example, when Uber added the option for drivers to set their own multipliers, it wasn&#x27;t just a new slider in the driver app. It also affected the pricing AI model, the matching algorithm, how and when prices are displayed in the rider app, geofencing rules, etc etc.<p>When new regulations mandate that every commit that makes production changes in your city must have an appropriate audit trail, when you need to deploy a cheat-proof face mask detection AI model in response to a global pandemic, when you need to figure out how to make customer support cost $1 per engagement instead of $10, when you need to figure out how to make your network protocol faster in Bangalore, when you need to figure out how to make GPS more accurate in Manhattan, or when any of hundreds of fuzzy problems need solving, then saying that variations of all of these problems have been seen elsewhere misses the point that going from problem statement to deployed solution isn&#x27;t always a trivial task.<p>The original question was why so many people work at Uber. The answer is that there are a lot more fuzzy problems than meets the eye.')