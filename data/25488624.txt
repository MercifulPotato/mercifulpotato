Item(by='chubot', descendants=None, kids=None, score=None, time=1608490701, title=None, item_type='comment', url=None, parent=25487063, text='Here&#x27;s my recent comment about sdlang:<p><a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24945449" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24945449</a><p>So I think Oil will be very familiar to SDLang users, BUT it has programmability, which you need in cluster configuration and build configuration, e.g. to express duplication.<p>So I would divide the space into a few categories:<p>(1) Stringly typed: .ini, YAML<p>(2) Typed Data: JSON, XML to some extent, SDLang<p>(3) Programmable configuration: HCL, Cue, Jsonnet, Nix expressions, BCL, Starlark, Oil<p>SDLang looks really similar to HCL too, except HCL is programmable:<p><a href="https:&#x2F;&#x2F;www.terraform.io&#x2F;docs&#x2F;configuration&#x2F;expressions&#x2F;dynamic-blocks.html" rel="nofollow">https:&#x2F;&#x2F;www.terraform.io&#x2F;docs&#x2F;configuration&#x2F;expressions&#x2F;dyna...</a><p>Very important: With categories 1 and 2, people add template languages like Go templates on top to solve the programmability problem, which we don&#x27;t want!!!  We don&#x27;t want to move typed data back to the stringly typed realm!<p>Also, I don&#x27;t think the &quot;expression style&quot; of HCL, Nix, and BCL is great.  It&#x27;s good for small things, but it starts to get hard to read for large configs.  I&#x27;d prefer simple for loops and if statements, basically like the Starlark language (a subset of Python used in Bazel).<p>---<p>Thanks for the paper reference, I bookmarked it!')