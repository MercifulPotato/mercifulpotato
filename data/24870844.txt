Item(by='theandrewbailey', descendants=None, kids=None, score=None, time=1603468615, title=None, item_type='comment', url=None, parent=24870699, text='This is a good step by step guide:<p><a href="https:&#x2F;&#x2F;loganmarchione.com&#x2F;2015&#x2F;05&#x2F;encrypted-external-drive-with-luks&#x2F;" rel="nofollow">https:&#x2F;&#x2F;loganmarchione.com&#x2F;2015&#x2F;05&#x2F;encrypted-external-drive-...</a><p>As for decrypting (unlocking) and mounting the drive, most desktop environments have the capability. For my purposes, I use a script to unlock, backup, and lock when I attach an external HD to my server and SSH in:<p><pre><code>    #! &#x2F;bin&#x2F;bash\n    backupfrom=&quot;&#x2F;srv&#x2F;fileshares&#x2F;&quot;\n    echo &quot;disk password first, then login password twice&quot; # a reminder because I forget which one to put in\n    blockdev=${1:-&#x2F;dev&#x2F;sdd1}\n    device=$(udisksctl unlock -b $blockdev | grep -Po &quot;(?&lt;= as )&#x2F;[0-9A-Za-z&#x2F;-]+&quot;)\n    direct=$(udisksctl mount -b $device | grep -Po &quot;(?&lt;= at )&#x2F;[0-9A-Za-z&#x2F;-]+&quot;)\n    if [[ $? -eq 0 ]] ; then\n        rsync -atP --del $backupfrom $direct\n    fi\n    udisksctl unmount -b $device\n    udisksctl lock -b $blockdev\n</code></pre>\nThere&#x27;s probably a better way to do this.')