Item(by='milesvp', descendants=None, kids=None, score=None, time=1602704868, title=None, item_type='comment', url=None, parent=24778596, text='I managed to transition to software dev in my late 20s.<p>I had a few things going for me that made it possible.<p>I&#x27;d done a considerable amount of CS in college. (I just didn&#x27;t think I could be a programmer at the time, so didn&#x27;t pursue it further)<p>I started doing technical work for family on the dropshipping website that they acquired to try to augment their primary business. This was important in that I had real problems to solve, and not just toy problems that tutorials often cover. It also gave me something to put on my resume. Though this almost backfired when the HR background check found out it was a family business.<p>At the time, the arms race for hiring devs wasn&#x27;t as bad as it is today. Spending 1-2 hours a day for a couple of months on &quot;Coding Interviews Exposed&quot; made it easier to pass interviews in the 2000s than it would now, where the same amount of time on leetcode probably won&#x27;t make you stand out in the same way.<p>I also transitioned in the months prior to a huge market crash. So demand was really high for talent, which made getting the job easier.<p>I got a little lucky with an interview (all interviews require a certain amount of luck). I managed to be the first candidate to correct the hiring manager about the big-O runtime of the whiteboard coding problem in all the years he&#x27;d been asking it. So I think he was a big proponent in overcoming some of the HR hurdles I might have otherwise had.<p>I was working on a personal project (a real-time poker bot) that I wanted to talk about, and that other programmers found interesting to hear about, that was considerably challenging on multiple levels. It gave me something to really talk about during an interview, and allowed me to show how I dealt with pitfalls and how I persevered despite them. Also how I dealt with real world messiness in a code base.<p>I had savings and such a low cost of living that I could focus on learning as much as necessary to make the transition without having to worry about income.<p>I say all this not to discourage you, but to maybe give some idea about switching strategies. You are not too old to switch. But know that there is a lot knowledge you&#x27;ll need, and you can expect to spend a lot of energy learning. If you&#x27;re staying abreast of latest trends you&#x27;re doing better than many who are already in the industry. Being able to demonstrate this in an interview is probably more important than any resume bullet point. Common advice for resumes in other industries is to use a functional resume to highlight the skills relevant to the job posting. I&#x27;m not sure how well they work in tech, but I can tell you from when I was hiring, a short resume that screams I use your tech got my attention better than a 10 page resume with the same techs buried in previous job bullet points.<p>I think if I was in the position I was when I made my transition, my strategy would be the same, the only thing I think would make it harder today is more family obligations, and the current state of the world. Target your studying based on job postings you find interesting. Spend at least 1 hour a day on directed studying towards those posting (which is distinctly different than how a lot of people dabble in a new topic). Spend time finding lesser projects to work on, freelancing and personal projects are definitely things you can highlight on a resume, and will give you things to talk about in an interview. Then bide your time until market forces improve. It may be another 12 months before demand starts to outstrip current supply of unemployed devs again, it will be considerably easier to transition then. Also, eventually, with enough effort towards job searching, and refining your resume&#x2F;interviewing, eventually you will click with a hiring manager that will go to bat for you.')