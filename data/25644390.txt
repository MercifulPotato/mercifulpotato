Item(by='timdaub', descendants=None, kids=None, score=None, time=1609845901, title=None, item_type='comment', url=None, parent=25640976, text='As someone who&#x27;s active in the Blockchain space since 2015, I found rollups to be a really cool invention. The idea of simply compressing data with a zero knowledge proof is quite simple and beautiful.<p>A year ago, I&#x27;ve worked at a company that tried making Plasma work (<a href="https:&#x2F;&#x2F;leapdao.org" rel="nofollow">https:&#x2F;&#x2F;leapdao.org</a>). We even had shipped a Plasma chain to the mainnet. As Vitalic points out correctly, a major problem (apart from not having guaranteed data availability for the Plasma&#x27;s chain data) was that in order to transact &quot;off-chain&quot;, a user had to transfer some money into a bridge. Only then, the Plasma chain credited this money to the user.<p>That was a usability major problem, as it took a really long time and since the user was then anyways subjected to really high transaction costs at least once. Hence, we had really low liquidity and the project never took off.<p>With rollups, I imagine this could become less of a burden as there&#x27;s no double accounting. The single source of truth is the smart contract checking the &quot;batches&quot;. I can imagine having a contract interface that&#x27;s the equivalent of &quot;depositing into a rollup and immediately send it to person X&quot;. I could even imagine an ERC-20 V2 standard that makes any token a rollup. Then you simply never leave L2, meaning the &quot;on-boarding problem&quot; would be solved.<p>I&#x27;m not a cryptographic expert, but to me zkp are still somewhat scary and opaque. They&#x27;re really hard core concepts that still seem to be in development and have not proven themselves. As an engineer with 5 yrs of experience in the field of blockchain, I&#x27;d still be really hesitant to build something with zkps without having a sort of cryptography consultant by my side.<p>Optimistic rollups seem to be a better fit here. Still, I have the feeling that much of this can still be significantly simplified once a well-matching use case comes into sight. But that&#x27;s just a feeling for now...')