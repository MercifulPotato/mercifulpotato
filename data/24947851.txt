Item(by='lhnz', descendants=None, kids=None, score=None, time=1604100725, title=None, item_type='comment', url=None, parent=24946651, text='<p><pre><code>  &gt; If the Javascript crowd had to manage data storage,\n  &gt; nothing persistent would work reliably.\n</code></pre>\nThere are different incentives to writing UIs than there are when you&#x27;re writing a backend. Often a business needs you to iterate very quickly, so people change their practices to suit this. Some are able to get away with never raising the quality bar once they finish iterating and it&#x27;s unfortunate how the industry allows this. Additionally, there are, of course, teams and companies that want high quality code, but even here quality is defined differently from how it would be for data storage logic. For instance, it often means &quot;high framerate&quot; and &quot;easy to understand&quot;, instead of &quot;optimal&quot; and &quot;robust&quot;.<p>There are less JavaScript engineers writing backend code, and most that do this are generally making simplistic CRUD Node.js apps. However, there are companies and people that specialise in high-quality complex Node.js apps, and they try just as hard as backend engineers from other programming languages to do this well. (I&#x27;m thinking of projects made by developers on the core Node team. I&#x27;ve seen good backend code there, perhaps because they&#x27;re more aware of lower-level concerns.)<p>I personally write a lot of JavaScript&#x2F;TypeScript code and I try to do a good job, but a &quot;good job&quot; is defined differently depending on the kind of product you&#x27;re creating.<p>Edit: I just realised you are _the John Nagle_, so you likely have a more refined taste in certain kinds of programming than I do, however I think my point about incentives probably still stands.')