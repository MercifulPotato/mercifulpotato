Item(by='Lazare', descendants=None, kids=None, score=None, time=1610632044, title=None, item_type='comment', url=None, parent=25773387, text='There&#x27;s a few answers here.<p>First off, we expect all things to be as resilient and reliable as makes sense via a cost benefit analysis. If it&#x27;s cheap to fix, and expensive not to fix, we expect it to be done. If it&#x27;s expensive to fix and cheap to ignore, we expect it not to be done. And of course, if it&#x27;s impossible to fix, we definetly expect it to be ignored. :)<p>So, we expect that cars should NOT catch fire when rear-ended, because it&#x27;s possible to design them not to do so, it&#x27;s not that expensive to design them not to do so, and innocent people could be seriously harmed through no fault of their own.<p>But water in a gas tank? I can&#x27;t think of a way to <i>stop</i> someone doing that. And it would just disable the car if you did it. And since cars have locking fuel tank covers, you&#x27;re really limited in your ability to maliciously harm other peoples cars.<p>So in the case of cars &quot;explodes when rear ended&quot; is not okay but &quot;stops driving when you fill the tank with water&quot; is okay.<p>Software, by its design, is often more fixable than other things. You <i>can</i> filter the inputs to a log in form whereas you can&#x27;t really filter &quot;things people might put in their kitchen blender&quot;.<p>Second, note that software is, bluntly, a lot <i>less</i> resilient than most things. I&#x27;ve got a hammer sitting in my garage, and it&#x27;s just going to sit there until I do something with it. It won&#x27;t randomly stop working, it won&#x27;t auto-update to a version that is incompatible with my nails, it won&#x27;t be remotely hijacked by Russian scammers to break into local businesses, it doesn&#x27;t need patching. There will never be a CVE for this hammer. :) I&#x27;ve had it for many, many years, and I&#x27;ll have it for many many more, and it will be just as good a hammer in 10 years as it was when I got it. We can&#x27;t say the same thing for software. And since software is just <i>way</i> more of a dumpster fire than &quot;normal&quot; things, we have to expect that more work will need to be done to counteract that.<p>(There is, as always, at least one relevant XKCD here. In this case, I think <a href="https:&#x2F;&#x2F;xkcd.com&#x2F;2030&#x2F;" rel="nofollow">https:&#x2F;&#x2F;xkcd.com&#x2F;2030&#x2F;</a> is on point. The more you know about software engineering, the more you&#x27;ll realise the entire thing is held together with bailing wire, duct tape, luck, and an intern trying to live edit the production database to fix the data errors before anyone notices.)<p>Third, and very much related to the last two points, consider the scale. Your car&#x27;s gas tank, or your building;s sprinkler tank, <i>are</i> vulnerable to various attacks, but it&#x27;s not vulnerable to being attacked remotely and untraceably by almost anyone on earth via a number of low skill attacks. And of course, software also can yield larger rewards. If the local corner store has a dodgy lock, maybe you could break into it (at significant risk to yourself!) and steal some cash from the till. If you can compromise the head office network of a major retailer, you could steal millions of dollars.<p>Edit: Also, I&#x27;m aware of a nationwide outage for a pizza chain caused by a phonebook. There was an internal webpage that some stores looked at occasionally to show stock levels or something similar. It was quite a slow&#x2F;expensive page to load, but because it was loaded quite rarely, and only by a small number of internal users, it didn&#x27;t have a lot of cacheing or rate limiting on it. Someone in one store shifted something on their desk, then walked off. This caused a phonebook to shift, and depressed their F5 key. That caused their browser to start refreshing this page very, very rapidly - multiple times per second. The load from this actually overloaded the central servers, and the entire system went down, stopping orders from being placed or printing out. So it might seem silly to say &quot;hey, what happens when I do this thing I shouldn&#x27;t do&quot;, but actually, over time, all sorts of things that &quot;shouldn&#x27;t happen&quot; will happen for some reason or other. If the result is that every store of a nation-wide chain goes offline, that is....not great. And software is just way more prone to these sorts of things than others. If you tell me there&#x27;s a vulnerability that lets people easily open the door of any hotel room at a large chain, I&#x27;ll instantly bet you $20 it involves smart locks, NOT traditional mechanical keyed locks. (And indeed, that&#x27;s happened more than once, and it&#x27;s always been a smart lock to my knowledge.)')