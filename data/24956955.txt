Item(by='Silhouette', descendants=None, kids=[24957412, 24957238], score=None, time=1604200280, title=None, item_type='comment', url=None, parent=24956872, text='The problem with that argument is that you&#x27;re assuming consistency <i>with native platform standards</i> is the dominant consideration. I contend that, today, it often is not. Many users are spending much of their time using web sites and applications rather than native ones; this trend does not appear to be in dispute here. Moreover, the basics of how web sites (and by extension web apps) work have a longer history of established conventions than any of the major native platforms; the likes of Jakob Nielsen were making the case for consistency and following user expectations <i>more than two decades ago</i>, long before the likes of iOS and Android and whatever we&#x27;re calling Windows&#x27; UI today were glints in their respective creators&#x27; eyes.<p>Also, web technologies can perform just fine the vast majority of the time. Modern JS engines have excellent performance, obviously not rivalling expertly coded C and assembly, but certainly comparable to your average native application for most purposes. Modern browsers also have good support for hardware acceleration and can render UIs that respond quickly enough to user interactions that again for most purposes there is no perceptible delay or jank. Today we&#x27;re looking towards WebAssembly as a vehicle for potentially more efficient languages and runtimes, though clearly that technology is still in its infancy and its future is far from certain. Now, you can undermine all of that potential if you bloat your web site&#x2F;app with tens of megabytes of junk scripts that are all competing for resources and blocking stuff and phoning home and whatever, but that&#x27;s not really the fault of the web technologies, it&#x27;s just bad developers and&#x2F;or bad managers creating a bad application.')