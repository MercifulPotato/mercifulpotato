Item(by='yourapostasy', descendants=None, kids=[25835917, 25835438], score=None, time=1611073323, title=None, item_type='comment', url=None, parent=25833819, text='It was more economics and political policy wonks, economists and politicians in general, who didn&#x27;t just ask that question, but thrust forth the prescriptive rhetoric through a large grid of trade agreements, &quot;Globalism is here to stay! Get over it! Comparative Advantage!&quot; This is only the first in a long, expensive series of lessons these people will be taught by reality in the coming decades. I&#x27;m guessing this kind of manufacturing loss will cost at least $1T to catch up and take the lead again after all is said and done, assuming the US can even take the lead.<p>US organization, economic, and financial management at the macro scale is going through a kind of &quot;architecture astronaut&quot; multi-decade phase with financialization propping up abstracted processes of how to lead massive organizations as big blocks on diagrams instead of highly fractal, constantly shifting networks of ideas and stories repeatedly coalescing around people, processes, and resources into focused discrete action in continguous and continuous OODA feedback loops absorbing and learning mistakes along the way. Ideally, the expensive BA and INTC lessons drive home the urgent need for an evolution in organizational management.<p>I wryly think how similar the national comparative advantage argument looks to much young adult science fiction portrayal of space opera galactic empire settings with entire worlds dedicated solely to one purpose. This world only produces agricultural goods. That world only provides academician services. It is a very human desire to simplify complex fractal realities, and effective modeling is one of our species&#x27; advantages, but at certain scales of size, agility and complexity it breaks down. We know this well in the software world; some problems are intrinsically hard and complex, and there is a baseline level of complexity the software must model to successfully assist with the problem space. Simplifying further past that point deteriorates the delivery.')