Item(by='idealstingray', descendants=None, kids=[25038967, 25038264, 25038836, 25038793], score=None, time=1604947623, title=None, item_type='comment', url=None, parent=25034037, text='As a robotics engineer, I&#x27;m surprised how controversial &quot;hardware can&#x27;t remote&quot; is turning out to be.  Sure, some things can be done fully in simulation or by mailing everyone on the perception team a bunch of sensors.  However, existing&#x2F;popular simulators aren&#x27;t that good at simulating things like odometry error, and if you&#x27;re trying to do any object manipulation they&#x27;re not great at anything beyond &quot;before I run this on the robot, please make sure I&#x27;m not going to destroy things&quot; (my understanding is that accurately simulating manipulation is hard because of the various frictional forces involved).  And, of course, giving several employees a large, expensive KUKA arm to keep in their house or apartment is impractical on many levels.  If people are running code remotely on a physical robot that&#x27;s in the office, at least one person has to be in the office to keep an eye on it (for safety, and freeing the robot if it gets stuck).  This is also not even getting into remote embedded, electrical, or mechanical work -- everything I&#x27;ve listed would affect a garden-variety software developer.  So, yeah, I&#x27;ll endorse &quot;hardware can&#x27;t remote&quot;, and will admit to some frustration with non-hardware-adjacent software engineers, who have a tendency to make over-broad generalizations about the feasibility of remote work.')