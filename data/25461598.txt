Item(by='woah', descendants=None, kids=[25461810, 25462740], score=None, time=1608245577, title=None, item_type='comment', url=None, parent=25460948, text='It is the most readable to you because you are used to null. If you&#x27;re reading Rust, then it&#x27;s a pretty good assumption that you&#x27;ll be used to Option&lt;x&gt;.<p>Null is sloppy because it is the only way in many languages to express something like a union type (in Rust terms, an &quot;enum&quot;). So it gets overloaded to convey information that would be more accurately conveyed by a union type.<p>The Rust equivalent of null, Option, is just another enum and you can handle it with the standard enum tooling the language gives you such as pattern matching. It also makes you stop and think about what you are doing if you&#x27;re returning it. In most cases, your intent can be more clearly expressed with an enum other than Option.<p>This contrived example would be less likely to appear in Rust. Why is there a function called parseFile taking something that might not even be a file?<p>As an aside, the Rust code could also be written like this:<p><pre><code>        fn parse_file(file: Option&lt;File&gt;) -&gt; Result&lt;(), String&gt; {\n            if let None = file {\n                return Err(&quot;File must exist&quot;.into());\n            }\n            &#x2F;&#x2F; ...\n        }</code></pre>')