Item(by='smt88', descendants=None, kids=None, score=None, time=1603590327, title=None, item_type='comment', url=None, parent=24883041, text='&gt; <i>No (and sort of yes). The result of the timestamp is instantly verifiable against the timestamped data, meaning the results of the timestamp can be viewed on a public blockchain explorer or using an API that interfaces with the blockchain, without trusting our code. If another party doesn&#x27;t trust our frontend code, they can build their own frontend logic that interfaces with the blockchain in the backend to independently verify results. If someone is using our app, they implicitly trust our code, yes, but they don&#x27;t have to trust our database. That&#x27;s the difference.</i><p>I think you misinterpreted the attack I was describing.<p>Let&#x27;s say you rewrite your front-end code to change the timestamp. Sure, someone could read it, but reading source code every time it&#x27;s updated is not a sustainable security practice. It&#x27;s also especially easy to hide malicious code in JavaScript.<p>How does blockchain prevent that attack? Your blockchain is memorializing data that you have interfered with. Someone can definitely verify that whatever photo is on the blockchain was really added to it at whatever timestamp. But how does that give them any proof that the photo was actually <i>taken</i> at that timestamp?<p>All the blockchain does is say, &quot;At [timestamp], this photo was added to the blockchain.&quot; It doesn&#x27;t offer proof of who took it, where it was taken, what the subject was, or (crucically) <i>when it was actually taken</i>.<p>And that basic guarantee (that the photo was taken at a certain timestamp) is just as easy to accomplish with an append-only database.<p>Regardless, this is all about mitigating an extremely unlikely attack: your own company. Why do your own clients need to verify that you are trustworthy?<p>&gt; <i>What our app does is require the photos to be taken in-browser</i><p>&gt; <i>We ask the transporters to take a photo of the VIN in the frame, along with other photos (body, odometer, etc.).</i><p>I agree that these measures likely stop close to 100% of attempts to defraud you, especially because there is a chain of custody that makes fraud more difficult.<p>But I still don&#x27;t see any reason this couldn&#x27;t&#x2F;shouldn&#x27;t have just been built on a vanilla RDBMS. Hell, if you want to verify the timestamp, you could just instantly email the photo to someone via Gmail, since you can&#x27;t fudge Gmail&#x27;s SMTP timestamps.<p>As I said before, using blockchain here decentralizing trust in a situation where the source of truth is... you. And it still doesn&#x27;t make you trustworthy, since you can alter the photos before ever hashing them.')