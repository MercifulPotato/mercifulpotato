Item(by='fjfaase', descendants=None, kids=[24905160], score=None, time=1603783250, title=None, item_type='comment', url=None, parent=24898210, text='This course follows the traditional approach to writing parsers. These traditional approaches were developed in times when memory was scarce and where back-tracking was impossible, simply because files were too large to be stored in RAM. Back-tracking parsers are much easier to write and in most cases performance can be brought to acceptable levels by applying caching. I have experimented with developing interpreting parsers that work with user-friendly grammar representations, and discovered that using caching can result in acceptable performance. I also discovered that a small interpreter often is faster than generated code, probably due to a better CPU cache performance. For two examples of these approaches see: <a href="https:&#x2F;&#x2F;github.com&#x2F;FransFaase&#x2F;IParse" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;FransFaase&#x2F;IParse</a> and <a href="https:&#x2F;&#x2F;github.com&#x2F;FransFaase&#x2F;RawParser" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;FransFaase&#x2F;RawParser</a> (WIP).')