Item(by='temac', descendants=None, kids=None, score=None, time=1607381433, title=None, item_type='comment', url=None, parent=25335250, text='Yet you can do a few simple thought experiments.<p>What would those fast-dev do in a vacuum? Or with only clone of themselves coworkers.<p>What happens when one of those fast-dev quit?<p>--<p>If everything is&#x2F;would be fine, then <i>yes</i>, they are truly rockstars (in all the good meanings of that word and none of the bad). Or maybe merely decent among mediocre ones.<p>Otherwise, there is a free-rider aspect in their approach.<p>--<p>Also it can work only depending on the criticality level of the industry.<p>Ship broken crap quickly (but fix it quickly too)? Good if you are creating yet another social website maybe. Less good for e.g. medical devices.<p>--<p>One more point: the business value approach is not necessarily the only one to apply esp. if there are tech infrastructure components in what you ship. You can easily be stuck in local optimums too far from global ones, and fossilize some aspects of your product. See for example the classical <a href="http:&#x2F;&#x2F;blog.zorinaq.com&#x2F;i-contribute-to-the-windows-kernel-we-are-slower-than-other-oper&#x2F;" rel="nofollow">http:&#x2F;&#x2F;blog.zorinaq.com&#x2F;i-contribute-to-the-windows-kernel-w...</a> that includes some example of death by thousands cut.<p>What I mean is that moving fast is partly in the eye of the evaluator. Maybe you implement what PM wants quickly, and that&#x27;s cool, but maybe also doing only what PM wants is <i>not</i> the best thing for the project.<p>--<p>If you are easily able to plan things, have a good data model, and can develop quickly, probably you don&#x27;t have a real code quality problem to begin with. At least not in the parts you contribute to. I don&#x27;t actually distinguish the data model from &quot;code&quot; that much: it&#x27;s all design.<p>--<p>Final last thought: imagine you are actually a good fast-dev like you describe, and your colleagues are less good, but imagine a case where the whole organization would actually benefit from you slowing down a bit and working on developing better way to work more efficiently with others or making them improve, overall yielding even more business value at the end. This can happen too.')