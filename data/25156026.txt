Item(by='acoard', descendants=None, kids=None, score=None, time=1605831528, title=None, item_type='comment', url=None, parent=25142595, text='&gt;Disaster recovery? Geographically separate redundant servers with failovers? Automated (and proven to work) backups? One-stop access control for infra maintenance? Audit controls for your database and storage objects? Tape backups?<p>These are our dev+test setups, and we&#x27;re looking far  more carefully  at prod for the reasons you touch on.  Those aren&#x27;t necessary for every project too, eg hosting computer vision demos.<p>For our government projects, the government hosts it on their own OpenShift cluster that they maintain (including their own data centre), due to requirements for all data to be hosted within our boarders.  The OpenShift cluster I setup is no-where near as well maintained as the governments, they have multiple FTE and it runs most of the open source gov&#x27;t code.  They have tape backups, rolling on-call staff, public developer chat for support, the whole deal.<p>What I setup is far more simple. We have daily&#x2F;weekly&#x2F;monthly rolling backups of postgres pods. We store some backups of those on digital ocean, but that&#x27;s just a cheapo litttle linux server.<p>But now a team of 30 developers can easily spin up their own projects using a web-based GUI from basically just providing a Dockerfile or a link to a git repo.  One of the oft-touted organizational benefits of &quot;cloud&quot; is that you don&#x27;t have to wait a week for Ops to provision a VM.  We get all that.<p>&gt;I understand your use case, but your is very, very far from the sheer and absolute complexity and features that enterprise data centers have.<p>My point is that many things people host in AWS do not need enterprise quality. If you&#x27;re a startup, then almost by definition you do not need enterprise quality (though, as always, it depends).  We made a tonne of savings. I&#x27;m sure many others would by self-hosting and learning a moderate amount of Linux &#x2F; Kubernetes.')