Item(by='ardy42', descendants=None, kids=[25380100, 25378479], score=None, time=1607632498, title=None, item_type='comment', url=None, parent=25374383, text='&gt; There you go, the website will now see the same display resolution for everybody, right? Well, that’s unless the website does this:<p><pre><code>    delete screen.width;\n    delete screen.height;\n</code></pre>\n&gt; And suddenly screen.width and screen.height are restored to their original values. Fingerprinting can now use two data points instead of one: not merely the real display resolution but also the fake one. Even if that fake display resolution were extremely common, it would still make the fingerprint slightly more precise.<p>&gt; Is this magic? No, just how JavaScript prototypes work. See, these properties are not defined on the screen object itself, they are part of the object’s prototype. So that privacy extension added an override for prototype’s properties. With the override removed the original properties became visible again.<p>This seems like a flaw in the browser extension model.  There should be a way of overriding these properties outside the page&#x27;s javascript environment itself, before it&#x27;s initialized, in a way that&#x27;s immutable to anything that runs afterwards.')