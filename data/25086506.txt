Item(by='kentonv', descendants=None, kids=[25086572, 25098379, 25087735, 25086694, 25086813, 25087849], score=None, time=1605296564, title=None, item_type='comment', url=None, parent=25086123, text='I admit I haven&#x27;t written an OpenAPI schema myself. But, looking at the docs, I have a hard time imagining that I&#x27;d want to do API-driven development with it. Let me explain what I mean by that...<p>When I start a new project, or a major new feature in an existing project, usually the first thing I do is write out the Protobuf or Cap&#x27;n Proto schemas describing the APIs and data structures. Even for internal-facing APIs. APIs are how components talk to each other, and defining the APIs defines which components are responsible for what in a very clear way. Often I find writing out the APIs is actually the easiest, most precise way to communicate a design with my teammates; much better than prose in a design doc.<p>For this purpose, it&#x27;s actually pretty important that the schema language be something that&#x27;s not cumbersome to write. Protobuf and Cap&#x27;n Proto feature dedicated schema languages that feel like a programming language. It looks like OpenAPI has you writing schemas themselves in JSON or YAML. Ick.<p>And once I&#x27;ve written those schemas, I run the code generator and <i>poof</i>, I now have nice, type-safe classes in my programming language of choice implementing my schema. This lets me move a lot faster implementing, being able to use my IDE&#x27;s auto-complete and whatnot. Does OpenAPI generate code for you? I have worked on projects that use it and didn&#x27;t have any generated code, so I am assuming not...<p>I think this is what the article is trying to get at.<p>(Disclosure: I&#x27;m the author of Cap&#x27;n Proto; long ago I was the author of Protobuf v2; and I am a (small) investor in Buf because I like what they&#x27;re doing, but I don&#x27;t work with them.)')