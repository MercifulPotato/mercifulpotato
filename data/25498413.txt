Item(by='lilactown', descendants=None, kids=[25499196], score=None, time=1608578818, title=None, item_type='comment', url=None, parent=25498060, text='When I was reading the article, I thought the author of the post was probably pointing more in the direction of Clojure&#x27;s immutable data being slower, rather than laziness specifically.<p>IME (admittedly in a different context, doing UI development) Clojure&#x27;s seqs and other immutable data can be a huge performance drag due to additional allocations needed. If you&#x27;re in a hot loop where you&#x27;re creating and realizing a sequence immediately, it&#x27;s probably much faster to bang on a transient vector. Same with creating a bunch of immutable hash maps that you then throw away; better to create a simpler data structure (e.g. a POJO or Map) which doesn&#x27;t handle complicated structural sharing patterns if it&#x27;s just going to be thrown away.<p>Transducer&#x27;s would help in the author&#x27;s first case to take the map&#x2F;filter piped through the `-&gt;&gt;`, which is going to do two separate passes and realize two seqs, and combine it into one.')