Item(by='sischoel', descendants=None, kids=[25637029, 25636547, 25636768], score=None, time=1609782090, title=None, item_type='comment', url=None, parent=25632592, text='I don&#x27;t know much about graph neural networks although it is a topic that I want to study in the next few months.<p>But what bothered me in your article is what you wrote about graph data structures.<p>NetworkX is indeed very slow, this is due to two facts:\n- NetworkX is a pure Python implementation and does not relay on some methods written in a faster language like C.\n- They use dictionaries to represent the graphs, which may have some advantages when mutating graphs, but of course have much worse locality than an adjacency list or a some sparse matrix format.<p>But even for python there are much faster libraries such as igraph. The data structure in igraph is an edge list.<p>A lot of single core graph libraries use an adjacency list internally, and while it is true that the index list for each vertex can be somewhere arbitrary in memory, they usually  do not behave like a linked list, unless you graph is really sparse.\nOne of the most used operations in graph algorithms is to iterate over the neighbors of a vertex, and for this, adjacency lists are very good.<p>They also have a small advantage over CSR matrices for adding or removing edges, and they might use slightly less memory, as their index type only needs to be able to index all vertices and not all edges, so they need half of the space, which is better for caches.')