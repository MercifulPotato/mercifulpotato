Item(by='alin23', descendants=None, kids=[25858319], score=None, time=1611231426, title=None, item_type='comment', url=None, parent=25858025, text='PIO state machines programmable in Python sound pretty neat:<p>&gt; You&#x27;ll note there&#x27;s no I2S peripheral, or SDIO, or camera, what&#x27;s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create custom hardware logic and data processing blocks that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use a PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each. [1]<p>Two M0 cores with M4 speeds and priced lower than usual M0-based boards also sounds exciting:<p>&gt; The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). [1]<p>And official support for MicroPython and USB host and guest for $4 is something rare and could potentially lure some tinkerers into embedded programming.<p>I personally plan to create an USB ambient light sensor for controlling Lunar [2] with it. It is a very affordable and widely available board which could potentially allow people to reproduce the sensor even in places where I can&#x27;t ship a pre-assembled board.<p>[1]  <a href="https:&#x2F;&#x2F;www.adafruit.com&#x2F;product&#x2F;4864" rel="nofollow">https:&#x2F;&#x2F;www.adafruit.com&#x2F;product&#x2F;4864</a>\n[2] <a href="https:&#x2F;&#x2F;lunar.fyi" rel="nofollow">https:&#x2F;&#x2F;lunar.fyi</a>')