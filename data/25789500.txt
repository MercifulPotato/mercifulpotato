Item(by='TeMPOraL', descendants=None, kids=None, score=None, time=1610709280, title=None, item_type='comment', url=None, parent=25789241, text='Doubt it. While it looks cool, what it does is hide a lot of complexity in its standard library and presents only the surface layer - all bolted down to (what seems to be) an overcomplicated NLP processor (but what more likely is just someone playing with Illustrator) that you have to hand-hold to verify it generates sensible code.<p>What I&#x27;d like to see is how it handles any kind of more complicated tasks - e.g. one where you need to build two or three layers of abstraction. Or one where you build domain objects that are used by other tasks. Or even one that showcases error handling.<p>You can get something similar, minus the fancy NLP processor, in Unreal Engine, via its Blueprints feature. Suffice it to say, there&#x27;s a reason people end up learning and switching to C++ the moment their problem starts to involve any kind of complex logic.<p>Note: I&#x27;m not against improvements in programming experience, and more visual and interactive paradigms. But I&#x27;ve also played with enough dataflow languages to fully internalize that there is irreducible complexity in programming (that comes from it being an art of micromanaging possible states), and it&#x27;s painfully hard to work with it in a flowchart form.')