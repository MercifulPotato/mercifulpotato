Item(by='knicknic', descendants=None, kids=[25845937], score=None, time=1611122548, title=None, item_type='comment', url=None, parent=25841455, text='`bash set -e`. Your examples don&#x27;t work (if you have an answer please paste it in <a href="https:&#x2F;&#x2F;github.com&#x2F;PowerShell&#x2F;PowerShell&#x2F;issues&#x2F;3415" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;PowerShell&#x2F;PowerShell&#x2F;issues&#x2F;3415</a> )<p><pre><code>    Set-PSBreakpoint -Command Write-Error -Action { break; }\n    cmd.exe &#x2F;c &quot;exit 1&quot;\n    echo &quot;if this-&gt;($LASTEXITCODE) is 1 I shouldn&#x27;t be here&quot;\n</code></pre>\nYour stack trace code is wrong. What your code is doing is essentially saying throw an exception when you encounter an error. All I am asking is when exception hits the top, dump the stack trace.<p><pre><code>    $script:ErrorActionPreference = &#x27;Stop&#x27;\n    function bar() {\n        throw &quot;oops&quot;\n    }\n    function foo() {\n        $a = 123\n        bar\n    }\n\n    foo\n\n    PS C:\\tmp&gt; .\\a.ps1\n\n    Exception: C:\\tmp\\a.ps1:6:5\n    Line |\n    6 |      throw &quot;oops&quot;\n        |      ~~~~~~~~~~~~\n        | oops\n</code></pre>\nI use `trap{$_.ScriptStackTrace; break}` but unfortunately I cannot hide this code into a helper script that I can dot source... because of scoping rules! Even though I am dot sourcing a file which I would think would load it into my current scope according to dot sourcing link you sent.<p>Why this is not the default behavior when leaking an exception and aborting I have no clue<p>enforcing things are arrays<p><pre><code>    yes you can wrap stuff in arrays, but that is making the callsite look ugly for a function definition problem. The solution &quot;return ,$array&quot; is just weird\n\n</code></pre>\nHonestly I prefer the bash way of $yaml | yaml2json(.exe) | convert-fromjson. Easier to find cross platform converters which your example is not. Takes me like 5 seconds to write, however then I have to teach others to do it as well, I want it in the platform. Also why they are at it, add toml support as well.<p>for documentation<p><pre><code>  # .SYNOPSIS\n  # Why do I need to type .SYNOPSIS above here, and yes that extra line is too many\n  function foo(\n      # but here its just obviously a comment for a parameter\n      [string] $param=&quot;&quot;\n  ) {\n      $param\n  }\n</code></pre>\nAlso didn&#x27;t mention this before I wish there was a version of powershell that was static checked like typescript for javascript.')