Item(by='pvorb', descendants=None, kids=[25474003], score=None, time=1608334651, title=None, item_type='comment', url=None, parent=25466763, text='This article seems to be based on several assumptions that feel a bit off in my experience.<p>Splitting the level of developers in three equal groups makes it look like it will take the same amount of time to get from noob to mediocre as it takes to get from mediocre to good. If I were to draw these lines the first one would be after a few weeks. You don&#x27;t need more time to write useful software. You maybe can&#x27;t solve hard engineering problems after that time, but it&#x27;s enough to work in a team and be productive.<p>I&#x27;m not sure where to draw the second line, though. I don&#x27;t know if there&#x27;s a point where you simply stop making stupid problems. You get better at solving problems and might shoot yourself in the foot less often, but to write bug-free software, you really need dedicated QA who will concentrate on that. I don&#x27;t think it&#x27;s a problem that can be solved by individuals, but only in a team.<p>And this leads me to the conclusion that software quality is mostly driven by the company and economics. If the project doesn&#x27;t pay for solid quality assurance or has too much time pressure on developers, the software you get might be bad at least to some degree. Even good developers can&#x27;t make up for that.<p>I&#x27;m not sure this makes any sense outside my current bubble, so please add your 5 cents.')