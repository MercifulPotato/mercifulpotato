Item(by='deergomoo', descendants=None, kids=None, score=None, time=1602329802, title=None, item_type='comment', url=None, parent=24737961, text='You can still have “the absence of a value”, but it’s codified in the type system. Most languages with this feature implement an Optional or Maybe wrapper type, that is either Some&lt;T&gt; or None (i.e. no value).<p>The difference is, because you’re now receiving a different type, you are forced to deal with the case where there’s no value.<p>Rather than your function returning a Customer that could sometimes be null—and if it’s only null infrequently, you’re much more likely to forget to handle it—it instead returns Optional&lt;Customer&gt;. To operate on that Customer object, you are forced to unwrap the Optional by checking whether the underlying value is there.<p>How well you handle the None case is up to you, but the compiler won’t let you forget (generally anyway; for example Swift allows you to force-unwrap optionals with a crash on the None case, but eh).')