Item(by='ufo', descendants=None, kids=None, score=None, time=1608758286, title=None, item_type='comment', url=None, parent=25520147, text='&gt; I don&#x27;t think the &#x27;stops buggy programs&#x27; argument is particularly compelling, since that could apply to pretty much any restriction<p>This is the part that irks me the most. If I have an algorithm that is neatly written as a recursive algorithm and mechanically rewrite it to use an explicit stack, that doesn&#x27;t change the fact that an infinite loop is still a bug. It&#x27;s just that it&#x27;s going to manifest as the process using all the available RAM instead of as a stack overflow.<p>&gt; yet they&#x27;re somehow fine with inheriting these weird restrictions from C &amp; co.?<p>Sometimes that&#x27;s because the interpreter itself uses recursion. That can be convenient for whoever is implementing the interpreter, at the cost of inheriting the stack limit from C.<p>That said, there are also languages that enforce a recursion limit even when they don&#x27;t use the C stack at all. In which case I ask the exact same question as you do.')