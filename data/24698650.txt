Item(by='the_french', descendants=None, kids=[24699383, 24699314], score=None, time=1601997778, title=None, item_type='comment', url=None, parent=24696589, text='I&#x27;m starting my PhD under the supervision of one of the Frama-C authors, if you have questions I can relay them.<p>In general I&#x27;ve found deductive verification techniques interesting &#x2F; promising because they free engineers of a lot of required but tedious details you&#x27;d have in ITPs.<p>However, I think there&#x27;s a LOT of room for improvement in terms of ergonomics of proof debugging. For a frequent (for me) problem when debugging invariants is conditionals that break the invariant.<p>if i have some code doing something like<p><pre><code>    while (X) {\n      invariant { forall i. 0 &lt;= i &lt; N .... }\n      if j &lt; i A else B \n    }\n</code></pre>\nBut it turns out that one of the branches A, B doesn&#x27;t preserve the invariant well all the provers will tell me is &#x27;can&#x27;t prove this!&#x27; it&#x27;s up to you to perform the transformations that split the two cases (granted in this example it&#x27;s trivial) so that you can see that only _one_ branch was failing.<p>I think that there should be transforms that automatically do things like split the range of an interval along relevant points (aka j) to help you figure out which portions are failing.<p>There are tons of other issues related to proof ergonomics that could be improved, the UIs are really stuck in the 90s!')