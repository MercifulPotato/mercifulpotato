Item(by='wirrbel', descendants=None, kids=[25895082, 25898406], score=None, time=1611505221, title=None, item_type='comment', url=None, parent=25889861, text='I have migrated tons of Python codebases from 2 to 3, i guess starting with the release of Python3.4 which was when Python3 reached a kind of production readiness (and also had gained enough trust and IIRC it had also reestablished compatibility in some parts).<p>I think the incompatibilities between Python 2 and Python 3 fell into two categories<p>1. trivial and totally avoidable API changes by the Python developers ( like `iteritems()` being renamed to `items()` and the Python2-`items` being removed from the language). The bet on the Python-dev side was that `2to3` would take care of that and in this they totally underestimated that libraries couldn&#x27;t and wouldn&#x27;t just make a python3 migration in lockstep with the primary python release.<p>2. Change to unicode-strings by default with a clear distinction between unicode-strings and byte-buffers for all data encoded in any other fashion.<p>Most people on Python3 nowadays won&#x27;t actually know how beneficial Change no. 2 was overall for the health of the Python ecosystem and the stability of their code bases. But it also was the tricky part of the migration for some code bases that would do a lot of string &#x2F; file content plumbing like mercurial as a prominent example).<p>Change no. 1. was a PITA and a lot could have been avoided, but it wasn&#x27;t a huge problem. The huge problem for the ecosystem was the unicode change, but I don&#x27;t think anyone questions its usefulness (except for Armin Ronacher maybe, who is the most prominent voice with a dislike for that).')