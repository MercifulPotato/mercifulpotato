Item(by='quietbritishjim', descendants=None, kids=[25101184], score=None, time=1605448272, title=None, item_type='comment', url=None, parent=25100725, text='I agree with this.<p>If you write an application in Python that spends the majority of the time in C-based extensions – for example if I were to write a differential equation GUI using numpy and pyqt – then I think it&#x27;s still valid to say that I wrote the application in Python. In fact even most of the standard library modules are written in C (e.g. zipfile, io, sqlite3) so it&#x27;s hard to avoid this. You could say that no program is ever really written in Python but I don&#x27;t think that&#x27;s a useful point to make.[1]<p>But if you write a load of C code that&#x27;s very specific to your application, wrap it in a Python extension, then call it from Python, then I don&#x27;t think you could argue that you &quot;wrote it in Python&quot;. If someone happened to have written that application-specific extension module for you then the situation is not materially different.<p>([1] A more useful motion is whether your code is <i>vectorised</i>. That is, if you want to do something with a data structure (e.g. mutate each element, find an element, do matrix multiplication), do you have to loop over the elements in Python or do you make a single call into a library that does the looping in C? Either way you&#x27;re still ultimately going to be calling C code, if nothing else in the Python interpreter itself, but the distinction is obviously still important.)')