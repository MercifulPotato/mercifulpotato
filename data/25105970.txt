Item(by='cesarb', descendants=None, kids=[25106306], score=None, time=1605482639, title=None, item_type='comment', url=None, parent=25105004, text='The main advantage of deniability is that it makes the encrypted messaging model more similar to the non-encrypted messaging model. Without encryption, if Alice sends Bob a message, a third party who later gets access to Bob&#x27;s device (but who was not present at the time the message was sent) cannot know whether Alice really sent that message, or it was a forgery from Bob. With encryption but without deniability, a third party can prove that Alice sent that message, even years after the fact. With deniability, the original property is restored: anyone who can read a message can also forge it.<p>Even more important, a signed message without deniability keeps its signature even when it&#x27;s moved outside its original context. If malware copies all the data from Bob&#x27;s device, whoever controls it can ask for a ransom by threatening to reveal the signed message and prove it came from Alice; with deniability, they cannot prove that this message was not a forgery, either by Bob or by whoever revealed it.<p>That is, the interesting case is not when one of the parties is an &quot;FBI agent&quot;; deniability does nothing in that case, since the &quot;FBI agent&quot; can be assumed to not forge the message (and thus, by exclusion, it can only have come from the other party).<p>&gt; Heck, if the government is that suspicious of someone they can also order the ISP to setup a tap and see that the right number of bytes at the right time were sent.<p>Setting aside that, unlike non-deniable encryption, this is not retroactive (a government cannot order a ISP to setup a tap in the past), the number of bytes sent reveals nothing about the message other than its size (and if padding is used, not even that).')