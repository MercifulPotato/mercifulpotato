Item(by='diggan', descendants=None, kids=[25071947], score=None, time=1605196881, title=None, item_type='comment', url=None, parent=25070600, text='Exceptions and stack traces I agree with you can be a bit ridiculous, probably because I&#x27;m not used to Java at all.<p>&gt; Also, I take issue with a language that touts itself as purely functional<p>Seems to be a common misconception that still hasn&#x27;t died.<p>Clojure doesn&#x27;t tout itself as a &quot;purely functional&quot; language, and as far as I know, never has. It tout itself as a &quot;practical general purpose&quot; language where you can be pure and impure, depending on what you do.<p>What Clojure does advocate for, is the approach that _most_ parts of _most_ programs should functional, but you should be able to go away from that paradigm when required&#x2F;wanted.<p>&gt; It places a lot of trust on the libraries that make up your program not to go into reflection and do some really annoying mutations<p>Just for the record, in reality and practical terms, I&#x27;ve never had this happen to me. Now I haven&#x27;t done Clojure development for more than 2 years or something, but if it was a real problem, I&#x27;m guessing I would have hit this at least once before. But never have I had a Clojure library unexpectedly mutate things it wasn&#x27;t supposed to.<p>So yeah, if you&#x27;re looking for a purely functional language, go with a language that actually tries to be purely functional, because that&#x27;s not what Clojure aims for, it aims for practicality.')