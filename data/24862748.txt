Item(by='ChuckMcM', descendants=None, kids=[24862924, 24866833, 24866348], score=None, time=1603397305, title=None, item_type='comment', url=None, parent=24861136, text='This is another in a long line of examples where I am coming around to the conclusion that &quot;computer&quot; is not what we should call these application delivery vehicles. In the post mathematician, electronic version, of the world &quot;computer&quot; was used to represent a tool on which the owner (or lease holder) would run &quot;software&quot; that could use some, or all, of the machine. And what was more, the machine ONLY ever executed software that the owner asked it to execute either directly or through the requesting of library services.<p>Systems that had computers in them, but ran applications written by the vendor so that the system could provide some function of value to the &quot;owner&quot; where always thought of as appliances. Perhaps the canonical example for our age is the Television, which has essentially one function &quot;view video content&quot; which is assisted by a control for selecting video content source. And yet, televisions today, have very powerful computer complexes within them that run vendor software.<p>The modes breaks down for me when you combine them, both because the software the vendor provides for their &quot;computer&quot; to provide application like services is written to defend itself from change&#x2F;influence by the owner who has access to the computer.<p>From Apple&#x27;s perspective, they are walking toward a world where one of the <i>applications</i> you can run on your device is &quot;computer&quot;, which is nothing more than a virtual machine that you have virtually full control over (pun intended). IBM had a really great model of this called VM&#x2F;370. Everything is a VM.')