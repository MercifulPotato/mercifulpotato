Item(by='ChrisMarshallNY', descendants=None, kids=[25002995, 25003127], score=None, time=1604614635, title=None, item_type='comment', url=None, parent=25001539, text='Good luck. I mean that.<p>Git isn&#x27;t perfect, but I&#x27;ve been using version control since Apple Projector (in the late 1980s), and Git has done the best for me. I&#x27;ve been using it for many years.<p>I don&#x27;t miss Projector one tiny bit.<p>VSS (Visual SourceSafe) was a dog. It was direct file-based, and server connections would get <i>very</i> busy. It was the old-fashioned kind, with the need to check out files.<p>But it had one very cool feature: You could create &quot;aliases&quot; of repo components; essentially creating a virtual repo that pointed into several other repos, taking just a couple of files from each.<p>I could see how that would be a technical nightmare to implement, but I like it a lot more than &quot;the whole kit &amp; kaboodle&quot; approach that Git takes.<p>I also used Perforce for many years. It was a robust and dependable system, but had that need to check out files to work on them, and that drove me nuts.<p>I like Git, because it is &quot;team-friendly,&quot; and has a really light touch. It encourages many small checkins, which is how I think I should usually work.<p>I wish it handled big files better, but that&#x27;s not really a big deal to me. I think this might be why Perforce is still preferred for game development (their asset libraries get <i>big</i>).<p>Oh, also Submodules <i>suck</i> like a supermassive, galaxy-core black hole.')