Item(by='kazinator', descendants=None, kids=None, score=None, time=1612130796, title=None, item_type='comment', url=None, parent=25978190, text='Hi all,<p>I&#x27;m preparing release 250 of the TXR Language, the bulk of which is a Lisp dialect called TXR Lisp.<p>Release 250 adds compiler optimizations, like jump threading, some dead code elimination, and a few peephole reductions.<p>This work is finally possible because I had put it on hold due to not wanting to write such code without a pattern matcher, which we now have.<p>I&#x27;m fixing two bugs that were reported by a user, which will be nice in such a landmark release (250 releases, wow!).<p>The new structural pattern matching sub-language in TXR Lisp (new since 247 or 248) will be improved. Bugs are fixed. The way the @(or ...) pattern operator works has been rewritten, so certain corner test cases now pass. It generates better code.<p>There are will be some new features in the matcher too. The @[fun ...] flavor of the \npredicate operator now lets you capture not only the variable, as usual, but using an extra argument, the value of the predicate (which could be an extended Boolean with an interesting value).<p>For instance, is &quot;abc&quot; in the hash table htab? If so capture it as x, and also capture the value as y:<p><pre><code>  This is the TXR Lisp interactive listener of TXR 249.\n  Quit with :quit or Ctrl-D on an empty line. Ctrl-X ? for cheatsheet.\n  Upgrade to TXR Pro for a one-time fee of learning Lisp!\n  1&gt; (let ((htab #H(() (&quot;abc&quot; &quot;foo&quot;) (&quot;xyz&quot; &quot;bar&quot;))))\n        (when-match @[htab x y] &quot;abc&quot; (list x y)))\n  (&quot;abc&quot; &quot;foo&quot;)\n</code></pre>\nHere, htab is just being used as a function; any function will work that can take the argument &quot;abc&quot;; if it returns non-nil, then the predicate has rung true, the pattern has matched, and x takes &quot;abc&quot;, and y the returned value.<p>By the way, to see quips like &quot;Upgrade to TXR Pro for a one-time fee of learning Lisp!&quot; you must add this to your ~&#x2F;.txr_profile:<p><pre><code>  (put-line (quip))</code></pre>')