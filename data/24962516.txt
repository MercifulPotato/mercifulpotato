Item(by='bawolff', descendants=None, kids=None, score=None, time=1604264906, title=None, item_type='comment', url=None, parent=24962125, text='&gt; you can use the XML stack - XPath, XSLT, XQuery, RelaxNG, XML Schema, XForms, EXI, etc etc - on your documents (including conf files)<p>A super complex stack with questionable security properties and composes in a way that is the opposite of simple.<p>&gt; people who don&#x27;t think of themselves as programmers can do sane powerful &amp; useful things - the languages are declarative;<p>Not sure how that distinguishes it from other markup languages. What are we comparing to that is imperative? TeX?<p>&gt; XML documents can be in the problem domain - elements named after things they represent, not &quot;div&quot; and &quot;span&quot; for example<p>I mean i guess xml works better for data serialization than a soup of html. That is not exactly a high bar.<p>&gt; you can write a custom grammar-based validation check that both gives some rudimentary QA and also helps to drive syntax-directed editors, hierarchical database schemas and so forth;<p>You can do that with any format you can parse into to an abstract syntax tree. I suppose xml is convinent compared to writing your own custom format in so much as you already have an off the shelf parser, but we&#x27;re comparing different serialization formats, not having no serialization format.<p>&gt; syntax errors are fatal, and there&#x27;s some redundancy in close tags, which help catch errors that often can&#x27;t be caught easily by checking the data (e.g. for metadata)<p>That&#x27;s pretty standard for all data serialization formats. If instead of data serialization you are instead talking about mark-up languages, that&#x27;s almost always considered a bad thing.<p>&gt; For sure there are things we&#x27;d do differently with hindsight, but remember also that XML predates the success of JavaScript...<p>I think that&#x27;s pretty debatable when it comes to javascript. Regardless though, hindsight may be 20:20, but there is still room to look at fundamental design decisions. People may quibble about aspects of css and js, but the fundamental design choices turned out to be pretty solid to this day. XML on the other hand comes off as a weird compromise that tries to do too many things, doesn&#x27;t do any of them all that well, resulting in an ecosystem of over the top complexity.')