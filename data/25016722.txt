Item(by='mrkeen', descendants=None, kids=None, score=None, time=1604771073, title=None, item_type='comment', url=None, parent=25014756, text='&gt; but it continues to baffle me why we don&#x27;t make fuller use of the multiprocessing capabilities of the processors we have today and the fortunes of RAM we have now, even taking into account that we are using higher level languages and not constantly profiling what we write for performance.<p>When I write parallel-first code in a fancy language, I find that I can get better absolute performance by just writing plain old single-threaded C.  And when my data gets big, it is relatively easy to turn my C-algorithm-using-arrays into a C-algorithm-using-arrays-backed-by-mmap.  Mmap is harder to use in every other language I&#x27;ve tried - or comes with additional worries.<p>And often a single-threaded algorithm is still the way to go, even in a multi-user system, because you can usually let the &#x27;next layer up&#x27; multiplex the requests for you, whether it&#x27;s your web framework or nginx or whatever.<p>I think that might be the way to make &#x27;fuller use of the multiprocessing capabilities of the processors we have today and the fortunes of RAM&#x27;.')