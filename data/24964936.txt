Item(by='acemarke', descendants=None, kids=[24965549], score=None, time=1604293086, title=None, item_type='comment', url=None, parent=24963840, text='I worked on a Backbone app for several years (and still do, technically - we&#x27;re about to do a final push to finish migrating it to React).<p>I also liked the fact that you could step into Backbone code, and back out to app code on the other side.  Backbone&#x27;s source is small, and you can see exactly what it&#x27;s doing.<p>However... React is simply a fundamentally superior programming model, for a wide variety of reasons.  I can treat React as a black box, knowing that if there&#x27;s a problem in my UI, it&#x27;s because of either the logic in my components, or the data those components are using for display.  (Then there&#x27;s things like being able to arbitrarily compose child components together and pass them props, vs randomly trying to attach subviews or something via umpteen different plugins.)<p>I&#x27;ll agree that seeing a stack trace with React library code isn&#x27;t typically helpful.  But, the error messages are usually sufficient to tell me what kind of an issue is going on, and point me to the right component or part of the tree to start debugging the real issue.<p>Somewhat related to this, I put together an extensive post earlier this year called &quot;A (Mostly) Complete Guide to React Rendering Behavior&quot; [0] that digs into detail on how React&#x27;s rendering actually works, as I&#x27;ve found that a lot of people seemed to be missing how some of the pieces of rendering fit together:<p>[0] <a href="https:&#x2F;&#x2F;blog.isquaredsoftware.com&#x2F;2020&#x2F;05&#x2F;blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.isquaredsoftware.com&#x2F;2020&#x2F;05&#x2F;blogged-answers-a-...</a>')