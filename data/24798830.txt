Item(by='josephg', descendants=None, kids=None, score=None, time=1602837221, title=None, item_type='comment', url=None, parent=24789866, text='A lot of people are badmouthing this article. I think thats unfair. There seem to be some broad misconceptions as to why current technical interviews are designed the way they are. (I speak with the experience of administering over 400 technical interviews.)<p>First, you have to understand that most candidates who apply for a technical position don&#x27;t really know how to program. The obvious reason for this is that weak candidates spend more time trying to be hired, and thus they apply for far more jobs than qualified candidates. I&#x27;d estimate about half the people who apply for an advertised software engineering position can&#x27;t program something as simple as fizz buzz. Many of these people are lovely humans, have families to support and are depressed from being turned down from job after job. But if you can&#x27;t program, I can&#x27;t hire you for a programming role. And for everyone who&#x27;s competent, I get it. Simple programming problems are a waste of your time. But as an interviewer, I need to quickly differentiate you from someone who spent 3 days watching python videos on youtube then forked some random repositories into their github account.<p>As an interviewer, I&#x27;m really trying to answer this question: If I put you in a team of programmers, would you be able to meaningfully contribute? If you want to know how to land your dream job, take a minute to brainstorm which what qualities would make you effective in the role you&#x27;re applying to. Then demonstrate those qualities in an interview. Your list will look almost identical to mine - be proactive, have good communication skills, know how to program, know the domain (web &#x2F; ios &#x2F; ...), etc.<p>If you can&#x27;t demonstrate a skill in the interview, your interviewer will assume its because you don&#x27;t have that skill. This is a reasonable assumption and - despite all the grumbling in these threads - usually true. Most people who fail interviews either have poor technical skills or poor communication skills or both. If your interviewer can&#x27;t tell the difference between you and the mountain of disappointing candidates they&#x27;re drowning in, its your job to figure out why thats the case and fix it. If you apply for a frontend web position but you can&#x27;t tell me what a CSS selector is, its not the fault of &quot;the system&quot; when you don&#x27;t get hired.<p>Lots of folks here are convinced technical interviews are fundamentally broken. I still haven&#x27;t seen any fairer way to assess programmers that can filter out the flood of weak applicants. If you think technical interviews are broken, I challenge you to suggest a viable alternative. Please - prove me wrong!')