Item(by='Blikkentrekker', descendants=None, kids=[25763248, 25762542], score=None, time=1610538629, title=None, item_type='comment', url=None, parent=25759904, text='&gt; <i>That&#x27;s already the reality for most of this century. Openjdk, go, rust, docker, npm&#x2F;yarn, etc. all provide up to date Debian, Red Hat, etc. packages for what they offer. There&#x27;s zero advantage to sticking with the distribution specific versions of those packages which are typically out of date and come with distribution specific issues (including stability and security issues).</i><p>The advantage is the very reason one would choose <i>Debian</i> to begin with — an inert, unchanging, documented system.<p>A large part of this problem seems to be that users somehow install a system such as <i>Debian</i> whose <i>raison d&#x27;être</i> is inertia, only to then complain about the inertia, which makes one wonder why they chose this system to begin with.<p>&gt; <i>Debian&#x27;s claims to adding value in terms of security and stability to those vendor provided packages are IMHO dubious at best. At best they sort of ship security patches with significant delays by trying to keep up with their stable release channels. Worst case they botch the job, ship them years late, or introduce new bugs repackaging the software (I experienced all of that at some point).</i><p>Evidently they add value in terms of stability, but methinks many a man misunderstands what “stable&quot; means in <i>Debian</i>&#x27;s parlance. It does not mean “does not crash”; it means “is inert, unchanging” which is important for enterprises that absolutely cannot risk that something stop working on an upgrade.<p>&gt; <i>Shipping tested, fully integrated, self-contained binary images is the best way to ship software to production these days. You sidestep distribution specific packaging issues entirely that way and all of the subtle issues that happen when these distributions are updated. If you still want Debian package management, you can use it in docker form of course.</i><p>Not for the use case that <i>Debian</i>, and <i>RHEL</i> attempt to serve at all — these are systems that for good reasons do not fix non-critical bugs but rather document their behavior and rule them features, for someone might have come to rely upon the faulty behavior, and fixing it would lead to breaking such reliance.')