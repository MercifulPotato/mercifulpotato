Item(by='tylerhou', descendants=None, kids=None, score=None, time=1602308736, title=None, item_type='comment', url=None, parent=24736835, text='Not sure if this is sarcastic, but...<p>1) In dynamic languages, it&#x27;s not possible to detect whether a function is used or not in the general case. For example, consider string accesses on objects. If the compiler is not sophisticated enough to resolve the set of possible strings at compile time (or such analysis would unacceptably increase compile times), then you can&#x27;t shake out unused methods on that object. [1]<p>2) For languages like C and C++, the compiler cannot tree shake because it only knows about a single file at a time (translation unit, to be precise). You would have to rely on link-time optimizations to effectively tree shake, but LTO is not well-supported by all toolchains.<p>Tree shaking also has a cost that I mentioned earlier -- it increases compile times. Both LTO and tree shaking in dynamic languages increase compile times superlinearly [citation needed] wrt. the size of your application. As other commenters have mentioned, it&#x27;s better to avoid including unnecessary libraries in the first place.<p><i>There are no cost free abstractions,</i> and that applies to tree shaking as well. <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=rHIkrotSwcc" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=rHIkrotSwcc</a><p>[1] For the pedants: yes, I know resolving the possible set of values (stricter than &quot;all possible values for that type&quot;) for a variable is undecidable in the general case.')