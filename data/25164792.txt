Item(by='ChrisGammell', descendants=None, kids=[25165878], score=None, time=1605905460, title=None, item_type='comment', url=None, parent=25164660, text='&gt; I get the impression that experienced PCB designers can confidently whip up a prototype design and send it straight off to a fab shop, confident that it&#x27;ll mostly work and maybe require just a few tweaks.<p>I would say most designs get better over revisions. My mistakes on first revs of boards have gone down as I got more experienced, but the thing is, I&#x27;m always trying to do tougher things on the next board I design, so it&#x27;s just as likely there might be a mistake on that first rev.<p>As such, I recommend you start SUPER simple. A lot of the early stages of PCB design will be learning the software and associated quirks. Here are two short free video series I made to service that:<p>[Shine on you crazy KiCad](<a href="https:&#x2F;&#x2F;contextualelectronics.com&#x2F;shine-on" rel="nofollow">https:&#x2F;&#x2F;contextualelectronics.com&#x2F;shine-on</a>)<p>[Getting to Blinky 5.0](<a href="https:&#x2F;&#x2F;contextualelectronics.com&#x2F;GTB" rel="nofollow">https:&#x2F;&#x2F;contextualelectronics.com&#x2F;GTB</a>)<p>In the first one it&#x27;s a connector, an LED and a resistor, about as simple as you can get. But it plugs into a Raspberry Pi, so you can control it with software. The second one is a standalone using a 555 timeer. It&#x27;s more involved and includes more custom components. Hopefully that moves you along your path towards making boards you like. I run a course where we show much more complex things, if that&#x27;s your style, but we still try to get people to do the two above first.<p>Good luck, hardware is awesome! :-D')