Item(by='wa1987', descendants=None, kids=[24674164], score=None, time=1601750634, title=None, item_type='comment', url=None, parent=24670454, text='&gt; If a static site generator put my images in the wrong place and required a gigantic JSON file to be loaded by the client for no reason I would not think twice to get rid of it.<p>Incorrect DOM-output is likely caused by common mistakes (e.g. conditional rendering based on `typeof window !== &#x27;undefined&#x27;`) which screw up rehydration. Dealt with it in the past and seen a lot of developers struggle with it. This article describes it well:<p><a href="https:&#x2F;&#x2F;joshwcomeau.com&#x2F;react&#x2F;the-perils-of-rehydration&#x2F;" rel="nofollow">https:&#x2F;&#x2F;joshwcomeau.com&#x2F;react&#x2F;the-perils-of-rehydration&#x2F;</a><p>Gigantic page-data.json files are caused by querying more data than necessary to render a given template&#x2F;component. Let&#x27;s say you define a component named `EmployeeCard` that renders a name and photo given an `employeeId`. Now you need to query <i>all</i> employees and render the right one using `.find()`. All this data (including base64 thumbnails) ends up in page-data.json, even if you need to render a only single employee.<p>This is solved by querying only the relevant employee(s) in the template and provide the data (name + photo) directly to the `EmployeeCard` component as props.<p>I&#x27;ve developed quite a few websites using Gatsby (mostly backed by various GraphQL API&#x27;s such as WPGraphQL and Strapi) and while there&#x27;s lots to learn, it&#x27;s been an enjoyable experience so far.')