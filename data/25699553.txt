Item(by='encypruon', descendants=None, kids=None, score=None, time=1610192154, title=None, item_type='comment', url=None, parent=25690189, text='The author writes:<p><pre><code>  The second issue is that solving an overdetermined linear least squares problem is much more expensive than taking a few floating point reciprocals, and is also more prone to blowing up unexpectedly when you run out of precision.  There is some discussion in the paper about how to manage these issues, but it can become very tricky.  As a result, I did not get around to implementng this method in javascript (maybe later, once I find a good linear least squares solverâ€¦)\n</code></pre>\nWhile writing an (honestly probably not very good) implementation in Lua I was facing the same problem. If I understand it correctly the problem is to figure out where to put the vertices so that they end up close to the planes defined by the positions and normals of the neighbouring hermites. I found that I can get a good-enough-for-my-purposes approximation in about 20 lines:<p><pre><code>  initialize point at center\n  for i = 1, 8 do\n      project point onto each plane\n      point := average of projected points\n      constrain point to reasonable range\n  end\n</code></pre>\nHere a some results (some meshed noise):<p><a href="https:&#x2F;&#x2F;i.imgur.com&#x2F;utCcKYx.mp4" rel="nofollow">https:&#x2F;&#x2F;i.imgur.com&#x2F;utCcKYx.mp4</a>')