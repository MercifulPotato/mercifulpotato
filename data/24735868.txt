Item(by='bawolff', descendants=None, kids=[24735981], score=None, time=1602291265, title=None, item_type='comment', url=None, parent=24735567, text='&gt; in application programming languages tend to be much richer than SQL.<p>Hence why i say why there is a data model mismatch.<p>E.g. i wouldn&#x27;t say that assembly and haskell have a compatible data model just because assembly is a sequence of bytes, and haskell is a superset of that.<p>Not that a data model is solely about the types involved.<p>&gt; See orms for reference. ORMS have their own set of problems but data mismatches are not part of those problems.<p>ORMs are notorious for being a leaky abstraction. Largely because the object and relational data model dont entirely match.<p>&gt; In general the classic model for web development is to place as much logic as possible into the SQL query and as little logic as possible into your heavy Python web app.<p>When was the last time you wrote a 500 line sql query? A thousand line? My point is that sql queries are short enough, that further abstraction is not really missed. That doesn&#x27;t mean you should put 0 logic in your query.<p>&gt; Case in point do you put your where clause in the application program than download the entire table? Or do you throw as much logic as possible into the query so the database outputs a result as close as possible to what you need? The later statement is the right answer.<p>This is a strawman.<p>&gt; The bigger issue is SQL optimization. Because Databases form the backbone of computation for a standard web app SQL provides a layer of indirection that makes optimization harder<p>I disagree. At scale you have data that has mixed cardinality. The indirection allows the db to chose the best algorithm given the size of underlying data at runtime. Sometimes that doesn&#x27;t work properly, but the vast majority of time it is a significant benefit. Its sort of like how sometimes compilers dont work properly and you need to hand optimize, but in practise that is rare and you wouldn&#x27;t throw out the compiler because the other 95% of time its better and lower effort than if you had to always do it by hand.')