Item(by='alblue', descendants=None, kids=[25668062], score=None, time=1609976881, title=None, item_type='comment', url=None, parent=25660743, text='Sort of; Intel and AMD are stuck with the variable width instruction isa that exists due to historical evolution. To do something different you need a new isa.<p>Intel tried this with Itanium a while back and failed because it is difficult to get software developers to target a new isa and provide compilers and compiled code for everything unless you use a translation layer.<p>Apple is one step ahead here because their compilers already supported ARM isa (because iPhones use them) and had both the OS and apps ready to go from day one of availability.<p>They also had translation technology that would allow mutating x86_64 code to ARM64 code so that old apps would (on the whole) run acceptably fast on the new chip.<p>To do the latter properly, Apple had to create a special mode to run the arm chip with total store order for memory writes, which is not standard on arm. (It would be a lot slower if they didn’t have that when running Rosetta translated code.)<p>So both the OS being available, and the OS influencing the ARM tweaks (eg TSO) could they pull it off.<p>They also have the position that they build hardware that uses those chips so can mass produce - and in fact, replace - existing hardware.<p>Each of these things could be done in isolation by Intel&#x2F;Windows&#x2F;Apps but it would be difficult to do all three.<p>Even getting JavaScript maths in a special instruction was difficult enough on Intel, and that was something of benefit to any browser.<p>My guess is you’ll see Intel and AMD offering Arm chips in the near \nfuture, as both AWS (graviton) and Apple have shown the way to a new ARM future.')