Item(by='kodablah', descendants=None, kids=None, score=None, time=1604585325, title=None, item_type='comment', url=None, parent=24997835, text='&gt; Surprisingly, including the _fmt_ library adds about 2MBytes to the size of the code.<p>Part of including unicode package itself (transitively or otherwise) has a ton of package-level vars that bloat the WASM. Also, they slow down init because a bunch of code has to be run to initialize them. Also, due to the fact that WASM doesn&#x27;t have arbitrary jumping, in order to support coroutine yielding and resumption, Go&#x27;s WASM support puts big br_tables[0] at the top.<p>A while back, I brought up some efficiency concerns w&#x2F; data size and init instruction count[1] but they were dismissed as WASM concerns not Go ones and there weren&#x27;t any easy&#x2F;obvious wins. Also a while back, I used an interpreter to run the Go WASM up until actual main, then bake in the data that was initialized and remove init for packages where I didn&#x27;t need their values[2]. I kinda gave up on using Go and WASM after all of that, but there is real room for improvement there.<p>0 - <a href="https:&#x2F;&#x2F;webassembly.github.io&#x2F;spec&#x2F;core&#x2F;exec&#x2F;instructions.html#xref-syntax-instructions-syntax-instr-control-mathsf-br-table-l-ast-l-n" rel="nofollow">https:&#x2F;&#x2F;webassembly.github.io&#x2F;spec&#x2F;core&#x2F;exec&#x2F;instructions.ht...</a><p>1 - <a href="https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;go&#x2F;issues&#x2F;26622" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;go&#x2F;issues&#x2F;26622</a><p>2 - <a href="https:&#x2F;&#x2F;github.com&#x2F;cretz&#x2F;go-wasm-bake" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;cretz&#x2F;go-wasm-bake</a>')