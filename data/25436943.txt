Item(by='mleonhard', descendants=None, kids=None, score=None, time=1608075479, title=None, item_type='comment', url=None, parent=25429493, text='The article shows ways to prevent new dependencies on your deprecated library&#x2F;service.  This is half of the problem.  The other half is efficiently removing the existing dependencies.<p>Your team could change the other teams&#x27; code to remove the dependencies.  This is usually inefficient.  You will waste time learning their code.  They may drag out the code review process for weeks or months.<p>Some teams may refuse to accept your changes and use your service deprecation as political capital to demand more headcount.  They may even lie to their managers and claim that the dependency deprecation is justification for a rewrite that they want to do.<p>There is a technical solution that can help with this social problem: AUTOMATICALLY EXPIRING DEPENDENCY APPROVALS.  Configure your library to allow only existing systems to use it, and make them all break on a certain date.  Then, instead of forcing the other team to move, they have to move or their build breaks.  And if they want to delay turndown they must convince you to change your code.  Without automatic expiration, they can delay turndown by simply ignoring you.<p>Some teams may wait for the dependency expiration, lie saying they didn&#x27;t know about the turndown, and then demand that you delay the turndown and give them more time.  You can work around this with a two-phased turndown.  First create a new version of the library that allows only existing clients.  Give the library a hideous name so code owners will want to remove it.  Example: Deprecated_LiBrArY_YoUr_BuIlD_WiLL_BREaK_oN_20200601_LOL_Were_sERIUS_YOLO_exxtensuns_COme_frun_SVP_DaniELs_OnLY.  Then set the existing library to expire in a week and email all users.  They can easily switch to the new hideously-named library and in the process acknowledge that they know that their build will break at the specified date.<p>TLDR: Use expiring white lists so you won&#x27;t get ignored.  Rename your deprecated library to something hideous to motivate code owners to migrate away from it.')