Item(by='breck', descendants=None, kids=None, score=None, time=1608395793, title=None, item_type='comment', url=None, parent=25476935, text='&gt; not really sure what you mean by 2D&#x2F;3D.<p>Turn off the computer and &quot;write&quot; a program by assembling legos. One token is one lego block. So an open quotation mark—&quot;—is one lego block. If you can align all the lego blocks in a single line, and the meaning of the program does not change, you have a 1-D programming language. This is the case for all the languages you mentioned—&quot;JSON&#x2F;YAML&#x2F;XML&#x2F;s-exprs&quot;.<p>This is not the case for Tree Notation&#x2F;2-D and 3-D languages. Changing the 2-D positioning of the tokens changes the meaning.<p>Now you might say that this is not the case because you could just have a lego block that equals &quot;\\n&quot;, and so the parsing would be the same. But the mistake their is to miss the general idea of 2-D languages. While Tree Notation first parses a program linearly from start to end, that&#x27;s just because it&#x27;s a limitation based on how our current computers are designed to work, and having multiple read&#x2F;execute heads starting and moving in different directions across a memory cube is not technology we currently have.<p>I gave a talk on this putting it another way a few years ago: &quot;<a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ldVtDlbOUMA" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ldVtDlbOUMA</a>&quot;.<p>To put it another way: you don&#x27;t need syntax characters, all you need is space.<p>&gt; but failing that, people will dismiss your claims of being revolutionary as crankery, which will hurt your project&#x27;s image.<p>I figured it would take ~10 years of hard work and dedication to chisel out the core of this idea and make it &quot;just work&quot; for people. I&#x27;m about 4 years in, so the bulk of the work and resources to put in are still ahead. I do not want to put so much effort and resources into a novel idea that wouldn&#x27;t have much of an impact if it turns out to be correct. I give this idea a low probability of being groundbreaking (&lt;10%), but if it is it will fundamentally change our languages and probably make a significant impact across society in many unpredictable ways (probably many orders small than binary notation, but many magnitudes bigger than most things). So I&#x27;m happy to sacrifice my &quot;image&quot; for this idea. I want people to be critical, especially now, still in the early days, to figure out the flaws here. I&#x27;m still not seeing one. From all the data I&#x27;ve seen so far, these types of languages will be a 10x+ leap in technology. It&#x27;s a really big idea.')