Item(by='iainctduncan', descendants=None, kids=[24999279, 25006867, 25000031, 25001718, 24999261], score=None, time=1604590585, title=None, item_type='comment', url=None, parent=24999039, text='I actually do due diligence on tech firms now for a job, and you&#x27;re 100% right that the tradeoffs change dramatically when the company grows. Which doesn&#x27;t mean that using the best thing possible for your expert coders at the beginning is wrong. At the beginning, you need every advantage you can get, and if you have expert programmers, give them the sharpest knife you can find! But yeah, once your company is hiring hundreds, or even dozens of devs, and is being sold every handful of years from one investment fund to another, the same set of tradeoffs no longer necessarily apply and .NET and the JVM look pretty good.<p>I&#x27;m writing some Java at the moment for an Android app, and it&#x27;s just killing me after doing Scheme and Python, but I have to admit, if that start-up had used Java or C#, they might have been better off in the long run.<p>Hiring really good, disciplined people is super, super hard. My current thought is that if you don&#x27;t have a super-star CTO who can attract and keep real A+ coders, <i>don&#x27;t use advanced languages</i>. And if you do have that CTO, do it, but make sure you are architecting to make the rewrite in C# or whatever doable when you sell your company. If I were starting my own business now, I&#x27;d use Clojure or Scala or F#, and design things so that in 5 years new owners had a decent path to switch to C# or Java wherever they want.')