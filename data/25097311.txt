Item(by='acemarke', descendants=None, kids=[25101315], score=None, time=1605403865, title=None, item_type='comment', url=None, parent=25097093, text='Nice, glad to hear that!<p>Yeah, RTK is written in TS and specifically designed for a good TS usage experience with a lot of type inference, and the React-Redux hooks API is _much_ simpler to use with TS since it&#x27;s really just a matter of declaring the type of `state` in your selectors.  (Well, okay, to use thunks in components you gotta supply a customized type for `dispatch` that knows it can accept thunks too.)<p>FYI, we&#x27;ve got some new RTK APIs in the works that are close to alpha status that I think are really gonna surprise people and make some use cases a _lot_ nicer too.  Hoping we can formally announce them here in the next couple weeks.<p>Lemme glance at that repo you listed there...<p>Oh wow, that&#x27;s a really impressive project there, and some neat larger-scale use of RTK!  Thanks for linking that.<p>A few quick bits of feedback on your code since I&#x27;ve got it open:<p>- A couple of those extra middleware look like they could maybe just be hand-written thunks instead, such as `projectMiddleware`<p>- for `projectMiddleware` in particular, you probably ought to be doing `storeAPI.dispatch(loadProject))` instead of trying to unwrap the thunk yourself<p>- strictly speaking, a reference to `window.width` shouldn&#x27;t be in the reducer itself - the value should be in the action, preferably via the `prepare` callback. (In practice it won&#x27;t really make a difference, just pointing it out as an FYI.)<p>- always nice to see actual uses of `undoable()` in the wild :)')