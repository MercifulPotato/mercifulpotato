Item(by='kazinator', descendants=None, kids=[25377242, 25377097], score=None, time=1607624421, title=None, item_type='comment', url=None, parent=25376055, text='&gt; <i>Not to mention that what someone learned in uni a decade ago is probably not applicable anymore whatsoever (in tech).</i><p>Working all night to meet a deadline is applicable. You learn dedication at university.<p>University also teaches you to take a risk on something long term. You pay a bunch of money, and work hard without compensation for a number of years, hoping it will pay off somehow. Your risk not making the grade and dropping out, losing the investment of time and money.<p>I remember one assignment which was implementing floating-point addition in 68K assembly code. (Third year course on machine architectures.) Code was executed on an emulator that could provide cycle counts, and there was a cycle count maximum to meet on certain test cases.<p>Now the permanent lesson here wasn&#x27;t 68K coding, and that&#x27;s not what the experience memorable. Rather, the day before the assignment was due, the prof surprisingly dropped the cycle count requirements to significantly lower values. Everyone had to scramble to squeeze their code down, even those who had not procrastinated at all and completed their code days in advance.  We learned about dealing with a change in external requirements close to the deadline, and still making it.')