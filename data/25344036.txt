Item(by='KronisLV', descendants=None, kids=[25344094], score=None, time=1607427448, title=None, item_type='comment', url=None, parent=25343966, text='&gt; How do I get all uploads of a user? I get the user by id (request 1) then all his videos by making one request per video (n requests). No big problem for the database (it&#x27;s all indexed) and sure, we can improve the performance, but for now the bottleneck here is the number of requests that goes over the network if we use REST. This doesn&#x27;t work. You need to make a new endpoint or change an endpoint to make this work in a performant way.<p>The answer to this problem is resource expansion. Dylan Beattie actually has a nice and somewhat humorous presentation about how to address this with REST interfaces: <a href="https:&#x2F;&#x2F;youtu.be&#x2F;g8E1B7rTZBI" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;g8E1B7rTZBI</a><p>Here&#x27;s the part that addresses such data access in particular with a social media site example (people who have photos, which have comments etc.): <a href="https:&#x2F;&#x2F;youtu.be&#x2F;g8E1B7rTZBI?t=1807" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;g8E1B7rTZBI?t=1807</a><p>Sadly, approaches like that and even HATEOAS are not awfully widespread, mostly because of the added complexity and the support by frameworks simply not being quite there.')