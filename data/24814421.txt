Item(by='twotwotwo', descendants=None, kids=[24815505, 24814773, 24814514], score=None, time=1602978726, title=None, item_type='comment', url=None, parent=24813239, text='So I cloned the mysql-server and postgres repos and ran sloccount. It&#x27;s not the deepest dive or anything but was interesting.<p>I saw MySQL had...600k lines of JavaScript?<p>It turned out that the storage&#x2F;ndb directory had a Web-based management interface for NDB, which vendors in the Dojo JavaScript framework. It also had ~50k lines of Java for the &quot;ClusterJ&quot; framework, which interfaces with NDB skipping the SQL layer. Overall, sloccount reports about 1.4M lines of code in storage&#x2F;ndb&#x2F;.<p>NDB is a specialized cluster database where all secondary indexes have to fit in the cluster&#x27;s RAM(!). Work on it started at Ericsson, then it was spun out into a startup which MySQL AB eventually bought. I imagine MySQL management at the time hoped the future of DB clusters might end up looking more like NDB and less like...<i>gestures at today&#x27;s database landscape</i>.<p>There are also ~500K lines of Unicode tables in the strings&#x2F; directory. I recall Postgres calls out to libc for locale&#x2F;collation related stuff so probably doesn&#x27;t need those tables in-tree.<p>Even accounting for those chunks you still end up with ~1M vs ~2M SLOC as measured by sloccount. (I don&#x27;t want to pretend the numbers are super precise.) There are probably other differences in what&#x27;s in scope for the repo or other surprises. [Edit: see johannes1234321&#x27;s comment which lists some of them.]<p>Besides those, though, might be truth to others&#x27; comments about MySQL spending lots of code supporting drastically different old and new &quot;worlds&quot; in a single binary (non-transactional and transactional storage, originally very-nonstandard vs. currently more-standard SQL, statement-based and row-based replication...). And at a totally non-technical level, as a product MySQL seems to have had more money thrown at it and that tends to mean more code.<p>This was fun but was an incredibly quick and dirty dive into it, and I&#x27;d love to hear more from folks who can look more or just know more.')