Item(by='vips7L', descendants=None, kids=None, score=None, time=1605498375, title=None, item_type='comment', url=None, parent=25107055, text='DI has nothing to do with the differences between classes&#x2F;objects and functions&#x2F;closures, DI and IoC are about reusable code and being able to switch out implementations. You can do IoC in either pattern.<p>In Java functions&#x2F;closures and objects&#x2F;classes are the same thing. You have the best of both worlds. You can for instance define a function that takes an argument a and a function b and pass it either a functional lambda or a class that implements said function:<p><pre><code>    static void doSomething(int a, Runnable b) {\n        if (a &gt; 0) {\n            b.run();\n        } \n    }\n\n    doSomething(1, () -&gt; System.out.println(&quot;hello&quot;));\n    \n    Runnable r = new SomeClassThatImplementsRunnable();\n    doSomething(0, r);</code></pre>')