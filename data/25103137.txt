Item(by='nickjj', descendants=None, kids=[25103390, 25109647, 25103291, 25107039], score=None, time=1605462795, title=None, item_type='comment', url=None, parent=25100397, text='I&#x27;ve been tinkering with Serverless (on AWS) for some client work recently and my view is about the same as this post. Every complaint he listed is what I encountered too. It&#x27;s one of the most unfriendly dev experiences I&#x27;ve seen in ~20 years of development.<p>OP&#x27;s post contains:<p>&gt; What started as a simple function, grew into a bunch of serverless functions, SNS topics, S3 buckets, DynamoDB tables. All bound together with plenty of YAML glue, schema-less JSON objects passed around and random hardcoded configs in AWS console.<p>With SAM, it&#x27;s still a ton of boilerplate too.<p>And honestly, even most simple functions are going to use SNS topics, S3 buckets and CloudWatch so you can see your logs. Probably a datastore too. Or if you want to access the Lambda over HTTP instead of an SNS trigger, then you&#x27;ll need something like API gateway or a load balancer too.<p>It&#x27;s even more fun if you decide to write to an RDS instance that&#x27;s locked down by IP address and inside of a VPC while at the same time your Lambda needs external internet access. The amount of hoop jumping to get all of that to work was unreal. And it ended up costing $33 &#x2F; month just to have a NAT set up to route all of the internet traffic between these services.<p>The infrastructure complexity was more than anything I&#x27;ve ever experienced in any tech stack. But I thought the goal of Serverless was to avoid infrastructure?<p>Then there&#x27;s the whole problem of wanting to wire up your main non-serverless service wanting to trigger a Lambda using SNS topics. That&#x27;s fine until you want to be able to develop the project locally, except SAM and other comparable tools don&#x27;t mock out SNS. So now you&#x27;re stuck either having to pay to have your dev environment running on AWS or set up something like localstack to mock out a bunch of AWS services (which isn&#x27;t free either btw).<p>The messed up thing is, after all that, it was to be able to run about 20 lines of Python business logic. All it did was call out to a 3rd party API service and store the results into a database.')