Item(by='Uehreka', descendants=None, kids=[24711313, 24711343, 24711062], score=None, time=1602090119, title=None, item_type='comment', url=None, parent=24708345, text='My first mobile app was a 2012 “Beach Weather app” called SafeSands (no longer available for... many reasons) that I made as a project in college. I grabbed weather data from iGoogle’s private API (which they turned off 4 months later) and tidal data from NOAA’s legit public API.<p>One issue I ran into was the irregularities described in this article. The other was that the tidal data available through NOAA’s API was from NOAA tidal stations which were (at the time) kind of sparsely placed. I ended up fielding a lot of support email due to what I’ve come to call “the Florida problem”:<p>As TFA notes, the Gulf of Mexico has weird tides. Also, most of Florida is a long thin peninsula. So let’s say (I forget the real locations) that NOAA has one tidal station in St. Augustine (northern FL on the Atlantic side) and one in Sarasota (mid-to-southern FL on the Gulf of Mexico side). You’re using my app in Ft. Lauderdale (southern FL on the Atlantic side). The St. Augustine location probably better reflects the tides you’ll be seeing, but the Sarasota station is closer, so the app would pull tides from there.<p>Solving this problem well would probably require establishing “coast domains” based on where each station is accurate (which strikes me as a nontrivial task) and you’d also need to solve for degenerate cases like if someone uses the app from somewhat inland (if they’re planning a trip to a beach a few hours away for instance).<p>My guess is that in the intervening 8 years someone has taken the Dark Sky approach of aggregating tidal data, figuring these things out, and selling access to an API. And that person deserves whatever money they’re making.')