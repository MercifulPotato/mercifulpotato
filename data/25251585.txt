Item(by='st_goliath', descendants=None, kids=[25251988], score=None, time=1606722730, title=None, item_type='comment', url=None, parent=25246050, text='Circa 2 years ago, I was working on a side project and got so annoyed with SquashFS tooling, that I decided to fix it instead. After getting stuck with the spaghetti code behind mksquashfs, I decided to start from scratch, having learnt enough about SquashFS to roughly understand the on-disk format.<p>Because squashfs-tools seemed pretty unmaintained in late 2018 (no activity on the official site &amp; git tree for years and only one mailing list post &quot;can you do a release?&quot; which got a very annoyed response) I released my tooling as &quot;squashfs-tools-ng&quot; and it is currently packaged by a hand full of distros, including Debian &amp; Ubuntu.[1]<p>I also thoroughly documented the on-disk format, after reverse engineering it[2] and made a few benchmarks[3].<p>For my benchmarks I used an image I extracted from the Debian XFCE LiveDVD (~6.5GiB as tar archive, ~2GiB as XZ compressed SquashFS image). By playing around a bit, I also realized that the compressed meta data is &quot;amazingly small&quot;, compared to the actual image file data and the resulting images are very close to the tar ball compressed with the same compressor settings.<p>I can accept a claim of being a little smaller than SquashFS, but the claimed difference makes me very suspicious. From the README, I&#x27;m not quite sure: Does the Raspbian image comparison compare XZ compression against SquashFS with Zstd?<p>I have cloned the git tree and installed dozens of libraries that this folly thingy needs, but I&#x27;m currently swamped in CMake errors (haven&#x27;t touched CMake in 8+ years, so I&#x27;m a bit rusty there) and the build fails with some <i>still</i> missing headers. I hope to have more luck later today and produce a comparison on my end using my trusty Debian reference image which I will definitely add to my existing benchmarks.<p>Also, is there any documentation on how the on-disk format for DwarFS and it&#x27;s packing works which might explain the incredible size difference?<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;AgentD&#x2F;squashfs-tools-ng" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;AgentD&#x2F;squashfs-tools-ng</a><p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;AgentD&#x2F;squashfs-tools-ng&#x2F;blob&#x2F;master&#x2F;doc&#x2F;format.txt" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;AgentD&#x2F;squashfs-tools-ng&#x2F;blob&#x2F;master&#x2F;doc&#x2F;...</a><p>[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;AgentD&#x2F;squashfs-tools-ng&#x2F;tree&#x2F;master&#x2F;doc" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;AgentD&#x2F;squashfs-tools-ng&#x2F;tree&#x2F;master&#x2F;doc</a>')