Item(by='cle', descendants=None, kids=None, score=None, time=1608365819, title=None, item_type='comment', url=None, parent=25475940, text='&gt; The &quot;seriously, who cares?&quot; at the end just discredits the entire article for me.<p>It doesn&#x27;t for me. I can&#x27;t keep track of all the times I&#x27;ve been frustrated by a &quot;final&quot; class or a private variable somewhere that, were it public, I could have trivially solved my urgent business problem in time, with full awareness of the tech debt being incurred.<p>But I can&#x27;t remember any time in the tens of thousands of lines of Python that I&#x27;ve written, where I had regretted consuming a variable somewhere.<p>So at this point, based on my experience, it all just sounds like paranoia to me that doesn&#x27;t <i>actually</i> add value in practice. I think many of these &quot;best practices&quot; in Java, especially those coming from &quot;Effective Java&quot;, are over-paranoid for most developers, and just create more problems than they solve. Being paranoid about API contracts makes sense if you are writing a widely-consumed library like those that Josh Bloch worked on, where the cost of changing consumers is prohibitively high. But when you are working on a class that has a handful of consumers, it really doesn&#x27;t matter--just go update the consumers if you really need to (which you probably don&#x27;t).')