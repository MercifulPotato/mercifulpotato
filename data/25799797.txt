Item(by='ricardobeat', descendants=None, kids=[25800961, 25800111], score=None, time=1610768190, title=None, item_type='comment', url=None, parent=25798955, text='You are <i>programatically updating elements in React</i>, you just internalized a different set of rules (putting state in the designated buckets vs calling an update function). It is the equivalent of this:<p><pre><code>    const setState = (s) =&gt; { state = s; rerender() };\n</code></pre>\nReal reactivity is what you get with proxies in Vue, or a smart compiler like Svelte.<p>&gt; I can alter global state ... that isn&#x27;t possible with this framework<p>You&#x27;d just need to export a state object from a module, import into the components, and call rerender after any mutation. I&#x27;ve actually written quite a few vanilla-js apps using this structure when I don&#x27;t want to bother with tooling, small pages don&#x27;t need a complex reconciler.<p>I&#x27;m not saying this is better btw - there are ergonomic concerns and different trade-offs, but the distance from this to what React does is much, much shorter than most people think. We&#x27;ve just been conditioned to accept its rules as &#x27;normal&#x27;: don&#x27;t declare plain variables in your functions, don&#x27;t mutate properties, don&#x27;t use inline functions as props, don&#x27;t rely on previous state object for updates, and so on... step outside the box and you&#x27;ll get a mess too. This library is just a smaller, different shape box.')