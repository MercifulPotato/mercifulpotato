Item(by='c-smile', descendants=None, kids=None, score=None, time=1602870111, title=None, item_type='comment', url=None, parent=24802644, text='&quot;It does!&quot; at some extent that is far from being adequate for native UI needs.<p>Consider that you need add &lt;word&gt;...&lt;&#x2F;word&gt; element that will implement natively MS Word editing area. This will allow you to define MS Word editing chrome in HTML&#x2F;CSS but keep core editing functionality native and effective.<p>Consider implementation of &lt;tabs&gt; native element&#x2F;behavior: <a href="https:&#x2F;&#x2F;github.com&#x2F;c-smile&#x2F;sciter-sdk&#x2F;blob&#x2F;master&#x2F;include&#x2F;behaviors&#x2F;behavior_tabs.cpp" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;c-smile&#x2F;sciter-sdk&#x2F;blob&#x2F;master&#x2F;include&#x2F;be...</a><p>This is a demo of how native code can extend DOM - adding native &quot;drivers&quot; of app specific DOM elements. Yet there are other examples of native behaviors: <a href="https:&#x2F;&#x2F;github.com&#x2F;c-smile&#x2F;sciter-sdk&#x2F;tree&#x2F;master&#x2F;include&#x2F;behaviors" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;c-smile&#x2F;sciter-sdk&#x2F;tree&#x2F;master&#x2F;include&#x2F;be...</a><p>Essentially native behavior can do anything that built-in elements can do, even drawing on the same surface that the rest of DOM is using.<p>Good luck with achieving anything like that in browsers, or in Electron, or with WebAsm or whatever.')