Item(by='mikelevins', descendants=None, kids=None, score=None, time=1609728693, title=None, item_type='comment', url=None, parent=25626281, text='That&#x27;s a good suggestion. Walking through a set of interactions is a solid idea.<p>For what it&#x27;s worth, there are some videos around of people actually doing it with Lisp and Smalltalk systems, and pjmlp already posted a pile of them elsewhere in this thread.<p>I can add a few more:<p>Kalman Reti walking through some interactions with a Symbolics LispM repl:<p><a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=o4-YnLpLgtk" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=o4-YnLpLgtk</a><p>Brian Mastenbrook demonstrating Interlisp&#x27;s SEDIT structure editor in the Xerox Lisp environment:<p><a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=2qsmF8HHskg" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=2qsmF8HHskg</a><p>Rainer Joswig (lispm here on HN) showing us a little bit of repl and Zmacs interaction on a Symbolics Lisp Machine:<p><a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=LIGt5OwkoMA&amp;list=PLN1hNlVqKBbN6c4BbDuGL3VfrRNOuLsgI" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=LIGt5OwkoMA&amp;list=PLN1hNlVqKB...</a><p>Rainer again, showing some simple interactions with Macintosh Common Lisp, which was my daily driver for years:<p><a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=GKG8cJl70mo" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=GKG8cJl70mo</a><p>Ruby programmer Avdi Grimm shows some things that he found cool about Pharo Smalltalk:<p><a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=HOuZyOKa91o" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=HOuZyOKa91o</a><p>Dan Ingalls (one of the original authors of Smalltalk) in a 2017 demo of Smalltalk 76:<p><a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=NqKyHEJe9_w" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=NqKyHEJe9_w</a><p>There are some other things I&#x27;d like to find for lists like this, but haven&#x27;t been able to. In particular, a good demo of Apple&#x27;s SK8 would be great.<p>If you can imagine a full-color Hypercard that could crack open and reprogram absolutely everything on the screen, including the machine code that drew the window system&#x27;s widgets, all in a repl while the code was live; in which you could grab an arbitrary widget and drop it on the repl window to get a live variable reference to the widget, and then inspect it, operate on it, and reprogram it, again, while everything continued to run; in which you could build new window-system widgets by snapping together shapes and telling them to become widgets; in which you were not limited to HyperTalk for coding and text strings for data, but had a full Common Lisp at your disposal plus a Minsky-style frame system for representing data and knowledge, then you have some idea of what SK8 was like.')