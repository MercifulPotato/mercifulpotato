Item(by='domenicd', descendants=None, kids=[25774140, 25772361, 25774057], score=None, time=1610600479, title=None, item_type='comment', url=None, parent=25770927, text='I agree this page hasn&#x27;t aged well, but that&#x27;s because it&#x27;s stuck on IE10 as the support level it&#x27;s targeting. If you don&#x27;t need to target IE at all (only Edge), then everything becomes simpler. That&#x27;s not always safe, but that&#x27;s why you <i>might</i> not need jQuery...<p>For reference:<p><pre><code>  &#x2F;&#x2F; JSON\n  const data = await (await fetch(&#x27;&#x2F;my-url&#x27;)).json();\n\n  &#x2F;&#x2F; Post\n  await fetch(&#x27;&#x2F;my-url&#x27;, { method: &#x27;POST&#x27;, body: data });\n\n  &#x2F;&#x2F; Request\n  try {\n    const resp = await fetch(&#x27;&#x2F;my-url&#x27;);\n    &#x2F;&#x2F; ...\n  } catch (e) {\n    &#x2F;&#x2F; ...\n  }\n\n  &#x2F;&#x2F; Fade In\n  el.animate({ opacity: 1 }, 400);\n\n  &#x2F;&#x2F; Fade Out\n  el.animate({ opacity: 0 }, 400);\n\n  &#x2F;&#x2F; Hide\n  el.hidden = true;\n\n  &#x2F;&#x2F; Show\n  el.hidden = false;\n\n  &#x2F;&#x2F; After\n  target.after(el);\n\n  &#x2F;&#x2F; Append\n  target.append(el);\n\n  &#x2F;&#x2F; Before\n  target.before(el);\n\n  &#x2F;&#x2F; Each\n  for (const el of document.querySelectorAll(selector)) {\n    &#x2F;&#x2F; ...\n  }\n\n  &#x2F;&#x2F; Empty\n  el.replaceChildren(); &#x2F;&#x2F; or el.textContent = &#x27;&#x27;, depending on which you find clearer\n\n  &#x2F;&#x2F; Filter\n  [...document.querySelectorAll(selector)].filter(filterFn);\n\n  &#x2F;&#x2F; Get Height\n  el.clientHeight;\n\n  &#x2F;&#x2F; Get Width\n  el.clientWidth;\n\n  &#x2F;&#x2F; Matches\n  el.matches(&#x27;.my-class&#x27;);\n\n  &#x2F;&#x2F; Remove\n  el.remove();\n\n  &#x2F;&#x2F; Delegate\n  document.addEventListener(eventName, e =&gt; {\n    const match = e.target.closest(elementSelector);\n    if (match) {\n      handler.call(match, e);\n    }\n  });\n\n  &#x2F;&#x2F; Trigger Custom\n  el.dispatchEvent(new CustomEvent(&#x27;my-event&#x27;, { detail: { some: &#x27;data&#x27; } }));\n\n  &#x2F;&#x2F; Trigger Native\n  el.dispatchEvent(new Event(&#x27;change&#x27;));\n\n  &#x2F;&#x2F; Extend\n  Object.assign({}, objA, objB);\n\n  &#x2F;&#x2F; Parse HTML\n  (new DOMParser()).parseFromString(htmlString);\n\n  &#x2F;&#x2F; Type\n  obj[Symbol.toStringTag];</code></pre>')