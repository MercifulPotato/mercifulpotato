Item(by='wwweston', descendants=None, kids=None, score=None, time=1607414478, title=None, item_type='comment', url=None, parent=25337501, text='Something I always thought was interesting about that argument is how a similar line of reasoning could apply to the `==` and `===` comparison operators.<p>Just about anyone who&#x27;s ever written JS probably knows about the <i>heavy</i> lean towards &quot;always use `===`&quot;. And it&#x27;s not without good reason, because there are a <i>lot</i> of not-entirely-intuitive implicit coercions and comparison corners associated with `==`. Personally, I think it&#x27;s OK to use it, but I understand that it requires knowing the rules associated with use and most of all <i>comes with the overhead of keeping them in mind when you do so</i>. Most of the time it will be OK if you know even most of the rules. Sometimes it will not be OK. More often the overhead will cost you attention to other things. Some people have made the call &quot;wouldn&#x27;t it be simpler if we just did strict comparison and saved our attention for other things?&quot; and while it&#x27;s not my first choice, I can understand and respect it.<p>The statement termination thing strikes me as pretty much the same. Sure, if you know the rules, you can do it freely. But it takes something explicit that you <i>don&#x27;t</i> have to think about and turns it into something implicit that you do. It isn&#x27;t going to be a problem most of the time, but sometimes it will not be OK. A little more often the overhead will cost you attention to other things. Following the rule that semicolons terminate statements hasn&#x27;t ever cost me anything.<p>The weird thing in my experience was the frequent overlap between antisemicolonists and always===ists. My theory is that mostly these people came from Ruby and Python, liked less punctuation, and didn&#x27;t actually know the coercion rules well or particularly like JS, but that&#x27;s speculation.')