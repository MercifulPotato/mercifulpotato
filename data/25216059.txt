Item(by='drknow007', descendants=None, kids=[25219332], score=None, time=1606353859, title=None, item_type='comment', url=None, parent=25209600, text='Great job. I largely agree with the concepts in this well thought out paper. I have built several commercial grade products and the front-end is always where the most pain and cost exist. By a long shot. If someone doesn&#x27;t agree this layer needs a serious overhaul, they are not the ones paying the bill or have not build a large scale commercial product.<p>HTML and CSS are not clean, intuitive, or efficient beyond simple examples. Masters of these tools sadly have their heads full of legacy hacks and trickery needed to get content to display properly. Thank goodness there has been some consolidation on the V8 engine because without it, the hacks between browsers had already become exponential.<p>Contrast this with algorithms, the middle-tier, and databases. These tools, while not perfect, are far better able to express developer intentions and therefore be maintained.<p>Sadly, the Web stack has largely become popular due to OS politics. JS&#x2F;HTML&#x2F;CSS is the only real loophole devs currently have to build cross-platform products, which everyone wants because the expectations from users today are so high (expected to run everywhere on any device). It is good that we at least have this direction to build upon, but it doesn&#x27;t mean that this is the ideal tech stack. There is alot of improvement to be had here.<p>For example, consider how much good VS Code and Typescript have brought to this space in recent years. The concepts of types, intellisense, async&#x2F;await, and other efficiencies are great examples of historically native benefits brought to the Web.<p>Good work here. Keep pressing on - I salute you. Please consider making any progress you have made here open for review and validation. Cheers!')