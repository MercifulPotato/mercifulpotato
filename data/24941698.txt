Item(by='notpygame', descendants=None, kids=[24944830], score=None, time=1604062468, title=None, item_type='comment', url=None, parent=24941371, text='A pygame volunteer here.<p>Wish lists are fun. True, integration is important. We should do more. Luckily some of yours already came true!<p>:)<p>For image sharing, there&#x27;s a surfarray, and sndarray modules for integration with numpy. pygame.image.frombuffer&#x2F;tobuffer to going to and from buffers. PIL(low), opencv, and other python image and audio libraries can be used pretty easily this way. There&#x27;s articles, books and videos on how to integrate with most other libraries. Since python 3.3 or so there&#x27;s been a much better buffer interface at the C and python API levels which many python libraries are using for integration. There&#x27;s currently a gap in typing around this, but there&#x27;s some progress.<p>If you don&#x27;t like the 11MB download for numpy, we have a builtin pixel array module that can do a lot of the same stuff for images. There&#x27;s also some built in Vector math objects (modeled closely on the GLSL ones).<p>The pixel array stuff is usually a hit in class settings because doing visual affects is very easy to write. As you say, computers are fast enough. Better (although more advanced) is probably the shadertoy website :)<p>Mu Editor, has built in support for pygame&#x2F;pygame zero. It even comes with a pygame+arduino example. There&#x27;s tutorials about for teaching it with microbits (and other little devices).<p>CircuitPython comes with some built in game libraries. This is probably better to use than pygame. It&#x27;s best place to look probably for python on micros if you&#x27;re into crafting games on very small devices. pygame comes preinstalled with raspberry pi, so that&#x27;s also an option considering some of them can be found for $5 (or for free if you go hunting around dusty drawers).<p>We have some Python Mode for Processing users. There&#x27;s a big community of video artists using pygame, and pygame comes built into some of the most popular video synths in recent years.<p>Python Mode for Processing does a lot of cool things right, and is definitely better than pygame for what it does. It would be great if some of the integration work done in this direction would continue. It&#x27;s one of the most compact and readable ways to go. pygame zero follows this style a little bit, but being able to reuse code and concepts from both communities is even better.')