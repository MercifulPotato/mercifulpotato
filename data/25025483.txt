Item(by='tsimionescu', descendants=None, kids=[25025625], score=None, time=1604840041, title=None, item_type='comment', url=None, parent=25024804, text='The terminal is exactly an example of an app-centric workflow and why it is easier to build and&#x2F;or easier to use than an API focused one. If you want to see a no-apps workflow, something like the Genera LISP OS was probably much closer[0].<p>People choose to use apps like ls, cat, less, echo, touch, find instead of using the FILE* object directly with readdir(), stat(), read(), write(), open(), creat() etc. All of the apps are designed to have human-readable output first, lots of options for controlling that output to make it as readable as possible etc. However, none of them exposes a rich model for its output that would make it possible to easily integrate it into more complex workflows. Instead, we rely on yet other apps, like sed, grep, xargs and essentially copy-pasting text between these apps (this is all that pipes really are, essentially).<p>This becomes even more obvious when you use stuff like gcc or gdb, which have extremely rich and potentially useful layers of representation that they refuse to expose at all, even as APIs - only text is allowed in the interaction.<p>Hell, the MS Office suite is a better example of a no-apps workflow, since each of the Office UIs has a deep understanding of the data produced by the others, and you can combine these in meaningful ways - much more so than terminal apps (for example, Word can show a portion of a spreadsheet without you having to guess at what contents it might have and how to parse it, like you would if you want to expose a portion of ls&#x27;s output to a file).<p>Interfacing code is hard, it requires well-thought-out APIs and much more work even with the best APIs. Interfacing apps with extremely minimalistic APIs (copy&#x2F;paste, share) is much easier for everyone.<p>[0] <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=o4-YnLpLgtk&amp;t=6m0s" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=o4-YnLpLgtk&amp;t=6m0s</a>')