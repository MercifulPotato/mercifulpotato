Item(by='genewitch', descendants=None, kids=[24683435, 24689903], score=None, time=1601856777, title=None, item_type='comment', url=None, parent=24682483, text='I&#x27;m unsure if the complaint about the timing attack makes sense in the uint64 version. I know that you&#x27;re supposed to use &quot;constant time&quot; algorithms for security, so i&#x27;d be interested to hear if my thinking on this is wrong. Does the uint3&#x2F;uint6 timing attack work with uint64?<p>I&#x27;ve &quot;greyed&quot; bits coming off of random radio waves from the atmosphere in order to test randomness; the drivers i was using for the particular radio didn&#x27;t allow  on-the-fly amplifier adjustments, so if there was, say, a lightning strike within 50 miles, the front-end would get overloaded and &quot;blank&quot; - send mostly zeros, even with incredibly fast AGC control. So entropy wasn&#x27;t guaranteed unless i could guarantee there wasn&#x27;t lightning within some predetermined distance of the receiver (as an aside, i have this capability now) - thus for long (96 hour) runs to gather entropy, i&#x27;d have to fiddle the output to ensure uniform distribution.<p>Now, with all that said, there was a side channel attack; if there was a lightning storm or other sort of high energy event near my receiver, an &quot;attacker&quot; could determine that the algorithm to ensure uniformity was contributing more to the bits than the atmospheric noise. Possibly.')