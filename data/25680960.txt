Item(by='chubot', descendants=None, kids=[25692337], score=None, time=1610074573, title=None, item_type='comment', url=None, parent=25680472, text='Hm I think we&#x27;re coming at this from different angles... the whole &quot;SOP&quot; terminology confuses me, though I guess you mean &quot;standard operating procedure&quot;.<p>I&#x27;m a programmer so when I hear &quot;document on how to update something&quot; I hear &quot;untested set of manual steps&quot;.  I don&#x27;t understand why it isn&#x27;t a shell script  instead ...<p>----<p>I actually don&#x27;t want to preserve an authoring experience forever.  I expect that my authoring experience will change [1].<p>What I want to preserve is the <i>data</i>.  Both the source data and the generated data.  I have one git repository for each.  And everything else is basically Unix tools that I can compile myself.<p>Ask me in 4 years about this stuff, or 10 years: <a href="http:&#x2F;&#x2F;www.oilshell.org&#x2F;site.html" rel="nofollow">http:&#x2F;&#x2F;www.oilshell.org&#x2F;site.html</a><p>I bet it&#x27;s all going to work, basically due to the &quot;Lindy Effect&quot;.  I can build everything from source even if people don&#x27;t maintain it.<p>I actually wouldn&#x27;t rely on Docker itself, I meant more a &quot;spec for a container&quot;, but Dockerfiles now have multiple implementations like OCI.<p>The point of the shell layer is to NOT rely directly on Github Actions APIs, even while using the service.  It&#x27;s indeed a problem that all these cloud services have weird SDKs and command line tools.<p>However when you look UNDERNEATH these cloud services, you get a KERNEL and a SHELL.  That is the &quot;timeless API&quot; I&#x27;m writing to.  I already did that with continuous builds, and it would be similarly easy to port my blog toolchain to the MULTIPLE clouds this way, so I don&#x27;t rely on one.  (It wouldn&#x27;t be easy for all problems, but it&#x27;s easy for building static content.)<p>I realize this is all outside the norm and 99% of writers aren&#x27;t going to use this toolchain.  But it goes very well with the Oil shell project.  Unix and document authoring are very closely related.  Historically the first use of Unix was to create patent documents at Bell Labs.<p>I don&#x27;t quite understand what you are getting at so I think you must have a much different use case.  If you have an example then that would help.  It seems like you might be talking more about a blog that lots of people are editing?<p>----<p>[1] Actually it JUST did after 4 years and at least a hundred posts.  I used vim for 4 years, and now I switched to the online editor StackEdit because it has realtime preview.  I wrote the last 2 blog posts in StackEdit and it worked great.<p>However the data remained exactly the same.  Unix is data-centric, not app-centric.  Apps are the things that rot.')