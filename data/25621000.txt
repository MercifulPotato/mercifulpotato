Item(by='AsyncAwait', descendants=None, kids=None, score=None, time=1609671041, title=None, item_type='comment', url=None, parent=25620383, text='&gt; I&#x27;ve never seen the inconsistencies,<p>I&#x27;ve seen plenty to convince me that having a full shell scripting language and not a very good one at that as your service definition language is a terrible idea.<p>&gt; No other service should hide the shortcomings of other services.<p>I don&#x27;t think you get it. It is not hiding the shortcomings of other services. It is implementing its own service because the other one was a pile of unmaintained crap. But I guess that kind of security risk is OK as long as it&#x27;s a separate repo? What a weird dogma.<p>&gt; That&#x27;s the point. If that task can be handed over to another daemon (like udev) for setting it up, why systemd assumes that setting it up is its job?<p>It does hand it over to udev, but someone needs to notify udev stuff is happening. systemd has easy access to that information so it does the job. Also, you do realize that the people who maintain udev are the same who maintain systemd right? Again, because it was a hard job and nobody else, including other init systems, were willing to pick up the slack.<p>&gt; what I tried to say there. I wanted to say that there&#x27;s no easy way to see whether a feature is managed by systemd or not<p>I understand that but imo that should be on the distro to communicate. On Arch for example, the wiki always gives a clear indication of whether a thing like DNS can and is managed by a systemd component or not.<p>A `systemctl component list --status=enabled` would perhaps be a nice addition, agreed.<p>&gt; I strongly oppose and criticize is the blind egg-throwing to other init systems, the overzealous protection of systemd and avoiding discussing its potential shortcomings and problems altogether.<p>It&#x27;s funny you say that because as a very early adopter of systemd I saw things up close and it was the exact opposite. People were literally threatening Lennart Poettering with violence for writing a (good imo) piece of free software. That he decided to stay on the scene despite that is honestly remarkable.<p>But as for other init systems, I don&#x27;t doubt there&#x27;s some good ones, sysV init wasn&#x27;t it, but the main problem is that all the others seem only interested in the init part and are happy to depend on rotten parts of the ecosystem. Unlike systemd, none of them were saying; &#x27;ok, consolekit is unmaiintained, let&#x27;s pick up the slack on session management&#x27; (maybe in a separate repo if you insist) or &#x27;oh, udev is struggling, let&#x27;s pick up the slack&#x27; - no they were like am going to do init and hope these other pieces don&#x27;t come crashing down like a pile of bricks.<p>Also, I&#x27;ve started using systemd-homed to make my setup portable across my machines. None of the supposed competitors of systemd offer that either.<p>I like to compare it with PulseAudio; people suggest to me all the time how OSS, ALSA etc. are &#x27;good enough&#x27; etc. but I have a fully FLOSS wireless audio house setup right now thanks to PulseAudio, none of the supposed &#x27;competitors&#x27; offer that, so they&#x27;re not competitors for me, (PipeWire eventually might by literally re implementing all of Pulse).')