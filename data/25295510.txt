Item(by='djk447', descendants=None, kids=None, score=None, time=1607031656, title=None, item_type='comment', url=None, parent=25292992, text='Indexes are built during the inserts for copies and for normal inserts, in general copies are faster because many people use single row inserts that need to instantiate executor nodes and other bits for every row. I think there used to be some other differences, but in general we&#x27;ve seen that multi-row inserts are around as fast as copies and I&#x27;m honestly not sure which one our benchmarking tool uses. (I&#x27;m at Timescale, btw). Aside from that, the MySQL vs Postgres comment above actually has to do with updates not with inserts and the main difference here is that PG stores rows in the heap whereas MySQL has primary keys that actually organize tables (and also things around copy-on-write MVCC model). So, in some ways, PG should actually be faster for raw inserts, because you don&#x27;t have to deal with as many page splits and other bits for the organization of the heap, things are just written there (and indexes are secondary). We limit the overhead of building indexes by making sure our chunks are &quot;right-sized&quot; so that you don&#x27;t end up swapping too much as you&#x27;re doing inserts into recent data.')