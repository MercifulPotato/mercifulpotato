Item(by='dkersten', descendants=None, kids=[25316240, 25318021, 25317580], score=None, time=1607185771, title=None, item_type='comment', url=None, parent=25314956, text='&gt; Long ago &quot;modern&quot; C++ crossed into a territory that I will never understand or use.<p>Do you know where the line is? C++11? Later versions?<p>I ask because I quite like a lot of the changes that C++11 brought to the language, I feel they make my code much simpler to understand and maintain, but I got very confused by post-11 C++ for a long time to the point where I said I&#x27;d never bother with C++17 or later (14 turned out not to be too scary once I actually sat down with it) because 17 and 20 added so much stuff that just looked beyond me. But I&#x27;ve since changed my mind and have started to experiment with C++20, after I sat down and read a few articles and watched a few cppcon videos on the changes. I don&#x27;t know <i>all</i> that these versions have to offer, but I do understand the main changes enough to get by and most of them do make the language better, in my opinion.<p>Overall, the language is a mess, simply because they keep adding to it and very little stuff gets deprecated, removed, changed or cleaned. That leaves a large and messy language, especially compared to more recent deliberately-designed languages, but it turned out I could understand &quot;most&quot; of the things, once I had someone explain them to me. A few times ;)<p>Having said that, it probably isn&#x27;t worth your time to &quot;modernise&quot; the C++ in your money-making codebase at this stage, if you&#x27;re comfortable with it how it is. You likely wouldn&#x27;t see a return in the effort it would take.')