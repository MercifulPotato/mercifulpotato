Item(by='dTal', descendants=None, kids=[25311175, 25310313], score=None, time=1607127090, title=None, item_type='comment', url=None, parent=25306737, text='Consider the the classic koan:<p><pre><code>  10 PRINT &quot;Retardo_88&quot;\n  20 GOTO 10\n</code></pre>\nTo fully grok this, the concepts you need are: the idea that you can instruct a computer to do things, the notion of source code as a list of such instructions which will normally be executed one at a time, in order, and - crucially - that the instructions can reference other instructions and that this is the fundamental leap that makes computers interesting. In other words, Turing Machines 101. It&#x27;s a <i>perfect</i> demonstration.<p>Now consider the simplest equivalent program in Python:<p><pre><code>  while(true):\n      print(&quot;Retardo_88&quot;)\n</code></pre>\nIn addition to all of the insights mentioned above, you need the concept of higher order control flow statements, the concept of nested execution, the concept of boolean literals, the concept of a function call... there are so many questions that are hard to answer. Why do I need parentheses? Why do I need the colon? What&#x27;s the deal with the indent? What gives with the weird grammar of &quot;while true&quot;? Etc...<p>It gets worse the moment you want to do anything nontrivial and have to wrestle with objects, methods, and dot-syntax. BASIC sends the message that computers are simple, easy to grok things that follow simple, logical rules; Python sends the message that they are a bottomless well of dizzying complexity.')