Item(by='westoncb', descendants=None, kids=[24693006], score=None, time=1601932539, title=None, item_type='comment', url=None, parent=24691476, text='I was working on a &#x27;visual debugger&#x27; that centered around a 3D display of data structures evolving in time[0], and learned some lessons from it.<p>I would say the key thing is to understand the specific properties that differ when adding another dimension.<p>The main thing you gain in terms of expressing information, or in terms of designing an interaction scheme, is another axis on which you can &#x27;analyze&#x27; your problem: this is a generalization of the basic idea you see with a 3D data plot vs 2D. This 3rd dimension is a new element of the &#x27;syntax&#x27; of your UI, which can be made to map to a specific concept in your program.<p>So then the question is: does the problem you&#x27;re trying to solve have a matching structure that would be clarified by having an additional axis to map its visual representation on to?<p>Additionally, the property that caught my attention initially was about using 3D space + human visual processing to define an information prioritization scheme: &#x27;depth&#x27; into a 3D scene is is a natural, ready-made system for indicating priority:<p>Objects nearer to the camera (less &#x27;depth&#x27;), occlude further objects. Further objects have their (projected) size reduced as a function of their depth, and are often darkened as well. All this adds up to a convenient&#x2F;flexible way of talking about priority (from the programmer&#x27;s perspective) and a natural way of reading priority (from the user&#x27;s perspective).<p>That&#x27;s the theory anyway: my experience with it was a mixed bag, and at least for my specific project, when I&#x27;ve thought about how I&#x27;d do things differently now I think I&#x27;d just stick with 2Dâ€”at least to start with.<p>There are a lot of more unsolved problems that show up when thinking about UI in 3D, possibly because the design space is larger, but certainly at least because it&#x27;s less explored. And the number of possible ways things can go wrong, or at least considerations needing to be made, from both programming and design standpoints, is also significantly larger in my experience.<p>[0] <a href="http:&#x2F;&#x2F;symbolflux.com&#x2F;projects&#x2F;avd" rel="nofollow">http:&#x2F;&#x2F;symbolflux.com&#x2F;projects&#x2F;avd</a>')