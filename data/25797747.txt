Item(by='TulliusCicero', descendants=None, kids=[25797869, 25798646], score=None, time=1610751836, title=None, item_type='comment', url=None, parent=25797642, text='&gt; With regards to variables, the best way to hack around this issue is to 1) always use `local` when declaring a variable and 2) set the `_G` metatable to never allow the creation of keys<p>Keep in mind, I&#x27;m talking about beginners here. Beginner kids, even (it&#x27;s a popular language for Roblox scripting!).<p>Are either of those things, things that will just come naturally to newbies? Are they definitely gonna know about them when they pick up the language in random text or video tutorials? Are they going to remember to use local as often as they can, and will they understand when it&#x27;s appropriate to use a global?<p>The answer to all of these is no, obviously. For someone like me with a CS degree and several years of professional experience, your suggestions are perfectly reasonable, but in the wide, wacky world of beginners hacking things together, the right way should be easy and obvious. So obvious, even a beginner will catch on.<p>&gt; Copying a table is generally unnecessary, if you never mutate the table to be cloned. Just set the __index property of a new table to a reference to the table to be cloned. Ta-da, you have inherited the previous table.<p>How is this more intuitive than just having a copy or clone function? You can find plenty of cloning functions on stackoverflow or wherever that people have written. Yes, there are workarounds, but why do you need a workaround for a pretty basic use case here? In python, you can just go &quot;dict2 = dict(dict1)&quot;, or &quot;dict2 = dict1.copy()&quot;, both of those are easy enough, and more importantly, they&#x27;re intuitive: want a copy? Call the copy function! Why does Lua have to make it weird?<p>&gt; This is one of those times where power users are given the advantage at the cost of the less experienced, and I share your implied concern in feeling the inconsistencies in who is favored by which language features.<p>Yes, it seems like the language design is a strange mix of &quot;really easy to get started for beginners&quot; and &quot;footguns that you probably need to be experienced to avoid&quot;.')