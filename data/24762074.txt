Item(by='fenomas', descendants=None, kids=None, score=None, time=1602560854, title=None, item_type='comment', url=None, parent=24759179, text='I gave a talk on procgen last year where one of my slides attempted to sum things up thusly:<p>&gt; In my experience good procgen is the creative application of boring algorithms. Your key weapons are imagination and iteration at the design stage - but the actual code tends to be simple, and fancier algos don&#x27;t make your content any better.<p>&gt; In contrast with ML, you live or die by how magical your data and algorithms are, but you have little direct control over the output so it&#x27;s not a very creative process. You tend to pull the levers and hope that what comes out will be suitable.<p>To me that difference is why ML tends not to work well for procgen problems. With creative tasks we tend to have top-down design constraints that we want to impose (e.g. a minecraft village needs to fulfill various requirements for the game engine to treat it as a village), and the task is to make content &quot;interesting&quot; while meeting those constraints. With procgen this is straightforward - you start with the constraints, and creatively iterate on the &quot;interesting&quot;. Whereas with ML you often get interesting for free, but if your output doesn&#x27;t fulfill this or that constraint, it&#x27;s not very obvious how to proceed.')