Item(by='FullyFunctional', descendants=None, kids=[25769222], score=None, time=1610572927, title=None, item_type='comment', url=None, parent=25765943, text='Contrary to much common misunderstanding, sure, no real problem.<p>The semantics of each instruction is consume the two top stack elements and replace that with the results.  You handle this by having an stack rename stack of physical registers (with additional complication for handling under- and overflows), that is assuming the current stack is<p><pre><code>  pr3 pr4 pr5\n\n</code></pre>\nand the first free register is pr56<p>Then an &quot;+&quot; instruction is interpreted as &quot;add pr56, pr4, pr5&quot; and pr56 is consumed and pr4 and pr5 marked to be freed when this commits.<p>Because stack machines inherently introduce a lot of tight dependencies you will need to use dynamic scheduling (OoOE) to go super-scalar, but it&#x27;s not a problem.<p>Upsides are incredible instruction density.  Downside: slightly harder to do good code generation, but not really.')