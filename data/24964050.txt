Item(by='doonesbury', descendants=None, kids=None, score=None, time=1604279811, title=None, item_type='comment', url=None, parent=24963860, text='I want to better motivate my question on traces by quoting from a paper I enjoyed reading:<p><a href="https:&#x2F;&#x2F;homes.cs.washington.edu&#x2F;~ztatlock&#x2F;pubs&#x2F;verdi-wilcox-pldi15.pdf" rel="nofollow">https:&#x2F;&#x2F;homes.cs.washington.edu&#x2F;~ztatlock&#x2F;pubs&#x2F;verdi-wilcox-...</a><p>which gives this example for a distributed lock:<p>mutex(τ ) :=\nτ = τ1 ++ (n1, Grant) ++ τ2 ++ (n2, Grant) ++ τ3\n→ (n1, Unlock) ∈ τ2<p>What this safety requirement means is that if the lock is granted in some pending message to host n2 (say delivered or in queue to be delivered) then it must have been proceeded by an unlock message and not on the same host getting the grant --- in fact on the last node who was granted the lock. Here n1, n2 designate hostIds.<p>What I like about this approach, is that Verdi seems to make it quite easy to model and specify in terms of nodes, processes on nodes, and messages between nodes whether on a reliable or non-reliable network. And safety conditions seem to naturally flow, in part, from how messages are ordered when sent. Of course, in an unreliable network which Verdi can model too, they may come out of order requiring more work to de-dup and&#x2F;or ensure exactly-once-delivery.')