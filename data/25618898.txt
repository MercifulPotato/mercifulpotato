Item(by='theptip', descendants=None, kids=[25619007, 25619155], score=None, time=1609642319, title=None, item_type='comment', url=None, parent=25617083, text='One tactic I have used with moderate success is to explicitly carve out time for fixing tech debt. A few things we’ve tried:<p>1. Pledge to schedule 20% (pick your percentage) of the sprint as tech debt payback rather than stories. The problem here is that this stuff tends to drift to the bottom of the sprint and then slip if anything else is delayed. This is where most teams start as you can start at an arbitrarily small percentage and scale up gradually.<p>2. Fixit Friday; the middle Friday of a sprint is for fixing tech debt, not working on sprint tasks. Engineers are encouraged to advocate for tasks they think would speed us up, and we also have done themed pushes where e.g. the whole team chips in to migrate the codebase to a new linter. One issue here is that it’s hard to make progress on larger initiatives, which leads to:<p>3. Fixit Sprint. At the beginning of the quarter there is often a bit of downtime as the leadership digests the last quarter and plans the new one. This can be a good time to take a sprint off product work, and really dig into some substantial re-tooling or refactoring.<p>Depending on how much resource you’re allocating to tech debt, you can mix and match these, I’d say 1 &amp; 2 are probably mutually exclusive, but you could combine either with 3, or just do 3 instead.<p>I think it’s important to be clear about when you are taking on tech debt, and when you have cleared the hurdle and are paying it back, and clear rules like these help to communicate that message.')