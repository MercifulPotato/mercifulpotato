Item(by='barrkel', descendants=None, kids=[25800472], score=None, time=1610776790, title=None, item_type='comment', url=None, parent=25799407, text='NoSQL didn&#x27;t support joins (it&#x27;s much easier to get predictable performance from key lookups), was trivial to shard (because no joins), and supported the common B2C scaling pattern of small amounts of data on millions of users.<p>With SQL it&#x27;s easy to write a badly performing query which does lots of inefficient joins in the DB. NoSQL doesn&#x27;t give you as many tools to offload your computation so it lives in your app instead, where it&#x27;s easier to scale out (i.e. throw money at the problem).<p>I&#x27;m not getting into schemas vs schemaless (e.g. the cost of migrations when you have billions of rows) or denormalization (e.g. stuffing joined entites into both ends of an association, ugh), etc., there are other pros and cons. But IMO the lack of compute offload is a positive feature of most NoSQL.')