Item(by='valenterry', descendants=None, kids=[25581877], score=None, time=1609337343, title=None, item_type='comment', url=None, parent=25581360, text='&gt; Isn&#x27;t this the point I was making?<p>I don&#x27;t think so - let me try to make it more clear, hold on.<p>&gt; You need support in the language to do this. If you&#x27;re writing a library routine from scratch as Future&lt;... with the compiler knowing nothing about how to handle it specially then you aren&#x27;t getting a future as they were originally envisioned and you&#x27;re missing out.<p>You seem to assume that the programming language needs to know of the existence of Futures to help. But that is not the case and probably the reason for the misunderstanding.<p>It is sufficient that the language supports generics&#x2F;type-parameters as well as a lightweight syntax (such as in the example I gave) and optimally higher kinded types or a similar mechanism.<p>If that is given, the language can be totally agnostic of Futures or async programming in general and it is easily possible to define a Future type as a library-type and use it in the way I described. Scala is a good example of such a language.')