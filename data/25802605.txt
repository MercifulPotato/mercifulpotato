Item(by='barrkel', descendants=None, kids=None, score=None, time=1610809401, title=None, item_type='comment', url=None, parent=25801739, text='Think about bisection of ordering state space for every insert.<p>If 64 bits represent an ordering, and you split it in two for each insert - necessarily, to permit future insertion on either side of the new insert - then at least one side has no more than 32 bits left to store its ordering information for all future inserts on its side.<p>The problem is that in order to avoid renumbering (which redistributes ordering state), the bisection needs to pre-allocate state space for future ordering information. The best it can do (without having more information on insert order) is to split the state space perfectly evenly.<p>In the article, there&#x27;s a big blue Update box which mentions a sequence of L&#x2F;R path flips which make the fraction into a Fibonacci sequence, where you can go to 46 in sequence before exceeding a 32-bit integer. You&#x27;ll observe than 46 is less than 64.')