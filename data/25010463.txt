Item(by='galaxyLogic', descendants=None, kids=None, score=None, time=1604691645, title=None, item_type='comment', url=None, parent=25008587, text='&quot;Technical Debt&quot; is a problem whatever we call it. It is a worse problem than real financial debt because financial debt is easy to measure in dollars whereas technical debt is not. There is no reasonable way for measuring technical debt I&#x27;ve seen.<p>The amount of technical debt is difficult if not impossible to quantify yet it is intuitively clear it is an issue. You add code to your code-base making it do more and at the same time making it less optimal in how the code is organized. At the same time you know you perhaps should spend time and effort to re-organize it, but how much? How often. Maybe you have a rule of thumb but who&#x27;s to say that rule is &quot;correct&quot;.<p>Trying to lessen the amount of technical debt happens by what is called &quot;refactoring&quot;. While it is clear that at some point we better do some of that, the unanswered question, and the reason why &quot;technical debt&quot; is a problem, is how much and how often should we refactor. I haven&#x27;t seen any clear guidelines for that. Are there?')