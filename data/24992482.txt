Item(by='alerighi', descendants=None, kids=[24992572, 24992530], score=None, time=1604519815, title=None, item_type='comment', url=None, parent=24992262, text='If you don&#x27;t do embedded programming (where you shouldn&#x27;t do dynamic memory allocation anyway, being that with or without a GC) memory is often not a constraint at all. And in a lot of situation it cost you less to increase the RAM (if you can) than optimizing the code.<p>&gt; when you cross the line, good luck<p>And if you never cross the line? You wasted thousands of dollars for developing something in Rust that you could have written in Python in 1&#x2F;4 of the time and be fine.<p>To me the job of the programmer is not to reason about memory. The job of the programmer is to reason about algorithms, data structures, and thus a language that abstracts the memory management is better if you can afford it. It has a cost, sure like it has a cost using C instead of assembly.')