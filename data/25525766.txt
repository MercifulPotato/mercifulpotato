Item(by='ernst_klim', descendants=None, kids=[25526909], score=None, time=1608795864, title=None, item_type='comment', url=None, parent=25522937, text='&gt; An async function and a normal function are semantically the same<p>But they are not, AsyncIO and BlockingIO are different side effects, thus you have different <i>types</i> of computation, that&#x27;s exactly what I&#x27;m talking about. In languages with monads or algebraic effects these would have different types.<p>You don&#x27;t say that Lists and Arrays are semantically the same, despite being similar sequential collections, they still have separate types for a reason. Though it&#x27;s good to be able to abstract over them.<p>And in languages with monads we can parametrize over various effect types by using tagless final approach, which allows us to write computations which could be interpreted in contexts of various effects (in this case, Async and Sync), just as we parametrize containers with types of content (in [1] there is an example of how we can parametrize computation over various async implementations), but still these are different effects.<p>[1] <a href="https:&#x2F;&#x2F;kubuszok.com&#x2F;2019&#x2F;io-monad-which-why-and-how&#x2F;#typed-tagless-final-interpreter" rel="nofollow">https:&#x2F;&#x2F;kubuszok.com&#x2F;2019&#x2F;io-monad-which-why-and-how&#x2F;#typed-...</a>')