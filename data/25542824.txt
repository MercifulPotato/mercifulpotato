Item(by='rleigh', descendants=None, kids=None, score=None, time=1608982860, title=None, item_type='comment', url=None, parent=25540355, text='This is just my own personal take on things; I&#x27;d definitely recommend reading up on the differences between Waterfall, Agile and the V-model (and Spiral model).  Note that you&#x27;ll see it said that the V-model is based upon Waterfall, which is somewhat true, but it&#x27;s not necessarily incompatible with Agile.  You can combine the two and go all the way down and back up the &quot;V&quot; in sprints or &quot;product increments&quot;, but you do need the resources to do all the revalidation and reverification at all levels each time, and this can be costly (this is effectively what the Spiral model is).<p>In terms of deciding if meticulous up-front design is necessary (again my own take), it depends upon the consequences of failure in the requirements, specifications, design and&#x2F;or implementation.  A random webapp doesn&#x27;t really have much in the way of consequences other than a bit of annoyance and inconvenience.  A safety-critical system can physically harm one or multiple people.  Examples: car braking systems, insulin pumps, medical diagnostics, medical instruments, elevator safety controls, avionics etc.  It also depends upon how feasible it is to upgrade in the field.  A webapp can be updated and reloaded trivially.  An embedded application in a hardware device is not trivial to upgrade, especially when it&#x27;s safety-critical and has to be revalidated for the specific hardware revision.<p>For filesystems the safety aspect will relate to maintaining the integrity of the data you have entrusted to its care.  Computer software and operating systems can have all sorts of silly bugs, but filesystem data integrity is one place where safety is sacrosanct.  We set a high bar in our expectation for filesystems, not unreasonably, and after suffering from multiple dataloss incidents with Btrfs, it&#x27;s clear their work did not meet our expectations.  We&#x27;re not even going into the performance problems here, just the data integrity aspects.<p>I can&#x27;t say anything about the tools I use in my company.  There are specialist proprietary tools available to help with some of the requirements and specifications management.  I will say this: the tools themselves aren&#x27;t really that important, they are just aids for convenience.  The regulatory bodies don&#x27;t care what tools you use.  The important part is the <i>process</i>, of having detailed review at every level before proceeding to the next, and the same again when it comes to validation and verification activities.<p>Often open source projects limit themselves to some level of unit testing and integration testing, which is fine.  But the coverage and quality of that testing may leave some room for improvement.  It&#x27;s clear that Btrfs didn&#x27;t really test the failure and recovery codepaths properly during its development.  Where was the individual unit testing and integration test case coverage for each failure scenario?  Where the V-model goes above and beyond this is in the testing of the basic requirements and high-level concepts themselves.  You&#x27;ve got to check that the fundamental premises the software implementation is based upon are sound and consistent.')