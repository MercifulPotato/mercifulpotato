Item(by='KMag', descendants=None, kids=None, score=None, time=1608965930, title=None, item_type='comment', url=None, parent=25539037, text='The original Jonesforth is very cool, and I&#x27;m happy it&#x27;s being ported to RISC-V.  However, the in-code documentation[0] clearly has some errors due to blind find-replace:<p><pre><code>  &gt; On the right hand side I&#x27;ve written the actual RISC-V machine code.\n</code></pre>\n... followed by a bunch of 5-byte x86 instructions (E8 followed by 4-byte addresses), and &#x27;&quot;E8&quot; is the x86 machine code to &quot;CALL&quot; a function&#x27;.<p><pre><code>  &gt; On an RISC-V machine it turns out that we can write this interpreter rather easily, in just two assembly instructions which turn into just 3 bytes of machine code.\n</code></pre>\nUncompressed RISC-V instructions are 4 bytes.  Compressed instructions are 2 bytes.  Without some completely unanticipated extension that goes against the current design, there will be no way to make a 3-byte instruction sequence for RISC-V.  From what I can tell, the actual RISC-V implementation is 4 instructions,<p><pre><code>  .macro NEXT\n    ld a0, 0(s1)\n    addi s1, s1, 8\n    ld t0, 0(a0)\n    jalr t0\n .endm\n</code></pre>\ntaking 16 bytes on machines that don&#x27;t support the compressed instructions extension.  If all 4 can be compressed, that&#x27;s still 8 bytes.<p>[0]<a href="https:&#x2F;&#x2F;github.com&#x2F;jjyr&#x2F;jonesforth_riscv&#x2F;blob&#x2F;master&#x2F;jonesforth.S" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jjyr&#x2F;jonesforth_riscv&#x2F;blob&#x2F;master&#x2F;jonesfo...</a>')