Item(by='bborud', descendants=None, kids=None, score=None, time=1610292888, title=None, item_type='comment', url=None, parent=25703830, text='Designing good DSLs is hard. If you recommend that people construct DSLs to solve their problems they will.  Most of the time these DSLs will not be good and they will present either barriers or bottlenecks.<p>The reason DSLs often become a problem is that people often do not think about the cost of maturing and maintaining them.<p>I&#x27;ve seen this happen quite a few times.  Someone gets the idea that &quot;we need a DSL for this&quot;.  It is implemented, but the resources and time to do a proper job isn&#x27;t there so the documentation, tooling and roadmap is severely lacking or entirely absent.<p>More requirements are uncovered and development becomes hampered by what the DSL can express or how it is implemented.  If you are really unlucky, the original architect leaves or loses interest.  I&#x27;ve seen entire products grind to a halt for 6 months because the only person with deep understanding of a DSL on which everything hinges has left the company.<p>DSLs, like any programming language in general, can be useful.  But they are expensive pieces of software to write and maintain and not the &quot;easy solution&quot; that people tend to be misled into thinking that they are.  And if expense is spared in their making, it has to be paid for later in troubles encountered further down the road.')