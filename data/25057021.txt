Item(by='saidinesh5', descendants=None, kids=None, score=None, time=1605088386, title=None, item_type='comment', url=None, parent=25049469, text='I&#x27;ve worked on a couple of d-pad only uis using QtQuick,\nIncluding for a set top box.<p>Gstreamer&#x27;s qmlglsink works quite well with zero copy video playback. So CPU usage sits at 5-10% for a nice UI overlaid on top of a 1080p video stream on an embedded system. There are other third-party qt wrappers for gstreamer, but we didn&#x27;t feel the need for it. Some were outdated too.<p><a href="https:&#x2F;&#x2F;github.com&#x2F;GStreamer&#x2F;gst-plugins-good&#x2F;tree&#x2F;master&#x2F;tests&#x2F;examples&#x2F;qt" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;GStreamer&#x2F;gst-plugins-good&#x2F;tree&#x2F;master&#x2F;te...</a><p>Those examples show how to do basic video playback using gstreamer.<p>The key navigation really isn&#x27;t that difficult either: <a href="https:&#x2F;&#x2F;doc.qt.io&#x2F;qt-5&#x2F;qtquick-input-focus.html" rel="nofollow">https:&#x2F;&#x2F;doc.qt.io&#x2F;qt-5&#x2F;qtquick-input-focus.html</a><p>Just build your UI with a PageStack of Pages consisting of ListViews and GridViews, and that takes care of 90% of your navigation issues without you having to do anything.<p>For eg.<p>* filesystem explorer: ListView<p>* playback controls: GridView<p>Video Player Page: filesystem explorer + playback controls + video item and the page determines which item should get keyboard focus, based on certain actions&#x2F;conditions.<p>So far, the main pain point was licensing. Some of the very useful qt quick components (like layouts for one) are licensed under LGPL v3, so you have to be careful if you&#x27;re including then in your system - because then you&#x27;d have to provide a way for the user to swap out qt libraries or have to go for the commercial version.<p>Another pain point was CI. We had to manually build our own container with the Qt version we needed. The situation for CI improved recently i think.')