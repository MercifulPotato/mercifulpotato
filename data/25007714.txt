Item(by='VLM', descendants=None, kids=[25008578], score=None, time=1604672257, title=None, item_type='comment', url=None, parent=25006615, text='Note that the contents of &#x2F;etc&#x2F;ssh&#x2F;sshd_config are USUALLY compatible across operating systems.<p>So you can use ansible to install a common and secure and standardized sshd config across, say, legacy linux and new freebsd servers.<p>With the tiny little problem that filesystem paths will be different for linux and freebsd.<p>On modern freebsd, from memory, this sshd config line works:<p>Subsystem       sftp    &#x2F;usr&#x2F;libexec&#x2F;sftp-server<p>I forget the path on legacy linux.<p>Anyway the simplest and most secure way is just to disable sftp across all systems and just use ssh and scp.<p>The solution to this problem is likely not to be shipping multiple inevitably slightly incompatible sshd configs, but I&#x27;ll probably end up shipping exactly and precisely one sshd_config with the path on all operating systems being &#x2F;usr&#x2F;local&#x2F;libexec&#x2F;sftp-server or something like that, and then ansible rules to symlink freebsd and linux to the &quot;standard&quot; path.<p>Or I&#x27;ll go all in on freebsd and get rid of the last legacy linux servers.<p>Or I&#x27;ll reduce security by using ansible with multiple sshd_config files.<p>Or recode everything that used scp to use rsync or other alternatives (LOL as if thats happening)<p>At any rate as usual with unix there&#x27;s multiple ways to handle things, which is good.  Its not like windows or systemd based operating systems.')