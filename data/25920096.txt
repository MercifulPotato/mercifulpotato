Item(by='geocar', descendants=None, kids=[25921494], score=None, time=1611689521, title=None, item_type='comment', url=None, parent=25917029, text='&gt; one of the first steps is going to create the mental abstraction that allows you to, precisaly, understand the code.<p>Precisely.<p>Now a short program is &quot;short enough&quot; that you can convince yourself it is correct; That is to say, I&#x27;m sure you can imagine writing &quot;hello world&quot; without making a mistake, and that there is some threshold of program length where your confidence in error-free programming will be lost. For every seeing-programmer I have ever met, and I suspect strongly all seeing-programmers, that length is measured in &quot;source-code pixels&quot;. Not lines, or characters, but literal field of view. Smaller screen? More bugs.<p>Where you are forced to deal with your application in terms of the mental abstraction, rather than what the code actually says it does, it is simply because that code is off-screen, and that mental abstraction is a sieve: If you had any true confidence in it, you would not believe that program length correlates with bugs.<p>&gt; scrolling is only going to be an issue for the first couple of reads.<p>I&#x27;ve worked on codebases large enough that they&#x27;ve taken a few years to read fully, and codebases changing so quickly that there&#x27;s no point to learn everything. Sometimes you can read a program, and sometimes you can&#x27;t, but when you can&#x27;t, the damage that scrolling does seems infinitely worse.<p>&gt; Is this going to increase &quot;code reuse&quot; by any significant amount?<p>Yes, and usually by a factor of a thousand or more.')