Item(by='CyberDildonics', descendants=None, kids=None, score=None, time=1605967860, title=None, item_type='comment', url=None, parent=25169204, text='I think you are building on misunderstanding with assumptions that aren&#x27;t backed up by anything.<p>&gt; non-parallelizable part<p>Which part is that? Synchronization does not have to be expensive.  The original paper had a theoretical &#x27;serial&#x27; part of a program, but synchronization is different in that it can be very fast and doesn&#x27;t tie up other resources.  For a web server the synchronization is in IO, which is being handled by queues. It doesn&#x27;t stall cores, processes or threads can put their data in a queue and another core can handle it.<p>&gt;  You can either speed up the parallel code 2x (let&#x27;s be realistic here and stop this 100x nonsense)<p>Far from it.  If python is translated to C++ directly you would already have a massive speedup (I would guess at least 20x, maybe more). If memory allocations are minimized you get another huge (7x) speedup on top of that.  If larger chunks are dealt with at one time you get another huge speedup. I think 100x would be common.<p>Amdahl&#x27;s Law is really about diminishing returns when there are significant places that need to be serial. Any emulator can be a good example. There aren&#x27;t nearly as many scenarios that have to be serial as most people think.')