Item(by='gozzoo', descendants=None, kids=None, score=None, time=1603792613, title=None, item_type='comment', url=None, parent=24895395, text='This article starts very interesting but the rest sounds like infomercial for Zing by Azul Systems.<p>Both issues related to low latency metioned here (JIT and GC) can be solved with very simple and common methods with the JVM provided by Oracle.<p>We had similar issues in my old company, where we implemented a graph database in Java. It was very slow and somtimes freezed for alomost a minute (512 GB heap).<p>Here are the strategies we used for solving these issues.<p>- performance - we built warm up logic in our app, which called the most time sensative parts on startup. It delays the start up process by 10 sec, but after that the application is very fast.<p>- GC - we pre-alocated big chunks of memory outside of the heap and put there the &#x27;heavy&#x27; objects - those which require most effort from the GC. We also optimized the code so that all other allocations are in the stack (escape analysis). This requires some discipline, but eventually we ended up in situation where there was nothing left for the GC to do.<p>I&#x27;m not sure if it&#x27;s worth paying hunderds tousands $ in license fees for something that can be achieved with good programming practices and discipline, which most companies need anyways.')