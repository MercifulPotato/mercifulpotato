Item(by='jiggawatts', descendants=None, kids=[25756506], score=None, time=1610497455, title=None, item_type='comment', url=None, parent=25754796, text='I&#x27;ve been asked to look into ZTN just today by a large government customer.<p>The problem is that network security is a tiny, <i>tiny</i> subset of security in general. You can throw SAML, mTLS, or IPsec at your connections all you like, it would have done exactly <i>nothing</i> to stop the type of attack that hit SolarWinds and their customers.<p>Let me reiterate this: ZTN would have achieved zero protection.<p>The problem in general is that there are conflicting interests between what the developers want to do to reduce their work effort and operational application security. Even large vendors are hopelessly bad at producing secure and securable software. The documented and recommended easy path is <i>not the secure one</i>. The products are incredibly hard to secure from the perspective of some poor ops person.<p>Some random examples:<p>- Most vendors document their firewall ports, which is great! But not their <i>direction</i> or what <i>roles</i> they apply to.<p>- Very few vendors provide machine-readable firewall definitions that can be imported into firewall systems automatically.<p>- Vendors like AWS and Azure that do publish JSON lists of their endpoint addresses and ports use unique, non-standard formats, so very little effort is saved for the end-users.<p>- Public cloud vendors especially end up &quot;blending&quot; multiple customers into pools of <i>shared</i> IP addresses for all of their PaaS or SaaS services. This is a disaster for security, because it makes it virtually impossible to put a WAF or a WAP in front of certain services.<p>- mTLS support is a shitshow. Manually uploaded certificates that <i>expire</i> and break everything annually is the norm. CRLs and OCSP are almost  never checked. Many products support only a single certificate, and will even crash if talking to products that do support multiple certificates and are in the middle of a rollover. Alerts and visibility of these certificates is poor. Secure certificate storage (i.e.: in a TPM) works better on <i>laptops</i> for securing WiFi than it does for <i>servers</i> processing billions of dollars in transactions.<p>- The rise of Docker, NuGet, Cargo, and NPM are a security disaster. Incident after incident and warning after warning have been ignored. Why? Because these technologies are <i>soooo</i> very convenient for developers, and they&#x27;re the ones making the decisions to use these package management platforms. The ops people are then left with the mess. Have you ever tried patching a vulnerable version of .NET Core in a Docker container from a vendor that doesn&#x27;t even exist any more? Good luck with that.<p>- Similarly, the plug &amp; play nature of the public cloud with the extensions, plugins, agents, and marketplaces isn&#x27;t a disaster waiting to happen. It did happen. That&#x27;s what this SolarWinds thing was all about.<p>- Pervasive telemetry is largely indistinguishable from data ex-filtration. Not only does it pollute the logs, but vendors are deliberately obfuscating the traffic to work around customers blocking it. Did you know that Microsoft used &quot;eu.vortex-win.data.microsft.com&quot;? Did you spot the deliberate typo? It took me a while to realise why telemetry traffic was still getting through despite firewall blocks on &quot;*.microsoft.com&quot;!<p>- Back doors in products for &quot;support&quot; are another security disaster waiting to happen. Several SAN array vendors for example include these as standard now.<p>I could go on and on.<p>I&#x27;m watching some of our larger customers struggle with security, and to be honest it feels hopeless. These orgs have 10K+ endpoints, 2K+ servers, running tens of thousands of distinct pieces of software from at least a few hundred, maybe a few thousand orgs.<p>For every step forward in security, there&#x27;s two steps back for someone else&#x27;s convenience.')