Item(by='zbentley', descendants=None, kids=[24710886], score=None, time=1602091750, title=None, item_type='comment', url=None, parent=24710428, text='&gt; If you forget to wait on completion of the future that is on you<p>Absolutely. However, data loss and edge cases emerge where process crashes and abrupt exits are concerned. With RabbitMQ, even with pub confirms disabled, the odds are that all of your publishes (sans, perhaps, the one you were in the middle of at the instant of exit) will make it to the broker. With Kafka, every message not yet flushed from the buffer will be dropped.<p>I get that this is expected&#x2F;documented, and I get why it exists (batchwise operations allow way higher net throughput into Kafka). However, I&#x27;ve encountered many groups of engineers from many companies who were surprised by and unable to effectively work around this behavior. Workarounds include performance sacrifices (flushing per-publish); complex signal handling semantics to coordinate flushes (complicated further by errors that occur if a signal arrives <i>during</i> flush); and atexit(3) flush hooks (terrifying, given the way some higher level programming languages&#x27; garbage collection interacts with atexit).<p>At the end of the day, it matters how friendly a tool is when it&#x27;s held by a novice. While there are many good reasons to use Kafka, that&#x27;s not one of them.')