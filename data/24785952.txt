Item(by='gregdoesit', descendants=None, kids=None, score=None, time=1602747930, title=None, item_type='comment', url=None, parent=24781606, text='Okay, so I hunted this bug down and it was in my code, an interesting one. Sharing it here for amusement.<p>The endpoint returning the string of &quot;Looks like you&#x27;re based in Netherlands&quot; is a nodej.js script that has this defined in the top:<p>&gt; const MESSAGE = &quot;Hey  - it looks like you&#x27;re based in $countryName.&quot;.<p>Sometime later in the code, in a function I manipulate this string in the module&#x27;s export function:<p>&gt;module.exports.getDiscountData = function(countyName) {\n    MESSAGE.replace(&quot;$countryName&quot;, countryName)\n}<p>And for each country, I have keys &#x2F;values listed, like:\n&quot;GB&quot;: MESSAGE,\n&quot;NL&quot;: MESSAGE,\n&quot;HU&quot;: MESSAGE_2<p>The problem was that once the first request replaced the country name, MESSAGE was mutated, and it now had the value &quot;Hey  - it looks like you&#x27;re based in Netherlands.&quot; instead of &quot;Hey  - it looks like you&#x27;re based in $countryName.&quot;<p>I had no idea this would happen. And that a &quot;const&quot; in Javascript is a mutable thing. I fixed it by deep copying the string of the original message.<p>The super interesting part is that I did not notice this problem, as when I was testing, I did low frequency testing. As I am using Lambda, I probably got a new container created, where MESSAGE was re-initialized. But with the HN traffic, the containers stayed alive longer, making this mutated string issue a problem.')