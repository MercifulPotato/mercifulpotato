Item(by='BuildTheRobots', descendants=None, kids=[24828153, 24834524, 24828236, 24827925, 24827945], score=None, time=1603124618, title=None, item_type='comment', url=None, parent=24827784, text='&gt; CryptoAPI, for its warts, is actually beautifully engineered, in that Microsoft has had the ability to add arbitrary constraints and properties to certificates from the very first release (via CERT_PROP_IDs). You don’t really see these in the UI; you only find out about them in WinCrypt.h, or via debugger stepping. However, it means that even if the UI is showing “trusted for TLS”, Microsoft may have disabled trust for TLS via the extended properties, which their APIs respect, and which are delivered through authroots.cab<p>I mean no disrespect, but if you need to look through header files or use step-through debugging to actually find out what constraints apply to a certificate, especially when the ones actually reported for the certificate don&#x27;t actually apply in reality then &quot;beautifully engineered&quot; doesn&#x27;t seem like the right adjective to use.<p>edit: I don&#x27;t see this as a documentation issue; when the only interface you provide the user says one thing but stepping through the code reveals that that&#x27;s entirely not true for certain items in certain circumstances, then having a better ReadMe is not the issue here.')