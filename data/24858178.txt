Item(by='bumby', descendants=None, kids=[24860289], score=None, time=1603375719, title=None, item_type='comment', url=None, parent=24858035, text='I would tend to agree and would classify those reasons you stated as the &quot;right technical risk&quot; category.\nAlthough I don&#x27;t think it&#x27;s quite as bad as anything not being explicitly allowed is deemed illegal. It&#x27;s not quite that strict, project managers can modernize just within certain limits (e.g., you can&#x27;t just host on any cloud, but must be on a government approved cloud service).<p>However, I have worked in some of those environments where programmers refused to change, admittedly due to their unwillingness to learn despite their customer wanting the change. Even at organizations with large risk-adverse datasets, there&#x27;s a desire to change but an inability to execute. The VA for example, has struggled for decades to modernize their system despite sinking millions and millions of dollars into it.<p>&gt;<i>If it&#x27;s running now, it&#x27;ll most likely continue to run for the next 20 years of software and hardware updates.</i><p>This is fine if the system is expected to remain static. Problems often arise when hardware or software are expected to change and still run the same legacy code.')