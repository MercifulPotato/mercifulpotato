Item(by='jjk166', descendants=None, kids=[25459667], score=None, time=1608226627, title=None, item_type='comment', url=None, parent=25452857, text='In the first you say that ambiguity will not harm interpretation, in the second you say that it will cause confusion. I interpreted these statements to be contradictory because my compiler evaluates &quot;harm interpretation&quot; == &quot;cause confusion&quot; to be true.<p>I don&#x27;t know if by &quot;we&#x27;ve conversing&quot; you meant we are or we have been conversing. Those two possibilities are close enough to one another that substituting the wrong one will probably not cause a catastrophic failure, but perhaps you meant to use the pluperfect to imply that the conversation was done in some &quot;drop the mic&quot; moment that was completely lost on me.<p>Telephone is not a game of ambiguity, but of noisy communication. If you start with cat you might get bat at the end, but you wouldn&#x27;t get feline. You could easily win at telephone by speaking the same meaningless statement repeatedly and you can lose at telephone with a grammatically correct statement which is nevertheless phonetically similar to some other statement. &quot;Blue blue blue blue&quot; is going to make it, &quot;blue crew flew you&quot; probably won&#x27;t. A fault in transmission is fundamentally different from a syntax error, more analogous to a letter getting lost in the mail or a mistyped letter on the keyboard.<p>There is a fundamental difference between getting your point across and getting a point across that&#x27;s similar enough to accomplish your goals.<p>Consider the following statements:<p>&quot;I want you to feed my cat<p>&quot;I want my cat fed&quot;<p>&quot;I want feed cat&quot;<p>&quot;You food cat&quot;<p>&quot;Cat food&quot;<p>&quot;Weird Dog Rice&quot;<p>&quot;seltsamer Hundereis&quot;<p>I am certain you know what I mean in the first sentence. I would be amazed if you could deduce the meaning of the last without further clarification. Between these extremes there is some point where your compiler&#x27;s heuristics fail, and likely long before that you start losing nuance and details. Natural language error tolerance has its limits.<p>Now consider the following javascript expressions:<p>for (let cat in catstofeed) {feedCat(cat)}<p>var i=1; while (i) { try { feedCat(catstofeed[i-1]); i = i+1; } catch (e) { i = 0;};<p>var i=0; while (i) { try { feedCat(catstofeed[i]); i = i+1; } catch (e) { i = 0;};<p>while (i) { try { feedCat(catstofeed[i]); i = i+1; } catch (e) { i = 0;};<p>If you substituted the second for the first, you&#x27;d accomplish what you were setting out to do. The third would lead to a wildly different result but is still valid. The final case is ambiguous, a smart compiler could guess the programmer intended for statement 2&#x27;s functionality, but asking for clarification is the safer option.<p>You are right that trying to have a human conversation with only a few dozen words and a very limited sentence structure would be very difficult - a vast vocabulary and complicated grammar is a hard requirement for a natural language, and ambiguity is thus unavoidable. Dealing with such a high level of ambiguity is thus also a requirement of a natural language compiler, and such a compiler is beyond the capability of any existing silicon computer.  But just because a language has more words and more valid expressions does not fundamentally change what it is, any more than adding more processing power to a computer eventually makes it stop being a computer.<p>If you wanted to make a programming language with 50000 keywords and an extremely forgiving syntax, you could do so. It would be extremely impractical for programming a current computer, which is only capable of a few distinct operations and thus has no need for nuance, but it would still work, and damn wouldn&#x27;t it be great at self documenting.')