Item(by='barumi', descendants=None, kids=None, score=None, time=1604565526, title=None, item_type='comment', url=None, parent=24993889, text='&gt; If you&#x27;re not using AWS you&#x27;re not fully leveraging your software team, because that means you&#x27;ve got people spending time building and supporting these sorts of internal systems.<p>This is simply not true at all, and flies in the face of real world usage.<p>The only concrete and objective selling point of AWS is it&#x27;s global coverage of data centers, and the infrastructure they have in place aimed at delivering reliable global-scale web services.<p>The problem is that the companies who actually operate at such a scale and with such tight operational requirements can be counted with your fingers. That count then drops down to a fraction once you start to do a cost&#x2F;benefit analysis.<p>The rest of the world is quite honestly engaged in cargo cult software development.<p>And no, doing AWS is not simpler nor more efficient. You might launch an EC2 instance with a couple of clicks, but to navigate a service designed with global scale and multiple levels of redundancy across the same service and with tight integration and dependency across half a dozen AWS offers which may or may not be redundant or competing... No, that is not simple or allows for any type of time efficiency.<p>Hell, with AWS you do not learn how to manage or operate Infrastructure. With AWS you learn the AWS dashboard,and learn pavlov reactions to which button you press if you hear an alarm. You never fully grasp the impact or the reaction of pressing a button, and you have absolutely no idea what impact that click will have on your monthly bill.<p>In contrast, if you need to run microservices chatting through a message broker then your system on OVH or Hetzner or any other barebones system will be comprised of a bunch of nodes where one of them runs RabbitMQ and everyone else points to the RabbitMQ node. You can get everything running from scratch on a cluster managed by Docker Swarm in about 15 to 20 minutes. In the end you have a far simpler service running for a fraction of the cost and ina far more manageable environment.<p>AWS is resume-driven development fueled by cargo cult development.')