Item(by='patterns', descendants=None, kids=[25230061, 25229756], score=None, time=1606490582, title=None, item_type='comment', url=None, parent=25228079, text='I wonder whether the migration to Chez Scheme will improve the performance of Dr. Racket which consumes a lot of memory and feels very sluggish.<p>I have been experimenting with Racket for quite a while and I appreciate the effort that went into making the language extensible. That being said, I wish that the community would have embraced &quot;object-oriented&quot; techniques for building the VM - Ian Piumarta&#x27;s COLA (Combined Object-Lambda Architecture) comes to mind [1]. I think this would have saved them a lot of performance troubles (but this is mere speculation) and would make the system far more flexible and pleasant to use.<p>While it&#x27;s comforting to have a very powerful macro system at your fingertips to change the semantics of the language when needed, many of the macros in the base language and libraries could be eliminated with a more convenient <i>default</i> notation for closures and message-passing (to objects simulating control structures like in Smalltalk).<p>Racket has one of the best module systems I have worked with but modules cannot be (easily) parameterized. Research on systems such as Self and more recently Newspeak [2] gives ample of demonstration of the benefits (conceptual integrity, security) of having modules as objects.<p>What Racket also lacks is a good meta-object system with highly reflective capabilities (of say a CLOS or Smalltalk system). This makes it difficult to build tooling such as inspectors or browsers.<p>I hope that in the future these issues will be addressed.<p>[1] <a href="https:&#x2F;&#x2F;www.piumarta.com&#x2F;papers&#x2F;colas-whitepaper.pdf" rel="nofollow">https:&#x2F;&#x2F;www.piumarta.com&#x2F;papers&#x2F;colas-whitepaper.pdf</a><p>[2] <a href="https:&#x2F;&#x2F;newspeaklanguage.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;newspeaklanguage.org&#x2F;</a>')