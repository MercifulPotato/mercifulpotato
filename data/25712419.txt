Item(by='skohan', descendants=None, kids=None, score=None, time=1610268169, title=None, item_type='comment', url=None, parent=25711878, text='&gt; There are no reasons why one should not produce a good design in a any language.<p>Certain languages give you better tools than others in terms of reaching a good design.  Go for instance puts you in a bit of a &quot;jail&quot; in terms of complexity which prevents you from going too far off the rails.  Rust uses a strict compiler to categorically prevent whole classes of issues.  So yes in some sense bad code is a &quot;people problem&quot; but the right tools can go a long way to mitigate it.<p>&gt; Rust may be faster to read, but you can hit some very rough patch and serious head scratchers.<p>I think this is where Rust&#x27;s type system can often be a double-edged sword.  I have run into more than a few libraries which try to make things &quot;simple&quot; to use by leveraging traits solve problems in a somewhat magical way, but in my experience this often makes it very difficult to trace what&#x27;s actually going on.  I find that Rust code is not all that self documenting, and it relies heavily on documentation in order to be understandable.  And quite a few libraries are strong on per-item, per-function documentation but there&#x27;s a gap in terms of high-level docs explaining the intended use of the library.')