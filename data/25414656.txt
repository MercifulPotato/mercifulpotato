Item(by='brundolf', descendants=None, kids=[25414887, 25414776, 25426242, 25415351, 25415008, 25423150, 25415791], score=None, time=1607933717, title=None, item_type='comment', url=None, parent=25414534, text='The problem is one that I&#x27;ve witnessed, but uh:<p>&gt; Good Java should resemble C<p>The recommendations are a mixture of things that are... questionable, and things that really apply to basically any big refactor regardless of paradigm, language, or problem.<p>But getting back to the issue at hand: what I see from the Java&#x2F;C# world is a mentality of &quot;abstract unless there&#x27;s a reason not to&quot;, instead of &quot;don&#x27;t abstract unless there&#x27;s a reason to&quot;.<p>Charitably, this approach might be compared to the micro services pattern: if you&#x27;re shipping your org chart, and your org chart is thousands of people across four continents, then maybe eagerly building out those fire-walls of decoupling can be useful. Stereotypically, at least, this seems to line up with the kinds of companies we tend to think of as using these languages.<p>But where it becomes a big problem is when it&#x27;s used in a one, two, five-person project, and all those walls just become massive speedbumps, not only slowing you down but making it hard to drive straight.')