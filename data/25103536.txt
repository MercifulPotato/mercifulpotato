Item(by='rkangel', descendants=None, kids=None, score=None, time=1605465657, title=None, item_type='comment', url=None, parent=25103319, text='The terminology is a bit ambiguous here with the word &#x27;process&#x27; so I&#x27;m not 100% sure precisely what you&#x27;re asking. The BEAM (Elixir VM) uses the the term &#x27;process&#x27; to describe its green threads&#x2F;fibres. The BEAM runs as one OS process, with a thread per core of your machine and schedules each of the application green threads onto one of those threads. BEAM processes are cheap and quick to create and come and go regularly. The BEAM itself is very stable and will stay up permanently (potentially even through SW upgrade if you want). Whenever I say process below I mean a BEAM process.<p>When you use Phoenix, the Web framework creates a process to handle the specific request. By default everything you do happens in that process (give or take some database stuff). If you make a programming error that process will &#x27;crash&#x27; (again a BEAM term that is more like an exception) and the user will get an error. No other processes will be affected, regardless of whether they are to do with other requests or anything else.<p>If you want a work queue, you would create a separate set of BEAM processes (or maybe just one), probably at startup. In your request handling you would send a message to that work queue process asking it to do things. Your request can block (not affecting any other requests) waiting for it if necessary, or it can return so you can get the result later. If the Web request times out or crashes or whatever, that will kill the handler process, but will leave the work queue process alone.<p>One other note - under the hood it&#x27;s all message passing between processes, but to the programmer each process is probably just a Gen Server (an abstraction) and the message send and reply is just a function call. But normal Phoenix stuff doesn&#x27;t even have that because the Web server does the &#x27;process machinery&#x27; for handling requests.')