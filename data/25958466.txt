Item(by='gukoff', descendants=None, kids=[25961813, 25958925, 25959523, 25958786, 25959169], score=None, time=1611935274, title=None, item_type='comment', url=None, parent=25956502, text='With PyO3, I built the library to parse datetimes 10x faster than `datetime.strptime` in just a few lines of code: <a href="https:&#x2F;&#x2F;github.com&#x2F;gukoff&#x2F;dtparse" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gukoff&#x2F;dtparse</a><p>It just calls the Rust&#x27;s chrono library that does the parsing and wraps the result in a Python object. You can do it for any Rust library, it&#x27;s very, very easy!<p>The only slightly complicated part is the distribution. You need to use <a href="https:&#x2F;&#x2F;github.com&#x2F;PyO3&#x2F;maturin" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;PyO3&#x2F;maturin</a> or <a href="https:&#x2F;&#x2F;github.com&#x2F;PyO3&#x2F;setuptools-rust" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;PyO3&#x2F;setuptools-rust</a>, and of course, you need to have Rust installed on the wheel-building machine.<p>Feel free to use this repo as a reference if you want to build a similar thing. The code is commented, and there&#x27;s a working GitHub action that builds the wheels for all platforms and uploads them to PyPi: <a href="https:&#x2F;&#x2F;github.com&#x2F;gukoff&#x2F;dtparse&#x2F;tree&#x2F;master&#x2F;.github&#x2F;workflows" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gukoff&#x2F;dtparse&#x2F;tree&#x2F;master&#x2F;.github&#x2F;workfl...</a>')