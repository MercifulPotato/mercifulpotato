Item(by='nulptr', descendants=None, kids=[24749722, 24750175], score=None, time=1602453779, title=None, item_type='comment', url=None, parent=24747242, text='I think I found a way to do it with ~8GB. As you mentioned you only need 2^30 tries due to birthday paradox.<p>But, instead of using a hash table to store (seed, hash) pairs, we can just use a list of only hashes. To generate the next hash we use current hash. i.e. next_hash = hash(&quot;example.com&#x2F;&quot; + string(int64(cur_hash))). So now, we just store 60-bit hash values which takes up 2^30 * 60 bits = 8gigs.<p>The only other problem is detecting if a hash already exists, which I think can be done using a space efficient probabilistic hashset like a bloom filter (and when the bloom filter says the hash already exists, we do a linear scan to find where it exists and we have a possible collision).')