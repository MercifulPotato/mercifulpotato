Item(by='estebank', descendants=None, kids=[24841245], score=None, time=1603218104, title=None, item_type='comment', url=None, parent=24840015, text='I do not have any non-Rust resources off the top of my head, but I can give you some quickly looked up resources and enough phrases to search for that should help you in this endeavor.<p>ADTs are Abstract Data Types[1][2][3]:<p>&gt; ADT is implementation independent. For example, it only describes what a data type List consists (data) and what are the operations it can perform, but it has no information about how the List is actually implemented.<p>In the context of Rust it means that the traits, structs and enums are ADTs, while the impls are Data Structures.<p>Having structs and enums be the way they are in Rust (simplistic and with little extensibility beyond implementing traits) is that pattern matching[4][5] and destructuring is cheap and built in. Pattern matching becomes specially useful when combined with sum types&#x2F;tagged unions&#x2F;enums[6][7][8]. On the other corner you have Scala which lets you implement specific interfaces to allow structuring and destructuring for arbitrary types, but that has the same problems as overriding constructors in C++: the performance implications of pattern matching is impl dependent and hidden at the point of calling.<p>[1]: <a href="https:&#x2F;&#x2F;softwareengineering.stackexchange.com&#x2F;questions&#x2F;148747&#x2F;abstract-data-type-and-data-structure" rel="nofollow">https:&#x2F;&#x2F;softwareengineering.stackexchange.com&#x2F;questions&#x2F;1487...</a><p>[2]: <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Abstract_data_type" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Abstract_data_type</a><p>[3]: <a href="https:&#x2F;&#x2F;abrickshort.wordpress.com&#x2F;2005&#x2F;03&#x2F;06&#x2F;abstract-data-types-vs-data-structures&#x2F;" rel="nofollow">https:&#x2F;&#x2F;abrickshort.wordpress.com&#x2F;2005&#x2F;03&#x2F;06&#x2F;abstract-data-t...</a><p>[4]: <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Pattern_matching" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Pattern_matching</a><p>[5]: <a href="https:&#x2F;&#x2F;docs.scala-lang.org&#x2F;tour&#x2F;pattern-matching.html" rel="nofollow">https:&#x2F;&#x2F;docs.scala-lang.org&#x2F;tour&#x2F;pattern-matching.html</a><p>[6]: <a href="https:&#x2F;&#x2F;www.schoolofhaskell.com&#x2F;school&#x2F;to-infinity-and-beyond&#x2F;pick-of-the-week&#x2F;sum-types" rel="nofollow">https:&#x2F;&#x2F;www.schoolofhaskell.com&#x2F;school&#x2F;to-infinity-and-beyon...</a><p>[7]: <a href="https:&#x2F;&#x2F;chadaustin.me&#x2F;2015&#x2F;07&#x2F;sum-types&#x2F;" rel="nofollow">https:&#x2F;&#x2F;chadaustin.me&#x2F;2015&#x2F;07&#x2F;sum-types&#x2F;</a><p>[8]: <a href="https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;2502354&#x2F;what-is-pattern-matching-in-functional-languages" rel="nofollow">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;2502354&#x2F;what-is-pattern-...</a>')