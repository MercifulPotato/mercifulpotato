Item(by='Jugurtha', descendants=None, kids=None, score=None, time=1607556578, title=None, item_type='comment', url=None, parent=25365383, text='This reply will reproduce:<p>- A reply I wrote to a thread here at <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25025253" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25025253</a><p>- A Twitter thread about a few things useful for selling software to companies, discovering patterns, abstracting into a product <a href="https:&#x2F;&#x2F;twitter.com&#x2F;jugurthahadjar&#x2F;status&#x2F;1310668293305499653" rel="nofollow">https:&#x2F;&#x2F;twitter.com&#x2F;jugurthahadjar&#x2F;status&#x2F;131066829330549965...</a><p>- Added link: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25288605" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25288605</a><p>&lt;&lt;&lt;<p>Hi, here are a few things I wrote in here that could be useful. They are designed to improve remembering to do things, doing things, learn from doing things, make sure everyone knows what they should be doing, remember why we&#x27;re&#x2F;if we ought to be doing things in the first place, and doing the right things:<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=19924100" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=19924100</a> (understanding codebases, etc.)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22873103" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22873103</a> (making the most out of meetings, leveraging your presence)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22827841" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22827841</a> (product development)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=20356222" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=20356222</a> (giving a damn)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25008223" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25008223</a> (If I disappear, what will happen)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24972611" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24972611</a> (about consulting and clients, but you can abstract that as &quot;stakeholders&quot;, and understanding the problem your &quot;client&quot;, who can be your manager, has.)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24209518" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24209518</a> (on taking notes. When you&#x27;re told something, or receive a remark, make sure to make a note and learn from it whether it&#x27;s a mistake, or a colleague showing you something useful, or a task you must accomplish.. don&#x27;t be told things twice or worse. Be on the ball and reliable).<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24503365" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24503365</a> (product, architecture, and impact on the team)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22860716" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22860716</a> (onboarding new hires to a codebase, what if it were you, improve code)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22710623" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22710623</a> (being efficient learning from video, hacks. Subsequent reply: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22723586" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22723586</a>)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21598632" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21598632</a> (communication with the team, and subsequent reply: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21614372" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21614372</a>)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21427886" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21427886</a> (template for taking minutes of meetings to dispatch to the team. Notes are in GitHub&#x2F;GitLab so the team can access them, especially if they haven&#x27;t attended).<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24177646" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24177646</a> (communication, alignment)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21808439" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21808439</a> (useful things for the team and product that add leverage)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=20323660" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=20323660</a> (more meeting notes. Reply to a person who had trouble talking in corporate meetings)<p>- <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22715971" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22715971</a> (management involvement as a spectrum)<p>&gt;&gt;&gt;<p>Twitter thread:<p>0. Form:<p>0.0. It pays to provide services through a company. Companies write large checks to companies without blinking; not so large for individuals.<p>1. Contracts:<p>1.0. Get a lawyer to prepare contracts for collaborations. Someone at some point might disagree or have trouble remembering what they have agreed to pay you, make sure to have a mnemonic device in the form of a clear contract.<p>1.1. Companies have typical contracts for collaboration: don&#x27;t sign anything without legal counsel.<p>1.2. Retain intellectual property to amortize engineering and sell what you make to others.<p>1.3. Companies might ask that you do not sell to competitors: define them and contain geographic zone and duration. Get paid for the opportunity cost.<p>1.4. Split project into tranches for which you get paid. This can help cash-flow and reduce risk, especially in the beginning.<p>2. Presentation:<p>2.0. Your company solves problems and being open minded about these problems is useful; so it&#x27;s not much about finding problems for your solutions, but more like finding solutions to clients&#x27; problems.<p>2.0.0 After enough problems you built solutions for, patterns emerge and you can abstract a solution that serves several use cases. See &quot;Abstraction&quot; section.<p>2.1. General presentation with broad strokes of your capabilities, including previous work with other clients<p>2.2. Conversation with the prospect on their worries in a given space<p>2.3. Conversation with the prospect on their worries in a given space<p>2.4. Extract problems from that conversation and send a list of N problems to solve&#x2F;ideas to explore.<p>2.5. The client finds one problem urgent&#x2F;highest priority&#x2F;highest value<p>2.6. You get together and talk about &quot;desirability, fasiblity, viability&quot;.<p>2.7. Once you agree on what to do, prove the concept.<p>2.7.0. e.g: organizations give us data and ask us to predict something, say customer churn or subway car malfunction. We return predictions, they validate the predictions, and we can then start the project because they have proof we actually can predict what they want us to.<p>3. Execution:<p>3.0. Your opinion on what is valuable for the client does not matter. It doesn&#x27;t have to be valuable to you, only to the client. A client who gets excited by a functionality that took one hour to implement because it solves a real problem is a learning experience.<p>3.1. Go above and beyond. Some sectors&#x2F;clients are hard to get in, but once you&#x27;re in, you&#x27;re in.<p>3.2. Listening and assuming the client is smart goes a long, long, long way.<p>3.3. Send meeting notes to the client. It clears ambiguities during&#x2F;after the project.<p>3.4. Press to get the client&#x27;s domain experts&#x27; collaboration. They will actually use what you&#x27;re building. Get them at the table.<p>3.5. Some of the most valuable insights are gleaned after a meeting and not necessarily with your &quot;counterpart&quot;.<p>Don&#x27;t build the wrong thing.<p>4. Abstract:<p>4.0. When you solve many problems, some patterns emerge. You built custom products for your clients, but you can abstract functionality and build tooling to scale your services, and enable others to do the same.<p>4.0.0. e.g: we we built machine learning products for enterprise clients. After many projects, we built iko.ai, our own machine learning platform to &quot;Get Data Products Released&quot;.<p>4.1. One advantage of this approach is to explore the space while being profitable. Some problems exist not for lack of a nice front-end or lack of knowledge of the target audience. Coming at them from a purely &quot;webdev&quot;&#x2F;&quot;devops&quot; mindset can bring bad surprises.<p>All the best,')