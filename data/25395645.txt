Item(by='rektide', descendants=None, kids=None, score=None, time=1607748416, title=None, item_type='comment', url=None, parent=25377434, text='there&#x27;s basically no other options for running your own cloud &amp; there&#x27;s no particular major weak points for Kubernetes that other containerizing automation engines don&#x27;t also have.<p>people think they&#x27;re being smart by telling you to check whether such and such fits your needs. usually it&#x27;s not bad advice. but the deck is pretty stacked here. nothing else has shown itself to be as flexible, as extensible, as consistent. well demonstrated but it&#x27;s capability at handling many different add-ons (controllers, operators). rarely is cloud architecture do readily deployable to other non-core concerns, especially via the core tools &amp; constructs.<p>if you want to go march off in to tech that does less, that will only do a little bit, that less people will be familiar with, that has less community, sure. spend a couple hours justifying to yourself why you are not going to use the really amazing all encompassing tech that&#x27;s quickly supplanted everything else. pick some other combination of technologies which you will assemble, make your own stack, yeah, you&#x27;re an independent thinker, you don&#x27;t need convention or all this extra stuff! it&#x27;s just gonna slow you down. go for it.<p>Kubernetes is not easy. but I find arguing against it to be difficult. there have been tools upon tools upon tools for so long. but little out there has brought the different concerns together, found overarching paradigms to create a basic, trusted quality of life that Kubernetes has clarified. again, it&#x27;s not easy, but learning it ought to keep paying forward again &amp; again, as you pick up new interests, want new services. even if those are Amazon services, ACK now will let you build Kubernetes deployment units that include those AWS services. the paradigm works.')