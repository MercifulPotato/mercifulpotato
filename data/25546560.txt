Item(by='graycat', descendants=None, kids=None, score=None, time=1609017918, title=None, item_type='comment', url=None, parent=25542487, text='How much?  Depends.  In some contexts essentially nothing.  In other contexts up to and including some of the most advanced known so far with advances wanted.<p>First, Military<p>During the Cold War, around DC a large fraction of the interest in programming was for some of the math for the work of the Cold War.<p>Then I was programming at the David Taylor Model Basin in numerical fluid flow, that is, solution of the Navier-Stokes equations.  Some of the work involved an early computer algebra package Formac; I used it for local series solutions to the equations.<p>Later there was work with the fast Fourier transform (FFT):  A guy had wired up a hardware box for the algorithm.  I showed him a version of the FFT that used the same <i>signal flow graph</i> at each algorithm <i>stage</i>.  His jaw hit the floor:  That version of the FFT could have saved him a big fraction of all the circuitry in his box.<p>Later I was in a software house bidding on a software project from a Navy lab.  In part the lab wanted to be able to analyze and simulate ocean waves.  They wanted to regard the waves as a second order (covariance) stationary stochastic process.  For the analysis, calculate the power spectrum of data collected at sea on ocean waves.  Then for the simulation, generate sample paths of the stochastic process with that power spectrum.  So, I dug into<p>Blackman and Tukey, <i>The Measurement of Power Spectra</i>,<p>saw the statistical basics, and quickly wrote some illustrative software that did the work.  One of the lessons was, to get an accurate power spectrum takes, roughly, some number of <i>cycles</i> of data at the frequencies of interest so that at low frequencies, i.e., for ocean waves, need possibly a lot of data, hours, where in radio engineering can need just seconds.  I showed the results of my software, and our company got <i>sole source</i> on the software development project!<p>Second, Academic<p>At one point, I was consulting in programming, data analysis, and algorithms at Georgetown U. and teaching courses in computer science.  One prof had programmed some polynomial curve fitting and was getting bad numerical accuracy.  There are connections with the notorious Hilbert matrix.  I programmed for him a version based on constructing polynomials orthogonal over the given input data; that approach had much better numerical accuracy.<p>Third, Commercial<p>E.g., GE was running a computer time sharing service, and there I was the main GE HQ guy for math, numerical analysis and statistics.  So, it was statistical hypothesis testing, classic regression analysis, analysis of variance, factor analysis, polynomial curve fitting, some non-linear curve fitting, random number generation, sorting algorithms, all of standard numerical linear algebra, interval arithmetic (for guaranteed numerical accuracy), digital filtering, the fast Fourier transform, solution of ordinary differential equations, and more.<p>Later I was programming at FedEx.  A first little bit of math, hard for the other FedEx people, was how to calculate great circle distances.  A simple solution is to use the law of cosines for spherical triangles.  The software I wrote to schedule the fleet used that solution.<p>Later FedEx wanted some revenue projections.  We knew (a) our current revenue and (b) the revenue at the planned full service.  So, the <i>projections</i> were a version of an interpolation between those two.  So, how was the interpolation to go?  I argued that the growth would be from <i>word of mouth</i> advertising, that is, <i>viral</i> growth and that growth would be directly proportional to (i) the number of current customers talking about the service and (ii) the number of target customers to be hearing about the service.  This led to the first order, linear, ordinary differential equation initial value problem<p>d&#x2F;dt y(t) =<p>y&#x27;(t) = k y(t) ( b - y(t) )<p>where t is time (in days), y(t) is the revenue (dollars) a time t, b is the planned capacity of the service, k is the constant of proportionality, and y(0) the current revenue.  There is a simple closed form solution. We picked a value for k that gave a reasonable graph, and that was our projections.<p>Uh, with more details, each of those two FedEx projects saved the company once.<p>It may be that currently in the commercial world there is interest in principal components analysis and various cases of curve fitting, linear and non-linear.<p>Fourth, Startups<p>Currently I have two startup projects going:  In some contrast with<p>Sam Altman, <i>How to Start a Startup</i><p>at<p><a href="https:&#x2F;&#x2F;startupclass.samaltman.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;startupclass.samaltman.com&#x2F;</a><p>key to both is some relatively advanced, original math I derived. The math is the crucial key to being able to deliver the service and is the <i>secret sauce</i>, &quot;unfair advantage&quot;, technological barrier to entry, difficult to equal.<p>Broadly, the power of current computing is a wide open invitation to use the computing to do the data manipulations for some math that can be powerful for some real problems.  Then that computing needs programming so that it can help if the programmer knows the math.<p>Net, in some contexts it can help if a programmer knows some math.')