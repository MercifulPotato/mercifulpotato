Item(by='kartickv', descendants=None, kids=None, score=None, time=1605491827, title=None, item_type='comment', url=None, parent=25104978, text='Author here:<p>&gt; 1. You can&#x27;t trust the front end. Backends must be written assuming that every call from the front end is malicious.<p>This is already taken care of in the proposal, by permitting clients to access only data they own.<p>&gt; 2. There will be multiple front ends. If all your business logic is in the front end, you&#x27;ll have to duplicate it into all of them. Where it will rapidly get out of synch and you&#x27;ll have different behaviours on different clients.<p>No, because a) not every startup starts on multiple platforms b) you can always put common behavior into a piece that&#x27;s reused. This can be a library linked in to multiple frontends, or a backend API. The post says your backend should be as thin AS POSSIBLE. It doesn&#x27;t say you shouldn&#x27;t have a backend at all costs, even if that means duplicating code.<p>&gt; Forcing your UI to use the same entities as your database.<p>Nothing prevents you from mapping the entities to different ones for your frontend, in cases where you need that.<p>&gt; The advice in the article strikes me as dangerously sensible-sounding while being mostly wrong.<p>I don&#x27;t even think you understood the advice in the first place, as I can see from your misconceptions above.')