Item(by='shermanmccoy', descendants=None, kids=[24660403, 24660292, 24659675, 24659660], score=None, time=1601619631, title=None, item_type='comment', url=None, parent=24648363, text='So mobx is basically global state, and an efficient change tracking algo that decides which parts of the tree need to be re-rendered.<p>I&#x27;ve found using React context for state, and judicious usage of useMemo has been enough for me to be able to drop mobx or its kin, even on larger sized projects.<p>Libraries like mobx and redux implicitly promote a massive singleton state object. I think web applications are easier to maintain if we make every effort to minimise global state. If some component way down on the left hand side of the tree needs to get something to a component at say the top RHS of the tree, I will consider refactoring, rather than add another property to MassiveStateObject. Why? Because when you come back to look at MassiveStateObject in two years the <i>implicit</i> coupling between the two components above will not be clear.')