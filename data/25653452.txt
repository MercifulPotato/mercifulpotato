Item(by='tottenhm', descendants=None, kids=None, score=None, time=1609894146, title=None, item_type='comment', url=None, parent=25651797, text='Right, sprinkling #if&#x27;s across a dozen downstream codebases sucks.<p>Consider an analogy to shell-scripting -- there are different shells (&quot;bash&quot;, &quot;dash&quot;, &quot;zsh&quot;) which have substantial overlap (insofar as they largely support traditional POSIX). Someone writing a script&#x2F;program can target a specific flavor (&quot;#!&#x2F;usr&#x2F;bin&#x2F;env bash&quot;) and get more features, or they can write conservative code and let downstream policy determine the shell (&quot;#!&#x2F;bin&#x2F;sh&quot;). General-purpose distros (like Debian&#x2F;Redhat) don&#x27;t seem to have a problem with supporting them side-by-side.<p>I&#x27;m more than a little rusty on the mechanics of dependency-management in C... but shouldn&#x27;t it allow some analogous arrangement where an app either (a) signals a requirement for a specific implementation or (b) signals ambivalence&#x2F;deference (and limits itself to common APIs).<p>(This, of course, only makes sense if the developers of LibreSSL&#x2F;OpenSSL and of the distros believe that it&#x27;s better to coexist+compete than to consolidate. The tenor of the LWN article seems to convey a XOR mentality, but if both projects have independently healthy teams, then... maybe they prefer friendly coopetition...)')