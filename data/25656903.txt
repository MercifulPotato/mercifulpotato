Item(by='pulp_user', descendants=None, kids=None, score=None, time=1609934123, title=None, item_type='comment', url=None, parent=25626955, text='(OP here) The main issues I had with them had nothing to do with immediate vs. retained mode, but simply with the unnecessary constraints the big GUI frameworks put on you.<p>Usually the GUI framwork wants to own the project. I need to build an application IN Qt or IN C# with WPF. Thats just unnecessary. There is no reason why these libraries can&#x27;t just provide a header with some functions that I can call, and thats it. The notion that I have to use C# for WPF seems completely ridiculous to me. Or that I don&#x27;t get to use my own build system (Qt) or chose how I want my control flow to happen and so on. I want the GUI framework to be a library to my application, no the other way around.<p>I hate all of these build shenanigans. I had a C++ application, that I built with a .bat file. I was not gonna port that to C# or have some bullshit wrapper around C#, or port the whole thing to Qt, or switch my build system. That WPF and Qt required this of me is just unnecessary, and I was super annoyed that everybody thinks that is just ok and not a big deal. Stuff like this makes modern programming a slog and kills my productivity and morale.<p>I don&#x27;t know about embedded Qt, but after seing that standard dev Qt download is 40 GB, I already knew this is not going to work because 99% of that is going to be stuff I don&#x27;t need or want, and (as it always goes with these things) it is going to cause a lot of friction, because, of course, I will still have to interact with those things.<p>So, yeah, basically I just couldn&#x27;t find a small, simple, non-intrusive, no arbitrary constraints GUI library that looked halfway decent.')