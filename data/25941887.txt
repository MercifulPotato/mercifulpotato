Item(by='1337shadow', descendants=None, kids=[25943771, 25943571], score=None, time=1611842808, title=None, item_type='comment', url=None, parent=25939541, text='&gt; Providing even close to the same uptime and snappy response times with a self-hosted service is a challenge, and it would take someone time and energy to volunteer that work – time and energy we now instead can spend of developing the project instead.<p>Actually, running gitlab on a ubuntu server is a no brainer, upgrading is as simple as running apt upgrade -y every couple of weeks or something (gitlab&#x27;s packages run their chef recipes under the hood), uptime will most certainly be on-par with github, and probably even better which is our case.<p>Time to clone, fetch, push, will be much faster, it&#x27;s common to find dedicated servers with at least 100Mbps of dedicated bandwidth. CI will be much faster too because dedicated, you will have no wait time, so you easily get back the little time that you have spent running apt upgrade.<p>&gt; we would lose the “network effect”<p>You can still have github mirrors, gitlab supports it fine, it&#x27;s what we do, also, gitlab supports auth via github, gmail and whatever, so you don&#x27;t have to require a new username&#x2F;password setup to use your instance.<p>&gt; We would also lose the easy integration with cool services like the many different CI and code analyzer jobs we run.<p>If you want CI beyond docker, ie. on windows and macos, which I suppose would be the case for most major projects, then I believe self hosting will be a bit harder. However, for docker based CI then gitlab ci runner is extremely easy.<p>For code analyzers it&#x27;s lagging a bit behind github I believe but you know, we were already using those before they became available as github services: just add a linter and a static analyzer such as for security or to compute mccabe indexes in CI jobs it still works well. For coverage you can just generate HTML and copy it in a public artifact that gitlab pages will serve, same for documentation.<p>So for me, these arguments against self hosting seem a bit weak, there is one that would seem stronger but is not mentioned: someone would actually have to pay for the server. My conclusion is that GitHub&#x27;s best feature is that you don&#x27;t have to pay for anything, which I can understand would overweight the fact that it&#x27;s sub-optimal on every other aspect for a lot of OSS hackers.<p>Nice article though, even though I enjoy the benefits of running open source services on dedicated servers because I get my time back everyday I interact with the said service, I would definitely not go as far as &quot;github is the devil&quot; or something, it&#x27;s just not my favorite solution, by far, but it&#x27;s still pretty cool to have amongst the many choices for code hosting!')