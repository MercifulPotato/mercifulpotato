Item(by='munificent', descendants=None, kids=None, score=None, time=1607450023, title=None, item_type='comment', url=None, parent=25341624, text='You could define operations on nullable types to allow this in Dart, like:<p><pre><code>    extension NullableNumExtensions on num? {\n      num? operator +(num? other) {\n        if (this != null &amp;&amp; other != null) return this + other;\n        return null;\n      }\n    }\n\n    main() {\n      num? i, j;\n      print(i + j);\n    }\n</code></pre>\nFor method calls, we have a null-safe method call syntax that automatically lifts the operation to give you a nullable result:<p><pre><code>    int? i;\n    var b = i?.isEven; &#x2F;&#x2F; b has type null?\n</code></pre>\nWe could have made all operations implicitly do this lifting, but our experience is that this isn&#x27;t what users want. They want to know as early in their code when an operation on a potentially-absent value is attempted and reconcile right there what behavior they want.')