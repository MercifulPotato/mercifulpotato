Item(by='codesections', descendants=None, kids=None, score=None, time=1610662637, title=None, item_type='comment', url=None, parent=25776374, text='&gt; Raku seems to be stuck in a &quot;we&#x27;ll optimize that later&quot; dead-end … Raku has a long way to go.<p>I agree that Raku still has a long way to go in terms of performance – it&#x27;s not nearly as fast as it has the potential to be.<p>That said, I <i>strongly</i> disagree that Raku&#x27;s performance is stuck.  I&#x27;ve only been using Raku for about a year, but even in that time I&#x27;ve seen a noticeable improvement.  Over a longer period, Raku has gotten dramatically faster – around a 10× improvement from the 1.0 Christmas release, depending on how you measure.  For details, check out this 2019 talk where one of the lead Raku developers discusses performance gains&#x2F;plans. ([0] video; [1] slides)<p>There&#x27;s definitely still work to do (especially with regexes and grammars, as you mention).  But the language has made tremendous progress, and is now in the same basic range as Python&#x2F;Ruby&#x2F;Perl.<p>[0]: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QNeu0wK92NE" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QNeu0wK92NE</a>\n[1]: <a href="https:&#x2F;&#x2F;www.jnthn.net&#x2F;papers&#x2F;2019-perlcon-performance.pdf" rel="nofollow">https:&#x2F;&#x2F;www.jnthn.net&#x2F;papers&#x2F;2019-perlcon-performance.pdf</a>')