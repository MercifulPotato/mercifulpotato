Item(by='piokoch', descendants=None, kids=None, score=None, time=1603267035, title=None, item_type='comment', url=None, parent=24845579, text='And nothing is going to stop you from doing this, you can pack you query (native or JPA-QL or HQL) into @Query annotation and be done. The good thing is that it will do mapping for you.<p>The advantage of using findEntitiesByIdAndCreatedAtAfterOrderByCreatedAtDesc is that you will get for free paging support (which is not trivial and has to be done properly for each database engine, simple approach with using limit typically is very inefficient).<p>Also, most of the queries will be something simple to fetch some entity using some business identifier or primary key, not being forced to write down all those simple queries is a productivity boost.<p>For more complicated queries you can fallback to writing query manually.<p>There is also maturing Spring Data JDBC project that kind of has &quot;best of both worlds&quot;.')