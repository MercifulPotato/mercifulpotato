Item(by='rndgermandude', descendants=None, kids=[25073341], score=None, time=1605206308, title=None, item_type='comment', url=None, parent=25072884, text='I never remember the nitty-gritty details of the more complex algorithms and data structures, I only remember they exist and their important properties. If I then have to implement one, I consult google or books. Googling often has the neat side effect that you&#x27;ll sometimes find refinements&#x2F;improvements or other (new) potentially better algorithms to solve a particular problem. Or somebody might have done the heavy lifting already and packaged it up under a compatible license (if it isn&#x27;t something simple like leftPad).<p>I mean, it&#x27;s OK to ask for basic algorithms in interviews, to see if the interviewee has at least some understanding of basic stuff and&#x2F;or can think on their feet and&#x2F;or can reason about problems appropriately...<p>But I would still welcome it if instead of giving an interviewee a boring, memorizable problem like &quot;invert a binary tree&quot;, the interviewer would find a more general problem and would see how the employee would tackle it, and if the interviewee refers to binary trees as part of the solution without writing out a full implementation from memory that&#x27;s OK (as long as binary trees would be a valid approach to solve the problem, of course).')