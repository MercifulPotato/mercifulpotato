Item(by='austincheney', descendants=None, kids=[24957110, 24956991, 24958101, 24957261, 24957095], score=None, time=1604200086, title=None, item_type='comment', url=None, parent=24956156, text='This is problematic in that you don&#x27;t control external APIs.  For example look at the DOM which preferences null but returns undefined when there is a language construct in the way:<p><pre><code>    document.getElementById(&quot;asdf&quot;) &#x2F;&#x2F; returns null;\n    document.getElementsByTagName(&quot;asdf&quot;) &#x2F;&#x2F; returns [];\n    document.getEleemntsByTagName(&quot;asdf&quot;)[0] &#x2F;&#x2F; returns undefined\n    document.getElementsByTagName(&quot;body&quot;)[0].getAttribute(&quot;asdf&quot;) &#x2F;&#x2F; returns null\n    &#x2F;&#x2F;\n    document.getElementsByTagName(&quot;input&quot;) &#x2F;&#x2F; assuming not empty for the next several lines\n    document.getElementsByTagName(&quot;input&quot;)[0] &#x2F;&#x2F; Element object\n    document.getEleemntsByTagName(&quot;input&quot;)[0].value &#x2F;&#x2F; returns &quot;&quot; as valus is implicitly an empty string if not supplied\n    document.getElementsByTagName(&quot;div&quot;)[0].value &#x2F;&#x2F; returns undefined even though the element is present but expresses an inference to an unsupported property\n</code></pre>\nI completely agree supporting both null and undefined complicates some forms of validation, but I have accounted for this in my test automation.  I don&#x27;t encounter this problem with input validation or managing event handlers.<p>Here are the rules I use:<p>* undefined is a value where a value is never before assigned.  Yes, you can do stupid things in opposition to the default such as arbitrarily assigning undefined or even redefining <i>undefined</i> to an assignment, but those footguns are not be accident.<p>* null is a value that is explicitly assigned.<p>If you program with those assumptions in mind you are safe 99% of the time given default language constructs, which doesn&#x27;t account for the intentionally bad decisions other people make.  This also helps with troubleshooting because when an error is encountered due to a null or undefined value the assignment distinction helps to diagnose the problem.')