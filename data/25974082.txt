Item(by='KirillPanov', descendants=None, kids=[25974194], score=None, time=1612049101, title=None, item_type='comment', url=None, parent=25974054, text='&gt; In X11, you can do it with xrandr --fbmm<p>Yeah, that&#x27;s basically what I want, but for sway.<p>&gt; Wayland applications should not be using that information to decide scaling. They should be using the wl_output.scale.<p>Maybe so, but the physical size is definitely exposed to the clients via the wayland protocol (see below).  I&#x27;m pretty sure that the QT toolkit and Chromium both use the reported values.<p><pre><code>    &lt;event name=&quot;geometry&quot;&gt;\n      &lt;description summary=&quot;properties of the output&quot;&gt;\n    The geometry event describes geometric properties of the output.\n    The event is sent when binding to the output object and whenever\n    any of the properties change.\n    \n    The physical size can be set to zero if it doesn&#x27;t make sense for this\n    output (e.g. for projectors or virtual outputs).\n      &lt;&#x2F;description&gt;\n      &lt;arg name=&quot;x&quot; type=&quot;int&quot; &#x2F;&gt;\n      &lt;arg name=&quot;y&quot; type=&quot;int&quot; &#x2F;&gt;\n      &lt;arg name=&quot;physical_width&quot; type=&quot;int&quot; &#x2F;&gt;\n      &lt;arg name=&quot;physical_height&quot; type=&quot;int&quot; &#x2F;&gt;\n      &lt;arg name=&quot;subpixel&quot; type=&quot;int&quot; enum=&quot;subpixel&quot; &#x2F;&gt;\n      &lt;arg name=&quot;make&quot; type=&quot;string&quot; &#x2F;&gt;\n      &lt;arg name=&quot;model&quot; type=&quot;string&quot; &#x2F;&gt;\n      &lt;arg name=&quot;transform&quot; type=&quot;int&quot; enum=&quot;transform&quot; &#x2F;&gt;\n    &lt;&#x2F;event&gt;\n</code></pre>\nI will probably end up hacking it into sway, like I&#x27;ve done with other things.<p>It&#x27;s just that the swaywm&#x2F;libwlroots codebase is so utterly illegible. &quot;wlroots is largely documented through comments in the headers. Read &#x27;em.&quot;  Yeah, those headers with no comments anywhere, egregious amounts of boilerplate code (because C), and naming conventions that take weeks to learn.  Argh.  I&#x27;ve spent entire days trying to figure out &quot;how to I get a sway_foo pointer from a wlr_foo pointer&quot;.  It&#x27;s madness.  There&#x27;s so much typecasting going (with totally undocumented rules for when said typecasts are safe) on that you can&#x27;t even use the compiler-visible types as a guide for these kinds of questions.')