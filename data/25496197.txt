Item(by='chrismorgan', descendants=None, kids=[25497337], score=None, time=1608567267, title=None, item_type='comment', url=None, parent=25495345, text='I like the createElement&#x2F;appendChild-and-return-child and set-innerHTML-and-return-child combinations, they’re just the right level of repetition for minification.<p>As it stands, the use of innerHTML is bad, because it allows an injection attack (which amuses me given you said “no HTML injection”—though I know what you meant by that); you should use innerText instead. (You should always think <i>very</i> carefully before setting innerHTML or doing other similar tricks like the insertAdjacentHTML that I used in mine.)<p>There’s also some low-hanging fruit for golfing here:<p>• appendChild can be replaced with append (this sheds IE support, which I think is reasonable).<p>• You have arrow functions containing only a return statement; there’s a form that returns the expression: `a =&gt; { return b; }` can be written as just `a =&gt; b`. Also often in such golfing exercises if you have a function that has no return value, you can just drop the braces and let it return a value anyway, for two characters of savings.<p>• I said I liked the b and c functions, but it turns out that merging them ends up saving 7 characters in this case, because all but one of the invocations uses both.<p>Beyond that, I object strenuously to the use of &lt;a onclick=…&gt;+&lt;&#x2F;a&gt; for what is functionally a button, as it’s completely inaccessible to screen readers and the likes (it’s not focusable, isn’t announced as anything, and it doesn’t respond to the keyboard). Use &lt;button&gt; instead.<p>Here’s where I am on yours, 253 characters:<p><pre><code>  a=document;b=(d,t,v)=&gt;(d.append(d=a.createElement(t)),d.innerText=v,d);i=b(x=a.body,&quot;input&quot;);b(x,&quot;button&quot;,&quot;+&quot;).onclick=_=&gt;b(o,&quot;li&quot;,i.value).onclick=(e)=&gt;e.target.style.textDecoration=&quot;line-through&quot;;o=b(x,&quot;ol&quot;);b(x,&quot;button&quot;,&quot;X&quot;).onclick=_=&gt;o.innerText=&quot;&quot;</code></pre>')