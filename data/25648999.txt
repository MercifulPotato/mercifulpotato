Item(by='TrueDuality', descendants=None, kids=None, score=None, time=1609871406, title=None, item_type='comment', url=None, parent=25648503, text='It&#x27;s definitely common to accelerate specialized operations without the overhead of a general processor, but it&#x27;s also possible to effectively use them as a much more flexible microprocessor when you need it.<p>If you go looking for a microcontroller for your project, you have to choose among what is available. Maybe this microcontroller has two hardware UART interfaces and 1 SPI interface. If I don&#x27;t need any UART but instead need a CANBUS interface that microcontroller won&#x27;t work for me. Sure I can bitbang the protocol on GPIO ports but that uses up a lot of the limited processing power on the microcontroller... Usually that means a more expensive microcontroller.<p>There is a threshold that you can cross where a small FPGA is cheaper than a microcontroller that has enough pins and processing power for your application. This does come with an additional upfront design cost of also writing (but more often integrating) the soft cores but sometimes that makes sense.<p>Sometimes peripherals just don&#x27;t exist at the price point you need. Try and find a microcontroller that has a MMIO controller for under $5 (I probably couldn&#x27;t do it at under $10 but I haven&#x27;t gone looking recently), it&#x27;s rare they&#x27;re needed but sometimes a design requires one.<p>There has also been a lot of recent interest in doing formal verification of hardware logic. A lot of the microprocessors and even that full CPU in whatever device you&#x27;re reading this on has a lot of undocumented black boxes and undefined behaviours both of which prevent that verification from being meaningful.')