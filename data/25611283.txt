Item(by='jitl', descendants=None, kids=[25614563, 25612600], score=None, time=1609575863, title=None, item_type='comment', url=None, parent=25611005, text='Well, in the long run we’ve learned that maintaining a large and complex UI’s CSS by hand is very tedious and error-prone.  A miss configured style that, for example, makes the Airbnb “Book It” unreadable for some % of the population can lose millions of dollars, but never throw a stack trace.<p>So, engineers working on UI toolkits often reach for CSS code generation to ease maintenance. At first it was all PHP templates. Then it was Sass (206), is a popular purpose-built language for generating CSS which saw a lot of use in the Rails community. Sass is very good at its job because it handles a lot of CSS niceties in nice ways, but it’s a lot of extremely domain specific complexity. A whole new Turing-complete language <i>JUST</i> for CSS? Not ideal.<p>The next step is to move all the UI definition into a single place, i\nusing a single language that abstracts the underlying HTML&#x2F;CSS&#x2F;JS files &amp; semantics. We do that by writing JS, and having a compiler program extract the CSS bits. This gets us ideal performance &amp; ideal maintainability at the cost of build complexity. This is a worth while trade, because in the long run the compiler will get so good that the cost becomes minimal; compare to other ecosystems, for example the Kotlin compiler is quite complex, but I never think about x86 assembly when writing Kotlin.')