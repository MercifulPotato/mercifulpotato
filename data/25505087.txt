Item(by='ChrisMarshallNY', descendants=None, kids=None, score=None, time=1608635296, title=None, item_type='comment', url=None, parent=25504771, text='This nails the issue with creating any kind of hardware. I’ve worked for hardware developers for most of my career, and have seen these types of challenges play out.<p>Frankly, hardware problems are <i>hard</i>. The laws of physics are non-negotiable, and doing what we assume to be simple tasks at scale can be crazy difficult. Solving a problem in a lab is <i>not</i> the same as making it at scale. That’s why you keep reading these stories about major lab discoveries that never seem to actually materialize in product.<p>Us software developers get used to being able to write some code, or license a library, and the problem is solved. Scale isn’t really an issue for us. If we can do it on our laptop, then we can push out our product to millions, almost overnight.<p>Hardware is quite a different world. We need to tool up factories, train assemblers, set up suppliers and transportation networks, negotiate dozens of contracts; even for simple projects, resolve regulatory issues (which can be quite intimidating, depending on the industry and market), establish distribution channels and create packaging. Some of these are reflected in the software world, but at a much easier-to-manage level.<p>Also, with software, failure usually doesn’t cost as much as it does with hardware. It’s a lot easier to pick ourselves up, dust off our lapels, and try again. Iteration is relatively easy.<p>One of my favorite scenes: <a href="https:&#x2F;&#x2F;m.youtube.com&#x2F;watch?v=YlVDGmjz7eM" rel="nofollow">https:&#x2F;&#x2F;m.youtube.com&#x2F;watch?v=YlVDGmjz7eM</a>')