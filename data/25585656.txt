Item(by='WorldMaker', descendants=None, kids=None, score=None, time=1609359870, title=None, item_type='comment', url=None, parent=25585121, text='It seems easy to square the practical experience of protobufs at Google versus the tradeoffs encountered in the wire format when you take into account how many Google engineers have directly contributed to the diaspora of related formats such as CapnProto, flatbuffers, msgpack, etc with different tradeoffs (especially for smaller scales than Google).<p>It seems clear enough that protobufs were optimized in a scale that involved a lot of time&#x2F;cost-sensitive reads and far fewer time&#x2F;cost-sensitive writes. That&#x27;s a valid tradeoff for Google scale, that comes at a cost of other potential applications (such as telemetry that can be very time&#x2F;cost-sensitive at write-time but has much more relaxed read time&#x2F;cost-sensitivity).<p>&gt; Sure, having to recursively precompute lengths before serialization is a bit of a hassle, but I wouldnâ€™t call it expensive.<p>It&#x27;s expensive in memory (needing to prebuild all the subcomponents of the message, instead of streaming them as needed), and potentially time (prebuilding then sending, versus streaming as soon as data is available to write). Of course, in the scheme of things it may not be expensive to particular use cases. (Which seems why the author seems to particularly highlight this specific use case where such things really are expensive overhead necessary to avoid.)')