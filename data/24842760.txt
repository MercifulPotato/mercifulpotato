Item(by='jcelerier', descendants=None, kids=[24843483], score=None, time=1603231119, title=None, item_type='comment', url=None, parent=24842506, text='I don&#x27;t think that dlsym would accept &quot;bar::my_function::h4ed6ea856a52cd6b&quot; as a symbol, just like it would not accept &quot;foo(std::vector&lt;int, std::allocator&lt;int&gt; &gt;&amp;)&quot; and wants &quot;_Z3fooRSt6vectorIiSaIiEE&quot; instead, no ?<p>To be clear, my comment was about the fact that two different functions produce exactly the same symbol name, c++filt or not, which is not what I was told above in &quot;\nIt carefully designs its name mangling such that this doesn&#x27;t happen in the first place, even in the presence of multiple slightly-different builds of a library.&quot;<p>I have no particular comments on the idea of using hash though I believe that something that changes 95% of chance error in 0.5% of error (I&#x27;d assume, as it took me 10 seconds to find a collision) is <i>very</i> bad - you want errors consistently when you fuck up, not once every hash collision as it sounds like a really really big pain to debug when it happens.')