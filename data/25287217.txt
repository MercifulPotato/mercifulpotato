Item(by='KMag', descendants=None, kids=[25287262], score=None, time=1606988023, title=None, item_type='comment', url=None, parent=25286558, text='I&#x27;m familiar with Biscuit and Midori.  The Biscuit paper estimates a 10% performance hit in syscall-intensive benchmarks due to using Golang vs. C.<p>That being said, ARC may faire much better than a tracing GC, particularly in latency variance, throughput variance, and mean heap usage.<p>Though, I think we&#x27;re best off moving off of hypervisors and onto 4th generation microkernels with isolation similar to AIX LPARs &#x2F; Solaris Containers.  After all, a hypervisor is essentially a microkernel that&#x27;s forced to use hardware traps&#x2F;faults plus hardware emulation for its syscall interface (plus upcalls for performance, which use a calling convention much closer to traditional syscalls).  There are stability, security, and performance advantages to throwing out all of that hardware emulation code, moving everything to upcalls, and getting rid of the second (guest OS) kernel running between the application and the hardware.  If you push most of the system functionality out of kernel space, then rewriting some of the less performance-critical components in a language with ARC or tracing GC starts to make more sense.')