Item(by='gardenfelder', descendants=None, kids=None, score=None, time=1605673596, title=None, item_type='comment', url=None, parent=25133082, text='1981 through ~1996, I used Forth to build expert systems and, eventually, a discovery system modeled after Doug Lenat&#x27;s Eurisko coupled with Ken Forbus&#x27; QP Theory. That platform used a Lisp-like codebase supplied by Bill Dress. The system was used to research and defend a dissertation on polymer curing - process control; a taxonomic knowledge base could be built with a simple constrained natural language interface - that project found its way into an honors biology class for exploring immune response to various insults.\nIt was written on an ancient Mac with UI powered from Pascal.\nWhat do I think about Forth? I will agree with anyone who tells you that Forth is more a way of thinking, far less a programming language. Charles Moore was chock full of wisdom he would toss around; things like &quot;if you can, let the compiler do the work&quot;. That was one of the neat features: you could jump out of code and directly into the compiler to compute things.\nI have moments when, now that we are not saddled with the limitations of 8-bit CPUs, I think it would be fun to dust off my program and bring it up on a large memory system. Alas, that codebase is locked up on a truly ancient cartridge disk for which no drivers exist anymore.')