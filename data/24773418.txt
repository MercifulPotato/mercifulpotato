Item(by='m463', descendants=None, kids=None, score=None, time=1602653513, title=None, item_type='comment', url=None, parent=24769867, text='I&#x27;ve found docker hard to explain to people.<p>To me the beauty of it is that one text file describes a build environment and you can pass it around quite easily to reproduce it.<p>You can also tag it, sort of like a url or git branch and pass that around.<p>So what happens is - someone needs to use your code, you can tell them how to install it on a system - but you also give them a docker file that is a working environment.  Then, it&#x27;s not your problem.<p>They can look at the dockerfile and see what has been installed -- and also very important -- what is NOT installed.<p>Another thing is that it helps with incremental development.  You can build your environment via the dockerfile layer by layer and if a layer is broken or unnecessary, you can remove it without having to rebuild all the layers before that.<p>In comparison, I&#x27;ve also used LXC containers and setting those up is more like installing a VM because there doesn&#x27;t seem to be a dockerfile equivalent.<p>That said, docker is confusing as the article alludes to, because there&#x27;s a company trying to build a business model around it.<p>What I&#x27;m talking about is:<p><pre><code>  apt-get install docker.io\n</code></pre>\nBut docker the company is forcing two versions - a community edition and an enterprise edition.  I tried it on macos and it had tons of telemetry too.<p>They&#x27;re also trying to control the namespace.  For example, they don&#x27;t let you have your own private registry, which is like a local dns server.  It would break &quot;the global namespace&quot; and incidentally their business model.<p>Redhat is wise to them, and their version of docker has --add-registry.  If I was an enterprise customer, I wouldn&#x27;t want my containers going out to the internet to get up-to-date (sometimes inadvertently).  It makes runtime docker containers more sketchy')