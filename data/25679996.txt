Item(by='1vuio0pswjnm7', descendants=None, kids=None, score=None, time=1610067758, title=None, item_type='comment', url=None, parent=25677592, text='In studies I have done, most websites on the internet do not require SNI. Thus with most websites there is no problem of domain names in plaintext being sent in ClientHello packets, and no need for ESNI.<p>There are not many ESNI-enabled websites on the web, but Cloudflare&#x27;s CDN offers ESNI service.  Thus, one can use ESNI for websites that use Cloudflare.<p>I have been testing ESNI for a while now.  I use it for reading websites text-only with no ads or tracking.  I use links; I am not a fan of &quot;modern&quot; browsers.  IMHO, Cloudflare&#x27;s ESNI is very fast.  It seems even faster than normal TLSv1.2 or TLSv1.3.<p><a href="https:&#x2F;&#x2F;defo.ie" rel="nofollow">https:&#x2F;&#x2F;defo.ie</a> is one source for ESNI info, including links to source code on Github for ESNI-enabled openssl, curl, lighttpd, etc.  If you compile the ESNI-enabled openssl from Github, below is a one-liner and a small script to try ESNI out.<p>First you must fetch an ESNI key in a TXT RR from Cloudflare DNS.  Then you  use the key to submit HTTP requests for about an hour, until it expires.  Then you must get a new key.<p><pre><code>   # one-liner to fetch a key\n   # if you run your own DNS you could then put this into a TXT RR in your own zone file \n\n   #!&#x2F;bin&#x2F;sh\n   curl &quot;https:&#x2F;&#x2F;cloudflare-dns.com&#x2F;dns-query?name=_esni.www.cloudflare.com&amp;type=TXT&amp;ct=application&#x2F;dns-json&quot;|grep -o [&#x2F;][^\\\\]* &gt; esnirr\n</code></pre>\nIt seems that connecting to cloudflare-dns.com to fetch the initial key via DoH requires SNI.  Why not have a bootstrap server that is not on a shared IP and hence does not require SNI.<p><pre><code>   # try out ESNI using the key\n   # usage: echo https:&#x2F;&#x2F;some.cloudflare.website.com|$0\n   # usage: $0 HEAD &lt; file-of-urls-with-same-domainname -- (http&#x2F;1.1 pipelining)\n   \n   #!&#x2F;bin&#x2F;sh\n   read k &lt; esnirr\n   exec 2&gt;&#x2F;dev&#x2F;null\n   (while read uri;do case $uri in http:&#x2F;&#x2F;*)uri=${uri#*http:&#x2F;&#x2F;};;https:&#x2F;&#x2F;*)uri=${uri#*https:&#x2F;&#x2F;};esac;\n   export host=${uri%%&#x2F;*};path=&#x2F;${uri#*&#x2F;};test ! ${#path} -gt ${#url}||path=&#x2F;; \n   printf ${1-GET}&#x27; &#x27;$path&#x27; HTTP&#x2F;1.1\\r\\nHost: &#x27;$host&#x27;\\r\\nConnection: keep-alive\\r\\n\\r\\n&#x27;;\n   done|sed &#x27;N;$!P;$!D;$d&#x27;;printf &#x27;Connection: close\\r\\n\\r\\n&#x27;) &gt; .http;\n   host=$(sed -n &#x27;&#x2F;^Host: &#x2F;{s&#x2F;.*Host: &#x2F;&#x2F;;p;q;}&#x27; .http|tr -d &#x27;\\r&#x27;);\n   # Any Cloudflare IP should work - 104.16.249.249 is just one example\n   # https:&#x2F;&#x2F;www.cloudflare.com&#x2F;ips-v4\n   openssl s_client -4 -tls1_3 -noservername -ign_eof -verify 9 -connect 104.16.249.249:443 -esni $host -esnirr $k &lt; .http\n   rm .http\n</code></pre>\n&quot;Modern&quot; browsers are stupid.  They are sending domain names in the clear even when the website is not using SNI.<p><a href="https:&#x2F;&#x2F;github.com&#x2F;kontaxis&#x2F;snidump" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;kontaxis&#x2F;snidump</a>')