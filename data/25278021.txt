Item(by='potiuper', descendants=None, kids=None, score=None, time=1606926691, title=None, item_type='comment', url=None, parent=25253498, text='&quot;Though the ancient Egyptians used heap as a general term for  an unknown quantity. Diophantus, a  Greek mathematician  in  Alexandria  about 300 AD, was probably the original inventor of an algebra using letters for unknown quantities. Diophantus used the  Greek capital letter delta (not for his  own name!)  for the word power  (dynamis; compare dynamo, dynamic, and dynamite), which  is therefore  one of the oldest terms in mathematics. A conjunction has been used to raise a function to a power. This syntax brings out the parallelism between raising a number to a power and applying a function an equal number of times. The algorithm fails when the number of doublings is further increased.&quot;<p>A proposed non-commutative infix binary operator inverse to similar to the non-commutative infix binary exponentiation operator is &quot;[x&#x27;s] &#x27;log base&#x27; [base]&quot;:<p>Operator symbols:\n[] = implicit; vertical orientation &#x2F; higher potential = implicit increasing<p>position on number &quot;line&quot; : | = addition, - = subtraction; two vertices.\ntriangle &quot;ratio&quot; : ▽ = multiplication, △ = division; three vertices.\nsquare &quot;The power of a line is the square of the same line&quot; [x^2] : ◇ = exponentiation, □ = log base; four vertices...<p>[0|]y=y : | = next() grouping operator<p>[0]-y : - = inverse operator<p>[0|]y [|]-y=0 : 0 = identity operand<p>[1▽]y=y : ▽ = | grouping operator<p>[1]△y   : △ = inverse operator<p>[1▽]y [▽](1△y)=y△y=1 : 1 = identity operand<p>[y◇(1△y)◇]y=y              : ◇ = ▽ grouping operator<p>[y◇(1△y)] □ y = 1△y : □ = inverse operator<p>[y◇(1△y)◇]y [◇]((y◇(1△y)) □ y) =y◇(1△y) : y◇(1△y) = identity operand &lt;in the infinite limit = e&gt;')