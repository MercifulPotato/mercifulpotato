Item(by='ahnick', descendants=None, kids=[25247174], score=None, time=1606673627, title=None, item_type='comment', url=None, parent=25246499, text='I think the easiest way to get started is to use DigitalOcean&#x27;s managed Kubernetes offering.  If you already know Docker then basically you&#x27;ll just be learning how to setup a cluster on Kubernetes, installing your app to the cluster and other apps using kubectl and helm, and then setting up an ingress into the cluster (likely nginx-ingress although there are other options).<p>In regards to your specific questions... adding another physical machine to your cluster would be really simple if you are using Terraform, you would just increment your <i>node count</i> number and then re-apply the Terraform config.  Here is an example Terraform config(main.tf) from a simple project I have:<p><pre><code>  variable &quot;do_token&quot; {}\n\n  provider &quot;digitalocean&quot; {\n    token = var.do_token\n  }\n\n  resource &quot;digitalocean_kubernetes_cluster&quot; &quot;your-cluster&quot; {\n    name    = &quot;your-cluster&quot;\n    region  = &quot;sfo2&quot;\n    # Grab the latest version slug from `doctl kubernetes options versions`\n    version = &quot;1.16.6-do.2&quot;\n\n    node_pool {\n      name       = &quot;your-pool-1&quot;\n      size       = &quot;s-1vcpu-2gb&quot;\n      node_count = 3\n    }\n  }\n</code></pre>\nFor deployments I would honestly just keep it simple and increment your docker tag version number on your image each time you are doing a deploy.   Then when you deploy your new image (e.g. <i>kubectl apply -f deployment.yaml</i>), the new image will be pulled down to each cluster pod and the application containers will then be restarted one by one.<p>If you are running this on another test&#x2F;development cluster (e.g. minikube) prior to deployment, then you should have great confidence that this will succeed. In the event that you did run into an issue, just roll back the docker image version number and reapply the yaml using kubectl again.<p>I&#x27;ve been following this method for a while and have never had any downtime with deployments.  Eventually if you get sophisticated you&#x27;ll want to add these steps into an automated CI&#x2F;CD pipeline, but <i>kubectl apply</i> can carry you pretty far in solo operations.')