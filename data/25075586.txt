Item(by='wenc', descendants=None, kids=[25080389], score=None, time=1605217916, title=None, item_type='comment', url=None, parent=25073960, text='I use Anaconda exclusively and deployments (with virtual environments) have been fairly ok.<p>That said, I do run into trouble when I have a dependency that requires compilation on Windows (i.e. like the popular <i>turbodbc</i>) because say, a wheel isn&#x27;t available for a particular Python version. Any time a compilation is needed, it&#x27;s a headache. Windows machines don&#x27;t come with compilers, so one has to download and install a multigigabyte Visual Studio Build Essentials package just to compile. Sometimes the compilation fails for various reasons.<p>Require gcc compilation is headache for installing dependencies inside Docker containers too -- you have to install gcc in order to install Python dependencies and then remove gcc after.<p>I think requiring local compilation (instead of just delivering the binary) is a UNIX-mindset that is holding back many packaging solutions. I think a lot of pain would be alleviated if we could somehow mandate centralized wheel creation for all Python versions, otherwise the package manager marks a package as broken or unavailable and defaults to the last available wheel.<p>Also if only we applied some standards like R&#x27;s CRAN repo does -- ie. if it doesn&#x27;t pass error checks or doesn&#x27;t build on certain architectures (institute a centralized CI&#x2F;CD build pipeline in the package repo), it doesn&#x27;t get published -- the Python packaging experience would be much improved.')