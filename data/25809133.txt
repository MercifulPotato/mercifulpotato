Item(by='habitue', descendants=None, kids=[25811463], score=None, time=1610871877, title=None, item_type='comment', url=None, parent=25807645, text='Opinions:<p>1) mypy is the best type checker, you could look into pylance or pyre though<p>2) Django&#x27;s ORM is kinda bad vs. sqlalchemy, but this isn&#x27;t new. I&#x27;d consider any framework where you can use sqlalchemy (most everything)<p>3) No improvements to interpreter really. In python3 you now have to import reload though :(<p>4) Celery still exists, it&#x27;s inside of Airflow. In general &quot;scheduling asynchronous jobs&quot; is a thing that is ubiquitous and celery is a bit limiting with its queue model. Many people use things like kubernetes to let a more advanced scheduler find space &amp; time to run your async jobs, vs forcing them to be evaluated by a fixed set of workers. That being said, celery is fine for simple stuff.<p>5) Deploying python: everything is docker + kubernetes these days. There are the serverless true believers out there, so AWS lambda might be up your alley if you like that sort of thing. Definitely wouldn&#x27;t invest time in building on app engine, and I&#x27;d just use ec2 as nodes for your docker deploys. Immutable deployment artifacts are great<p>6) APIs: use REST&#x2F;json, it&#x27;s fine. Everything speaks it. If you have a big team where front end and back end can&#x27;t work in lockstep, or you have multiple clients with diverse needs, consider GraphQL, but if you&#x27;re doing a web frontend... might not bother? GraphiQL is really nice, but if you generate OpenAPI definitions the tooling for REST is acceptable.<p>7) Parallelism: still use multiprocessing. GIL is alive and kicking, no change there. I&#x27;d say more parallelism is going into horizontally scaling containers vs. trying to run a lot of processesin a single server. Have nginx (or your favorite kubernetes ingress) multiplex your containers<p>8) I&#x27;ve ignored async mostly, so take this with a grain of salt: you probably don&#x27;t need async. Tornado is a good bet if you want async though for things like websockets etc. You can do sync or async with tornado, which is nice.<p>9) Numpy and scipy still alive and kicking. Not sure what your use case is, but the projects are very much active. There are obviously a lot of deep learning libraries etc in python now, so depending on what your needs are there is a lot of statistics &#x2F; ML you can do in python.')