Item(by='throwaway894345', descendants=None, kids=None, score=None, time=1611855699, title=None, item_type='comment', url=None, parent=25936916, text='&gt; This passertion is disingenuous. The whole point is that the reason why bad code is bad is not because it&#x27;s OO, it&#x27;s because it&#x27;s bad code.<p>This is pretty false on its face. Let&#x27;s say that some paradigm insists that inheritance should be used for every problem. Almost all programmers agree that this is bad code, thus code written in this paradigm is bad <i>because of the paradigm</i>.<p>&gt; You do not fix bad code by switching programming paradigm, specially if it&#x27;s to move back to procedural programming and wheel reinvention due to irrational class-phobia.<p>Agreed. Instead you should start with your current paradigm and remove the problematic aspects until you&#x27;re left with something that works reasonably well. I posit that when you start with OO and drop its problematic aspects like inheritance or Armstrong&#x27;s observation of banana-gorilla-jungle architecture, you end up with something that looks pretty functional or data-oriented, a la idiomatic Go or Rust. If your definition of &quot;OO&quot; already excludes these things, then it probably looks something like Go or Rust or perhaps even Erlang.<p>The issue I&#x27;m raising with &quot;OO&quot; is that there is no consensus about what OO <i>is</i>; rather every defense of OO is about what it <i>isn&#x27;t</i> (and then there&#x27;s the ever predictable straw man, &quot;But you can write bad code in any paradigm!&quot;).')