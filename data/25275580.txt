Item(by='knorker', descendants=None, kids=[25275857], score=None, time=1606910378, title=None, item_type='comment', url=None, parent=25275553, text='I haven&#x27;t learned Rust yet, but no it&#x27;s not insincere. Go has a textbook definition of exceptions.<p>The mere fact that they are less used doesn&#x27;t make them &quot;not exceptions&quot;.<p>And importantly it doesn&#x27;t matter that they are less common. Merely <i>having</i> exceptions means that everyone has to write exception-safe code.<p>HTTP handlers silently swallow exceptions, so you can&#x27;t rely on your program dying if there&#x27;s a panic.<p>fmt.Printf can panic as far as you know, too.<p>Essentially you need RAII, except that because Go doesn&#x27;t have RAII every single resource needs:<p>r, err := getResource()  \nif err != nil {  \n  â€¦  \n}  \ndefer r.Close()<p>But because &quot;Go doesn&#x27;t have exceptions&quot; people often don&#x27;t bother with the defer, and then they get bugs. I see it happening frequently.<p>You need to write exception-safe code. But also you&#x27;re not allowed to use exceptions. So it&#x27;s the worst of both worlds.<p>I write and review <i>a lot</i> of Go code, and I like the language. But I don&#x27;t like the dishonesty.')