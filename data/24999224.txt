Item(by='tluyben2', descendants=None, kids=None, score=None, time=1604591286, title=None, item_type='comment', url=None, parent=24999105, text='Well... Compared to others it is still very conservative. And backward compatibility is taken into account for many projects.<p>I too find it annoying that everything feels like early 00s as it prevents uptake; I think most can be fixed by creating a new, modern website for the project, adding examples how to interact with the system with modern tools and a &#x27;try it out in your browser&#x27;. Many Apache projects, for instance, are great and very robust in the current time, however, when you go there to do research on what to use for a new project, the examples start with XML files and then Java classes. No matter what I think of node, examples these days must include a little few-liner with node, python, go, curl, java, clojure, ... . Most people like the idea of java -jar somethinggreat.jar, but opening IntelliJ, adding all kinds of arcane (when you are used to Go, Node, etc) artifacts and then writing actual Java code which you did not want to do in the first place, really hurts adoption imho. And made many projects not even appear on anyone&#x27;s radar.<p>Like (anecdotally) picking mongo for a (trading) case geode was basically made for, but mongo was hip, not &#x27;old apache&#x27; and not &#x27;old java&#x27;.')