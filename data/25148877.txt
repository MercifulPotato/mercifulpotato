Item(by='JohnBooty', descendants=None, kids=None, score=None, time=1605789733, title=None, item_type='comment', url=None, parent=25148268, text='Likewise.<p>In our case, we were permitted to disable Rubocop rules at-will via inline comments, which made it slightly bearable, but still onerous considering how slow our CI was (45+ minutes in many cases for a test run)<p>My preferred method is:<p>1. As a matter of productivity, all coders are expected to have Rubocop enabled in their editor of choice, for the quickest possible feedback loop.<p>2. Use HoundCI or equivalent to highlight Rubocop complaints in Github&#x27;s pull request conversation. Then they may become a matter of discussion. Obviously, this only works if the team is mature enough to avoid bikeshedding.<p>3. Rubocop failures do <i>not</i>, however, cause a hard failure during CI.<p>4. Haven&#x27;t set this up yet, but ideally I&#x27;d configure things so that perhaps <i>some</i> egregious Rubocop failures (ie, tabs vs. spaces, SQL injection issues, etc) <i>would</i> cause CI failures. Whereas more subjective style issues would simply be flagged for developer attention&#x2F;discussion.<p>5. Pull requests to modify the project&#x27;s .rubocop.yml are always encouraged. Again, culture&#x2F;maturity come into play here. I&#x27;ve been on teams that bikeshed this sort of thing to death. My current team does not.')