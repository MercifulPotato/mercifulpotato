Item(by='greggman3', descendants=None, kids=[25793218], score=None, time=1610728782, title=None, item_type='comment', url=None, parent=25789466, text='I want the play the piano but don&#x27;t want to put in the time. Answer &quot;don&#x27;t be lazy&quot;. I want the learn to dance but don&#x27;t want to put the time. Response: &quot;Don&#x27;t be lazy&quot;.<p>What is special about programming that should be easy where playing the piano or learning to draw well is not? Maybe it&#x27;s just fundamentally hard?<p>I&#x27;m not suggesting it can&#x27;t be made more approachable for beginners and for small tasks but most non-trivial things someone wants to make, they have 1000s of questions that need to be answered and even more combinations. Making the tools better, for the most part, won&#x27;t remove that complexity IMO.<p>Take the stereotypical &quot;To Do&quot; starter app. First you just have an array (db) of todos and they have title, text, done fields, and that&#x27;s it. Then you add due dates, dependent tasks, assigning ownership for tasks, oh, you just made it multi-user, you now need login, ownership, editing rights, migrations when someone quits. You probably have user settings, machine local settings, user account setting, People want different displays of the data, sorted different ways, or with graphs. They need formatting for printing. You want notifications when a task gets reassigned but you don&#x27;t want them notified on every device. Oh, suddenly you have users in foreign office, they need it localized., etc.. It gets extremely complicated very quickly.')