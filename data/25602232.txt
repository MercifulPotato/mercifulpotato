Item(by='abhgh', descendants=None, kids=None, score=None, time=1609496554, title=None, item_type='comment', url=None, parent=25600019, text='In the specific case of ML courses - many of which I have TA-ed or attended classes of, this reason does not ring true at all. Libraries for most standard algorithms are available in some form with a Python interface (or for the more statistical stuff: R). Its almost always the inertia from the initial design of the course.<p>It is also not true today that not knowing Matlab harms your industry productivity in ML. This might have been true around a decade ago, but most teams outside academia also have moved to non-Matlab resources. And if anything, this has been further reinforced by Deep Learning libraries, the current crop of MLOps tools and cloud-based frameworks.<p>Matlab might be good for specific areas, but ML has not been a stronghold for a while. It is also important to remember that in the context of numerical accuracy or computation speed, Python is almost always the user-facing layer. You might (correctly) argue that the Python language is slower&#x2F;faster than X, but this is not a useful metric for comparing libraries and frameworks, where the compute heavy code is probably in C&#x2F;C++: numpy, tensorflow, pytorch are good examples of this.')