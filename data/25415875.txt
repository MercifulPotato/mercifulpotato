Item(by='barrkel', descendants=None, kids=None, score=None, time=1607945746, title=None, item_type='comment', url=None, parent=25415293, text='You don&#x27;t need me to get on that bandwagon. I almost despise mocks.<p>Mocks usually over-specify implementations by setting up expectations of a specific implementation conversation rather than an outcome. They&#x27;re painful to debug after refactoring implementation - they end up write-only - and they generally inhibit refactoring of the mocked API - often mocked instances of APIs outnumber production invocations.<p>I try to encourage people to replace control flow with data flow where possible; messages, command objects rather than method calls; iterators, streams and consumers composed together, rather than loops. Data flow can normally be trivially redirected into a container, and if the data objects are simple inert immutable tuples, they&#x27;re trivial to construct as inputs or assert against on outputs.<p>Fakes are good too, better than mocks in most situations, since they are easier to refactor.<p>Although, IME, integration tests, while slow and often brittle (especially if you have any async components and define failure conditions in terms of timeouts), have a significant upside in permitting large factoring while still being able to test a substantial amount of end result functionality (i.e. the stuff that matters, not implementation details).')