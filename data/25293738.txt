Item(by='jlokier', descendants=None, kids=None, score=None, time=1607025041, title=None, item_type='comment', url=None, parent=25289857, text='Wrong, the optimization proposed was whatever HTTP&#x2F;2 does:<p>&gt; &quot;part of the idea with HTTP2 that the server can see everything you&#x27;re asking for and more intelligently prioritize&quot;<p>HTTP&#x2F;2 prioritisation does in fact optimize continuously by starting lower priority streams when higher priority data isn&#x27;t yet available, then pausing streams in mid-send as other higher priority streams&#x27; data becomes available.<p>The size of the send buffer makes a difference to how fast this can react, as I described.  Details at Cloudflare: <a href="https:&#x2F;&#x2F;blog.cloudflare.com&#x2F;http-2-prioritization-with-nginx&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.cloudflare.com&#x2F;http-2-prioritization-with-nginx...</a><p>&gt; &quot;if the most important response takes longer to generate than lower priority responses, the server may end up starting to send data for a lower priority response and then interrupt its stream when the higher priority response becomes available&quot;<p>&gt; &quot;the problem with large send buffers is that it limits the nimbleness of the server to adjust the data it is sending on a connection as high priority responses become available. Once the response data has been written into the TCP send buffer it is beyond the serverâ€™s control and has been committed to be delivered in the order it is written&quot;<p>You proposed to replace this with HTTP&#x2F;1.1 and multiple TCPs, which does not provide an equivalent optimization.<p>Browsers do in fact optimize HTTP&#x2F;1.1 per asset by keeping a list of requests in priority order and running a limited number of TCP connections in parallel, but if they can use HTTP&#x2F;2 that usually works out faster.  On the internet for reasons described in the Cloudflare article, and also because giving as many requests to the server as possible up front allows the HTTP server to start fetching or generating lower priority assets sooner, hiding some backend latency - especially significant with load balancers, other reverse proxies, or HDD cold storage.')