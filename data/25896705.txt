Item(by='musicale', descendants=None, kids=None, score=None, time=1611526410, title=None, item_type='comment', url=None, parent=25891055, text='&gt; How would you have handled the string&#x2F;bytes split in a way thatâ€™s backwards compatible? Or the removal of old-style classes?<p>I&#x27;m not sure it&#x27;s the best way to handle it, but I would have been fine with:<p><pre><code>    from __python2__ import *\n</code></pre>\nfor full backward compatibility; or, more explicitly:<p><pre><code>    from __python2__ import ascii_strings, old_style_classes, print_statement, ...\n\n</code></pre>\nAs the parent poster mentions, several other popular languages and systems (C++, Java, etc.) have done a pretty decent job preserving backward compatibility, for good reason: it saves millions of hours of human effort. It&#x27;s embarrassing and disappointing that Python simply blew it with the Python 2 to 3 transition.<p>Maybe we could still evolve pypi to support a compatibility layer to allow easy mixing of python2 and python3 code, but I get the feeling that Python 3 has poisoned the well.')