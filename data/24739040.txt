Item(by='jinmingjian', descendants=None, kids=None, score=None, time=1602338186, title=None, item_type='comment', url=None, parent=24736559, text='shameless insertion:<p>&quot;raw csv processing at ~20GB&#x2F;s&quot; has been demonstrated in one my project as the tooling byproduct[1] based on Rayon(great Rust data parallelism library)[2] and wrapping of modified simdcsv[3] into one simple .rs.<p>just a little more:<p>1. simdcsv has severe bugs, so do not use it beyond demo.<p>2. the processing model of simdcsv still has rooms to good improvements(estimated 2x more, a.k.a. ~40GB+&#x2F;s in memory in single modern socket should be achievable in some scenarios(no heavy string to complex language object conversions)).<p>[1] <a href="https:&#x2F;&#x2F;tensorbase.io&#x2F;2020&#x2F;08&#x2F;04&#x2F;hello-base.html#benchmark" rel="nofollow">https:&#x2F;&#x2F;tensorbase.io&#x2F;2020&#x2F;08&#x2F;04&#x2F;hello-base.html#benchmark</a><p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;rayon-rs" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;rayon-rs</a><p>[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;geofflangdale&#x2F;simdcsv" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;geofflangdale&#x2F;simdcsv</a>')