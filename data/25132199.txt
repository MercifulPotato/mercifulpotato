Item(by='lhl', descendants=None, kids=None, score=None, time=1605663548, title=None, item_type='comment', url=None, parent=25127057, text='&gt; 1. You&#x27;re not going to get 20 hours of battery life.<p>Sorry to burst your bubble, but you&#x27;re not going to get 20 hours of battery life in real world usage on the M1 either. The early tests show about 10-12h, which is the same as my (and many other) laptops under regular usage.<p>&gt; 2. Don&#x27;t forget it&#x27;s not just the M1—it&#x27;s the unified memory, the 8 GPU cores and the 16-core Neural Engine. Most CPU and GPU-intensive apps are going to run faster on the M1 than on your machine. Even x86-64 apps using Rosetta 2 on an M1 Mac may run faster, since those apps are translated to native code on the M1.<p>Now it feels like you&#x27;re just regurgitating marketing talking points. Can you tell me what &quot;unified memory&quot; even is exactly? Is it zero-copy support, because AMD has had that on its APUs since... 2013 or thereabouts. Is it LPDDR4 on a pop package, because all that means to me as an end user is I can never upgrade my memory and that I&#x27;m limited 16GB of memory (which I regularly go over - I am using 19GB of RAM right now just with browser tabs open). As for performance, we already know from the early testing that the M1 under-performs 8C Zen2 for heavy MT workloads like compiles and renders, so ... what are you saying exactly, somehow running software via emulation&#x2F;translation will magically make that faster?<p>&gt; 3. Mac&#x27;s SSD is probably faster; it&#x27;s essentially a 256GB cache for the processor.<p>Again would you simply assume that a Mac&#x27;s SSD is &quot;probably faster&quot;? It in fact is not. The 256GB SSD on the M1 MBA was tested at 2676MB&#x2F;s reads, my value NVMe SSD, a $200 2TB ADATA SX8200PNP does 2917 MB&#x2F;s on my laptop. As for SSD as cache - what are you talking about? L2&#x2F;L3 latency is typically about 10ns latency. NVMe latency is typically on the order of hundreds of microseconds, roughly 10,000X slower.<p>&gt; 4. The Mac can run iOS&#x2F;iPadOS apps too.<p>Poorly, but I mean, but surely this irrelevant to Linux performance?<p>&gt; 5. If done right, Linux compiled for the M1 will likely run faster on an M1 Mac than it does on a machine like yours, especially if Apple provides a way to access certain hardware features.<p>Which hardware features? This is rhetorical. I know this is just hand-waving.<p>&gt; We’ll have to see what happens but expect these machines to be pretty popular with users, even those who need to run Linux when that the distros are updated.<p>We&#x27;ll see what happens. You can track the state of Docker here, for example: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25119396" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25119396</a><p>&gt; We shouldn&#x27;t forget that the underpinnings to all of this is Darwin, the BSD-derived Unix layer which is already running natively on M1, including the compiler and the rest of the toolchain.<p>Darwin&#x2F;macOS may be POSIX compatible, but it is not production compatible with Linux. Like lots of other devs, I&#x27;ve used Macs in the past (for many years) and you always run into compatibility issues small and not so small until you&#x27;re either running either a completely parallel devchain via Homebrew or MacPorts, or in a VM. Honestly, WSL these days is a more Linux-friendly dev environment than macOS. But then again, it&#x27;s even easier&#x2F;better to run Linux and Docker these days.')