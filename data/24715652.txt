Item(by='Ericson2314', descendants=None, kids=None, score=None, time=1602129932, title=None, item_type='comment', url=None, parent=24715192, text='&gt; It does! All the TLS&#x2F;handshake data is transferred in CRYPTO frames (<a href="https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;draft-ietf-quic-transport-30#sec" rel="nofollow">https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;draft-ietf-quic-transport-30#sec</a>...). CRYPTO frames are more or less the same as STREAM frames (<a href="https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;draft-ietf-quic-transport-30#sec" rel="nofollow">https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;draft-ietf-quic-transport-30#sec</a>...). They both represent an ordered reliable byte stream - just in different namespaces.<p>OK fair enough.<p>&gt; The Quic implementation has now the opportunity to merge everything into a single Quic &quot;packet&quot;, and even a single Quic &quot;frame&quot;, and send everything together. If those things were on top of datagrams, it might need to send the whole datagram again?<p>QUIC doesn&#x27;t resend datagrams; QUIC itself just uses datagram ACKs for congestion control. But if it notifies the next higher layer about ACKs, that layer is free to coalesce on retry, just like normal streaming.<p>&gt; There are also other scenarios: E.g. the stream getting reset while transmission is in progress. If that happens none of those data chunks will ever have to be retransmitted. I feel like having an additional layer here will make this harder and less efficient.<p>STREAM_RESET would be entirely internal to the streaming layer, right? Again, the datagram layer doesn&#x27;t re-transmit so no need to worry about that.')