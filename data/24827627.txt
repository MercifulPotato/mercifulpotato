Item(by='chriswarbo', descendants=None, kids=None, score=None, time=1603123388, title=None, item_type='comment', url=None, parent=24826938, text='There are tricky aspects, and I&#x27;ve tripped up a few times over the years. Most annoying is trying to make a &#x27;step&#x27; function from lambda terms to lambda terms; we either need to produce a separate closure type instead, or encode those closures to lambda terms (which may defeat the point of &quot;reducing&quot;), or perform explicit substitution a la call-by-name (duplicating work). I don&#x27;t think I&#x27;ve ever got all the details of capture-avoiding substitution right (I get part way there, then just copy&#x2F;paste someone else&#x27;s code ;) ).<p>Of course, de Bruijn indices can help with this, and I&#x27;m a big fan. They get a lot of hate though, e.g. there seems to be an entire CS sub-discipline dedicated to ever-more-elaborate ways to avoid&#x2F;hide de Bruijn indices ;) (e.g. <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Higher-order_abstract_syntax" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Higher-order_abstract_syntax</a> <a href="https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1807.04085.pdf" rel="nofollow">https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1807.04085.pdf</a> <a href="https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1111.0085.pdf" rel="nofollow">https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1111.0085.pdf</a> <a href="http:&#x2F;&#x2F;lambda-the-ultimate.org&#x2F;node&#x2F;544" rel="nofollow">http:&#x2F;&#x2F;lambda-the-ultimate.org&#x2F;node&#x2F;544</a> etc.)')