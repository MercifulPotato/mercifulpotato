Item(by='kmill', descendants=None, kids=None, score=None, time=1605555500, title=None, item_type='comment', url=None, parent=25114443, text='It&#x27;s &quot;fine&quot; for imperative programming if you never make a mistake: the problem is that it is extremely permissive and won&#x27;t stop execution on errors.  I usually add my own error checking and default cases to cause programs to halt, and these help a lot, but there are still a number of footguns.<p>One example is what happens if you map a function f over a list lst:  f &#x2F;@ list.  Oh, the variable was called lst and not list?  Mathematica will happily evaluate this and result in list, assuming list has not been defined.  This is because what &#x2F;@ does is apply f to each part of the expression, and a Symbol has no parts.  If Mathematica had a way to declare which global symbols can be used in local expressions, it might help prevent this class of bugs.')