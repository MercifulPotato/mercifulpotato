Item(by='llimos', descendants=None, kids=None, score=None, time=1605199550, title=None, item_type='comment', url=None, parent=25071042, text='Thank you for the detailed explanation.<p>Yes, the basic template update mechanism is fine, and it does seem to be fast. I was talking more about the change <i>detection</i>, how it knows that foo has changed in the first place, particularly if it is a nested object or a getter that leads to one. I have had cases where Angular calls the getter <i>constantly</i> (proved by console.log).<p>I agree that there isn&#x27;t another obvious way to figure out something changed, but that&#x27;s the point - since JavaScript doesn&#x27;t have a way to notify on changed properties, for the framework to make that the paradigm is an interesting choice. So it&#x27;s great news that you&#x27;re moving away from that and from zone.js.<p>This is where React&#x27;s setState is much easier to reason about. I call a function, I know that I told React that something changed, so the update isn&#x27;t a surprise. While setting a property does not usually cause anything to happen in Javascript, so I have trouble getting my head around how it works and what Angular is doing behind the scenes, and realizing that it must be polling, which isn&#x27;t usually a good pattern.<p><i>&gt; In fact, to keep compliant is from a high priority to us. We constantly interact with different standardization bodies and keep up to date with standards.</i><p>Which is definitely a good thing, but also an indication that it&#x27;s <i>not</i> actually Javascript, just something that <i>tries to be compatible</i> with Javascript.<p>Anyway, thank you very much for responding! I also understand that Angular has a lot of history to work with and you&#x27;re doing a good job with the paradigms you have.')