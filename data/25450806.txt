Item(by='JSavageOne', descendants=None, kids=[25451513, 25451571], score=None, time=1608165418, title=None, item_type='comment', url=None, parent=25447249, text='90% of jobs in software engineering require very little CS knowledge. Yet interviews for entry level software engineering jobs focus 100% on CS 101.<p>It&#x27;s not that CS knowledge is useless, in fact it&#x27;s great to know the theory. It&#x27;s just not the top priority in terms of doing everyday work. Recommending an aspiring engineer prioritize CS (outside of what you need to pass interviews) is like recommending an aspiring pianist to master music theory. Nice to have, sure, but not an efficient use of time.<p>Also when people defend the importance of knowledge of CS theory in this industry, their seems to be this implication that CS theory somehow can&#x27;t be learned on the job. As if it&#x27;s super complicated and only &quot;real&quot; engineers have the intelligence to pick it up. A load of crap. For example, I once had to use graph algorithms on the job (probably the only time I&#x27;ve ever had to use CS on the job), and I didn&#x27;t remember any of that stuff from school, so I took a day or two to read up on graph data structures &amp; algorithms, and was able to get the job done.<p>What&#x27;s more important in this industry, or any field really (unless maybe you&#x27;re doing something super special like nuclear physics), is knowing how to learn - especially at the junior level. That is way more important than any knowledge. Of course you need to have some base knowledge, but any junior engineer working their first job is going to have a hell of a lot to learn anyways, so for an entry level role I&#x27;d rather pick the smarter person who&#x27;s dabbled in his own projects and is eager to learn than the CS major who&#x27;s expecting to be tackling interesting CS problems all day at work - unless of course the job actually requires this which until now has never been the case for any of my software jobs.')