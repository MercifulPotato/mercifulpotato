Item(by='hombre_fatal', descendants=None, kids=[25157384], score=None, time=1605844277, title=None, item_type='comment', url=None, parent=25156080, text='On Reddit the other day, I saw a Typescript (type-safe) implementation of a `get()` function like `get({ a: { b: { c: [&#x27;foo&#x27;] } } }, &quot;a.b.c[0]&quot;) === &#x27;foo&#x27;` using recursive string templates in the type definition.<p>e.g. get({ name: &#x27;Toby&#x27; }, &quot;name.prop1.prop2&quot;) would fail as you&#x27;re trying to call .prop1 on a string.<p>Really blew my mind. I&#x27;m used to having to give up simple APIs like that when moving to a statically-typed language.')