Item(by='ddragon', descendants=None, kids=None, score=None, time=1602434865, title=None, item_type='comment', url=None, parent=24746790, text='I feel like you considering Python as having few real pain points in data science as either lack of knowledge of other languages or imagination&#x2F;ambition. I do work on Python for data science&#x2F;engineering in a production environment and I do find many of those all the time. Python does not feel like pouring my thoughts because I cannot write Python directly without taking hours to handle a few million points of data, so I have to juggle with multiple dialects (pandas, numpy, pytorch, tensorflow), and Python ends up being one of the languages that I need some documentation at all times. And then that documentation is also not obvious what&#x27;s the input, do I need to give a tuple, or perhaps a dict or even a list because typing is very recent so the ecosystem isn&#x27;t up to date and sometimes I can&#x27;t even type my code properly because I legitimately don&#x27;t know what a library function returns. And even with mypy I keep finding errors that I can only find after deploying (I don&#x27;t blame Python on this one, and Julia isn&#x27;t really better, but I can still dream of something that is dynamic when I want but still safe). Also Python for a dynamic language has pretty mediocre interactive story (using ptpython since the default repl is unusable), even simple things like copy pasting to a REPL can end up being a pain because of indenting, and the repl is far away from Lisp, Clojure and even Julia and Elixir. And Elixir also makes me especially disappointed with Python&#x27;s multithreading story (in Elixir it&#x27;s so natural that it really is the &quot;pouring your throughts on the screen&quot; for distributed).<p>It ended up being a rant, but I have many pain points with Julia as well, but it&#x27;s still a new language that has more space to evolve and find ways to solve them, and if the solution is yet another language that solves all of them, I&#x27;ll quickly jump. I spend a lot of time programming, so any significant improvements on the usage of my time is worth the effort in learning.')