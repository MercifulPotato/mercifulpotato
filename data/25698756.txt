Item(by='pjmlp', descendants=None, kids=None, score=None, time=1610182566, title=None, item_type='comment', url=None, parent=25695769, text='Java started with the same concurrency primitives as Ada and Modula-3.<p>Java 5 got the concurrent package, with support for futures, chained computations, ability to create ou own schedulers, only matched by .NET dataflows.<p>Java 8, integrated the concurrent package with parallel streams.<p>Recent versions are being refactored so that eventually virtual threads are surfaced across all runtime, so instead of not knowing if green or red threads are being used like in the early Java days, the developers get to choose which ones to use.<p>On .NET side, naturally it copied the Java primitives, then came TPL, Dataflow, async&#x2F;await, PLINQ, F# agents, F# async&#x2F;await (not the same as standard async&#x2F;await, based on F# computations).Additionally there is the research done with Axum, CÏ‰, Singularity, Midori, Immutable C#.')