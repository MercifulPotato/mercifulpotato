Item(by='smarx007', descendants=None, kids=None, score=None, time=1609634188, title=None, item_type='comment', url=None, parent=25617862, text='You are right, Arch has a poor <i>product</i> experience.<p>On the other hand, I do not view those systems as products when it comes to professional use. A non-techie might see a Mac as a fancy laptop but for me it&#x27;s a tool. Just like an HSS cutting tool in a lathe, you&#x27;d carefully maintain it (you don&#x27;t want to use a dull cutting tool) and tune it. Just like you want to regrind a cutting tool depending on the part you are machining, I disable Intel Turbo Boost using <a href="http:&#x2F;&#x2F;tbswitcher.rugarciap.com" rel="nofollow">http:&#x2F;&#x2F;tbswitcher.rugarciap.com</a> when I run long perf evaluations of my programs for academic projects. If M1 based Macs will not allow me to disable their boost clock functionality, they will be unsuitable for my work <i>as a tool</i>. When that happens, you simply pick the most fitting tool. Not necessarily switching dev platforms, in this case a separate machine running Linux for the eval may be OK.<p>Regarding issue trackers, there are still some things I miss about Bugzilla after moving to Github issues such as sorting issues by two fields in order (eg first by prio and then milestone). I similarly like complex queries that can be saved in YouTrack. I will admit that 5 years ago I thought that Bugzilla was ugly (it still is) and not user-friendly (one of the worst) but now I simply see it as a professional tool that <i>does not get in my way</i> once I learn how to use it. On the other hand, most of the tools with proper UX (not all, most notably airplane cockpits have proper UX but still do not get in the way of a pilot doing their job including manual overrides for all kinds of malfunctions) have some &quot;user journey&quot; which gets in the way of almost every pro user.')