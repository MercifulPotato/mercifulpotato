Item(by='shireboy', descendants=None, kids=[25070410, 25071348, 25069966, 25069956, 25069989], score=None, time=1605189751, title=None, item_type='comment', url=None, parent=25069351, text='I’m a Dev doing mostly C# and JS.  I’ve heard some of the complaints on HN mentioning DI and really don’t get it.  I honestly feel like it makes my code cleaner and more testable.  For example, I don’t have to care where my IFooService comes from or how best to instantiate and dispose, I just request one in the constructor.  For a framework to be flexible, you need _some_ plugin capability. Asp.net seems to do pretty good at giving you nice defaults but letting you swap out with DI.  All my dependencies are laid out nicely in one place (Startup.cs) and then used throughout.  DI gives you that and I’m glad that it’s baked in now as opposed to having to pick a 3rd party.  Maybe I’m biased, though.  Help me understand why NOT to use DI? Is it just moving people’s cheese or are there other reasons?')