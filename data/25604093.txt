Item(by='sleavey', descendants=None, kids=None, score=None, time=1609516434, title=None, item_type='comment', url=None, parent=25603870, text='&gt; I&#x27;m interested in the application<p>I&#x27;m part of a team developing a scientific modelling tool. The user defines a model via syntax similar to SPICE&#x27;s netlists, specifying model objects and their parameters and connections. The nature of the type of simulation requires that the user runs the script over and over while tweaking various parameters, some by hand and some via optimization routines. We use the syntax as a way to serialize the complete state of the model, to be embedded in the generated results (the script size is negligible compared to the results). It is therefore a requirement that we can generate syntax from the model that, once re-parsed, results in the same model again - thus the need for forward and reverse parsing.<p>My current approach is to store the parsed AST as part of the model, then start from this (updating anything that was changed&#x2F;added&#x2F;removed in the meantime) when generating syntax.<p>&gt; I&#x27;m surprised there&#x27;s not more interest and work on making them two-way, for example, but that&#x27;s just one possible application.<p>I suppose it&#x27;s a combination of not many users typically wanting such a feature, the ease of storing a program&#x27;s state as a proprietary&#x2F;binary blob (Python&#x27;s pickle module for example), and the tight coupling such a system creates between syntax and objects: almost everything created by the parser should map 1:1 to syntax, even if modified by the user after parsing. One example of that last point: you might define some sort of axis via syntax, like `range(100, 200, increment=1)`. The parser then creates this axis as an array of 10 data points. But the user may also modify this in memory, e.g. adding `50` to the array, so it&#x27;s no longer a monotonic range. when you come to unparse you need to have some code to identify what this array represents (is it still a range? or a sequence with no order?), and generate corresponding syntax. That&#x27;s tricky and requires lots of code for this usually niche feature.')