Item(by='martinhath', descendants=None, kids=[24837795, 24838432], score=None, time=1603197154, title=None, item_type='comment', url=None, parent=24836281, text='&gt; Nobody forces beginners to write macros. Beginners are only macros _users_. With time and experience, the need for macros emerges by itself, then learning them is a natural part of the process. But even then, nobody is forced to write any.<p>Macros in Rust aren&#x27;t only confusing for beginners, because it has a completely different syntax (well, at least macro_rules! does; idk about proc macros) than the one you use for the rest of your program.<p>Even _if_ you draw the line between macro writers and users, you&#x27;ve effectively made macros a black box you&#x27;re not supposed to look into. Having trouble debugging anything related to a custom derive or a macro? Too bad, macro&#x27;s are hard. This is (a) not useful and (b) not necessary, as Zig clearly shows.<p>I think Rust made the C++ mistake of trying to accommodate everyone by having both low level control of things, but not too low level since that&#x27;s dangerous, so we&#x27;ll come up with some rules that you can&#x27;t break, and oh by the way the rules aren&#x27;t really ready yet, oh, and if you&#x27;re not used to dereferencing pointers, don&#x27;t worry we have this deref trait, what&#x27;s a trait you say? and so on and so on.<p>It&#x27;s effectively a barrier to entry, which, ironically, is a thing the Rust community tries really hard to combat.<p>If you mix a bunch of nice colors, blue, red, green, turqouise, purple, orange, eggshell white, you just get ... brown.')