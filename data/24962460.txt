Item(by='yokaze', descendants=None, kids=[24962550], score=None, time=1604264352, title=None, item_type='comment', url=None, parent=24962028, text='&gt; C++ templates are „untyped“ or very „weakly“ typed at the kindest, while Rust generics are „strongly“ typed.<p>Can you provide your definition of strongly typed?<p>According to my understanding, C++ templates are evaluated at compile time, and the resulting instance has to qualify all the static type checks of standard C++. The deduced types is always checked, and if there is no substitution fullfill the type check is found, it raises a compile error.<p>The errors are super ugly, as there are no type constraints for template parameters, but funnily enough the template errors in C++ reminded me of playing around with Haskell without using function declarations. I would find it odd to call Haskell though untyped or weakly typed because of that.')