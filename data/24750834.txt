Item(by='andromeduck', descendants=None, kids=None, score=None, time=1602468893, title=None, item_type='comment', url=None, parent=24750010, text='This is literally what what everyone does in embedded C land. The repetitive definitions ate generally intended to be used with macros and are typically generated from the same definitions as the chip registers itself. Some places also auto generate embedded c&#x2F;c++ structs or classes which imo is better. But I have gotten quite a bit of pushback for doing it.<p>A big issue also is the use of bitfields as much as reg duplication. Bitfields in c&#x2F;c++ are a minefield if you don&#x27;t lock down a known-good compiler version because there&#x27;s just so much of it that&#x27;s technically unspecified. Oftentimes you&#x27;ll also have issues where certain register fields exist for some registers of a series and not the next or where the functionality&#x2F;sizing&#x2F;interpretation is context dependent or where certain locks or write orders are needed for correct access and these are often handed with presence checking macros.<p>IMO, if we want better driver code, it&#x27;s time for GCC&#x2F;Clang to nail down the bitfield layouts for the embedded use cases. This has been broken for far too long.')