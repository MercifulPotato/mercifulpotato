Item(by='SassyGrapefruit', descendants=None, kids=[24689552, 24689422, 24689769], score=None, time=1601915184, title=None, item_type='comment', url=None, parent=24686527, text='&gt;I&#x27;ve always disliked Git&#x27;s squash feature, and here&#x27;s one of the many reasons to dislike it. Had this happened in a code base with a &#x27;nice history&#x27; (as the squash proponents like to present it), that small commit would have been bundled with various other commits.<p>This question always boils down to this metric. Which happen more often...<p>1. A circumstance arises where the dynamics of fine grained commits make the problem more obvious.<p>2. I have to interact with the git history<p>Now(and this is just me) I interact with the git history for one reason or another multiple times a day every day. I have been using git for 10+ years and I haven&#x27;t yet encountered the first circumstance yet. Its not to say I won&#x27;t encounter that circumstance and when I do I&#x27;ll probably pine for the fine grained commits that would make it stand out.<p>For me the clean, easily browsable history benefits me every day. Furthermore because of how often I have to use it I should optimize it heavily at the expense of just about anything else unless the benefits of that item can be realized with similar frequency. The access to fine-grained commits hasn&#x27;t helped me once in the 10 years I&#x27;ve been using git. With that calculus in mind I must conclude that I should squash the commits and pay the piper on the other thing when&#x2F;if that bill comes due.<p>EDIT: Imagine this. If clean browsable history saves me 5 minutes a day then it has saved me ~10,000 minutes since I started using git. That equates to 1 full time working month. I really can&#x27;t think of a circumstance where having access to fine grained commits would deliver a similar net savings.')