Item(by='kall', descendants=None, kids=None, score=None, time=1611765836, title=None, item_type='comment', url=None, parent=25927765, text='Cross platform is the obvious one. I think react native is &quot;good enough&quot; in app quality and tooling. I agree with most of your points. Developing a iOS only app is smoother sailing.\nThe 10-50% more effort it takes to make a good RN app can easily be offset by a) getting 2+ plattforms b) if you have &gt;10-50% more experience with JS and factor that into dev time&#x2F;quality.  The downsides and cross platform are covered, here‘s some other benefits:<p>- if you think swiftUI is better than AppKit you can use a mature framework in the same style and could have been doing so for years<p>- live feedback: SwiftUI previews and fast recompiles are garbage compared to React Fast Refresh which instantly updates the running app, on device, even preserving UI state half the time<p>- you can update the app outside of the app store, it may be against the rules or not but people do it all the time<p>- there are more medium quality but ready to go UI components out there. I was pretty shocked by that the last time I did iOS dev.<p>- Swift is a good language but Typescript is way more chill while still being a pretty good language<p>- personal opinion: simple animations in react native are not exactly perfect but coding custom CoreAnimation is way harder (for me)<p>- going from a random design that does not take iOS UI conventions or guidelines into account to an app that looks exactly the same is faster&#x2F;easier. Is that good? Idk but it‘s something agencies need to do all the time.')