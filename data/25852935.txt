Item(by='foerbert', descendants=None, kids=None, score=None, time=1611182464, title=None, item_type='comment', url=None, parent=25843062, text='I still find this view of programming languages to be too limited. It&#x27;s still very C-focused, in the sense that it seems to assume every language is trying to do the same things C is in roughly the same ways C does it.<p>Yet this just isn&#x27;t the limit of computers or programming languages. Consider Prolog or a Lisp. What meaningful abstraction do they provide to have a deep connection with a block of contiguous memory used to store multiple same-sized elements? I&#x27;m sure you&#x27;ll find such things ultimately used if you go deep enough, but it&#x27;s not a meaningful part of the abstraction the languages provide.<p>And if we can do away with the entire concept of a set of same-sized data stuffed into a contiguous block of memory, what need can there be to adhering to considering indexes as memory offsets?<p>The incredible amount of (possible) separation between programming languages and the exact way in which such programs are executed provides an extremely valuable and deep freedom in how programmers can think about and address problems and their solutions. I don&#x27;t see how insisting that we minimize any possible differences between language abstractions and common hardware practice gains us anything.')