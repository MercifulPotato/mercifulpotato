Item(by='tomlagier', descendants=None, kids=[25984138, 25984630, 25985630], score=None, time=1612138770, title=None, item_type='comment', url=None, parent=25983906, text='My last 3 consulting gigs have all had the same general issue - they went with the &quot;quick to start up&quot;, scalable solutions and immediately smacked into a brick wall of complexity. These are 1 to 3 person eng teams that started with serverless functions, NoSQL databases, and event-based architecture and not even 6 months down the line had to hire an expensive consultant to shake out their architecture and point them at something less scalable but more practical to build on at their size.<p>If they didn&#x27;t have VC, they&#x27;d likely die on the spot, drowned before they even had a shot at real product-market fit under the weight of their own accidental complexity.<p>Now, is there a set of common patterns that works well enough for startups to iterate quickly with, that _also_ scales? Probably. Can you be successful with NoSQL et al out of the gate? Almost definitely. Does it make it _much harder_? I have three anecdotal data points that point to &quot;yes&quot;.<p>From my work over the last year, I&#x27;d suggest &quot;choose boring technology&quot; over &quot;worry about scaling early&quot; 10 out of 10 times. You need something that scales _conceptually_ before it can scale in the cloud, if you don&#x27;t know what your core business value is or how your product actually works it&#x27;s really damn hard to build a cloud-native app that anyone can actually iterate on. You&#x27;re fighting incidental complexity every step of the way.<p>Maybe in 5 or 10 years, when the average developer has a wealth of experience in scaling technologies, when serverless functions have fewer dramatic downsides, when we start seeing out-of-the-box event driven full stack frameworks, when the bleeding sharp edges are sanded off NoSQL and we&#x27;ve figured out a good story around schemas and validation, then it starts to look more attractive for young companies. Until then, though? Stick with the boring stuff.<p>EDIT: Though, re-reading this, I suppose I should acknowledge my own survivorship bias - the companies that figured out their scalable, cloud-based tech stack early have no need for my consulting services...')