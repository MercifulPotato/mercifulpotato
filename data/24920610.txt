Item(by='Jtsummers', descendants=None, kids=[24920726], score=None, time=1603902031, title=None, item_type='comment', url=None, parent=24920332, text='This exposes one of the weaknesses of C and C++. Nesting functions inside functions is actually a very useful thing to avoid precisely what&#x27;s described, while still allowing code to be more readable. The inner functions can always be extracted later if deemed appropriate. So if C permitted it you could do something like:<p><pre><code>  void FullUpdate(...) {\n    void PartialUpdateA(...) {\n      ...\n    };\n    ...\n  }\n</code></pre>\nSo that function is only visible in this one scope, but where it&#x27;s used it can have the effect of greatly improving readability (especially if it&#x27;s called multiple times).<p>Now, C++ can halfway get there with private methods in classes. So anyone outside the class has to <i>really</i> try to break that encapsulation and access the function. C and C++ can get there by not exposing the functions in headers, so they remain file local.<p>But that doesn&#x27;t prevent something like (within a file):<p><pre><code>  &#x2F;&#x2F; should only be called from FullUpdate\n  void PartialUpdateA() {...}\n\n  void AnotherFunc() {\n    ...\n    PartialUpdateA();\n    ...\n  }</code></pre>')