Item(by='BenoitP', descendants=None, kids=[25035746], score=None, time=1604932453, title=None, item_type='comment', url=None, parent=25034538, text='Lots of talks about `Domains`. So I looked it up [1] and here is what this is about:<p>&gt; the virtual machine contains a number of domains, each running as a separate system thread in the same address space. Each domain has a relatively small local heap, and a large shared heap is shared between all domains. The local heaps are collected with OCaml’s existing minor collector (modified to use thread-local instead of global state), and long-lived objects are promoted to the shared heap.<p>&gt; We maintain the invariants that no domain ever follows a pointer to another domain’s local heap, and that immutable fields of objects on the shared heap only point to other objects on the shared heap. Mutable fields of objects on the shared heap may point to objects on a domain’s local heap, and we describe how reads of such fields are handled in Section 4.<p>&gt; Since local heaps are only ever accessed by a single domain, no synchronisation between threads is required when a domain collects its local heap. This allows us to sustain the high rate of allocation of short-lived objects that many OCaml programs exhibit.<p>[1] <a href="http:&#x2F;&#x2F;166.78.252.20&#x2F;meetings&#x2F;ocaml&#x2F;2014&#x2F;ocaml2014_1.pdf" rel="nofollow">http:&#x2F;&#x2F;166.78.252.20&#x2F;meetings&#x2F;ocaml&#x2F;2014&#x2F;ocaml2014_1.pdf</a>')