Item(by='rahoulb', descendants=None, kids=None, score=None, time=1608636838, title=None, item_type='comment', url=None, parent=25498079, text='My take on this (which I&#x27;ve not really thought through).<p>With O-O programming - the code itself is fine.  You&#x27;re breaking it up into smaller objects, each well defined, each with self-contained state.  Nice and easy.<p>The problem is the behaviour of the system isn&#x27;t defined in that code.  Instead it&#x27;s defined in the pattern of messages that are sent <i>over time</i> across different bits of code.  And because it&#x27;s temporal, that pattern isn&#x27;t written into the actual code itself - but to understand what the system is doing, you need to understand that pattern.<p>The same goes for micro-services.<p>Each individual service can manage its individual state, it can be architected and designed in the best way for that particular requirement.  But again, the behaviour of the system as a whole depends on how the different services interact (and just as importantly, fail - which is where transactions and other methods of coordinating across your code become important).<p>So (and I write this as a dyed in the wool O-O programmer), in both cases, the surface problem is solved but all we do is move it into a harder to observe place.')