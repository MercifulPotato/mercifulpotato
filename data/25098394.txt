Item(by='chefandy', descendants=None, kids=[25098977, 25098640], score=None, time=1605416494, title=None, item_type='comment', url=None, parent=25095972, text='Ugh. I&#x27;d love to switch to Linux, but as a designer, I&#x27;m stuck. It&#x27;s not a lack of understanding of how it worksâ€” Before I was a designer I was a developer, worked in IT for a while, worked in upper-level support for a while, and Linux was my primary personal and professional OS from the late 90s to like 2010.<p>Why don&#x27;t I just run a closed-source OS in a VM? They are fussy. Having some weird graphics tablet driver problem or something can really kill the creative connection between me and my work, and if I&#x27;m coming down to the wire on a deadline, it can cost me a contract.<p>What about tools that work natively on Linux? They generally just don&#x27;t work for professional design use. Whenever I say that, a billion people always jump in and say &quot;Gimp and VivaDesigner and Natron and XYZ and PDQ&quot; work fine for me,&quot; and to my astonishment, they always seem surprised that the same just isn&#x27;t true in most (any?) professional workflows. Sure, with varying amounts (usually non-trivial) of extra effort I can cobble together a disparate set of tools that might sometimes yield similar results to professional design programs, but it&#x27;s going to take significantly more work to produce possibly lower-quality results, and that&#x27;s just not an option for a pro. If you were hiring someone to craft the image of your company in a crowded, competitive marketplace, would you pay them more to take longer and potentially end up with a suboptimal product just because they were only using OSS to do it?<p>A software developer could feasibly use something like windows notepad or pine to achieve the same results as an IDE, or even a more powerful text editor like SublimeText. For many non-professionals, people just editing a config file, or people making the occasional shell script, it does work fine. Better even, considering that the extra baggage of complex tools would actually slow them down rather than speed them up.')