Item(by='redraga', descendants=None, kids=None, score=None, time=1606822966, title=None, item_type='comment', url=None, parent=25258651, text='I can&#x27;t comment on the economics of it but I can comment on the technical difficulties. The issue for x86 cores is keeping the ROB fed with instructions - no point in building a huge OoO if you can&#x27;t keep it fed with instructions.<p>Keeping the ROB full falls on the engineering of the front-end, and here is where CISC v RISC plays a role. The variable length of x86 has implications beyond decode. The BTB design becomes simpler with a RISC ISA since a branch can only lie in certain chunks in a fetched instruction cache line in a RISC design (not so in CISC). RISC also makes other aspects of BPU design simpler - but I digress. Bottom line, Intel and AMD might not have a large ROB due to inherent differences in the front-end which prevent larger size ROBs from being fed with instructions.<p>(Note that CISC definitely does have it&#x27;s advantages - especially in large code foot-print server workloads where the dense packing of instructions help - but it might be hindered in typical desktop workloads)<p>Source: I&#x27;ve worked in front-end CPU micro-architecture research for ~5 years')