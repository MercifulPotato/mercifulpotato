Item(by='effie', descendants=None, kids=None, score=None, time=1611094136, title=None, item_type='comment', url=None, parent=25838037, text='No, it is levels of security, not a white&#x2F;black issue. For some customers and providers, containered processes are enough isolation. For many small businesses, even shared hosting with chroot is enough.<p>Generally speaking, Xen or Firecracker VMs do have smaller attack surface than containered processes on a shared Linux kernel. But configuration and exposed capabilities matter - it is possible to have container better secured than a VM (e.g. minimal Zones&#x2F;jails env + correct MAC config vs. general Qemu&#x2F;VMware VM with many default legacy devices and bad&#x2F;no MAC config).<p>Motivated attackers can escape even these VMs. So they are not a magical solution.<p>Common hypervisors are too big and buggy to be pronounced as security panacea. From time to time, VM escapes resurface to public but most are probably guarded and being exploited in quiet. As we know after Spectre and Meltdown, standard computing technology is buggy&#x2F;bugged all the way down to hardware.<p>If you want <i>really</i> &quot;robustly secure&quot; server environment, such do exist: for example, separation kernels like the L4 family or the Green Hills INTEGRITY systems. But for web apps, almost nobody bothers.<p>&gt; No cloud provider will offer to run your containers alongside other customer&#x27;s containers, on a shared kernel. Your containers always run within your own VM.<p>Joyent does - via SmartOS zones.')