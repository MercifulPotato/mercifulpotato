Item(by='munchbunny', descendants=None, kids=[24838266], score=None, time=1603129074, title=None, item_type='comment', url=None, parent=24828153, text='CryptoApi is remarkably flexible and also really hard to use for a bunch of reasons:<p>1. It does a lot of things. It&#x27;s an OS API for talking to cryptographic hardware, including the TPM and smart cards, in addition to the API for doing run of the mill cryptographic operations using the OS&#x27;s implementation. That&#x27;s on top of serving as a primary way to load&#x2F;use certificates (through the Ncrypt API, but often you can&#x27;t entirely avoid dipping into CryptoAPI).<p>2. It&#x27;s really, really low level, meaning that you have to directly deal with the intersection of driver&#x2F;hardware behaviors, feature matrices, and data structure serialization&#x2F;packing.<p>3. It&#x27;s actually two API&#x27;s merged into the same set of function calls: CAPI, and CNG. Depending on which API is supported for your usage or supported by the hardware drivers, the behavior of the same API call might be subtly different.<p>4. It&#x27;s a C API with the classic Win32 API structure packing conventions, including the really fun conventions like &quot;allocate the buffer, pack the data structure, and set the offsets yourself without an API to do it for you&quot; convention, and also the &quot;call a function with a null data pointer to get the size of the buffer you need, and then allocate that buffer and call it again to actually do the work&quot; convention.<p>5. Because it&#x27;s so low level and nobody uses it, there&#x27;s very little documentation on how to troubleshoot errors when you do things wrong, and the API is complex enough that you <i>will</i> do it wrong, and then you will spend a few days just trial-and-error-ing your way out of that hole. There are a lot of places in the API&#x27;s where in order to know how to do something, you need to look up the behavior of the component you&#x27;re talking to on the device&#x2F;provider side of the API, but those providers are often under-documented.<p>Most developers should try to avoid using it because it&#x27;s so easy to mess up. The API is extremely powerful, but it&#x27;s also more of a footgun than it should be.')