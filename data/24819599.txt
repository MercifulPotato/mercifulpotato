Item(by='nullc', descendants=None, kids=None, score=None, time=1603042629, title=None, item_type='comment', url=None, parent=24819241, text='It&#x27;s not a big step up when the software was written by a single person who did it to learn rust and doesn&#x27;t understand the problem domain, over a weekend.  Software doesn&#x27;t need to use unsafe blocks to have dangerous bugs and vulnerabilities.<p>I would take openssl over most (though not all, for sure) rust cryptographic code. OpenSSL&#x27;s bugs have not been RCEs for the most part, and many of them could happily exist in rust.  The cult like perspective that language choice can make software automatically safe in the absence of things like domain expertise or long term production usage increases risk even where the language itself theoretically reduces them. ( See also: <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Risk_compensation" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Risk_compensation</a> )<p>Especially with the deeply nested dependencies the rust ecosystem seems to me like a ticking time bomb for security disasters.  The same bad practices exist in NPM and have already produced a number of high profile incidents, as it repeats in rust there really won&#x27;t be any excuse but to admit that it resulted from an excess of hubris.')