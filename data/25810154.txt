Item(by='permille42', descendants=None, kids=[25811464, 25812485, 25812566], score=None, time=1610886262, title=None, item_type='comment', url=None, parent=25809761, text='There is no &quot;either-or&quot; data type in Golang. That&#x27;s why.<p>It can only be accomplished by inefficient functional hackery.<p>In C, you just make a struct, have a type present in the struct, and then cast the struct pointer to extended object types to gain additional functionality.<p>In this way you can easily accomplish all sorts of fun things like inheritance. Message passing type designs can easily be accomplished also in C.<p>In Golang? Well... no. You are essentially forbidden from doing any simple casting or extension. You are essentially stuck with hardcoding the crap out of everything or making your own vcall like system build out of Golang types... which you can&#x27;t really use in the way you want unless you use reflection.<p>What I can&#x27;t understand is why anything thinks that Golang does support polymorphism. They admit it themselves. They are working on it. Only the new alpha test versions have a solution for it. The current released version is not polymorphism no matter how much you want to fucking label it that way.<p>You can&#x27;t just go &quot;hey it supports a little bit of what everyone knows as polymorphism&quot;. That&#x27;s like saying alcohol is like orange juice because they are both bitter in some cases.')