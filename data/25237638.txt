Item(by='joncampbelldev', descendants=None, kids=None, score=None, time=1606573263, title=None, item_type='comment', url=None, parent=25237558, text='So for the consultant: Yes he did, clearly this consultant was an absolute disaster. An excellent cautionary tale of arrogance combined with lack of ability and design thinking. Changes made without thought &#x2F; design or discussion with the team are unlikely to be &quot;improvements&quot;, unless they&#x27;re being made by someone intimately familar with the codebase (which an outside consultant cannot be).<p>For your second point, I don&#x27;t really see the applicability of this specific concept of the boy scout rule to the situation of &quot;business critical code that is in such a bad state the whole team agrees it should be rewritten&quot;.<p>However, were I to try to apply the concept to your situation, the first question to ask is &quot;why are people afraid to change the code?&quot;. There&#x27;s usually 2 reasons for this. Firstly, the code and the problem are super complex and hard to understand, this just takes a lot of time, to develop the knowledge and intuition around the code. Secondly, the code lacks tests (unit &#x2F; intergration &#x2F; functional &#x2F; manual spreadsheet of test cases) that assert the behaviour you expect. Therefore my (unasked for and probably already known to you) suggestions for &quot;leaving it cleaner than you found it&quot; would be to make a start on understanding the code better through a series of very very very small refactorings. Pick one tiny function that is a mess and clean it up. At the same time, ensure your changes are correct by asserting all expected behaviour of that function.<p>If you are now saying &quot;duh of course&quot; well thats the point. I do not think a single reasonable person would suggest that a full rewrite of a complex business critical system that is either poorly understood, poorly tested or both is a charitable interpretation of what the article is talking about.<p>At the end of the day it is super easy to shoot down any idea or concept in programming, because we have so much power to abuse and ruin anything day to day if we&#x27;re not careful. It&#x27;s the easiest thing in the world to take a machete to a codebase without thought. But the problem there is the person holding the machete, they can&#x27;t be trusted with it. I cannot think of a single thing that wouldn&#x27;t be misinterpreted or done badly by some of the terrible coders I&#x27;ve met during my career.')