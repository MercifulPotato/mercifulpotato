Item(by='tshaddox', descendants=None, kids=None, score=None, time=1604957947, title=None, item_type='comment', url=None, parent=25039940, text='I understand the distinction you&#x27;re making, but I think it&#x27;s fuzzier than you seem to think. Yes, GraphQL responses tend to go over the wire in a format without any type checking (like JSON). But GraphQL tooling and libraries can use GraphQL schemas to ensure that application code that consumes GraphQL responses will never see a value with a type that contradicts the GraphQL schema.<p>GraphQL tooling cannot literally prevent JSON from having a string value where there&#x27;s supposed to be a number value, but it can ensure that application code never has runtime type errors. Is that &quot;validation rather than type checking&quot;? Sure, I suppose so, but my application code that consumes GraphQL responses will either get some representation of an error, or a representation of a successful response that is guaranteed to have the types I expect.<p>And yes, there are plenty of other data formats and tools that provide the same sort of thing: some representation of a schema, some non-application code that checks runtime data against that schema, and a contract with the application code that each response will be either an error or a type-safe successful response.')