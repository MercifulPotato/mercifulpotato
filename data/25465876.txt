Item(by='medlyyy', descendants=None, kids=[25466123], score=None, time=1608288676, title=None, item_type='comment', url=None, parent=25464151, text='I would say it&#x27;s a few things at once. GPUs now have pretty much general purpose compute, and they&#x27;re typically memory-bandwidth bound more than compute bound. So - the paper &amp; article briefly talk about - for example temporal reprojection&#x2F;accumulation in order to get enough samples (see figure 3 in paper) and applying extra compute (filters) using the information already locally available to increase image quality while having no effect on performance due to the memory bandwidth limitation.<p>You can see what this accumulation looks like for CP2077&#x27;s SSAO in this Gamer&#x27;s Nexus video: <a href="https:&#x2F;&#x2F;youtu.be&#x2F;zUVhfD3jpFE?t=960" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;zUVhfD3jpFE?t=960</a> He attributes it to TAA but to me it looks like a clear example of the exact temporal accumulation technique described by the GTAO paper in order to get samples performance-efficiently.<p>This (&quot;free&quot; compute due to memory bottlenecks) is true for the last-gen consoles as well as modern cards.<p>So rather than a storage limitation, it&#x27;s more a limitation of being able to get the data from system memory or even on-card GPU memory to the GPU cores fast enough since the cores now process it so quickly. A general increase in resolution of textures and towards 1440p and 4K displays has not helped with that issue.<p>Going along with that is a general trend towards PBR (physically based rendering) in all fields that use computer graphics - film&#x2F;tv, 3D modelling, design, games.<p>The PBR philosophy is generally anti using tricks &amp; hacks where possible. The reasons why are the reasons that PBR has been so widely (almost universally) adopted: PBR makes it easy for artists to create consistent and robust results, using understandable methods that mostly work how you would intuitively think they should, and the results automatically look good and are interoperable since there is a clear target - to emulate real light transport, materials and so on.<p>It&#x27;s simply not feasible (or at the very least extremely costly in artist&#x2F;dev labour) to be manually designing bespoke tricks to get each individual scene to look right. It&#x27;s a &quot;let the computer do the work&quot; type of philosophy, which Cyberpunk seems to follow since they didn&#x27;t even seem to include manually placed occlusion planes, for example (going by the original article).<p>So it&#x27;s a combination of the hardware now being capable of it, having gradual software&#x2F;algorithmic improvements to get better approximations to correct lighting, and a relatively wholesale overhaul of the entire graphics pipeline toward PBR, due to its substantial benefits. Then, since the PBR approach is highly compatible with ray-tracing inherently, ray tracing is the cherry on top, for now still only usable on top end hardware for realtime games.')