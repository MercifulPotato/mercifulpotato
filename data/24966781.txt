Item(by='Joker_vD', descendants=None, kids=[24974237], score=None, time=1604315622, title=None, item_type='comment', url=None, parent=24964584, text='So basically, &quot;if you don&#x27;t use newtype to implement an abstract data type, you don&#x27;t get any type safety because the on-spot wrapping&#x2F;unwrapping is still possible&quot;.<p>On one hand, yes. On another, no. I am working right now on a Go codebase with lots of newtypes (well, the Go&#x27;s equivalent), and they&#x27;re generally casted to&#x2F;from underlying primitive types basically in two places: when they&#x27;re serialized into JSON, and where they&#x27;re deserialized from JSON. And in several places in the middle of the code where you need an explicit cast, well, the cast is explicit. You actually have to consider it.<p>Mind you, in Go it&#x27;s almost impossible to hide the newtype&#x27;s constructor unless you jump through some rather unintuitive hoops. Is Go fundamentally type-unsafe? I don&#x27;t think it is, although I sometimes wish some structs were impossible to zero-initialize. Then again, that&#x27;s generally amended by unexporting the struct and exporting its interface instead.')