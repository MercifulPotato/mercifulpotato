Item(by='ReactiveJelly', descendants=None, kids=None, score=None, time=1605924542, title=None, item_type='comment', url=None, parent=25166724, text='<a href="https:&#x2F;&#x2F;www.datamation.com&#x2F;entdev&#x2F;article.php&#x2F;616221&#x2F;How-We-Learned-to-Cheat-at-Online-Poker-A-Study-in-Software-Security.htm" rel="nofollow">https:&#x2F;&#x2F;www.datamation.com&#x2F;entdev&#x2F;article.php&#x2F;616221&#x2F;How-We-...</a><p>&gt; recall that the seed for a 32-bit random number generator must be a 32-bit number, meaning that there are just over 4 billion possible seeds. Since the deck is reinitialized and the generator re-seeded before each shuffle, only 4 billion possible shuffles can result from this algorithm. Four billion possible shuffles is alarmingly less than 52!.<p>&gt; To make matters worse, the algorithm of Figure 1 chooses the seed for the random number generator using the Pascal function Randomize(). This particular Randomize() function chooses a seed based on the number of milliseconds since midnight. There are a mere 86,400,000 milliseconds in a day. Since this number was being used as the seed for the random number generator, the number of possible decks now reduces to 86,400,000. Eight-six million is alarmingly less than four billion. But that&#x27;s not all. It gets worse.')