Item(by='mac01021', descendants=None, kids=None, score=None, time=1603900870, title=None, item_type='comment', url=None, parent=24917881, text='The imperative shell could be something like<p><pre><code>    while not is_closed(state) {\n        (mouse_activity, kbd_activity) := get_mouse_and_kbd() &#x2F;&#x2F;blocking call\n        (state, is_modified) := update(state, mouse_activity, kbd_activity)\n        if (is_modified) {\n            draw(state)\n        }\n    }\n</code></pre>\nThere is no reason that `update` and every function it calls cannot be pure.  The state will have to include undo and redo histories, an indicator of the active mode, so that you might be in one mode while you&#x27;re entering text, a different mode while you&#x27;re dragging out a line or a shape, etc.  It will include information about what drawing tool you have selected and what colors you&#x27;ve chosen for your ink and eraser.  All that data will be used by the draw procedure to render the correct view of the state.<p>The one issue here is that once your state gets to a certain level of complexity, as it certainly does in ms paint, it&#x27;s not going to be performant without immutable &quot;persistent&quot; data structures, which are either not available or not widely used in python&#x2F;js&#x2F;ruby&#x2F;c.<p>If you&#x27;re thinking i haven&#x27;t achieved the goal here because the draw procedure is big and complicated and imperative, then maybe we need to replace<p><pre><code>    draw(state)\n</code></pre>\nwith<p><pre><code>    view := render(state)\n    draw(view)\n</code></pre>\nwhere render is pure and does almost all the work.  But I&#x27;ll leave thinking about what render looks like as an exercise for the reader (or to be described by an HN user who knows more about graphics programming than I do)')