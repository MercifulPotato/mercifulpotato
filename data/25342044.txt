Item(by='creata', descendants=None, kids=[25342318], score=None, time=1607403529, title=None, item_type='comment', url=None, parent=25341793, text='&gt; You need union types if you have subtyping to avoid wrapping&#x2F;unwrapping all the time.<p>In my experience, the option types are always more concise. That&#x27;s mostly because having option types encourages people to build out nice helper functions like these[0] and these[1]. Haskell&#x27;s do notation and Rust&#x27;s Try notation also save a lot of space.<p>[0]: <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;option&#x2F;enum.Option.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;option&#x2F;enum.Option.html</a><p>[1]: <a href="https:&#x2F;&#x2F;hackage.haskell.org&#x2F;package&#x2F;base-4.14.0.0&#x2F;docs&#x2F;Control-Monad.html" rel="nofollow">https:&#x2F;&#x2F;hackage.haskell.org&#x2F;package&#x2F;base-4.14.0.0&#x2F;docs&#x2F;Contr...</a>')