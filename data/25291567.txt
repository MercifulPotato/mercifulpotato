Item(by='ryanbooz', descendants=None, kids=None, score=None, time=1607016421, title=None, item_type='comment', url=None, parent=25290405, text='Great summary, thanks!<p>The two main things most developers will benefit from is how we manage the automatic partitioning of your incoming data (hypertables), something which is non-trivial to do yourself even though other tools exist for it. And because we do it with a time-based focus, we can be really efficient and smart about it.<p>Second, we&#x27;ve improved the query planner in PostgreSQL around the parts that relate to querying time-based, partitioned data, and provided special time-based functions. These improvements help you efficiently query data that time-series applications most often need. A quick example is something like &quot;LAST()&quot;, which retrieves the most recent value for a given time-range. There are ways in SQL to do something similar (LATERAL JOINs or CTEs for instance), but they&#x27;re usually slower and bulkier to maintain. When dealing with time-series data, getting the most recent value for an object is usually what you&#x27;re doing the most often.<p>When you add those two foundational features, everything else that @drpebcak mentioned become amazing value-adds that you just can&#x27;t get elsewhere.')