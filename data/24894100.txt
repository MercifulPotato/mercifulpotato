Item(by='culturedsystems', descendants=None, kids=[24897037, 24895459], score=None, time=1603702852, title=None, item_type='comment', url=None, parent=24894016, text='Indeed, I think this post ends up being a good argument against Lisp. The supposed negative for JS, as opposed to Lisp, is that &quot;Weâ€™d need something like Babel to parse our file, and work on top of the AST to make sure we rewrite our code safely.&quot; And? Computers are good at parsing, and adding syntax to a language should be comparatively rare, so why would I choose a language that optimizes for this case, rather than one which optimizes for human readability?<p>I think some people will argue that macros shouldn&#x27;t be rare, that you should define a custom DSL for each application so you can work at a higher level of abstraction. However, macros themselves operate at a fairly low level of abstraction (operating on the AST, rather than closer to the problem domain). I would argue that if you find yourself using macros frequently, that&#x27;s a sign your language is lacking in higher-level abstraction capabilities.')