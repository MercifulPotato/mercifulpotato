Item(by='pwdisswordfish4', descendants=None, kids=None, score=None, time=1603283681, title=None, item_type='comment', url=None, parent=24846774, text='A large part of this comes down to the venue.  The early part of GitHub really exemplified the &quot;move fast and break things&quot; mentality.  GitHub broke the software world&#x27;s ability to grapple with bugs, both in <i>affordances</i> i.e. the tools that it exposes for managing them, and, it would seem, <i>cognitively</i>.  The way that GitHub approached bug tracking is one of the most frustrating examples of throwing away all progress just to start over from scratch and ignore everything that came before.<p>A majority of GitHub&#x27;s users&#x27; first experience interacting with a bug tracker was probably on GitHub, so they never really knew any better.  The rest seem to be experiencing some collective amnesia about how to effectively file and otherwise triage&#x2F;manage bugs.  Basically none of the issues ever stumbled upon start with a clear and anodyne set of steps to reproduce.  Every &quot;issue&quot; is a <i>conversation</i>.  (And this seems to be not only tolerated but encouraged.  It&#x27;s madness.)  About half are support requests, maybe more.  Even when GitHub is used &quot;correctly&quot; to file bona fide bugs, on the whole, project maintainers seem to treat it as a general intake area for <i>everyone else</i> to file issues, and the project authors themselves hardly use it as their own database for known bugs.  They&#x27;re all jotting down vague descriptions in a text file that stays on their local machine or something, who knows.<p>The entire phenomenon and attitude has to be one of the top 5 most annoying things about software development in 2020.')