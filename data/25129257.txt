Item(by='coldpie', descendants=None, kids=None, score=None, time=1605644539, title=None, item_type='comment', url=None, parent=25129118, text='Yes, definitely. You only need explicit lifetimes for when it&#x27;s impossible for the borrow checker to figure out the lifetimes for itself. For example if one struct references another, the borrow checker can&#x27;t know which struct should outlive the other. The vast majority of the time, the borrow checker can figure it out automatically without your help. It&#x27;s discussed here[1] but note that it&#x27;s Chapter 10 of the book, so it&#x27;s probably not the best place to start reading if you&#x27;re new to Rust :)<p>[1] <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch10-03-lifetime-syntax.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch10-03-lifetime-syntax.html</a><p>E: There are only three instances of using explicit lifetimes in the entirety of the project I linked, if you want to see some real-world examples of it. In all of these, it is used to indicate that the struct being declared references another struct which must outlive that struct. That way we don&#x27;t end up with a dangling reference if the referenced struct failed to outlive this struct.<p><a href="https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&#x2F;blob&#x2F;proton_5.13&#x2F;media-converter&#x2F;src&#x2F;audioconv.rs#L406" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&#x2F;blob&#x2F;proton_5.13&#x2F;med...</a><p><a href="https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&#x2F;blob&#x2F;proton_5.13&#x2F;media-converter&#x2F;src&#x2F;videoconv.rs#L133" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&#x2F;blob&#x2F;proton_5.13&#x2F;med...</a><p><a href="https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&#x2F;blob&#x2F;proton_5.13&#x2F;media-converter&#x2F;src&#x2F;videoconv.rs#L433" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&#x2F;blob&#x2F;proton_5.13&#x2F;med...</a>')