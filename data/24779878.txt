Item(by='qsort', descendants=None, kids=None, score=None, time=1602700051, title=None, item_type='comment', url=None, parent=24779529, text='I&#x27;m familiar with Knuth&#x27;s argument. That argument was primarily based on the fact that it&#x27;s hard to replicate the exact control flow of a goto statement with structured programming. While the argument certainly has merit (a relatively more recent example is Duff&#x27;s device), 2020 compilers are more often than not able to find the most optimal structure anyway, making it largely redundant. It&#x27;s like saying programs should be allowed to rewrite their machine code just because in a Von Neumann architecture you are technically allowed to, there is a point but it&#x27;s not in contradiction with goto statements being mostly the inferior way to solve the problem.\nFrom a 2020 perspective I&#x27;d argue that if you really need that kind of performance you are probably already inlining assembly, so it&#x27;s kind of a moot point.<p>&gt; gotos and state machines (which are considered best practices) are basically equivalent<p>WTF? State machines can be implemented in a lot of ways: mutually recursive calls, pattern matching, function pointers... In what sense are they &quot;equivalent&quot; to gotos? Also what does it mean that state machines &quot;are considered best practices&quot;?')