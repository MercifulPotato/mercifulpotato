Item(by='johnchristopher', descendants=None, kids=[25335879], score=None, time=1607365820, title=None, item_type='comment', url=None, parent=25335158, text='No, I copied the code from a magazine as a kid, I literally read the code, line by line, and typed it on my computer. It was maybe 100 or 200 lines of code of BASIC.<p>The game only took YES and NO as an answer (starting with `is it a living thing` I think). Then, if you had already played the game, it would read the next questions from a flat file that corresponds to your latest answer and moved on to narrow down the answer (or rather the last question in the tree).<p>If it ran out of questions to ask for (the last question in the tree has no answer or no next question) it would give up and ask for what you had in mind and the question that would differentiate what you had in mind from the latest possibility.<p>Then at the next play, you would find the same question if you went along the same path and now it would know what you were thinking about.<p>I don&#x27;t know if q20 is better than that. It just reminded me of that game.<p>edit: see here <a href="https:&#x2F;&#x2F;www.atarimagazines.com&#x2F;v4n12&#x2F;Animal.html" rel="nofollow">https:&#x2F;&#x2F;www.atarimagazines.com&#x2F;v4n12&#x2F;Animal.html</a><p><pre><code>   The game&#x27;s intelligence is rooted in a tree-like knowledge structure. Each point where the tree has &quot;branches&quot; (or nodes) consists of three bits of information-a question to ask, a YES branch, and a NO branch. The terminations (tips) of the branches consist of a single bit of information-in this case, an animal.\n   During play, the program branches through the tree from the bottom to the top, stopping at each node to ask a question and branching according to the user&#x27;s response. When it reaches a termination, its guess is the animal it finds there.\n   When the computer guesses incorrectly, the tree &quot;grows&quot; by creating a new node at the termination. Remember that a node is formed of a question, a YES branch, and a NO branch. To create the new node, the program uses the question you provide. It then places the new animal you have given it at the termination of the YES branch. The animal that was at the old termination gets pushed up the NO branch. Thus, what was previously a single termination becomes a node with two terminations, and the tree grows a little taller.\n   To get Animal Intelligence to work properly in BASIC, a language which lacks list processing ability, I had to divide the knowledge base into three parts. The first and second are simulated string arrays-AX$ holds the animals, and QX$ holds the questions. The third part, TREE$, is the knowledge tree.\n   Though it is an ordinary string, TREE$ functions as a matrix of pointers. Every three bytes comprise a node or termination. The first byte of a node is a pointer to a question held in QX$. The second and third bytes point to the YES branch and NO branch respectively The first byte of a termination is a pointer to an animal held in AX$, while the second and third bytes are just dummies at the start. Later they will be used as pointers when the termination grows into a node.\n   Animal Intelligence isn&#x27;t limited to animals, however. With some simple modifications, I&#x27;ve created knowledge bases of plants, rocks and minerals, even famous people. Kids seem to especially enjoy the program. And as an educator, I can attest to its value as a tool for learning.\n</code></pre>\nHere&#x27;s the source code for one variant <a href="https:&#x2F;&#x2F;www.animalgame.com&#x2F;play&#x2F;misc&#x2F;source.php" rel="nofollow">https:&#x2F;&#x2F;www.animalgame.com&#x2F;play&#x2F;misc&#x2F;source.php</a>:<p><pre><code>    100 &amp;&quot;PLAY &#x27;GUESS THE ANIMAL&#x27; WITH RSTS\n    150 &amp;&quot;THINK OF AN ANIMAL AND THE COMPUTER WILL TRY TO GUESS IT...&quot;:&amp;\n    500 DIM A$(200)\n    525 F$=&quot;ANIMAL.GME&quot;\n     :ON ERROR GOTO 700\n    550 OPEN F$ FOR INPUT AS FILE 1%\n     :INPUT #1%,N%\n     :INPUT #1,A$(I%) FOR I%=1%TO N%\n     :CLOSE 1%\n     :A$(0%)=NUM$(N%)\n     :ON ERROR GOTO 0\n     :GOTO 1300\n    700 ON ERROR GOTO 1050\n     :F$=&quot;$&quot;+F$\n     :RESUME 550\n    1050 READ A$(I%) FOR I%=0% TO 3%\n    1100 DATA &quot;4&quot;,&quot;\\QDOES IT SWIM\\Y2\\N3\\&quot;,&quot;\\AFISH&quot;,&quot;\\ABIRD&quot;\n    1300 INPUT &quot;ARE YOU THINKING OF AN ANIMAL&quot;;Z9$\n     :GOTO 1350 IF LEFT(Z9$,1%)=&quot;Y&quot;\n     :GOTO 4000 IF  LEFT(Z9$,1%)=&quot;N&quot;\n    1310 IF Z9$=&quot;SAVE&quot; THEN\n      OPEN &quot;ANIMAL.GME&quot; FOR OUTPUT AS FILE 1%\n      :PRINT #1%,A$(I%) FOR I%=0% TO VAL(A$(0%))\n      :PRINT #1,CHR$(26%)\n      :CLOSE 1%\n      :GOTO 1300\n    1320 IF Z9$=&quot;LIST&quot; THEN\n     PRINT &quot;ANIMALS I ALREADY KNOW ARE:&quot;\n     :PRINT RIGHT(A$(I%),3%), IF INSTR(1%,A$(I%),&quot;\\A&quot;) FOR I%=1% TO 200%\n     :PRINT\n     :GOTO 1300\n    1330 &amp;&quot;PLEASE RESPOND &#x27;YES&#x27;, &#x27;NO&#x27;, &#x27;SAVE&#x27;, OR &#x27;LIST&#x27;&quot;:GOTO1300\n    1350 K%=1%\n    1400 K%=FNA%(A$(K%))\n     :GOTO 3000 IF LEN(A$(K%))=0%\n     :GOTO 1400 IF LEFT(A$(K%),2%)=&quot;\\Q&quot;\n     :PRINT &quot;IS IT A &quot;RIGHT(A$(K%),3%);\n     :INPUT Z7$\n     :Z7$=LEFT(Z7$,1%)\n    1450 IF Z7$=&quot;Y&quot; THEN \n      PRINT &quot;WHY NOT TRY ANOTHER ANIMAL&quot;\n     :GOTO 1300\n    2000 INPUT &quot;THE ANIMAL YOU WERE THINKING OF WAS A &quot;;Z9$\n    2050 PRINT &quot;PLEASE TYPE IN A QUESTION THAT WOULD DISTINGUISH A &quot;\n     Z9$ &quot; FROM A &quot;RIGHT(A$(K%),3%)\n     :INPUT Z8$\n    2100 PRINT &quot;FOR A &quot;Z9$&quot; THE ANSWER WOULD BE&quot;;\n     :INPUT Z7$\n     :Z7$=LEFT(Z7$,1%)\n     :IF Z7$=&quot;Y&quot; THEN Z6$=&quot;N&quot;\n      ELSE IF Z7$=&quot;N&quot; THEN Z6$=&quot;Y&quot;\n      ELSE PRINT &quot;PLEASE ANSWER &#x27;YES&#x27; OR &#x27;NO&#x27;&quot;\n      :GOTO 2100\n    2200 Z1%=VAL(A$(0%))\n     :A$(0%)=NUM$(Z1%+2%)\n     :A$(Z1%)=A$(K%)\n     :A$(Z1%+1%)=&#x27;\\A&#x27;+Z9$\n     :A$(K%)=&quot;\\Q&quot;+Z8$+&quot;\\&quot;+Z7$+NUM$(Z1%+1%)+&quot;\\&quot;+Z6$+NUM$(Z1%)+&quot;\\&quot;\n    2300 GOTO 1300\n    3000 DEF FNA%(Q$)\n     :PRINT MID(Q$,3%,INSTR(3%,Q$,&quot;\\&quot;)-3%);\n     :INPUT Z9$\n     :Z9$=LEFT(Z9$,1%)\n     :Z9$=&quot;N&quot; IF Z9$&lt;&gt;&quot;Y&quot;\n     :Z1%=INSTR(3%,Q$,&quot;\\&quot;+Z9$)+2%\n     :Z2%=INSTR(Z1%,Q$,&quot;\\&quot;)\n     :FNA%=VAL(MID(Q$,Z1%,Z2%-Z1%))\n     :FNEND\n    4000 &amp;:&amp;&quot;O.K.  SEE YOU LATER.  HOPE YOU HAD FUN PLAYING!!&quot;:&amp;:&amp;\n    9999 END</code></pre>')