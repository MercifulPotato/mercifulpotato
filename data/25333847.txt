Item(by='q3k', descendants=None, kids=[25334021, 25337019], score=None, time=1607359608, title=None, item_type='comment', url=None, parent=25333658, text='4 CRs stacked on eachother in Gerrit. It&#x27;s that one killer feature of Gerrit that you cannot live without in other systems once you realize how powerful it is. Phabricator&#x27;s Differential also does this, but it&#x27;s comparatively extremely janky.<p>You literally just push four stacked commits to refs&#x2F;for&#x2F;master, they end up as 4 separate Change Requests (equivalent to what others call Pull Requests, each with a separate review process), each one explicitly marked as being dependent on another, and showing a diff only against  that particular other base CR as if it were merged onto the target branch already.<p>Practically this just means you push your current HEAD to refs&#x2F;for&#x2F;master, Gerrit will take care of automatically creating all CRs for you and print out their URLs. Done. Ready for review.<p>Then, to update any of them, just amend them locally (address code reviews, rebase stack on top of current master&#x2F;main,  ...), make sure they&#x27;re still stacked on eachother in Git (as four commits), and push them all again to the same endpoint. Gerrit will automatically update all affected CRs. It will deduce the intended order and state of CRs based on the local Git history pushed, mapping all commits to existing CRs based on the Change-Id present in each commit (automatically generated by Gerrit&#x27;s local git hook).<p>None of the hacks that other siblings comments mention are required. It just works.')