Item(by='jorangreef', descendants=None, kids=None, score=None, time=1611658099, title=None, item_type='comment', url=None, parent=25908501, text='&gt; O_DIRECT is not a safe way to recover from the journal if you have decided you cannot trust fsync to do its job, because you need fsync to make O_DIRECT write-cache durable.<p>I was specifically referring not to an fsync in your sense (where the disk or fs does not respect fsync at all so that fsync is a no-op, or where the fs has a bug with O_DIRECT not flushing if it sees nothing dirty in the page cache - by the way I think this is no longer an issue, otherwise it&#x27;s a kernel bug you can report)<p>...but to handling an fsync error in the context of the paper from WISC that I linked to in that parent comment, where the kernel&#x27;s page cache has gone out of sync with the disk after an fsync EIO error (&quot;Fsyncgate&quot;):<p>&quot;when the page cache can no longer be trusted by the database to be coherent with the disk: <a href="https:&#x2F;&#x2F;www.usenix.org&#x2F;system&#x2F;files&#x2F;atc20-rebello.pdf" rel="nofollow">https:&#x2F;&#x2F;www.usenix.org&#x2F;system&#x2F;files&#x2F;atc20-rebello.pdf</a>&quot;<p>The details are all in the paper. Sure, some disks may not respect fsync, but O_DIRECT is still the only way to safely read and recover from the journal when the kernel&#x27;s page cache is out of sync with the disk (again, details in the paper). It&#x27;s another fantastic paper out of WISC.')