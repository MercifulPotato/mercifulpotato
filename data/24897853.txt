Item(by='proverbialbunny', descendants=None, kids=[24897929], score=None, time=1603729474, title=None, item_type='comment', url=None, parent=24895395, text='I&#x27;m surprised this article doesn&#x27;t talk about the common issue with writing a trading bot in Java, which is the floating point types.  I worked on a trading bot in Java over a decade ago when it was common in the industry to do so.  We wrote a fixed precision decimal library which was about 4x faster than the alternative BigDecimal type.  It worked out quite well, but Java doesn&#x27;t allow operator overloading, so the whole code base looked like a mess with tons of a.mul(b.add(c)) looking lines of code.<p>When C++14 came out the project was ported to C++.  It needed to go fast, but more importantly it needed to be stable and readable.  An error in code could cost us, which wasn&#x27;t something we could accept.  Moving to modern C++ wasn&#x27;t fun, but the code is clean, easy to read, works and works well.<p>Today, the code base has started to be ported to Rust, but unlike going from Java to C++, this move isn&#x27;t as big of a deal, but the added safety is appreciated given the nature of the project.<p>Today it&#x27;s pretty common for firms to create their own lisp like or Haskell like programming language.  By having it FPP it can mirror mathematics a bit closer which reduces bugs, yet by having it in house it can be fast, otherwise these companies would use a common language.  We are the only ones I know of moving towards Rust.  I imagine a lot of firms who are aready C++ are going to stay with modern C++.')