Item(by='geekuillaume', descendants=None, kids=None, score=None, time=1605971470, title=None, item_type='comment', url=None, parent=25147919, text='I encountered this problem on my project Soundsync. It&#x27;s controlled by a webpage that needs to connect to every Soundsync peer on the current local network. I couldn&#x27;t use HTTP as I need to instantiate an AudioWorklet (which has the same security requirements as a WebWorker). The big browser warning of a self-signed HTTPS certificate is a deal-breaker for a lot of non tech-savy users (which are my target).<p>In the end, I used WebRTC from an external HTTPS webpage I&#x27;m hosting and a &quot;mailbox&quot; service where two peers can post and retrieve messages from a UUID. To communicate this UUID on the local network to the peer, I first used an &lt;img&gt; tag with the UUID in the URL query string but this method was recently broken because of increased security measures by browsers. I now use two methods:<p>- Bonjour: Every peer listen for every bonjour request on the network, on the webpage I make a request to <a href="https:&#x2F;&#x2F;soundsync-UUID.local&#x2F;" rel="nofollow">https:&#x2F;&#x2F;soundsync-UUID.local&#x2F;</a>. The peer then extract the UUID from the request and connect<p>- TLS Server Name Indication: I use sslip.io to connect to <a href="https:&#x2F;&#x2F;UUID_IP.sslip.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;UUID_IP.sslip.io&#x2F;</a>. This is redirected to the local network IP of the peer which use the full domain name in the TLS handshake to extract the conversation UUID. This method doesn&#x27;t always work because of some router filtering out DNS records resolving to 192.168.X.X.<p>All this process is very hacky and doesn&#x27;t always work but I haven&#x27;t found anything else better. We still don&#x27;t have a good way to make self-hosting easy for anyone while making it secure and not dependant on an external service.')