Item(by='microtherion', descendants=None, kids=[25888025], score=None, time=1611449075, title=None, item_type='comment', url=None, parent=25886975, text='&gt; I currently write more C++ then python<p>You mention in the grandparent post that you &quot;just&quot; made that switch, so that&#x27;s a relatively recent development?<p>&gt; so I have enough experience from both perspectives<p>I don&#x27;t mean to be snarky, but evidently you&#x27;re not nearly as comfortable working in C++ as you are working in Python. Your interpretation of this is that you have gained sufficient experience with both languages to know that the problem is with the language and more experience won&#x27;t help, but what makes you so confident about this?<p>&gt; I never had to even know what assembly language was to do my job. That&#x27;s the point of an abstraction, if you find yourself digging into assembly that means it&#x27;s a leaky abstraction.<p>Yes, that&#x27;s a perfectly valid view, and, in the larger context of this discussion (about whether a programmer should switch to low level programming), if you prefer your abstractions to be solid, you&#x27;ll probably find yourself happier in higher level programming.<p>But where the high level programmer is concerned about leaky abstractions, the low level programmer is often concerned about intransparent abstractions â€” that in some languages, it&#x27;s hard to develop a reliable intuition how much time and memory a particular line of code will take. That&#x27;s an equally valid view, and if that&#x27;s your primary perspective, you might be more comfortable in low level programming.<p>&gt; [a leaky abstraction] is basically what C++ is...<p>It&#x27;s possible to write perfectly sound code in C++, but admittedly, it&#x27;s also possible to punch holes in abstractions, and that possibility is often exploited.')