Item(by='saurik', descendants=None, kids=None, score=None, time=1607958926, title=None, item_type='comment', url=None, parent=25415858, text='&gt; The languages that last in a through-the-ages sense tend to be conspicuously small and own their domains well.<p>Huh: I would argue the languages with outsized influence&#x2F;spread--and certainly the ones that both have lasted and which I expect to last--tend to be some combination of &quot;evolved&quot; and design by committee nightmares... including specifically the somewhat poorly-named &quot;perl-compatible&quot; regular expressions, which aren&#x27;t even &quot;regular&quot; and have a <i>lot</i> of seemingly arbitrary syntax that had been born out of various evolutions of the core concept, that have both come to dominate and somewhat define the world of regular expressions. I feel like if you look at the &quot;great&quot; and enduring languages they are all of this character--whether it be JavaScript or C++ or sh or even SQL (or libraries that form DSLs, like OpenGL)--and that that shouldn&#x27;t really be <i>surprising</i> as that&#x27;s also how natural languages (as in, those spoken by humans) are maintained, with lots of slightly-incompatible splinters around a slowly drifting core that is continually being extended: a language that hasn&#x27;t reached this stage is more of a &quot;product&quot; than a &quot;language&quot; and we see them come and go over timescales sometimes notably less than even a single decade, whereas languages with this property seem almost immortal... the one particularly notable example I can think of of a &quot;natural programming language&quot; drifting into obscurity is Lisp (by which I am referring largely to Common Lisp as the center of attention in a fractured environment that led to remarkable and almost ridiculous complexity around something most people incorrectly assume was trivial), which had a really really long run of it and is in some sense the Latin of our space (like... for a language which is almost never used anymore, we sure talk about it a lot ;P). It is the dominance of these languages that, to me, makes the study of linguistics tied to and intersecting the study of programming languages so fascinating.')