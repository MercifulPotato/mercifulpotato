Item(by='ywei3410', descendants=None, kids=None, score=None, time=1603681172, title=None, item_type='comment', url=None, parent=24891230, text=' &gt; There are extensions to Wayland that add missing functionality, but those are compositor-specific. \n  Meaning effectively that each compositor has its own incompatible variant of the Wayland protocol.<p>Well no — this is where I disagree. The extensions are standard and hosted within the repository [1]. A repository\n<i>may</i> support their own proprietary protocol, after all it’s an XML file, but practically speaking without distributing\nit through the repository means that you won’t get any clients to actually use it. It is wrong to suggest that there is\na huge proliferation of interfaces.<p>It <i>is</i> true that the core Wayland protocols support less functionality than X11. It’s also true that developers implementing\nwindowing managers need to do more work — however, again I point you towards <i>wl_roots</i>, <i>libinput</i> etc. as examples\nto show that you don’t need to implement anything from scratch unless you want to.<p>I don’t believe this particular design doesn’t have trade-offs, but to pretend that it has no benefits is also incorrect. The\nfact that there are less core protocols means that you <i>can</i> implement a simpler compositor if you should so wish. There\nare comments in this thread pointing to the usage of Wayland in different devices as an application of this.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;wayland-project&#x2F;wayland-protocols" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;wayland-project&#x2F;wayland-protocols</a>')