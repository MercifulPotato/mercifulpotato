Item(by='dmitryminkovsky', descendants=None, kids=None, score=None, time=1609940629, title=None, item_type='comment', url=None, parent=25656583, text='I&#x27;ve been working on a messaging app, and at the beginning I started out with Elasticsearch. Now, ES is really a wonderful tool and it got me pretty far, but its lack of window functions made one particular requirement impossible that we all take for granted in messengersâ€”at least I never figured out how to do it without Postgres: a listing of most-recently updated threads represented by the most recent message on each thread, sorted reverse chronologically. Here is the SQL that makes that happen:<p><pre><code>  SELECT\n    tm.*\n  FROM\n    (\n      SELECT\n        row_number() OVER (\n          PARTITION BY tm_1.thread_id\n          ORDER BY tm_1.delivered_at DESC\n        ) AS &quot;row&quot;,\n        tm_1.*\n      FROM\n        thread_message tm_1\n    ) tm\n  WHERE\n    tm.&quot;row&quot; = 1;\n</code></pre>\nThe inner query groups all messages by thread, orders them to find the &quot;most recent&quot; message on a thread given my ordering requirements, and then assigns a row number to each such message such that I can pick the most recent message on each thread in the outside query. I still have no idea how I would have done this with Elasticsearch.')