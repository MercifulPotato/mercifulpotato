Item(by='bbarnett', descendants=None, kids=[24845623, 24848857], score=None, time=1603265844, title=None, item_type='comment', url=None, parent=24845420, text='You&#x27;re sadly fighting against the &quot;but... but... it&#x27;s how people DO it&quot; mentality here.<p>Not to mention, as computing expands, the average capability of people is dropping.  Seats need to be filled, and those seats don&#x27;t all need to be high quality devs.<p>So ORMs are there to reduce the workload, in terms of what needs to be learned to be productive.  Database tuning is becoming a lost art.<p>(For DEVs not getting this, on a largish DB, I can literally write a single query which can take 10 seconds in MySQL&#x27;s console, or hours.  Yes, hours.<p>This isn&#x27;t a flaw, any more than doing a tree search wrong is a flaw in &lt;insert language here&gt; when it is slow.<p>And most ORMs don&#x27;t come close to properly handling all edge cases here.)<p>Beyond all of that, there is another bonus to using stored procedures or functions.  Security.<p>There are many tables I want to give read only access to, yet want to allow writing in very limited scenarios.  A stored procedure can have different user permissions (at least under most DBMS), which means you can:<p>- make a table read only for a web application user\n- then, allow a stored procedure to perform INSERT&#x2F;UPDATES, via a different user\n- however, let the web user execute the stored procedure<p>The stored procedure thereby limiting the INSERT&#x2F;UPDATE to a very specific action.<p>Mostly, I&#x27;ve used this when dealing with tables&#x2F;databases which have a financial component.  Said stored procedures can even perform additional checks on other tables, whatever is required to ensure that the update == OK.<p>Beyond that, it also allows for tiered security, in case you have someone in house, maybe a new dev, who decides they&#x27;d like to modify that financial table a bit.<p>And beyond <i>that</i>, it also allows logging to be done at the DB level.<p>While you are more limited here, in that you really do not want to be burdening the DB with more writes, you can definitely log all modifications to said financial table.<p>(You could use triggers for this last bit too, of course, but still...)')