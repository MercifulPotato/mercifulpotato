Item(by='jlokier', descendants=None, kids=None, score=None, time=1602864938, title=None, item_type='comment', url=None, parent=24785405, text='This is one <i>ancient</i> problem.  I remember dealing with it in 2003.<p>Writeup from 1997 here (P-HTTP basically means HTTP version 1.1):<p><a href="https:&#x2F;&#x2F;www.isi.edu&#x2F;~johnh&#x2F;PAPERS&#x2F;Heidemann97a.html" rel="nofollow">https:&#x2F;&#x2F;www.isi.edu&#x2F;~johnh&#x2F;PAPERS&#x2F;Heidemann97a.html</a><p>&gt; John Heidemann. Performance Interactions Between P-HTTP and TCP Implementations. ACM Computer Communication Review. 27, 2 (Apr. 1997), 65â€“73.<p>&gt; This document describes several performance problems resulting from interactions between implementations of persistent-HTTP (P-HTTP) and TCP. Two of these problems tie P-HTTP performance to TCP delayed-acknowledgments, thus adding up to 200ms to each P-HTTP transaction. A third results in multiple slow-starts per TCP connection. Unresolved, these problems result in P-HTTP transactions which are 14 times slower than standard HTTP and 20 times slower than potential P-HTTP over a 10 Mb&#x2F;s Ethernet. We describe each problem and potential solutions. After implementing our solutions to two of the problems, we observe that P-HTTP performs better than HTTP on a local Ethernet. Although we observed these problems in specific implementations of HTTP and TCP (Apache-1.1b4 and SunOS 4.1.3, respectively), we believe that these problems occur more widely.<p>Solutions for efficient batching of HTTP headers + data without delays involve TCP_NODELAY, and MSG_MORE &#x2F; SPLICE_F_MORE &#x2F; TCP_CORK &#x2F; TCP_NOPUSH.  Possibly TCP_QUICKACK may come in handy.  Same for any protocol really, but HTTP is the one where there tends to be a separate sendmsg() and sendfile() on Linux.')