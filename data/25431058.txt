Item(by='cnity', descendants=None, kids=[25431377, 25431132], score=None, time=1608045609, title=None, item_type='comment', url=None, parent=25430986, text='Hey. I&#x27;ve been working on an audio recognition tool that is remarkably similar to this one, and there are a few areas I strongly recommend exploring if you want to improve the classification performance.<p>For waveform similarity, you may achieve better results by comparing the spectrogram (computed by taking the FFT of each &quot;clack&quot;) instead of comparing the time domain signal.<p>Next, the best performing sound classification algorithms (at least in music note classification, which is a very similar problem to yours) utilise non-negative matrix factorisation[0] to do the comparison against a bank of note templates.<p>I recommend reading &quot;Real-time Polyphonic Music Transcription with Non-negative Matrix Factorization and Beta-divergence&quot; (Dessein et. al.) for a more comprehensive description of the algorithm[1].<p>I actually tried applying my algorithm to detect taps on different parts of my laptop for fun, so that I could send keyboard events when e.g. I tap the bottom right corner of my laptop, and it was quite effective. The approach is incredibly accurate for classification of short spectrograms.<p>Feel free to reach out to me if you want to discuss a bit more.<p>[0] <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Non-negative_matrix_factorization" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Non-negative_matrix_factorizat...</a><p>[1] <a href="https:&#x2F;&#x2F;www.researchgate.net&#x2F;publication&#x2F;220723421_Real-time_Polyphonic_Music_Transcription_with_Non-negative_Matrix_Factorization_and_Beta-divergence" rel="nofollow">https:&#x2F;&#x2F;www.researchgate.net&#x2F;publication&#x2F;220723421_Real-time...</a><p>Edit: Also, this is great work. I don&#x27;t mean to denigrate it at all.')