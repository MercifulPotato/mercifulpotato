Item(by='pron', descendants=None, kids=[25331991, 25331821, 25332202], score=None, time=1607346049, title=None, item_type='comment', url=None, parent=25322656, text='While the author speaks about difficulties due to momentum, habit, and baggage, I think the fundamental problem is much, <i>much</i> harder.<p>Many have described the problem in different ways, from Fred Brooks&#x27;s essential vs. accidental complexity to results on the intrinsic &quot;hardness&quot; of programming we&#x27;ve learned from computational complexity theory in the past two decades, but my favourite is the succinct description Gilles Dowek gave at a talk at NASA [1]:<p>&gt; Computers have been invented to <i>surprise</i> us... If we knew what computers do, we would not use them, and we would not have built any.<p>In other words, not only is writing the programs we want hard because of some &quot;reasonable&quot; Brooks-like argument or some rigorous computational-complexity argument, but we write programs in the first place <i>because</i> it is hard.<p>In practice, not only has Brooks&#x27;s prediction about no 10x improvement in programming productivity due to a single development -- which was rejected by many at the time as too pessimistic -- been vindicated, but the reality is <i>worse</i>: we have not seen a 10x boost due to <i>all developments combined and in over 30 years!</i> And the boosts we have seen are mostly due to the availability of open-source software, and widespread knowledge sharing on the internet.<p>[1]: <a href="https:&#x2F;&#x2F;shemesh.larc.nasa.gov&#x2F;NFM2018&#x2F;talks&#x2F;Dowek.pdf" rel="nofollow">https:&#x2F;&#x2F;shemesh.larc.nasa.gov&#x2F;NFM2018&#x2F;talks&#x2F;Dowek.pdf</a>')