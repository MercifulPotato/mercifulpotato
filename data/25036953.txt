Item(by='WorldMaker', descendants=None, kids=[25037070], score=None, time=1604941924, title=None, item_type='comment', url=None, parent=25034242, text='I explored this idea back in the day with darcs (though I don&#x27;t think darcs&#x27; proposed character-based patch format &quot;chunks&quot; ever made it past the proposal stage), as some back and forth discussions led me to what I think is a perfect compromise on power, time (to compute), and universality.<p>I explored using an off the shelf syntax highlighting tokenizer (Pygments specifically as a it was a Python prototype) [1] to build character-based diffs. Got surprisingly good results from what I tested. Most off the shelf syntax highlighters support a huge variety of languages. One advantage to using a syntax highlighting tokenizer&#x2F;lexer is that they are designed to be fast (many of them need to be real time in text editors after all), and handle &quot;degenerate cases&quot; very well (text editors spend a lot of time on work in progress code that doesn&#x27;t fully describe a complete compilable unit; version control systems just as well need to be good at storing work in progress states).<p>The finished prototype I built created standard character-based unidiffs, and it sounds like could possibly be slotted directly into Pijul now. I&#x27;d be very interested to experiment further with it now that one of the patch algebra VCSes has finally adopted a &quot;chunk&quot; option.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;WorldMaker&#x2F;tokdiff" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;WorldMaker&#x2F;tokdiff</a><p>(ETA: Suppose the first step is that it is time to get the band back together and update the prototype to Python 3.)')