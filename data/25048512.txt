Item(by='rwmj', descendants=None, kids=[25048873], score=None, time=1605029485, title=None, item_type='comment', url=None, parent=25047169, text='I think generating C code is great, I&#x27;m a big fan of it, but I&#x27;m lukewarm about this approach since it seems to both obscure the code more and looks rather limited.<p>Instead we&#x27;ve been using OCaml to generate C files, with the rule that the generated C code must be readable (as if hand-written) and thus something you can follow by reading or in a debugger.  Example of this approach here:  <a href="https:&#x2F;&#x2F;github.com&#x2F;libguestfs&#x2F;libnbd&#x2F;tree&#x2F;master&#x2F;generator" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;libguestfs&#x2F;libnbd&#x2F;tree&#x2F;master&#x2F;generator</a>  (Unfortunately for my example, the generated code is not stored in git, but I&#x27;ve put a few of the generated files online here: <a href="http:&#x2F;&#x2F;oirase.annexia.org&#x2F;tmp&#x2F;api.c" rel="nofollow">http:&#x2F;&#x2F;oirase.annexia.org&#x2F;tmp&#x2F;api.c</a> <a href="http:&#x2F;&#x2F;oirase.annexia.org&#x2F;tmp&#x2F;libnbd.h" rel="nofollow">http:&#x2F;&#x2F;oirase.annexia.org&#x2F;tmp&#x2F;libnbd.h</a> <a href="http:&#x2F;&#x2F;oirase.annexia.org&#x2F;tmp&#x2F;methods.c" rel="nofollow">http:&#x2F;&#x2F;oirase.annexia.org&#x2F;tmp&#x2F;methods.c</a>)')