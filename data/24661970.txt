Item(by='zaarn', descendants=None, kids=[24662339], score=None, time=1601642432, title=None, item_type='comment', url=None, parent=24661917, text='&gt;If the &quot;solid and predictable baseline system&quot; you used contains even a slightly different version of the input method library the user is currently using, then the user can no longer type _at all_ in your fancy application. Same thing for a myriad other integration points users are expecting in a desktop program. Drag and drop? Running the default program for X service? Window manager decorations? Etc.<p>Well that input library is not an issue of the flatpak environment but an issue of the application and&#x2F;or that library. That error could have easily occured if the application linked an old version of that library and the new version of the daemon was incompatible.<p>Drag and drop works with flatpak to my knowledge, as does running something as default program for opening a file or URL. And window manager decorations work fine for my flatpak apps too.<p>The user would not be forced to do that if Linux system devs got their shit together. At the moment, Linux is barely a end-user desktop because everything beyond opening a webbrowser (and maybe not even that) is complicated. Configuring default fonts requires me to sudo&#x27;ing a text editor into an &#x2F;etc file and manually insert the right incanations into an XML format.<p>Many subsystems in the linux desktop haven&#x27;t been properly updated in quite some time and lag behind modern developments.<p>This is an issue Linux created because everyone makes their own solution and then distro managers will silently patch over the mistakes, so it all kinda works together.<p>The IME issue can be solved by making portals versioned, so flatpak can install the app with a runtime that contains a version of the IME lib that works. Similarly for other IO between the host services and client libraries.<p>Additionally, portals can already provide a number of things (drag and drop for example) without having to compromise security or convenience.<p>I would also like to point out that not every input method library the user has is going to break every single revision.')