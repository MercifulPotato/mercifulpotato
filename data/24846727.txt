Item(by='quietbritishjim', descendants=None, kids=[24847025], score=None, time=1603279857, title=None, item_type='comment', url=None, parent=24845031, text='I know this is slightly annoying knee-jerk reaction but it would be remiss not to mention vcpkg [1] whenever C++ dependencies are brought up. In practice vcpkg has by far the most packages of any C++ package manager. For example, it&#x27;s unusual to find any one of opencv, grpc and QT5 for Windows, Linux and Mac in any other C++ package manager, let alone all three.<p>Unfortunately I&#x27;m not enough of an expert on the alternatives to make a proper comparison, but it seems to me that vcpkg works better with whatever build system the packages natively prefer to be built with (e.g. although vcpkg is CMake-based it can build Visual Studio projects on Windows and make-based libraries on Linux) whereas following links in the OP&#x27;s article takes me to a zip file full of meson.build files that seem to have been written from scratch for the library. Using the library&#x27;s own build system directly seems like a much more managable long-term solution. Also, vcpkg&#x27;s policy of putting all the ports into its git repository, while it does have disadvantages, does make it very clear everything that vcpkg is doing and needs to know to build something (e.g. [2] for grpc).<p>Edit: A partial comparison of vcpkg with Meson WrapDB and Conan Centre:<p>* Meson WrapDB lists just under 145 packages, although some of them appear to be empty (e.g. grpc, libtiff). As mentioned above, it seems that you need to re-implement the whole build system for a library in Meson for it to be included. I found that the package data is on github e.g. for spdlog [3]<p>* Conan Centre lists 583 packages, so it seems like a much better choice than Meson. The way to specify different configurations look awkward to me - they mix up decisions that you probably want to share across your dependencies (e.g. platform, static vs dynamic) with library-specific stuff; but maybe I just don&#x27;t understand them properly.<p>* vcpkg has 1509 ports, including several quite tricky ones like grpc on Windows and QT as mentioned above. The configuration stuff is split over places in a way that makes sense to me: triplet files contain global options like static vs dynamic and even cross compile options, the portfile itself contains any package-specific tweaks, and feature packages allow extra features in ports (e.g. I can vcpkg install opencv[eigen3] to mean &quot;include eigen3 support in opencv3&quot;, which would also update the list of transitive dependencies).<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;vcpkg" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;vcpkg</a><p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;vcpkg&#x2F;tree&#x2F;master&#x2F;ports&#x2F;grpc" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;vcpkg&#x2F;tree&#x2F;master&#x2F;ports&#x2F;grpc</a><p>[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;mesonbuild&#x2F;spdlog&#x2F;tree&#x2F;1.8.0" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;mesonbuild&#x2F;spdlog&#x2F;tree&#x2F;1.8.0</a>')