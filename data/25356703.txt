Item(by='jabl', descendants=None, kids=None, score=None, time=1607504617, title=None, item_type='comment', url=None, parent=25351046, text='&gt; 1. By default, the immediate fork of a MPLv2 project under xGPLv3 is auto dual-licensed (for existing files, at least). Usually, the project stays dual-licensed (even for the larger work) unless the contributors make an explicit decision to remove the top-level MPLv2 license file.<p>No, you can&#x27;t change the license of existing code that you don&#x27;t hold copyright of. Even permissive licenses like MIT don&#x27;t allow that. Where you can add your own license terms is for additional code you wrote that you hold the copyright for. Permissive vs. weak vs. strong copyleft then tell you under which terms you can combine your own code and the other code that you forked.<p>&gt; 2. Initial Contributor (original developer) can choose to make the &quot;Covered Software&quot; incompatibile with secondary licenses (like xGPLv3) for posterity.<p>The &quot;secondary license&quot; thing in MPL2 is a (clever) hack to make it compatible with *GPL. That just means that without the secondary license you can&#x27;t make a combined work (called &quot;larger work&quot; in the MPL2) that contains both MPL2 code and your own GPL code. It doesn&#x27;t allow you to relicense MPL2 code to GPL.<p>&gt; Evil corp at least (if nothing) is required to open source their changes to MPLv2 files (part of the original work), if any. Whereas Apache &#x2F; MIT &#x2F; BSD don&#x27;t require any form of reciprocation except an attribution.<p>Yes, but nothing prevents Evil Corp from just doing minimal modifications to the MPL2 code to add entry points or call out to the proprietary code in other files.<p>That is sort of the argument against weak copyleft licenses in general; they are easy to circumvent. So if you want copyleft protection, you should go for a strong copyleft license, or then you just accept that Evil Corp may leech and you might as well use a simple permissive license.<p>&gt; From what I know, MPLv2 is well understood and it isn&#x27;t ambiguous as WTFPL or confusing as AGPL. Hashicorp and Mozilla are two of the biggest corporate users of the license I know.<p>Maybe. I mean, if you look e.g. at <a href="https:&#x2F;&#x2F;resources.whitesourcesoftware.com&#x2F;blog-whitesource&#x2F;open-source-licenses-trends-and-predictions" rel="nofollow">https:&#x2F;&#x2F;resources.whitesourcesoftware.com&#x2F;blog-whitesource&#x2F;o...</a> MPL2 isn&#x27;t even a rounding error.<p>&gt; Of course there can be no argument that xGPLv3 protects the interests of the consumers better, though, MPLv2 (and EPLv2), I feel is a good compromise.<p>Yeah, I think in many ways GPLv3 is pretty good, but considering how soundly it has been rejected by corporations I&#x27;m not sure it&#x27;s worth it..')