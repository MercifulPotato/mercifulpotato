Item(by='wrsh07', descendants=None, kids=None, score=None, time=1602518070, title=None, item_type='comment', url=None, parent=24752963, text='I think this advice is incomplete<p>In general, I don&#x27;t like to try risky new things in prod right away. Maybe I&#x27;ll write some throwaway code or a test that uses the new thing. (This is how I started playing with ranges)<p>If it&#x27;s an improvement, I&#x27;ll leave it in, and as I figure out how to write clean code or fix the bugs with it, I&#x27;ll start considering it in prod.<p>This is a useful trick! Also consider the alternative (eg in this case you can just write class functions on your type or use existing libraries)<p>If you get reasonable push back, don&#x27;t use it. But I&#x27;ve seen it used in end seemed like sensible places in a production codebase and wouldn&#x27;t say &quot;never do this.&quot; The limits idea at the end seems fine, for example.<p>(The rust language ergonomics can be a good guide: try to balance &quot;applicability&quot;, &quot;power&quot;, and &quot;context dependence&quot;. [1]<p>In the case of limits it is not very powerful, it&#x27;s just a little syntax sugar. Seems ok.<p>I would say the from_string code has a few more footguns)<p>[1] <a href="https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2017&#x2F;03&#x2F;02&#x2F;lang-ergonomics.html" rel="nofollow">https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2017&#x2F;03&#x2F;02&#x2F;lang-ergonomics.html</a>')