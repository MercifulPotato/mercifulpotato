Item(by='ojnabieoot', descendants=None, kids=None, score=None, time=1604368398, title=None, item_type='comment', url=None, parent=24975496, text='I am an F# person rather than OCaml and am not familiar with the compiler, but this seems to be overstating the difference: I thought the OCaml functors are “real” mathematical functors that implemented a structured type polymorphism over the “input type” - they look pretty similar to C++ templates superficially but they work similarly to Haskell type classes. They are “functions from modules to modules” but those functions take types as values.<p>Real experts should let me know if I am mistaken: I don’t think OCaml and Haskell have strictly the same type system, but they are both similarly more expressive than F# because of this specific type -&gt; type polymorphism that in particular lets you do type-checked monads, etc.')