Item(by='greggman3', descendants=None, kids=[24820278], score=None, time=1603047409, title=None, item_type='comment', url=None, parent=24819619, text='I would throw in that it&#x27;s very hard to design APIs well and it&#x27;s very hard to not couple things and include the kitchen sink of features.<p>Let&#x27;s say someone makes an XML parser (just trying to pick an example). IMO a bad XML library would read files. Instead it should just, at best, take some abstract interface to read text and outside the library the docs should provide examples of how to provide a file reader, a network reader, an in memory reader, etc...<p>But, I rarely see that. Instead (this is more the npm experience) such library would include as many possible integrations as possible. Parse XML from files, from the network, from fetch, from web sockets, there would be a command line utility to parse XML to JSON, and some watch option that continually parses any new or updated XML file and spawns an task to do something with it, all integrated into this &quot;XML Library&quot;. Parts of it will respond to environment variables and it will have prettifiers integrated with ANSI color codes and you&#x27;ll be able to choose themes, and it will have a progress bar integrated into the command line tool for large files<p>And the worst part is the noobs all love it. They down load this 746 dependency XML library and then ask for even more things to be integrated.<p>Maybe someday there will be a language with a package manager&#x2F;community&#x2F;guidelines that mostly somehow rejects bad bloated packages. It seems like a nearly impossible task though.<p>Note: I don&#x27;t know rust well but I tried up fix a bug in the docs. The docs are built with rust. The doc builder downloaded a ton of packages which to me at least was not a good sign')