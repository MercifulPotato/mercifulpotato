Item(by='felixyz', descendants=None, kids=None, score=None, time=1602579416, title=None, item_type='comment', url=None, parent=24762278, text='Depending on which types of constraints you need to express your problem space, you could use plain Prolog or (more likely) make use of excellent constraint libraries like CLP(FD) for SWI-Prolog [1]. It&#x27;s important to note that these are built into and tightly integrated with most Prolog. So people who point out that Prolog&#x27;s backtracking search is too limited and&#x2F;or slow are not taking the full picture into account.<p>I also recommend checking out Picat, a Prolog-derived language with excellent support for constraints programming and many built-in global constraints (a very important tool for larger-scale constraint programming) [2]. As of the recently released version 3 (featured on HN [3]), Picat also supports traditional Prolog syntax. IMO Picat is still rough around the edges when it comes to error messages, modularization etc, but if nothing else it&#x27;s excellent for learning and for prototyping constraint models.<p>[1] <a href="https:&#x2F;&#x2F;www.swi-prolog.org&#x2F;man&#x2F;clpfd.html" rel="nofollow">https:&#x2F;&#x2F;www.swi-prolog.org&#x2F;man&#x2F;clpfd.html</a>\n[2] <a href="http:&#x2F;&#x2F;picat-lang.org&#x2F;" rel="nofollow">http:&#x2F;&#x2F;picat-lang.org&#x2F;</a>\n[3] <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24608997" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24608997</a>')