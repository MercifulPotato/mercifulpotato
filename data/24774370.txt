Item(by='jrockway', descendants=None, kids=[24774934], score=None, time=1602663513, title=None, item_type='comment', url=None, parent=24774260, text='I tried to distill down the basics a few years ago in a 1 page article: <a href="https:&#x2F;&#x2F;testing.googleblog.com&#x2F;2013&#x2F;06&#x2F;testing-on-toilet-fake-your-way-to.html" rel="nofollow">https:&#x2F;&#x2F;testing.googleblog.com&#x2F;2013&#x2F;06&#x2F;testing-on-toilet-fak...</a><p>The example is a little contrived, but the whole article fits on one sheet of paper and does yield a better test than mocks would.<p>Testing against the real system is always better than testing against a fake.  That should be your first preference, and if you can modify the system to make testing against it easier, that&#x27;s even better.  Sometimes you can&#x27;t, and if your interaction is complicated and the parts that you care about are simple, a fake can get you good confidence that your part works.  Mocks just feel like writing the code again -- in your code, you write &quot;call a function with an argument, then call another function with an argument&quot; and in the tests you write &quot;pass if a function is called with an argument, and again with an argument&quot;.  It can be the right thing at the right time, but it&#x27;s usually writing a test to make some automated linter shut up.  And that&#x27;s a complete waste of time.')