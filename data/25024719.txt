Item(by='ncmncm', descendants=None, kids=[25025047], score=None, time=1604831505, title=None, item_type='comment', url=None, parent=25015338, text='C already has a replacement, and that replacement is, manifestly, C++.<p>Essentially all of the most demanding, highest paid system development is done in C++. The number of C++ programmers, judging from attendance at rapidly proliferating C++ conferences and seminars, including even ISO 14882 SC22&#x2F;WG21 C++ Language, is growing faster than ever. Attendance at each WG21 meeting in the last several years has exceeded that of all previous meetings.<p>By all means, learn niche languages. They bend your brain and make you a better programmer. Just don&#x27;t imagine there will be a job waiting for you, using it. And, any code you write in it at work will probably be abandoned when you leave, as it will be too hard to hire a competent replacement who can maintain it.<p>This means that the niche languages to learn are the ones that really do bend your brain. Rust, OCaml, F# are probably worth exploring. Zig, by that measure, probably isn&#x27;t.<p>The natural fate of almost any language is to die. Only a few get the miracle it takes to survive, as did (only) COBOL, Fortran, C, C++, Python, Java, and Javascript. There was a time when Pascal and Ada looked like they would survive, but the needed miracles did not arrive.<p>There is no excuse for writing a new program in C, or, for a program that should be maintained over years, any niche language. There is no reasonable expectation that a language  will still be known, over the life of the program..<p>It is just barely possible Rust and&#x2F;or Go will survive. If they do, over the years they will get radically more complex.')