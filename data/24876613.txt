Item(by='verandaguy', descendants=None, kids=[24877435], score=None, time=1603508470, title=None, item_type='comment', url=None, parent=24876180, text='Depends what you mean by &quot;provably secure.&quot; Hashing algorithms are usually only practical because of what compromises they make to achieve &quot;good enough.&quot;<p>- At the most basic level, (practical) hashing cannot map all inputs to the same number of outputs, since consistent output length is usually highly desirable. This means that for sufficiently long inputs you <i>will</i> get collisions. What determines how good a hash is is often how hard that is to do.<p>- If your inputs map 1:1 to outputs, rainbow tables become harder but you open yourself up to a number of other possible attacks starting with the obvious length analysis.<p>- Hashing also often has to be very performant, which leads to its own compromises, but in many applications (like message digests) throughput performance is given a lot of weight.<p>In the most formal way, I guess it&#x27;s possible to have a provably secure hash for all possible attacks, but this would most likely require a 1:1 mapping between inputs and outputs. This would be impractical for a few reasons.')