Item(by='jstimpfle', descendants=None, kids=None, score=None, time=1609836328, title=None, item_type='comment', url=None, parent=25643154, text='It sure must be a nice feature - for fast results. Counterpoint, though. I barely used Rust, but when I wanted to play with the Xi editor I got to see the bad places that buying into such an ecosystem can get you to - places formerly pioneered by NPM. I had to download 100s of packages, (IIRC?) there were some build problems, all for something where I don&#x27;t really see the value of noteworthy dependencies.<p>If you really need a Btree (like, if you want to make a fair benchmark for a presentation) then you&#x27;ll absolutely find a reasonable implementation in C. After all, why would you need dependency management for something that should have 0 dependencies?<p>As an example of library data structures implemented in C - if you want, check out my Red-black tree (not a Btree): <a href="https:&#x2F;&#x2F;github.com&#x2F;jstimpfle&#x2F;rb3ptr&#x2F;blob&#x2F;master&#x2F;rb3ptr.h" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jstimpfle&#x2F;rb3ptr&#x2F;blob&#x2F;master&#x2F;rb3ptr.h</a> .\nIt&#x27;s really easy to integrate into your project. I think the API (found in rb3ptr.h) is totally usable, and it might also be faster than what you can get with safe Rust - unless you can easily use intrinsically linked data structures in safe Rust.')