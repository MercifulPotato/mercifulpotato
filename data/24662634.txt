Item(by='Tainnor', descendants=None, kids=[24662712], score=None, time=1601647060, title=None, item_type='comment', url=None, parent=24662495, text='Fair enough, I&#x27;m not intimately familiar with how randomised algorithms are most often analysed in a very formal sense (I never saw an explicit theory of it, even though I&#x27;ve seen multiple more &quot;intuitive&quot; analyses). My point was more that there is no reason why you shouldn&#x27;t be able to describe an expected runtime via O notation, whether or not that&#x27;s the right way to do it in practice.<p>&gt; Of course, you can also analyze randomly distributed inputs. But that&#x27;s a different beast, because in practice you seldom have a good handle on those distributions.<p>But isn&#x27;t this how it works for a hash table? It was my understanding that the actual hash function is deterministic, so there are no random choices to make - the randomness comes from the inputs; on the other hand you do have some assumptions (maybe not strictly proven) about the collision frequency, which should allow you to get a handle on the input distribution, or am I wrong?')