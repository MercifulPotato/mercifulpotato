Item(by='ryebit', descendants=None, kids=[25271291], score=None, time=1606859913, title=None, item_type='comment', url=None, parent=25269509, text='I think the big reason this happens is because smart contracts are immutable at the lowlevel.  Once it&#x27;s declared, it&#x27;s done. I think this is <i>very</i> good for auditability and security. But yeah, that quote is dead on.  It&#x27;s not quite as hot at a higher level, because things go wrong (bugs, malfeasance, mistakes, etc).<p>I think the current lowlevel framework is fine, because it&#x27;s allowing different projects to explore how to introduce flexibility back into the system at a higher level -- but because it&#x27;s being done at the level of a project within the Ethereum ecosystem, each approach can live &amp; die on it&#x27;s own, without risking the entire ecosystem on one approach.<p>The main set of coding patterns I&#x27;ve seen all center around deploying contracts which act as an &quot;upgradable proxy&quot; -- an immutable frontend contract, which can be redirected to point to another contract that does the actual work.<p>This &quot;redirect&quot; usually can only be done via txn signed by an &quot;admin&quot; account, which may be a single anon -- or it may be something more complex, like MakerDAO or Aave.com, where any updates are proposed by the dev team, but have to be approved by on-chain governance votes.  Said votes in turn literally have $$$ staked on-chain to properly motivate them to make things work.   There are also time-locks on many of these updates, giving users a last chance to run for the hills if governance does something malicious &#x2F; stupid.<p>The nice thing about that structure is that it also allows governance to let in updates which compensate users for mistakes or exploits at a meta-level, all without violating the underlying immutability of the smart contract bytecode.<p>---<p>It&#x27;s a pretty rapidly evolving space, and I&#x27;m sure what I described won&#x27;t resemble the final form in even a few years.<p>I think it&#x27;s really great to see that there is a way to introduce justice and flexibility <i>on top of</i> an immutable system, rather than making the system itself become mutable.  This allows the immutability of the lowlevel system to act as a source of trust between anonymous groups, that they have to act within some immutable set of ground rules,  while then re-introducing the flexbility on top, so humans can act like humans when mistakes occur.')