Item(by='segfaultbuserr', descendants=None, kids=[25182478], score=None, time=1606062579, title=None, item_type='comment', url=None, parent=25178563, text='I&#x27;ve tried something similar previously.<p><pre><code>    typedef struct pixel {\n        int r;\n        int g;\n        int b;\n    } pixel_t;\n\n    #define PIXEL(red, green, blue) \\\n    (pixel_t)                       \\\n    {                               \\\n      .r = (red),                   \\\n      .g = (green),                 \\\n      .b = (blue)\n    }\n</code></pre>\nThen I could invoke the function<p><pre><code>    void display_pixel(pixel_t pixel);\n</code></pre>\nby calling,<p><pre><code>    display_pixel(PIXEL(255, 255, 255));\n</code></pre>\nAnd you could even,<p><pre><code>    return PIXEL(255, 255, 255);\n</code></pre>\nLike magic. In other words, how do you pretend that you have syntax-level OOP in C... On retrospect, the macro could reduce readability, writing the argument explicitly may be better.<p><pre><code>    display_pixel((pixel_t) {.r = 255, .g = 255, .b = 255});</code></pre>')