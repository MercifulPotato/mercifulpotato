Item(by='enriquto', descendants=None, kids=[25322249], score=None, time=1607244252, title=None, item_type='comment', url=None, parent=25321751, text='&gt; other than clang and gcc, no other C compiler is going to bother supporting them anyway.<p>I understand that you have some sort of personal grudge against VLA, but there&#x27;s no need to use misinformation to further your agenda.  VLA are supported by all C compilers <i>except</i> Microsoft&#x27;s.  More precisely, they are supported by gcc, clang, icc, tcc and oracle developer studio (suncc), as well as several other experimental C compilers that seem to be written for fun as a learning experience.<p>I understand that it makes sense to avoid some language features on an OS kernel, like VLA or recursion.  For example, it would make sense to avoid types of ambiguous size such as &quot;int&quot;.  This does not mean in any way that using &quot;int&quot; is wrong in all cases.  Many algorithms (I think about mathematical and numerical codes) are very naturally expressed using these fancier language features.<p>You can make a very valid case for language simplification and against VLA and other &quot;modern&quot; features.  But your argument is less powerful if you sound ignorant of the widespread support and uses of these features.')