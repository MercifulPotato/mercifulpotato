Item(by='chubot', descendants=None, kids=None, score=None, time=1608516570, title=None, item_type='comment', url=None, parent=25490904, text='Yeah the &quot;optimize for years&quot; part is interesting... Supposedly the derivatives technique (re-popularized by a 2009 paper) will build a more optimal DFA directly, rather than building the NFA first, converting to DFA, and then optimizing the DFA.<p>I put a bunch of links and quotes about that here, including nascent implementations:<p><a href="http:&#x2F;&#x2F;www.oilshell.org&#x2F;blog&#x2F;2020&#x2F;07&#x2F;ideas-questions.html" rel="nofollow">http:&#x2F;&#x2F;www.oilshell.org&#x2F;blog&#x2F;2020&#x2F;07&#x2F;ideas-questions.html</a><p>Also related: <a href="http:&#x2F;&#x2F;www.oilshell.org&#x2F;blog&#x2F;2020&#x2F;07&#x2F;eggex-theory.html" rel="nofollow">http:&#x2F;&#x2F;www.oilshell.org&#x2F;blog&#x2F;2020&#x2F;07&#x2F;eggex-theory.html</a><p>About Unicode, this derivatives project (with video linked in the post) appears to be motivated by Unicode support (though I don&#x27;t recall exactly why, something about derivatives makes it easier?).<p><a href="https:&#x2F;&#x2F;github.com&#x2F;MichaelPaddon&#x2F;epsilon" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;MichaelPaddon&#x2F;epsilon</a><p><a href="https:&#x2F;&#x2F;github.com&#x2F;MichaelPaddon&#x2F;epsilon&#x2F;blob&#x2F;master&#x2F;epsilon&#x2F;ucd.py" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;MichaelPaddon&#x2F;epsilon&#x2F;blob&#x2F;master&#x2F;epsilon...</a><p>If anyone wants to write a glob engine for <a href="https:&#x2F;&#x2F;www.oilshell.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.oilshell.org&#x2F;</a> let me know :)  Right now we use libc but there are a couple reasons why we might have our own (globstar and extended globs)<p>Trivia: extended globs in bash give globs the power of regular expressions, e.g.<p><pre><code>    [[ abcXabcXXabcabc == +(abc|X) ]] ; echo $?\n    0\n</code></pre>\nwhere +(abc|X) is equivalent to (abc|X)+ in &quot;normal&quot; regex syntax, and == is very confusingly the fnmatch() operator.')