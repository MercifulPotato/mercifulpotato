Item(by='sodapopcan', descendants=None, kids=[25780314], score=None, time=1610648114, title=None, item_type='comment', url=None, parent=25779112, text='As in the whole project was rewritten in Django or some kind of transpiration going on there?<p>I haven&#x27;t gotten to the point where I&#x27;m adding a lot of libs yet and certainly can&#x27;t speak to using it in a big team.<p>In terms of syntax flexibility, Ruby has a similar issue where a lot of popular libs implement their own DSLs.  I&#x27;ve never fully bought that that is a problemâ€”a library is going to have an API that will require reading documentation.  Maybe the one example that goes off the wire is RSpec (I&#x27;m really used to it now but I&#x27;m really enjoying going back to good ol&#x27; `assert` in `ExUnit`).  In terms of keeping it idiomatic with the business logic, library can (and in my opinion always should) be wrapped.  I may be missing the point or being reductive here, though, and I would be interested to hear more about your particular pain if you&#x27;re willing to share!<p>...and of course if you are talking about using meta-programming to write business logic, that&#x27;s not a thing anyone should ever do for any reason ever, period (IMO).<p>For me the raw speed of writing a highly interactive app in LiveView is unlike anything I&#x27;ve ever experienced.  My primary experience is with Rails and React.')