Item(by='vrtx0', descendants=None, kids=None, score=None, time=1607187535, title=None, item_type='comment', url=None, parent=25314126, text='I don’t think any of the approaches in this article are appropriate for the stated problem. Specifically, <i>parsing</i> data from an INI&#x2F;JSON&#x2F;text file (or TLV-like encoding, predefined format&#x2F;protocol, etc.), the parser can produce appropriate structures for the underlying data. This is the phase when you analyze (and likely validate) the input data, so you’d know the appropriate type after parsing.<p>You may want your parse tree to produce objects instead of fundamental C++ types (e.g. with functions like isNull(), isValid(), etc.). A common approach might be to produce a simple AST where each node includes just the fundamental type you’re interested in. Then you can simply follow the visitor pattern and write visitors for things like serializing&#x2F;deserializing, generating&#x2F;traversing&#x2F;executing trees&#x2F;graphs&#x2F;code, etc...<p>Perhaps I’m missing something though? A more concrete definition of the problem would be helpful...')