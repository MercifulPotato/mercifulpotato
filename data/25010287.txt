Item(by='peterwwillis', descendants=None, kids=None, score=None, time=1604690255, title=None, item_type='comment', url=None, parent=25009315, text='This is literally my job and I kind of hate how unnecessarily complex it all is. Not in the sense of &quot;distributed systems are hard&quot;, but that we don&#x27;t actually need the onion to have 20 layers, we really only need 2 or 3.<p>The reason we need an orchestration system for our orchestration system, is the orchestration system is a snowflake. We need an orchestration system because the container system is a snowflake. We need a container system because containers are a snowflake. None of it is really standard or easy to implement, because none of it was designed in the spirit of Unix. It was all just some random companies who threw some crap together so they could start making money selling ads or hosting services. (I don&#x27;t mean cgroups, I mean the tools that use them, although cgroups are kind of warty in themselves)<p>All most people need to do is run a couple processes on a couple hosts, send packets between services (and networks), and have something start&#x2F;stop&#x2F;restart those processes. You can have all of that with, say, systemd (ugh), or three different standard interfaces that any program can use with standard libraries&#x2F;ABIs. Notice I didn&#x27;t say &quot;with 5 different daemons running on 3 hosts that need complex configuration, constant maintenance, and a migration effort every 3 months&quot;.<p>The Open Container Initiative seems close to getting the first thing done. If we get the other two standardized, we can lose a whole bunch of the onion layers. Consequently a lot of people will need to find a new way to make money, because there&#x27;ll be not nearly as much need to pay people to deal with the onion.')