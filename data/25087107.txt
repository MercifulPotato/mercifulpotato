Item(by='jkarneges', descendants=None, kids=[25088547, 25087175], score=None, time=1605299495, title=None, item_type='comment', url=None, parent=25085960, text='My understanding is a Durable Object is similar to a long running JS app in a respawnable&#x2F;relocatable container (imagine a Kubernetes deployment of 1 pod). There is always exactly one instance, somewhere. And because the instance is long running, WebSockets become more practical.<p>Note that because Durable Objects are long running computations, they are stateful and deployments are disruptive (clients disconnected). So even though you could potentially put them in the &quot;serverless&quot; category, the deployment experience isn&#x27;t quite the same as short-lived serverless functions &#x2F; lambdas.<p>The real novelty of Durable Objects appears to be their intended usage of fine granularity (and the underlying tech that enables this). For example, if you were building a chat  room service, you could have 1 Durable Object per room. Of course, you could conceivably build a chat room service running 1 Node.js process per chat room on traditional VMs or containers, but that probably wouldn&#x27;t scale well.')