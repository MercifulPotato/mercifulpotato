Item(by='judofyr', descendants=None, kids=[25803087, 25811942], score=None, time=1610811261, title=None, item_type='comment', url=None, parent=25799719, text='While I think it&#x27;s important to fight against the &quot;FE is easy; BE is real programming&quot; stigma, I think you&#x27;re going bit too much in the other direction. You&#x27;re painting FE almost as the most difficult thing that exists. However, it&#x27;s not like GUI applications is a new thing. GUI applications which talks to the Internet is not exactly groundbreaking either.<p>&gt; Updating a userâ€™s role on the BE is a single SQL operation<p>Exactly! Updating a user&#x27;s role on the BE is <i>actually</i> a really difficult task: You need to persist the data in a safe way and ensure that it&#x27;s consistent with other concurrent actions that happens. These hard problems have been worked on for <i>50 years</i> and what we&#x27;ve ended up with is a set of solid tools (SQL databases that provides transactions). It&#x27;s thanks to these tools that BE <i>becomes</i> easy. These tools have also been built on top of each other. A new tool often &quot;extends&quot; an older tool instead of &quot;replacing&quot; it.<p>It comparison, look at some of the &quot;progress&quot; in the tooling in the front-end world: One of the biggest recent change in state management is React Hooks. This is a concept which has <i>zero</i> precedence in <i>any</i> language or literature. It&#x27;s something they invented out of thin air and behaves like nothing else out there. The documentation has a big list of gotchas you need to watch out for. Does it has its advantages? Sure, it&#x27;s nice for many things. But of course there&#x27;s going to be rough edges when introducing such novel concepts.<p>Cocoa has been successfully using view controllers for state management for 20 years (or more?). They&#x27;ve made some tweaks over the years (e.g. segues), but it&#x27;s mainly stayed the same. Is state management perfect in Cocoa? No. Do you hear Cocoa developers complain about state management? Yes. Do they spend every year talking about the &quot;new best way to handle state&quot;? Nope.<p>I understand that it&#x27;s not completely comparable (different platforms etc), but of course state management becomes a recurring problem when you end up switching out the state management library every second year (Redux anyone?).')