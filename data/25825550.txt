Item(by='adrianmsmith', descendants=None, kids=None, score=None, time=1610998224, title=None, item_type='comment', url=None, parent=25823795, text='The best approach is dependent on the definition of &quot;best&quot;, and for whom it&#x27;s best, etc.<p>For example, in the last 10 years I&#x27;ve seen numerous companies I know switch to Scrum&#x2F;Agile. They always seemed to have a worse result than before (bad software quality due to lack of long-term planning, lots more meetings and overhead than before). For example one company I&#x27;m aware of recently informed me they had to do a &quot;huge refactoring&quot; taking a whole day of the whole team, this was for a project that isn&#x27;t even online yet, the project is maybe 6 months old. Surely this is a failure?<p>Why were they continuing to use it? I think Scrum really is &quot;best&quot;, for the following definition of best:<p>- For the customers who are stating the requirements, if they make a huge mistake the person making the mistake could be fired. The only sure way to make sure a decision is not a mistake is not to make any big decision at all. Scrum promises you you don&#x27;t have to plan out e.g. 6 month projects in full, only specify the stories in the next sprint in detail.<p>- For an agency billing by time, the more meetings there are, the more hours they can bill and the more money they can make. The worse the software quality is, the more refactoring is necessary, the more times you do things the more hours are billed.<p>So, for an agency selling to a large customer, Agile really is &quot;best&quot; for the participants personally.<p>It might not produce the best software, or the cheapest software, but that isn&#x27;t what actually matters to the people involved.')