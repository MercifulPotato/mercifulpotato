Item(by='compsciphd', descendants=None, kids=[24708637], score=None, time=1602078527, title=None, item_type='comment', url=None, parent=24707959, text='except in the case of libreadline, its highly likely that any Linux user (i.e. bash depends on it) already has the library on the system. I&#x27;m not distributing it.<p>But lets get into the weeds a little. Lets say I am distributing it according to all definitions. I&#x27;m allowed to distribute GPLd material. I&#x27;m allowed to distribute non GPLd material. I&#x27;m allowed to distribute them together even (say a linux CD without the GPL impacting the rest).<p>The question the judge would have to answer, is the non GPLd portion a &quot;derivative work&quot; of the GPLd portion and is that derivative work being distributed. I&#x27;m not so clear that this the case unless one really believes that APIs can be copyrighted (then it is clearly the case).<p>As a simple example: lets say we accept that it is a derivative work, but then lets say I made a replacement version of libreadline that was ABI compatible (but not feature complete) with the original one, so hence my program can be dynamically linked against both but it will be a better end user experience if they use the GPL version.<p>To provide a somewhat more concrete thought experiment (concrete as an ABI copatible reimplemntation under a different license, thought as its making up a fact):<p>imagine microsoft dual licensed windows with GPL and not and they believed that if one wanted to ship a non GPL program one had to pay them a license fee to keep the program not GPLd. Now, as wine has implemented the required APIs to run my program, can I ship a non GPLd program where I refuse to license the right to be non GPLd from Microsoft that will still run on Windows? Does it change because wine exists (i.e. the answer would be different if wine didn&#x27;t exist) and if so why? This case isn&#x27;t to nitpick how windows is different than libreadline or the like, but just as an example of ABI compatible non feature complete implementations can exist.')