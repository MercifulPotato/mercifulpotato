Item(by='georgyo', descendants=None, kids=[25191544, 25193075, 25194336, 25192246, 25192287, 25192297], score=None, time=1606163788, title=None, item_type='comment', url=None, parent=25187576, text='I firmly believe that Nix (and&#x2F;or Guix) are the future. I am going to use Nix as the keyword below, but Guix and Nix are so very similar that everything is also true for Guix.<p>Snap, Flatpak, Docker, AppImage, etc are all very complex solutions that are actually quite painful to interact with. Nix on the other hand solves the problem extremely well. You can have different complex applications running side by side with very different dependencies trees and they will not cross paths.<p>Every time I see a package being distributed as a Snap, I wonder why. These containered solutions are very complex, trying very hard to emulate FHS with mount namespaces, binding mounting tons of sockets around, and almost always end up mounting all of &#x2F;home in the container. The don&#x27;t provide much security, and quite difficult to deal with, and require a daemon.<p>Nix on the other hand has zero containerization requirements. It simply works by ensuring the programs are looking in the right place for the libraries they need. It would be great if more vendors just shipped a Nix derivation (or store path) that was their application stack. It would end version incompatibilities for ever, in a way that isn&#x27;t a burden for the user.<p>Nix + bubblewrap add all the benefits of snap and flatpak as well. But again, there is no benefit to bubblewrap is if you are just going to blanket allow read-write everywhere anyway. At least with raw bubblewrap you can make these policies actually protect something.<p>Similarly, Nix is easily installed on any existing system. So you can use nix packages on Debian, Ubuntu, Centos, Fedora, DSL, or any other linux distribution because it runs entirely out of &#x2F;nix. I use nix packages on Archlinux at home, and Debian systems as work.<p>Cross distro development works 100% of the time because Nix doesn&#x27;t use anything from the distro.<p>Nix (and Guix) are really what the Linux community should be moving towards IMHO. I personally prefer Nix&#x27;s syntax, but the underlying technologies are so similar I consider them the same. Guix started as a fork of Nix, and one day I hope they decide to end up becoming compatible with each other again.')