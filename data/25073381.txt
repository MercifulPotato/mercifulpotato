Item(by='alexyakunin', descendants=None, kids=[25073780], score=None, time=1605207300, title=None, item_type='comment', url=None, parent=25072726, text='And speaking of unsafe code and x86-specific (i.e. non-portable) AVX2 intrinsics:<p>1. First, unsafe doesn&#x27;t mean you shouldn&#x27;t use it on .NET. It just means you need to do more checks manually.<p>2. A lot of things you can do in Go are unsafe in .NET terms - e.g. even slice is a leaky &amp; unsafe abstraction: <a href="https:&#x2F;&#x2F;alexyakunin.medium.com&#x2F;slice-an-extremely-leaky-abstraction-in-go-b0eb42bf22c4" rel="nofollow">https:&#x2F;&#x2F;alexyakunin.medium.com&#x2F;slice-an-extremely-leaky-abst...</a><p>3. Yes, the fact Go doesn&#x27;t support SIMD intrinsics explains why it loses not only to C#, but also to C++ and Rust on math-intensive tests. But it loses to C# on other tests too - e.g.:\n- <a href="https:&#x2F;&#x2F;benchmarksgame-team.pages.debian.net&#x2F;benchmarksgame&#x2F;program&#x2F;knucleotide-csharpcore-1.html" rel="nofollow">https:&#x2F;&#x2F;benchmarksgame-team.pages.debian.net&#x2F;benchmarksgame&#x2F;...</a>\n- <a href="https:&#x2F;&#x2F;benchmarksgame-team.pages.debian.net&#x2F;benchmarksgame&#x2F;program&#x2F;knucleotide-go-7.html" rel="nofollow">https:&#x2F;&#x2F;benchmarksgame-team.pages.debian.net&#x2F;benchmarksgame&#x2F;...</a><p>And as you might notice, the code length doesn&#x27;t differ much there.')