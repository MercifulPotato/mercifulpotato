Item(by='Jtsummers', descendants=None, kids=None, score=None, time=1611116222, title=None, item_type='comment', url=None, parent=25842385, text='While the (original HN) title may have been a bit on the pretentious side, the linked syllabus explains the rationale for the course:<p>&gt; This course examines papers every computer scientist should have read, from the 1930s to the present. It is meant to be a synthesizing experience for advanced students in computer science: a way for them to see the field as a whole, not through a survey, but by reliving the experience of its creation. The idea is to create a unified view of the field of computer science, for students who already know something about it, by replaying its entire evolution at an accelerated frame rate.<p>Which is not a bad idea. Many computer scientists, programmers, and software engineers have an ahistorical understanding of CS. See the discussion the other day when someone claimed &quot;software engineering&quot; is only 20-30 years old. They aren&#x27;t a one-off, though probably not the majority. A significant number of people in this field don&#x27;t know the history of it: how it was developed, what dead ends were hit, what dead ends turned out not to be dead ends (often once we got fast enough hardware), etc.<p>Similar to the ethics course in many engineering&#x2F;science curricula, it&#x27;s something that seems a bit superfluous but turns out to add a great deal of value if students can be bothered to explore it.')