Item(by='newmnhn', descendants=None, kids=None, score=None, time=1607448661, title=None, item_type='comment', url=None, parent=25332871, text='The problem is partly that page speed measurement tools care a lot about that first load. Even if everything after that is super snappy due to cached resources, if you are only using 5% of the total CSS file in the first page the user hits, that other 95% is dragging down the experience on first load, and especially dragging down lighthouse scores.<p>It doesn&#x27;t mean though, that you can&#x27;t have a combined approach where a small amount of genuinely global CSS is loaded from an external file that is cached, while component-specific CSS lives in the component and renders inline with it. But then it&#x27;s like ... why do that extra request if the file is that small, and you end up with inline everything.<p>Definitely the trend from a business point of view is to optimize for good perf scores on lighthouse, even if that&#x27;s a little illogical at times.<p>Another thing though is that often the JS for whole chunks of a page (which contains the CSS) can be code-split and cached as its own file, so whole components made up of HTML CSS and JS can be lazy loaded and if that same chunk of stuff is needed again, it could be a cached JS file.<p>Especially if these are &quot;below the fold&quot; and pulled in as the user scrolls or something, you get a small initial payload + small JS files being called in to run as needed.<p>I don&#x27;t know how many implementations there are of this in the wild, but it&#x27;s possible.')