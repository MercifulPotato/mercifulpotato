Item(by='foobiekr', descendants=None, kids=[25888447], score=None, time=1611439278, title=None, item_type='comment', url=None, parent=25885699, text='Embedded is a lot of fun.  A lot of fun.  It&#x27;s &quot;real coding&quot; to me, though I haven&#x27;t done any in fifteen years.<p>But .. embedded vendors can suck. A lot. Terrible docs, epic levels of errata (e.g., a PowerPC vendor who, at one time, shipped a bigger errata document than the entire manual set for an x86 of the same era), and just.. marginal everything.  In some cases, they are really interesting - the Broadcom Fastpath SDK was actually a good mix of excellent and terrible.<p>But the SDKs can be absolute trash even from name-brand vendors. Without naming names, I&#x27;ll give an example: SDK contains a linux distribution from an CPU ASIC company shipped as a tar file. You have no indication whatsoever what the reference point for the linux kernel is, no idea what patches it has or does not have, and so on.  When you ask them, they don&#x27;t even understand why you care.  Get ready for the fun of massive diffing. The network stacks on the really low-end can be shockingly bad.<p>From a career standpoint, embedded is a bit of a niche. You will probably always have a job - especially in the IoT era, but even without that. It is typically a somewhat solitary role - you do the code for the XXX block (if drivers) or for some set if functions (IoT-style embedded), but you don&#x27;t end up doing &quot;broaden your scope&quot; things as much - no system-level nor distributed systems work, which can be somewhat limiting.')