Item(by='ignoramous', descendants=None, kids=[24854163, 24852579, 24853894], score=None, time=1603312254, title=None, item_type='comment', url=None, parent=24848391, text='So... this post casually outlines how one could go about build a <i>Global Network Load Balancer</i> at Google-scale. Amazing!<p>A few na√Øve questions:<p>&gt; <i>You can make any protocol work with a custom proxy. Take DNS: your edge servers listen for UDP packets, slap PROXY headers on them, relay the packets to worker servers, unwrap them, and deliver them to containers.</i><p>Curious: Wouldn&#x27;t SOCKS5 here be a like-for-like replacement for PROXY? Why would one choose one over the other?<p>&gt; <i>WireGuard doesn&#x27;t have link-layer headers, and XDP wants it to</i><p>Is the gist here that WireGuard doesn&#x27;t because it is Layer 3? And that XDP sits one layer below it?<p>&gt; <i>Jason Donenfeld even wrote a patch, but the XDP developers were not enthused, just about the concept of XDP running on WireGuard at all</i><p>Could someone please explain this? Is it that XDP here didn&#x27;t want to add a support to delegate routing onto WireGuard?<p>&gt; <i>It&#x27;s a little hard to articulate how weird it is writing eBPF code. You&#x27;re in a little wrestling match with the verifier</i><p>Would NetMap or Intel&#x27;s dpdk instead make for an non-enterprising choice here? Don&#x27;t they have a similar profile in terms of throughput? I guess, one has to use a userspace TCP&#x2F;IP stack like gVisor&#x27;s NetStack or LwIP to go with NetMap&#x2F;dpdk?<p>&gt; <i>Those configurations are fed into distributed service discovery; our servers listen on changes and, when they occur, they update a routing map</i><p>How is this system implemented? Curious because uptime, availability, durability, and latency must be of prime importance for such a service. Is there a blog about this detailing the challenges inherent here? Or, does it use consul&#x2F;etcd or some such out-of-the-box solution?<p>&gt; <i>a simple map of addresses to actions and next-hops; the Linux bpf(2) system call lets you update these maps on the fly.</i><p>Clarification: does this mean the maps are already in a format the bpf&#x2F;2 command understands, or is something else going on here?<p>Thanks.')