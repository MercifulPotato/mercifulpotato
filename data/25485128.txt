Item(by='02020202', descendants=None, kids=None, score=None, time=1608458308, title=None, item_type='comment', url=None, parent=25481837, text='good for you. but as i have found out, reading about ddd&#x2F;cqrs&#x2F;es and actually implementing it is QUITE different. it sounds amazing but the amount of work that is required to implement it, in addition to the business logic, is staggering.<p>as i have implemented few systems already, i am starting to think that ES is not really needed. i mean, it is needed in very specific use cases where knowing the exact state at the exact time is required(ie. finances), but 99.9999999% of apps will never need replay. so i am starting to lean towards change log instead of event log. the difference is that i can keep the simple crud logic without any overhead and simply log either simple entity diff as named event or go more granular and log changes like i&#x27;d do events but in simpler log way so a person(admin) can read what when where was changed. but no replay or browsing state changes on a single aggregate root.<p>this is because i have come to a conclusion that if there is a problem in the future, human interaction is involved one way or another. so hard-coding everything will become a complication along the way(ie. fix by few click in UI or fix via code change + update script). on the other hand, with change log, admin can figure out the problem by looking at the changes that were made, make a call and perform the fix on the spot. no need to fiddle with code at all. just make few click, write some note and that is it. plus no code-based restrictions are preventing the admin to do it immediately - like input data validation or state transition validation and so on.<p>also a big drawback of ES is keeping support for old events. in time, the code base will be growing and growing and you cannot throw the old code out.')