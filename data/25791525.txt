Item(by='chme', descendants=None, kids=None, score=None, time=1610722032, title=None, item_type='comment', url=None, parent=25791174, text='All of those are very good points!<p>&gt; In short, i don&#x27;t think that how &quot;minimal&quot; dependencies are should be the deciding factor when choosing them, but rather the results of deliberation of the points that you&#x27;ve described above.<p>Well I said &#x27;minimal set of dependencies&#x27; not &#x27;minimal dependencies&#x27;. My text wasn&#x27;t meant to make a point for small libraries or for implementing everything inside the project, but just to point out the important factor of dependency management as part of programming, which I felt was missing in this discussion.<p>Of course if there is some big framework that is well maintained, possible already used by other software components that might be already available on the device of the end user, fulfills all business&#x2F;project requirements and you might end up using it for more the just one function, then great! That also means you might not add many other random small dependencies to dependency set, now or in the future and that set might stay minimal.<p>But if there is something that is not part of the big framework, and easy to get wrong, then of course you should add some dependency that does it for you under all these deliberations instead of trying, and possible failing, to do it yourself.<p>You should however step back from this and reconsider, if you start adding libraries for just string padding and the like.')