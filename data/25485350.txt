Item(by='echelon', descendants=None, kids=[25485824], score=None, time=1608461453, title=None, item_type='comment', url=None, parent=25485059, text='&gt; I hear this a lot in interviews and it&#x27;s a clear signal that you haven&#x27;t worked on anything big enough yet.<p>Quite a bold wager, and totally incorrect. I hope you&#x27;re not presumptive and rude to all of your candidates.<p>FWIW, I&#x27;m a senior engineer at a large tech company where I started pre-IPO and have had pretty great career growth. I&#x27;ve been on a variety of teams dealing with most of the levels of our stack: eventually consistent data models that are active-active, k8s, frontend, tearing down monoliths, etc.<p>I&#x27;m fine with microservices for medium to large orgs, and I love Kubernetes.<p>Lambdas and cloud are expensive lock-in, and holding this view doesn&#x27;t mean you hate distributed systems or complexity. You can staff your own platform teams and manage your own capabilities. Imaging machines, upgrading, failing over - it&#x27;s all automatable.<p>The excuse I hear is that companies don&#x27;t want to build things that aren&#x27;t related to their core competency. But I&#x27;d argue your software stack fundamentally relies on the environment it lives within and that ceding control poses a non-zero risk.<p>I&#x27;m incredibly fearful of the future where all software runs within AWS or Azure. We&#x27;ll all be paying taxes to these companies and we won&#x27;t be able to run or replicate similar environments on our own. It&#x27;ll be difficult for new engineers to learn as our field will effectively become a &quot;trade&quot;.<p>Can you imagine the world where it&#x27;s expected that everything is composed of SQS and Lambda and other bullshit?')