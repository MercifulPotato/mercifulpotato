Item(by='namibj', descendants=None, kids=None, score=None, time=1611333666, title=None, item_type='comment', url=None, parent=25872343, text='Importantly, this doesn&#x27;t just use memoization (it actually avoids having to spend memory on that), but rather uses operators (nodes in the dataflow graph) that directly work with `(time, data, delta)` tuples. The `time` is a general lattice, so fairly flexible (e.g. for expressing loop nesting&#x2F;recursive computations, but also for handling multiple input sources with their own timestamps), and the `delta` type is between a (potentially commutative) semigroup (don&#x27;t be confused, they use addition as the group operation) and an abelian group. E.g. collections that are iteratively refined in loops often need an abelian `delta` type, while monoids (semigroup + explicit zero element) allow for efficient append-only computations [0].<p>[0]: <a href="https:&#x2F;&#x2F;github.com&#x2F;frankmcsherry&#x2F;blog&#x2F;blob&#x2F;master&#x2F;posts&#x2F;2019-02-09.md" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;frankmcsherry&#x2F;blog&#x2F;blob&#x2F;master&#x2F;posts&#x2F;2019...</a>')