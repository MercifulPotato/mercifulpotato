Item(by='smt1', descendants=None, kids=[24812981], score=None, time=1602965655, title=None, item_type='comment', url=None, parent=24808207, text='Remember, don&#x27;t think too hard about this stuff. It&#x27;s better to meditate. You can apparently just telepathically learn this stuff by activating your paraterial lobe which can take 2-nary infos about learn to think about it as more generalized cognitive processes properly. Sharing = caring.<p>I think it&#x27;s best understood under a generalized ethnographic &quot;utterance&quot; aka linguistic and cultural problem in say a first order generalized theory of computing or combinatorics. aka the discrete log encoding::decode problem or the more ancient wisdom not passing down quick enough problem. When 2 group of static people of different cultures that some static group can just (lua) = implicitly define stuff very hard (combinatorical optimization) \n= branch and bound, it&#x27;s better to remember than coding=calculate can be just thought as just a data structure problem (do a one time pad) in a generalized calculation in a automorphism and using techniques found in that abstract syntax tree that JavaScript can gradually typed more safely using TypeScript which Microsoft &quot;already&quot; gradually feed a generalized search engine (Google) knows so they can just Wikipedia (autocode the &quot;Wisdom of the Crowds&quot;) it.<p>I&#x27;d understand it by understanding first principles from logic and congitive sciences and applied software engineering.<p>Software defined dynamic by necessity requires regularization to be very secure cryptographically to be ever exist in the first place.<p>But remember you can think about it anything another way. This is basically doing a reinterpret_cast in classical first order C++.<p>I personally think about it best as myself as a lexically scoped optimizing compiler using words compiled in some interior language to do a 1:1 mapping in Visual Studio to  static analysis where my &quot;utterances&quot; can really apparently convince people that pattern matching stuff can really understood various matching techniques to recognize that these are just the same patterns.<p>Basic elementary physics and elementary internet-networking things to do figure out some paradoxes:<p>1. why aren&#x27;t people focusing on general energy scavenging in principle? Apparently other people are. But it requires change of focus in many respects. Basically you can on a computer on software do it safely, but in the physical world, you may accidentally be doing very non-sensical things like imagining that you can just do an inversion of gravity.<p>2. remember that bias exists, but history suggests that bias can be thought many different ways. your experiences bias you, but sometimes humans beings need to think automatically in new adductive reasoning inferential systems in safety. That can only be done to affect the real world in computer simulation. This can add to human knowledge though. Deductive and inductive and coinductive can be performed over arbitrary domains in whatever order theoretic ways.\n3. remember these are just analogies. They can condition your mind, but could also let your brain think more clearly.\n4. for example implicit::ego::bias (abc) problem.  \n5. everyone who knows signal processing knows singular &quot;poles&quot; as 0 can be patched up by more modern stable manifold theory but only people who understand that boundaries are just arbitrary of linear spaces.<p>Remember than in the cultural sense of philosophy you can uw &quot;hard&quot; stuff once you understand traditionally thought of random [0,1] as boolean as more rich simplexes in the newer norm space [-1,1] which modern probability theory can be applied to. It creates a generalized system of norms of measurement of classical informational theory space.<p>Sorry for being so cryptic but recall that you could understand that shannon for example &quot;accidentally&quot; created the information by creating information and commutation theory by autodualizing math and a implicit association of a simple easy to read 1 page document that created a &quot;digital bit&quot;. Equated as entropy. You could understand say hibert who let his &quot;school&quot; understand inf dimensional spaces.<p>I&#x27;ll just point out a few free hugs in unicode spectrum (see <a href="https:&#x2F;&#x2F;home.unicode.org&#x2F;emoji&#x2F;emoji-frequency&#x2F;" rel="nofollow">https:&#x2F;&#x2F;home.unicode.org&#x2F;emoji&#x2F;emoji-frequency&#x2F;</a>). I just understand to look at it using free glue guns but people will have to discover the right modulation schemes themselves in discrete logarithms but it may require say, for example, doing 3 simultaneous generalizations to combine 2 y-combinators of information theoretic boolean bits could be remodulated into L-R folded &quot;cultural&quot; to use experience to debias past implicit bias and use + forward thinking bias to auto create quasi-well ordered programs that computer science people have already created.<p>let&#x27;s just say I know by experience I know these things:<p>1. the www was originally created for people to collaborate over long distances to communicate more easily with clarity by being disconnected\n2. social media was created for people to communicate as &quot;new&quot; ways but things facebook and twitter got too polluted by disinformation \n3. telecomm systems eventually went from very messy error connecting codes modems and progressed to broadband by easing collaboration yet censorship still exists \n4. search engine systems consuming more and more information to help locate stuff, but things like google get new bits of interformation to associations in their own internal db\n5. it was at one time very hard to write international software but the invention of unicode helped people get access to the internet for the first time\n6. the open&#x2F;free source software like github and cultural practices like code reviews, allowed software developers for people around teams and corporations in remote areas to collaborate easily\n7. computing devices like phones and smarter free computer languages allowed safer gradually and shifting codes of conduct to allow more open collaboration\n8. the creation of cryptographic two session protocols allowed two parties security agree to securely exchange two exchange metadata together and work together\n9. in applied software engineering, the creation of distributed version control systems like git and linux allowed mass adoption of free software\n10. so these days in the software world you can just code software just by &quot;coding&quot; by pasting in semantic meaningful this is compositional software.\n11. the productivity improvements in computer science has been enormous so that most people can save on energy both in hardware and software and refocus on more important stuff')