Item(by='alexisread', descendants=None, kids=None, score=None, time=1606517665, title=None, item_type='comment', url=None, parent=25231749, text='Oberon and Maude I think make a good case for (parameterised) modules, both from being able to reason mathematically and their use at low level OS system.<p>I&#x27;ve been very slowly trying to combine the work in Maru with Composita to yield a modular and  deterministic lisp (Composita uses managed memory without GC).<p><a href="http:&#x2F;&#x2F;concurrency.ch&#x2F;Content&#x2F;publications&#x2F;Blaeser_Component_Operating_System_PLOS_2007.pdf" rel="nofollow">http:&#x2F;&#x2F;concurrency.ch&#x2F;Content&#x2F;publications&#x2F;Blaeser_Component...</a><p>Naturally you&#x27;d want to layer something like Shen or Maude on top of this, to provide the equational proof-checking. The K language is a good example - it provides facilities to model new languages and semantics like racket.<p><a href="http:&#x2F;&#x2F;fsl.cs.illinois.edu&#x2F;index.php&#x2F;K-Maude:_A_Rewriting_Based_Tool_for_Semantics_of_Programming_Languages" rel="nofollow">http:&#x2F;&#x2F;fsl.cs.illinois.edu&#x2F;index.php&#x2F;K-Maude:_A_Rewriting_Ba...</a>')