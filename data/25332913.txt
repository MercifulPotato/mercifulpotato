Item(by='timdaub', descendants=None, kids=[25333140], score=None, time=1607354320, title=None, item_type='comment', url=None, parent=25332101, text='Mhh... I don&#x27;t know how to feel about this.<p>Over the last year, I&#x27;ve shipped a bunch of (p)react components [1, 2, 3] and what is cool about them is indeed that you can now encapsulate a UI function and make it re-usable within your project or even across projects.<p>In theory, this should finally give front end devs the same super powers as backend devs: high reusability.<p>However, a problem that I wasn&#x27;t able to distinctly address is CSS. Currently, there&#x27;s simply too many variants of encapsulating CSS into a &quot;react module&quot;. You can opt to use:<p>- css modules<p>- styled components and derivatives<p>- CSS in JS or classes in JS, etc.<p>But ultimately, if you build your UI as a patchwork of many integrated UI elements (which IMO <i>should</i> be something legit in frontend development), you&#x27;ll end up having to include 5 different CSS-in-bla libraries either in your build pipeline or (worse) in your bundle code that you ship to production (bloats the size and hence your app&#x27;s performance).<p>Long story short: Combining styled components with twin macro and tailwind doesn&#x27;t make my life easier currently. And the benefits to my users will not be apparent directly either.<p>Not to say that all the CSS-to-XY movement isn&#x27;t cool. Still, I think the best solution to this problem has yet to be discovered.<p>1: <a href="https:&#x2F;&#x2F;github.com&#x2F;TimDaub&#x2F;preact-touchable-dock" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;TimDaub&#x2F;preact-touchable-dock</a><p>2: <a href="https:&#x2F;&#x2F;github.com&#x2F;TimDaub&#x2F;react-envelope-graph" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;TimDaub&#x2F;react-envelope-graph</a><p>3: <a href="https:&#x2F;&#x2F;github.com&#x2F;TimDaub&#x2F;react-simple-knob" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;TimDaub&#x2F;react-simple-knob</a>')