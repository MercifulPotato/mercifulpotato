Item(by='gutensearch', descendants=None, kids=[25891090, 25890685], score=None, time=1611477241, title=None, item_type='comment', url=None, parent=25890368, text='Thanks for noticing!\nTo be more specific, &quot;what is a&quot; are stop words and &quot;cynic&quot; is very common, so a lot of rows are returned (see my other comment). ts_rank takes too long to rank them, and the server times out, leaving you with the previous query&#x27;s table because I didn&#x27;t take the time to program a correct response to this issue. &quot;Cecil Graham. What is a cynic?&quot; returns Lady Windermere&#x27;s Fan almost instantly.<p>The workarounds I&#x27;ve thought of would be to cache these queries (assuming I&#x27;ve seen them before, and after I&#x27;ve set up logging), buy a larger server, or pay Second Quadrant to speed up ts_rank... I&#x27;d love any suggestions from more experienced Postgres engineers!<p>Edit to your edit, re parsing. The subset of rows returned follows:<p><pre><code>  where language = %s::regconfig and textsearchable_index_col @@ phraseto_tsquery(%s::regconfig, %s)\n</code></pre>\nand relevance is determined by:<p><pre><code>  ts_rank_cd(textsearchable_index_col, phraseto_tsquery(%s::regconfig, %s), 32)\n</code></pre>\nwith the %s being language and paragraph respectively.')