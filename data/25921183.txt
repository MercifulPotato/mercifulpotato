Item(by='josephg', descendants=None, kids=[25923080], score=None, time=1611695926, title=None, item_type='comment', url=None, parent=25920127, text='I agree - although I see all of those cases as special cases of the same general action: filesystem operations are state machine transitions.<p>I’ve been playing with the idea lately that the OS could support general transformation functions (eg “insert an ‘A’ character at this location”, “append this log entry”, “overwrite this byte range”, etc. Those transformation functions could be generic or written in wasm&#x2F;BPF. The filesystem can process operations like this efficiently by storing them to a log and periodically flushing. (Or whatever makes sense for the operations).<p>Having a completion API that separates “buffer can be reused” and “persistently flushed” is great, and should be available for all filesystem operations. Not just for databases!<p>If an application wants to use traditional posix semantics, write() calls can just be one of the supported operation types.<p>And as a bonus, filesystem watching can become highly granular - you could subscribe to the stream of semantic changes to a file!')