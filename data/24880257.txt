Item(by='gnulinux', descendants=None, kids=[24880400], score=None, time=1603557586, title=None, item_type='comment', url=None, parent=24880098, text='Eh, syntactically it hides the state as in `f x` has the same value every time, but calling functional programming stateless is a stretch, I consider it a half-truth told the newcomers to understand the concept. Functional languages still have state but they&#x27;re abstracted out to function call. E.g. if you have a recursive descent parser written in Haskell, your program will still have state, not every time you&#x27;re in `expr` function you&#x27;ll have the same conceptual state.<p>I think lack of mutation is a lot more pronounced, since it has very important implications to runtime (necessary O(logn) slow down) and requires a more sophisticated type system (linear type system) in order to emulate safe mutation.')