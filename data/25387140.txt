Item(by='dathinab', descendants=None, kids=None, score=None, time=1607702290, title=None, item_type='comment', url=None, parent=25384201, text='They don&#x27;t have the exact same expressive power.<p>If you have a `trait A { type B; ... }` then for any type T you can implement <i>one</i> specific A with one specific B.<p>But if you have `trait A&lt;B&gt; { ... }` then you can have a different implementation of A for every disjoint type B.<p>Then if you have `trait A&lt;B&gt; { type C; ... }` you can have one specific C for every possible disjoint B.<p>So with associated types you can express additional constraints&#x2F;semantics which you can not express with only &quot;classic&quot; generics.<p>Furthermore the compiler can rely on this constraints for e.g. type inference.')