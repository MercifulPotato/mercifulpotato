Item(by='jacobobryant', descendants=None, kids=None, score=None, time=1603904371, title=None, item_type='comment', url=None, parent=24921127, text='Hi. I pivoted to this recently from a cross-domain recommender system (see previous Show HN[1]--it could, for example, recommend movies based on which books you like). Long story short, people thought the idea was interesting (landing page converted at ~7%, and I got hundreds of signups), but the recommendations weren&#x27;t accurate enough to get people to stay (retention was nonexistent; I also did some user surveys)--and I wasn&#x27;t confident that I&#x27;d be able to make the recommendations much better with the resources I have. I was originally hoping that Findka would be good enough at least to sustain growth so that I could improve the recommendation quality gradually over time, but that didn&#x27;t pan out.<p>Findka Essays is a simplified version of the old app. It recommends only essays (instead of any type of content), and you get recommendations through email only, not through a web app. I record which links you click on, and links in future emails get picked based on your click history.<p>Since the domain (essays) is much more restricted, a more-or-less randomly selected item should still have a decent chance of being a good recommendation (especially since right now I manually curate most of the essays). So I&#x27;m hoping that the system will be worth using even before we have lots of data to feed to the algorithm, unlike the old Findka.<p>Also, I genuinely love essays (reading and writing). I think they are the most valuable form of content, and I think helping good essays spread further would have a big impact on the world. So I&#x27;m pretty excited about this pivot.<p>For those interested, I&#x27;ve written a detailed description of the architecture here.[2] The web app is written in Clojure, using Biff[3] (a web framework I made), and the recommendation algorithm is a ~100 line Python file that uses off-the-shelf k-NN, with some of my own additions for handling exploration and countering popularity bias. See [4] for details.<p>[1] <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=23541840" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=23541840</a><p>[2] <a href="https:&#x2F;&#x2F;findka.com&#x2F;blog&#x2F;essays-implementation&#x2F;" rel="nofollow">https:&#x2F;&#x2F;findka.com&#x2F;blog&#x2F;essays-implementation&#x2F;</a><p>[3] <a href="https:&#x2F;&#x2F;findka.com&#x2F;biff" rel="nofollow">https:&#x2F;&#x2F;findka.com&#x2F;biff</a><p>[4] <a href="https:&#x2F;&#x2F;findka.com&#x2F;blog&#x2F;essays-implementation&#x2F;#recommendations" rel="nofollow">https:&#x2F;&#x2F;findka.com&#x2F;blog&#x2F;essays-implementation&#x2F;#recommendatio...</a>')