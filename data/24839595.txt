Item(by='sergeykish', descendants=None, kids=None, score=None, time=1603212589, title=None, item_type='comment', url=None, parent=24838137, text='Yes, template strings was a clean start.<p>Of course prototype based language is simpler than class based. Ruby system <i>is</i> more complex. It provides more tools â€” Class, Module, class and instance methods, variables (as depicted on the picture). You&#x27;ve asked eigenclass (singleton_class these days), that&#x27;s Class:a -&gt; A, very simple concept.<p>And yet Ruby inheritance is much easier, it is all around and it just works. No one does this in JavaScript, too complex. There were many attempts of building OOP people could understand on top of JavaScript in 200x. No one does this for Ruby.<p>&gt; <a href="https:&#x2F;&#x2F;i.stack.imgur.com&#x2F;FPPdI.png" rel="nofollow">https:&#x2F;&#x2F;i.stack.imgur.com&#x2F;FPPdI.png</a><p>With fix above:<p><a href="http:&#x2F;&#x2F;sergeykish.com&#x2F;javascript-no-constructor.png" rel="nofollow">http:&#x2F;&#x2F;sergeykish.com&#x2F;javascript-no-constructor.png</a><p><i>I&#x27;ll let you decide which implementation is easier to work through, but I have a definite opinion that</i> current JavaScript <i>system is more complex</i>.<p>&gt; You&#x27;ll love newer ES versions then. The upcoming private fields are an even bigger mess.<p>I follow.<p>Netscape and Mozilla tried version approach. Module is a clean start, &#x27;use strict&#x27; by default. It is not Visual Basic, already good.')