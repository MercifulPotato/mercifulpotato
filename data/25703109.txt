Item(by='SkyMarshal', descendants=None, kids=[25705014], score=None, time=1610217515, title=None, item_type='comment', url=None, parent=25701312, text='Tools should be chosen to match the use case.  Haskell is a good choice when you&#x27;ve got:<p>1) a problem that requires a very high-assurance system with very low tolerance for bugs, errors, and failures, and<p>2) a large complex system where refactoring and other maintenance-over-time activities are made materially more manageable by Haskell&#x27;s strong type system and other tools,<p>3) a need for large-scale parallelization that a purely functional language like Haskell facilitates, and<p>4) a world class team of engineers who can become productive in it relatively quickly, support new hires doing so too, and won&#x27;t foreseeably be outsourced to some low cost overseas sweat shop.<p>Rust is also worth considering under those criteria, in addition to embedded systems, hard&#x2F;soft real-time or constant-time systems, etc.<p>But obviously not all software projects have all those criteria.  Other languages like Go, Python, Javascript, Java-ecosystem, .Net, etc may be ideal in other circumstances.  You just have to match the tools for the job.')