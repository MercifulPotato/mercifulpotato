Item(by='tines', descendants=None, kids=[25492285], score=None, time=1608524807, title=None, item_type='comment', url=None, parent=25491568, text='Nice! I&#x27;ve always been a proponent of thinking about C++ as &quot;C with templates&quot; rather than &quot;C with classes,&quot; and once you realize that templates are just AST expanders, it becomes apparent that C++ is just a bad lisp :)<p>I made the same thing a while back, and one of the neat simple things you can do is implement function-overloading a la C++. All you need is to define a way to serialize types to strings that are valid identifiers; then you (1) append the string-forms of the types of each function parameter to the name of the function at the definition site, along with a normal function that will do the dispatching in the second part, and (2) do the same thing for the type of the arguments at each call site. Et voila! Function overloading! Not quite as powerful as C++, which takes conversions and stuff into account, but it&#x27;s an interesting experiment nonetheless. You can see how I did it here: <a href="https:&#x2F;&#x2F;github.com&#x2F;zc1036&#x2F;ivy&#x2F;blob&#x2F;master&#x2F;src&#x2F;lib&#x2F;std&#x2F;overload.icl" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;zc1036&#x2F;ivy&#x2F;blob&#x2F;master&#x2F;src&#x2F;lib&#x2F;std&#x2F;overlo...</a> (DEFUN2 is the version of DEFUN in my language that supports overloading.)')