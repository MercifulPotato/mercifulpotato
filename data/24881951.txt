Item(by='gaius_baltar', descendants=None, kids=[24883014], score=None, time=1603573512, title=None, item_type='comment', url=None, parent=24880217, text='Did my research here. I was expecting GnuPG to never <i>emit</i> a message including SHA1, just use it to verify signatures from the existing ones. A pretty sensible thing, AFAIK.<p>To my surprise, gpg2 added SHA1 as a valid MD algo in a new key because the specification says it MUST be supported and implementations should use it if no other is found in key preferences. However it is the one with the lowest priority and will not be used with any that was generated in the last decade or had its preferences chenged to use another MD.<p>A key created with the default options:<p><pre><code>    gaius@baseship:&#x2F;tmp$ mkdir newhome\n    gaius@baseship:&#x2F;tmp$ gpg --homedir newhome --gen-key   \n    gpg: WARNING: unsafe permissions on homedir &#x27;&#x2F;tmp&#x2F;newhome&#x27;\n    gpg (GnuPG) 2.2.4; Copyright (C) 2017 Free Software Foundation, Inc.\n    This is free software: you are free to change and redistribute it.\n    There is NO WARRANTY, to the extent permitted by law.    \n\n    gpg: keybox &#x27;&#x2F;tmp&#x2F;newhome&#x2F;pubring.kbx&#x27; created\n    Note: Use &quot;gpg --full-generate-key&quot; for a full featured key generation dialog.\n                                 \n    GnuPG needs to construct a user ID to identify your key.\n                 \n    Real name: Gaius Baltar                                  \n    Email address: baltar@defense.caprica.kob\n    You selected this USER-ID:                       \n        &quot;Gaius Baltar &lt;baltar@defense.caprica.kob&gt;&quot; \n                                           \n    Change (N)ame, (E)mail, or (O)kay&#x2F;(Q)uit? o\n    We need to generate a lot of random bytes. It is a good idea to perform\n    some other action (type on the keyboard, move the mouse, utilize the\n    disks) during the prime generation; this gives the random number\n    generator a better chance to gain enough entropy.\n    We need to generate a lot of random bytes. It is a good idea to perform\n    some other action (type on the keyboard, move the mouse, utilize the\n    disks) during the prime generation; this gives the random number\n    generator a better chance to gain enough entropy.\n    gpg: &#x2F;tmp&#x2F;newhome&#x2F;trustdb.gpg: trustdb created\n    gpg: key 0832341A4A0CE664 marked as ultimately trusted\n    gpg: directory &#x27;&#x2F;tmp&#x2F;newhome&#x2F;openpgp-revocs.d&#x27; created\n    gpg: revocation certificate stored as &#x27;&#x2F;tmp&#x2F;newhome&#x2F;openpgp-revocs.d&#x2F;C64E6636890D8BAACA843AFC0832341A4A0CE664.rev&#x27;\n    public and secret key created and signed.\n\n    pub   rsa3072 2020-10-24 [SC] [expires: 2022-10-24]\n          C64E6636890D8BAACA843AFC0832341A4A0CE664\n    uid                      Gaius Baltar &lt;baltar@defense.caprica.kob&gt;\n    sub   rsa3072 2020-10-24 [E] [expires: 2022-10-24]\n\n    gaius@baseship:&#x2F;tmp$ gpg --homedir newhome --edit-key baltar\n    gpg: WARNING: unsafe permissions on homedir &#x27;&#x2F;tmp&#x2F;newhome&#x27;\n    gpg (GnuPG) 2.2.4; Copyright (C) 2017 Free Software Foundation, Inc.\n    This is free software: you are free to change and redistribute it.\n    There is NO WARRANTY, to the extent permitted by law.\n\n    Secret key is available.\n\n    gpg: checking the trustdb\n    gpg: marginals needed: 3  completes needed: 1  trust model: pgp\n    gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u\n    gpg: next trustdb check due at 2022-10-24\n    sec  rsa3072&#x2F;0832341A4A0CE664\n         created: 2020-10-24  expires: 2022-10-24  usage: SC  \n         trust: ultimate      validity: ultimate\n    ssb  rsa3072&#x2F;89519D45B7AECE4D\n         created: 2020-10-24  expires: 2022-10-24  usage: E   \n    [ultimate] (1). Gaius Baltar &lt;baltar@defense.caprica.kob&gt;\n\n    gpg&gt; showpref\n    [ultimate] (1). Gaius Baltar &lt;baltar@defense.caprica.kob&gt;\n         Cipher: AES256, AES192, AES, 3DES\n         Digest: SHA512, SHA384, SHA256, SHA224, SHA1\n         Compression: ZLIB, BZIP2, ZIP, Uncompressed\n         Features: MDC, Keyserver no-modify\n\n    gpg&gt;</code></pre>')