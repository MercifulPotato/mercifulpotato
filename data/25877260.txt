Item(by='mpolichette', descendants=None, kids=[25877299, 25877340, 25877544], score=None, time=1611355685, title=None, item_type='comment', url=None, parent=25874105, text='I don&#x27;t think React is the problem here. I think communication and leadership is where fault lies.<p>1. Why hire a team of non-webdevs to do webdev. (on 2nd read, it appears they wanted to use the same team from the WPF app... ¯\\_(ツ)_&#x2F;¯)<p>2. If you build and treat React components and their APIs as the abstraction layer, then they&#x27;re just components... who cares how they&#x27;re implemented.<p>3. Just because the existing project is big, doesn&#x27;t mean your new one has to be... split it up!<p>4. Redux... the root &quot;technical problem&quot;<p>My hot take is that the authors technical issues probably come from Redux and not React.  \nUsing redux as the core of your application is like pouring glue on a lego set.  In an ideal world this is great because everything is strong and well defined.  In reality, it prevents flexibility and applies hard constraints to the entire system.<p>That one choice of using redux effects the decisions you make in every component.  You lose flexibility to encapsulate features and experiments. You&#x27;re forced to bend over backwards to do things in specific ways.<p>Redux is the JS equivalent of the Windows Registry.')