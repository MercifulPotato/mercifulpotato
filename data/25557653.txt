Item(by='KMag', descendants=None, kids=None, score=None, time=1609144117, title=None, item_type='comment', url=None, parent=25554865, text='How wasteful is it to have a bimodal decoder that assumes 8 4-byte instructions or 8 2-byte instructions, with bail-out circuitry to dispatch fewer instructions and advance to the next instruction-size boundary in the case of a stream of mixed widths?  You don&#x27;t need to handle the entire realm of possibilities in a single cycle if you&#x27;re willing to pay a performance penalty for mixed-width instruction streams.\nYou&#x27;d pay a performance penalty for mixed-width runs of instructions, but hopefully profile-guided-optimization would allow the compiler to know where to make the tradeoff for speed and were to make the tradeoff for size.<p>Also, you mentioned elsewhere that you&#x27;re a hardware designer.  I&#x27;m aware that split register files are advantageous for speed, while unified integer and fp register files are advantageous for small&#x2F;low power implementations.  Given that the high-performance implementations are going to use register renaming anyway, has anyone quantified the penalty in using register renaming to allow for a split register file in high-performance implementations while allowing compatible low-power implementations with a single register file?  Maybe the transistor savings are dwarfed by other concerns in a modern hardware implementation, but given RISC-V&#x27;s academic goals, economy for FPGA implementation seems useful.')