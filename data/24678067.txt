Item(by='rdgthree', descendants=None, kids=[24678947], score=None, time=1601810072, title=None, item_type='comment', url=None, parent=24670483, text='I&#x27;ve gone back and forth on this. Yes - sometimes your worry is completely unfounded, but this article lost me here:<p>&gt;Untangling messy parts of the codebase, identifying and removing dead code, cleaning up build, deploy and monitoring systems - these tasks often feel overwhelming because they can overwhelm you, sucking up days for no real gain.<p>Those aren&#x27;t the risks I&#x27;m thinking about when I&#x27;m worried about problems like this. Difficulty&#x2F;time is not the concern. Unknown-unknowns are the concern.<p>Upgrading our NodeJS version takes about 10 seconds with Elastic Beanstalk on AWS, but we&#x27;re not on the latest version, even though it seems to run without issue and our tests pass. Why? Because maybe it&#x27;ll expose some race case that would only appear in production. And worse even, maybe that race case will affect a lot of people <i>sometimes</i> in an extremely hard to reproduce way. Maybe it&#x27;ll break something that isn&#x27;t apparent for weeks.<p>We had a bug where <i>some</i> SMS notifications weren&#x27;t being sent in production, and it was hurting our retention metrics for a couple months before one of our engineers stumbled across it. It was caused by a maintenance upgrade of one of our very few dependencies. In a small company or on a new product, you don&#x27;t have the kind of bulletproof reporting to <i>know</i> when something like that is broken - your metrics are moving around quite a bit by default.<p>Code that works and has been working for ages without issue is code that I am not interested in changing unless I absolutely have to. Leaving&#x2F;avoiding code that hasn&#x27;t been changed in forever is sometimes the best option to ensure stability.<p>This all being said, I agree that this worry can be carried too far. Like I said - I&#x27;ve gone back and forth on this. Fundamentally it&#x27;s a tricky line to walk.')