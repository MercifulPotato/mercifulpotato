Item(by='bern4444', descendants=None, kids=None, score=None, time=1610754646, title=None, item_type='comment', url=None, parent=25797462, text='&gt; Let&#x27;s say your UI changes, like a redesign... you can rewrite your component and probably need to change most of them.<p>This is exactly what React does especially for stateless components that purely consume data. The component declartively says this is the data I need. The component doesn&#x27;t care how that data is retrieved, that&#x27;s an implementation detail separate from React.<p>For stateful components, this is also achievable but requires a little engineering and some good architecture (this is IMO the hardest part of &#x27;React&#x27; - and this isn&#x27;t even a concern of React - since React doesn&#x27;t prescribe any specific approach).<p>If you define all the functionality for a component well, you should be able to easily rewrite just the view (the return value of a fucntional component or of the render method for class components) without changing any of the existing functionality.<p>This can be done by defining your component&#x27;s behaviors via hooks (custom or builtin). Those hooks should provide any functionality and data your view needs and exposes that to the component. If no new data or functionality is needed, then nothing in these hooks (and more broadly code external to the render&#x2F;return value) changes.<p>All that changes is the return value of your component and any css you want.<p>If you change the view, yeah you might have to update some event handlers for buttons that are now inputs, but that&#x27;s not a UI only change, thats changing functionality too.')