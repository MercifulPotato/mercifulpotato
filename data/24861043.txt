Item(by='knorker', descendants=None, kids=[24865676], score=None, time=1603389550, title=None, item_type='comment', url=None, parent=24859683, text='&gt; Why do you say agpl is not for free software &#x2F; hobby ?<p>I mean it&#x27;s not free software, even in the context of the user using it as a hobby thing. Is that what you&#x27;re asking?<p>&gt; From my understanding which could be wrong, is that you are free to use &quot;this&quot; software if[…]<p>So that&#x27;s a problem right there. You are free to use this software &quot;if…&quot;.\nFSF&#x27;s free software definition includes freedom 0: &quot;The freedom to run the program as you wish, for any purpose (freedom 0)&quot;<p>So I guess I can flip the question around to you. How do you mesh these things:<p>0. The freedom to run the program as you wish, for any purpose<p>1. I wish to run this software intertwined with some proprietary code<p>2. The purpose is to run it as part of a service offered to the public<p>3. The software is AGPL<p>4. The AGPL states that I cannot combine 1-3.<p>5. But I wish to combine 1-3 together, and 0 says I can run it as I wish for any purpose.<p>&gt; Why is that difficult?<p>It&#x27;s not difficult, it&#x27;s logically impossible. My conclusion is that AGPL throws away freedom zero. And if that&#x27;s out, then the license could just say &quot;may not be used by companies above size X&quot;. And it&#x27;s not free software.<p>&gt; If I am using libreoffice and I develop a fix for bug that I found in my usage, why not give it back to the entire community so that the software is made better for the entire mankind?<p>Indeed. The problem here is that what if it wasn&#x27;t a bugfix, but a feature where you added support for your company&#x27;s SSO system, and used libraries that are not open source?<p>Or what if you&#x27;re writing a script to launch openoffice in your VMware cluster, to convert from .doc to .docx. You now have to publish that script, if in any way connected to any service that anyone else would possibly and indirectly access.<p>Like, you can&#x27;t use openoffice as a report generator in this way without publishing the script that launches openoffice on your cluster system.<p>And if you edit &#x2F;etc&#x2F;init.d&#x2F;mongodb, you do have to publish that new version.<p>&gt; Second, which is more important than anything hobbyist use, if I am a for profit corporation looking to earn money, why should I be allowed to take existing code built by God knows how many volunteers, make slight changes and market it as &quot;my&quot; product and totally ignore the work done by these people?<p>I don&#x27;t think your scenario here is right. All open source licenses require copyright to be clear. Even BSD license without advertising clause doesn&#x27;t allow you to claim it as your own.<p>But reading your question as only applying to services. Hmm… how is this different from you running a blog and not acknowledging all the work that went into the Apache webserver? Why does the public have the right to your startup scripts and apache.conf?<p>Why do they have the right to your cronjob script that installs a new letsencrypt and restarts the webserver?<p>Because this is what AGPL demands.<p>Nobody thinks Amazon invented xen or Linux. Nobody operates in a vacuum. Even Nobel prize winners didn&#x27;t derive physics from first principles.<p>The AGPL is the most extreme. I don&#x27;t think you should consider it the norm. There are many popular licenses that deliberately chose to allow modified binary releases. BSD, for one. And that&#x27;s fine.<p>&gt; From what I have been reading over time, no one is going to come after a &quot;serious hobbyist&quot; if they ran GPL code in their projects having proprietary blobs.<p>Don&#x27;t confuse GPL and AGPL. Doing that is entirely allowed by the GPL, and thus there&#x27;s nothing to &quot;come after&quot;. Because GPL has freedom 0.<p>AGPL though, yes you&#x27;re right nobody is going to go after you and your blog. But you&#x27;re still in violation. You are pirating that software, because if you don&#x27;t follow the license then you have broken the contract under which you&#x27;re allowed to have it, and it defaults to you not.<p>So you&#x27;re not actually using AGPL. You&#x27;re just pirating.\nBut no, nobody&#x27;s going to come after you. Unless they&#x27;re a dick. But you&#x27;re in the wrong, so if you do get sued you&#x27;ll likely lose.<p>&gt; Leeching off of work of community and passing it as own work without passing modifications and improvements to community is what the issue is and unless you want to do that, fine.<p>I do recognize the problem. The best weapon against it that we have is that it&#x27;s expensive to maintain your own fork, and to keep merging it with upstream. Part of the reason Google et al contribute to the Linux kernel so much is the selfish reason that it&#x27;s MORE expensive for them to maintain their own fork with local patches they have to apply every time there&#x27;s an upstream release. It&#x27;s why many companies contribute. I&#x27;ve done it too, and small and big companies. It&#x27;s just cheaper to upstream your patch, and have it show up a while later in an apt-get upgrade.<p>That won&#x27;t always work, though. But choosing AGPL all but guarantees no corporate users or contributors. And many many non-corp too. And your project is all the worse for it.<p>And do you want to make good software for the world to use, or do you just want to stick it to the man? To end on a similar note to you: if your goal is not to make something good, but to stick it to the man, then fine, use AGPL.')