Item(by='mlochbaum', descendants=None, kids=[24878970], score=None, time=1603544318, title=None, item_type='comment', url=None, parent=24878497, text='APL has a complicated history in terms of function definitions: see <a href="https:&#x2F;&#x2F;aplwiki.com&#x2F;wiki&#x2F;Function_styles" rel="nofollow">https:&#x2F;&#x2F;aplwiki.com&#x2F;wiki&#x2F;Function_styles</a> . Confusingly, these direct definitions have nothing to do with Iverson&#x27;s 1974 direct definitions or those included in NARS in 1981: instead the name is presumably from the expansion of &quot;dfn&quot; as &quot;direct function&quot; (but it might also mean &quot;dynamic function&quot;, no one knows).<p>However, these direct definitions don&#x27;t have all that much in common with Dyalog&#x27;s dfns either. The central points in common are the braced syntax, the fixed names like x and y for arguments, and the idea that a definition&#x27;s type is determined by the argument names it contains. But another central idea of dfns is that they should use lexical scoping like Scheme: according to the document direct definition retains J&#x27;s purely local scope, like Python. However, because they retain control structures, they will also have some expanded functionality relative to dfns, which remove them in favor of recursion and guards.')