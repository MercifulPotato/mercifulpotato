Item(by='drpebcak', descendants=None, kids=[25291567], score=None, time=1607012293, title=None, item_type='comment', url=None, parent=25290203, text='It is a postgresql extension that you install on top of a normal postgresql server, so it is not worse in any way.<p>Timescale works by creating a &#x27;hypertable&#x27;, which is an aggregate of a lot of smaller &#x27;chunk&#x27; tables. These chunk tables are automatically split by date or incrementing id. This means that for queries that specify IDs or a date range within a certain range, you only have to query results within a few chunks, instead of looking through all the contents of the entire &#x27;hypertable.&#x27; [1]<p>Timescale also offers some other things like compression which can save you up to ~96% disk space while also improving query performance in some cases. [2][3]<p>It also has something they call &#x27;continuous aggregates&#x27; [4], which are similar to postgresql&#x27;s materialized views, but do not require manual refreshing - they instead update periodically through an automatic background job. There is also a feature which builds on this called &#x27;realtime aggregates&#x27; that allows you to combine the data within a continuous aggregate with the raw data in the tables that has yet to be materialized.<p>There are a lot more things besides that, but I think that&#x27;s a decent overview of the major features it brings to the table. From a dev perspective these things all make the data and the database easier to work with (especially targeting timeseries data). There is an api reference [5] that has some of the other commands timescale adds, if you want to see some of the other things it can help you do.<p>[1] <a href="https:&#x2F;&#x2F;docs.timescale.com&#x2F;latest&#x2F;using-timescaledb&#x2F;hypertables" rel="nofollow">https:&#x2F;&#x2F;docs.timescale.com&#x2F;latest&#x2F;using-timescaledb&#x2F;hypertab...</a>\n[2] <a href="https:&#x2F;&#x2F;docs.timescale.com&#x2F;latest&#x2F;using-timescaledb&#x2F;compression" rel="nofollow">https:&#x2F;&#x2F;docs.timescale.com&#x2F;latest&#x2F;using-timescaledb&#x2F;compress...</a>\n[3] <a href="https:&#x2F;&#x2F;blog.timescale.com&#x2F;blog&#x2F;building-columnar-compression-in-a-row-oriented-database&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.timescale.com&#x2F;blog&#x2F;building-columnar-compressio...</a>\n[4] <a href="https:&#x2F;&#x2F;docs.timescale.com&#x2F;latest&#x2F;using-timescaledb&#x2F;continuous-aggregates" rel="nofollow">https:&#x2F;&#x2F;docs.timescale.com&#x2F;latest&#x2F;using-timescaledb&#x2F;continuo...</a>\n[5] <a href="https:&#x2F;&#x2F;docs.timescale.com&#x2F;latest&#x2F;api" rel="nofollow">https:&#x2F;&#x2F;docs.timescale.com&#x2F;latest&#x2F;api</a>')