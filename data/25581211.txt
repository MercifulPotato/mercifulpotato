Item(by='valenterry', descendants=None, kids=[25581360], score=None, time=1609332551, title=None, item_type='comment', url=None, parent=25576360, text='&gt; Yes - because it means existing code that expects a T cannot accept a Future&lt;T&gt;<p>First of all, this is a programming language specific problem, not a general one. A good language allows you to write:<p><pre><code>    someFuture.map(someFunction)\n</code></pre>\nWhere &quot;someFunction&quot; accepts the plain value of type T that is stored within &quot;someFuture&quot;.<p>Yes, you cannot write someFunction(someFuture), but that is a good thing, since asynchronous execution can very well change the behaviour of the program. Hence, I want the compiler (if there is one) to warn me if a variable that I pass to a function is now a Future instead of a plain value. I then map over the Future and I&#x27;m good. Or, maybe I want to wait for completion of the future and I&#x27;m good.<p>In both cases, there is no reason to write a second version of &quot;someFunction&quot;.<p>Therefore...<p>&gt; If you want to use the legacy code you have to force the future potentially before you really needed it.<p>... this is only true in incapable programming languages.')