Item(by='pie_flavor', descendants=None, kids=None, score=None, time=1611990966, title=None, item_type='comment', url=None, parent=25957307, text='Three things I definitely dislike about this language:<p>- Error handling. Uninspectable, untyped errors that still must be declared and caught is just a total waste of an error system. It&#x27;s not <i>actively harmful</i>, since you can just use primitive unions instead, but it&#x27;s still a waste. If it&#x27;s a recoverable error, it should have types and be inspectable so you can recover from it; if it&#x27;s unrecoverable, it shouldn&#x27;t have to be caught or declared.<p>- The file-based package resolution scheme. It is an absolute blight on any language that has it.<p>- The lack of function overloading. I excuse this in Rust because Rust trait implementations have their own namespace, so nothing conflicts, but if there are two Pony traits with the same function with different types or a different arity, there doesn&#x27;t appear to be a way to implement both on the same class.')