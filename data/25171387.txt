Item(by='gravypod', descendants=None, kids=None, score=None, time=1605981866, title=None, item_type='comment', url=None, parent=25170520, text='You can do very fast builds with both Docker, Gradle, and Bazel all of which support caching. Unfortunately for my use case Docker and Gradle don&#x27;t have the understanding of the source tree needed for effective caching. Docker&#x27;s caching is built off of the docker context + previous build layer hashes, gradle&#x27;s caching is very very poorly thought out but - if you use no code generation (lombok, autovalue, Dagger) - it&#x27;ll work.<p>Bazel&#x27;s caching abilities are by far the best I&#x27;ve ever worked with because it understands the full source tree. It can also cache test executions. There&#x27;s some tests in my code that make sure I&#x27;m calling out to crypto libraries correctly and these tests take &gt;30 seconds to execute but almost <i>never</i> change. With bazel I can feel free to write as many of those integration tests as I want since they will only ever be rerun when something effects them (I.E. I change the version of my crypto library).<p>&gt; Honestly, while the theory is that you can Dockerize your build and you can do remote caching with Bazel I&#x27;ve never seen anyone do it<p>Yea, you likely <i>don&#x27;t</i> want to run bazel within a docker container, you want to build a Docker container within bazel [0]. The performance of this way of doing things is much better. My monorepo has &gt;30 services and `docker-compose up --build` was becoming super slow. To address this I&#x27;ve written bazel_compose [1] to obtain the same workflow docker-compose offers you with bazel as your container build system. It also supports a gradual migration scheme and will build both the Dockerfile AND the bazel version of your container to make sure they both start.<p>Unfortunately the bazel community is mainly populated with companies who are 100x the size of the average and as such they already <i>cant</i> run all of their services on their dev machines and so they don&#x27;t see the value of something like this. This version of bazel_compose is out of sync with HEAD @ caper but if you&#x27;re adventurous I&#x27;d recommend checking it out. It has extra features to watch all of the source files using ibazel and will automatically build&amp;restart containers (&lt;&lt;10 seconds in my experience) as you edit and save code.<p>[0] - <a href="https:&#x2F;&#x2F;github.com&#x2F;bazelbuild&#x2F;rules_docker" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;bazelbuild&#x2F;rules_docker</a><p>[1] - <a href="https:&#x2F;&#x2F;github.com&#x2F;CaperAi&#x2F;bazel_compose" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;CaperAi&#x2F;bazel_compose</a>')