Item(by='josephg', descendants=None, kids=[25091711, 25091273, 25091720, 25091648, 25094529, 25092296], score=None, time=1605347555, title=None, item_type='comment', url=None, parent=25090760, text='This situation is so terrible, and its embarrassing that despite decades of work, our industry doesn&#x27;t seem to be able to solve this problem in any modern operating system. (Edit: Apparently except for windows vista!)<p>It seems obvious to me that we need a transactional filesystem API with methods like:<p><pre><code>  fbegin()\n  fwrite() &#x2F; rename &#x2F; etc\n  fcommit()\n</code></pre>\nMost of the write calls wouldn&#x27;t return errors directly. Then the fcommit() call would atomically flush the locally buffered changes to the filesystem. If an error happened, the API should guarantee that the final state either contains all changes or none of them. The commit call should either block the thread until changes are safely stored on disk, or use a completion callback. This API probably couldn&#x27;t span multiple filesystems, but thats fine in practice. And bonus points if the API supports snapshot reads within the transaction.<p>This would dramatically simplify the code in every program that wants to safely interact with the filesystem. And it would remove the perennial, justified anxiety database engineers carry that they&#x27;re doing something subtly wrong without even knowing. Because fsync() is so coarse, I suspect performance would <i>improve</i> with this API, too. (So long as the transactions are mostly small.)<p>But why don&#x27;t we have this API already? My theory is that kernel developers don&#x27;t write enough userspace software to understand how bad the status quo is. And most people writing software in userland don&#x27;t understand the kernel well enough to feel empowered to change it. Adding an API like this might also need changes in the filesystems.<p>But wow, it would be a huge boon to humanity to have a filesystem API which isn&#x27;t so braindead. How many more decades do we need to have our files corrupt by default when errors happen? I wince every time I&#x27;m playing a video game and it has that &quot;saving - don&#x27;t turn off your console!&quot; animation. Or during OS updates. Data corruption happens because we implemented the wrong abstractions 50 years ago and somehow forgot that code is mutable.')