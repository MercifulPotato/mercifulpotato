Item(by='horsawlarway', descendants=None, kids=[25204277], score=None, time=1606250912, title=None, item_type='comment', url=None, parent=25202568, text='For a single person project, Rails is decent.<p>I actually think RoR is an utter garbage fire the second you have a team of 3+.<p>Also, to be blunt, RoR most reminds of me of the old Microsoft web frameworks at this point (asp.net, before core).  It&#x27;s all pre-configured.  You have very few structural choices to make, and you can focus on the actual project meat right away.  The problem, coming in as someone without experience in the platform, is that documentation is becoming incredibly fragmented.<p>The second you need to touch a config file, suddenly you have to know exactly what version of rails you&#x27;re running (because they change config names <i>CONSTANTLY</i>), and what the asset pipeline was like in that version, and so and such forth.<p>Of course, googling what you want links you to docs for Rails from 2 years ago, which no longer works.<p>It&#x27;s eerily reminiscent of microsoft products that tried to the same thing - because &quot;The best out of the box experience&quot; changes every year or three, and they all try to meet current expectations.<p>So long post aside, having used Rails for a while professionally, but also having come in with a LOT of alternative experience (mainly Node&#x2F;TSNode&#x2F;C#&#x2F;Golang) I find it functional, but fairly unimpressive, for small projects.<p>Also, the older I get, the more I want type systems.  I should try giving Sorbet a spin (ruby, but with types), Because RoR on a large team is a nightmare.  Types would help a lot.')