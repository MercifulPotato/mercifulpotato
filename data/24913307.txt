Item(by='tialaramex', descendants=None, kids=[24913537], score=None, time=1603841757, title=None, item_type='comment', url=None, parent=24904204, text='So, related obviously correct designs:<p>1. Git&#x27;s Force-with-lease. Git push&#x27;s &quot;force&quot; is too powerful, you will likely regret this much power, but it&#x27;s tempting. So force-with-lease is the same power <i>but</i> conditional on you telling git what exactly the state was that you&#x27;re overriding.<p>This has two benefits, one is like Rachel&#x27;s, it is an opportunity for a human to stop for a moment and consider, wait, why are we overriding this state? To find out what it is we might as well read... oh the state says it&#x27;s an &quot;emergency fix. Call Jerry&quot;. Maybe, just maybe, I ought to call Jerry before I force overwrite it?<p>But the other is about race conditions which Rachel doesn&#x27;t specifically address. If you are <i>very careful</i> to check that the state you want to overwrite with force is indeed a state that should be overridden, nothing prevents it meanwhile <i>changing</i> and then you overwrote state you didn&#x27;t even know existed. But force-with-lease fixes that because your lease won&#x27;t match.<p>I believe Force-with-lease is a pattern that ought to be far more widespread. I&#x27;ve used several configuration management tools that let somebody say &quot;Temporarily don&#x27;t mess with config on these machines&quot; and <i>some</i> of them let you write a reason like &quot;James is rebuilding the RAID arrays&quot; but none of them have that force-with-lease pattern that would be let me say &quot;I know James is rebuilding the RAID arrays, this change must happen anyway <i>but</i> if anything else is blocking the change then reject it and let me know&quot;.<p>2. Prefer Undo to Confirmation. If the computer <i>can</i> undo the action, even if that&#x27;s a bunch of work and you&#x27;d rather not bother, put that work in and enable undo. Humans always know they &quot;really&quot; wanted to do the thing you&#x27;re asking them to confirm so it&#x27;s somewhat futile to ask, but they often realise they didn&#x27;t want to afterwards and will undo it <i>if</i> you make that possible.<p>Not everything can be undone. Undo factory reset isn&#x27;t a thing. But <i>lots</i> of things you can&#x27;t undo it was just laziness, try to do better in your own software. Your users (which might include you) will be grateful.')