Item(by='AceJohnny2', descendants=None, kids=None, score=None, time=1604362749, title=None, item_type='comment', url=None, parent=24974723, text='It&#x27;s a way to sneak in the hash of a commit (the latest youtube-DL commit) in a non-obvious way.<p>A git repo is fundamentally composed of 3 object types:<p>* Blob (effectively a file)<p>* Tree (which refers to collection of Blobs and Trees, effectively a dir)<p>* Commit (comment&#x2F; author info and various other metadata, a Tree, and a previous Commit)<p>This is what the git tools are used to dealing with. However git submodules changed things. With submodules, a Tree object can <i>also</i> contain a commit object! Together with the .gitmodules metadata file, this allows you to include another git repo inside your repo.<p>Joey leveraged that ability to add the youtube-dl latest master commit into his repo as a submodule, <i>but deleted</i> the .gitmodules file so that git wouldn&#x27;t be verbose about it.<p>And that&#x27;s how you sneak a commit into a repo.<p>This additionally leverages GitHub&#x27;s data model (which is really the git data model), where they just have this huge DB of <i>all</i> the objects of <i>all</i> the repos on GitHub. So effectively by including this commit in a repo on GH, you&#x27;re making it refer to the the entire (buried) youtube-dl repo, but you need to be sneaky to be able to see it.')