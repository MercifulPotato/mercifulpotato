Item(by='rmetzler', descendants=None, kids=None, score=None, time=1606931895, title=None, item_type='comment', url=None, parent=25275231, text='My guess it’s the different idea of what an interface is and how errors are signaled.<p>An interface in Go can be defined by the client code and types just need to implement the functions. In Java Interfaces need to be defined before any code can use it. And exception handling makes code hard to reason about because it introduces hidden control flow.<p>I think Generics don’t give you that much leverage. Without them you need to duplicate the code for each type or class, but duplicated code is much easier to work with. Yes, it’s not really dry, but copy paste and search&#x2F;replace is something which increases developer productivity, fixing bugs in code with too many generics decreases it.<p>And one thing to keep in mind: historically a lot of interfaces in Java were necessary because Java had no lambdas. In Go functions are first class citizens and you don’t need an Interface just to dynamically call different functions.')