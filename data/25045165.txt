Item(by='chronal', descendants=None, kids=None, score=None, time=1605010985, title=None, item_type='comment', url=None, parent=25040013, text='What books have you tried to read?<p>I&#x27;ve read the regular languages section of Michael Sipser&#x27;s &quot;Introduction to the theory of Computation&quot; and I really liked how it was written and how the material was presented. The first chapter is an introduction to the mathematical background you will need as well as quick primer on proofs. The following sections are &quot;Automata and Languages&quot; (regular&#x2F;context free languages), Computability Theory (Turing machines, decidability &amp; more) and Complexity Theory. The book flows like this: Sipser initially starts with an example or two to demonstrate an idea, and then formalises the idea with definitions or proofs. I&#x27;d recommend you have a look at it!<p>As for why Turing machines matter, from my understanding, this comes from the notion of Turing completeness. Essentially if it&#x27;s possible to compute something, it can be done on a turning machine. Note that different computational models, such as the lambda calculus, can have the same level of power (Church-Turing thesis). An example of something that can&#x27;t compute the things that a Turing machine can compute, is definite finite automata which are equivalent to regular languages&#x2F;regexes. So, now we come to the most interesting bit, what are the limits of Turing machines? By understanding them, we understand what the limitations of our computational tools. This is where the halting problem comes in. It&#x27;s not possible (on a Turing machine) to write a program that can figure out if a general program will terminate. This implies there are things that we can&#x27;t really compute. There was a great answer of CS stack exchange regarding this: <a href="https:&#x2F;&#x2F;cs.stackexchange.com&#x2F;a&#x2F;32853" rel="nofollow">https:&#x2F;&#x2F;cs.stackexchange.com&#x2F;a&#x2F;32853</a><p>I hope that helps, let me know if you have any further questions.')