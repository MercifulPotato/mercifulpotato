Item(by='scaramanga', descendants=None, kids=[25925097], score=None, time=1611725166, title=None, item_type='comment', url=None, parent=25923171, text='I think the practical issues you describe like rebuilds of packages and so on are very real if we&#x27;re talking about general adoption. But if we&#x27;re talking about recompiling a handful of SUID programs which make up a TCB then I think a proposition like that has a lot of merit and can&#x27;t be easily dismissed.<p>Any C code that needs changing to deal with fat-pointers is probably already UB in C (or at best, has some implementation-defined behaviour).<p>That&#x27;s because the representation of pointers themselves is undefined (so you can&#x27;t get a valid result by looking at those). Pointer&#x2F;integer casts (either direction) are implementation defined. And accesses via pointers to anything beyond their bounds is already UB.<p>There&#x27;s some good and interesting discussion of what&#x27;s involved in all of this on: <a href="https:&#x2F;&#x2F;www.ralfj.de&#x2F;blog&#x2F;2020&#x2F;12&#x2F;14&#x2F;provenance.html" rel="nofollow">https:&#x2F;&#x2F;www.ralfj.de&#x2F;blog&#x2F;2020&#x2F;12&#x2F;14&#x2F;provenance.html</a><p>And there&#x27;s already bodies of work within the Rust (and C&#x2F;C++) communities around the concepts&#x2F;technologies that would need to be developed to achieve something like a memory-safe UNIX TCB.')