Item(by='d3ckard', descendants=None, kids=None, score=None, time=1610443344, title=None, item_type='comment', url=None, parent=25727254, text='That&#x27;s just untrue and Paul Graham wrote a great essay on that(Python paradox, mentioned in another comment in this tree). I have been working with Elixir for last 5 years, so I guess I can give some first hand opinion.<p>1. When your company uses esoteric language, your job offers usually have &quot;we can teach you the language&quot; instead of &quot;we require x years experience in language and y, z libraries)&quot;. That is a really great filter for people you want to work with, as they have to accept they will be learning from the start.<p>2. There is a smaller number of engineers qualified, but the number of companies they can apply to is even more reduced. I think all in all you&#x27;re winning in this equation as a hiring manager.<p>3. Your hiring process get cheaper, since it moves from having to filter candidates heavily to focus on matching the right person for the team. People who are interested in non-mainstream languages already fit some of the criteria you have to select for otherwise.<p>4. As the number of people to hire easily is smaller and onboarding even a talented person without experience in tech takes time, you get much better with selecting problems you want to tackle and grow in more reasonable pace. That has great benefits for your organisation.<p>I know for sure that if I am ever starting my own startup, I will use no mainstream technology. If I want JVM, I will use Clojure instead of Java, if I want web, I will use Elixir instead of Rails&#x2F;Django, if I go low level, it&#x27;s Rust, no C++ etc.<p>It&#x27;s counterintuitive, but it works better. People think about size of the whole market, but they should think about percentage of candidates applying being fit for the job.')