Item(by='lern_too_spel', descendants=None, kids=None, score=None, time=1606579341, title=None, item_type='comment', url=None, parent=25235914, text='I understood that part completely. You misunderstood my point, which is that with enough memory, generational GC <i>outperforms</i> naive explicit memory management, which is <i>impossible</i> with reference counting.<p>&gt; Except under unusual conditions, there is no case where GC is faster than manual.<p>Their simple generational GC outperforms manual memory management in every single workload in that paper given enough memory, so that statement is clearly false. A production quality GC does so with less memory.<p>&gt; Well, probably this is because GCs are fast when they have low to no memory pressure. They simply don&#x27;t need to garbage collect anything.<p>This is wrong. It&#x27;s because generational GCs start to look like arena allocators when they have enough memory, with cheap bump allocation and bulk deallocation. On most of their workloads, their simple generational GC already outperforms naive explicit memory management with less than 3x the memory, and this would certainly be better with explicit tuning or a production GC.')