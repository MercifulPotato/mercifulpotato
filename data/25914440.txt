Item(by='zinekeller', descendants=None, kids=None, score=None, time=1611658643, title=None, item_type='comment', url=None, parent=25914360, text='&gt; But anything running as your user account can also steal your ssh keys and gain persistence via cron or .bash_profiles or any of a multitude of other methods. How does a writable ADB binary let an attacker do anything more than they could do before?<p>I have no answers on Linux sadly (but you can disable user-side cron so that you can ensure that cron entries are not editable), but on Windows you can lock down your system by not allowing to run executables from non-whitelisted directories (AppLock), so you can only execute programs from  specific directories. Does not really prevent stupidity (&quot;I accidentally run NotAVirus.exe from our build directory&quot;) but you frustrate attackers from running their own executable (especially that most drive-by attacks rely on the Download folder or Temporary folder being executable). Of course, you need to monitor your build directories for harmful executables <i>but</i> you significantly reduce the attackers&#x27; footprint into the system. Additionally SSH keys can be stored in a format where you need to have an active password in order to decrypt them.')