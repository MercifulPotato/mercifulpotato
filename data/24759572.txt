Item(by='jayd16', descendants=None, kids=[24759976], score=None, time=1602537676, title=None, item_type='comment', url=None, parent=24759479, text='You&#x27;ve just shifted the problem.  Its better to just track your exact state and leverage the fact that you get exclusive atomic control of the main thread until you yield or return.<p>The only lifecycle a behavior can trust is its own.  Relying on other objects turns into a mess when your weak assumptions are violated.<p>Besides causing a spaghetti mess of lifecycle tracking and callbacks and such, it leaves you wide open to the major problem if callbacks running pass the life of the thing to call back to.  You&#x27;ve thrown away Unity&#x27;s lifecycle tools by dumping everything into a big pot.  Now you have to null-check in the callbacks to make sure your things are still alive. Track your own state and you&#x27;ll be fine.<p>Coroutines will stop when the owner dies and that is by design.  Leverage that to ensure brain dead clean up.<p>Objects are very often going to be disabled through user action anyway, eg quitting a level.  Its better to just assume that will happen at any time and plan accordingly.')