Item(by='Hello71', descendants=None, kids=[24884267, 24883883], score=None, time=1603599578, title=None, item_type='comment', url=None, parent=24866455, text='There are a number of issues with this program. First, there are a large number of bugs and general implementation issues. For example, &quot;vdx --help&quot; does not print help output, but instead raises &quot;Need a glob pattern for input files&quot;. Invalid options are ignored, and debug output is non-existent: &quot;vdx myfile.mp4 --asdf garbage&quot; results in &quot;error build&#x2F;myfile.garbage&quot; with no other explanation. It turns out that it is interpreted as &quot;vdx myfile.mp4 -f garbage&quot;. The list goes on and on.<p>More fundamentally, however, FFmpeg supports both simple and complex operations. This program takes simple operations and does them wrong, and takes complex operations and throws them out. For example, the command to halve the audio volume of an mp4 file containing audio and video would be:<p><pre><code>  ffmpeg -i infile.mp4 -c:v copy -af volume=.5 outfile.mp4\n</code></pre>\nThere are a number of problems with this command. Most importantly, it always encodes audio output with the built-in AAC encoder at 128 kbps. A better command would take into account the input quality and desired output quality and codec, then specify something like &quot;-c:a libopus -b:a 80k&quot; to select the desired result. vdx solves this complexity by simply ignoring it and using the FFmpeg default. A similar problem applies to its video codec settings, which always uses libx264 with the default settings. This is a poor choice. Almost always, either a slow setting (for better quality and smaller file size) or a fast setting (for worse quality and larger file size) is desired. Also, in my experience, either a lower CRF (for high-quality film content) or a higher CRF (for low-quality phone&#x2F;ripped content) is desired. If you&#x27;re going to punt on doing it properly and just use the defaults, you might as well just use ffmpeg directly.<p>The issues go far deeper than that, however. The entire design of the program is flawed. It appears to try to process the file twice: once for video, and once for audio. However, the author seems not to know that ffmpeg will re-encode video by default. Therefore, a simple command like &quot;vdx myfile.mp4 --volume 0.5&quot; unnecessarily re-encodes the <i>entire</i> video, <i>twice</i>. It applies operations in what seems to be undefined order, which is a problem when (for example) cropping and also resizing a video.')