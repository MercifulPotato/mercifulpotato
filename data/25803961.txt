Item(by='bjeds', descendants=None, kids=[25804912], score=None, time=1610820281, title=None, item_type='comment', url=None, parent=25803808, text='I hear you.<p>Whether I like it or not, by now big o notation has fallen into the category of &quot;folklore&quot; that working engineers use and abuse informally without being very precise about it.<p>It&#x27;s like the &quot;proof by engineers induction&quot;: if some statement P(n) is true for P(0), P(1) and P(2), then P(n) is true for all n \\in Z. :-)<p>Similarly if an engineer states that algorithm has a runtime of O(f(n)) that should probably be read as &quot;as n grows very large (whatever that means) the runtime approximates (whatever that means) some bound (below, above, whatever) f(n). yolo.&quot;.<p>But people should at least be _aware_ that they are being imprecise about it.<p>If I read a blog post or StackOverflow post or whatever and I see big-theta notation I know that the person is probably precise with her definition. If I see big-o then it may be correct, or accidentally correct (happens often due to the nature of the definition) or mistaken.')