Item(by='siebenmann', descendants=None, kids=None, score=None, time=1608839732, title=None, item_type='comment', url=None, parent=25530720, text='The &#x27;class&#x27; versus &#x27;type&#x27; distinction here is actually arbitrary. The same C level code is responsible for the message that you get from &#x27;type(whatever)&#x27; in both Python 2 and Python 3, but in Python 2 it drew a distinction between heap-allocated things (which were reported as &#x27;class&#x27;) and things that were not heap allocated (which were reported as &#x27;type&#x27;). Non heap allocated things had to be created in C; heap allocated things were usually implemented in Python and were usually made with &#x27;class X(base): ...&#x27;.<p>(This change was introduced in Python 3.0a5, bug #2565. Looking at the bug, this is a followup of making the type() of new style classes be reported as &#x27;class ...&#x27;, but preserving old behavior of type() for built-ins, done in 2001.)')