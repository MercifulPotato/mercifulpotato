Item(by='mikelevins', descendants=None, kids=None, score=None, time=1609769076, title=None, item_type='comment', url=None, parent=25628454, text='&#x27;REPL is opening interactive mode (if the language supports it) and entering &quot;2+2&quot;.&#x27;<p>If I&#x27;m going to enter &quot;(+ 2 2)&quot; using my normal development tools, I&#x27;m probably going to start Emacs and tell it to start a SLIME session with one of the Common Lisps I use. When I do that, it&#x27;ll create a repl buffer, because that&#x27;s the way I have slime configured.<p>I mean, I don&#x27;t have to load slime-repl. I could just interact with the Lisp&#x27;s read, eval, and print functions directly from an arbitrary buffer without involving the SLIME repl display at all. But, y&#x27;know, force of habit. Also, I do occasionally type something in SLIME&#x27;s repl buffer, especially if I want to see some big wad of output and don&#x27;t want it spewed into the middle of the expressions I&#x27;m working with.<p>Most likely I won&#x27;t type &quot;(+ 2 2)&quot; in the slime-repl buffer, though. I&#x27;m more likely to type it into a scratch buffer and send it to the Lisp by hitting C-x C-e. As soon as I start typing Lisp code, I know I&#x27;m probably going to want to add some more and maybe edit it and probably send it to the Lisp again. That&#x27;s just more convenient if I have it sitting in a buffer in front of me, and not scrolling off the top of the repl buffer into infinity.<p>So am I working in a repl? Lisp is running a loop waiting for input. I&#x27;m sending expressions to it. It&#x27;s reading them, evaluating the s-expressions produced by READ, and then printing the resulting values to a stream I can look at. Sounds like a repl to me. It&#x27;s what I&#x27;ve always understood a repl to mean, including when I&#x27;m building them.<p>Does it count as working in a repl when I use a keystroke to send &quot;(+ 2 2)&quot; to the Lisp from the scratch buffer, or does it only count if I actually physically type the text in the buffer where the Lisp displays its prompt? What if there is no prompt? What if I start Lisp and SLIME but don&#x27;t load the slime-repl extension? Does that mean that the loop that is reading, evaluating, and printing stops being a repl?<p>I&#x27;ll probably save my scratch buffer to a file at some point, if there starts to be enough text in it that I think I might forget some of it. Does it stop being an interaction with the repl the instant I save the buffer to a file? I can save the slime-repl buffer to a file, too; does it stop being a repl when I do?<p>What about Lisp and Smalltalk environments where the read-eval-print loop doesn&#x27;t display a prompt? Take a Smalltalk or INTERLISP worksheet, for example. Is it a repl if there&#x27;s a loop reading, evaluating, and printing expressions, but no prompt? Does it stop being a repl if the incremental inputs and outputs get saved to a file? Does it count if it&#x27;s not a text file, but the environment automatically saves the state of the worksheet to an image file that it automatically deserializes the next time you start the environment?<p>I don&#x27;t think I&#x27;ll adopt your lexicon, but I am sort of curious where its boundaries are.')