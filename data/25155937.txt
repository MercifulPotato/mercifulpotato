Item(by='mschuster91', descendants=None, kids=[25157773, 25155999, 25157545, 25156417], score=None, time=1605830641, title=None, item_type='comment', url=None, parent=25155832, text='Gitlab CI could almost replace Jenkins.<p>I say almost because Gitlab CI lacks one critical thing: support for tasks independent of a commit or other event. Stuff like &quot;take a dump of the production database and synchronize it to the integration environment&quot;.<p>Also, Gitlab CI is, due to its nature of polling workers instead of the master pushing work to the slave as well as spinning up a new container for each job instead of reusing the same environment, slower than Jenkins which does matter for some people.<p>A particularly dumb case showing this is when something needs to be done on a remote server via ssh - in Jenkins, one has to click &quot;SSH Agent&quot;, choose the credential, and you can use &quot;ssh user@host&quot; just fine and do whatever you want. In Gitlab CI, one has to check if ssh is available on the runner image, install it if it isn&#x27;t present, eval ssh-agent, and only then it works - and all of this needs to be re-done at each run (additionally meaning that your jobs have a dependency on an Internet connection plus the distribution&#x27;s package servers!). In Jenkins, with a proper tool configuration I can specify something like Maven or NodeJS and Jenkins will automatically install the tool if it is not present and then never again while in Gitlab, again, as it&#x27;s stateless all will need to be re-done every single build time.')