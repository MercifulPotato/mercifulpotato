Item(by='austincheney', descendants=None, kids=None, score=None, time=1610338237, title=None, item_type='comment', url=None, parent=25717390, text='I read the article and the comparison is improper.  It is a narrow slice of a larger problem that is impossible to see if your processional experience is limited to writing software.<p>What the article compares: SVC-like vs traditional can be more accurately described as non-software employment versus software employment.  It isn&#x27;t that silicon valley has some magical solution that nobody else has, but instead is incentivized to leverage expectations common to all other industries.  Again, this is impossible to see if your experience is limited to writing&#x2F;managing software, but is clear as day otherwise.<p>The key reason why this is different for other industries is that the expectations are higher for employees where the investment per employee is higher.  This is even true of lower paid and lower educated professions like truck driver or construction equipment operator compared to software engineer.  In all other industries there exists some form of licensing or certification followed by some form of formal training such as a broker&#x2F;agent relationship and then there is continuing education or periodic re-certification.  These processes exist because of regulation.  They take time and money away from the profession, which is an investment into each employee.  With that level of expense more is expected in return by the employer.<p>The software profession has none of that.  There is no investment in a software employee aside from keeping them happy enough to retain them.  As a result its hard to think anything more of them than as a tool, like a janitor.  This where you get the churn the article accurately describes as death by JIRA.  SVC-like companies invest more in employees with higher salaries and thus expect more in return, which is not entirely the same as a formal professional process, but is a step in solving for this gap.<p>As for plain as day examples look at the common expectations for engineers at engineering firms, lawyers at law firms, and even truck drivers and police officers.  There are all kinds of administrative and documentation expectations that are impossible to find in most software developers.  Comparatively most software developers at the <i>traditional</i> companies seem largely illiterate.  As an example most of these guys are scared to death of writing original software without a billion packages from NPM or Maven and are almost utterly incapable of writing formal documentation.')