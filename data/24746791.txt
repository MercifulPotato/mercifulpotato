Item(by='karbarcca', descendants=None, kids=[24752239, 24746830], score=None, time=1602432891, title=None, item_type='comment', url=None, parent=24746480, text='As the primary author of CSV.jl, I can help clarify on the posted issues:<p>* #720: ended up not being an issue at all, but a misconfigured environment\n* #714: there was indeed a corner case when automatically detecting float values where the float started with &#x27;-&#x27; sign and only had a trailing decimal (e.g. &#x27;-123.&#x27;). Not super common, but indeed a bug\n* #749, #734 are related to a new &quot;beta&quot; feature (CSV.Chunks) which allows iterating over large CSV files in batches. I&#x27;ve been trying to track down the issues 2 people have reported, but haven&#x27;t been able to reproduce on the same large file. Once we iron out some of those issues, we&#x27;ll mark the feature as &quot;out of beta&quot;.<p>I agree that Julia packages in general are still evolving and  you might run into issues, but at the same time, I strongly believe it&#x27;s reached a similar maturity in most ways with other language package ecosystems. For example, I use a lot of Javascript&#x2F;Python frameworks&#x2F;packages and at least for me, I tend to run into corner case bugs&#x2F;issues as often as I do for the most common&#x2F;mature Julia packages.<p>Compared with, say, data.table in R, or pandas in python, one of the things I enjoy most about Julia packages is that they&#x27;re almost exclusively written in pure Julia. Having had to dive into data.table&#x2F;pandas source C&#x2F;C++ + language binding glue code is a huge pain when trying to track down bugs, so I feel like my knowledge of Julia &quot;goes further&quot; in that if I run into a package bug, it&#x27;s relatively much easier to track down what&#x27;s going on and even submit a pull request to fix!')