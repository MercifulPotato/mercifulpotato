Item(by='proverbialbunny', descendants=None, kids=None, score=None, time=1608574338, title=None, item_type='comment', url=None, parent=25492557, text='Things have changed since 2004.  Back then there was software engineer R&amp;D teams, research engineers, and the like, that were ideal to push &quot;rockstar devs&quot; towards, due to their nature of liking to solve difficult problems above all else.<p>Today we have data scientist and research scientist roles.  While some data scientists are glorified data analysts, most of them do exclusive R&amp;D work.<p>This has since created a divide between two types of &quot;rockstar engineers&quot;.  One type falls to the left side of the Dunning Kruger Effect.  They can&#x27;t understand why everyone else is so stupid.  They have a large ego, and they think they&#x27;re better than everyone else.  Then there is the other group, one who specializes in difficult tasks that require a deep domain knowledge.  Because of this prerequisite so it can be hard to share work with others, unless they also specialize in that domain.<p>While at first blush the two groups look similar, they&#x27;re quite different.  One advertises themselves as super, has a huge ego, but really they&#x27;ve just taken on too easy challenges.  Then there is the other group, who secretly is quite anxious about their own abilities, because of the massive technical challenges they face and have seen.  They learn healthy communication and team skills, because what they are doing is so complex they have no other choice.  They may at first not appear like a team player, but it has more to do with the nature of their work.<p>This is why it is encouraged that management push the rockstar types into more and more challenging R&amp;D type technical roles, which has the nice side effect of shrinking a large ego.  Today this means encouraging them move to research roles or data science type roles.  No longer are they top dog when this happens.  All of a sudden there is a world of challenge beyond what they can comprehend.  It&#x27;s like taking a straight A high school student and dropping them into a good university.  Suddenly they&#x27;re challenged to do more and go beyond what they knew was possible.  And best of all, it gets them out of dev circles where team work is a stronger prerequisite. However, this assumes they&#x27;re actually a rock star driven to be the best at something, not just the first group with a frail supersized ego.')