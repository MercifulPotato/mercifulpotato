Item(by='3np', descendants=None, kids=None, score=None, time=1605873669, title=None, item_type='comment', url=None, parent=25158010, text='Agreed. I&#x27;ve been aware of and thinking to check out ZFS for over a decade because all these weird nerds keep talking about it but it seemed so involved and complicated.<p>One simple command each to:<p>* create a zpool<p>* create a dataset (persistently mounted across reboots, with optional encryption and compression etc)<p>While, yes, properly tweaking ZFS for performance and making proper decisions on things like recordsizes, L2ARC and SLOG requires a bit of deeper understanding of how it works, the CLI is very approachable and the man pages are straight-forward and easy to understand for a beginner.<p>Compared the alternatives of cryptsetup&#x2F;mdadm&#x2F;lvm&#x2F;lvcache, it&#x27;s such a breath of fresh air and a lot easier to work with. It&#x27;s unified and intuitive and things just make sense.<p>The big game-changer for me is its caching mechanisms. For workloads that already have efficient caching (mature databases, for example), it might not make a big difference, but for things doing redundant IO it can improve the performance by an order of magnitude in a way the Linux page cache just can&#x27;t.<p>Put a fast NVMe as L2ARC in front of a mirror of slow but inexpensive disks and you can eat the cake and have it.<p>Oh, and native compression (currently lz4 but zstd is coming) that barely impacts performance (and sometimes improves it).<p>I&#x27;m one of those weird guys now and even my nerd friends don&#x27;t get me anymore :&#x27;)')