Item(by='thu2111', descendants=None, kids=None, score=None, time=1609854772, title=None, item_type='comment', url=None, parent=25635923, text='Are you mixing up Graal the JIT compiler with Native Image the tool that spits out ahead-of-time compiled executables? When I say &quot;Graal&quot; I mean the JIT compiler that can run on regular HotSpot and is just an ordinary Java JITC implemented in Java.<p>You have to distinguish between technical standards and implementations.<p>JVM bytecode is a technical standard for a portable, cross platform, strongly typed ABI. Anyone can implement it based on the docs.<p>Truffle is an open source API with a clear specification for creating interpreters. Anyone can implement it based on the docs, although there&#x27;s no reason to do so given its permissive licensing.<p>Beyond that it&#x27;s all implementation: the Graal JIT recognises when it&#x27;s compiling Truffle interpreters and does it in a fast way, but it doesn&#x27;t have to and Truffle interpreters can run on any JVM including those that pre-date Truffle&#x27;s own existence. They just won&#x27;t be as fast. GraalVM EE is a for-pay version that does an even better job, well beyond state of the art, but the open source free version is no slouch and Scala code can go faster by e.g. 20% or more even with the open source version.<p>There is ALSO the native-image tool that compiles things to native code ahead of time. Many people use the word Graal to mean this, because it&#x27;s the most eye-catching thing in the suite, but that&#x27;s not correct. It&#x27;s called either native-image or SubstrateVM. The open source version of this produces code which is slower than regular HotSpot runs but has no warmup time and starts instantly. The speed drop is due to losing profile guided and speculative optimisations, it&#x27;s not a pricing issue. The EE version of native-image that you pay for has various other features like the ability to gather profiles using HotSpot and then use them when compiling to win back <i>some</i> of the speed, but not all of it - you can&#x27;t really beat Graal JITC on HotSpot for peak performance. The EE version also has some other useful features for security and sandboxing.<p>In other words, the Java&#x2F;Oracle guys seem to be doing exactly what you&#x27;d want to see: there are standards, specifications and then implementations - all clearly separated. There are open source implementations, and better ones with support contracts that fund the development of the whole shebang.')