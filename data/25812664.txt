Item(by='KronisLV', descendants=None, kids=None, score=None, time=1610904446, title=None, item_type='comment', url=None, parent=25812459, text='&gt; I don&#x27;t know how hard it is to develop architectures which run on several cloud services. If it is possible, shouldn&#x27;t this be standard practice?<p>I think the answer to this question depends on a multitude of factors. For example, nowadays you can use container technologies to create images of your software, which will run on any bit of infrastructure that supports them, be it AWS, GCP, Azure, or even your on-prem servers with something like Rancher or even Docker Swarm running on it. However, creating software like that needs some special thought put into it, this site covering some of those aspects: <a href="https:&#x2F;&#x2F;12factor.net&#x2F;" rel="nofollow">https:&#x2F;&#x2F;12factor.net&#x2F;</a><p>And while this will make your code more reproducible and migrating between different clouds more easy (or even running on multiple clouds simultaneously), it&#x27;ll do so at the expense of making development slower and a bit harder for you. For some, this will be worth it, while for others it&#x27;ll be less so. There are definitely valid criticisms of container technologies and some of the aspects they don&#x27;t handle all that well yet (Kubernetes being overcomplicated for some projects, whereas Docker Swarm isn&#x27;t &quot;trendy&quot; or in active development, then there&#x27;s managing storage and needing to work with either network file systems, or distributed file systems, or even using bind mounts even though they&#x27;re considered bad practices, then there&#x27;s routing and the complexity of service meshes etc.).<p>Of course, there are also people who really don&#x27;t want to think about infrastructure that much and just want their apps to run in a semi-managed manner, like Heroku does, or perhaps just want to use one of the cloud vendors&#x27; managed database or messaging system offerings. Not everyone has a large amount of resources to invest in engineering and running infrastructure.')