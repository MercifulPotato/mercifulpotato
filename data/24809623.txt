Item(by='pdimitar', descendants=None, kids=[24809689], score=None, time=1602939504, title=None, item_type='comment', url=None, parent=24809249, text='<i>(EDIT: I misread your question, apologies. OCaml vs. C++ is mostly because of much less surprises to start working with it. OCaml vs. Rust is mostly because Rust mandates you to pay attention to a lot more initially (`Result`-s being a prominent example, although using `.expect()` or `.unwrap()` actually helps a lot) and even if I absolutely love that you have to iron-proof your code, it does get in your way when you just want to try something quickly. It kills the motivation intrinsic to the flow state.)</i><p>---<p>(Original reply:)<p>I&#x27;ll admit it&#x27;s not a factual and clear-and-cut distinction.<p>OCaml has warts (no multicore, although that&#x27;s claimed to be very close to complete now; also no UTF-8 strings by default, and a somewhat surprising tooling, the first time at least) but I found Haskell to ask too much of me to even start -- I almost immediately grokked monads and lazy evaluation but it seemed to be too much effort for something you&#x27;d like to quickly play with. And when I saw the list of all compiler variants I almost gave up right there and then.<p>OCaml, as mentioned in the parentheses above, isn&#x27;t without problems too but I found that I could get to a working dev stack and the ability to make a quick program and run it, much quicker compared to Haskell. Also, it&#x27;s very terse.<p>Not the most compelling or factual of reasons but this is how I arrived at that place where I prefer OCaml for sketching ideas and not Haskell.')