Item(by='Chris_Newton', descendants=None, kids=None, score=None, time=1609270099, title=None, item_type='comment', url=None, parent=25569526, text='<i>If Python was a good scientific programming language, the most natural way to implement scipy&#x2F;numpy and all that would be using Python itself, but this is not at all the case.</i><p>To be fair, with modern hardware capabilities, I still wouldn’t be writing out linear algebra algorithms in the language itself even if I were programming in a relatively low-level language like C or C++. I’d be using an implementation of BLAS&#x2F;LAPACK or some other suitable library, which in turn might well have been written in carefully tuned assembly language on the target platform in order to use any parallel or otherwise specialised operations provided by a CPU or GPU, partition data for optimal cache use, etc.<p>The situation with numpy and other numerical libraries in Python seems analogous. We are still importing highly optimised code to do the numerical heavy lifting and then using a higher-level language to write the less performance-sensitive logic and glue everything together conveniently.')