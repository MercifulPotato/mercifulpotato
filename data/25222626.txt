Item(by='dmw_ng', descendants=None, kids=[25222854], score=None, time=1606416699, title=None, item_type='comment', url=None, parent=25222449, text='io_uring is no more specialized than an SSD is today, our storage interfaces went from handling between 1 and 4 requests in parallel for the past 50 years to suddenly handling literally hundreds on consumer grade hardware (IIRC NVMe is specced either for up to 64k queue depth or unlimited queue depth). Of course the software environment must change to keep up, is it really reasonable to continue feeding such devices one IO at a time because that&#x27;s how it was done in 1970?<p>It is not fun to program against io_uring just as BPF can be a nightmare, but that&#x27;s a problem for userspace to solve with libraries and better abstractions, much in the same way userspace usually doesn&#x27;t have to deal with parsing the shared ELF segment exported by the kernel (glibc does that) or writing complex routines for fetching the system time (the ELF segment does that), both of which are implementation details necessary for extracting the full performance from modern hardware.<p>We&#x27;ll catch up eventually, but first the lower level interfaces must exist. In meantime, I cringe Every. Single. Time. I run UNIX find or du over my home directory, realizing it could have completed in a fraction of the time for almost 10 years now if only our traditional software environment was awakened to the reality of the hardware it has long since run on.')