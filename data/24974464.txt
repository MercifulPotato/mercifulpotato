Item(by='foxtr0t', descendants=None, kids=[24974546], score=None, time=1604357782, title=None, item_type='comment', url=None, parent=24967432, text='This article may be poorly written, but if you actually read through the whole thing, it makes some brilliant points:<p>1. IaaS providers are incentivized to create services that lure you with managed solutions that seem like a great deal on paper, while they are actually more expensive to operate than their self-rolled alternative.<p>2. &quot;DevOps&quot; and &quot;Infra&quot; people charged with making these decisions often follow the industry zeitgeist, which for the moment is whatever AWS, GCP, and Azure are offering. This is in spite of the best interests of the company they work for. The right decision in so many cases is what choice one can defend when something goes wrong, or what you can parlay into the next gig. If costs, performance, and features aren&#x27;t closely managed, scrutinized, compared, going with a solution like Aurora&#x2F;Redshift&#x2F;Dynamo won&#x27;t be challenged.<p>3. Nothing is easily comparable because these services aren&#x27;t just a CPU as you mention, instead they&#x27;re hardware and software rolled into one. This is intentional, and has little to do with making things easier for you. At best, IaaS providers defend this as &quot;differentiation&quot; but it&#x27;s closer to obfuscation of true cost. Go ahead and ask your AWS rep if use case x, y, and z will perform well on lambdas and you&#x27;ll likely get a near canned response that they all fit perfectly, even if y is a job with high load spread uniformly through time. The only way you can make this comparison is by creating the two services, standing them up in production for a week and checking the bill. In other cases such as FPGAs and databases, you&#x27;ll have a much harder time as not only is the software&#x2F;hardware offering unique, but the user code will be completely different and require entire rewrites to get what _might_ be a fair comparison.')