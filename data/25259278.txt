Item(by='toast0', descendants=None, kids=[25260574, 25260816], score=None, time=1606771949, title=None, item_type='comment', url=None, parent=25257361, text='If you&#x27;re not running into overfull mailboxes, you&#x27;re not trying hard enough! :D<p>Usually, it&#x27;s some process that&#x27;s gotten itself into a bad state and isn&#x27;t making any progress (which happens, we&#x27;re human), so ideally you had a watchdog on it it, to kill it if it makes no progress, or flag for human intervention, or stop sending it work, cause it&#x27;s not doing any of it.<p>But sometimes, you get into a bad place where you&#x27;ve got much more work coming in than your process can handle, and it just grows and grows. This can get worse if some of the the processing involves send + receive to another process and the pattern doesn&#x27;t trigger the selective receive optimization where the current mailbox is marked at make_ref() and receive only checks from the marker, instead of the whole thing.<p>If you miss that optimization, the receives will check the whole mailbox, which takes a long time if the mailbox is large, and tends to make you get further behind, making it take longer, etc, until you lose all hope of catching up, and eventually run out of memory; possibly triggering process death if you&#x27;ve set max_heap_size on the process (although where I was using Erlang we didn&#x27;t set that), or triggering OS process death of BEAM when it can&#x27;t get more ram because allocation failed or OOM killer, or triggering OS death, if it has trouble when BEAM sucks in all the memory and can&#x27;t muster its OOM killer in time and just gets stuck or OOM kills the wrong thing.')