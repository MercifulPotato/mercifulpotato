Item(by='dan-robertson', descendants=None, kids=None, score=None, time=1604960664, title=None, item_type='comment', url=None, parent=25034242, text='I think this sounds nice but it feels difficult to me.<p>One property you might want would be that, in some sense, parentheses would always remain balanced. I think this would be very hard if not impossible to get from the graph-of-byte-ranges representation. But I’d be excited if someone figured out how to do it.<p>I think a particular part of the problem is to get the diff algorithm to match parentheses correctly. Consider some changes from A to B:<p><pre><code>  1A (a b)\n  1B (a b) (c d)\n  \n  2A (define p () (a) (b) (c))\n  2B (define q () (a) (b)    ) (define q () (p) (c))\n\n  3A (a b   c d)\n  3B (a b) (c d)\n  \n  4A (a b   c  )\n  4B (a b) (c d)\n  \n  5A (a b   c)\n  5B (a b) (d)\n</code></pre>\nI think in these examples it’s relatively easy to pair up parentheses in a reasonable way though there are already some tricky cases. As you get more of a tree structure and want a diff algorithm that can think of operations like wrapping, splitting, and spreading as basic operations as well as appending and deleting, I think it becomes even harder to make the right call. Indeed I think computing this kind of diff of s-expressions is computationally a harder search problem than diffing files.')