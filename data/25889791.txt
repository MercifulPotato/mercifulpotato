Item(by='brundolf', descendants=None, kids=[25890257], score=None, time=1611468959, title=None, item_type='comment', url=None, parent=25889677, text='&gt; One issue I&#x27;ve had with any kind of auto-generated bindings based on metadata is that you get low-level types such as &quot;Win32 BOOL&quot; and &quot;Win32 GUID&quot; polluting the output. Mainstream languages already either have native bool and guid types, or have defacto standard libraries.<p>This shouldn&#x27;t actually be a huge problem in Rust, because of the traits system. It should be possible to implement all the expected behaviors (Into&#x2F;From, Add&#x2F;Sub&#x2F;Mul&#x2F;Div, Ord&#x2F;Eq, etc) for these special types and if library code is properly generic, it shouldn&#x27;t care whether or not you&#x27;re using the native type. If it does require a specific concrete type, From&#x2F;Into should still make things reasonably ergonomic.<p>Re: safety, the typical approach has just been to keep one library that&#x27;s a direct mapping to the C API, which is publicly unsafe, and then create a safe library abstracted on top of that which codifies the documented behaviors. That layer relies on documentation, and on humans to follow it, but then so does all C code ever written :)')