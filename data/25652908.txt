Item(by='gue5t', descendants=None, kids=None, score=None, time=1609890239, title=None, item_type='comment', url=None, parent=25651392, text='You&#x27;re completely right, of course. Seeing the amount of effort put into virtualization, sandboxing, containers, etc. is enough to make one wonder why every enterprise is so shortsighted. Capabilities obviate all of the above, and are neither a new untested idea nor more complicated than what we have--as we clearly see in the repeated attempts to build things that approximate them with ACLs and sandboxes and seccomp rules and so on.<p>Linux is slowly moving toward capability-centric design with more and more comprehensive namespacing and file-descriptor-based interfaces to things like pidfd and memfd, but there&#x27;s still a long way to go before we can jettison ambient authority such as the filesystem entirely. Meanwhile, Google&#x27;s Fuchsia may deploy a capability-based operating system to the masses, but it will likely only be used to sandbox applications written for Android anyway. The real potential of capabilities is to simplify the interface of a power-user operating system by eliminating the race conditions, side channels, privacy leaks, firewalls, virus scanners, and unix-style permissions from developers&#x27; and users&#x27; day-to-day experience completely.<p>There will still be memory-safety zero days, of course, until we abandon languages where humans are statistically incapable of writing memory-safe code.')