Item(by='kstenerud', descendants=None, kids=[25525979], score=None, time=1608736365, title=None, item_type='comment', url=None, parent=25515386, text='The problem is that most CSS properties are contextual. They&#x27;ll work one way in a certain hierarchy, and a different way in another. I&#x27;ve had issues where items would suddenly appear in REVERSED order if I changed the width of the container object (which would be fine if there were a CSS property &quot;component-alignment: reversed&quot;, but there isn&#x27;t). There are no enforced types. You can assign any value to any property name, even though invalid names will do nothing (and so typos cause hours of lost time). Some properties won&#x27;t do anything unless they&#x27;re done in conjunction with other properties, but you have no way of knowing that because there&#x27;s no debug feedback mechanism. Even worse: some properties do nothing unless the SURROUNDING object has certain properties set to certain values. That&#x27;s INSANE.<p>There&#x27;s very little logic, but much lore and arcane incantations to CSS, which is what makes it a bad system (much like the crotchety systems in the bad old UNIX engineer days of &quot;if it was hard to write, it should be hard to understand&quot;).<p>I&#x27;ve worked with a number of UI systems, and the best ones are ALWAYS component based, where component properties ALWAYS behave the same way internally, and where you can COMBINE them into more powerful components. This is not what happens with CSS. Basic things like alignment, size, borders, padding, margins all behave in weird ways depending on the context, or the presence or absence of text, or rely on similar sounding but subtly different properties that only work in certain contexts and not others, with no debug information to tell you why it&#x27;s not affecting anything. That&#x27;s not cool. If someone were to invent a programming language that behaved this way today, they&#x27;d be laughed out of the room.')