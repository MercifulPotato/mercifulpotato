Item(by='throwaway_pdp09', descendants=None, kids=[24937252], score=None, time=1604004959, title=None, item_type='comment', url=None, parent=24935115, text='Hmm. This is tricky and I&#x27;m not sure I completely get your requirements, but let me try. Other emacs dudes will need to step in. In the following no customisation needed as I don&#x27;t use elisp.<p><pre><code>  Copy or cut everything between these quotes &#x2F; parenthesis &#x2F; brackets.\n</code></pre>\nDon&#x27;t know. Never needed to. Trivial with a macro<p><pre><code>  Delete up until the next X character. Now delete up until the next X character again.\n</code></pre>\nNever used it but <a href="https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;manual&#x2F;html_node&#x2F;emacs&#x2F;Other-Kill-Commands.html" rel="nofollow">https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;manual&#x2F;html_node&#x2F;emacs&#x2F;Ot...</a>   M-z char - Kill through the next occurrence of char (zap-to-char).<p><pre><code>  Cut these rows then paste them over there.\n</code></pre>\nWell, select rows, kill, move to new place, yank. Not sure what else you want.<p><pre><code>  Change all instances of &quot;foo&quot; to &quot;bar&quot;.\n</code></pre>\nM-S-% - query replace (and variations such as regexp)<p><pre><code>  Show all lines with (or without) &quot;foo&quot;.\n</code></pre>\nErm can only do with, but as in original post, M-s o (occurs)<p><pre><code>  Reformat a line like so, now do it to the 351 line following it.\n</code></pre>\nNot sure your requirements but command align-regexp works for me. Don&#x27;t know what else you want.<p><pre><code>  Reindent this section of text.\n</code></pre>\nDepends on mode, but select text then TAB key.<p><pre><code>  Go to the beginning of this if() &#x2F; method &#x2F; loop.\n</code></pre>\nDon&#x27;t know. Perhaps Search reverse for { char?<p><pre><code>  Go the the file where this Python &#x2F; PHP class is defined.\n</code></pre>\nMode specific. I&#x27;d be pretty sure that kind of functionality doesn&#x27;t come built into vim. I use Omnisharp which does similar but it&#x27;s an external package.<p><pre><code>  In markdown files, open this hyperlink\n</code></pre>\nmode specific. Presumably also in Vim?<p><pre><code>  Search for the first occurrence of this token in this method.\n</code></pre>\nJust search forward. That may not be quite what you want, maybe.<p><pre><code>  Search for the next occurrence of this word (actually learned to do this today, for the most part)\n</code></pre>\nM-s .  when on symbol.  Subsequently C-s search forward, C-r searches reverse (backward).<p>But I&#x27;m not trying to change your mind, use what suits best.<p>Edit: M-S h is highlight-regexp which highlights all matches in the buffer in colour (does depend one some mode stuff, but works in most modes).')