Item(by='ivanbakel', descendants=None, kids=None, score=None, time=1609173467, title=None, item_type='comment', url=None, parent=25550240, text='&gt;Lean makes it easy to switch from constructive to classical logic (you just open the classical logic module).<p>I wonder what this is in comparison to. Coq also has a classical logic module (though it is more awkwardly named). HOL Light is, from a quick Google, already a classical prover. Are there any provers where classical logic is hard to come by? Or is Coq&#x27;s version more complicated to use?<p>&gt;Lean makes quotient types easy (unlike Coq, when tends to work with awkward setoids).<p>(At the cost of subject reduction). This remains the most interesting point of comparison in my mind. How can the Lean kernel be sound if it&#x27;s possible to reduce proofs to non-proofs?<p>&gt;.... it is nearly impossible in Lean to curry a structure. That is, what is bundled cannot be later opened up as a parameter.<p>Could a Lean user shed some more light on this? In what circumstances would you want to treat a bundled type as a parameter? Surely accessing the type itself - like the underlying set of a group, in the example - can still be done in either case?')