Item(by='zzo38computer', descendants=None, kids=None, score=None, time=1609369558, title=None, item_type='comment', url=None, parent=25582905, text='It is true, but the capability is misused (and the web browser doesn&#x27;t give enough control to the user, but that is a separate (but still related) issue).<p>For most documents, scripts should not be needed and neither CSS. In some cases, it can help, but ensure they still work when they are disabled.<p>Some things are mainly &quot;apps&quot; so it is not so useful without scripts, although even then, if scripts are disabled, it should display explanations of what it is, documentation (if any is available), links to source codes and downloads (if any), etc.<p>Sometimes it is a document which mostly doesn&#x27;t need scripts but there are some features that you might want, which aren&#x27;t expressible in plain HTML, such as certain kinds of semantics. For such usage, it may help to add some sort of &quot;extensible interface identification&quot; (perhaps with URIs or UUIDs) to HTML elements; the user can apply their own implementation if wanted, disable it entirely if that works, or enable the document scripts to use the implementation included in the web page. For example, some text could be tagged indicating that it is a measurement of distance; the web browser might be able to convert it to other units of measurement (subject to user configuration); if not implemented or if disabled by the user, it is still normal text, and is still readable. Another example is that a form could declare the format of the text inside of a &lt;TEXTAREA&gt; field, in case the user wants such things as syntax highlighting, previewing, WYSIWYG editing, etc; if the user disables them or if it is not implemented, then it is still just a normal &lt;TEXTAREA&gt; field and still works.<p>HTML also shouldn&#x27;t be misused; ensure commands such as &lt;H1&gt;, &lt;H2&gt;, &lt;A&gt;, etc are used properly, and they can make things just working properly better, e.g. if the user&#x27;s web browser supports an automatic table of contents window, it can be filled in automatically if the headings are correct, and many other things can also be possible due to such things.<p>The ideas I listed above can be used to enrich possibilities even while the user is empowered to control their own experience, and without wasting as much energy.')