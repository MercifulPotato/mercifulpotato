Item(by='parley', descendants=None, kids=[25239473], score=None, time=1606554880, title=None, item_type='comment', url=None, parent=25236271, text='Edit: As varbhat has edited their post to clarify that they indeed <i>did not</i> mean to say backing in an adversarial way, my post can be ignored or just read as my understanding of the space.<p>Apologies if I misunderstand your post, in which case you can disregard my entire post, but -- I assume you mean as in adversarial backing?<p>These companies use practically all of these languages but to a different extent, for different uses, and for good reasons.<p>I currently get paid to write C and Go but I dabble in most things, and I&#x27;m certainly the happiest when I get to write Rust and ReasonML&#x2F;ReScript. Having said that, I personally think it&#x27;s fair to guess that Swift will continue to shine <i>mainly</i> as Apple ecosystem language, Go will continue to shine <i>mainly</i> as network server language and Rust (and whatever follows it) will continue to grow for network servers but will also slowly seep into our shared foundational layer of software. Slowly, slowly, libraries, kernel modules, runtimes, stdlibs for other languages, frameworks, etc. This a good thing, because it slowly rids us of old C and C++ code bases that may not have kept up with the times<p>Yes, all of these languages are being used to write excellent CLI tools, graphical applications, etc and that&#x27;s wonderful (I use many of them), but none of these languages are realistically competing to kill any of the other in any definitive way.<p>Now if only Go would give me sum types (ADTs), my life would be even easier :)')