Item(by='pmiller2', descendants=None, kids=None, score=None, time=1604112529, title=None, item_type='comment', url=None, parent=24948184, text='Here&#x27;s the deal: I am not presenting my opinion as objective fact, nor do I actually care that you&#x27;re a DBA.  If anything, the fact that you are a DBA makes your opinion <i>less</i> relevant to me as an application developer.  Simply put, you do not share my pain, and the people who have upvoted me, while your comment is currently gray as I write this, have.<p>The example was intended to show a scenario in which MySQL <i>silently</i> loses data.  There are certainly situations in which this sort of data loss is acceptable.  I&#x27;ve been involved in scenarios where it was not acceptable, I was surprised by the behavior, and I ended up with a bunch of missing data.<p>The problem here is that I was <i>surprised</i> by my database. \n That should literally <i>never</i> happen.  The correct behavior in this specific case is for the database driver to raise an exception or warning (exactly which should probably be a configurable option, defaulting to an exception).  That way, if an exception gets raised in my application, at the very minimum, I have a traceback in my logs to <i>tell</i> me something went wrong, which allows me to fix the issue sooner rather than later.<p>As for your existence proof that &quot;MySQL&#x27;s behavior is ok,&quot; the fact that MySQL has a bigger installed base literally proves nothing.  I guarantee you there are folks out there who are experiencing such behavior and being surprised by it, just like I was.  There are people out there for whom this specific behavior is not a problem.  And, there are people out there who are length checking every bit of text they try to stuff into a VARCHAR(n) or CHAR(n) field using MySQL, because they started with MySQL and they&#x27;re basically stuck with it, unless they want to do major surgery on their app.')