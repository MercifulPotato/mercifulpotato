Item(by='xscott', descendants=None, kids=[25543215], score=None, time=1608937546, title=None, item_type='comment', url=None, parent=25537717, text='This particular overflow is pretty famous as a bug, but it&#x27;s always annoyed me.  If you have a 32 bit address space and use a 32 bit integer, the only way this would reasonably overflow is if you have a single array of sorted bytes consuming half or more of the address space.  Surely there must be a better data structure to use when you&#x27;re keeping track of sorted bytes filling that much memory.  For instance an array of 256 integers can contain the exact same information consuming only a tiny fraction of the space.<p>As soon as your array is storing objects that are 2 bytes or larger, you can&#x27;t overflow the unsigned integer any more.  The same applies for a 64 bit address and 64 bit integers.  Never mind that most 64 bit hardware in existence is actually limited to a 48 bit address space, in which case the bug CAN NOT be exercised even with signed integers.')