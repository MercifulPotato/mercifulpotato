Item(by='dmitriid', descendants=None, kids=[25123029, 25128277], score=None, time=1605615219, title=None, item_type='comment', url=None, parent=25122745, text='&gt; I think this betrays a lack of understanding on the part of the author of how to write good web components. Yes, the DOM is tricky at first, but that&#x27;s because it&#x27;s trying to support things like resizing windows to arbitrary sizes.<p>This statement betrays the commenter&#x27;s lack of understanding understanding of both limitations of the Web model and the freedom afforded by almost every single one of UI libs and frameworks.<p>&gt; I don&#x27;t even understand what he tries to say with &quot;draw the control directly&quot;.<p>Aaand here it is: &quot;I don&#x27;t understand&quot;.<p>In a GUI framework&#x2F;lib you usually have the ability to skip the provided primitives and draw whatever you want directly. A framework&#x2F;library doesn&#x27;t provide a control you need? You just draw it yourself.<p>So, instead of re-inventing, poorly, a virtual list, or a calendar, or a customisable drop-down with a few thousand divs, z-index issues and layout thrashing, you can (relatively) easily implement those controls yourself. At easy 60 or 120 fps.<p>&gt; I don&#x27;t in general buy the argument that the DOM is low-performant and low-quality. Lots of great and performant UIs have been built on the web platform.<p>Name a few, please. And when you look into those &quot;performant UIs&quot;, you&#x27;ll see on or more of:<p>- skipping the DOM entirely and building everything on top of canvas or webgl<p>- going through great pains to: avoid mutating DOM, avoid repaint&#x2F;reflow (which can happen by simply querying the DOM [1]), reducing the already laughably small amount of updates even further to prevent DOM updates, layout thrashing, JS GC pauses etc. etc.<p>And this will still not come even close to, lets say, displaying a million objects on screen at 120fps (any modern game engine), or any significantly complex UI layout (any professional app).<p>[1] <a href="https:&#x2F;&#x2F;csstriggers.com" rel="nofollow">https:&#x2F;&#x2F;csstriggers.com</a> and <a href="https:&#x2F;&#x2F;gist.github.com&#x2F;paulirish&#x2F;5d52fb081b3570c81e3a" rel="nofollow">https:&#x2F;&#x2F;gist.github.com&#x2F;paulirish&#x2F;5d52fb081b3570c81e3a</a>')