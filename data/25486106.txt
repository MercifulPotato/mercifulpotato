Item(by='ai_ja_nai', descendants=None, kids=None, score=None, time=1608471336, title=None, item_type='comment', url=None, parent=25482410, text='(Crossposting from Disqus).<p>I think I am gonna take this with a grain of salt, meaning as the rant that it is :)<p>It&#x27;s valuable to hear some dissident voice from time to time because 100% agreement on trending paradigms always creates the risk for the new generations to jump to the cargo cult ship and accept the common wistom as a dogma, instead of appreciating with own reasonment the current state of suggested practices.<p>As always, virtue lies in the middle and computing is no exception: I was professionally born in the age of in house racks where every SME would own a handful of servers and sysadmins would plan whether colocating applications or buying new iron that had to be accomodated somewhere in the DC.\nThere have been very good reasons to switch from monoliths&#x2F;SOAs to microservices and from bare-metal to containers&#x2F;FaaS, reasons that I personally would not trade back for the bad old days of manual deployments: microservices offered live patching of systems with no downtime and imposed design by contract to ensure verifiability of single cogs inside the big clockworks, instead of having to run the full stack in own laptop to ensure end-to-end functioning.<p>I think the point of the article is really how bad is to swtich to new paradigms for use cases that are well served with single application, single server monoliths (internal inventory management systems, for example) just to change ship and &quot;do what the others are doing&quot;.<p>Yes, the cloud is conceptually the new mainframe, but usability has also improved a lot: the user experience created agility and the agility created the opportunism that creates the commoditization of infrastructure. Is Heroku a sustainable use case for production? No, but it is super for development. Heroku is feedback loop for product development as smalltalk was for pure development.<p>So it is probably true that following blindly market trends just for the sake of it is a very bad idea, but the author seems also to be suggesting &quot;Java monoliths or die!&quot; which I don&#x27;t agree upon.')