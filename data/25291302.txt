Item(by='ncmncm', descendants=None, kids=None, score=None, time=1607015465, title=None, item_type='comment', url=None, parent=25275090, text='&gt; * .. .you just mean that the O state doesn&#x27;t ping-pong between cores?*<p>Correct. My terminology was sloppy, sorry. I have no experience of this &quot;context switch&quot; you speak of; my processes are pinned and don&#x27;t do system calls or get interrupted. :-)<p>The writing core retains ownership of the cache lines, so no expensive negotiation with other caches occurs. When the writer writes, corresponding cache lines for other cores get invalidated, and when a reader reads, that core&#x27;s cache requests a current copy of the writer&#x27;s cache line.<p>The reader can poll its own cache line as frequently as it likes without generating bus congestion, because no invalidation comes in until a write happens.<p>There is a newish Intel instruction that just sleeps waiting for a cache line to be invalidated, that doesn&#x27;t compete for execution resources with the other hyperthread, or burn watts. Of course compilers don&#x27;t know it. I don&#x27;t know if AMD has adopted it, but would like to know; I don&#x27;t recall its name.')