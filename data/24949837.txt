Item(by='crazyloglad', descendants=None, kids=[24952210], score=None, time=1604131680, title=None, item_type='comment', url=None, parent=24949696, text='Need some shuteye (9am &#x27;into the night&#x27;), but I think we are running into a similar misunderstanding that I spotted you having in the other Xorg thread.<p><a href="https:&#x2F;&#x2F;github.com&#x2F;wayland-project&#x2F;wayland-protocols&#x2F;blob&#x2F;master&#x2F;GOVERNANCE.md" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;wayland-project&#x2F;wayland-protocols&#x2F;blob&#x2F;ma...</a><p>Is what I mean with political process. Patching the compositor is the wrong side of the equation, it doesn&#x27;t work with networked clients and it&#x27;s the client that needs most of the features. It&#x27;s the client that needs to have a more expressive surface to work with. You can do these things safely and securely without the overbearing constraints and complexity of the policies that we are practically stuck with. See the trayicon&#x2F;stream-deck articles.<p>&gt; I&#x27;m aware that Arcan got wayland support recently and that actually gives me more hope that we&#x27;re not headed towards an apocalypse of protocol incompatibilities.<p>I don&#x27;t know if 4 years is recently in that span (see the dating my X post), but Xwayland support was initially decided as off limits. That was added recently because, as it turns out, those clients are still the ones that behave the most predictably and are the most robust. Even for applications that should handle both and I need to choose explicitly (arcan-wayland -exec-x11 the_thing or arcan-wayland -exec the_thing) I really only use the x11 side. Even for gtk and Qt. That&#x27;s the real tragedy.<p>I would say the babel-split is practically here because of all the sidebands and ad-hoc protocols that have been introduced specifically as a reaction to the strictness and limitations of the initial designs and the poor underlying primitives (as in the wire format and its de facto implementation).')