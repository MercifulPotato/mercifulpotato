Item(by='fwsgonzo', descendants=None, kids=[25057779, 25058584], score=None, time=1605095999, title=None, item_type='comment', url=None, parent=25057574, text='Thanks, I was aware of canaries actually, and I&#x27;ve been using XO (execute-only) which makes code unreadable, which is a better version of what you call W xor X in my own emulation. Code should simply not be readable, as it never contains any data that I have seen. It might have been the case in the hand-written assembly days when people put data and constants close to the code, but I recently read that GCC considers it a bug if there is data in the code segment.<p>I realize I am taking some minor flack for my questions, but that is how you get people to answer. You have to be a little bit controversial. So, As far as JITs go, I&#x27;ve been thinking about how Rust just took something C++ people took for granted: You can&#x27;t have certain safeties because it would cost you performance, and prove it completely wrong. But it required moving completely away from C and rethinking things from the ground up.<p>So, who is to say you can&#x27;t do the same with dynamic languages? I mean, why do we even have JIT to begin with? It&#x27;s largely for these highly dynamic JS, Python-like languages, which are extremely popular because of it. Is there really a good reason to believe that these types of languages will never be compiled to native code? Even if only at near-native speeds?')