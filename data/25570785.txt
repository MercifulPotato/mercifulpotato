Item(by='iso1210', descendants=None, kids=None, score=None, time=1609256602, title=None, item_type='comment', url=None, parent=25570077, text='I could set up an entirely ipv6 network on each of my devices and connect it with nat into IPv4, but crucially I want someone typing &quot;ping 1.1.1.1&quot; or opening a udp conenction to 92.42.35.61 port 5210 would just work, and I don&#x27;t want to add much overhead (and wide deployment of dual stack is adding overhead)<p>Imagine I have a mid sized ipv4 network comprising say 200 &#x2F;24 subnets across multiple locations, all on 192.168.x.0&#x2F;24, with 192.168.0.0&#x2F;24 reserved for a vpls connecting them together (say ospf point-to-multipoint, other topologies are preferable of course).<p>Default router to the internet on 192.168.0.1 (internal), which srcnats to a public IP addresses of 12.12.12.0&#x2F;24, say 1 hide per subnet, advertised out as BGP to a couple of providers via some &#x2F;30 links from their allocation.<p>Now say I want to create a new client network.<p>1) Create a new subnet on 192.168.201.0&#x2F;24 and put them all behind the new hide 12.12.12.201<p>I&#x27;ve done this 100+ times already, no problem, but it&#x27;s rather legacy.<p>2) Create a new ipv6 network, with a 192.168.0.89&#x2F;24 address which links to the other networks<p>I could create a new ipv6 network, and reach servers on 192.168.12.1, or 192.168.51.8, as well as reaching the internet on ipv4. Traffic leaving the network would get srcnatted to 192.168.0.89.<p>I then have a new http service I need to add, so I create a new ipv6 server network. This is reachable directly from the wifi clients as I have an ipv6 peering between the wifi client router and the ipv6 server router.<p>For access from ipv4 subnets I can just put a destination nat on 192.168.0.89 port 80 to my new server, so it&#x27;s reachable from all other ipv4 clients, but also from ipv6 clients directly. the server wouldn&#x27;t need as it would see the ipv6 connection from the natting router (which maintains the state). I could also add a port forward from the public IPv4 address too.<p>3) Do both, and have twice the overhead as I have to manage both an IPv4 and IPv6 network.<p>I&#x27;d rather not do that dual stack. After all what&#x27;s the point in moving to ipv6 if you need to keep ipv4 running. It would be like using IP and IPX on the same network.<p>My next step would be to add a public Ipv6 address peering. I put in ipv6 routing on my default router.<p>Now my new server is reachable directly on ipv6 from my client ipv6 network, and the entire ipv6 internet<p>It&#x27;s also reachable from my older network on the internal 192.168 address range, and from the ipv4 internet on<p>I don&#x27;t have to have a dual stack on every device (including the server), just on 3 routers.<p>I notice that some of my customers would like to connect via ipv6, so that&#x27;s fine, I do an ipv6-&gt;ipv4 nat on my firewall for legacy services.<p>With this setup, which doesn&#x27;t need me to change 20,000 devices on 200 subnets simultaneously, or end up in a situation where I have 20,000 dual stack devices, I can start migrating to ipv6 without losing any existing ipv4 services. Eventually I will be left with just a handful of ipv4 subnets and a couple of routers running an ipv6&#x2F;v4 natting gateway')