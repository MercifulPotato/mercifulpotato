Item(by='acemarke', descendants=None, kids=[25100900, 25098951], score=None, time=1605415454, title=None, item_type='comment', url=None, parent=25098216, text='&gt; Why wasn&#x27;t enough thought put in in the original Redux?<p>Because times change, ecosystems change, patterns change, and user bases change.<p>Why isn&#x27;t React still using `createClass()` and mixins? Why were ES6 classes and hooks invented?  Why did JS add arrow functions and `async&#x2F;await`? Why did C++ add an `auto` keyword?  Why is there ever a new version of a language or library? Wasn&#x27;t enough thought put into them in the first place?<p>&gt; Just make it easier to use<p>And that&#x27;s exactly what we did :)<p>&quot;Modern Redux&quot; code is different because:<p>- We&#x27;ve seen how people have used Redux in practice, what they wanted to do, and what problems they&#x27;ve run into<p>- We&#x27;ve seen what solutions and other Redux-related libraries the community has invented to solve their problems<p>- And there&#x27;s new tools and APIs that have come out since Redux was created, like Immer for immutable updates and React Hooks for writing reusable logic in React components<p>Like I said, this isn&#x27;t about &quot;new Redux concepts&quot;. It&#x27;s still state, actions, reducers, dispatching, and subscribing in the UI.  It&#x27;s just much less code to do it, and prevention of common mistakes while using Redux.  That means smaller bundles, faster development, and fewer bugs.<p>This tutorial page shows how Redux Toolkit simplifies all the older Redux logic patterns:<p><a href="https:&#x2F;&#x2F;redux.js.org&#x2F;tutorials&#x2F;fundamentals&#x2F;part-8-modern-redux" rel="nofollow">https:&#x2F;&#x2F;redux.js.org&#x2F;tutorials&#x2F;fundamentals&#x2F;part-8-modern-re...</a><p>I can&#x27;t force you or anyone else to use RTK, or to use Redux.  If you&#x27;ve got other options that are working for you, please use them.<p>I&#x27;m just pointing out that we _have_ specifically addressed the very concerns you&#x27;re raising, and if you are genuinely concerned about those issues, you _might_ want to take a look at what we&#x27;ve put together... and I&#x27;ve got a whole lot of enthusiastic RTK users who can vouch for how it&#x27;s made their development lives and Redux usage experience a lot better.')