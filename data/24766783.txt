Item(by='masklinn', descendants=None, kids=[24767714, 24767211, 24767153], score=None, time=1602604603, title=None, item_type='comment', url=None, parent=24766509, text='The main reason why it wouldn&#x27;t have happened is CSS selectors predate XPath by a few years. CSS was first proposed in 1994 and the CSS1 spec was released in 1996, I don&#x27;t know when XPath was originally proposed but the first public draft was in late 1998 and the release was in 1999.<p>CSS <i>2</i> actually predates XPath 1.0.<p>XPath would also have needed <i>more</i> work to replace CSS selectors, aside from being a bigger performance concern (through being more capable and not working in a strictly top-down manner, meaning you can easily get very inefficient selectors) it lacks facilities which are quite critical to CSS selectors like the shortcut id and class selectors as well as priority.<p>In fact talking about class selectors, those are absolute <i>hell</i> to replicate in XPath 1.0 if you don&#x27;t have extensions to lean on. To replicate the humble `.foo` you need something along the lines of<p><pre><code>    &#x2F;&#x2F;*[contains(concat(&#x27; &#x27;, normalize-space(@class), &#x27; &#x27;), &#x27; foo &#x27;)]\n</code></pre>\nAnd don&#x27;t miss the spaces around the name of the class you&#x27;re looking for, they&#x27;re quite critical. Good fucking luck if you need to combine multiple classes.<p>exslt&#x2F;xpath 2.0 have `tokenize` which make it much more convenient although IIRC the way it&#x27;s used is weird, I think it&#x27;s<p><pre><code>    &#x2F;&#x2F;*[tokenize(@class) = &#x27;foo&#x27;]\n</code></pre>\nbecause &quot;=&quot; on a nodeset is really a containment operation? Not sure. There&#x27;s also `matches` but that&#x27;s error-prone because classes tend to be caterpillar-separated, and your friendly neighborhood `\\b` will match those so you need to mess around with `(^|\\s+)` bullshit instead.<p>And finally I believe xpath 3.1 has a straightforward &quot;contains-token&quot; which does what the CSS &quot;~=&quot; operator does.<p>XPath 3.1 was released in <i>2017</i>. &quot;~=&quot; was part of CSS2 (CSS1 didn&#x27;t have &quot;arbitrary&quot; attribute selection, only classes and ids).')