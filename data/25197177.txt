Item(by='marcan_42', descendants=None, kids=None, score=None, time=1606213895, title=None, item_type='comment', url=None, parent=25197074, text='If your software is compromised it can already read or write it whatever it wants off of an IronKey, or fire off a passphrase change request behind the scenes and replace your passphrase with an insecure one to render the physical device insecure, at which point it is equivalent to a $27 USB stick.<p>Perhaps in an enterprise setting with physical controls and air gaps you might be able to have a device require a different admin PIN to change the passphrase, avoiding the latter scenario of data exfiltration, but then the device has to be explicitly designed with this in mind to avoid any other exfiltration channels for the true PIN and I don&#x27;t think IronKeys claim to do this (I don&#x27;t even know if they support such a split admin PIN). And besides, you probably have bigger problems if your air gapped computer is compromised anyway.<p>Really, IronKeys and their ilk cater to corporate and government bureaucracy use cases that have long since been divorced from true trustable security. They are instead a mountain of complexity, and the more complex a system, the less likely it is to be secure.<p>The thing about software is that you can audit it yourself - it&#x27;s quite easy to read through the entire source code of a trivial but secure file encryption app and convince yourself that the algorithms match published and industry standard implementations, and that they match test vectors, and that it interoperates with another instance on another machine, or send the files off to someone else to double check. You cannot audit an IronKey yourself.<p>But yeah, sure, defense in depth is a thing, and if you use an IronKey <i>and</i> software encryption (with different passphrases!) then you probably end up with better security, or at least not worse :-)')