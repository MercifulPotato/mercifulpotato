Item(by='mehrdadn', descendants=None, kids=[24686178, 24686090], score=None, time=1601891203, title=None, item_type='comment', url=None, parent=24685947, text='&gt; Same issues and resolution affect all of the other mechanisms you mention.<p>Really? On versions prior to 20H2? This gives me 16ms resolution for SetWaitableTimer but 1ms for timeSetEvent:<p><pre><code>  #include &lt;tchar.h&gt;\n  #include &lt;Windows.h&gt;\n  #include &lt;MMSystem.h&gt;\n  #pragma comment(lib, &quot;winmm.lib&quot;)\n  \n  static unsigned int prev_time = timeGetTime();\n  \n  VOID CALLBACK callback(LPVOID lpArgToCompletionRoutine, DWORD dwTimerLowValue, DWORD dwTimerHighValue)\n  { unsigned int now = timeGetTime(); _tprintf(_T(&quot;%u\\n&quot;), now - prev_time); prev_time = now; }\n  \n  void CALLBACK callback(UINT uTimerID, UINT uMsg, DWORD_PTR dwUser, DWORD_PTR dw1, DWORD_PTR dw2) { return callback(NULL, 0, 0); }\n  \n  int _tmain(int argc, TCHAR *argv[])\n  {\n   enum { msec = 1 };\n   HANDLE handle = CreateWaitableTimer(NULL, FALSE, NULL);\n   LARGE_INTEGER due = {};\n   SetWaitableTimer(handle, &amp;due, msec, callback, NULL, FALSE);\n   for (int i = 0; SleepEx(100, TRUE) == WAIT_IO_COMPLETION &amp;&amp; i &lt; 30; ++i) { }\n   CloseHandle(handle);\n   MMRESULT id = timeSetEvent(msec, 1, callback, NULL, TIME_PERIODIC | TIME_KILL_SYNCHRONOUS);\n   Sleep(100);\n   timeKillEvent(id);\n  }</code></pre>')