Item(by='lapcatsoftware', descendants=None, kids=[24962578], score=None, time=1604260203, title=None, item_type='comment', url=None, parent=24961842, text='&gt; It is no different from any other cert - TLS certs, S&#x2F;MIME, etc are all the same.<p>No, this is where the argument is fatally flawed. The usage of code signing certs and web certs is completely different. At any time, you can put a new web cert on your server, and web traffic can continue as if nothing happened. Revoking a web cert that&#x27;s no longer in active use does not affect current web traffic. On the other hand, that&#x27;s not the way it works with code signing. Users download and install signed software. That software is expected to run indefinitely, essentially forever as long as the software itself works. The expiration date for code signing certs only affects the ability to sign new software, it does not affect the ability of old signed software to continue running. Code signing certs expire, but the signed software does not. However, when a code signing cert is revoked, it immediately (on the next OCSP check) kills the old, installed software. That&#x27;s a total disaster, unless that installed software happens to be malware. This is why revoking a code signing cert is so much worse than revoking a web cert.<p>&gt; Revocation means telling the CA to add your certificate to the list they publish of no longer valid certificates.<p>To be pedantic, Developer ID doesn&#x27;t actually use a CRL, only OCSP:\n<a href="https:&#x2F;&#x2F;images.apple.com&#x2F;certificateauthority&#x2F;pdf&#x2F;Apple_Developer_ID_CPS_v3.0.pdf" rel="nofollow">https:&#x2F;&#x2F;images.apple.com&#x2F;certificateauthority&#x2F;pdf&#x2F;Apple_Deve...</a>')