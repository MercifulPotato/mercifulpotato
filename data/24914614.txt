Item(by='rushabh', descendants=None, kids=[24914796], score=None, time=1603854136, title=None, item_type='comment', url=None, parent=24914062, text='The ideal mid-way frameworks offer both, a library of patterns that work for internal applications that are almost no-code, and ability to write code where business logic is required. There are some things that are still best expressed as code. I am not sure if a truly &quot;no-code&quot; framework is possible for real-world applications.<p>We have built Frappe Framework [1] as a platform to re-use code for our massively complex application (ERPNext with 900+ models). While it does not have a drag-and-drop UI builder, object creation and migration is fully automated via configuration. The key reason why this works as low-code is:<p>1. Automated UI generation (via metadata)<p>2. Automated database management (schema and migrations)<p>3. Abstracted functionality that can run on any object (like permission rules, workflows, assignments, file attachments, PDF generation etc)<p>The configurations are stored as JSON files that can be used for source code management [2]. Frappe Framework is still under the radar, but of late we have seen many teams using it massively for internal tooling.<p>[1] <a href="https:&#x2F;&#x2F;frappeframework.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;frappeframework.com&#x2F;</a><p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;frappe&#x2F;erpnext&#x2F;tree&#x2F;develop&#x2F;erpnext&#x2F;selling&#x2F;doctype&#x2F;quotation" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;frappe&#x2F;erpnext&#x2F;tree&#x2F;develop&#x2F;erpnext&#x2F;selli...</a>')