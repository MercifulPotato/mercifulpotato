Item(by='throwaway894345', descendants=None, kids=[24982206, 24985599, 24983235, 24982713], score=None, time=1604415934, title=None, item_type='comment', url=None, parent=24980056, text='That&#x27;s a pretty weird takeaway considering the long and detailed post on OCaml&#x27;s issues that motivated a full rewrite: <a href="https:&#x2F;&#x2F;blog.darklang.com&#x2F;leaving-ocaml&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.darklang.com&#x2F;leaving-ocaml&#x2F;</a><p>&gt; One of my biggest annoyances was how often OCaml folks talk about Fancy Type System problems, instead of how to actually build products and applications. In other communities for similar languages (ReasonML, Elm, F#), people talk about building apps and solving their problems. In OCaml, it feels like people spend an awful lot of time discussing Functors.<p>In whatever case, it appears that the author&#x27;s preference was F# &gt; Rust &gt; OCaml.<p>I don&#x27;t have a problem with garbage collectors in general, but that&#x27;s only one facet in deciding a language. There are lots of more important facets, and OCaml fares pretty poorly at these (e.g., tooling, ecosystem, community, pace of improvement, mindshare, etc).<p>And for language toolchains in particular, I wouldn&#x27;t lock myself into a language with suboptimal performance--it&#x27;s too hard to back out of that decision later, and it&#x27;s easy enough to recoup some of that pace of development from Rust by just refcounting everything today if necessary (optimize it later).')