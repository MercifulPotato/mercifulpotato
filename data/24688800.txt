Item(by='nybble41', descendants=None, kids=[24689141], score=None, time=1601912912, title=None, item_type='comment', url=None, parent=24687809, text='I&#x27;m not sure you would consider this a <i>good</i> way, but one can implement (unchecked) sum and product types in any language with lexical closures via Scott encoding[1]:<p><pre><code>    # data Pair a b = Pair a b\n    def pair(x, y):\n      return lambda f: f(x, y)\n\n    # data Either a b = Left a | Right b\n    def left(x):\n      return lambda l, r: l(x)\n    def right(y):\n      return lambda l, r: r(y)\n\n    v0 = pair(2, 3)\n    v1 = left(7)\n    v2 = right(9)\n\n    # case v0 of { Pair x y -&gt; x + y }\n    print(v0(lambda x, y: x + y))\n\n    # case v1 of { Left x -&gt; x + 1; Right y -&gt; y * 2 }\n    print(v1(lambda x: x + 1, lambda y: y * 2))\n</code></pre>\n[1] <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Mogensen%E2%80%93Scott_encoding" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Mogensen%E2%80%93Scott_encodin...</a>')