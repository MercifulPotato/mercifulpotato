Item(by='teleforce', descendants=None, kids=[25226333], score=None, time=1606458646, title=None, item_type='comment', url=None, parent=25225798, text='C was designed to fill its main purpose in writing portable OS in a higher level language, and given that majority of the today&#x27;s world&#x27;s OS is written in C, is the testament of its success.<p>It is interesting to note that while Brian Kernighan and Ken Thompson are involved in initial Go language design, C was largely Dennis Ritchie&#x27;s  baby and his got a complete PhD thesis on programming language design meaning that he basically aware of the state-of-the-art of programming languages design at that time.<p>The main argument of several steps back is probably about the lack of the functional language aspects like closure and this feature probably at the very bottom of the programming language features list that you want to have in porting OS, given the computer systems CPU and memory limit at the time. The other is object oriented, but you can perform object oriented programming in C inside the kernel just fine but not as gung-ho as things like the multiple inheritance nonsense [1].<p>Jury is still out on Go. The fact that Kubernetes is very popular for the cloud now does not mean it will be as successful as 50 years of C. Someone somewhere will probably come up with better Kubernetes alternatives soon that uses different languages. To be relevant in today and in the future, Go needs to adopt generics and its designers are well aware of the deficiency of not having generics for current Go implementation.<p>[1]<a href="https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;444910&#x2F;" rel="nofollow">https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;444910&#x2F;</a>')