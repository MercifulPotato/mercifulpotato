Item(by='ohazi', descendants=None, kids=[24741019], score=None, time=1602352444, title=None, item_type='comment', url=None, parent=24738208, text='I put Arch on a personal laptop as an experiment and like it a lot. The Arch wiki is your friend - start there when you&#x27;re setting something up and when you get stuck. Most &quot;normal&quot; configurations either just work, or can be made to work pretty easily.<p>As a general principle, installing a package usually just puts the files in the right places - if there&#x27;s a system service that needs to be configured to run, you usually need to do that yourself, usually with systemd. You will be forced to learn a little more about what&#x27;s running on your system and how it&#x27;s configured than you typically would on a Debian&#x2F;Ubuntu system, which tends to be more hands off. A lot of what you learn transfers, though, so eventually you&#x27;ll just feel like you understand the software you use better.<p>One difference I don&#x27;t particularly like is that Arch systems typically have one or two kernel installations (e.g. linux and linux-lts), and updates overwrite them directly, even the one you booted from. Most other systems are configured to leave the kernel you booted from alone, install updates alongside it, and only offer to remove an older kernel once you&#x27;ve rebooted into a newer one.<p>In theory, an botched update could render your system unbootable, although in practice, this is rare. But this <i>does</i> require you to reboot more often than you might on Debian&#x2F;Ubuntu, particularly if you&#x27;re on a laptop and you like to hibernate, or if you do things that need to load&#x2F;unload kernel modules with any regularity (e.g. plugging in some usb devices).')