Item(by='ChrisMarshallNY', descendants=None, kids=[24913220], score=None, time=1603839557, title=None, item_type='comment', url=None, parent=24912810, text='Because every second that I spend on small-batch academic exercises, is a second not spent working on ship code.<p>Here&#x27;s how I spent today:<p>I woke up at 5AM, like I always do, and did my two-mile walk. During the walk, I sorted through today&#x27;s job. I&#x27;m working on a social media app, and I&#x27;m setting up the baseline (admin) stuff. I needed to add the capability to convert &quot;standard&quot; users to &quot;manager&quot; users (and vice-versa), and I&#x27;ll also need to add UI in the app (native Swift iOS&#x2F;iPadOS&#x2F;Catalyst app) to manage permissions.<p>I figured out how I would do it. It was a combination of work on the backend (I needed to add some functionality to the admin user layer), the SDK (I needed to add a couple of methods to funnel the UI requests to the REST API), and the app, itself (I needed to add a button to the user edit screen). The tricky part would be the backend work. I needed to do this in a manner that would not invite any security compromises, and would catch errors. I also wanted to leverage the current structure, as opposed to introducing new structure.<p>Also, I was a dumbass, and used Git submodules in the backend (it&#x27;s a &quot;layer cake&quot; model). That makes modification a pain.<p>I don&#x27;t write stuff down, if I can help it. After my half-hour walk, I knew what I needed to do, and, by 7AM, I had the basic framework in place on the backend. I couldn&#x27;t test it until I also had the work done on the SDK, so I started that (it wasn&#x27;t much code).<p>Since I wrote the backend a couple of years ago, I also spent time, groping around, re-learning it, and getting my head out of &quot;Swift Mode.&quot; The biggest mistake I make, is forgetting to end lines with semicolons.<p>This is where my extremely disciplined coding standards pay off. 99% of the time, I&#x27;m the poor schlub that needs to relearn the code, so I make sure that I structure and document very well.<p>By 9AM, I had the whole stack in place, and there were a number of bugs. I like to test, so I was able to figure out where they happened. Most were in the backend, so I spent a lot of time with Charles Proxy, examining the exchange. Some of the bugs required a fairly substantial architectural change. That&#x27;s pretty common, so I write in a layered, modular fashion with lots of hooks. Makes that kind of refactoring go smoothly.<p>By 5PM, I had it all working, but I need to make the app UI better. It needs a confirmation alert. Otherwise, it&#x27;s pretty much done.<p>Tomorrow, I&#x27;ll add the confirmation, and do a lot more testing. This is fairly critical stuff. I can&#x27;t afford any security lapses here, and I need to make the UX as smooth as possible. Because of the nature of the work, I need to figure out the best way to provide instantaneous user feedback, while waiting for the server to do its work. I&#x27;ll hammer that out in tomorrow morning&#x27;s walk. I still need to do the permissions UI, but I won&#x27;t get started on that, until I&#x27;m satisfied that the privilege swap works 100% (I don&#x27;t move on, until I&#x27;m satisfied that my work is at &quot;beta&quot; level, or better).<p>And I spent absolutely no time at all, practicing LeetCode.')