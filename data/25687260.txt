Item(by='kazinator', descendants=None, kids=None, score=None, time=1610127345, title=None, item_type='comment', url=None, parent=25683880, text='If we have no plan to treat any ordinary calls as tail calls, there is no point in identifying which are in the tail position, or using any terminology related to tail calling.<p>The conversion of a regular call to a tail call could easily be applied to non-tail positions (e.g. it could be requested by some &quot;please make this a tail call&quot; annotation). The tail position is where that can be done without changing the meaning (of programs that meet certain restrictions, at least).<p>The semantics of not being able to return, and not acquiring any stack-like space is what makes the call a tail call, whether or not it is in a tail position. If we make a call that doesn&#x27;t return, that call is then the last action the function performs, which puts it at the tail of its activities.<p>The terminology also gives us nice ways to talk about vaguely related things, also, like:<p>&quot;execvp is a kind of big tail call in Unix; it calls a new program, such that it&#x27;s impossible to return to the original, which is entirely replaced (not just the stack frame of the caller of execvp)&quot;.<p>&quot;A boot-loader branching into firmware is a kind of tail call.&quot;')