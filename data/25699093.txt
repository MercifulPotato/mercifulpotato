Item(by='permille42', descendants=None, kids=[25699393], score=None, time=1610186914, title=None, item_type='comment', url=None, parent=25690036, text='From FAQ: Q: Can I backup my messages? A: No. :(<p>The killer feature set of a messaging system that will allow it to crush WhatsApp, Signal, Session, etc:<p>* Fully open source ( app, nodes, everything )<p>* End-to-end encryption ( obviously )<p>* Rotating keys for deniability. Basically just create time valid subkeys and periodically post the private key to the subkeys. Probably once a day would be sufficient.<p>* Full message export&#x2F;import including tweaking and faking messages. It isn&#x27;t really deniable if you can&#x27;t show you could easily fake some past messages.<p>* Fully capable Linux client, so that we aren&#x27;t forced to use an untrusted and possibly backdoored phone to use it.<p>* Extra secure time bucketed send&#x2F;receive if you want to avoid timing attacks on location.<p>* Hash section bucketed messages along with the bucket by time. For example, if your public key is 4BC56..., you can request all messages sent to 4BC* and get them all, so it isn&#x27;t then obvious who exactly you are.<p>* Subkey unique per communication partner. This way gaining someones subkey for a time period doesn&#x27;t let you potentially capture other packets you know are encrypted and decrypt them too...<p>* URL based identity. Post your public key to URL; tada that URL can then be used as your identity. Have a bunch of different secure countries host free identity upload sites.<p>* Group chat which just makes it so you communicate every message to every other partner in the group chat and vice versa. Any other way wouldn&#x27;t be secure.<p>* Message size padding to private size based packet matching.<p>* Automatic sending of periodic messages to bogus destinations. This way it is not immediately apparent if you are sending something out or not. Preferably this would include adding random people and engaging in nonsense chat sessions with them for random amounts of time. Only the client on the other end would know if it is a bogus message or not.<p>* Message nodes completely wipe all data hourly ( for regular messages ) or daily ( for the daily grouped messages )<p>* Message nodes all ban any client attempting to download more than a certain threshhold of data. Publish the banned clients publicly. Expose the watchers.<p>* No registration. Basically anyone should be able to send&#x2F;receive through whichever node they wish that has available bandwidth. You send an encrypted chunk with a destination ID. Others can download chunks tagged with some hash part of the destination.<p>* Central &quot;saturation tracking node&quot; that receives saturation from all registered nodes in the system and just publishes a file on a URL for whoever wants it to figure out which node they will use to communicate that isn&#x27;t over-saturated.<p>* Can post a set of nodes you listen on to your URL with public key periodically so clients know how to start communication with you. Once established; switch to unsaturated nodes...<p>The following features are somewhat irrelevant:<p>* Onion routing. Just connect to the service through any number of other onion routing systems. No need to put all our eggs in one basket. Use a private VPN + Tor to connect to the system. Done.')