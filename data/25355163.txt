Item(by='jerf', descendants=None, kids=[25355734], score=None, time=1607486279, title=None, item_type='comment', url=None, parent=25353939, text='In a language with Haskell&#x27;s guarantees, you can mechanically get from the standard &quot;bind&quot; function to prove that &quot;m (m a)&quot; can be converted to &quot;m a&quot; [1]. That function is called &quot;join&quot;, and is a lesser-well known way to write monad implementations which is equivalent to the more famous bind function.<p>(IMHO, join is a better way to understand the typeclass intuitively. The standard bind is better to program with in general use, but much harder to grok.)<p>So, in Haskell, it&#x27;s more than just &quot;the APIs would tend to encourage not nesting the types&quot;... having a valid monad implementation means they really <i>are</i> equivalent.<p>[1]: <a href="https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;3382210&#x2F;monad-join-function" rel="nofollow">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;3382210&#x2F;monad-join-funct...</a>')