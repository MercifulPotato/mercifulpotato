Item(by='selfhoster11', descendants=None, kids=[25310666], score=None, time=1607118952, title=None, item_type='comment', url=None, parent=25307888, text='Not only do getters and setters miss the point of OO programming, but (controversial opinion) they utterly kill it dead in Java.<p>Every. single. Java. object. now has to have them. The average Java data class is a tiny stub at the top of the file that contains the class name and the data structure definition, followed by a parasitical mound of getters, setters and builders. This unsightly growth of boilerplate ends up being regenerated by the IDE tooling every time it changes anyway. I feel like I&#x27;m working with C, except that the code I&#x27;m editing has already been through the macroprocessor.<p>Any needles of &quot;smart&quot; logic are drowned out in the haystack of dumb accessors.<p>That same haystack, coupled with auto-regeneration, makes it very easy to clobber any &quot;smart&quot; accessors, so nobody dares to be clever. It&#x27;s always logic on the outside of the class. There is a <i>thing do&#x27;er</i> that does something to the class, but the class has no idea how to <i>do the thing</i> with its own data by itself.<p>This is the antithesis of the very ideas that OOP promotes. Whether they are a good idea is debatable, but the fundamental conflict cannot be ignored.')