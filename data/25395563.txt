Item(by='svat', descendants=None, kids=[25396351, 25395974], score=None, time=1607747408, title=None, item_type='comment', url=None, parent=25393198, text='My favourite part of this article (disclosure: I&#x27;ve made almost this exact comment before elsewhere):<p>&gt; <i>The see-and-point principle states that users interact with the computer by pointing at the objects they can see on the screen. It&#x27;s as if we have thrown away a million years of evolution, lost our facility with expressive language, and been reduced to pointing at objects in the immediate environment. Mouse buttons and modifier keys give us a vocabulary equivalent to a few different grunts. We have lost all the power of language, and can no longer talk about objects that are not immediately visible (all files more than one week old), objects that don&#x27;t exist yet (future messages from my boss), or unknown objects (any guides to restaurants in Boston).</i><p>Does this mean a commandline is always better, because it&#x27;s more expressive? No, it&#x27;s a trade-off between this and ease of learning:<p>&gt; <i>The GUIs of contemporary applications are generally well designed for ease of learning, but there often is a trade-off between ease of learning on one hand, and ease of use, power, and flexibility on the other hand. Although you could imagine a society where language was easy to learn because people communicated by pointing to words and icons on large menus they carried about, humans have instead chosen to invest many years in mastering a rich and complex language.</i><p>There&#x27;s a neat coincidence that illustrates this tradeoff. While this article says:<p>&gt; <i>If we want to order food in a country where we don&#x27;t know the language at all, we&#x27;re forced to go into the kitchen and use a see-and-point interface. With a little understanding of the language, we can point at menus to select our dinner from the dining room. But language allows us to discuss exactly what we would like to eat with the waiter or chef.</i><p>Joel Spolsky&#x27;s <i>User Interface Design for Programmers</i> (an excellent book, looks like it&#x27;s available online in full on his blog: <a href="https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2001&#x2F;10&#x2F;24&#x2F;user-interface-design-for-programmers&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2001&#x2F;10&#x2F;24&#x2F;user-interface-des...</a>) says:<p>&gt; <i>Using a command-line interface is like having to learn the complete Korean language just to order food in the Seoul branch of McDonalds. Using a menu-based interface is like being able to point to the food you want and grunt and nod your head: it conveys the same information with no learning curve.</i><p>I&#x27;m pretty sure it&#x27;s a coincidence that the same example of a restaurant in a foreign country is used, but despite apparent contradiction, they make the same point: The text interface requires more time to learn, in return for being more expressive and powerful. Whether that&#x27;s worth it to you depends on how long you intend to live in that environment, and how rich an experience you&#x27;d like to have.')