Item(by='stormbrew', descendants=None, kids=None, score=None, time=1609749082, title=None, item_type='comment', url=None, parent=25628643, text='Yes to the first half of this at least (KCP is not something I&#x27;ve heard of).<p>Having recently attempted to use SRT for an event&#x27;s backend restreaming stack, the low latency was nice but it&#x27;s a pain in the ass. It&#x27;s really not designed for links where latency isn&#x27;t known and consistent. You have to bake an expected latency amount into initial protocol negotiation or you&#x27;ll end up with problems, and OBS&#x27; support is quite poor (failure to establish a connection for whatever reason is likely to freeze it up completely, it sucks up a lot of cpu vs. rtmp, etc).<p>And the other end of the stack is either pretty immature and kind of wonky (haivision&#x27;s own software, srt-live-server) or requires you to pay to use it or is very closed source.<p>WebRTC of some sort is definitely the future of this, imo. Even if the stack kind of sucks right now the results are fabulous (discord&#x27;s video streaming for eg. is webrtc based and is easily the lowest latency free screen sharing I&#x27;ve seen outside share-my-desktop stuff like parsec or rdp).<p>It looks like this uses the already-built-into-obs support for the webrtc-based ftl protocol mixer used and microsoft killed. That&#x27;s actually really clever and honestly I think this is far more appealing than SRT.')