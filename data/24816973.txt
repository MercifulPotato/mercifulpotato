Item(by='rawoke083600', descendants=None, kids=[24817105], score=None, time=1603019193, title=None, item_type='comment', url=None, parent=24816803, text='I think you missing point, I love the idea about &quot;bringing aviation methodology&quot; to lower error&#x2F;f-up-rates&quot; for the software industry.<p>No one is not saying don&#x27;t take responsibility, they are saying - as I understood it:<p>Have a &quot;systematic-approach&quot; to the problem, the current system for preventing &quot;drunk pilots or the wiping of production db&#x27;s are not sufficient&quot; - improve the system ! ! All the &quot;taking responsibilities and &quot;falling on one&#x27;s own sword&quot; won&#x27;t improve the process for the future.<p>If we take the example of the Space-Industry where having 3x Backups Systems are common (like life support)<p>It seems some people&#x27;s view in the comments stream is:<p>&quot;No bugger that, the life-support systems engineers and co should just &#x27;take responsibility&#x27; and produce flawless products. No need for this 3 x backups systems&quot;<p>The &quot;system&quot; approach is that there is x-rates of failures by having 2 backups we have now reduce the possibility of error by y amount.<p>Or in the case of production-dbs:<p>If I were the CEO and the following happens:<p>CTO-1: &quot;Worker A, has deleted the production DB, I&#x27;ve scolded him, he is sorry and got dock a months pay and is feeling quite bad and has taken full responsibility for his stupid action this probably won&#x27;t happen again !&quot;<p>VS<p>CTO-2:\n&quot;Worker A, has deleted the production DB, We Identified that our process&#x2F;system for allowing dev-machines to access production db&#x27;s was a terrible idea and oversight, we now have measures abc in place to prevent that in the future&quot;<p>I&#x27;d go with CTO-2 EVERY day of the week !')