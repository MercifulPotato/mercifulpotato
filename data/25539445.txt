Item(by='segfaultbuserr', descendants=None, kids=None, score=None, time=1608934484, title=None, item_type='comment', url=None, parent=25539027, text='No, I don&#x27;t think so. According to RFC 6066, Section 8 &quot;Certificate Status Request&quot; (a.k.a OCSP Stapling)...<p>&gt; <i>In order to indicate their desire to receive certificate status information, clients MAY include an extension of type &quot;status_request&quot; in the (extended) client hello. Servers that receive a client hello containing the &quot;status_request&quot; extension MAY return a suitable certificate status response to the client along with their certificate.</i><p>And in a TLS handshake, the procedure is <i>ClientHello</i>, <i>ServerHello</i>, <i>Server Certificate</i>, <i>CertificateRequest</i>, <i>Client Certificate</i>. But &quot;Certificate Status Request&quot; is only specified in <i>ClientHello</i>, not <i>CertificateRequest</i>, so it&#x27;s not possible for a server to request OCSP status from the client.<p>Hence, OCSP Stapling strictly a service provided to the clients, not vice versa - unfortunately, reliable revocation of client certificate is a still a problem. But I guess it&#x27;s much easier to blacklist the offended client certificates on your own server, perhaps still problematic in a big organization, but certainly easier than blacklisting every leaked certificate on the Internet.<p>Disclamer: I don&#x27;t have any experience on managing systems that use client verification. I did my best to RTMF and fact-check myself, but corrections are welcomed.')