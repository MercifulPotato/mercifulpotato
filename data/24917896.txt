Item(by='iainmerrick', descendants=None, kids=[24918081, 24920038, 24918867], score=None, time=1603887983, title=None, item_type='comment', url=None, parent=24915497, text='This is good advice and a good writeup, but I take exception to one (boldface!) line:<p><i>Coupling kills software</i><p>I hear this a lot but I think it’s highly overstated.<p>The “clear” final version is still strongly coupled -- you can’t call find_definition without it directly calling the build_url helper! The key aspect isn’t the coupling, it’s that the high-level imperative function is calling a simple, low-level, testable helper.<p>Coupling <i>can</i> be bad, sure, but not if it’s kept under control. And excessive <i>decoupling</i> can make programs much harder to understand and debug! Have you ever worked on an app where every reference to another object is injected via a DI framework, and where all the significant calls that actually do stuff are farmed out to asynchronous messages and callbacks, all in the name of decoupling and testability? That can make it really hard to debug problems. A good balance is what’s needed, not decoupling over all other concerns.')