Item(by='jasode', descendants=None, kids=[25846449, 25846120, 25849184, 25846083, 25846778, 25847971, 25845878], score=None, time=1611145396, title=None, item_type='comment', url=None, parent=25845241, text='<i>&gt;It&#x27;s designed to force people to handle the damn error as near to the call as possible.</i><p>But that is sometimes the <i>wrong</i> design.<p>If you have functions A() --&gt; call B() --&gt; call C() ... and C() has an error because of a memory allocation failure or a network connection being down, sometimes the <i>best context</i> to handle that error is the <i>outermost</i> function A() and not C().<p>That&#x27;s why some programmers don&#x27;t like copypasting a bunch of <i>&quot;if err != nil {return err}&quot;</i> boilerplate across layers when the <i>intentional semantic design</i> is to deliberately autopropagate errors up the stack.  E.g. function A() might have <i>more knowledge of the state of the world</i> via code logic to decide whether to retry a broken network connection or simply log the error and exit.<p>Sometimes handling the error is <i>orthogonal</i> to how a nested call tree is structured.  It depends.')