Item(by='rvp-x', descendants=None, kids=[25645571, 25651886], score=None, time=1609848933, title=None, item_type='comment', url=None, parent=25644436, text='The biggest problem you would have is that they share the function names, and if you have this tree (where a line means &quot;links with dynamic library&quot;):<p><pre><code>   [my binary]\n  &#x2F;           \\  </code></pre>\n[___libA___] [___libB___]<p><pre><code>  |            |</code></pre>\n[libreSSL]  [OpenSSL]<p>then they will have some conflicts (some refer to this as &quot;spewing nasal demons&quot;). Suppose that they both have a function called mutex_lock that touches a global, but OpenSSL added an extra field. Now the behaviour is dependent on which one is picked first. Surprise segfaults? crashes only on strict alignment platforms? unlocked behaviour because the global is named something else? All of these can easily happen.<p>ELF doesn&#x27;t have any builtin namespacing, and when compiled with C normally, the C compiler doesn&#x27;t modify the names to create something like namespacing in the way other languages do.<p>If you make an extra effort to put them in different places (preferably not in the default linker lookup path and using something like a per-executable RUNPATH rather than a global ld.so.conf to find it), you can have conflicting libraries. But you are playing a dangerous game which wastes everyone&#x27;s time and effort.')