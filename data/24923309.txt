Item(by='chrismorgan', descendants=None, kids=None, score=None, time=1603914370, title=None, item_type='comment', url=None, parent=24922898, text='Those arguments are inapplicable here. They’re arguing against XHTML’s <i>particular form</i> of strictness and its failure mode, when compared with HTML, given that both are available to you the web developer; they are not arguing against strictness itself. (Also: if browsers had <i>always</i> rejected invalid documents, rather than having the HTML&#x2F;XHTML split where one was liberal and one strict, I think we’d have had fewer problems, especially around injection bugs, and people would have been more careful about how they wrote their documents; but that’s fairly subjective.)<p>If you can choose whether your platform supports strict or forgiving behaviour, security interests will side with strict every time.<p>And indeed, HTML is no longer loose but rather strict in this protocol sense that we’re talking about, as it defines how <i>all</i> inputs should be parsed, leaving no scope for being liberal in what you accept. (It may surprise people, but among specs of at least moderate complexity, HTML is by far the strictest out there that I know of. I wish more specs were as strict. Actually, JavaScript is probably fairly close.)<p>Also from the links of dissenting opinions at the start of the <i>dive into mark</i> link, <a href="https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20060616150034&#x2F;http:&#x2F;&#x2F;bitworking.org&#x2F;news&#x2F;There_are_no_exceptions_to_Postel_s_Law_" rel="nofollow">https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20060616150034&#x2F;http:&#x2F;&#x2F;bitworking...</a> has a good discussion of just where Postel’s law may seem most reasonable to be applicable and inapplicable, with its two-axis (text–binary, data–language) diagram. It’s worth reading and contemplating.')