Item(by='baron_harkonnen', descendants=None, kids=None, score=None, time=1607093086, title=None, item_type='comment', url=None, parent=25298574, text='I wonder how many HNers are old enough to remember when Joel Spolsky shook up a lot of thinking about software hiring at the time (~2006). He had two major insights, one of which has become lost to time unfortunately and the other has mutated into an abomination over time:<p>- Hire based on &quot;smart and gets things done&quot;<p>- FizzBuzz<p>Prior to Spolsky software interviews were much more like a traditional job interview: resume, CV, talk to a manager, a bunch of questions about experience etc. Things like N years experience in language X where hugely important. The idea that you should hirer people that were &quot;smart&quot; and &quot;got things done&quot; was mind blowing at the time.<p>Unfortunately FAANG seems largely focused on hiring for their definition of &quot;smart&quot; and has virtually no interest in if you can get things done. I&#x27;ve learned when interviewing at these places to <i>never</i> mention any past experience I&#x27;ve had solving a problem since it always seems visibly hurt my performance.<p>And VC funded startups have really doubled down on the &quot;not smart&quot; and &quot;get things done&quot; category. All of the sub 1k employee startups I&#x27;ve worked at or talked to in recent years seem to penalize thinking about or understanding the problems your working on, and mostly care that you&#x27;re constantly scrambling to get things done, even if those things are useless.<p>So sadly, &quot;Smart, and get things done&quot; has been completely lost to time. FizzBuzz on the other hand...<p>The entire point of FizzBuzz was to make sure that people could code. It was supposed to be very easy, and completed in a very short period of time. Again, the problem in 2006 was that there were many corporate programmers who only knew how to basically refactor legacy Java code. If you had to start from zero, which most startups did back then, you needed someone that could build a program from nothing and think about problems computationally. FizzBuzz was meant as a sanity check, not a stress test.<p>This has morphed into a bizarre paranoia that &quot;most coders can&#x27;t code!&quot; Now the point of FizzBuzz wasn&#x27;t to replicate the exact problem, but to come up with some other quick, easy problem just to verify that the candidate does, in fact, know how to code. But hiring managers had no imagination so they just replicated the exact example Spolsky used. This lead to candidates memorizing the problem as part of interview prep. This of course lead to companies developing harder problems, which lead to candidates studying more. When this combined with Google&#x27;s famous algorithm questions (originally to check if, you know, you did in fact understand computer science) we ended up with the leetcode nightmare we have today.<p>It&#x27;s tragic since many of the &quot;smart and gets things done&quot; programmers today struggle to pass interviews. But perhaps this is because companies don&#x27;t <i>really</i> want that anymore.')