Item(by='arc619', descendants=None, kids=None, score=None, time=1606677848, title=None, item_type='comment', url=None, parent=25246565, text='&gt; No algebraic datatypes<p>Not sure what you mean there, there&#x27;s product types with tuples and objects, and sum types as object variants.<p>&gt; Pattern matching<p>Eh, I mean it&#x27;s just sugar over a case statement.<p><pre><code>  let\n    num = 5\n    str = case num\n      of 1: &quot;One!&quot;\n      of 2, 3, 5, 7, 11: &quot;This is a prime&quot;\n      of 13..19: &quot;A teen&quot;\n      else: &quot;Unknown&quot;  # Compile error if all cases arent covered.\n</code></pre>\nAs you say there&#x27;s libraries that let you deconstruct and partially match more complex types if you need that. Being able to create things like pattern matching, async, and novel multithreading runtimes as a library in Nim shows how powerful (and useful) the metaprogramming is.<p>Enums in Rust are more interesting, but again nothing you can&#x27;t do with an object variant.')