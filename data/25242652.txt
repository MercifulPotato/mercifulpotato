Item(by='jrockway', descendants=None, kids=[25244809, 25242801], score=None, time=1606619517, title=None, item_type='comment', url=None, parent=25242070, text='&gt; I want my binaries to use shared objects so that an entire OS can receive quick security updates.<p>Have shared libraries historically improved security much?  Debian helpfully &quot;updated&quot; OpenSSL, and thanks to the magic of shared libraries, every program on a Debian system generated weak keys.<p>Personally, I don&#x27;t think there&#x27;s enough software on the average filesystem image to justify sharing libraries.  Most stuff &quot;in production&quot; these days is in a container, which shares nothing with the other containers running on the same VM, which share nothing with the other VMs running on the same bare metal server.  In the case of containers, a full rebuild from source is just as easy as updating a shared library -- maybe even easier.  So the &quot;quick security updates&quot; doesn&#x27;t seem to justify the high maintainability cost of shared libraries.  (The high cost is having to maintain binary compatibility with applications you&#x27;ve never even seen before.)<p>The whole reason things like &quot;Linux distributions&quot; exist is for some central authority to coordinate and handle all the breakages this model causes.  It&#x27;s nice that they do it for us, but it&#x27;s kind of makework to save a few bytes of network transfer now and again.  Doesn&#x27;t seem worth it to me.<p>&gt; I want the binaries properly packaged with metadata, documentation, manpages to keep the host secure and tidy.<p>You&#x27;ve just invented containers.  Many other people agree with you, which is why they became so popular.')