Item(by='brundolf', descendants=None, kids=[25754143, 25753984], score=None, time=1610486062, title=None, item_type='comment', url=None, parent=25753660, text='Right, and that&#x27;s where the question gets muddy<p>Though again, Go as a whole seems ill-suited for scaling to larger projects because of lots of other limitations on its type system, reliance on conventions, implicit-defaults, etc. Which makes it well-suited to (and often used for) things like microservices, where each actual codebase is smallish. Codebases like these will tend towards having less &quot;library-like&quot; code anyway, which means they don&#x27;t need generics as badly. There&#x27;s synergy here in the language design.<p>So I guess what I&#x27;m saying is: leaving out generics seems like the more &quot;Go-like&quot; direction, will dovetail better with its overall philosophy, etc, and isn&#x27;t without advantages. But it would also mean kneecapping the language when it comes to certain use-cases that it&#x27;s never going to be great for anyway. It&#x27;s the classic &quot;opinionated&quot; vs &quot;everything for everybody&quot; dichotomy')