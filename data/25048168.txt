Item(by='MauranKilom', descendants=None, kids=[25050556], score=None, time=1605027867, title=None, item_type='comment', url=None, parent=25047833, text='In short: Math.<p>To elaborate:<p>Sure, your computer has to know all the numbers and instructions it executes. But that doesn&#x27;t require your computer <i>or you</i> to understand what those numbers or instructions <i>mean</i>.<p>The meaning can be guarded by encryption. For example, if you are given a ROT13 encrypted text, you could uppercase all the letters without understanding the message. You perform an operation on the ciphertext without being able to decipher it, and the result (once decrypted) is exactly the same as if the operation had been applied to the plaintext. This is what fully homomorphic encryption (FHE) is about.<p>Going further, you can also have the effect of the instructions themselves be &quot;hidden&quot; by encryption. As a very simple example, imagine a programming language where all you can do is multiply numbers with constants (and there are different &quot;instructions&quot; for multiplying with different numbers). Your unencrypted program might be &quot;multiply by 3, then multiply by 5, then multiply by 2&quot;. In encrypted form, this might become &quot;multiply by 21, then multiply by 35, then multiply by 14&quot; - that is, every factor is itself multiplied by seven, leading to different instructions. Someone running this encrypted program on (possibly homomorphically encrypted) data will not be able to figure out your original program (unless they know the &quot;key&quot; - that every factor was multiplied by seven). But when you get back the result, all you need to do is divide it by 7x7x7 to get back the output of the original program. And all the &quot;difficult&quot; computations (the actual instructions) have been performed on somebody else&#x27;s machine without them knowing your original program (or your plaintext data, if the entire thing is also fully homomorphic).<p>I hope this example somewhat illustrates the concept (even though it is of course flawed and entirely trivial). Just imagine significantly more and better math instead of the simple operations (e.g. multiplication as only instruction, &quot;decryption&quot; by division etc.) used above. And of course, you can&#x27;t just slap FHE on top independently, it needs to be built into the system. But the idea is the same.')