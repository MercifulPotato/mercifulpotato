Item(by='wejick', descendants=None, kids=None, score=None, time=1612143815, title=None, item_type='comment', url=None, parent=25983906, text='Like suggested by many people that the number of companies will not reach that scale, so starting small and simple is the most efficient. There are few things in mind that may help :<p>1. Define the domain segregation and be discipline on the implementation. It will not only help ease the process when the system need to be segregated into multiple service, but also help on organizing the team.<p>2. After segregating the domain, even if all of them live in the same database dont use `JOIN` as much as possible. Define the API for each domain and use it as the main communication.<p>3. As boring as it sounds, use boring technologies. Pick framework that has been used by many like Jango, Rails and Laravel. They offer not only tools and libraries but also programming pattern that will help us to implement domain segregation. The framework I mentioned have good established (way to work with if not integrated) ORM, event driven method, front end development and means to scale.<p>4. Usually postgreSQL is enough and can bring long way, just remember point 1 when designing the DB.<p>I think those points are quite straightforward and doesn&#x27;t make the development more difficult, while trying to be future proof.')