Item(by='davidhyde', descendants=None, kids=[24980559], score=None, time=1604415360, title=None, item_type='comment', url=None, parent=24979741, text='This is considered bad in .NET because callbacks can &quot;Post&quot; back to the original SynchronizationContext which depends on what async&#x2F;await is being used for. For example, a call to await on a WPF UI thread will join to the calling thread so if you call Task.Result without configuring the task to not join back to the calling thread then you can deadlock the callback processing queue. To avoid this you would use ConfigureAwait(false) depending on your situation. It&#x27;s the source of a lot of confusion in .NET. I don&#x27;t believe that Rust has this &quot;feature&quot; and if you somehow wrote code to achieve the same thing as .NET does then it probably wouldn&#x27;t compile in Rust due to the ownership rules.<p>Source: <a href="https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;dotnet&#x2F;configureawait-faq&#x2F;" rel="nofollow">https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;dotnet&#x2F;configureawait-faq&#x2F;</a>')