Item(by='unethical_ban', descendants=None, kids=None, score=None, time=1609866724, title=None, item_type='comment', url=None, parent=25646909, text='It glosses over a lot of nuance, which I can tell by not explaining that you can&#x27;t use the implicit assignment := operator outside a function.<p>And since this has turned into another &quot;referendum on golang&quot; argument, I&#x27;ll say that I appreciate what it has to offer on my team at work. We historically write in Python, and we are a team of system engineers writing 100-500 line automation code that uses APIs.<p>Static typing helps. Our enterprise has tooling that makes importing 3rd party code a lot easier in our bureaucracy. The linting and checks are more robust.<p>From a language perspective, forcing linting and conventions makes the code a lot easier to write with a team. I may not like camelCase, but damnit if everyone doesn&#x27;t learn how to read it quickly when the language&#x2F;linter forces us to use it.<p>The VSCode plugin is completely essential. Being able to type an import, and then quickly hop to the complete API documentation and expected inputs&#x2F;outputs of everything, is so much help that I, a Python &quot;skilled tradesman&quot;, gladly hopped on the golang train.<p>My only gripe is that a lot of documentation seems to be third party, or very strictly an API reference. Nuanced, helpful docs are scattered in gobyexample, stackoverflow, etc.<p>---<p>Bottom line, it is a great language&#x2F;ecosystem for reasonably self-documenting, readable code for novice&#x2F;intermediate &quot;scripters&quot; and coders who are not CS majors. Tooling is amazing.')