Item(by='enriquto', descendants=None, kids=[25572200], score=None, time=1609261141, title=None, item_type='comment', url=None, parent=25571126, text='&gt; Go and write a (slow) tensor library yourself in pure Python.<p>Paraphrasing Alexander Stepanov, &quot;complexity is part of of the specification&quot; [0].  If your data is not contiguous (as the third figure in the article shows), it is not the same data structure.  Thus you cannot implement this data structure in pure Python, period.  The &quot;array&quot; module is just a wrapper to C data just like numpy is, it is not a pure Python construction.<p>[0] Here&#x27;s the full quote, from <a href="http:&#x2F;&#x2F;www.stlport.org&#x2F;resources&#x2F;StepanovUSA.html" rel="nofollow">http:&#x2F;&#x2F;www.stlport.org&#x2F;resources&#x2F;StepanovUSA.html</a><p>In 1976, still back in the USSR, I got a very serious case of food poisoning from eating raw fish. While in the hospital, in the state of delirium, I suddenly realized that the ability to add numbers in parallel depends on the fact that addition is associative. (So, putting it simply, STL is the result of a bacterial infection.) In other words, I realized that a parallel reduction algorithm is associated with a semigroup structure type. That is the fundamental point: algorithms are defined on algebraic structures. It took me another couple of years to realize that <i>you have to extend the notion of structure by adding complexity requirements to regular axioms</i>.')