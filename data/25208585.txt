Item(by='chriswarbo', descendants=None, kids=None, score=None, time=1606308066, title=None, item_type='comment', url=None, parent=25203038, text='A humble request: please don&#x27;t make spinners (GIFs, CSS animations, whatever) visible in the initial response HTML of a page, if they&#x27;re meant to indicate some sort of AJAX loading. Lots of sites do this, but it&#x27;s unfortunately <i>too robust</i>. The spinner will appear, and run forever, even if:<p>- We forgot to embed the JS that does the AJAX loading<p>- The JS has an error before it even makes a request<p>- The src URL of a script doesn&#x27;t exist<p>- Some cross-domain issue prevents a script loading<p>- The user agent doesn&#x27;t support JS<p>I accept that it can be tricky to remove a spinner correctly in the face of certain error conditions, but it&#x27;s trivial to <i>avoid showing it until it&#x27;s meaningful</i>. So <i>please</i>: only insert&#x2F;reveal spinners programatically, just before the associated request is made.<p>In fact, this same logic applies to all UI elements that are only meaningful thanks to JS (e.g. buttons that require an event handler, rather than submitting a form); such things should be inserted&#x2F;revealed programatically using JS, not visible in the initial response HTML, so we don&#x27;t end up clicking over and over on a button that&#x27;s useless, etc.<p>I get that many Web devs these days don&#x27;t care about progressive enhancement, and like to assume all users have HTML5+CSS+JS+etc. but even that assumption doesn&#x27;t excuse spinners that lie when a connection fails, or a server is misconfigured, or a third-party moves some assets, etc.')