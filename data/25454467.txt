Item(by='zaarn', descendants=None, kids=[25454992], score=None, time=1608203003, title=None, item_type='comment', url=None, parent=25454045, text='Systemd doesn&#x27;t kill nohups as long as the session exists. Hence your nohup works if you opened tmux or a graphical terminal and close it. But logging out terminates all processes belonging to that session that don&#x27;t properly disassociate from the session.<p>You can run &#x27;loginctl enable-linger&#x27; to disable this behaviour or set &#x27;KillUserProcesses=no&#x27; in &#x2F;etc&#x2F;systemd&#x2F;logind.conf<p>You can also use &#x27;systemd-run --scope --user &#x2F;usr&#x2F;bin&#x2F;yourscript.sh&#x27;, this will explicitly keep the process running even when the session closes, even if lingering processes are killed. It&#x27;ll also keep track of all processes created by that script, so if the script exits, it&#x27;ll kill all processes that are left over and cleanup. It also meshes with other parts of systemd so `systemd-run --scope --user --on-calendar=daily &#x2F;usr&#x2F;bin&#x2F;script&#x27; will run the script daily until you tell it to stop or the machine restarts (since it&#x27;s not configured on disk). You can even keep the service if the script dies with &#x27;--remain-after-exit&#x27;, which tells systemd to keep the service alive as long as processes for it exist or you terminate it manually.<p>If whatever your running in the background needs forking, you can create a service and start it under your user, that properly keeps it up and running.<p>Systemd understands a nohup as &quot;don&#x27;t terminate the process when the terminal closes&quot;, not as &quot;don&#x27;t terminate the process when the session ends&quot; which can be different events depending on the setup (ie, graphical terminal or tmux).<p>The session manager will start any user services that are activated, your distro usually configures that in  &#x27;&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;user&#x27;. Manually activated units are in &#x27;&#x2F;etc&#x2F;systemd&#x2F;user&#x27; if they are system-wide and user config is in &#x27;$XDG_CONFIG_HOME&#x2F;systemd&#x2F;user&#x27; or &#x27;$HOME&#x2F;.local&#x2F;share&#x2F;systemd&#x2F;user&#x27;.<p>To turn it off you can deactivate it via &#x27;systemctl --user disable gpg-agent&#x27; for the current user or &#x27;systemctl --global disable gpg-agent&#x27; for all users. If it activates via socket activation you can either disable the socket &#x27;systemctl --global disable gpg-agent.socket&#x27; or mask the service &#x27;systemctl --global mask gpg-agent&#x27;. Masking the service prevents it from being started for any reason.')