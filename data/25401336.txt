Item(by='larkinrichards', descendants=None, kids=[25407159], score=None, time=1607804516, title=None, item_type='comment', url=None, parent=25399058, text='I spend many hours of each day ~programming~ wrangling text files and I use macos + zsh + textmate2 for my daily drivers.  I see shell as an important proficiency because it helps maintain a lower-level understanding of how the &quot;magical&quot; GUI &quot;works,&quot; which often helps in debugging obtuse errors, and I&#x27;m sad to encounter more engineers who are completely unfamiliar with it.<p>When it comes to examples like that posted by the OP, I like the combination of piping&#x2F;pasting to mate and multi-caret editing for most scenarios where others would reach for awk&#x2F;xargs.<p>Here&#x27;s me following the same example scenario but with multi-caret editing (slowed down slightly):<p><a href="https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;226503&#x2F;101993951-6480cb80-3c73-11eb-9608-c6912011954b.gif" rel="nofollow">https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;226503&#x2F;101993951-6...</a><p>Step by step:<p><pre><code>  1. git status -s | mate\n  2. select &quot; D&quot; with arrow keys + shift\n  3. command-E macos default for &quot;use selection to find&quot;\n  4. option-command-F to find all (multi-caret editing starts)\n  5. type &quot;git checkout&quot; to replace &quot; D&quot;\n  6. command-left to move cursor to start of line, then shift-command-right to select to end of line.\n  7. copy\n  8. select all + delete (clear document)\n  9. paste, \n  10. press return to insert newlines\n  11. select all + copy\n  12. switch back to terminal\n  13. paste\n</code></pre>\nTo me, this is many small steps, but each step is more mechanical and flows naturally, and the general flexibility of multi-caret editing means it is applicable more often in my daily work.')