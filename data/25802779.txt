Item(by='aloukissas', descendants=2, kids=[25802845], score=4, time=1610810865, title="Ask HN: Why do you think Signal's service fell over with this week's user surge?", item_type='story', url=None, parent=None, text='As of now, status.signal.org still shows that Signal is still struggling to handle the agreeable huge influx of new users. However, these are smart guys behind the project (perhaps their strength is privacy, not system scalability? doubt it though). The question is: why did this happen? Especially since WhatsApp&#x27;s famous super-scalability with just a handful of servers.<p>It looks from their GitHub repo that the signal server is a Java project [1]. WhatsApp&#x27;s &quot;secret&quot; weapon for getting such great scalability for so cheap was choosing to use Erlang. I would like to believe that this technology choice must have played a role here (not that people haven&#x27;t build massively scalable apps with Java&#x2F;JVM).<p>Now, why the slow response to increase capacity? Are they perhaps not running on a cloud infrastructure, where adding more servers to the problems is as easy as a few clicks (or zero, e.g. with k8s autoscaling and other such tricks)? Perhaps, again for privacy&#x2F;control, they&#x27;re running their own metal at a colo or somewhere.<p>Finally, could it be their clustering system works in a way that prevents them from just &quot;throw more servers to the problem&quot; and is rather more intricate than this?<p>I think all this may be a fun &quot;postmortem in the dark&quot; experiment :)<p>[1] https:&#x2F;&#x2F;github.com&#x2F;signalapp&#x2F;Signal-Server')