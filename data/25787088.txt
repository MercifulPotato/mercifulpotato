Item(by='eyelidlessness', descendants=None, kids=[25787213], score=None, time=1610685692, title=None, item_type='comment', url=None, parent=25786396, text='&gt; Sure...but not solving quickly, at the expense of all else.<p>I really, sincerely, think they do. It’s just that their optimizations focus on the subset of problems. For example:<p>&gt; Rust is optimized for solving certain problems -- but solving them robustly, not quickly.<p>This is basically the same thing as saying: when the problem one wants to solve quickly is robustness, Rust may be a good choice.<p>&gt; Python comes a bit closer, but Python also wants to be readable; I don&#x27;t have to worry about that.<p>There are some problems I associate with quickly solving in Python, and others where I find it exceptionally slow. Sure, readability may be a contributing factor. Another is immature&#x2F;complex tooling that makes static validation or dependency management a slog. Another still is that a lot of its concurrency story is in flux and you have to spend time researching approach and compatibility if your problems are concurrency related.<p>I’m still not trying to discourage, but I’ve spent most of my career working in scripting languages (those which most prioritize “rapid prototyping” and “repl driven development”), and ultimately when they’re applied to use cases that they’re not designed for their velocity is consumed by tooling.<p>My advice, intended with kindness and encouragement, is to consider which problems you wish your language to be able to solve rapidly.<p>To your points about velocity aids, expressiveness and transparency aren’t just velocity amplifiers at the time you write code. They also (can) aid velocity of reading comprehension, editing&#x2F;refactoring, review. This is a place where Python does very well in terms of velocity: even when I had read less than 100 lines of it, I could generally review work and ask important questions about what it was doing in... well, frankly a shorter time than the JS I was actively working with as a lead at the time.<p>It’s clear you want a language that enables devs to dev fast. But what are they doing fast?')