Item(by='quickthrower2', descendants=None, kids=None, score=None, time=1604182727, title=None, item_type='comment', url=None, parent=24955227, text='I agree to some extent. When I see this in imperative code-bases, it can be used as a way to reduce lines of code and save having to define a new class. But when debugging or trying to make sense of the code it can be awful. However it&#x27;s not the passing functions to functions that is the problem, it is the division of responsibility not being though through while doing so.<p>As a silly made up example, you pass a callback to an XML parser to tell you when a node has been parsed, so you can pass in a callback to call an API to let it know. Doing something like that just pollutes the XML parser code for no good reason, and you then debug and find you get a 400 error when trying to parse something and &#x27;wtf&#x27; and you have to untangle the callbacks.<p>I&#x27;m having a hard time summing it up right now, but I think if you try to &quot;libraritize&quot; &quot;specific code&quot;, i.e. make something that does a very specific job, too generic it causes confusion.<p>That example has 1 callback but believe me some developers want to stack &#x27;em high.')