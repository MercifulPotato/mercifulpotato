Item(by='aszen', descendants=None, kids=None, score=None, time=1602701172, title=None, item_type='comment', url=None, parent=24770954, text='I have been researching into several testing approaches and so far in my experience yes fakes are better than mocks. But what is even better is not having to fake or mock stuff especially for testing business logic.<p>One of the problems we get ourselves into is abstracting service io code into functions and calling them from our business logic code. This forces us to mock all the io calls, instead we should be doing the opposite i.e abstracting business logic into discrete functions of pure data in and out and then calling those functions from our io code.\nThis way we can test the business logic independently of the io code. Testing the business logic now becomes quite simple and one can leverage property testing to further boost our confidence in such tests.<p>Many times the ramaining io code is just calling other functions and doesn&#x27;t need to be tested.<p>Several other ideas that relate to this are hexagonal architecture, Domain Driver Design, clean architecture and functional core with an imperative shell.<p>Some resources to further explore these ideas:<p>Clean Architecture in Python - <a href="https:&#x2F;&#x2F;youtu.be&#x2F;DJtef410XaM" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;DJtef410XaM</a><p>Why integrated tests are a scam - <a href="https:&#x2F;&#x2F;youtu.be&#x2F;VDfX44fZoMc" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;VDfX44fZoMc</a><p>Boundaries - <a href="https:&#x2F;&#x2F;youtu.be&#x2F;yTkzNHF6rMs" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;yTkzNHF6rMs</a>')