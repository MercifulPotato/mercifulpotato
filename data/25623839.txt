Item(by='lbj', descendants=None, kids=[25624015, 25654034], score=None, time=1609698997, title=None, item_type='comment', url=None, parent=25623625, text='Well, thats true but its implied.<p>The entire syntax for Clojure fits in a single line. Its easier to learn and being as expressive as it is, the core idioms are quickly picked up as well.<p>So - You can get into it quickly, very quickly if you&#x27;re already familiar with FP.<p>The brevity of the code means that you&#x27;ll produce much more robust code, which takes up a lot less screen real-estate. This allows you to grasp the functionality of any code you read, very quickly and start working on the problem.<p>It&#x27;ll go as fast as Java, but slower than C&#x2F;Rust. For some performance oriented tasks, you&#x27;ll have to put in more work than makes sense, to get the performance you want. But for 99% of the Apps that are being written, Clojure will perform just fine and you&#x27;ll end up with better code.<p>Compared to Haskell or most other FPs (not F#) you get the added benefit of being on the JVM. Write once, run everywhere. Huge libs to do everything from 3d graphics to webserving.<p>In most cases, I use Clojure for the above reasons summed up in this one sentence: I makes me more effective than the alternative.<p>ps: Having enjoyed Lisps for 20 years or so, Ive never used Par-Edit :)')