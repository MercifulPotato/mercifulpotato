Item(by='laplacesdemon48', descendants=None, kids=None, score=None, time=1610992219, title=None, item_type='comment', url=None, parent=25823589, text='&gt; There&#x27;s a lot more to scientific computing than wrangling tabular data.<p>Also a point that gets ignored way too often. My original post differentiated between time spent writing models and time spent data wrangling.<p>I would never even attempt to write a symplectic integrator in base R (OK maybe Rcpp would be fine but that&#x27;s not really &quot;R&quot;). Julia, by design, is better at that. But the R ecosystem is so good that I can use the best practical implementation of a symplectic integrator to solve common modeling problems via RStan.<p>Yes, Stan is a standalone framework that can be accessed from Julia as well. But the following workflow can be done in R much easier:<p><pre><code>  1) Read in badly formatted CSV data\n  2) Wrangle the data into a useable form\n  3) Do some basic exploratory analysis (including plots)\n  4) Write several models in brms&#x2F;raw Stan (via rstan)\n  5) Simulate from the priors and reset them to more sensible values\n  6) Run the model over the data to generate the posterior\n  7) Plot&#x2F;run posterior predictive checks, counterfactual analysis, outlier analysis (PSIS or WAIC), etc.\n</code></pre>\nAgain, the above represents <i>my</i> common use case. I fully appreciate that people use Julia to do awesome stuff like &quot;the exploration of chaos and nonlinear dynamics.&quot; [0]. I understand that the modern R ecosystem isn&#x27;t really built for this.<p>[0] <a href="https:&#x2F;&#x2F;juliadynamics.github.io&#x2F;DynamicalSystems.jl&#x2F;latest&#x2F;" rel="nofollow">https:&#x2F;&#x2F;juliadynamics.github.io&#x2F;DynamicalSystems.jl&#x2F;latest&#x2F;</a>')