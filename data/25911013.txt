Item(by='kstrauser', descendants=None, kids=[25911268, 25911059, 25911063, 25911844, 25914206, 25914234, 25911270, 25915272], score=None, time=1611621861, title=None, item_type='comment', url=None, parent=25910496, text='I wonder how much cruft could be thrown away if the project tossed out support for, say:<p>- Everything but Linux and a few of the more popular BSDs<p>- 32 bit CPUs<p>- CPUs with less than 1,000 installations<p>- Ancient toolsets that don&#x27;t support features everyone else takes for granted in the last 20 years<p>For instance, it has to be a pain in the neck to sit on a code base with Solaris 2.6 support, or NetBSD on Alpha, or... Also, it seems like there&#x27;d <i>have</i> to be some legacy pain around things like &quot;we can&#x27;t use this flag on sed because Amix didn&#x27;t have it&quot;.<p>But I don&#x27;t know enough about the infrastructure to know if pruning those out would make a bit of engineering difference. How much is support for ancient or little-used stuff slowing down development?<p>Edit:<p>Alternatively, I wonder what it would look like to have a build farm that precomputed all the values. &quot;Oh, you&#x27;re on macOS 11.1 on Intel? Here&#x27;s the list of 32 envvars you need to set.&quot; If a million people are compiling the same file on a million identical computers, is it a great idea for all of them to have run the same probes?<p>Edit 2:<p>I&#x27;d never advocate for support for such systems to be scrubbed from the Internet. I&#x27;m just saying it&#x27;s unreasonable to <i>expect</i> a maintainer today to support ancient systems. The people still using those systems have the right to fork the tools and maintain their own version, but that&#x27;s not the same as making upstream do it for them.')