Item(by='ratww', descendants=None, kids=None, score=None, time=1611879231, title=None, item_type='comment', url=None, parent=25949431, text='I&#x27;m gonna say it, then: it was pretty good tech. It worked similar to Turbolinks&#x2F;Hotwire, you could make reusable components like React, it had much better benchmarks than interpreted languages at the time, and it worked very well with or without Javascript active on the browser. The WYSIWYG was nice but it would be alright without it.<p>What killed it was lack of community best practices. It NEEDED Custom Components and separation of concerns (using something like MVVM) for it to work well. But without a community around it (and with Microsoft&#x27;s lack of interest), most people ended up writing spaghetti code.<p>MVC on the other hand had a large community around it developing best practices. MVC code could also be a clusterfuck if you wanted to: you could put all your logic in the view for example. The reason it didn&#x27;t happen was because there was widespread education around the MVC paradigm. WebForms didn&#x27;t have this.<p>Also it didn&#x27;t integrate too well with jQuery, which was the new hotness. Today most people are smart enough not to use jQuery to mutate a DOM tree generated by a React component, but back then jQuery was the new kid on the block and people blamed the problems on WebForm, rather on the fact they were mixing two incompatible paradigms.')