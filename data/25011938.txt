Item(by='georgecalm', descendants=None, kids=None, score=None, time=1604703542, title=None, item_type='comment', url=None, parent=25006277, text='If you&#x27;d like to use something like this in your own APIs to let your clients filter requests or on the CLI (as is the intention with gron), consider giving &quot;json-mask&quot; a try (you&#x27;ll need Node.js installed):<p><pre><code>  $ echo &#x27;{&quot;user&quot;: {&quot;name&quot;: &quot;Sam&quot;, &quot;age&quot;: 40}}&#x27; | npx json-mask &quot;user&#x2F;age&quot;\n  {&quot;user&quot;:{&quot;age&quot;:40}}\n</code></pre>\nor (from the first gron example; the results are identical)<p><pre><code>  $ gron &quot;https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;tomnomnom&#x2F;gron&#x2F;commits?per_page=1&quot; | fgrep &quot;commit.author&quot; | gron --ungron\n  $ curl &quot;https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;tomnomnom&#x2F;gron&#x2F;commits?per_page=1&quot; | npx json-mask &quot;commit&#x2F;author&quot;\n</code></pre>\nIf you&#x27;ve ever used Google APIs&#x27; `fields=` query param you already know how to use json-mask; it&#x27;s super simple:<p><pre><code>  a,b,c - comma-separated list will select multiple fields\n  a&#x2F;b&#x2F;c - path will select a field from its parent\n  a(b,c) - sub-selection will select many fields from a parent\n  a&#x2F;*&#x2F;c - the star * wildcard will select all items in a field</code></pre>')