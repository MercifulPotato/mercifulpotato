Item(by='steveklabnik', descendants=None, kids=None, score=None, time=1602276189, title=None, item_type='comment', url=None, parent=24734146, text='&gt; If those platform crates are just backends for libc (or similar to libc),<p>They&#x27;re not, they&#x27;re to the specific platform&#x27;s APIs. The libc crate is a package that targets libc on every platform.<p>&gt; Having to use proc-macro2+quote+syn for macros feels wrong, considering it&#x27;s a language feature.<p>In order to ship procedural macros as a feature, they&#x27;re pretty minimal. There&#x27;s a tradeoff here; others could be chosen, but weren&#x27;t for good reasons.<p>&gt; Having to pull in 4 crates for pinning also seems wrong.<p>This is covered by <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24730280;" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24730280;</a> that is, it&#x27;s a transitive dependency issue.<p>&gt; The async I&#x2F;O feels like definite bloat.<p>Really depends, network calls are a textbook use-case for async I&#x2F;O. And there&#x27;s so many futures crates specifically so that you can only depend on the bits you need.')