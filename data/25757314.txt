Item(by='safog', descendants=9, kids=[25757376, 25760837, 25757604, 25757762, 25759105, 25757786], score=6, time=1610505579, title='Ask HN: What is the defacto tech stack for a startup now?', item_type='story', url=None, parent=None, text='Hi HN,<p>I&#x27;ve been at $BIGCO for a while now and have lost track of all the innovation that&#x27;s happening outside because of the proprietary stack we have to work in. What is the tech stack you&#x27;d chose for your startup assuming you want to use some sort of cloud provider and aren&#x27;t going serverless? Looking for something that&#x27;s not self-host &#x2F; buying a cheap VM off of digital ocean and setting up the whole thing yourself. I hate to say the word, but &quot;cloud-native&quot;.<p>Some things to think about:<p>- Source control (git in some form? where is it hosted? github? mono repo?)<p>- CI &#x2F; CD<p>- Kubernetes? Or plain old VMs?<p>- DB - Full relational DBs? Midway like Spanner? Or full key-value like DynamoDB?<p>- Service framework<p><pre><code>   . What do you use for auth specifically?\n</code></pre>\n- Front-end framework<p>- GraphQL or no?<p>- Caching solutions?<p>- Service metrics + dashboards? Do service frameworks emit metrics out of the box? (requests, errors, latencies etc.) or do you have to DIY?<p>- Messenger? (Slack vs Teams vs Chime vs Google Chat)<p>- Bug management + Sprint management?<p>- Anything else I&#x27;m missing?<p>Thanks!')