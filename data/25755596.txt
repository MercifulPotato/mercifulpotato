Item(by='ranman', descendants=None, kids=[25756231], score=None, time=1610494425, title=None, item_type='comment', url=None, parent=25753021, text='I think that&#x27;s a good idea and I wish they would do something like this. FWIW I disagree that the console is a usability disaster. We&#x27;re very prone to hyperbole in this industry. It&#x27;s definitely got a ton of room to improve but it&#x27;s not the worst and it&#x27;s usable. Hundreds of thousands of people use it all the time.<p>I can give some background that might be helpful on why the UIs might not be open sourced.<p>Each service team builds their own console. Most of the original AWS consoles were written in Java with GWT. Some eventually moved to Angular. There&#x27;s a big push internally to use a more consistent and familiar UX experience across services. There&#x27;s an internal UI&#x2F;UX platform called Polaris (I&#x27;m not leaking anything here, you can see this in the source of some consoles and in the console.log statements that leak to prod) that most of the new services use.<p>Most new services are built with React + Polaris. The console API for many new services is not the same API that is exposed to the SDKs&#x2F;CLIs. These APIs aren&#x27;t public or documented. If they open source every console, and people build on that, they&#x27;re tied to supporting those APIs in perpetuity. That slows their pace of iteration on the console.<p>If consoles are open source it could be another potential vector for service updates to leak through.<p>Another concern is that releasing the UI kit for the AWS console is going to make it way easier for phishers to build out convincing lures. TBH I&#x27;m not super concerned about that.<p>If I were AWS I&#x27;d open source the UI toolkit and give various service teams the option of open sourcing their console. From there I&#x27;d release a theme&#x2F;color scheme for people who want to build extensions.<p>AWS is very customer feedback driven. However, most of the customers providing feedback are not the ones using the console day-in-day out. The people actually using the console are not the ones talking to AWS. If you hit a UX issue then use that feedback button on the bottom left of the console and let them know.')