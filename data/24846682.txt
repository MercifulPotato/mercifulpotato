Item(by='barrkel', descendants=None, kids=[24848066], score=None, time=1603279330, title=None, item_type='comment', url=None, parent=24846018, text='I don&#x27;t significantly disagree with you, but let me take the devil&#x27;s advocate approach.<p>Adding support for a different database doesn&#x27;t mean restricting yourself to the lowest common denominator. It means using different techniques, more appropriate for the different database, that may optimize other parts of your data access and modification path, while pessimizing stuff your current database does.<p>More importantly, it means extracting hard database dependencies like raw SQL or custom ORM fiddling from your business logic and entities, and pushing them behind a module or service boundary.<p>Raw leverage of the database, if it&#x27;s dispersed throughout your application, will limit your ability to change your schema (e.g. denormalize an attribute, split or join tables, convert a parent-child relationship to embedded JSON or vice versa) and address performance problems as you scale up. It&#x27;ll also stop you having a single point of data access where you can partition or duplicate your data into different stores with different capabilities more suited to their access and modification patterns. These kinds of things become really important when the database becomes a bottleneck in your system.')