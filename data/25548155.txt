Item(by='btschaegg', descendants=None, kids=[25556866], score=None, time=1609034105, title=None, item_type='comment', url=None, parent=25541874, text='That&#x27;s an interesting metaphor because I picked it up somewhere else, but it might well be that Hunt and Thomas actually coined this phrase in &quot;The Pragmatic Programmer&quot;.<p>If you think of orthogonality in geometry, you can describe any N-dimensional vector space through a set of N orthogonal vectors (say the unit vectors in X, Y, Z). &quot;Orthogonal&quot; in this case means that moving something along one of those (say the X axis) won&#x27;t alter its position from any other base vector&#x27;s perspective.<p>In the same way, &quot;orthogonal implementations&quot; is a way of saying that the things are independent from each other. You can find their explanation in the Google preview for the book [1].<p>So, say you write utility code for a couple of applications, for example: Message transmission and subscription management. Then, you should try and keep both as independent as possible from each other, so that as a downstream user I won&#x27;t have to pull in or even &quot;massage&quot; both just to use one of them.<p>As I wrote before, that sounds totally obvious when said out loud; yet I constantly find new examples where someone found a way to unnecessarily &quot;complect&quot; [2] multiple things.<p>[1]: <a href="https:&#x2F;&#x2F;books.google.ch&#x2F;books?id=LhOlDwAAQBAJ&amp;pg=PT70&amp;dq=orthogonal+&quot;pragmatic+programmer&quot;" rel="nofollow">https:&#x2F;&#x2F;books.google.ch&#x2F;books?id=LhOlDwAAQBAJ&amp;pg=PT70&amp;dq=ort...</a><p>[2]: If that word also seems strange to you, I highly recommend watching <a href="https:&#x2F;&#x2F;youtu.be&#x2F;oytL881p-nQ" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;oytL881p-nQ</a>')