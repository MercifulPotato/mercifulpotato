Item(by='nickjj', descendants=None, kids=None, score=None, time=1611495739, title=None, item_type='comment', url=None, parent=25891597, text='&gt; What are the issues with using docker to solve this problem ?<p>Docker alone doesn&#x27;t solve the problem and neither does pip unless you take extra steps.<p>Here&#x27;s a common use case to demonstrate the issue:<p>I open source a web app written in Flask and push it to GitHub today with a requirements.txt file that only has top level dependencies (such as Flask, SQLAlchemy, etc.) included, all pinned down to their exact patch version.<p>You come in 3 months from now and clone the project and run docker-compose build.<p>At this point in time you&#x27;re going to get different versions than I had 3 months ago for many sub-dependencies. This could result in broken builds. This happened multiple times with Celery and its sub-dependency of Vine and Flask with its sub-dependency of Werkzeug.<p>So the answer is simple right, just pip freeze your requirements.txt file. That works but now you have 100 dependencies in this file when really only about 8 of them are top level dependencies. It becomes a nightmare to maintain that as a human. You basically need to become a human dependency resolution machine that traces every dependency to each dependency.<p>Fortunately pip has an answer to this with the -c flag but for such a big problem it&#x27;s not very well documented or talked about.<p>It is a solvable problem tho, to have a separate lock file with pip without using any external tools and the solution works with and without Docker. I have an example of it in this Docker Flask example repo <a href="https:&#x2F;&#x2F;github.com&#x2F;nickjj&#x2F;docker-flask-example#updating-dependencies" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;nickjj&#x2F;docker-flask-example#updating-depe...</a>, but it&#x27;ll work without Docker too.')