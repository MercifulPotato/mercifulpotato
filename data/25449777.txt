Item(by='cogman10', descendants=None, kids=[25450166], score=None, time=1608158507, title=None, item_type='comment', url=None, parent=25449465, text='&gt; I have been coding since the mid-80&#x27;s, not having the same local UNIX machine for doing development than what the server was running was quite common in the world of commercial UNIXes.<p>Things change.  Why is x86 the primary server platform? It isn&#x27;t a great micro architecture.  The fact that ARM and others (Like power pc) have been eating their lunch in terms of price, performance, and power consumption is proof enough of that.<p>So how do you explain the rise of x86 and the fall of pretty much every other platform on servers?<p>To me, it&#x27;s simple. x86 got fast enough on consumer hardware to be able to run the same software that would run on servers.  Developers like to test their software locally.  Emulators for anything to x86 have been terribly slow.<p>That&#x27;s why since about the late 90&#x27;s pretty much everyone has been running x86 servers.<p>That you can cross compile isn&#x27;t really the issue.  Even running managed languages isn&#x27;t the issue.  The issue is that there are always differences that are hard to compare when switching platforms if the one you are developing on isn&#x27;t the same as the one you are targeting.<p>That&#x27;s like 90% the reason why most consoles have switched over to x86.<p>Mobile devices would have gone to x86 were it not for the fact that licensing costs were too high and the performance&#x2F;watt ratio too low.')