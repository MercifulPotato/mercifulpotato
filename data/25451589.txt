Item(by='apendleton', descendants=None, kids=None, score=None, time=1608171587, title=None, item_type='comment', url=None, parent=25451215, text='I think C++ interop is the bigger deal than plain C. You end up needing to launder everything through C because of the lack of standard C++ ABI, plus there&#x27;s a bunch of ergonomic awkwardness because C++ and Rust have a bunch of standard-library primitives that serve the same purpose but can&#x27;t by passed by reference directly (vectors, slices, strings, tuples, etc.), and need to be manually marshaled back and forth if you have a Rust-flavored thing on one side but want to use a C++ library that expects C++-flavored things on the other.<p>I think at least for non-mutable stuff, C++ string_view (approximately rust &amp;str), span (approximately rust slices), and the like should make at least some operations as simple as pointer casts, but having tooling to automate the boilerplate would be nice, and they&#x27;re also new&#x2F;not that widely supported (std::span is from C++ 20). And mutable stuff, if you want to be able to write idiomatic&#x2F;ergonomic code on both sides, seems like a much bigger lift.')