Item(by='MaxBarraclough', descendants=None, kids=[25331436], score=None, time=1607341833, title=None, item_type='comment', url=None, parent=25331114, text='&gt; the brilliant C programmer hypothesis is almost untested, since most companies hire mostly average C programmers. It&#x27;s only logical that non-brilliant programmers will be working somewhere.<p>Chromium has suffered from buffer-overflow issues, and that&#x27;s a high-profile security-sensitive C++ codebase run by Google.<p>&gt; Rust doesn&#x27;t have the necessary certifications yet, but industry would be wise to contribute<p>I&#x27;d rather avionics code be written in verified SPARK than in Rust, but if they can build a rock-solid Rust compiler it would be good to have it compete in that space. I imagine it could be a nice alternative to MISRA C++, for instance.<p>As you&#x27;ve probably gathered from my mention of SPARK, I agree with you that Ada is sadly overlooked.<p>Turns out that the basic idea of an imperative language that&#x27;s much like C&#x2F;C++ but is much safer and better suited to automatic runtime checks, isn&#x27;t a new one. Ada does this, it&#x27;s existed since around 1980, it&#x27;s mature, there are various compilers for it approved for life-critical work, and its performance matches that of C if runtime checks are disabled.<p>It&#x27;s comparable to Zig and Rust in that regard, but those languages aren&#x27;t the first to aim for C performance with far superior safety properties.<p>&gt; there&#x27;s no reason other industries couldn&#x27;t use it.<p>Right, especially considering the fine work done by AdaCore, who make their tooling available as Free and Open Source software.<p>Perhaps Ada&#x27;s reputation for being boring is its greatest vice, as well as its greatest virtue?')