Item(by='1-more', descendants=None, kids=[25129399], score=None, time=1605642767, title=None, item_type='comment', url=None, parent=25128056, text='&gt; I&#x27;m unconvinced about array access returning Maybe being a good idea, because it&#x27;s generally a bug, not actual uncertainty.<p>So that&#x27;s the thing: in JS (where I spend most of my time) I never wrap an array access in a try&#x2F;catch even though it could throw. Rather, I probably have an if statement that wraps up any array access I&#x27;m unsure about. That way I avoid throwing for the out-of-bounds case. So I&#x27;m with you there: if I wrote Elm the way I write JS it would be clumsy and redundant.<p>However I don&#x27;t write Elm the way I write JS. That if-block for safety I mentioned earlier? I usually move that into the Nothing case when my Dict&#x2F;List&#x2F;Array access&#x2F;query came up empty. In Elm you have to consider that the array access could go out of bounds, that you could end up trying to get the head of an empty list, that you could query a Dict with a key it doesn&#x27;t have. Rather than move those to an if block surrounding same, we usually move those inside. In Haskell you can leave those cases undefined, natch. I like that in Elm there is no such thing as undefined behavior.<p>I&#x27;ve heard some very rad things about Zig so I&#x27;ll definitely be checking it out soon.')