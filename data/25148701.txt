Item(by='resonious', descendants=None, kids=[25159505], score=None, time=1605787791, title=None, item_type='comment', url=None, parent=25147990, text='Definitely just turn off the cop if you don&#x27;t like it.<p>But let&#x27;s nitpick a bit. I find it interesting that the arguments made in the article are about the intention of the programmer.<p>Perhaps an explicit nil does signal to me that the nil is intentional. But does that mean that all implicit nils are unimportant? For a skilled programmer like the OP, it probably does mean that! But how often do I actually <i>know</i> who wrote the code I&#x27;m reading? Of course I can git blame, but maybe the author left the org before I joined. What kind of programmer were they? Are implicit nils important or unimportant to them? Perhaps it&#x27;s easy to argue that they should be unimportant. But in reality, I don&#x27;t know what the author of a particular method was thinking while they were writing it. In fact even an explicit nil might be unimportant. Maybe somebody replaced a `raise SomethingError` line with `nil` to hot-fix an urgent bug.<p>I guess from my perspective as a long-time Ruby developer, all nils are important. It doesn&#x27;t matter what the intention of the programmer was. Ruby is very expressive and very dynamic - anything can return nil and there are a hundred ways to do it. If your nil is intentional, write a test case for it. If you have no test suite in a Ruby project, then may God have mercy on your soul.')