Item(by='triceratops', descendants=None, kids=[25329733], score=None, time=1607304352, title=None, item_type='comment', url=None, parent=25322984, text='&gt; Anyone can write C programms if taken by the hand<p>A textbook is hardly &quot;taken by the hand&quot;. But never mind that.<p>&gt; You just open the console&#x2F;integrated dev tools.<p>And how does someone with zero knowledge of web programming know these even exist?<p>&gt; Type in some commands you see on some website - voila, first programm<p>Right. How is this any different from a JS programmer looking up &quot;Hello world&quot; on a C programming website?<p>&gt; The enviroment is already there and you manipulate it with some scripts<p>How do you know what &quot;scripts&quot; to try if you&#x27;ve never written JS?<p>&gt; Then you can make experiments on the fly - because, wait for it - scripting language.<p>As opposed to...saving a .c file and re-running a single compile command? That&#x27;s not a huge barrier.<p>&gt; You see immediately what works and what not.<p>Does a Hello World program in C take multiple minutes to compile and run?<p>&gt; Means setting up compiler etc. .. which means knowing the terminal or setting up complex software with nonintuitive design<p>Lmao at &quot;knowing the terminal&quot; and &quot;setting up compiler&quot;. These &quot;designers&quot; you scoff at use Macbooks. Which have a perfectly operational terminal and clang installed by default. I can tell someone in once sentence how to open a terminal, compile and run a C file. I&#x27;ve personally taught multiple designers how to use a terminal. We&#x27;re allowed to assume that &quot;designers&quot; know how to open a text file and save it right? Or does that take more &quot;math and engineering&quot; knowledge than the average designer has?<p>&gt;  Many ways of fail for the unguided beginner before the first programm succesfully compiles<p>More than for an unguided beginner writing JS? I doubt it.<p>As someone who writes C++ for a living, I think you should re-examine your beliefs about C and JS programmers&#x27; ability and proficiency.')