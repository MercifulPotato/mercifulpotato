Item(by='waheoo', descendants=None, kids=[24967343], score=None, time=1604198940, title=None, item_type='comment', url=None, parent=24950143, text='I tend to disagree but this might be my biases at play.<p>Refactoring starts from first principles, almost all examples include the reverse refactoring as often you need to undo optimisations a few steps before you can move forward in a different direction.<p>I was recommended working effectively with legacy code by the same types of managers that expect forever returns off the same code. They like to point out how that book encourages small patching without refactoring as refactoring is often fruitless in short term money terms, whereas Fowler tends to advocate refactoring as a healthy and necessery part of software development.<p>I can&#x27;t say I hated working effectively. I found TDD by Beck more useful, and working effectively with unit tests to also be worthwhile.<p>All of these books cover a lot of similar ground.<p>If you&#x27;re going to read only one or two I suggest TDD &gt; refactoring and avoiding the others.<p>(Just my opinion based on what I got out of them reading after 10 years on the job, I suspect juniors might have a different take)')