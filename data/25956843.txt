Item(by='pdimitar', descendants=None, kids=[25959094, 25960099, 25962407, 25957098, 25958658, 25959874, 25957399, 25957068], score=None, time=1611925689, title=None, item_type='comment', url=None, parent=25940439, text='This thread is likely a good place to ask:<p>What modern alternatives to `.sh` scripting exist? Tcl? Is Fish objectively better than Bash and ZSH? Are there any thin wrappers and transpilers on top of sh? Or maybe just good old Perl?<p>And how does this project address normal pain points of shell scripting, like using arrays and iterating on them for example?<p>I was thinking a lot on the topic lately and currently have no good answers (never studied the topic in detail). I suppose just replacing `sh` scripting with Golang is also an option. Not the strongest typed or least verbosive language out there but it has a very good cross-compilation story, compiles really fast and produces single binaries that are easy to distribute. So might go with that.<p>Python is out because startup time wasn&#x27;t great last I used it for CLI tools (might be an outdated info however, any metrics)? Ruby is also a pretty solid candidate; the lack of static typing is, eh, 50&#x2F;50 -- might not be important after all.<p>I also know a guy who replaced Python with OCaml for quick scripting which is rather bizarre to me but knowing a bit more about OCaml nowadays, that actually can work just fine -- and OCaml is <i>very</i> terse.<p>I would prioritize speed of startup and terse code over everything else. Static typing I want but can very likely do without. I don&#x27;t care much how portable the program&#x2F;runtime is; I can distribute it to my machines and I have some influence in my work about what tooling to use.<p>Any practical recommendations?')