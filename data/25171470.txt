Item(by='johndoe0815', descendants=None, kids=None, score=None, time=1605982422, title=None, item_type='comment', url=None, parent=25171268, text='The book &quot;ARM 64-Bit Assembly Language&quot; by Larry Pyeatt (ISBN-13 : 978-0128192214) seems to be a useful book. Unlike almost all other books on assembler programming, it doesn&#x27;t waste dozens of pages on introducing hexadecimal and binary number systems etc. The book also has some examples specific for Raspberry Pi (model 3 and the later BCM2837-based model 2, these should also work for model 4) under Linux and running bare metal.<p>A short comparison of instruction sets was done by the RISC V guys [1], this is quite concise and IMHO relatively neutral.<p>I&#x27;m currently working on converting my compilers course here at NTNU to target Aarch64 instead of x86-64, but this will take  a bit of time until it&#x27;s finished. My students have to write a small toy compiler (yacc&#x2F;lex-based) for a procedural language as practical exercises. However, for practical (and cost) reasons, we will mostly target Linux on Aarch64&#x2F;Raspberry Pi. Though I certainly won&#x27;t keep my students from writing a Mach-O generating backend :).<p>[1] Andrew Waterman. Design of the RISC-V Instruction Set Architecture. UCB Technical Report No. UCB&#x2F;EECS-2016-1.  <a href="https:&#x2F;&#x2F;people.eecs.berkeley.edu&#x2F;~krste&#x2F;papers&#x2F;EECS-2016-1.pdf" rel="nofollow">https:&#x2F;&#x2F;people.eecs.berkeley.edu&#x2F;~krste&#x2F;papers&#x2F;EECS-2016-1.p...</a>')