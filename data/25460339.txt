Item(by='dlbucci', descendants=None, kids=[25462825, 25461619], score=None, time=1608238749, title=None, item_type='comment', url=None, parent=25458777, text='I was always a big fan of Optionals, but having learned Kotlin this year, I was pleasantly surprised at how much non-nullable types seem to remove the need for them. And non-nullable can be just as ergonomic as Optionals with the `?:` operator (or `??` in TypeScript). My only issue when working with `strictNullChecks` in TS is that `null` and `undefined` both exist (thanks JS...). I also wish TS adopted a `Type?` syntax like Kotlin that would signify `Type | null | undefined` and could be used anywhere, not just in function parameters and object types (like TS&#x27;s current `key?: value` syntax).')