Item(by='derefr', descendants=None, kids=None, score=None, time=1612061100, title=None, item_type='comment', url=None, parent=25973875, text='&gt; If anybody knows how to forcibly override the &quot;pixels per mm&quot; reported by a monitor, you will be my hero forever.<p>The brute-force way to alter everything your monitor reports, is to dump its EDID data, patch it (there are programs for this, or you can resort to a hex editor and the EDID spec), and then tell your kernel to load that patched EDID in place of the real EDID when it recognizes your monitor.<p>On Linux, that&#x27;s apparently accomplished by plopping the patched EDID file into &#x2F;lib&#x2F;firmware:  <a href="https:&#x2F;&#x2F;git.kernel.org&#x2F;pub&#x2F;scm&#x2F;linux&#x2F;kernel&#x2F;git&#x2F;torvalds&#x2F;linux.git&#x2F;tree&#x2F;Documentation&#x2F;EDID&#x2F;HOWTO.txt?id=be53bfdb8088e9d1924199cc1a96e113756b1075" rel="nofollow">https:&#x2F;&#x2F;git.kernel.org&#x2F;pub&#x2F;scm&#x2F;linux&#x2F;kernel&#x2F;git&#x2F;torvalds&#x2F;lin...</a><p>(I&#x27;ve never actually done this with Linux, but I&#x27;ve done it in macOS on a Hackintosh, because macOS frequently thinks televisions connected over HDMI should be fed YUV instead of sRGB. You can patch the EDID to force macOS to treat the TV as a monitor.)')