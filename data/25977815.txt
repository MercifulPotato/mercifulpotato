Item(by='willemmerson', descendants=None, kids=[25980075, 25977945, 25978297], score=None, time=1612090062, title=None, item_type='comment', url=None, parent=25976473, text='At work I had to set up a server with django, postgres, SSL, rabbitmq, celery and a few other things. I did it in both ansible and docker-compose, the ansible version was 1500 lines and docker-compose version was 100 lines. A lot of the ansible stuff is dealing with users, groups, services, supervisord, virtualenvs and repositories - none of this is required in docker as containers restart themselves, users are already set up, you don&#x27;t need virtualenv, and using containers avoids the need to use repositories to get specific software versions.\nAlso the docker-compose version was much faster to pick up changes, vs minutes for ansible.<p>I don&#x27;t find docker that useful for developing on a day to dat basis however, it just gets in the way and generally you&#x27;re not going to need a webserver, SSL, celery, rabbitmq in development anyway. It is useful to debug things locally though.<p>The other reason to use docker is state: while using ansible we got bitten by old dependencies hanging around because ansible doesn&#x27;t exactly mirror your config, it can really only <i>add</i> stuff. Whereas docker actually wipes the slate clean every single deploy so your server is an exact mirror of your docker-compose file. This is really important.')