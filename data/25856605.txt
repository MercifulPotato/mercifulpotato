Item(by='Cixelyn', descendants=None, kids=[25856671], score=None, time=1611216239, title=None, item_type='comment', url=None, parent=25856541, text='Yeah! Docs start on page 323 here: <a href="https:&#x2F;&#x2F;datasheets.raspberrypi.org&#x2F;rp2040&#x2F;rp2040_datasheet.pdf" rel="nofollow">https:&#x2F;&#x2F;datasheets.raspberrypi.org&#x2F;rp2040&#x2F;rp2040_datasheet.p...</a>.<p>Looks like there&#x27;s an assembler for programming the PIO peripheral; they seem quite capable with two IO registers and two scratch registers.<p>I&#x27;ve used a similar sort of embedded state machine inside EFM8 microcontrollers before. They&#x27;re great not just for implementing custom communication protocols, but also for offloading simple tasks: one example I&#x27;ve coded before is that you can offload software key debouncing to the state machine, and even get an interrupt on keypress. This greatly simplifies the main loop as you don&#x27;t need to dedicate polling time or write debounce calculations!')