Item(by='nullstyle', descendants=None, kids=None, score=None, time=1603059402, title=None, item_type='comment', url=None, parent=24820674, text='“How would you implement it then?”<p>Chill, bro. I said “seems hand-wavy” and “I’d love to be wrong”.  I was hedging my bets and clearly indicating this was a surface-level read.  I shouldn’t have to have a better alternative on deck to point out something in the codebase that didn’t seem to be privacy-friendly. No offense was meant.<p>Since you asked how I would do things:  I would have had a clear and detailed security-specific document or section of the readme to detail in what ways it is peer-to-peer and in what ways it is private.  I would have probably gestured towards the threat model I used when designing the protocols, but —- let’s be honest —- I’d probably be too lazy to document it adequately.   As far as I can tell, there’s one paragraph in its developer guide on security and two paragraphs on peer-to-peer communication and I wasn’t able to get a good read on its concrete design or characteristics.<p>&gt; Note that the DNS queries are only done when 1) there&#x27;s no host in the local cache and 2) no trusted peer has resolved it either.<p>This wasn’t clear to me from my first spelunk through the readme or the docs.  Are you affiliated with the project?  Is there a good security overview of the project you know of?<p>&gt; I mean, DNS is how the internet works. Can&#x27;t do much about it except caching and delegation to avoid traceable specificity.<p>What I meant to say is, I was not so sure that the google public dns could be considered private. But nevermind on that, I can’t confirm their logging policies. I’m probably just paranoid about how easy google seems to build a profile on me.  So yeah, as mentioned, just my initial read.')