Item(by='tialaramex', descendants=None, kids=None, score=None, time=1602115511, title=None, item_type='comment', url=None, parent=24710715, text='If you do what the specification told you, in TLS 1.3 or in QUIC, you can build these products and they&#x27;ll work as intended for web browsing. In TLS 1.3 there is even a whole section of the RFC (under &quot;Invariants&quot;) that explains how to do this properly.<p>What you end up with is two connections. A connection from the browser to your product, and then a connection from your product to the web site. Your product is in the middle and can apply any policies whatsoever that it desires.<p>There are two things about this that vendors do not like, or which their customers do not like and the vendors would prefer somebody else take the blame for not them.<p>1. For this to work the browser needs to trust the product. The product will need to mint its own certificates for each site visited, and it can&#x27;t make genuine ones, so it&#x27;ll need to be explicitly trusted by the browser. This requires more honesty from your customer (the product&#x27;s operator) in regard to their users (employees &#x2F; students &#x2F; visitors &#x2F; whatever) where previously a product might try to snoop unobtrusively. That&#x27;s no longer an option.<p>2. Actually doing all this heavy lifting costs money. More CPU power, more RAM, even more network bandwidth because you can&#x27;t just snoop a few frames at the start of a connection you need to proxy decrypt&#x2F; re-encrypt every single byte even if you realised very quickly that it was actually fine. This makes the product more expensive, even though it&#x27;s also <i>worse</i> because their users ask awkward questions now.')