Item(by='brundolf', descendants=None, kids=[25623770], score=None, time=1609697903, title=None, item_type='comment', url=None, parent=25623587, text='Taking a second look at this particular example, I guess it is a bit of a &quot;trick&quot; because of the ahead-declaration of both possible &quot;holder&quot; variables on the stack. It&#x27;s just... wildly unintuitive that this should be possible. Even if you showed me this code without saying whether or not it should compile, I wouldn&#x27;t be sure.<p>Here&#x27;s the train of intuition:<p>1) dyn requires a pointer that may be to one of multiple types of structs<p>2) a group of multiple types of structs has an undefined memory layout, so the value must either live on the heap or be wrapped up in an enum<p>That <i>feels</i> like an airtight understanding. But then Rust lets you do this weird juggling maneuver based on control-flow that allows you to do it on the stack.<p>I&#x27;m not saying Rust shouldn&#x27;t let you do this, and I&#x27;m not really sure how it could be made intuitive given the &quot;normal&quot; case. I&#x27;m just expressing that subjectively, this feels very weird and non-obvious, and it&#x27;s far from the first example like this that I&#x27;ve encountered. Here&#x27;s another example: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25595120" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25595120</a>')