Item(by='reitzensteinm', descendants=None, kids=[25594140], score=None, time=1609413729, title=None, item_type='comment', url=None, parent=25591599, text='Hmm, I haven&#x27;t come across any, although you can probably dive in and build a prototype system without too much trouble.<p>My recommendation would probably be to build it without netcode to start (two local clients connected over a virtual pipe), and using a system where you can easily serialize the game state - C with memcpy(), JavaScript reading&#x2F;writing to json, Clojure or similar. I use C# with compile time generated codes to store data in slots - it&#x27;s not fun.<p>While not rollback, the original AOE networking writeup is probably the best I&#x27;ve come across as an introduction to deterministic multiplayer. There&#x27;s the GGPO framework that you can get off the shelf, but it&#x27;s pretty heavy weight.<p>There are some real head scratching moments with debugging rollback, but in general for games that aren&#x27;t too performance intensive it shines. I actually developed an entire strategy game prototype over a period of three weeks in single player before bothering to test it worked in multiplayer. It did first try. Four days later, it was live in public beta (starjack.io if you&#x27;re interested, which peaked at around 400 concurrent players).<p><a href="https:&#x2F;&#x2F;www.gamasutra.com&#x2F;view&#x2F;feature&#x2F;131503&#x2F;1500_archers_on_a_288_network_.php" rel="nofollow">https:&#x2F;&#x2F;www.gamasutra.com&#x2F;view&#x2F;feature&#x2F;131503&#x2F;1500_archers_o...</a>\n<a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;GGPO" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;GGPO</a>')