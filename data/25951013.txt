Item(by='megameter', descendants=None, kids=None, score=None, time=1611876487, title=None, item_type='comment', url=None, parent=25947901, text='One of the things that was not at all clear in the late 70&#x27;s was the direction of things towards device convergence plus consumer internet. There were plenty of commercial visions of dedicated-task machines that were quite a lot more limited than anything envisioned at PARC. Those machines did find some markets, in some cases even into the 90&#x27;s, but bit by bit, they got knocked out by commodity computing into a relatively small number of form factors, with machines sufficiently open that most computing and I&#x2F;O ideas are realizable, albeit with specific parts that are proprietary.<p>What hasn&#x27;t been addressed, and I think this is really underlying the sentiment that innovation hasn&#x27;t happened, is that we&#x27;re still not really much better at concepts of software literacy. It&#x27;s still a professionalized realm in spirit, if not in practice, and the software world has a far greater ability to reinvent wheels and avoid standardization. What we have instead are hundreds, maybe thousands of niches where there are professional developers who are using these commodity tools in surprisingly different ways from each other. That kind of experimental data and deep domain knowledge just wasn&#x27;t around - there were no &quot;VR developers&quot; or &quot;software engineers in test&quot; in 1978 - and I see it increasingly informing newer generations of development tools and practices in a craft-tradition sense.')