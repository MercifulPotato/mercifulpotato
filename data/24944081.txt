Item(by='md5person', descendants=None, kids=[24946030, 24949673], score=None, time=1604076189, title=None, item_type='comment', url=None, parent=24943866, text='Your explanation doesn&#x27;t make sense to me.<p>&gt; &quot;you commit the result if no other thread has stomped on your data&quot;<p>What does &quot;committing&quot; mean here? If it means performing an atomic write (a-la CAS), then you&#x27;re using a lock (see my next point).<p>&gt; &quot;If another thread has stomped on your data, you start over.&quot;<p>So you let your thread sit there in a spin-loop and CAS a condition-variable. That&#x27;s a lock for all intents and purposes, and your system can still &quot;dead-lock&quot; (read: your thread will never get to &quot;win the race&quot;), if your &quot;data gets stomped on&quot; over and over again in-between reads (which are obviously non-atomic, otherwise you&#x27;d be locking there too).<p>&gt; &quot;Usually, there is some sort of guarantee that lock-free systems always make progress.&quot;<p>Getting a time-slice to continue running in a tight-loop while trying to CAS is not the same as &quot;making progress&quot;.<p>&quot;Making progress&quot; would be - you&#x27;d get a chance to commit your changes and proceed to your next bit of business logic. But with contention, that&#x27;s not guaranteed to happen at-all?')