Item(by='mekoka', descendants=None, kids=[25075745], score=None, time=1605215750, title=None, item_type='comment', url=None, parent=25074174, text='I didn&#x27;t get the feeling that the author disagreed that programming has a crafty nature. But since building software also has some engineering aspects, he is pointing out that you (as an organization or project leader) could wait for the graduates that you hire fresh out of uni to mature into accomplished &quot;craftsmen&quot;, or you could just observe what has already worked for others, <i>based on evidence</i> and mindlessly apply those patterns. The mileage may vary on your returns from the latter approach, but it will likely be cheaper and will remove some uncertainty from your projections.<p>Speaking as someone who has observed the kind of massive technical debt you can incur from letting your programmers mature one mistake at a time and ten reinvented wheels later, I would certainly not be too quick to dismiss the proposal.<p>&gt; &quot;The labour of the cognitariate is the means of production of software systems&quot;<p>I fail to understand why you would disagree here. That sentence to me means that producing software systems requires brain work. Whether thinking, designing, coding, testing, debugging, reviewing, it&#x27;s all part of the &quot;labour of the cognitariate&quot;. Compiling isn&#x27;t.')