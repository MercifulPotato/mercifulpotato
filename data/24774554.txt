Item(by='est31', descendants=None, kids=[24774931], score=None, time=1602665527, title=None, item_type='comment', url=None, parent=24774430, text='You generate the game map once it&#x27;s known where the player clicked. During generation you take into account that the first clicked cell has to be mine-free. In general, when distributing mines, the algorithm has to take into account already that there must be N mines in the field, so avoid instances where it assigns two mines to the same field twice. You treat the starting field as just another &quot;mine&quot; whose position is hardcoded.<p>A simple algorithm would be to re-do the map generation until there is no mine collision, but with larger numbers of mines, the collision chance increases, so your runtime will go up superlinearly. A simple but very effective improvement is to keep the positions of the mines up until the collision and then only change the seed for subsequent mines. Then your algorithm should in fact scale much better. You can also use different methods, like assigning indices in a certain way so that invalid states are avoided completely. A bit more complicated but way &quot;cleaner&quot;.')