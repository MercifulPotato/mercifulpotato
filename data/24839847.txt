Item(by='estebank', descendants=None, kids=None, score=None, time=1603213700, title=None, item_type='comment', url=None, parent=24838432, text='I think that what is lost in the conversation when this topic comes up is that the current macro alternatives, macros by example and procedural macros, are stop-gap features: the first is what was available in 1.0 that got stabilized with the <i>explicit intent</i> to deprecate in eventually (its replacement is an ongoing effort[1]) and the later is a minimal stabilization of compiler internals that had proven to be useful both internally and in nightly crates, where an API surface that we didn&#x27;t mind maintaining into the future was stabilized.<p>The entire macro space in Rust (just like async&#x2F;await) is in MVP status: they are available and useful already, but their current feature set and approachability isn&#x27;t the end-state.<p>I know some will read that and think to themselves &quot;Great! More changes to the language! See, they can&#x27;t help themselves.&quot;, but these changes are about <i>removing</i> restrictions and tapering edges.<p>[1]: <a href="https:&#x2F;&#x2F;rust-lang.github.io&#x2F;rfcs&#x2F;1584-macros.html" rel="nofollow">https:&#x2F;&#x2F;rust-lang.github.io&#x2F;rfcs&#x2F;1584-macros.html</a>')