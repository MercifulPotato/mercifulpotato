Item(by='valenterry', descendants=None, kids=[25342372], score=None, time=1607406459, title=None, item_type='comment', url=None, parent=25342044, text='I was actually not referring to specifically option types but generally sum types. E.g. inside a function I have a result of (union) type &quot;Integer | ErrorA&quot; in one branch and &quot;Integer | ErrorB&quot; in another branch. ErrorA and ErrorB are completely unrelated types (coming from thirdparty libraries, can&#x27;t change them).<p>With union types I don&#x27;t have to do anything and the return type for my function will be inferred as &quot;Integer | ErrorA | ErrorB&quot;. Or if you prefer to work with a result type &#x2F; either type, then it will become &quot;Either Integer (ErrorA | ErrorB)&quot;. In most languages I&#x27;d have to make it &quot;Either Integer (Either ErrorA ErrorB)&quot; and also change the function code by lifting accordingly. That&#x27;s verbose and many times I don&#x27;t want to do that.')