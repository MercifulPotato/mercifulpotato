Item(by='pippy', descendants=None, kids=[24775250, 24775194, 24772228, 24773110, 24772273, 24772193, 24772214], score=None, time=1602635965, title=None, item_type='comment', url=None, parent=24771623, text='I did something similar to this. I wanted &quot;Lazy loaded&quot; SVG images. Generating an average color over an area would render horrific results - an area with equal red green and blue would be gray for example.<p>My solution was to convert a target pixel area into a histogram in HSL color space, select the most populated color area and take an average of that populated area. You could then do smart things like render edges along where the change reached a threshold so you got clean edges. Once you blurred the SVG it was a fraction the size of a down scaled raster image (using imagemagick).<p>There&#x27;s all kinds of very interesting pitfalls when dealing with color. RGB is great for transmitting data but horrible when applying operations. For example, your eye converts RGB in a way so that yellow essentially becomes a primary. Another is the eye perceives photons in a logarithmic fashion adding two colors and halving them doesn&#x27;t make an average. This article has some great info in it: <a href="https:&#x2F;&#x2F;blog.asmartbear.com&#x2F;color-wheels.html" rel="nofollow">https:&#x2F;&#x2F;blog.asmartbear.com&#x2F;color-wheels.html</a>')