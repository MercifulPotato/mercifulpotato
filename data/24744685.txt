Item(by='jondubois', descendants=None, kids=None, score=None, time=1602408914, title=None, item_type='comment', url=None, parent=24736849, text='The most important characteristics are:<p>- Components have clear separation of concerns and well encapsulated state. (Should be easy to explain what a component does to a non-technical person).<p>- Names of components are clear and rooted in the business domain; not made up abstract technical concepts. This relates to the first point.<p>- Simple interfaces between components (components interact with each other through a simple, plain language; avoid passing complex instances to each other). Simple function arguments like strings, numbers and other simple pass-by-value structures are ideal. Components should be able to invoke actions on other components but the responsibility of how this is achieved lies entirely with the component who is responsible for that concern; this is also why state encapsulation is important.<p>- Clear unidirectional data flows throughout the system. State changes for a particular kind of state should originate from a single place in the code.<p>If you notice, all of these characteristics work together and build on top of each other. It&#x27;s all or nothing. You either get all of these right or none of these right.')