Item(by='WorldMaker', descendants=None, kids=[24689457], score=None, time=1601914521, title=None, item_type='comment', url=None, parent=24687161, text='&gt; I desperately wish git had a &quot;group commits&quot; feature that let me manage a cluster of related commits as a single commit for the purposes of history-viewing, reverting, and cherry-picking.<p>Merge commits work fine for most of that, you just have to adapt to merge UX&#x2F;commands:<p>--first-parent (to git log, git annotate, etc) gives you clean history viewing of just your &quot;groups&quot; (your merge commits).<p>--first-parent even works for bisect allowing you start by figuring out which merge commit brought in a change (and then dig into the merge branch itself if needed as a second bisect).<p>You can revert or cherry pick merges if you provide the -m (mainline) flag to tell it which parent to consider the mainline (usually the first parent, but not always depending on your intended revert&#x2F;cherry-pick; it complicates what you need to know about the revert&#x2F;cherry-pick, but if you are in the process of revert&#x2F;cherry-picking you should already be figuring out what your mainline is and expecting some possible complications).<p>I think sometimes the only &quot;problem&quot; with Merge commits is too few pretty UX tools default to a --first-parent view of the git graph and don&#x27;t themselves provide good tool for picking that -m (mainline) for revert&#x2F;cherry-pick.')