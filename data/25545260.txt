Item(by='lostcolony', descendants=None, kids=[25546083], score=None, time=1609006865, title=None, item_type='comment', url=None, parent=25541818, text='Well, as strong a type system as Haskell likely prevents enough bugs in the code to let you feel safe without unit tests. That&#x27;s what I&#x27;m talking about; that -feeling- of safety.<p>Do any of these languages help prevent you from writing code that simply does the wrong thing? No. You multiplied instead of adding; no static type checker is going to catch that, because you semantically told the computer to do the wrong thing.<p>That&#x27;s why I wrote extensive tests; I needed to make sure the code did the right thing, reliably. It&#x27;s also why we chose Erlang; supervisor trees and immutability meant that as long as we tested and felt good about the happy path, the unhappy paths would generally take care of themselves.<p>As an aside, in Haskell, you actively have to make tradeoffs around laziness, too. Both these data types are Integer -&gt; I either have to create a custom data type to distinguish them (increasing level of effort as a dev), or I risk getting them in the wrong order if they&#x27;re both passed into the same function. Named parameters might be a better solution here, and that can be done regardless of typing.')