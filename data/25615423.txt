Item(by='nobleach', descendants=None, kids=None, score=None, time=1609614510, title=None, item_type='comment', url=None, parent=25614439, text='What I mean is, if one does:<p><pre><code>  const obj1 = { a: 32, b: 42 };\n  function foo(ref) { ref.a = 0; }\n\n  foo(obj1);\n  console.log(obj1);\n</code></pre>\nin JavaScript, one is just using the variable name as a &quot;holder&quot; of some value. One doesn&#x27;t have to designate that that variable is being passed by reference. If one wanted to actually copy that object, they&#x27;d have to devise a mechanism to do so. In Rust, if someone doesn&#x27;t specify, using the &amp; symbol, that something is a reference, it&#x27;ll end up moving the value.<p>Basically all I was saying is one can not approach writing Rust with a Java&#x2F;JavaScript mindset. (That a variable is just a bucket holding a value). Care needs to be taken when referencing a variable as it may need to be moved, copied&#x2F;cloned or referenced. In the case of copying, another memory allocation is done. So if someone approaches Rust from the standpoint of &quot;this word represents a value, and I&#x27;m going to use it all over the place&quot;, they can find themselves blindly allocating memory.')