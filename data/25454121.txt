Item(by='sirn', descendants=None, kids=[25459234], score=None, time=1608198774, title=None, item_type='comment', url=None, parent=25451073, text='<p><pre><code>       (5) Docker Image      (amd64)\n                ^\n                |\n       (4) QEMU Binfmt       (arm64 &lt;-&gt; amd64 binary emulation layer)\n                ^\n                |\n        (3) Linux VM         (arm64)\n                ^\n                |\n   (2) Hypervisor.framework  (arm64, macOS native virtualization framework)\n                ^\n                |\n      (1) Docker for Mac\n</code></pre>\nLinux Kernel has a feature to allow using a wrapper to execute userspace program based on file header (binfmt[1]). In this case, Linux VM in (3) has QEMU user mode emulation registered as binfmt, so any amd64 binaries are automatically wrapped into `qemu-x86_64-static &#x2F;path&#x2F;to&#x2F;bin` and run. Docker Image itself doesn&#x27;t run a Linux kernel but use one from the VM host, so this scenario is possible.<p>This is also how multiarch[2] works (for amd64 to arm64&#x2F;ppc64le&#x2F;etc.) which might even be what Docker is using. In case of multiarch, the qemu-*-static binary is provided as a container running in privileged mode.<p>[1]: <a href="https:&#x2F;&#x2F;www.kernel.org&#x2F;doc&#x2F;html&#x2F;latest&#x2F;admin-guide&#x2F;binfmt-misc.html" rel="nofollow">https:&#x2F;&#x2F;www.kernel.org&#x2F;doc&#x2F;html&#x2F;latest&#x2F;admin-guide&#x2F;binfmt-mi...</a><p>[2]: <a href="https:&#x2F;&#x2F;github.com&#x2F;multiarch&#x2F;qemu-user-static" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;multiarch&#x2F;qemu-user-static</a>')