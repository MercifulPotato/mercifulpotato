Item(by='SiVal', descendants=None, kids=[25371539], score=None, time=1607562693, title=None, item_type='comment', url=None, parent=25367648, text='No, you&#x27;re making a good point, but my meaning was that TypeScript is a language that is always (and has always been) written as an improved, benefit-of-hindsight, good-parts-only language. It does of course allow any old JS to be used, but that has always been for the purpose of allowing code already written in JavaScript to be called from code written in TypeScript. No TypeScript project, library, or tutorial is ever written like old JS, so TS&#x27;s allowance of old code that was already written as JS is like a C compiler&#x27;s escape to assembly, where inline assembly is valid code handled by the C compiler but isn&#x27;t really C.<p>Traditional JS with new features added, or traditional Node with new features added is the opposite case, where the old standard is being extended, unlike the TS or C+asm case, where the new standard has a mechanism for calling back to the old if necessary. (Deno could still be what I&#x27;m talking about even if they added a Node-emulation-library to allow it to call modules written for Node, but I have no idea whether such a thing is planned.)')