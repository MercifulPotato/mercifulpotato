Item(by='scottlamb', descendants=None, kids=None, score=None, time=1606050030, title=None, item_type='comment', url=None, parent=25176789, text='Their Allocator library is really an arena, a special-purpose allocator that was discussed on HN recently. [1] I think it&#x27;s fair to say that when not using GC, it&#x27;s worth looking for a suitable scope for arenas: short-lived, bounded but significant number of allocations. In many servers, an arena per request is appropriate. You can totally beat directly using the global allocator by layering arenas on top, whether the global allocator is jemalloc or anything else. Batching the frees makes a huge difference, both because there are fewer calls to free and because you have to do less pointer-chasing (with potential cache misses) to decide what calls to make to free.<p>Maybe the arenas reduce the allocations enough (and makes them of reasonably uniform size) such that a simple buddy or slab allocator underneath would beat jemalloc. These simple allocators would have an &quot;unfair&quot; advantage of not having to go through Cgo.<p>Or maybe just each Allocator (arena) using the Go allocator for its backing allocations would be okay. It&#x27;d still be garbage-collected which they&#x27;ve been trying to avoid, but the allocator would no longer looking through each individual allocation, so maybe it&#x27;d zippier about freeing stuff.<p>Note that (as in my other comment) I still think Rust is a better language for this program. In fairness to them, there are plenty of practical reasons they might have ended up here:<p>* Rust may not have existed or been a reasonable choice when they started coding. In my experience, porting to Rust really is fairly labor-intensive.<p>* There may be significant other parts of the program where Go&#x2F;GC is more appropriate.<p>* Maybe the whole rest of their company&#x27;s codebase is in Go and they want to use that expertise.<p>[1] <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24762840" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24762840</a>')