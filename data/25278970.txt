Item(by='steveklabnik', descendants=None, kids=[25279988], score=None, time=1606931029, title=None, item_type='comment', url=None, parent=25278560, text='The Rust code would be, roughly (I tried to keep names similar even though Rust would use a slightly different naming scheme)<p><pre><code>  let someoneElsesObject = mu.lock();\n  println!(&quot;{}&quot;, someoneElsesObject);\n  return;\n</code></pre>\nwhen someoneElsesObject goes out of scope, the mutex is unlocked. This happens no matter how it goes out of scope. You cannot forget to do it, because the only way to get access to someoneElsesObject in the first place is locking the mutex, because mutexes wrap the data that they are protecting.<p><a href="https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;defer" rel="nofollow">https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;defer</a> exists, but it would be weird to try and use it here, because it can&#x27;t really be combined directly with this. I guess in theory you could put drop(someoneElsesObject) in the defer block, but like... that already happens for free.')