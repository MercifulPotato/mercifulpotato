Item(by='simias', descendants=None, kids=[25290868], score=None, time=1607011074, title=None, item_type='comment', url=None, parent=25289541, text='Functions can be opaque of course, but macros are worse because anything goes. I think the standard loop macro is a good example of this:<p><pre><code>  (loop repeat 10\n      for x = (random 100)\n      if (evenp x)\n        collect x into evens\n      else\n        collect x into odds\n      finally (return (values evens odds)))\n</code></pre>\nThis macro is actually fairly well designed, so you can guess what all of this does just by interpreting the names (assuming that you understand English well at least) but it&#x27;s barely Lisp. Just figuring out what parts of this call are keywords and what part are just normal symbols is hard to figure out.<p>(return ...) looks like a function call, but I don&#x27;t think it is(?). Is collect a loop-ism or can I replace it by any function name? I think it&#x27;s the former. Is &quot;into&quot; just here to make grammatical sense or are there other keywords I can use here? If `evens` and `odds` already exist as variable names outside of the loop, will they be used or is it a new local binding? If it is a local binding, how do I tell it to use some existing variable name instead?<p>Basically it&#x27;s like printf format strings, it&#x27;s a language within a language, and idiomatic Common Lisp is often full of that stuff in my experience.')