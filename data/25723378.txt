Item(by='crvdgc', descendants=None, kids=None, score=None, time=1610330820, title=None, item_type='comment', url=None, parent=25720449, text='I had the same experience as well. I tried NixOS once as my main desktop environment. I encountered two problems that made me switch to Ubuntu+Nix. And they work perfectly for their own purposes.<p>One problem is dynamically linked binaries, where the library points to a global position (like &#x2F;usr&#x2F;lib). In NixOS, different builds can depend on different versions of the same binary, so there is no single global location. This is not necessarily a bad thing in itself. And normal cases can be fixed with the patchelf [^1] utility. I couldn&#x27;t make it work with a Z3 binary, so I finally gave up.<p>The other problem is when I tried to configure jackdbus. There&#x27;s only one example [^2] configuration. It is marked as outdated by the wiki, and indeed none of the settings work for me.<p>Then I realized these two are not problems that Nix tries to solve. Pointing to a global binary is okay for some quick fixes. And JACK module is better to work out-of-the-box, I don&#x27;t want to dive into all of the configurations before I haven&#x27;t even used it.<p>Now I use Ubuntu for casual desktop applications and write Nix derivations for projects that need reproducibility. And I think I find my perfect balance.<p>[^1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;NixOS&#x2F;patchelf" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;NixOS&#x2F;patchelf</a>\n[^2]: <a href="https:&#x2F;&#x2F;nixos.wiki&#x2F;wiki&#x2F;JACK" rel="nofollow">https:&#x2F;&#x2F;nixos.wiki&#x2F;wiki&#x2F;JACK</a>')