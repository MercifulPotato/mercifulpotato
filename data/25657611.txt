Item(by='wwright', descendants=None, kids=None, score=None, time=1609940569, title=None, item_type='comment', url=None, parent=25656885, text='In defense, I would argue that many modern language design advancements DO relate to multithreading in some way. Rust’s borrow checker and linear&#x2F;affine types can help with thread safety; OCaml is using algebraic effects to implement multi core behavior; GPU-related experiments (such as Formality [1]) are all about enabling more scalable and reliable parallelism.<p>That said, I don’t think that multithreading is the only interesting or worthwhile part of programming language theory these days. However, I think it is extremely fertile for innovation while also being somewhat isomorphic with other interesting correctness&#x2F;performance&#x2F;ergonomics problems.<p>[1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;moonad&#x2F;Formality" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;moonad&#x2F;Formality</a>')