Item(by='dolni', descendants=None, kids=[25354780, 25354549], score=None, time=1607475149, title=None, item_type='comment', url=None, parent=25352982, text='Run EC2 instances in an autoscaling group. Provision them with whatever you&#x27;re comfortable with. Ansible is nice because you can point it at a node to test the deploy out without having to always respin the node to try again.<p>Have ansible fire up a docker container on your host.<p>That&#x27;s it, done. You don&#x27;t need Kubernetes.<p>Using EC2 segregates everything nicely out of the box. You don&#x27;t need to be concerned about resource contention or figuring out how to size instances&#x2F;pods. A container going nuts and filling up your disk won&#x27;t cause a bunch of other services to experience errors.<p>While convenient for deploys, the biggest issue with Kubernetes is that you introduce an entire new layer of technology that you need expertise in.<p>If you&#x27;re running your own EC2 instances anyway (which seems likely, since spot pricing is amazing compared to managed stuff) you now have to know how autoscaling works, plus a VPC, plus Kubernetes. The way Kubernetes interacts with cloud providers (at least AWS) adds a ton of complexity.<p>Also, if you have a decent build process for AMIs you can insulate yourself from container registry outages by baking the images into an AMI. There&#x27;s something really powerful about this approach. If you build an AMI properly, that thing will run _forever_ with a minimal set of external service dependencies.')