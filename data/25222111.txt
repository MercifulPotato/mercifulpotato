Item(by='Zancarius', descendants=None, kids=[25223408], score=None, time=1606413044, title=None, item_type='comment', url=None, parent=25221030, text='&gt; Terrible, terrible, behaviour but there are lots of similar examples in PHP<p>So true.<p>One I ran into recently was comparing hashes that start with &#x27;0e&#x27; and contain only a numeric component after that prefix. Failure to use the identity operator means that you can have two different hashes returning... equality. PHP apparently thought it a good idea to coerce that into 0 raised to an exponent, which of course always yields zero. e.g.:<p><pre><code>    php &gt; var_dump(&#x27;0e41235843934&#x27; == &#x27;0e61193475532&#x27;);\n    bool(true)\n</code></pre>\nYeah, I know: The correct (and only) way to write this is to use the identity operator (===) but it&#x27;s not at all intuitive. For those of us who are used to this it&#x27;s fine since it&#x27;s a force of habit, but for those who aren&#x27;t it&#x27;ll lead to unexpected behaviors. The only saving grace is that the quality of PHP code out there has been slowly (slowly!) improving over time, thanks in part to composer and ecosystem&#x2F;cultural changes.<p>But it&#x27;s also not outside the realm of possibility that someone won&#x27;t eventually forget to add an extra &#x27;=&#x27; and induce a very difficult bug to isolate...')