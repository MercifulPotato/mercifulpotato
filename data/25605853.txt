Item(by='baryphonic', descendants=None, kids=None, score=None, time=1609528663, title=None, item_type='comment', url=None, parent=25605199, text='&gt; It would take a paltry amount of money, in the low millions of dollars, to design real (general purpose) multicore processors that deliver orders of magnitude better performance than what we have today. But unfortunately lawmakers are for the most part technologically illiterate, and technologists are unduly skeptical of any type of programming outside the mainstream.\n&gt;\n&gt; So my dream of a sub-$1000, 1000+ core CPU with a modest amount of RAM per core (between 1 MB and 1 GB) that can be programmed with existing tools like Erlang&#x2F;Go&#x2F;MATLAB&#x2F;Julia and even Docker is just never gonna happen. And without that, there is no viable road to really experiment with stuff like AI, physics simulations etc without renting time in the cloud. We have the impression that progress is being made on these endeavors today, but things look a little different to me, watching them play out at a glacial pace, at mind boggling expense, over 3-4 decades. I mourn what might have been.<p>I&#x27;m really curious what specifically you mean by this. I see similar issues on the software side (my degree is in CS). Software is incredibly bloated and horrible at interoperability. Unix had pipes back in the early 70s, and somehow with GUIs and then mobile &quot;apps,&quot; we&#x27;ve regressed. Identity-based security has failed time and again. And only rarely has software design progressed meaningfully beyond structured programming from the late 70s (not to mention the languages). Moore&#x27;s law has given software developers around over 100M x improvement over the past 40 years, yet ordinary people would scarcely notice.<p>TL;DR: I see a lot of the same flaws in software, dominated by fads and popularity only of what is mainstream.<p>I&#x27;d really like to hear a dissident point of view from the hardware side.')