Item(by='pmeunier', descendants=None, kids=[25496705], score=None, time=1608566715, title=None, item_type='comment', url=None, parent=25495948, text='It is actually defined as &quot;you get the same file contents and directory structure, regardless of the order in which you apply the changes&quot;, which is quite good.<p>&gt; But, this seems to require semantic level understanding of the code<p>No: you may very well have two different orders yielding the same output, even though the output is incorrect.<p>&gt; This method seems to rely inherently on the fact that git commits are ordered. How would this work with a pijul-based flow?<p>Good question. Our CI over at <a href="https:&#x2F;&#x2F;nest.pijul.com&#x2F;pijul&#x2F;pijul&#x2F;ci" rel="nofollow">https:&#x2F;&#x2F;nest.pijul.com&#x2F;pijul&#x2F;pijul&#x2F;ci</a> works in the same way. Patches are ordered in Pijul too, but the order is local. In your example, if Alice wins, Bob will pull her patch, fix his code, which will produce another patch. He will then send it to CI again (or directly to main if he&#x27;s careless), and Alice will pull both Bob&#x27;s original patch and the fix.<p>In the end, they will have different histories, but the exact same contents.')