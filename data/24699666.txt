Item(by='pratik661', descendants=None, kids=None, score=None, time=1602002224, title=None, item_type='comment', url=None, parent=24697965, text='A mental model I use all the time when programming is &quot;Chesterton&#x27;s Fence&quot; (When removing a fence,  you must know why the fence was placed there in the first place).<p>When making changes to an existing system (whether its adding new functionality, extending existing functionality, or refactoring the code while maintaining existing functionality), try to understand the intent behind the current structure of the code and why certain design choices were made.<p>Once you understand that, you can add new features&#x2F;extend existing features using the same design OR refactor the code with a new design without impacting existing functionality (assuming you don&#x27;t have universal test coverage... which frankly will be the case a lot of the time).<p>Another tactic I use is verbalizing my design choices before&#x2F;during the implementation of a feature&#x2F;product. When programming, a lot of developers create a mental structure&#x2F;map of the code base and what changes they are implementing. They know the changes they are making in their mind and know how to execute them. However, if they were to explain what they were doing to another developer (for collaboration, handoff, etc) or to business&#x2F;product (ie. in order to explain estimations), they freeze up. Verbalizing your design choice will strengthen your technical communication skills.<p>Those 2 things aren&#x27;t necessarily skills, but they are tactics that can be used to be a better programmer.')