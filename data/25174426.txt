Item(by='jlokier', descendants=None, kids=[25187818], score=None, time=1606012436, title=None, item_type='comment', url=None, parent=25174237, text='It does say that for Linux now, but it didn&#x27;t used to, and it doesn&#x27;t on other OSes.<p>FreeBSD says the <i>opposite</i> at <a href="https:&#x2F;&#x2F;www.freebsd.org&#x2F;cgi&#x2F;man.cgi?query=fdatasync&amp;sektion=2" rel="nofollow">https:&#x2F;&#x2F;www.freebsd.org&#x2F;cgi&#x2F;man.cgi?query=fdatasync&amp;sektion=...</a>:<p><pre><code>  The fdatasync() system call causes all modified data of fd to be moved to\n  a permanent storage device.  Unlike fsync(), the system call does not\n  guarantee that file attributes or metadata necessary to access the file\n  are committed to the permanent storage.\n</code></pre>\nI.e. &quot;does not guarantee that ... metadata necessary to access the file are committed&quot;.<p>Thus &quot;given SQLite is written to be so portable and cautious and has been around a long time&quot; I&#x27;m surprised.<p>I&#x27;m not sure if we should believe the FreeBSD documentation, as current OpenBSD, NetBSD and Solaris have statements that work out similar to current Linux.  However, if the documentation is to be believed, SQLite&#x27;s durability using fdatasync() is broken on FreeBSD after a file append.<p>My point really is that if I recall correctly, what FreeBSD&#x27;s man page says isn&#x27;t an accident, it&#x27;s indicative of what used to be the understood guarantee provided by most if not all implementations.  Actual guarantees were not exactly specified, and I think there may have been a vague transition in the meaning of fdatasync() from &quot;commits the data blocks&quot; to &quot;commits data blocks and the metadata necessary to access them&quot; over time because the latter is obviously much more useful.<p>But that transition over time is why it seems a risk to assume it in highly portable software.<p>That said, back in the 2.6 days Linux even fsync() wasn&#x27;t durable on consumer HDDs, it was on SCSI HDDs though.  Then for a while O_DSYNC (which is like fdatasync() after every write) was unreliable for data retrieval (see the Persona link in GP post) but O_SYNC worked (which is like fsync() after every write).')