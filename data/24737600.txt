Item(by='prostodata', descendants=None, kids=None, score=None, time=1602320124, title=None, item_type='comment', url=None, parent=24734169, text='It should be noted that the expression like<p><pre><code>    comp = salary &#x2F; (age - 18)\n</code></pre>\nis (strictly speaking) not part of the relational algebra because it is not using set operations (like join or union). It was added to the relational model because we hardly can process data without such expressions.<p>A better way to formally describe such calculated columns is to introduce <i>functions</i> and treat them as first class elements of the data model. In particular, function operations are better than set operations in these cases [1]:<p>- Calculating data using calculated columns. We describe a calculated column as a function without generating new relations (as opposed to select-from)<p>- Aggregating data. We can add an aggregate column without generating new relations (as opposed to groupby)<p>- Linking data. We can add derived link columns without generating new relations (as opposed to join)<p>This function-based approach to data modeling and data processing was implemented in Prosto [2] which demonstrates how many typical relational tasks can be solved using functions.<p>[1] Why functions and column-orientation? <a href="https:&#x2F;&#x2F;prosto.readthedocs.io&#x2F;en&#x2F;latest&#x2F;text&#x2F;why.html" rel="nofollow">https:&#x2F;&#x2F;prosto.readthedocs.io&#x2F;en&#x2F;latest&#x2F;text&#x2F;why.html</a><p>[2] Functions matter! No join-groupby, No map-reduce. <a href="https:&#x2F;&#x2F;github.com&#x2F;prostodata&#x2F;prosto" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;prostodata&#x2F;prosto</a>')