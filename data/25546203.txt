Item(by='GeorgeTirebiter', descendants=None, kids=[25546573, 25551415], score=None, time=1609014363, title=None, item_type='comment', url=None, parent=25545841, text='Do, please, look at The RISC-V Reader: An Open Architecture Atlas (book).  There, ARM and x86 are directly compared with RISC-V.  It would appear calling ARM &#x27;well-designed&#x27; is an error.  Calling it &#x27;market success&#x27; is accurate.<p>I&#x27;ve been on the RV bandwagon for five years now, and yet...as is usual in the corners of any non-trivial subsystem (arch; compiler; web environment; you name it), sticky unpleasant (even ugly) details emerge.  For example, in RISC-V, the bits are &#x27;jumbled up&#x27; when encoding constants; the argument is it, ultimately, makes the processing faster (due to the way sign-extension works).  And, yes, this sort of detail is swept away into a debugger or other tools, so practically, no big deal.  And yet... classic archs like pdp-11 don&#x27;t have this problem. (it has other performance problems).<p>And recently, RV supports big endian.  Why? I don&#x27;t know.  What is happening is what happens when you get too many cooks: exploding complexity for minimal system gain.<p>I&#x27;m afraid that RISC-V&#x27;s time has come and gone.  It is a 20th century instruction set attempting to serve us well into the 21st century.<p>In my opinion, I think it&#x27;s time for a do-over.  RISC-VI anyone?')