Item(by='davidkell', descendants=None, kids=None, score=None, time=1604793756, title=None, item_type='comment', url=None, parent=25018985, text='I’m not familiar with those solutions in particular.<p>For type safety, many backend frameworks generate OpenAPI specs automatically, and you can generate Typescript stubs based on this. Ditto for gRPC and gRPC web. We use these.<p>But I’ve not seen a replacement for the “application data graph” (but would be interested to learn about them!). The link from @jefflombardjr [0] explains it nicely - it is a great abstraction (in certain situations). Modelling your application data graph is like modelling a good database schema - when you get it right, the rest of the application follows naturally. It’s magical when it works, and I’d happily do it even if it’s just me working on the project.<p>And GraphQL has a great ecosystem, that is the advantage over niche tools. Example - last week we added auto-generated GraphQL types and relationships for Postgres JSON fields, with the help of [1]. No more malformed JSON breaking our app.<p>Note this is all in the context of a web app. Reading other comments, the tooling seems to be less developed on other platforms. And again, without decent tooling (especially for the server) I wouldn’t touch it.<p>[0] <a href="https:&#x2F;&#x2F;medium.com&#x2F;@JeffLombardJr&#x2F;when-and-why-to-use-graphql-24f6bce4839d" rel="nofollow">https:&#x2F;&#x2F;medium.com&#x2F;@JeffLombardJr&#x2F;when-and-why-to-use-graphq...</a><p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;graphql-python&#x2F;graphene-pydantic" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;graphql-python&#x2F;graphene-pydantic</a>')