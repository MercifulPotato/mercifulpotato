Item(by='breck', descendants=None, kids=None, score=None, time=1611758430, title=None, item_type='comment', url=None, parent=25928425, text='Semantic triplets are great. I think the semantics are\nlargely the same.<p>My take with ontologies is building consensus is hard.<p>Tree Notation offers a solution to the problem of: what\nshould we agree on for the encoding? I make the assumption\nthat simpler is better, all else being equal. Then Tree\nNotation is the simplest, in terms of the thing with the\nfewest pieces(tokens).<p>I didn&#x27;t &quot;add&quot; anything to Tree Notation. I started with an\nexisting notation and stripped away each visible syntax\ntoken that wasn&#x27;t needed. It turns out, not a single one of\nthem is needed.<p>So now if we can get consensus around going with the\nsimplest thing, we have got a way to agree on an whether\nwe should use XML, JSON-LD, turtle, etc. The simplest thing\nworks (which would be Tree Notation, or a close\nrelative—someone can rebrand the notation but the idea is\nlargely the same). This does not suffer from the 927\nproblem, as remember, there are a few classes of things\nwhere we do have 1 new language that is mathematically\nsuperior and of a different kind than others (binary\nnotation, for example).<p>So after you have agreement on that encoding, versioning and\nforking and merging schemas is dead simple (just use Git—in\nTree Notation all changes are semantic and noise free).<p>So now we&#x27;ve solved what encoding to use for our ontologies,\nand we have a very fast and efficient way to collaborate on\nthem (it&#x27;s just plain text and git).<p>That brings us to a third advantage which is more\ntheoretical. Tree Notation maps words&#x2F;nodes to a 3-D\nrepresentation. This means that there would be an X-Y-Z\nisomorphism with an ontology and the real world. I don&#x27;t\nreally know where we go from there, but at least by this\npoint we&#x27;ve moved the semantic web idea a lot further and\ncan start looking at the next realm of possibilities.')