Item(by='phoe-krk', descendants=None, kids=[25414699], score=None, time=1607933430, title=None, item_type='comment', url=None, parent=25414534, text='<i>&gt; Unfortunately Javaâ€™s structure seduces the unwary programmer into excessive abstraction. Between demanding a class for everything and enforcing all types at compile time, it encourages you to lay down layer after layer of formalism in class and interface declarations.</i><p>To me, it&#x27;s not really about &quot;seduction&quot;, it&#x27;s about inviting the programmer to abstract away with tools that are heavily unfit for the job. If your only means of abstraction is a class, everything starts to look like a method call.<p>That&#x27;s why I enjoy Common Lisp&#x27;s ability to create macros on multiple stages of the language&#x27;s operation: reading code, compiling code, substituting function calls. These make it possible to introduce new syntax where necessary, which in turn makes the code shorter, and to write compile-time optimizations that do not get in the way of the main function bodies.')