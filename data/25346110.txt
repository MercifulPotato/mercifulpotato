Item(by='valenterry', descendants=None, kids=None, score=None, time=1607440048, title=None, item_type='comment', url=None, parent=25344866, text='&gt; Kubernetes allows you to do just that with about a dozen lines of a infrastructure-as-code script.<p>Apart from what was already mentioned - what if I exceed the number of machines in my cluster? What if I want XGB RAM and there is no such big machine in the cluster? I don&#x27;t even have to ask these questions if I use fargate because I don&#x27;t care about the underlying cluster at all.<p>&gt; Kubernetes does that out-of-the-box, and allows you to keep your entire deployment in a repository.<p>You&#x27;ve got it backwards. Kubernetes allows a configuration where you can access the containers. And now, if I have to deal with a system using Kubernetes, I don&#x27;t know if someone sometimes accesses the containers unless I look at the code and check that it is up to date &#x2F; successfully deployed.<p>&gt; With Kubernetes, health checks are 3 or 4 lines of code in a deployment definition.<p>Yeah and code in your running service and monitoring and alerting... and and and. Maybe for you these are small differences, but for me that is a huge maintenance burden.<p>&gt; Oh, and unlike Fargate, you can take your Kubernetes scripts and deploy your app on any service provider that offers Kubernetes.<p>That&#x27;s certainly an advantage. But it doesn&#x27;t make Kubernetes simpler. And that is what we are discussing')