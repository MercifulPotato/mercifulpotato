Item(by='sergeykish', descendants=None, kids=None, score=None, time=1601878649, title=None, item_type='comment', url=None, parent=24678775, text='Thank you.<p>I think we should draw on XML strength points. People read articles in browser, not plain text. &quot;Add to cart&quot; is just a POST request with id<p><pre><code>    curl -d id=foo\n</code></pre>\nyet we have forms and interactivity. Like in literate programming text and data live together, interactive  application like a Smalltalk image.<p>In XML we can separate data from presentation.<p><pre><code>    &lt;?xml-stylesheet type=&quot;text&#x2F;css&quot; href=&quot;foo.css&quot;?&gt;\n    &lt;?xml-stylesheet type=&quot;text&#x2F;xsl&quot; href=&quot;bar.xsl&quot;?&gt;\n    &lt;root&gt;...\n</code></pre>\nMachine receives data, human receives application with documentation, builder. That&#x27;s exactly what we have today except UI can be plugged to any stored document. To good to be true.<p>I think XML was killed by poor usability. Plain text XML, XHTML and XSLT authoring is not fun.<p>I am trying to uncover it from DOM perspective [1], so far I like it more than Markdown. XHTML and HTML is just a serialization format. HTML is not a good one [2], [3], [4]. XSLT may have nice GUI or compact syntax like RELAX NG.<p>[1] <a href="http:&#x2F;&#x2F;sergeykish.com&#x2F;live-pages" rel="nofollow">http:&#x2F;&#x2F;sergeykish.com&#x2F;live-pages</a><p>[2] <a href="http:&#x2F;&#x2F;sergeykish.com&#x2F;script-style-is-cdata-in-html" rel="nofollow">http:&#x2F;&#x2F;sergeykish.com&#x2F;script-style-is-cdata-in-html</a><p>[3] <a href="http:&#x2F;&#x2F;sergeykish.com&#x2F;pre-newline-ignored-in-html-test" rel="nofollow">http:&#x2F;&#x2F;sergeykish.com&#x2F;pre-newline-ignored-in-html-test</a><p>[4] <a href="http:&#x2F;&#x2F;sergeykish.com&#x2F;content-after-html-appended-to-body-in-html" rel="nofollow">http:&#x2F;&#x2F;sergeykish.com&#x2F;content-after-html-appended-to-body-in...</a>')