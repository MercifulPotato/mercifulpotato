Item(by='acoard', descendants=None, kids=None, score=None, time=1608139427, title=None, item_type='comment', url=None, parent=25444892, text='&quot;Curses&quot; is a library for writing, well, TUIs[0]. I get that&#x27;s a bit circular, so let me explain.<p>With a normal CLI program, you essentially just output to STDOUT line by line.  You type `git status`, and the git program basically does `print(status)`.  Then you&#x27;re back to your terminal and you type another command, git or otherwise.<p>A &quot;curses&quot; program renders fundamentally different.  It&#x27;s much more like how video games render.  Every time it renders, it&#x27;ll draw to the entire screen.  You&#x27;re not in an empty command line where you can type any command, rather you are &quot;in&quot; the application.  Take a look at this screenshot [1].  You can imagine how pressing up&#x2F;down keys might move which input is selected. If you want to get back to the normal terminal you have to quit the TUI application.<p>While not commonly thought of TUIs, generally vi&#x2F;emacs&#x2F;lynx&#x2F;etc would all technically qualify (tho people  might give you a strange look if you called them TUIs).  To be clear, these do <i>not</i> use curses.  They kind of predate curses and just wrote it manually.  Curses is not a requirement ffor a TUI, but is by far the most common library to use when writing TUIs now-a-days.<p>[0] <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Curses_(programming_library)" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Curses_(programming_library)</a><p>[1] <a href="https:&#x2F;&#x2F;i.stack.imgur.com&#x2F;oD7mJ.png" rel="nofollow">https:&#x2F;&#x2F;i.stack.imgur.com&#x2F;oD7mJ.png</a>')