Item(by='vlovich123', descendants=None, kids=None, score=None, time=1609359593, title=None, item_type='comment', url=None, parent=25585364, text='I am only aware of nanopb being used at Google in embedded scenarios. The primary reason for the project I worked on was that the first Pixel Buds didn&#x27;t have a C++ compiler (at least not a functional one - based on GCC 2 or 3 if I recall correctly &amp; an extremely crippled implementation). Pixel Buds 2 didn&#x27;t have that limitation (stock GCC 9) but nanopb was kept for the second Pixel Buds because the memory management was saner for an embedded RTOS environment (vs stock upstream that might use STL or otherwise try to allocate memory). I don&#x27;t think runtime bloat was really on our radar (it could have been the next critical path, but wasn&#x27;t on our radar at the time).<p>Nanopb itself needed some changes to the codegen for the first Pixel Buds (which I investigated &amp; fixed) due to architectural peculiarities of the CSR8675. It generated a lot of constants but the CSR8675 had limited space there &amp; was made worse because every 8 bits took up 1 16-bit word (e.g. the size of your string literal or any constant byte array is effectively doubled). So I changed the code gen to put those constants in the code section instead. Before this change resolved the issue more fully, random engineers who were unlucky enough to add a constant in some way were hitting limits internally with regularity (as the project was heading toward ship) &amp; working around it by removing characters from log messages (e.g. &quot;Some long message&quot; =&gt; &quot;Sme lng msg&quot;).<p>For what it&#x27;s worth I tried to contribute any meaningful improvements we made back to nanopb but this one didn&#x27;t make that cut as it was specific to a chip no one in the wider community would be using anyway (8675 is super old).<p>I don&#x27;t exclude the possibility of it using in more places, but I&#x27;d say the average Google engineer does not encounter nanopb in their daily development.')