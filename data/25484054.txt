Item(by='scarface74', descendants=None, kids=[25484239], score=None, time=1608441420, title=None, item_type='comment', url=None, parent=25482914, text='For context. My first exposure to the cloud was at my last company of 100 employees. We aggregated publicly available (ie no PII) health care provider  data from all 50 states and government agencies as well as various disease&#x2F;health dictionaries and we combined it with data sent to us from large health systems.<p>These are the services we used.<p>Infrastructure<p>- Route 53 (DNS)<p>- SQS&#x2F;SNS (messaging)<p>- Active Directory.<p>- Cognito (SAML&#x2F;SSO for our customers)<p>- Parameter Store&#x2F;DynamoDB (configuration)<p>- CloudWatch (logging, monitoring, alerts, scheduling)<p>- Step functions (orchestration)<p>- Kinesis (stream processing). We were just introducing this when I left. I’m not sure what they were using it for.<p><i>CI&#x2F;CD</i><p>We used GitHub for source control.<p>- CodePipeline (CI&#x2F;CD orchestration)<p>- CodeBuild (Serverless builds. It would spin up a Windows or Linux Docker container and basically run PowerShell or Bash commands)<p>- self hosted OctopusDeploy server.<p><i>Data Storage</i><p>- S3 (Object&#x2F;File storage)<p>- Redshift (OLAP database)<p>- Aurora&#x2F;MySqL (OLTP RDMS). When we had large indexing to do to ELasticSearch, Read Replicas would autoscale.<p>- ElasticSearch<p>- Redis<p><i>Data Processing</i><p>- Athena (Serverless Apache Presto processing against S3)<p>- Glue (Serverless PySpark environment)<p><i>Compute</i><p>- EC2 (Pet VMs and one autoscaling group of VMs to process data as it came in from clients. It ran a legacy Windows process)<p>- ECS&#x2F;Fargate (Serverless Docker cluster)<p>- Lambda (for processes where we needed to scale from 0 to $alot for backend processes)<p>- Workspaces (Windows VMs hosted in the US as Dev machines for our Indian Developers who didn’t want to deal with the latency.)<p>- Level 7 load balancers<p><i>Front end</i><p>- S3 (hosted static assets like html, JS, CSS. You can serve S3 content as a website.)<p>- CloudFront (CDN)<p>- WAF (Web Application Firewall)<p>All of the above infrastructure was duplicated for five  different environments (DEV, QAT, UAT, Stage, Prod).  In Prod, where needed, infrastructure was duplicated in multiple available zones (not regions).<p>Where applicable, backups were automated.<p>We had two full time operations people. The rest was maintained by developers. \n——- as far as the rest.<p>&gt; [Procuring resources] is no different than it is locally.<p>I can go from no infrastructure to everything I just named in a matter of hours locally? I can set up a multi availability zone Mysql database with automated backups just by running a yaml file locally and then turn it off when not needed?')