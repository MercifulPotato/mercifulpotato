Item(by='maweki', descendants=None, kids=[25808947], score=None, time=1610824873, title=None, item_type='comment', url=None, parent=25803288, text='What I always find a bit missing in such articles is what the n is. The author writes &quot;If you consider &quot;addition&quot; to be 1 operation&quot; and this seems kinda intuitive and is correct if we talk about normal machine integers.<p>But adding two arbitrary integers might be somewhat linear in bit-width. And there we have it: with a fixed bit-width, this becomes a constant term.<p>So you might not want to talk about number of input terms as n, but also width of your terms (and python integers are arbitrary precision btw.).<p>So yeah, this is an upper bound on how many &quot;steps&quot; you do for every input, but often enough it&#x27;s not really clear what a step is, especially if you have several &quot;steps&quot; that relate do different forms of data retrieval and organization (which often are culprits for bad performance if you&#x27;re done optimizing the number of loops). Sometimes you can hide behind some guaruantees that your hashset has constant lookup. But did you factor in whether the hash function is actually constant (or even fast, for that matter)?')