Item(by='ddorian43', descendants=None, kids=None, score=None, time=1611665196, title=None, item_type='comment', url=None, parent=25914692, text='&gt; Are you suggesting it hits scaling boundaries earlier than that single-node postgres?<p>This is nosql scenario all over again. You have to think in cost($)&#x2F;query and your data layout.<p>&gt; Of course a distributed architecture costs efficiency, but as long as it still scales further (and after some point, cheaper) than single-node alternatives, the efficiency loss is tolerable.<p>The efficiency loss is tolerable. The question is, when ? For primary-key get, efficiency-loss is, let&#x27;s say, none. So you can start distributed from the start.<p>For another query, especially multi-tenant when you can put a tenant in 1 box, it may start making sense AFTER scaling to 2TB memory node.<p>Imagine a select query doing a join. It has to read 1GB from nvme-array or from network.<p>Imagine a write, ending up as a distributed-write, it needs to wait for 2x+ more servers in the network.')