Item(by='1vuio0pswjnm7', descendants=None, kids=None, score=None, time=1611473020, title=None, item_type='comment', url=None, parent=25890055, text='Here is a little script to demonstrate checking a CRL manually, using serial numbers.  I am a text-only browser user and use command line TCP clients along with haproxy&#x2F;stunnel to retrieve web pages instead of massive, complex &quot;modern&quot; browser just to establish TLS connection and send HTTP requests.  How is a manual check via command line inferior to what &quot;modern&quot; browsers do.  Are those large, complex programs really checking every certificate against a full list (CRL) of revoked certificates.  (No, they are not.)  crl.sh requires only openssl, curl and sed.<p>Example usage:\n   crl.sh example.com 93.184.216.34<p>Output:\n    OK<p><pre><code>           &#x2F;#!&#x2F;bin&#x2F;sh\n           case $# in [12]);;*)exec echo usage: $0 domainname \\[ipaddr\\];esac\n          \n           echo|openssl s_client -connect ${2:-$1}:443 -showcerts -servername $1 |sed -n -e &#x27;&#x2F;.&#x2F;{&#x2F;-BEGIN&#x2F;,&#x2F;-END&#x2F;p;}&#x27; -e w$1.pem \\\n           |openssl x509 -noout -text|sed -n &#x27;&#x2F;.&#x2F;{&#x2F;CRL Distribution Points&#x2F;,&#x2F;URI:&#x2F;{&#x2F;URI:&#x2F;s&#x2F;.*URI:&#x2F;&#x2F;;\n           &#x2F;\\.crl$&#x2F;{s&#x2F;.*&#x2F;url = &amp;&#x2F;;p;};};}&#x27;|curl -sK-|openssl crl -inform der -text|sed -n &#x27;&#x2F;Serial&#x2F;{s&#x2F;.* &#x2F;&#x2F;;p;}&#x27; &gt;revoked.serials\n\n           x=$(openssl x509 -noout -text &lt; $1.pem |sed -n -e &#x27;&#x2F;Serial&#x2F;{n;s&#x2F;[: ]&#x2F;&#x2F;g;y&#x2F;abcdef&#x2F;ABCDEF&#x2F;;p;}&#x27;);\n           y=$(sed -n &quot;&#x2F;$x&#x2F;{p;q;}&quot; revoked.serials);\n           echo;if test $y;then echo revoked;else echo OK;fi\n\n           test ! -f $1.pem||rm $1.pem\n           test ! -f revoked.serials||rm revoked.serials</code></pre>')