Item(by='boulos', descendants=None, kids=None, score=None, time=1612048172, title=None, item_type='comment', url=None, parent=25972670, text='Right, I should have been more clear: Anthos on-prem &quot;just&quot; gives you the Kubernetes part of that API consistency story.<p>On machine management, it&#x27;s <i>intentionally</i> the case that administrators can control the base machine part via &quot;Bring Your Own Node&quot;, because of all the processes and compliance things that customers have in place for their <i>other</i> boxes. They don&#x27;t want their GKE cluster to be some rogue actor in their datacenter (more than it will be already).<p>Some customers are happy to let a provider own the end-to-end story of the base OS, including patching&#x2F;upgrades, though we&#x27;re not (currently) ready to support them running Container-Optimized OS (aka COS) on bare metal. We do have in-place upgrading of the <i>K8s</i> parts via ```bmctl upgrade cluster``` or ```kubectl apply``` [1], but expect that enterprises will prefer to use their existing patch management procedures. I don&#x27;t expect most enterprises to jump on &quot;single cloud provider&quot; patch management (e.g., our own patch management [2]) anytime soon.<p>Think of the progression this way:<p>- many large enterprises wanted to add in K8s on-prem into their existing vSphere universes<p>- others wanted out of vSphere but still had their own machines and own ticketing&#x2F;OS&#x2F;patching systems<p>- others still want to &quot;bring their own metal&quot; with the rest managed by a provider.<p>- Outposts sort of jumps to &quot;you want our boxes but in your datacenter&quot;<p>The Outposts angle is definitely a great fit for customers who want a more &quot;appliance-like&quot; behavior. And I think that works great for new workloads, or customers who don&#x27;t mind replacing their existing hardware. My take is that many folks want to modernize in place though, and setting up and maintaining K8s was the hard part for them (they kind of still like their patch management and machine ticketing systems). Getting their developers to just do kubectl apply all day instead of requesting boxes is already a big leg up.<p>[1] <a href="https:&#x2F;&#x2F;cloud.google.com&#x2F;anthos&#x2F;gke&#x2F;docs&#x2F;bare-metal&#x2F;1.6&#x2F;how-to&#x2F;upgrade" rel="nofollow">https:&#x2F;&#x2F;cloud.google.com&#x2F;anthos&#x2F;gke&#x2F;docs&#x2F;bare-metal&#x2F;1.6&#x2F;how-...</a><p>[2] <a href="https:&#x2F;&#x2F;cloud.google.com&#x2F;compute&#x2F;docs&#x2F;os-patch-management" rel="nofollow">https:&#x2F;&#x2F;cloud.google.com&#x2F;compute&#x2F;docs&#x2F;os-patch-management</a>')