Item(by='crdrost', descendants=None, kids=None, score=None, time=1604691947, title=None, item_type='comment', url=None, parent=25009828, text='This blog post we&#x27;re all commenting on is great precisely because it links Ward Cunningham&#x27;s talk. His understanding is precisely this financial metaphor.<p>I have considered giving a talk, “When Technical Debt was a <i>Good</i> Thing”. Like you say, it gets mis-equated with bad engineering but originally the point was that technical debt was a <i>good</i> thing, like, let&#x27;s have some technical debt! This is gonna be great!<p>If you’re looking at 1980s attitudes on software development, there was a strong focus on getting the engineering right, we&#x27;re gonna be like generals and we&#x27;re gonna have a vague direction of success and then our lieutenants will reify that into a concrete plan of success and then the privates will go off into the trenches to, here the metaphor finally breaks, build the application: and then we&#x27;ll evaluate their performance on fidelity to the design that the lieutenants gave and we&#x27;ll evaluate the lieutenants on how well that design matches the goals the generals set out to do. Very hierarchical, design-first.<p>And the point of this metaphor was, “No, stop. Stop with all the BS. Get those privates building something right now. Doesn’t matter if it’s not the thing the lieutenant would have designed. Let’s intentionally build the <i>wrong</i> thing.”<p>And it’s like, shock and horror, why would you ever want to do that? Then comes the metaphor. “It’s like spending money you don’t have, people act like it’s impossible or perhaps like it’s immoral—it’s neither. Credit systems exist. Debt exists. We’re just lifting that notion to the technical sphere.” Why would you want to do it? Same reason you take on any other debt: you think that you can outrun the interest. I take out a car loan because I think that the car will help me earn enough to cover the loan repayment amounts and save me time and&#x2F;or money.<p>In this case, because we don’t have the final design we’ll only conform 90% to what we’re supposed to be producing, say. That 10% loss is the interest.  We pay it because we think we can cover it later.<p>Very much, Agile is an approach to creating technical debt. The opponent of both is the same, a &quot;waterfall&quot; style where you know exactly what needs to be built before you build it.')