Item(by='tsimionescu', descendants=None, kids=None, score=None, time=1608066905, title=None, item_type='comment', url=None, parent=25430172, text='For a long time in C&#x27;s history, for most platforms, int overflow was actually treated as well defined behavior, with many examples suggesting to use tests like x + y &lt; x (assuming positive integers) to detect overflow.<p>In modern C there is simply no portable way to easily check for integer overflow for 64-bit values, even though the vast majority of programs are running on a processor that defines exactly what happens with integer overflow, and even sets a flag that can be tested for in a single jump.<p>People often cite for loops over arrays as an example of places where treating integer overflow as UB helps with optimizations. This despite the fact that the recommended, standards compliant portable way to iterate over the range of indices in an array is to use a size_t index variable, which is an unsigned type.')