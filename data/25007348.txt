Item(by='merijnv', descendants=None, kids=[25013380, 25011647, 25008176], score=None, time=1604668379, title=None, item_type='comment', url=None, parent=25002159, text='Lemme give you one example of one workflow I&#x27;ve encountered a bunch of times that&#x27;s super annoying with git.<p>I port&#x2F;test a project to a new OS. I run into a bunch of issues, like linkers, environments, etc. that are broken that I need to fix. I try and make clean commits tackling one issue at a time, so we get 1 commit for the linker issues, 1 for the docs, 1 for the environment, etc. eventually I have 5 commits of fixes.<p>These fixes are all orthogonal, so ideally I want to make separate PRs and separate reviews for them. But locally they&#x27;re all tied together (in chronological order), since I need all of them there to continue development.<p>In git I can either open 1 big PR including all fixes at once (annoying) or I can make a PR for one commit, wait until it&#x27;s merged, then PR the next, etc. The only way to get them nicely separate is if I take all those 5 commits, rebase each of them onto master in its own branch and PR those 5 branches. But that ruins my ability to work locally.<p>The associativity of (non-conflicting) patches in a patch based VCS like Anu&#x2F;Pijul means that this &quot;ordering&quot; of patches doesn&#x27;t exist. I have 5 patches you don&#x27;t, I can PR each of them independently without needing to manipulate history or anything, because fundamentally the patches aren&#x27;t related and therefore there&#x27;s no reason for an ordering like the git DAG forces upon you.<p>Of course this is a fairly niche (but hopefully concrete enough) example of how this enforced ordering of commits can actively harm workflows&#x2F;collaboration.')