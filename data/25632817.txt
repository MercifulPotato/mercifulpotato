Item(by='pjmlp', descendants=None, kids=[25634019], score=None, time=1609775322, title=None, item_type='comment', url=None, parent=25631922, text='Here is a refresher, with some key quotes.<p><a href="http:&#x2F;&#x2F;cm.bell-labs.co&#x2F;who&#x2F;dmr&#x2F;chist.html" rel="nofollow">http:&#x2F;&#x2F;cm.bell-labs.co&#x2F;who&#x2F;dmr&#x2F;chist.html</a><p>&gt; Thompson was faced with a hardware environment cramped and spartan even for the time: the DEC PDP-7 on which he started in 1968 was a machine with 8K 18-bit words of memory and no software useful to him. While wanting to use a higher-level language, he wrote the original Unix system in PDP-7 assembler. At the start, he did not even program on the PDP-7 itself, but instead used a set of macros for the GEMAP assembler on a GE-635 machine. A postprocessor generated a paper tape readable by the PDP-7.<p>&gt; Although we entertained occasional thoughts about implementing one of the major languages of the time like Fortran, PL&#x2F;I, or Algol 68, such a project seemed hopelessly large for our resources: much simpler and smaller tools were called for. All these languages influenced our work, but it was more fun to do things on our own.<p>&gt; By 1970, the Unix project had shown enough promise that we were able to acquire the new DEC PDP-11. The processor was among the first of its line delivered by DEC, and three months passed before its disk arrived. Making B programs run on it using the threaded technique required only writing the code fragments for the operators, and a simple assembler which I coded in B; soon, dc became the first interesting program to be tested, before any operating system, on our PDP-11. Almost as rapidly, still waiting for the disk, Thompson recoded the Unix kernel and some basic commands in PDP-11 assembly language. Of the 24K bytes of memory on the machine, the earliest PDP-11 Unix system used 12K bytes for the operating system, a tiny space for user programs, and the remainder as a RAM disk. This version was only for testing, not for real work; the machine marked time by enumerating closed knight&#x27;s tours on chess boards of various sizes. Once its disk appeared, we quickly migrated to it after transliterating assembly-language commands to the PDP-11 dialect, and porting those already in B.<p>&gt; By 1971, our miniature computer center was beginning to have users. We all wanted to create interesting software more easily. Using assembler was dreary enough that B, despite its performance problems, had been supplemented by a small library of useful service routines and was being used for more and more new programs. Among the more notable results of this period was Steve Johnson&#x27;s first version of the yacc parser-generator [Johnson 79a].<p>&gt; By early 1973, the essentials of modern C were complete. The language and compiler were strong enough to permit us to rewrite the Unix kernel for the PDP-11 in C during the summer of that year. (Thompson had made a brief attempt to produce a system coded in an early version of C—before structures—in 1972, but gave up the effort.)<p>What failed was the initial port attempt to C, not UNIX running on PDP-7.<p>While I am quite critic of C, I take the effort to learn and criticise properly, because regardless of my opinion it isn&#x27;t going away on my lifetime and bills need to be paid.')