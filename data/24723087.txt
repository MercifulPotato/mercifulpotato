Item(by='thaumaturgy', descendants=None, kids=None, score=None, time=1602186542, title=None, item_type='comment', url=None, parent=24721604, text='Sure, but there&#x27;s no reason for something like API documentation to require emailing support@.<p>Let me cite a specific recent example: I was tasked with building an application that integrated document e-signatures. The spec called for Docusign specifically, so I looked at their documentation. What I could find of it was written unclearly and much of it was hidden behind a developer account login. Getting a developer account was &quot;free&quot;, as long as my time was worth $0. (You had to fill out a form of some kind, I don&#x27;t remember the specifics anymore.)<p>So then I looked at HelloSign, a competitor. Their documentation was public, freely available, and <i>beautiful</i> (<a href="https:&#x2F;&#x2F;app.hellosign.com&#x2F;api&#x2F;documentation" rel="nofollow">https:&#x2F;&#x2F;app.hellosign.com&#x2F;api&#x2F;documentation</a>). It included specific examples and walkthrus. This says things to me like, &quot;we care about the developer experience&quot;.<p>I practically begged the customer to use HelloSign instead. I expected, from experience, that Docusign integration was going to suck, and HelloSign integration would suck a lot less. The customer said, &quot;the spec already says Docusign, so we can&#x27;t switch&quot;.<p>And the Docusign integration <i>did</i> suck. It was terrible. Lots of it was incomplete. Their vendor library was a godawful mess, built from some automated tool that converts an API into a bad class library. Their support was basically useless even after a contract had been negotiated and signed. The client ended up spending an extra ten grand or so and at least a couple weeks worth of delays just on Docusign-related issues.<p>This is a pattern that reoccurs often enough that experienced developers use documentation as a proxy for the quality of the service.')