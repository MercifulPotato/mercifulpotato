Item(by='gallier2', descendants=None, kids=None, score=None, time=1606165687, title=None, item_type='comment', url=None, parent=25176531, text='Foreach macros. Nice when you have a list of constant that you need for declaring a lot of tables or enumerations. Here an example with ISO-639 language codes<p>Example with 3 &quot;values&quot;. This is the base definition from which all the tables and enums are produced.<p><pre><code>  #define FOREACH_LAN(LAN)\\\n    LAN(GA, IE, C_ANSI    )  &#x2F;**&lt; Irish Gaelic   :  0 *&#x2F; \\\n    LAN(DE, DE, C_ANSI    )  &#x2F;**&lt; German         :  1 *&#x2F; \\\n    LAN(DA, DA, C_ANSI    )  &#x2F;**&lt; Danish         :  2 *&#x2F; \\\n    LAN(EL, EL, C_GREEK   )  &#x2F;**&lt; Greek          :  3 *&#x2F; \\\n    LAN(EN, GB, C_ANSI    )  &#x2F;**&lt; English        :  4 *&#x2F; \\\n    LAN(ES, ES, C_ANSI    )  &#x2F;**&lt; Spanish        :  5 *&#x2F; \n   etc.\n</code></pre>\nLet&#x27;s define an enum indexing with these languages<p><pre><code>    #define GENERATE_LANIDX(lan,country,codepage) LANIDX_ ## lan,\n\n    typedef enum {\n      LANIDX_UNDEFINED = -1,        &#x2F;&#x2F; \n      \n    FOREACH_LAN(GENERATE_LANIDX)  \n\n      LANIDX_MAX                    &#x2F;&#x2F; Automatically get the upper bound\n    } LANIDX_TYPE;\n</code></pre>\nThis is equivalent to<p><pre><code>    typedef enum {\n      LANIDX_UNDEFINED = -1,        &#x2F;&#x2F; \n      LANIDX_GA,      \n      LANIDX_DE,      \n      LANIDX_DA,      \n      LANIDX_EL,      \n      LANIDX_EN,      \n      LANIDX_ES,      \n      LANIDX_MAX                    &#x2F;&#x2F; Automatically get the upper bound\n    } LANIDX_TYPE;\n</code></pre>\nbut I didn&#x27;t need to repeat all the language codes, the macro did it for us.<p>Now in the module I can define tables, also without needing to repeat the codes<p><pre><code>   const char *LanIdx2LanTable[] = {\n    #define GENERATE_LANIDDX_2_LAN(lan,country,codepage)  [1+ LANIDX_ ## lan]={#lan},\n    FOREACH_LAN(GENERATE_LANIDDX_2_LAN)\n   };\n\n   const char *LanIdx2CodePageTable[] = {\n     #define GENERATE_LANCP(lan,country,codepage)  [1+LANIDX_ ## lan]=codepage,\n     FOREACH_LAN(GENERATE_LANCP)\n   };</code></pre>')