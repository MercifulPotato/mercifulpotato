Item(by='bluehatbrit', descendants=None, kids=[25128525], score=None, time=1605630235, title=None, item_type='comment', url=None, parent=25123017, text='Rather than a problem with GitHub, I think it&#x27;s more just a problem of dominance. Git was originally designed for a work environment where people weren&#x27;t on the same network, or any network at all when making code edits. At the same time, everyone wanted a copy of the history that they could change themselves to mirror their work. So we needed a tool which could be distributed, not require a regular network connection, and still enable people to share changes and view the entire history of a project.<p>Git was primarily adopted because it solved those issues which were important ones at the time, people discovering git needed those tools and when discovering git would naturally come across and understand the trade-offs. IE: &quot;I can&#x27;t easily undo a change once it&#x27;s on someone else&#x27;s machine, instead I would need to issue a new change reverting it. But that&#x27;s ok, because it means I can do as I like on my machine without screwing up the history for other people and only send a patch of specific changes when I&#x27;m ready.&quot;<p>The issue people now face is git has become so popular, because of those initial reasons, and we&#x27;re dealing with a new set of problems which git never cared about.<p>&quot;Project X is in a git repository, and I want to contribute a change&quot;.<p>This is a fundamentally different problem to the original problems git tried to solve. We&#x27;re now in this weird space where most people using git are only using it because: it&#x27;s what they already know, or the project they want to work on already uses git.<p>Requests like &quot;I just pushed a change and didn&#x27;t really want to&quot; don&#x27;t make much sense and don&#x27;t matter much in the original use cases. Now many git projects use centralised hosting and a lot of people don&#x27;t really care about git, just getting their work done, we now have this UX issue. The UX issue isn&#x27;t a result of poor design or implementation in git, it&#x27;s due to the motivations of users being fundamentally different now.<p>Sure you could argue that git should change or be easier, but then it would stop serving the original purpose. If people want a centralised source control with the ability to easily retract changes and have branches be the same across all nodes then really they just don&#x27;t need what Git sets out to solve.<p>The issue is git is now dominant, and that forces people to use it even if they don&#x27;t have the problems that git is really attempting to solve. That means they&#x27;re stuck in a place of using a tool so they can collaborate, without getting any of the benefits of it. That&#x27;s enough to drive anyone insane! It&#x27;s like pushing a boat across land to get to another village when a boat is really to get to another continent, but no one makes cars because everyone&#x27;s already boats.<p>We don&#x27;t need &quot;better&quot; UX for git, we just need people to know about all the options, and part of that may include encouraging some people to choose more centralised options when it&#x27;s a better fit for them.')