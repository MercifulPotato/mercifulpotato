Item(by='tannhaeuser', descendants=None, kids=[25323620], score=None, time=1607259750, title=None, item_type='comment', url=None, parent=25322651, text='But boring doesn&#x27;t bring young developers to your team. Like it or not, there&#x27;s a fight for relevancy going on, fought by developers wanting to carve out either a niche for creativity, or, less favourably, longing for job security, resume padding, or self-promotion. And there sure is an effect of platforms building up a legacy of fossilized enterprise tooling turning younger devs away, such as Java; at a customer of mine, a team even chose Kotlin in a secret move to be presented after the fact. This was for a basic FinTech backend, so since it wasn&#x27;t even Android development, I can only assume they wanted to pad their resumes. Same thing at a bank where they chose nodejs when it, as much as I like it for lightweight web backends, really lacks basics such as decimal arithmetic and its always-async nature only spells trouble for integration work, debugging, etc.<p>If it were only for bare requirements of business CRUD applications, we had it nailed around 1990 with client&#x2F;server SQL apps already. Ever since, we seem to long for wrapping stuff up for modularization: first OOP, then package management, then &quot;modules&quot; (in Java land since v9&#x2F;11, and OSGI before that), SOA&#x2F;microservices, containers&#x2F;k8s, with their accompanying zoo of tools that  really don&#x27;t make things any better in the slightest. About the only real progress I can see here is that modularization made unit testing mainstream.')