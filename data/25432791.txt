Item(by='enobrev', descendants=None, kids=[25433106, 25433124, 25434470], score=None, time=1608054745, title=None, item_type='comment', url=None, parent=25432472, text='You&#x27;re not wrong, and to resolve this, I&#x27;ve implemented something of an in-between for APIs I work on, which I call a &quot;Multi-Endpoint Query&quot;.  It&#x27;s a restful(-ish) API, but there&#x27;s an additional endpoint called &quot;query&quot;, which allows for an array of endpoints to gather information from sequentially.  The most useful bit of this is that information gathered from earlier in the array can be used as referenced later in the array.<p>For instance:<p><pre><code>    &quot;query&quot;: [\n       &quot;&#x2F;api&#x2F;category&#x2F;books&#x2F;products&quot;,\n       &quot;&#x2F;api&#x2F;products&#x2F;{products.id}&#x2F;images&quot;,\n       &quot;&#x2F;api&#x2F;products&#x2F;{products.id}&#x2F;reviews&quot;,\n       &quot;&#x2F;api&#x2F;users&#x2F;{reviews.user_id}&quot;\n    ]\n</code></pre>\nWhen the endpoint gets this query, it will run a GET on the first endpoint.  And then it uses the results from that first endpoint to fill in the uri template on the 2nd endpoint, which would become something like &quot;&#x2F;api&#x2F;products&#x2F;2,4,17&#x2F;images&quot;.  And the results of all previous endpoints are merged into the response and can be used to fill subsequent uri templates as well.<p>As far as the client is concerned this is all done in a single API request.  The first version was making literal HTTP requests to localhost, but now is built to call the endpoints directly (internally, no HTTP).  This system requires some convention in the responses to make it work, but that convention ends up making responses predictable and easily reusable.  Overall it&#x27;s worked very well and requires almost no additional effort.<p>I have a similar endpoint that also allows &quot;POST&quot;s which makes for seriously complex single-request interactions, but I don&#x27;t use that as much due to the inherent complexity of it - at least not for client-side APIs.<p>When I first looked into GQL, it looked pretty fancy, but seemed to require quite a bit more maintenance to define the query space.  This was before a lot of today&#x27;s libraries were available.  So I hacked together the Multi-Endpoint Query, assuming if it failed, I could go back to GQL when there were more libraries available.  But I haven&#x27;t really needed to do so since.')