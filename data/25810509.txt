Item(by='mcdoker18', descendants=None, kids=None, score=None, time=1610890492, title=None, item_type='comment', url=None, parent=25805579, text='Good advice!\nA small addition in the third point: you can create a separate interface for HTTP errors, for example:<p><pre><code>    type HTTPError interface {\n        GetHTTPCode() int\n    }\n    func ServeHTTP(w http.ResponseWriter, req \\*http.Request) {\n        result, err := DoTheActualThing()\n        if err != nil {\n            statusCode := http.StatusInternalServerError\n            if httpError, ok := err.(HTTPError); ok {\n                statusCode = httpError.GetHTTPCode()\n            }\n            http.Error(w, ..., statusCode)\n            return\n        }\n        w.Header().Set(&quot;content-type&quot;, &quot;application&#x2F;json&quot;)\n        w.WriteHeader(http.StatusOK)\n        w.Write(result)\n    }\n</code></pre>\nYou can apply the same approach for the HTTP body in case of error.')