Item(by='neilv', descendants=None, kids=None, score=None, time=1610770708, title=None, item_type='comment', url=None, parent=25798008, text='&gt; <i>Rust has a fair number of web server frameworks, database connectors, and parsers. But building authentication?</i><p>Oddly enough, this was the exact missing off-the-shelf piece -- traditional built-in Web authn&amp;autho, not OAuth2&#x2F;OpenID&#x2F;etc. -- that last week made me (reluctantly) abandon plans to use Rust for a rapid Web backend project, and at least delay trying to do most of our new software work in Rust.<p>The Web authn was sorta the last straw, on top of enough additional known-extra-work and known-uncertainties, so I couldn&#x27;t justify going Rust at this point, for our needs right now.  I decided I had to go with a framework and language that was already heavily proven (if boring) for this kind of application (and, incidentally, one of the framework&#x27;s off-the-shelf authn&amp;autho packages turned out to be a breeze to use, so far).<p>(Were I doing a brand new startup demo&#x2F;MVP, or an R&amp;D project within a comfortably established company, I might&#x27;ve taken on additional risk here, and tried to power through the extra work and unknowns, but we are an early startup nevertheless in B2B critical production already.)<p>(One reason not using Rust yet was disappointing to me is, just as I&#x27;d personally prefer to be mastering Rust right now, using Rust would be a recruiting carrot, somewhat like beloved fringe language Lisp&#x2F;Scheme&#x2F;Racket&#x2F;OCaml&#x2F;Haskell&#x2F;etc. would be.  I could also see Rust soon letting us do all our backend, much of Web frontend, embedded&#x2F;appliance systems with device interfacing and some creative networking, and even mobile apps, rather than the mix of too many languages we have now.  And I also suspected that most developers we&#x27;d hire would end up creating fewer defects in Rust code, since language semantics and static checking would <i>force</i> us to think harder <i>before</i> the alternative led to runtime failures, and&#x2F;or to encumbering our ability to evolve things fast without breaking production.)<p>(I&#x27;d probably enjoy the job of helping build out the platform&#x2F;ecosystem of Rust or another newish interesting language I liked.  I&#x27;ve done building-out before, including lots of authn from scratch.  And of course sometimes it makes sense, in the context of a project in one platform, to build generic pieces that would be off-the-shelf in some other platforms; but other times that makes less sense.)')