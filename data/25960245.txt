Item(by='MaxBarraclough', descendants=None, kids=None, score=None, time=1611943176, title=None, item_type='comment', url=None, parent=25956644, text='&gt; You can write more or less tests, you can be more or less sure that something you just wrote is actually correct.<p>At the risk of taking things too literally: that&#x27;s quite an exaggeration. Even the most cautiously written code (short of formal verification) often turns out have serious bugs.<p><i>Linus&#x27;s law</i> (curiously apparently written by ESR) famously states that <i>given enough eyeballs, all bugs are shallow</i>. This implies that the typical initial value of 2 eyeballs is inadequate, but even Linus&#x27;s law doesn&#x27;t seem to go far enough. Sneaky bugs can hide for years in mature codebases.<p>&gt; If you take say SOLID which sounds kind of reasonable, the Single Responsibility Principle in an OCD way can only be met by unary functions. Everything else must be doing more than &quot;one thing&quot;.<p>I don&#x27;t see where this is coming from. Multiplication is an operation over two operands but it&#x27;s clearly &#x27;doing one thing&#x27;, to the extent that this is even meaningful.')