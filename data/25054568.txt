Item(by='hackerfromthefu', descendants=None, kids=None, score=None, time=1605058338, title=None, item_type='comment', url=None, parent=25048515, text='That&#x27;s a factual definition of how to use the first step of async, however it&#x27;s missing the point.<p>Async makes your code do significantly more complex thnigs, and while the compiler makes the easy stuff easy, the underlaying complexity hasn&#x27;t gone away it&#x27;s just been abstracted, and somewhat leakily.<p>You can&#x27;t do &#x27;just&#x27; what you said, you also have to deal with of boundary conditions that don&#x27;t exist in non-async code, plus if you want to understand what your code is doing you now need to keep two mental models of program execution in your mind.<p>For an introduction to the complexity of async, and practical considerations you need to manage to use it well this official documentation is a place to start - and note the article is pretty long, async does have a lot of additional complexity.<p><a href="https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;archive&#x2F;msdn-magazine&#x2F;2011&#x2F;october&#x2F;asynchronous-programming-async-performance-understanding-the-costs-of-async-and-await" rel="nofollow">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;archive&#x2F;msdn-magazine&#x2F;2011&#x2F;...</a><p>Btw I&#x27;m not saying don&#x27;t use Async. Async is an incredibly powerful and valuable tool. But it has costs and those are weighted toward downstream in the software lifecycle and you should be aware of them when deciding which situations that tool is appropriate in.<p>Yes async is a first class citizen in .NET and thats emphasised by the framework libraries using it everywhere. But they are writing a framework to be consumed widely by users of differing requirements so they have real reasons to support the widest possible use with highest possible performance. Most application code doesn&#x27;t really have those needs.<p>Using async should be considered as a tool to reach for (when appropriate) not a default for every situation because it has significant costs through the lifecycle of the system.')