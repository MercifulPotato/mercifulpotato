Item(by='john_moscow', descendants=None, kids=[24737454, 24737211], score=None, time=1602310874, title=None, item_type='comment', url=None, parent=24736634, text='&gt;How can _any_ language compile a unit passing a struct Foo on the stack without knowing the size of Foo.<p>The idea is not to compile a unit without knowing the size of Foo. It&#x27;s about making sure you figure out sizeof(Foo) in near constant time.<p>With C#&#x2F;Pascal, it means:<p>* For each referenced module load its symbol table into RAM. If implemented cleverly, this is literally one read() call.<p>* For each referenced symbol, search each hash table until you find it. Since the hash tables are only built during compilation, you can auto-size them so that an average lookup takes just 1-2 steps.<p>* Bonus point: for libraries, you can merge the hash tables. So <i>n</i> is now a number of libraries, not number of files.<p>With C++ you are stuck reparsing megabytes of code at the beginning of each translation unit. It&#x27;s millions of times slower than reading a couple of pages from disk to RAM.')