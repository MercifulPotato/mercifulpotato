Item(by='geofft', descendants=None, kids=None, score=None, time=1601828045, title=None, item_type='comment', url=None, parent=24676703, text='In a statically-typed language, this is an entirely reasonable thing to want, but also, existing languages like JSON and TOML don&#x27;t give you that either:<p>- There&#x27;s no way to say that you want an integer; you get a floating-point value.<p>- See <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24676484" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24676484</a> , you can&#x27;t reliably accept integers over 2^53 without taking them as strings.<p>- Someone can always specify something of the actual wrong type. (Imagine changing YAML &quot;version: 1.9.1&quot; to &quot;version: 1.10&quot;. You can&#x27;t just stringify 1.10, you&#x27;ll get &quot;1.1&quot;!)<p>So, in a practical data format, the schema for your document needs to say something like &quot;This is a number, which must be an integer between 0 and 2^16&quot; or &quot;This is a string, make sure to quote it&quot; or whatever, and a generic statically-typed JSON- or YAML-parsing library isn&#x27;t going to handle that for you. And telling your users &quot;the input format is JSON&quot; doesn&#x27;t answer that question: you must make it explicit to users.<p>Fortunately, you can handle it just fine in a statically-typed language in one of two ways. One is to accept an object from your parser that consists of variant types and pass it through your own function that validates it against a schema, and then either returns a more-restrictively-typed object or throws an error. Such a function could easily do string conversion too if given NestedText input, as I mentioned. The other is to pass some information into your parser saying, don&#x27;t act like a generic JSON&#x2F;YAML parser, instead interpret these particular fields in this particular way and accept only things with this structure. If you&#x27;re doing that, you can easily tell the parser to use this particular string-to-integer function on the strings in NestedText and then return an appropriately-typed object containing an integer to you.')