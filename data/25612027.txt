Item(by='kaoD', descendants=None, kids=[25612163], score=None, time=1609586464, title=None, item_type='comment', url=None, parent=25611564, text='Types are not generated at runtime, lifetimes <i>are</i> types (although they cannot be constructed).<p>T&lt;&#x27;a&gt; and T&lt;&#x27;b&gt; are different types altogether (although, being generic, they can resolve to the same type if &#x27;a == &#x27;b, but it&#x27;s not required). All this happens at compile time.<p>When you say T: &#x27;a you say that T is a subtype of &#x27;a hence it lives longer.<p><a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nomicon&#x2F;subtyping.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nomicon&#x2F;subtyping.html</a><p>Maybe you&#x27;re being confused by misconception 1 here?<p><a href="https:&#x2F;&#x2F;github.com&#x2F;pretzelhammer&#x2F;rust-blog&#x2F;blob&#x2F;master&#x2F;posts&#x2F;common-rust-lifetime-misconceptions.md" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;pretzelhammer&#x2F;rust-blog&#x2F;blob&#x2F;master&#x2F;posts...</a><p>Type T, being generic, can be an OwnedStruct, but also an &amp;&#x27;a BorrowedStruct or a StructWithReferences&lt;&#x27;a&gt;. The owned one is a subtype of &#x27;static since it&#x27;s owned, but the ones with lifetimes are subtypes of &#x27;a which itself (being a generic lifetime) can be a subtype of &#x27;static or any other lifetime. Again, all this happens and is checked at compile time. This ensures that at runtime, the actual references are alive as per their lifetimes without explicitly checking them anymore.')