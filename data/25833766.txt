Item(by='sighingnow', descendants=None, kids=None, score=None, time=1611067118, title=None, item_type='comment', url=None, parent=25833405, text='Let&#x27;s say someone want to use python first to create a few tensors with numpy, and then use another python package networkx to create a graph from the tensors just created and next to do some graph analysis with networkx.<p>It is easy to do it on a single machine in a single python runtime because data structures like tensors can be easily shared within a single python runtime.<p>It will become a bit harder to share the data across processes&#x2F;Python runtime efficiently without expensive IO or serialization (doable with the help of things like plasma in Apache Arrow).<p>However, if we want to deal with &quot;big data&quot; that cannot be handled on a single machine, it will become very hard to share data without IO&#x2F;serialization.\nVineyard can be used for such cases. It makes sharing big distributed data structures easy for different runtime.<p>There will be some added benefits with vineyard:\n1. vineyard can handle the the IO, sharding&#x2F;partitioning, failover and data migrations for the applications.<p>2. vineyard supports many out-of-the-box highly efficient data formats (such as Apache Arrow) and high-level abstractions which ease the difficulties of developing big data applications.<p>3. With stream data support, there is a possibility of enabling cross-process optimizations.<p>4. Fits K8s very well, where common data structures can live in a separated pod&#x2F;container with its own resource limit.')