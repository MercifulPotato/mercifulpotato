Item(by='jerf', descendants=None, kids=[25625985, 25628161, 25625870, 25625999, 25628330], score=None, time=1609708886, title=None, item_type='comment', url=None, parent=25625278, text='I&#x27;ve been fairly convinced for a while that once Rust matures (which is probably fairly close to &quot;now&quot;, but I&#x27;ve held this opinion for years) that it&#x27;s going to have a performance advantage in real code that&#x27;s going to be hard to capture in benchmarks, because it&#x27;s easy in a small benchmark to be very careful and ensure that you don&#x27;t have aliasing, avoid extra copies, etc.<p>Where I expect Rust to really shine performance-wise is at the larger scale of real code, where it affords code that copies less often because the programmer isn&#x27;t sure in this particular function whether or not they own this so they just have to take a copy, or the compiler can&#x27;t work out aliasing, etc. Ensuring at <i>scale</i> that you don&#x27;t take extra copies, or have an aliasing problem, or that you don&#x27;t have to take copies of things just to &quot;be sure&quot; in multithreading situations, is hard, and drains a lot of performance.')