Item(by='mherrmann', descendants=None, kids=[25976948, 25977815, 25978506, 25977708, 25976636, 25976560, 25976537, 25976517, 25976911, 25978029, 25977024, 25977095, 25977542, 25978978, 25979354, 25978091, 25979266, 25979019, 25978376, 25977617, 25978063, 25978937, 25977789, 25977856, 25976692, 25979214], score=None, time=1612072789, title=None, item_type='comment', url=None, parent=25973242, text='I don&#x27;t get why people use Docker for &quot;small SaaS apps&quot; where &quot;scale is not an issue&quot;. You can run everything without Docker to remove an extra level of indirection. I&#x27;ve been doing that exact thing with a very similar Django stack for years. Not once have I missed Docker. On the other hand, I have taken over SaaS projects where the (unnecessary) usage of Docker made it more expensive to host, decidedly more difficult to debug and maintain, and tests were slow, making me less productive.<p>As the reason for using Docker, the author writes &quot;The benefits of matching your development environment to your production one cannot be overstated&quot;. Again in my personal experience, this simply isn&#x27;t an issue. Just use the same Python version and a roughly similar PostgreSQL version in development and production, and you&#x27;re good to go.<p>In short, I feel OP would be better off without Docker. Once you know the rest of the stack well enough, you can set it up in dev and prod in such a way that you can trust that what works in dev will also work on prod. I&#x27;ve been doing this without problems for years.')