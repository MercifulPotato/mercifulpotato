Item(by='dragontamer', descendants=None, kids=[25143603, 25143629], score=None, time=1605737194, title=None, item_type='comment', url=None, parent=25142848, text='Because AMD&#x27;s OpenCL tooling sucks. Set -O (optimization) flag on your OpenCL on AMDPro drivers, and malformed code comes out. AMDPro OpenCL 2.0 doesn&#x27;t support debugging outside of printf statements (and lol at reading through 1024-SIMD threads worth of printf statements every time you wanna figure something out).<p>Compiler bugs a plenty: the compiler can enter infinite loops just trying to compile OpenCL 2.0 code, taking down your program. If you ever come across such a bug, you&#x27;re now in guess-or-check mode to figure out exactly what grammar you did to bork the OpenCL compiler.<p>Oh, and the OpenCL compiler is in the device driver. As soon as your customers update to Radeon 19.x.x.whatever, then you have a new OpenCL compiler with new bugs and&#x2F;or regressions. The entire concept of tying the COMPILER to the device driver is insane. Or you get support tickets along the lines of &quot;I get an infinite loop on Radeon 18.x.x.y drivers&quot;, and now you have to have if(deviceDriver == blah) scattered across your code to avoid those situations.<p>In practice, you end up staying on OpenCL 1.2 which is stable and has fewer bugs... and has functional debugger and profiler. But now you&#x27;re missing roughly 8-years worth of features that&#x27;s been added to GPUs over the last decade.<p>----------<p>ROCm OpenCL is decent, but that&#x27;s ROCm. At that point, you might as well be using HIP, since HIP is just a way easier programming language to use.<p>Ultimately, I think if you&#x27;re serious about AMD GPU coding, you should move onto ROCm. Either ROCm&#x2F;OpenCL, or ROCm&#x2F;HIP.<p>ROCm is statically compiled: the compiler is Clang&#x2F;LLVM and completely compiled on your own workstation. If you distribute the executable, it works. Optimization flags work, there&#x27;s a GDB interface to debug code. Like, you have a reasonable development environment.<p>So long as your card supports ROCm (admittingly: not many cards are supported, but... AMDPro OpenCL tooling is pretty poor)')