Item(by='simias', descendants=None, kids=None, score=None, time=1607600211, title=None, item_type='comment', url=None, parent=25367225, text='I don&#x27;t really see the hype, I think it&#x27;s just the intersection of a few factors:<p>- Languages like Rust which have an ecosystem that evolves very quickly (and uses complex symbol mangling schemes that would break all the time) wouldn&#x27;t fare very well with dynamic linking in the first place. What good is dynamic linking if you need a different version of your .so file for every binary?<p>- Dynamic linking is not quite as useful today a it was in the past. Code size is not usually very significant, either on cold storage or in RAM. Actually for RAM it&#x27;s cache usage that matters most, and static linking can usually be more efficient here through LTO.<p>- Over the past ~2 decades a new generation of developer arrived and many of them (in my experience) barely use &quot;low level&quot; compile-to-machine-code languages. They often specialize in scripting languages or languages that require a framework. Some of these developers are now learning Go or Rust and for them the idea of shipping a single ELF binary that packages the entire app might be seen as a novelty or maybe even as an innovation.')