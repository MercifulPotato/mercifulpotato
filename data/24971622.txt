Item(by='peter_d_sherman', descendants=None, kids=None, score=None, time=1604343186, title=None, item_type='comment', url=None, parent=24964966, text='&gt;&quot;Socket Takeover enables Zero Downtime Restarts for Proxygen by spinning up an updated instance in parallel that takes over the listening sockets, whereas the old instance goes into graceful draining phase. The new instance assumes the responsibility of serving the new connections and responding to health-check probes from the L4LB Katran. Old connections are served by the older instance until the end of draining period, after which other mechanism (e.g.,Downstream Connection Reuse) kicks in.&quot;<p>Great idea!<p>Now, that being said, this idea, or rather, this specific solution to this specific problem -- is actually a subset of a much broader problem in Computer Science, and that is:<p><i>How to move any OS component (up to and including running programs that may have many files, locks, sockets and other shared OS objects open) to another OS on another machine,<p>without causing any problems!</i><p>That is, how to move such entities <i>robustly</i>.<p>There are various ideas in this field (of which the above paper&#x2F;article is one) -- but due to the complexities involved, there are no easy answers (at least, not as far as moving whole running programs with many shared OS objects go).<p>At least one, and probably several experimental OS&#x27;s have been created in the past which attempt to do this -- but they aren&#x27;t mainstream, and without doing more research, I&#x27;m not sure how robust (which is always a subjective term!) they were...<p>But, it&#x27;s a fascinating area of Computer Science, to be sure.<p>Anyway, great idea and great article in this area!')