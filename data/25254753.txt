Item(by='shepmaster', descendants=None, kids=None, score=None, time=1606750221, title=None, item_type='comment', url=None, parent=25254478, text='I&#x27;m not 100% sure what you mean, so I&#x27;ll try to cover it broadly.<p><i>Ideally</i> the fact that you use SNAFU should not escape from your library; I encourage creating an [opaque] error in most cases.<p>The current deliberate &quot;leak&quot; is that we implement a [trait] that exposes the ability to get a backtrace from a SNAFU error because the standard library has not yet stabilized backtraces. Once those are stabilized, we should be able to completely isolate and only operate through the `std::error::Error` trait.<p>[opaque]: <a href="https:&#x2F;&#x2F;docs.rs&#x2F;snafu&#x2F;0.6.9&#x2F;snafu&#x2F;guide&#x2F;opaque&#x2F;index.html" rel="nofollow">https:&#x2F;&#x2F;docs.rs&#x2F;snafu&#x2F;0.6.9&#x2F;snafu&#x2F;guide&#x2F;opaque&#x2F;index.html</a><p>[trait]: <a href="https:&#x2F;&#x2F;docs.rs&#x2F;snafu&#x2F;0.6.9&#x2F;snafu&#x2F;trait.ErrorCompat.html" rel="nofollow">https:&#x2F;&#x2F;docs.rs&#x2F;snafu&#x2F;0.6.9&#x2F;snafu&#x2F;trait.ErrorCompat.html</a>')