Item(by='a1369209993', descendants=None, kids=None, score=None, time=1604721670, title=None, item_type='comment', url=None, parent=25011137, text='&gt; splitting a string into words not very intuitive<p>It seems okay?<p><pre><code>  split :: String -&gt; [String]\n  split s = w s &quot;&quot; where\n    w [] &quot;&quot; = []\n    w [] a = [reverse a]\n    w (&#x27; &#x27;:ss) &quot;&quot; = w ss &quot;&quot;\n    w (&#x27; &#x27;:ss) a = reverse a : w ss &quot;&quot;\n    w (c:ss) a = w ss (c:a)\n</code></pre>\nIf you&#x27;re done then you&#x27;re done (and dump the accumulator), if it&#x27;s a space get rid of it (and dump the accumulator), otherwise add it to the acuumulator. That the accumulator is stored backward is a bit wierd, but seems more a consequence of linked lists than recursion per se.')