Item(by='scott_s', descendants=None, kids=None, score=None, time=1606658648, title=None, item_type='comment', url=None, parent=25243159, text='Me and my colleagues came up with an abstraction called <i>conductors</i> for the orchestration problem. Short version is that when you have some dependence on multiple resources being in a particular state before creating or updating yet another resource, use a conductor. They observe multiple resource kinds, and operate a FSM internally. State transitions happen upon receiving an event from an observed resource. The logs of the conductor make it easy to debug dependency problems, because you can easily see that your conductor’s FSM is in a particular state, waiting to see some number of a particular resource.<p>The other principles we developed are “controllers” only control one resource and all resource updates for a resource kind must be serialized through a coordinator. Our paper has much more detail: A Cloud Native Platform for Stateful Streaming, <a href="https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2006.00064" rel="nofollow">https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2006.00064</a>')