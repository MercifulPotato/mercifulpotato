Item(by='runT1ME', descendants=None, kids=None, score=None, time=1602696147, title=None, item_type='comment', url=None, parent=24773555, text='&gt;Has anybody legitimately had good experiences with microservices these days?<p>Yes. I work for a company that started out with a few separate monoliths that were hacked together under intense time pressure by some smart folks that didn&#x27;t anticipate the scale they were going to be operating under.  As the team expanded and more talent was added, they were able to partition up some of the functionality into separate services.<p>When I joined we had a small team with a mixture of legacy systems written in Java, Perl, PHP, Scala and Python.  Some of the microservices were poorly done, others were fine.  The new teams were able to completely overhaul each service one at a time to where they were stable and needing almost no maintenance&#x2F;babysitting.<p>Would microservices have been a good <i>starting</i> decision for this company, given its current level of engineering talent? Probably not.  However, take a bootstrapped team crunched for time, with some foresight to know that there would need to be rewrites but not certain where, microservices can end up mitigating a lot of unknowable future issues.')