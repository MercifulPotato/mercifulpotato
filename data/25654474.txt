Item(by='usrusr', descendants=None, kids=[25673130], score=None, time=1609904813, title=None, item_type='comment', url=None, parent=25654276, text='You make it sound as if writing a task was like writing a plugin. That might sound very close to the truth if you look at it through maven goggles, but if you take a step back to the structured shell scripting of makefiles it&#x27;s hardly surprising they start with that.<p>For me, my main gripes with gradle are that freshness determination is quite difficult to analyze (and quite easy to break when you start doing nontrivial things, and if it breaks it is far too easy to just live with the additional build duration), that learning curves can progress way too far without real understanding of the central principle of configuration time vs task execution time (stronger syntactic separation might help, teaching &quot;build your own task&quot; early surely is an attempt to help as well) and, most of all, that all those &quot;superconvenient&quot; DSL syntax shortcuts are almost but not quite universal. &quot;You can use DSL simplification xy everywhere, except where you can&#x27;t&quot; and there are far too many different xy. Maybe I should give the .kt syntax another chance, last time I tried I was in a phase of the learning curve where having a different syntax than in all the Google results was definitely a showstopper (trivial things are surely well-documented for kt, but when you reach xkcd 979 corner cases you&#x27;d better be firm enough in the groovy syntax to do the language transfer in your head without any uncertainties)')