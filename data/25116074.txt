Item(by='chubot', descendants=None, kids=None, score=None, time=1605555768, title=None, item_type='comment', url=None, parent=25113636, text='Somewhat related, although this is for a huge scale:<p><i>Adaptive process and memory management for Python web servers</i> <a href="https:&#x2F;&#x2F;instagram-engineering.com&#x2F;adaptive-process-and-memory-management-for-python-web-servers-15b0c410a043" rel="nofollow">https:&#x2F;&#x2F;instagram-engineering.com&#x2F;adaptive-process-and-memor...</a><p><i>Previously we used two per-worker thresholds to control respawn: reload-on-rss and evil-reload-on-rss.</i><p>...<p><i>However, since worker respawn is expensive (i.e. there are warm-up costs, LRU cache repopulation, etc..)</i><p>For a smaller scale, I always wondered if FastCGI being the &quot;default&quot; would have saved a lot of headaches.  Your workers just get recycled automatically all the time.<p>If you can make your startup fast enough (and I think most apps can), then you can just let the OS do its job.  Although it&#x27;s true that Python can be really slow to start if you import many modules...<p><a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24683304" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24683304</a>')