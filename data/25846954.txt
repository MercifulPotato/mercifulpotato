Item(by='ilaksh', descendants=None, kids=[25847296, 25847040], score=None, time=1611153727, title=None, item_type='comment', url=None, parent=25846347, text='I hope people will click into this comment after it gets buried&#x2F;hidden.<p>I know I felt a constant social pressure to learn vim or emacs over the years in order to fit in with those religions.<p>I gave in to that social pressure early on.  But even 30 years ago in the early 90s when I started learning vim (and Linux), vim and emacs were very dated programs.<p>Over the course of thirty years I have managed to finally learn how to set up syntax highlighting, terminal colors, and spaces vs tabs and do a basic cut and paste operation.  But the cut and paste never works in a sensible way for me and I always end up having to fix something after pasting.  So I am probably still doing that wrong after thirty years. Lol.<p>I suggest using sshfs or Docker and then you can just use a graphical client.  Even gedit is a huge advantage over vim in my opinion (especially if you also have fish in another window). I like how lightweight and simple it is and I think it&#x27;s really underrated.  But also VSCode, Sublime, maybe Atom.  Maybe WebStorm.<p>There is nothing wrong with using nano in the terminal.  It&#x27;s more modern than vim and probably going to be much more productive.  I recommend if you are embarrassed about using nano and someone asks, think of it as if someone asked you if you are Christian or Jewish.  You can just say you are agnostic about editors, and use a modern tool.<p>Also take a look at TextAdept in the terminal.  It is customizable with Lua.<p>I really like Jupyter Notebooks for lots of things.  It&#x27;s a great implementation of literate programming, especially if you take advantage of the markdown to explain things thoroughly.  Of course a lot of teams are not going to like that but there are projects where you can.<p>Back in the early 90s there was this thing called Borland Turbo Pascal which had things like mouse usage, automatic syntax highlighting, F1 for instant contextual help, an integrated debugger. Those were the days.  Lol. You can configure vim to do all of those things in kind of a janky way, but it&#x27;s so convoluted, I feel like they should award a PhD if you achieve that.  And they don&#x27;t.  So it&#x27;s not worth it.<p>People love to glorify the &quot;power&quot; of vim commands.  But it&#x27;s not that way because the original author knew some secret to power editing.  It&#x27;s that way by default, because when it was created, commands and modes were the paradigm by default because of historical terminal limitations.   A few people were still using Teletype at that time.  Real-time editing was not even a thing.<p>The terminal they initially developed vi on did not have separate cursor keys.  That&#x27;s why it doesn&#x27;t use cursor keys, not because it&#x27;s some deliberate choice they made to save time and be more &quot;advanced&quot;.<p><a href="http:&#x2F;&#x2F;xahlee.info&#x2F;kbd&#x2F;keyboard_hardware_and_key_choices.html" rel="nofollow">http:&#x2F;&#x2F;xahlee.info&#x2F;kbd&#x2F;keyboard_hardware_and_key_choices.htm...</a><p>I just feel like not only are people repeating the mistakes of their fathers, but even their grandparents at this point.  It&#x27;s not 1978 anymore.  It&#x27;s 2021.')