Item(by='krimeo', descendants=None, kids=None, score=None, time=1602855985, title=None, item_type='comment', url=None, parent=24796432, text='&gt; If you don&#x27;t need K8S then don&#x27;t use it. What&#x27;s the problem? Run your app on your server and ignore everything else.<p>See the original comment you replied to, he is clearly complaining about the whole infrastructure and solutions getting too complex for very little benefit, I just elaborated on that point because there is some truth to it. It is <i>not</i> the case for your scenario handling billions of requests per day in multiple regions - that&#x27;s where it makes a lot of sense to use k8s! But very few applications need that.<p>&gt; It&#x27;s a container and can be as thin or fat as you want with it&#x27;s contents.<p>But you can&#x27;t rely on the platform, except for the kernel because linux kernel ABI is stable hence why the containers are done in this way. I am not complaining about it, I am exaplning the reasoning. Now imagine if you could rely on and share more services provided by the platform that just the kernel ;).<p>&gt; I don&#x27;t care about the ABI and don&#x27;t see why that&#x27;s relevant<p>Fair enough but then I don&#x27;t understand why you replied to my comment saying the containers are designed in this way because of unstable userpace ABI if you don&#x27;t care about this.<p>&gt; &quot;I want my application to reliably and quickly serve my customers and be easy to maintain and debug.&quot;\n&gt;&gt; That&#x27;s what K8S helps with<p>For certain solutions, absolutely! For other solutions a simple stateful applications is simpler and easier to maintain and debug (again, that&#x27;s how I read the first comment in this thread).')