Item(by='throwaway2048', descendants=None, kids=[24816701, 24816984], score=None, time=1603002552, title=None, item_type='comment', url=None, parent=24815839, text='RISC is a misleading name, the concepts of its design are not really based around the idea of a &quot;Reduced Instruction Set&quot; as in &quot;small&quot; per se, nor are CISC machines necessarily a large size instruction set.<p>It is much more about the design of the instructions, generally RISC instructions take a small, fixed amount of time and conceptually are based on a sort of minimum unit of processing, with a weak to very weak memory model (with delay slots, pipeline data hazards, required alignment of data etc) with the compiler&#x2F;programmer combining them into usable higher level operations.<p>CISC designs on the other hand happily encode large, arbitrarily complex operations that take unbounded amounts of time, and have very strong memory models (x86 in particular is infamous here, you can pretty much safely access memory, without any alignment, at any time, even thought often the result will be slow, it wont crash)<p>As an example, the PDP-8 has fewer than 30 instructions, but is still definitely a CISC architecture, some ARM variants have over 1000 instructions but are still definitely RISC.<p>RISC is about making building processors simpler, not about making instruction sets and programming with them necessarily simpler.')