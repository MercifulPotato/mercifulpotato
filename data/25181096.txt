Item(by='demosito666', descendants=None, kids=[25181724], score=None, time=1606079082, title=None, item_type='comment', url=None, parent=25180640, text='&gt; For us mortals, SELinux is a synonym for &quot;complicated, scary thing that I don&#x27;t know how to use properly&quot;.<p>This is true, but I was referring more to the underlying architecture of Douane: kernel module + daemon + dialog UI + configurator app. Is a kernel module less scary for mere mortals? Because the downsides of that path are stated in the banner on the main page which says about kernel panic.<p>&gt; Can you link to something with minimal working &quot;mark and block&quot; examples?<p>I&#x27;m not aware of any myself, but like I said, I was mostly referring to implementation. I also don&#x27;t quite get the threat&#x2F;defense model here. It looks like the idea is to replicate something similar to iOS&#x2F;Androind permissions (&quot;do you allow this app to access the camera?&quot;) but for network this seems to be a bit weird. Making such decision for each application would be quite annoying, so you&#x27;d like like to have some defaults in this regard, which again is easier solved by two predefined selinux contexts (with&#x2F;without networking) and some UI for the user to move apps between them.<p>But then again, if we decide not to ask for confirmation for each app at exactly the first moment it tries to access the network, we have access to a variety of tools to provide access control to the network. For example, we could use separate network namespaces for different processes, some of which wouldn&#x27;t have access to networking. This has additional benefit of fine-grained control: &quot;allow chrome to only access my.secure.server.com on port 433&quot;.<p>In fact, it goes beyond that: we can have different routing tables per app, we can setup traffic shaping between the apps (&quot;put traffic from qBittorrent into low-priority queue&quot;), we can bridge and mirror the traffic from an app, etc. This is for example what firejail does [1] and it has a UI as well [2]. This doesn&#x27;t require any kernel modules or even selinux policies and doesn&#x27;t bug the user 10 times a day.<p>[1] <a href="https:&#x2F;&#x2F;firejail.wordpress.com&#x2F;documentation-2&#x2F;basic-usage&#x2F;#networking" rel="nofollow">https:&#x2F;&#x2F;firejail.wordpress.com&#x2F;documentation-2&#x2F;basic-usage&#x2F;#...</a>\n[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;netblue30&#x2F;firetools" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;netblue30&#x2F;firetools</a>')