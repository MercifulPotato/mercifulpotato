Item(by='yawaramin', descendants=None, kids=None, score=None, time=1605559758, title=None, item_type='comment', url=None, parent=25115697, text='&gt; there are multiple &quot;standard&quot; libraries used across the ecosystem (because the ecosystem has deemed &quot;the one that ships with OCaml&quot; to be inadequate) which makes integrating libraries throughout the ecosystem tedious and painful, especially to new OCaml developers.<p>OK, let&#x27;s examine this a bit more. There is one (two, depending on how you look at it) <i>main</i> competitor to the OCaml standard library: Jane Street&#x27;s Core&#x2F;Base libraries. JSC is a high-quality, production-grade standard library replacement meant for use in applications. However it uses the same basic types (list, array, result etc.) as the OCaml Stdlib, so I don&#x27;t see where your &#x27;integration&#x27; issues are coming from. Can you give a specific example?<p>&gt; No, I expect an abundance of tutorials that explain how to build production-grade applications, soup to nuts. E.g., for a generic CRUD app, what are the best frameworks, ORMs, etc to use, how to integrate them, etc?<p>OK, I provided one such tutorial in my previous comment. I&#x27;m sure more will come in time, as the community is still evolving. There is also the OCamlverse wiki which tries to distill a lot of community knowledge: <a href="https:&#x2F;&#x2F;ocamlverse.github.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;ocamlverse.github.io&#x2F;</a><p>&gt; Yes, but it&#x27;s incredibly difficult to configure properly, or at least that was my experience when I got started. I&#x27;m actually not sure if I ever got it working with vim.<p>If you use the community recommended Dune build system to run your builds, Dune generates .merlin files automatically. And if you use VSCode with the OCaml and Reason IDE extension, it picks up on those .merlin files and provides editor support pretty much out of the box. This has been the case for at least a couple of years now.<p>&gt; ReasonML&#x27;s support was pretty abysmal--it seemed like native compilation was neglected altogether ... and the integrations with the rest of the ecosystem (e.g., how to build native programs, link against ocaml dependencies, integrate with editor tools, etc) were either poorly documented or inadequate&#x2F;incomplete or both. No doubt some of that has improved in the intervening years, but I&#x27;m doubtful that it has significantly improved.<p>It&#x27;s been the case for quite a while now that Dune and odoc--two main tools in the OCaml toolchain--support Reason syntax out of the box. Again, if you are using Dune, you can use Reason syntax immediately, with no special setup. This is documented.<p>&gt; You&#x27;ve provided the same unhelpful, pat answers that the OCaml community provides.<p>No, I&#x27;ve asked you to <i>read the documentation</i> and <i>do your research</i> before making claims. Not even Rust and Go are as &#x27;trivial&#x27; to use as you make them sound. They have all had their editor support and library issues. OCaml maintainers and contributors are trying just improve the situation in OCaml just as much as their Rust&#x2F;Go counterparts. But you have to meet them partway. They can&#x27;t spend massive amounts of time marketing every single OCaml ecosystem improvement--otherwise they&#x27;d have no time to make the improvements.')