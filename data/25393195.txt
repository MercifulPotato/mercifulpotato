Item(by='chartpath', descendants=0, kids=None, score=1, time=1607729821, title='Ask HN: How do you mentor developers?', item_type='story', url=None, parent=None, text='Without being a manager, if you want to stay on the same team and share work while coaching people, how can you:<p>a) Prevent mediocrity from being &quot;too nice&quot; (e.g. allowing classic things like treating every problem as web&#x2F;CRUD, too many layers of DALs or object hierarchies or using nested set tree traversal instead of materialized path when it&#x27;s called for)<p>b) Get people to focus on the consequences of their design decisions when they affect the users&#x2F;product, even if the implementation required to handle them might not be available with existing&#x2F;obvious tools, or as my CEO said today &quot;slow is smooth and smooth is fast&quot;, so get people to take it slow in the right way<p>c) Encourage critical thinking and asking questions over copy&#x2F;pasting stack overflow or top google results, learning about evolution and historical rationale of a design&#x2F;problem<p>d) Without offending anyone<p>I&#x27;m working on how to communicate without being condescending or dismissive and finding it hard. When I was in management positions in the past I could just make these decisions and people would be fine with it because I would take final responsibility, but since deciding to go deeper into IC territory, I find myself needing to persuade less experienced colleagues more often. I like teaching but don&#x27;t want to be paternalistic, and sometimes I just want people to learn fast and use the guard rails provided, or spend the time to climb a difficult learning curve.<p>How do you do it?')