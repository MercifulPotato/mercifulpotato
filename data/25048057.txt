Item(by='elamje', descendants=None, kids=[25048297, 25049821, 25049156], score=None, time=1605027269, title=None, item_type='comment', url=None, parent=25047409, text='As someone who uses .NET daily, but loves Clojure and other functional programming paradigms - Records seem like a very compelling feature. Immutable data structures without any hassle to set up. Simply write “record” where you would normally write “class” and boom, you are working with immutable objects. This is one step closer to one the best features of Clojure IMO -everything is immutable.<p>Additionally, there seems to be another new way to accomplish this. Normally class properties are accessed via get; and set;<p>Now we have the ability to use get; and init; which effectively makes the object immutable&#x2F;read only after initialization. The syntax is just a little cleaner and more obvious to the reader how the property should be used.<p>C# has really been adding some great features the past few years and is certainly getting more expressive and concise which I appreciate.')