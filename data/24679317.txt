Item(by='kortex', descendants=None, kids=None, score=None, time=1601821907, title=None, item_type='comment', url=None, parent=24676674, text='I totally get your point, but that&#x27;s still below the level of abstraction I&#x27;m talking about. Basically it boils down to, python&#x27;s main trick <i>is</i> metaprogramming. If your interprocess optimization is a bottleneck, then write a framework which lets you put those pieces together under the hood.<p>&gt; Furthermore, Julia has much power powerful metaprogramming facilities than Python does.<p>Until someone writes a way to import julia code directly into python&#x2F;autogenerate it from python. Anyone who says &quot;well then you&#x27;re not really writing <i>python</i>&quot; is missing the whole point: writing python is all about exactly this sort of tip-of-the-abstraction-iceberg trickery.<p>Sure, you can call python from Julia as well. So it boils down to &quot;which is the better glue language?&quot; This isn&#x27;t a competitive thing, it&#x27;s just literally what Python is meant to do.<p><a href="https:&#x2F;&#x2F;pyjulia.readthedocs.io&#x2F;en&#x2F;latest&#x2F;usage.html" rel="nofollow">https:&#x2F;&#x2F;pyjulia.readthedocs.io&#x2F;en&#x2F;latest&#x2F;usage.html</a>')