Item(by='sillysaurusx', descendants=None, kids=None, score=None, time=1604285508, title=None, item_type='comment', url=None, parent=24963821, text='(The following comment may not have anything to do with Haskell’s use of the word “name,” but I’ve wondered about this for a long time.)<p>Forcing someone to write iFoo instead of foo isn’t type safety, but it’s a certain kind of safety that I haven’t seen clearly spelled out. Actually I recall Joel on Software mentioning it once.<p>I don’t <i>like</i> it, but it’s always seemed interesting. Another example is in lisp:<p><pre><code>  *current-input-port*\n</code></pre>\nto indicate that a variable is dynamic, you can end it with an asterisk. But this is only a convention. I’ve always felt that LET should automatically do dynamic binding for any name that ends with <i>. But then of course that runs into surprising corner cases when the user wants to e.g. write foo-+ foo-&#x2F; foo-</i> foo—<p>You could argue that names aren’t <i>type</i> safety, but I would disagree that they aren’t <i>any</i> kind of safety. A good naming convention is one of the safest ways to program in an otherwise hostile domain. But that raises the question: what kind of safety is it? I’m not sure it even has a name, other than Hungarian notation, which is both imprecise and not sufficiently general for the concept.<p>EDIT: Ah, the post was “Making Wrong Code Look Wrong” by Joel on Software: <a href="https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2005&#x2F;05&#x2F;11&#x2F;making-wrong-code-look-wrong&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2005&#x2F;05&#x2F;11&#x2F;making-wrong-code-...</a> (with discussion from 11mo ago: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21482993" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21482993</a>)<p>The idea really should have a name.')