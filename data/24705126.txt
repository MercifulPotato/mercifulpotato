Item(by='manigandham', descendants=None, kids=[24705821], score=None, time=1602042730, title=None, item_type='comment', url=None, parent=24703197, text='Saying &quot;built for speed&quot; doesn&#x27;t really mean much. .NET created the async Task model that other languages adopted and has all kinds of performance related features from Span&#x2F;Memory APIs to SIMD vector operations.<p>AOT doesn&#x27;t have anything to do with performance but helps with startup time and packaging. The .NET JIT now has tiered compilation with secondary passes that optimize hot methods with much more input about the environment, including knowing that it&#x27;s a hot path.  AOT can&#x27;t do this.<p>C++ and Rust are faster because they don&#x27;t have a managed runtime, and Rust&#x27;s major innovation was moving as much of the memory management into a strong build-time analysis to ensure it&#x27;s properly access. You can build low-allocation or more manual memory management with .NET and get very similar performance. RavenDB is an example of an fast document database built in .NET Core: <a href="https:&#x2F;&#x2F;ravendb.net&#x2F;" rel="nofollow">https:&#x2F;&#x2F;ravendb.net&#x2F;</a><p>Your comments are surprising since you seem to have experience F# and other languages and yet it sounds like you haven&#x27;t used any modern .NET version.')