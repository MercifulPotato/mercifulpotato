Item(by='celrod', descendants=None, kids=None, score=None, time=1611149614, title=None, item_type='comment', url=None, parent=25845599, text='I have on occasion, and when working on custom array types I&#x27;ve added support for being offset with optionally compile-time known offsets.\nAs StrideArrays.jl matures and I write more libraries making use of it, I may use 0-based indices more often. The idea of dynamic offsets when they aren&#x27;t needed bothers me, even though I&#x27;ve benchmarked that as being pretty meaningless.\nThe bigger problem is just that OffetArrays are a wrapper, and there&#x27;s a Julia bug where TBAA information on wrappers often gets lost, so that the compiler reloads the pointer you&#x27;re loading from on every iteration of a loop. Aside from that being slow itself, it also causes the autovectorizer to fail. This causes a severe regression when it occurs. Performance should be fine in other cases.\nLoopVectorization or `@simd ivdep` should also avoid the problem.<p>For the most part, my preference on 1 vs 0 is weak,  and for coffee other people are likely to look at i do want to make it easy to understand &#x2F; not full of surprises.')