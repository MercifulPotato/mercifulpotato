Item(by='dragonwriter', descendants=None, kids=None, score=None, time=1602229044, title=None, item_type='comment', url=None, parent=24725957, text='&gt; So, going back to the max() function example: I believe, based on the way the courts are looking at it, that the parts that are essential to its function are the fact that it takes two numbers and returns the greater of the two, and perhaps also the fact that it is named &quot;max&quot;.<p>&gt; Its being placed into class named java.lang.Math, though, is not.<p>Its not essential to the function of the <i>library function</i>.<p>It essential to the function of the <i>API</i>, which is to interface between the code in the library and consuming code, including (in the case of the APIs used in Android) consuming source code (though not complete existing applications, for various reasons that Oracle wants to be given the weight of negating the idea that interoperability is the purpose <i>at all</i>, despite the fact that this is simply false) designed for the existing Java APIs.<p>&gt; However, if the interface to their tax preparation software were arranged identically to TurboTax&#x27;s, to the extent that a set of automated UI tests written against TurboTax would also work with H&amp;R Block&#x27;s app, then we would likely be looking at a case of copyright violation.<p>The problem with that analogy is that it is self-evident that being mechanically identical is <i>not</i> a functional requirements (though it may be advantageous) for a human-software interface to work, because humans are intelligent actors that can figure out a UI, within some bounds. On the other hand, a client code unit consuming an API cannot intelligently &quot;figure out&quot; a different API than the one it was designed for: the API is, to the extent that it is intended to support the same functionality, either identical or nonfunctional.<p>Well, the other problem is that the actual legal precedent on look and feel (while not necessarily decisive because the Supreme Court successfully dodged the issue) goes the other way, anyhow. But even if you were right that an identical interface would be infringing as copying expressive components not essential to functionality for a UI, the analogy fails for an API because of the different requirements for functionality.')