Item(by='StefanKarpinski', descendants=None, kids=[24711493], score=None, time=1602095832, title=None, item_type='comment', url=None, parent=24711063, text='If I understand the benefits of HTTP&#x2F;3 correctly, this post also doesn&#x27;t address one of the major ones: seamless connection handoff during client mobility. Earlier HTTP versions are TCP-based, so if the IP address of a mobile client changes, e.g. because of moving from one cell tower to another or from wifi to&#x2F;from cell, then the application layer has to notice the lost connection, create a new connection, and move whatever application-level context there is to the new connection. Not all applications do this, and even when they do, it&#x27;s slow. If my understanding is correct, with HTTP&#x2F;3 that&#x27;s no longer necessary — the same HTTP&#x2F;3 connection can migrate from one IP address to a different one.<p>Another benefit that isn&#x27;t measured in this post but has been mentioned elsewhere in the comments here is that the experience on flaky wireless connections (without changing IPs) should be much better. TCP was designed on the premise that packet loss almost never due to physical failure to transmit a packet, and almost always due to routers queues being full (i.e. network congestion). Wireless networks violate this assumption badly: physical-layer issues are the most likely cause of packet loss on a wireless connection. TCP reacts to wifi packet drops by backing off, assuming that some router is overloaded, but the routers are fine — it&#x27;s just last hop signal that&#x27;s bad. In those circumstances, the client should just try again instead of throttling the connection to nothing. Since HTTP&#x2F;3 uses UDP, it can potentially handle dropped packets more appropriately.')