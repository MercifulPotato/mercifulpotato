Item(by='kdkeyser', descendants=None, kids=[25083870], score=None, time=1605281980, title=None, item_type='comment', url=None, parent=25082589, text='For me, the value of a module is that you can describe a set of multiple types and the functions that operate on these types, all in one place. In OO, there is essentially one type that is &quot;special&quot;, the type of the class you define.<p>The power of the Ocaml module system is really in the functor, which the article only touches upon. You define a module and refer in its definition to types&#x2F;functions of other modules that must be provided at the time you construct the module. Even better, you can define relations between the types and do type substitutions, e.g.: to construct this module, you need to give me 2 other modules, each with a specific set of functions, and for which type t1 of the first module, matches type t2 of the second module, while the actual type of t1&#x2F;t2 does not matter.<p>See <a href="https:&#x2F;&#x2F;dev.realworldocaml.org&#x2F;functors.html" rel="nofollow">https:&#x2F;&#x2F;dev.realworldocaml.org&#x2F;functors.html</a> for more examples.')