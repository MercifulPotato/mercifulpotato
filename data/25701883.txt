Item(by='JabavuAdams', descendants=None, kids=[25701908], score=None, time=1610210802, title=None, item_type='comment', url=None, parent=25699896, text='The thing is correctness should not be viewed as the role of the language alone. You have to look at the whole ecosystem and organizational engineering practices.<p>Obviously people were writing life-critical code in C or ASM. You wouldn&#x27;t expect a car manufacturer to write an ECU in the same way a game dev studio writes a game, but C and ASM can accommodate both.<p>From my experience Haskell seems to make easy things hard. It&#x27;s the same mistake as a small startup thinking they need to do whatever Google &#x2F; Facebook &#x2F; Amazon are doing, when they&#x27;re operating at one millionth the scale.<p>EDIT&gt; By not focusing on correctness as the role of the language alone, you have a smooth path from quickly iterating in a non-safety-critical environment to whatever level of safety you need. In engineering safety is empirical, anyway. You don&#x27;t just build a system and then assume it will work absent tests, so the idea of getting the code perfect is a bit of a red herring. You&#x27;re going to have to test it rigorously anyway before anyone will get on your airplane.')