Item(by='lmm', descendants=None, kids=[25262093], score=None, time=1606793889, title=None, item_type='comment', url=None, parent=25261837, text='&gt; Lack of deniability is strictly a downside in a messaging protocol. Applications built on top of messaging protocols that want non-repudiability can provide it directly, using signatures. You almost never want non-repudiable messages between ordinary people.<p>A protocol where messages are both authenticated and repudiable is pretty confusing to ordinary people; in real life most forms of identity authentication (e.g. wet-ink signatures, government ID cards) are non-repuidable. In any case for ordinary people the whole question is moot, because actual in-practice repuidability relies on regularly publishing old session keys etc. in a way that ordinary people don&#x27;t, because the UX is nowhere near good enough (and may never be).<p>&gt; I also dispute that subkeys are reasonably looked at as a forward secrecy feature. Most uses of subkeys, and virtually all of the tooling, are about having a hardware root of trust tied to shorter-term software keys.<p>I don&#x27;t see that there&#x27;s any contradiction between that and the forward secrecy use case? A root of trust tied to shorter-term keys (that are destroyed in due course) is exactly what you need for forward secrecy.')