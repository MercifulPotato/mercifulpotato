Item(by='qudat', descendants=None, kids=None, score=None, time=1608253240, title=None, item_type='comment', url=None, parent=25453421, text='As someone who architects FE codebases for a living I both agree and disagree with you.<p>React hooks definitely threw a wrinkle in the testability of react components.  However, the ideas around how the FE should be tested has changed to the point where current thinking is that integration tests are the most valuable tests you can write.  Testing what a react component does in isolation of redux or its side-effects is easy to do and also not incredibly useful.<p>Furthermore, many modern codebases still use redux.  I still advocate for it.  Using hooks and redux are not mutually exclusive.<p>I wish there was something better than hooks, it’s very easy to forget a dependency or get into infinite loops, but they do make life much easier.  No more mapStateToProps or mapDispatchToProps HoCs.  No more “smart” vs “dumb” components.  No more function&#x2F;class components.  There’s only one component.<p>Also, we are seeing an increase in “headless” react libraries, where the logic of some functionality is disconnected from the visual design of a set of components.  It makes composition, extendability, and maintainability much easier.')