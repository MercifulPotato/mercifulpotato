Item(by='atweiden', descendants=None, kids=[25786541], score=None, time=1610664003, title=None, item_type='comment', url=None, parent=25780607, text='As someone who wrote a limited amount of Perl 5 before writing a not\ninsignificant amount of Perl 6 (now Raku), I find Raku syntax to be\ndeeply Perlish while also being more modern and internally consistent\nthan Perl 5.<p>IMO Raku has three standout features:<p>1. Grammars in the stdlib [1]<p>2. The absolute most flexible multi-dispatch system of any programming language [2]<p>3. The best regex syntax of any programming language [3]<p>In 2015, I had to write a DSL for a double-entry accounting system. That&#x27;s when I discovered @jnthn&#x27;s Perl 6 grammar debugger [4], which allowed stepping through a Perl 6 grammar line by line and visually seeing how the grammar was consuming a string. At that time I had very little programming experience, which made Perl 6 far and away the easiest way to write a custom DSL parser.<p>If you enjoy Erlang&#x2F;Elixir multi dispatch, e.g.<p><pre><code>    def format({:ok, %HTTPoison.Response{body: body, status_code: 200}}) do\n      body\n      |&gt; Meeseeks.parse(:xml)\n      |&gt; Meeseeks.all(xpath(&quot;&#x2F;*&quot;))\n      |&gt; Enum.map(&amp;Meeseeks.tree&#x2F;1)\n      |&gt; _format\n    end\n\n    defp _format([{&quot;current_observation&quot;, _version, current_observation}]) do\n      current_observation\n      |&gt; Enum.map(&amp;_format&#x2F;1)\n      |&gt; Enum.filter(&amp; &amp;1)\n      |&gt; Enum.into(Map.new())\n      |&gt; Poison.encode!()\n    end\n\n    defp _format({&quot;credit&quot;, _, [credit]}) do\n      {:credit, credit}\n    end\n\n    defp _format({&quot;credit_URL&quot;, _, [credit_url]}) do\n      {:credit_url, credit_url}\n    end\n</code></pre>\nRaku does that in an even more flexible manner, destructuring included. I love how declarative it makes the code read.<p>However, I must say I&#x27;ve left the honeymoon phase of Raku far behind me now. In my experience, Raku grammars are insanely slow: at least as of many years ago, it was taking ~40 minutes to parse a ledger-style accounting format log file that wasn&#x27;t even very big. When jnthn&#x27;s grammar debugger got really buggy and less actively maintained, that defeated one of the biggest reasons I had to use the language. I&#x27;ve also experienced numerous bugs with Raku&#x27;s type system, and just in general wouldn&#x27;t write many things in Raku.<p>But to your question — I would write even less things in Perl 5. I have no use for Perl 5 now that Raku exists, and don&#x27;t know why anyone would write Perl 5 in the modern day given how many other compelling options exist in its niche. Raku is different, and it deserves to see top caliber core development. It doesn&#x27;t have that yet, and that&#x27;s sad.<p>Frankly Raku isn&#x27;t capable of replacing really any mature programming language for anything but informal scripting tasks where you don&#x27;t care about speed, and where you don&#x27;t need an “academic” tier type system. For those tasks, it is quite a fun language. I remain optimistic about Raku&#x27;s future, and would seriously question the conventional wisdom of using Python or JS in its place for many, many things.<p>[1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;atweiden&#x2F;config-toml&#x2F;blob&#x2F;master&#x2F;lib&#x2F;Config&#x2F;TOML&#x2F;Parser&#x2F;Grammar.pm6" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;atweiden&#x2F;config-toml&#x2F;blob&#x2F;master&#x2F;lib&#x2F;Conf...</a><p>[2]: <a href="https:&#x2F;&#x2F;github.com&#x2F;atweiden&#x2F;txn-remarshal&#x2F;blob&#x2F;master&#x2F;lib&#x2F;TXN&#x2F;Remarshal.pm6" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;atweiden&#x2F;txn-remarshal&#x2F;blob&#x2F;master&#x2F;lib&#x2F;TX...</a><p>[3]: <a href="https:&#x2F;&#x2F;docs.raku.org&#x2F;language&#x2F;regexes" rel="nofollow">https:&#x2F;&#x2F;docs.raku.org&#x2F;language&#x2F;regexes</a><p>[4]: <a href="https:&#x2F;&#x2F;github.com&#x2F;jnthn&#x2F;grammar-debugger" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jnthn&#x2F;grammar-debugger</a><p>[4]: <a href="https:&#x2F;&#x2F;vimeo.com&#x2F;32044632" rel="nofollow">https:&#x2F;&#x2F;vimeo.com&#x2F;32044632</a>')