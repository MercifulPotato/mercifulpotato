Item(by='dalke', descendants=None, kids=None, score=None, time=1602334984, title=None, item_type='comment', url=None, parent=24737327, text='Sure, but you can only do that if either that&#x27;s a way to express what you want directly or, in the example you gave, there&#x27;s a common idiomatic style that the compiler can recognize and handle.<p>What is the idiomatic way to write the popcount of the intersection of two 256-byte byte strings? My C code is:<p><pre><code>  static int\n  byte_intersect_256(const unsigned char *fp1, const unsigned char *fp2) {\n      int num_words = 2048 &#x2F; 64;\n      int intersect_popcount = 0;\n\n      &#x2F;* Interpret as 64-bit integers and assume possible mis-alignment is okay. *&#x2F;\n      uint64_t *fp1_64 = (uint64_t *) fp1, *fp2_64 = (uint64_t *) fp2;\n\n      for (int i=0; i&lt;num_words; i++) {\n          intersect_popcount += __builtin_popcountll(fp1_64[i] &amp; fp2_64[i]);\n      }\n      return intersect_popcount;\n  }\n</code></pre>\nI haven&#x27;t figured out the Julia way to write it so it would use the POPCNT instruction (if available), the AVX2 popcount technique (if available), or the VPOPCNTDQ AVX-512 instruction (if available) - falling back, I suppose, to the SSSE3 and Lauradoux implementations - the last being the fastest generic C implementation I found. (See <a href="https:&#x2F;&#x2F;jcheminf.biomedcentral.com&#x2F;articles&#x2F;10.1186&#x2F;s13321-019-0398-8&#x2F;tables&#x2F;1" rel="nofollow">https:&#x2F;&#x2F;jcheminf.biomedcentral.com&#x2F;articles&#x2F;10.1186&#x2F;s13321-0...</a> ).')