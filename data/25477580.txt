Item(by='schwartzworld', descendants=None, kids=None, score=None, time=1608388042, title=None, item_type='comment', url=None, parent=25457064, text='&gt; You should have a core (pure) functional component, that doesn&#x27;t perform network requests, and an outer component for side effects<p>IMO, this is the biggest thing we lost with hooks. Before there were two different types of component, and you couldn&#x27;t make a pure functional component stateful or effectful without completely rewriting it.<p>I love hooks, but I&#x27;m constantly asking in code reviews &quot;are you sure this is where you want this state to live?&quot;.<p>The other big problem with hooks is that there are no safeguards (and little documentation) about using them wrong. The post you&#x27;re responding to mentions using `useEffect` to toggle a loading spinner. This might make sense if the loading spinner is outside the React component tree, but if you&#x27;re using useEffect to toggle some piece of React state, yer doin it wrong. Once you start slipping these kinds of hacks into a codebase, it&#x27;s a slippery slope.')