Item(by='mschuster91', descendants=None, kids=[25252087], score=None, time=1606727399, title=None, item_type='comment', url=None, parent=25250525, text='I agree with the majority of your post, but this part here is flat out wrong:<p>&gt; You know why open source hardware is expensive for lower quality? Because Apple pays the premium on the premium quality stuff. But I&#x27;m that process they also drive up the prices.<p>Hardware is <i>hard</i>. Some Atmel or whatever low brain microcontroller can be had on a board with hand-painted selfmade-etched circuits or shoddy breadboard stuff, at the frequencies these things operate signal integrity doesn&#x27;t really matter.<p>But anything with a brain powerful enough to run Linux? Then you&#x27;re delving into differential signalling at extremely high frequencies - which means you have to <i>precisely</i> account for trace widths, trace thickness and trace length matching simply to ensure that the signal from your CPU arrives at your RAM chip intact. You&#x27;ll ned an awful lot of awfully precise voltage levels other than 3v3&#x2F;5v, with equally precise requirements on timing in getting them up. You also won&#x27;t be able to get away with a two layer board, you&#x27;ll need three or more layers and a lot of vias - and now, you can&#x27;t manufacture your own prototypes any more but need to order at a PCB shop which means you either pay through your nose for speedy turnaround and low volume or wait for weeks for pool orders.<p>And once you have the PCB you&#x27;ll need to populate and solder it - where you will run into such nasty things as minimum order quantities and the need for a pick-and-place machine if you don&#x27;t want to go nuts. And if that&#x27;s not enough, have fun with NDAs and no support for hobbyists by big SoC vendors due to small volumes (I have extensively written about that topic here: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25208056" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25208056</a>).<p>The best solution if you needs smarts is to look into either adopting a Raspberry Pi 4 Compute Module if you can get away with its performance, or look into COMexpress if you need serious, up to Intel Xeon scale levels performance - but be warned, designing for <i>that</i> ain&#x27;t exactly easy either.')