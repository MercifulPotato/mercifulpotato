Item(by='jkingsbery', descendants=None, kids=None, score=None, time=1611955919, title=None, item_type='comment', url=None, parent=25961420, text='I probably could at some point. It&#x27;s pretty easy: you do the right commands to generate a Java project from a maven archetype or to start a Rails project, you hook up your git repo to Heroku, tweak some HTML. Today if I wanted to, I could memorize the sequences to stick some node.js inside of an AWS Lambda.<p>There are at least a few problems with this:\n1. I don&#x27;t have to create a basic web app frequently, so I&#x27;ve forgotten the commands. They&#x27;re easy to find with googling. It&#x27;s not worth my time to memorize them. (When I was learning to program in the 90&#x27;s my family didn&#x27;t have Internet access yet, but if you replace &quot;google&quot; with &quot;looking through helpfiles or programming books,&quot; you get the same effect.)<p>2. The kinds of webapps professional software engineers build generally aren&#x27;t &quot;basic.&quot; Webapps at the professional level are complicated. Rather than &quot;an over-reliance on documentation indicate a lack of critical expertise that will ultimately result in considerably lower job performance,&quot; reliance on documentation seems to be more about having more tools at our hands to build software that&#x27;s more maintainable in the long run. We have frameworks&#x2F;services that handle payments, security, storing data, and so on for us. The trade-off for delegating to others solving ancillary problems for you is that you have to read their documentation.<p>3. More and more in my career, I find myself not just googling technology but to try to understand business domains. Our job isn&#x27;t to tell our boss &quot;Here&#x27;s a webapp!&quot; Our job is to solve a customer need, and that involves understanding who the customer is. Could I shovel some code out the door without googling around for something? Maybe, but it probably wouldn&#x27;t be very good.<p>4. All else being equal, I&#x27;d rather work with an engineer who is good at finding information quickly rather than someone who insists on figuring it out. Google is not some magic mind reader - you have to know the names of some of the things your trying to do, you have to assess the likelihood of an approach is worth trying, and even if you do get an answer from Google, you&#x27;ll inevitably need to adapt it in some way to meet your need. Sometimes, it&#x27;s not enough to look it up in Google, you have to reach out to other people, and you need to know how to formulate your question to help others help you. There is skill involved in finding information.<p>5. I look up things that I already know all the time. Just because you know something, that doesn&#x27;t mean you shouldn&#x27;t double check that you know it as well as you think, or that there isn&#x27;t some better answer or solution. For one example within programming, I&#x27;ll look up articles I read 6 years ago that do a good job of explaining an idea to someone before I give feedback on a code review and I have to explain a similar idea.<p>So, engineers don&#x27;t just memorize stuff for the sake of it. Anyone reading this article shouldn&#x27;t feel like they&#x27;re not a real engineer because they can&#x27;t do what the author suggested.')