Item(by='petargyurov', descendants=None, kids=[25320166], score=None, time=1607198541, title=None, item_type='comment', url=None, parent=25317645, text='I think I came across that as well. I didn&#x27;t like it.<p>As far as I understand, there are two ways to handle communication between the Python and ElectronJS:<p>1) Use inter-process communication. Basically, your Python app outputs to stdin and your Electron app consumes the output. Also works the other way. This is what I went with.<p>2) Use a Flask (or equivalent) local web server and have your app send requests to it.<p>I find method 2) a bit hacky and unintuitive for a desktop app. If you are planning on hosting your backend in the cloud this would be a decent solution, but I am not.<p>I had already done some work to turn my Python app into a standalone CLI tool using `click` [0] which made the interaction with ElectronJS very simple. I used `python-shell` [1] for the inter-process communication. I do think that I might not need this once I package my Python app into an .exe -- then Electron should be able to interact with it in some way without caring that it&#x27;s built in Python.<p>You can take a look at my repo here, though it&#x27;s still in its infancy: <a href="https:&#x2F;&#x2F;github.com&#x2F;petargyurov&#x2F;megadetector-gui" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;petargyurov&#x2F;megadetector-gui</a><p>[0] <a href="https:&#x2F;&#x2F;click.palletsprojects.com&#x2F;en&#x2F;7.x&#x2F;" rel="nofollow">https:&#x2F;&#x2F;click.palletsprojects.com&#x2F;en&#x2F;7.x&#x2F;</a><p>[1] <a href="https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;python-shell" rel="nofollow">https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;python-shell</a>')