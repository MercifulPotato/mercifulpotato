Item(by='throwaway-7494', descendants=None, kids=[24975654], score=None, time=1604368235, title=None, item_type='comment', url=None, parent=24975384, text='Your framing is a bit off. How effective can these people really be if they can&#x27;t transfer their knowledge to someone else? Fundamentally it does not matter how effective they are if they can&#x27;t onboard new people and make them just as effective. Whatever company they&#x27;re at has made them single points of failure and they will eventually hit scaling limits and be forced to actually externalize their knowledge and by that point it will probably be too late.<p>If they don&#x27;t understand all this then I recommend moving somewhere else. What you&#x27;ve described is not an effective engineering team. I have worked at a few places where the &quot;OG&quot;s as you say had left (and in one case a team member had actually died) and the part of the codebases they had worked on were essentially derelicts that no one dared touch. The knowledge was lost and there was no way to recover it because the initial engineering team did not plan for scalable practices for knowledge transfer.<p>Fred Brooks said that programming is theory building and he was correct. A codebase is a theory that requires human understanding and requires practices that allow for the semantic maintenance of the theory across the engineering team.<p>Gently bring up the issue of onboarding and effectiveness of new team members with management and see what they think. If they also don&#x27;t see any problems then I doubt there is much you can do to rectify the situation.')