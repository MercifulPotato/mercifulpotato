Item(by='brennen', descendants=None, kids=[24925579, 24925964], score=None, time=1603909444, title=None, item_type='comment', url=None, parent=24920370, text='&gt; I think git in general should copy the approach of Fossil and include issue management and wikis along with the repo, to keep things consistent and avoid vendor lock-in.<p>A few paragraphs I recently wrote elsewhere:<p>The entire state of code forges as a general thing in 2020 is all the evidence you could possibly want that version control systems (Git, I&#x27;m talking about Git) are themselves massively deficient in design.<p>I rant about this all the time, but there is an entire class of argument about how &amp; whether to use GitHub &#x2F; GitLab &#x2F; Gitea &#x2F; Phabricator &#x2F; Gerrit &#x2F; sourcehut &#x2F; mailing lists &#x2F; whatever that would mostly vanish if the underlying data model in the de facto standard was rich enough to support the actual work of software development.  Because it&#x27;s not, we find ourselves in a situation where no widely used DVCS is actually distributed in practice, and the tooling around version control is subject to platform monopolization by untrustworthy actors and competitive moats.<p>Code review should itself be distributed&#x2F;federated, but few of the people involved have incentives to make that happen.  It&#x27;s possible something like <a href="https:&#x2F;&#x2F;github.com&#x2F;forgefed&#x2F;forgefed" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;forgefed&#x2F;forgefed</a> will eventually get traction, and Git has been dominant for long enough that I wonder all the time when we might see a viable successor that learns from its fundamental mistake.  In the meantime we&#x27;re forced to choose from a frankly pretty terrible lot of options in the broad structural sense.<p>(For clarity, I&#x27;m a WMF employee and am involved in the decision to migrate to GitLab.)')