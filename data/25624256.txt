Item(by='midrus', descendants=None, kids=None, score=None, time=1609701527, title=None, item_type='comment', url=None, parent=25622149, text='I worked for a company that followed a similar process. This worked really well, except for one thing which I blame the terrible culture at that company, which is: Some times people would have strong disagreements on how to do something, so you end up with two competing RFCs to solve the same problem, which basically divided engineering into three camps: one for each proposal, and the people which don&#x27;t care.<p>It is not that one of the proposals is wrong and the other is right, it is just that they make different trade offs and the teams&#x2F;engineers behind them have different preferences and backgrounds, probably both would work, with different long term consequences.<p>At this point I think it is where you need A) Strong management&#x2F;tech leads&#x2F;seniors&#x2F;principals&#x2F;architects&#x2F;whatever which can make a call of what direction to take, and B) Clear company principles which would guide those leaders into making the decision, such as &quot;We go with option 1 because we value more simplicity over performance, using external services over NIH, etc...<p>Once a decision is made to resolve the conflict, some people will not be happy. But that&#x27;s better than having everyone unhappy because everyone is blocked on working on competing solutions at the same time.<p>This company I was working for, had a TERRIBLE (the worst I&#x27;ve ever seen) management&#x2F;leaders... (and some of those leaders where even very popular opensource developers) you had the ones that just didn&#x27;t care about anything except they paycheck, and the ones that just said yes to everyone and to everything to keep everyone happy, which led more than once to competing solutions implemented in parallel (just imagine the codebase we had....). I even remember one time some team decided to go crazy with monorepos and building an entire platform of tooling around it and when we asked for the Proposal (our name for RFCs) they just wrote it on the fly and showed it a few days later.... no need to say they had to &quot;invent&quot; the need to make their already built solution &quot;fit&quot;.<p>So yes, this process is great, but you also need 1) Great&#x2F;responsible leaders and 2) A not so shitty culture.')