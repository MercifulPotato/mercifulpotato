Item(by='m45t3r', descendants=None, kids=None, score=None, time=1608642977, title=None, item_type='comment', url=None, parent=25504133, text='&gt; In a purely functional language all four are purely functional, but this is (IMO) needlessly restrictive.<p>I concur. My two favorite languages nowadays (Elixir and Clojure) are far from being purely functional. They are functional enough that mutating state is awkward, but if you do need it it is there.<p>I also think having immutable data structures by default is a saner choice IMO.<p>&gt; It leads to recursion where iteration is more natural, awkward choices of data structures or even plain impossibility of certain algorithms&#x2F;data structures<p>Anecdotal, but I rarely use recursion&#x2F;for loops, opting for defining auxiliary functions that works in one element and using map&#x2F;reduce instead. Really, I don&#x27;t remember the last time I needed recursion to solve a problem (for example, I know recur exists in Clojure, but I never saw it in the code that I work everyday).')