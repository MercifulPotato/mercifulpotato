Item(by='pansa2', descendants=None, kids=None, score=None, time=1603930408, title=None, item_type='comment', url=None, parent=24924448, text='&gt; <i>I often describe Go as the strongly-typed, more performant version of Python.</i><p>I&#x27;ve heard Go described this way several times, but I&#x27;ve found it to be a significantly lower-level language than Python.<p>For example, it&#x27;s much more verbose. In this recent blog post [0], the author converts some C++ code to Go - and it gets <i>longer</i>. 57 lines of C++ become 65 lines of Go. The same code in Python is about 20 lines.<p>In particular, the author&#x27;s Go code requires five lines to do the equivalent of Python&#x27;s `with open(path) as f` and four lines for the equivalent of `word_array = list(word_counts.items())`:<p><pre><code>    f, err := os.Open(path)\n    if err != nil {\n        return err\n    }\n    defer f.Close()\n\n    &#x2F;&#x2F; [...]\n\n    wordArray := make([]WordCount, 0, len(wordCounts))\n    for word, count := range wordCounts {\n        wordArray = append(wordArray, WordCount{word: word, count: count})\n    }\n</code></pre>\n[0] <a href="http:&#x2F;&#x2F;jmoiron.net&#x2F;blog&#x2F;cpp-deserves-its-bad-reputation&#x2F;" rel="nofollow">http:&#x2F;&#x2F;jmoiron.net&#x2F;blog&#x2F;cpp-deserves-its-bad-reputation&#x2F;</a>')