Item(by='AnimalMuppet', descendants=None, kids=None, score=None, time=1607380810, title=None, item_type='comment', url=None, parent=25337852, text='OK, take Excel.  It provided a way for a lot of non-programmers, who didn&#x27;t want to become programmers, to program enough to get their work done.  And that&#x27;s great!<p>But if you look at a graph of the number of people employed as programmers, and you look for the point where that number started to decline because Excel made them unnecessary, well, you don&#x27;t find it.  Excel made simpler stuff available for simpler problems, but it didn&#x27;t address bigger problems, and there were plenty of bigger problems to go around.<p>And when we talk about fundamentally improving programming, we aren&#x27;t talking about improving it for those trying to solve Excel-level problems.  (That&#x27;s still worth doing!  It&#x27;s just not what we&#x27;re talking about.)<p>So if you can create a new Excel for some area, it will take off.  And that&#x27;s great, for the people who can use it.  It won&#x27;t be all of programming, but it will be a paradigm shift <i>for those who use it</i>.<p>Will that be a paradigm shift for all of programming?  Depends on how many people use it.  My bet would be that there is no Excel-like shift (or no-code shift) in, say, the next 20 years, that will affect even 30% of what we currently recognize as programmers.<p>(If you introduce a great no-code thing, and 10% of current programmers shift to use it, and a ton of newcomers join them, that still only counts as 10% by my metric, in the same way that we don&#x27;t really count Excel jockeys as professional programmers.)')