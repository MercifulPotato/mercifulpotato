Item(by='neuland', descendants=None, kids=None, score=None, time=1609791212, title=None, item_type='comment', url=None, parent=25636647, text='I agree the web as a platform for publishing static information is feature complete. You can publish basically any kind of static content you want (news, academic articles, personal sites, business landing pages, restaurant menus, etc) with ~2005 era tech and no JS.<p>But once you start to consider forms and interactive content, the possibilities for expanding interactivity are near endless: raster or vector maps, the spam bot &#x2F; capcha arms-race, custom form widgets (ie. better dropdowns, file upload dropzones, datatables, drag&#x2F;drop items), different connection types or wire protocols (XML&#x2F;JSON vs. binary formats, Websockets, WebRTC, QUIC, more UDP-based stuff in the future), rich API&#x27;s like payments, hardware security dongles, and social networks (webmentions&#x2F;activity-pub&#x2F;etc).<p>Kind of like Excel, these are each must-have&#x27;s for some industry or app. Each one requires a different 10% of core features to work. So, we need them all if the web is going to be an application delivery platform. And for better or worse, it is the current de-facto standard cross-platform apps.<p>But I think this shows an interesting effect: platforms are very unlikely to ever be feature complete. Whereas distinct pieces of software are. PDF is another example of this kind of scope creep.')