Item(by='jrockway', descendants=None, kids=[24793207, 24793184, 24805031, 24804334, 24794166, 24794540, 24796461], score=None, time=1602791417, title=None, item_type='comment', url=None, parent=24792908, text='To some extent, the distributed consensus is kind of the important part.  If you have a bunch of components that don&#x27;t know what state they&#x27;re supposed to be in, you don&#x27;t really have a cluster.  Looking at the marketing documentation (I didn&#x27;t read the code), they just wrote their own consensus and datastore instead of using etcd.  So the underlying fundamental computer science problems still exist, but nobody has been burned by this particular implementation yet.  That doesn&#x27;t inspire much confidence for me; if etcd blows up, at least someone else&#x27;s cluster has blown up in the same way before.  Now if it happens to you, you get to be the first person to debug it.  Fun.<p>In general, I&#x27;m not blown away with Canonical&#x27;s track record.  I used microk8s in its early days and it kind of blew up my coworker&#x27;s computer.  Networking stopped working.  Making a request to localhost:5000 would return an nginx error page, even though nginx wasn&#x27;t running anywhere on that machine or the network.  It even persisted itself through reboots!  We just reinstalled the machine eventually.  It was weird stuff and I haven&#x27;t touched it again.  (I prefer kind locally and k3s for small &quot;real&quot; clusters.)  Then there&#x27;s Snap, major breaking changes to Ubuntu for no reason, etc.  I just don&#x27;t trust Canonical much, and I&#x27;m not quite ready to take a leap of faith on their new distributed database.  But maybe it&#x27;s great, and we&#x27;ll all be using this in a year.  A stopped clock is right twice a day.')