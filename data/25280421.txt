Item(by='d1zzy', descendants=None, kids=[25285687], score=None, time=1606937421, title=None, item_type='comment', url=None, parent=25278712, text='That hasn&#x27;t been the experience for me. I have much fewer questions now than I had when I started to program 30 years ago. Not to say that there aren&#x27;t a lot of new things I don&#x27;t know about that are coming up every day but that doesn&#x27;t impact in any meaningful way my ability to solve real problems with software.<p>What previously was an issue of &quot;I have no idea how to even approach this problem, not to mention write code that solves it&quot; it is now a question of &quot;I have at least 5 ideas how to solve this problem, I need to analyze which one is best solution for this particular context&quot;. It&#x27;s much less about learning the tools and a lot more about how to correctly apply those tools for the right situation. I feel that this latter part could take my entire life but I can definitely tell I&#x27;m getting better at it every year, even if I significantly change the problem domain I work in.<p>As a matter of fact, every time I change the problem domain now I noticed less and less time necessary to become proficient in the new domain as I am able to pull from the experience I gathered previously. Computer science seems like an &quot;infinite&quot; problem domain but actually what I found in practice is that the more problem domains I move through the more I notice similarities and solving the same problem over and over again (albeit, with some small differences which may matter if you work in a performance or resource constrained environment).')