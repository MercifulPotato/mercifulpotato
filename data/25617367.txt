Item(by='jerf', descendants=None, kids=[25617554], score=None, time=1609627775, title=None, item_type='comment', url=None, parent=25616021, text='&quot;&#x27;(a) paint faster vs (b) interactive faster&#x27;&quot;<p>It is only a tradeoff if you&#x27;re at the Pareto optimality frontier [1] for those two things.<p>I <i>seriously</i> doubt that you are. You should absolutely be able to have more of both.<p>I would recommend to you personally two things: Open the debugger, and load a page with an issue on it in any environment. Look at the timeline of incoming resources, not just for how long the total takes but also all the other times. You will learn a lot if you haven&#x27;t done this yet. It will be much more informative than anything we can tell you.<p>Second, once an issue is loaded, right click on almost anything in the page (description, title, whatever) and select &quot;Inspect Element&quot;. Look at how many layers deep you are in the HTML.<p>I also find it useful to Save the Web Page (Complete) once it&#x27;s all done rendering, then load it from disk with the network tab loaded in the debugger. It can give a quick &amp; dirty read on how much time it takes just to render the page, separate from all network and server-side code issues.<p>I have a bit of a pet theory that a lot of modern slowdown on the web is simply how much of the web is literally dozens and dozens of DOM layers deep in containers that are all technically resizeable (even though it is always going to have one element in it, or could be fixed in some other simple way), so the browser layout engine is stressed to the limit because of all the nested O(n) &amp; O(n log n) stuff going on. (It must not be a true O(n^2) because our pages would never load at all, but even the well-optimized browser engines can just be drowned in nodes.) I don&#x27;t have enough front-end experience to be sure, but both times I took a static snapshot of a page for some local UI I had access to that was straight-up 2+ seconds to render from disk, I was able to go in and just start slicing away at the tags to get a page that was virtually identical (not <i>quite</i>, but close enough) that rendered in a small fraction of a second, just with HTML changes.<p>My guess is that fixing the network issues will be a nightmare, because the 5 Whys analysis probably lands you at Conway&#x27;s Law around #4 or #5. But, assuming you also have a client-side rendering issue (I don&#x27;t use JIRA Cloud (yet) but I can vouch that the server product does), you may be able to get some traction just by peeling away an engineer to take a snapshot of the page and see what it takes to produce a page that looks (nearly) identical but renders more quickly. That will not itself be a &quot;solution&quot; but it&#x27;ll probably provide a lot of insight.<p>[1]: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22889975" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22889975</a>')