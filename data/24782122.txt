Item(by='daxelrod', descendants=None, kids=[24786578], score=None, time=1602712547, title=None, item_type='comment', url=None, parent=24781706, text='“Full” init systems tend to need to do things that are hard to secure in a container.<p>Many must run as root, and the reasons not to do that are discussed in the article this HN thread is discussing.<p>Systemd is particularly tricky because it needs to be able to control the cgroups of its child processes, which means the container needs to be granted that capability. See <a href="https:&#x2F;&#x2F;developers.redhat.com&#x2F;blog&#x2F;2019&#x2F;04&#x2F;24&#x2F;how-to-run-systemd-in-a-container&#x2F;" rel="nofollow">https:&#x2F;&#x2F;developers.redhat.com&#x2F;blog&#x2F;2019&#x2F;04&#x2F;24&#x2F;how-to-run-sys...</a> about how to run systemd in a container via Podman, and is a follow up to <a href="https:&#x2F;&#x2F;developers.redhat.com&#x2F;blog&#x2F;2016&#x2F;09&#x2F;13&#x2F;running-systemd-in-a-non-privileged-container&#x2F;" rel="nofollow">https:&#x2F;&#x2F;developers.redhat.com&#x2F;blog&#x2F;2016&#x2F;09&#x2F;13&#x2F;running-system...</a> which discusses why the Docker case is even more difficult.<p>That said, if you just want a process supervisor for a multi process container, there are several more minimal init systems that will work well, for example, supervisord.')