Item(by='applepple', descendants=None, kids=[25905229], score=None, time=1611589127, title=None, item_type='comment', url=None, parent=25903307, text='Callbacks (including those passed to Promise then methods) are a dangerous primitive. I would recommend using awaitable streams like those used in <a href="https:&#x2F;&#x2F;socketcluster.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;socketcluster.io&#x2F;</a> - Or <a href="https:&#x2F;&#x2F;github.com&#x2F;SocketCluster&#x2F;writable-consumable-stream" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;SocketCluster&#x2F;writable-consumable-stream</a> for general purpose.<p>The philosophy of SC and WritableConsumableStream is that the main trunk logic of your system&#x2F;module should declared as a single serial stream and any parallel logic should explicitly branch off from it.<p>With traditional event listeners, there is no such thing as a &#x27;main trunk&#x27; of the logic... The entry points (event listeners) are scattered all over the place and this can cause a lot of possible state permutations when business logic is executed inside those listeners (since you can&#x27;t control the timing of when those event handlers are called).<p>This kind of programming is a good alternative to functional programming as it offers a safe way to asynchronously mutate state.')