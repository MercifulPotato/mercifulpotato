Item(by='pdpi', descendants=None, kids=None, score=None, time=1602630093, title=None, item_type='comment', url=None, parent=24769770, text='&quot;Satisfactory&quot; means different things for different people in different contexts, so a general-purpose malloc might not do as well as you&#x27;d like.<p>The simplest and fastest allocator you could possibly write is something where malloc just increments a pointer into a chunk of memory, and free is a no-op. This is obviously terrible as your system-wide allocator, but you can allocate an arena from the system malloc, then use the simple allocator to chunk out that arena. This is useful for example if you know that a web request has a reasonable upper bound on memory usage. You just allocate that much memory from the system at the start of the request, use the increment allocator for all request-bound objects, then release the arena at the end of the request. One single call to the system&#x27;s somewhat heavy malloc&#x2F;free, many calls to a trivially simple malloc and a no-op free.<p>Other languages don&#x27;t so much &quot;get away with it&quot; as they&#x27;re simply not used for workloads where it matters.')