Item(by='dmitriid', descendants=None, kids=[25024922], score=None, time=1604830198, title=None, item_type='comment', url=None, parent=25020707, text='&gt; any problem you attribute to graphql, will exist in rest. Every single one and more.<p>And then you go on to say:<p>&gt; fine-tune any ad-hoc query<p>REST doesn&#x27;t have ad-hoc queries, so no, this problem doesn&#x27;t exists in REST<p>&gt; itâ€™s much harder to design good resolvers, queries and limits<p>So, it&#x27;s much harder than in REST, but somehow REST has the same problems. Riiiight.<p>&gt;  After all, if you have problems quering complex nested data (and you really objectively need it on a front end) in graphql, it can be only harder to handle correctly in rest, please, please prove me wrong.<p>Once again: in REST you know exactly what your query will be. And even if it&#x27;s hard to query and retrieve nested data, you can optimise that retrieval for that specific REST request you provide. With me so far?<p>GraphQL allows <i>ad-hoc</i> queries of <i>unbounded complexity</i>. This is the one and most significant problem that REST doesn&#x27;t have. With me so far?<p>So, given all that, and given that you&#x27;r saying &quot;it&#x27;s much harder to design good resolvers, queries and limits&quot; in GraphQL, how is handling complex data harder to handle correctly in REST?')