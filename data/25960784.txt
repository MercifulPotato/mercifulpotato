Item(by='cycomanic', descendants=None, kids=[25961329], score=None, time=1611945929, title=None, item_type='comment', url=None, parent=25959902, text='&gt; Between pyodide, pyo3, rust-cpython, and rustpython, I think Pyo3 is the best way to drop in rust in a python project for a speed up, if that is your goal. Some of the demos show using python from rust, but to me the biggest feature is without a doubt compiling rust code to native python modules. I&#x27;m using it to speed up image manipulation backed by numpy arrays.<p>&gt; There’s a setuptools rust [0] extension package that can be used to hook the compilation of the rust into the wheel building or install from source. Maturin [1] seems to be regarded as the new and improved solution for this, but I found that it’s angled toward the using python from rust.<p>&gt; There’s also the rust numpy [2] package by the same org which is fantastic in that it lets you pass a numpy matrix to a native method written in rust and convert it to the rust equivalent data structure, perform whatever transformation you want (in parallel using rayon [3]), and return the array. When building for release, I was seeing speed ups of 100x over numpy on the most matrix mathable function imaginable, and numpy is no joke.<p>What sort of algorithm was that? Generally getting 100x speedup on vectorized code is highly unusual even using handcoded c++. So I suspect it was quite loop heavy? In those cases I have also seen very significant speed ups.<p>I have been using pythran [1] for speeding up my python code. It generally achieves extremely good performance. I have blogged about it here [2] and recently a member used pythran to speed up some nbody benchmarks [3] which was used in an article to argue for using compiled languages.<p>That said I find pyO3 quite exciting and have been contemplating to try it with some of my projects.\n[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;serge-sans-paille&#x2F;pythran" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;serge-sans-paille&#x2F;pythran</a>\n[2] <a href="https:&#x2F;&#x2F;jochenschroeder.com&#x2F;blog&#x2F;articles&#x2F;DSP_with_Python2&#x2F;" rel="nofollow">https:&#x2F;&#x2F;jochenschroeder.com&#x2F;blog&#x2F;articles&#x2F;DSP_with_Python2&#x2F;</a>\n[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;paugier&#x2F;nbabel" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;paugier&#x2F;nbabel</a>')