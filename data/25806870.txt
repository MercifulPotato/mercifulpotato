Item(by='hayst4ck', descendants=None, kids=[25808785], score=None, time=1610843107, title=None, item_type='comment', url=None, parent=25806651, text='&gt; If you haven&#x27;t tested or don&#x27;t know how your systems are going to react when operating for a different scale,<p>In my opinion, this is a pretty unreasonable expectation. Not to mention any load testing is going to be done under a certain set of assumption, a set of assumptions that is almost guaranteed to be violated by actually scaling something.<p>What&#x27;s the most naive load test you can think of? I am going to see the maximum amount of requests my dev instance can handle. Oh i can handle 10 requests per second. If I run 24 instances on a machine, and run 100 machines, then I must be able to service 24,000 RPS.<p>Ok... Now explain concretely, what kind of load testing would&#x2F;should have been done that would have surfaced the lack of an exponential backoff without a priori knowledge of it?<p>The category of things you don&#x27;t know you don&#x27;t know at 10x scale is large. The justification for spending time &quot;scale testing&quot; is going to be a hard when your manager goes to social media and sees every single person wanting backups for their texts. &quot;Hmm should we apply engineering resources to the feature we know everyone wants, or exploring the potential land of failures that may or may not have payoff, and definitely not immediate payoff.&quot; Most of these prioritization situations are directly and solely informed via experiencing outages, just like this one.<p>&gt; then don&#x27;t let it grow in the first place.<p>This is the type of insight you get from experience, it&#x27;s also the type of call that I personally think would be very hard to make. As an engineer you don&#x27;t always know if an outage is going to solve itself, take 10 minutes, 30 minutes, or take 10 hours. Then communicating that to someone with the power to create that policy...<p>How many (social) companies do you know of that haven&#x27;t had absolutely catastrophic outages&#x2F;security breeches?<p>This is the type of outage that justifies reliability work and gets resources applied to it.  This is the type of thing that results in an organization creating a somewhat rigorous incident response policy that handles the business side (keeping users informed, giving them the best experience possible). This is a growing pain of rapid maturity.<p>I think you can talk the way you do because you have not personally faced this type of engineering situation (a guess). Easy to make comments from the peanut gallery, but try putting yourself in the engineer&#x27;s or the CEO&#x27;s shoes and walking through what information you have at the time and what options you have available at the time, without the benefit of hindsight. Imagine you have a pipeline of priorities you look at every day. Is spending time wooing a senior engineer to come work for you a lower priority than having a good story for what happens when you 10x your traffic in 2 weeks? Things can only be black and white in hindsight. Their response to this is infinitely more indicative of the type of organization they are than the actual outage.')