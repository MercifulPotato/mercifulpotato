Item(by='samprotas', descendants=None, kids=[24861603, 24861695, 24861599], score=None, time=1603387134, title=None, item_type='comment', url=None, parent=24856777, text='The number of comments here specifically upset with this part of the current design is a bit discouraging, but not necessarily surprising.<p>Yes, many mainstream languages have near-zero support for Tagged&#x2F;Discriminated Unions or Enums with Associated Data or Algebraic Data Types (pick your favorite name for the same concept). This is a limitation of those languages, which should not force a language-agnostic protocol to adopt the lowest common denominator of expressiveness.<p>Consider the problem they&#x27;re avoiding of mutually exclusive keys in a struct&#x2F;object. What do you do if you receive more than one? Is that behavior undefined? If it is defined, how sure are you that the implementation your package manager installed for you doesn&#x27;t just pick one key arbitrarily in the name of &quot;developer friendliness&quot; leading to security bugs? This seems like a much more bug-ridden problem to solve than having to write verbose type&#x2F;switching golang&#x2F;java.<p>Implementing more verbose deserialization code in languages with no support for Tagged Unions seems like a small price to pay for making a protocol that leaves no room for undefined behavior.<p>To be clear, _many_ statically typed languages have perfect support for this concept (Rust&#x2F;Swift&#x2F;Scala&#x2F;Haskell, to name a few).')