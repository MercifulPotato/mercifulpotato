Item(by='adkadskhj', descendants=None, kids=None, score=None, time=1609432358, title=None, item_type='comment', url=None, parent=25593716, text='&gt; &#x27;m still figuring my way around rust so obviously some noob questions follow: -&gt; what&#x27;s with the move&#x2F;copy mess ? I know why they are needed but it seem to be in the face with all the explicit &#x27;&amp;&#x27; all over the place in any reasonably sized code. Why not hide it a bit by letting the implicit copy to happen to simpler structures ? (at compile time).<p>So there&#x27;s a lot to unpack here, but implicit copies do happen - if it&#x27;s a copy-able data structure. Strings are huge, so no implicit copy. As far as `&amp;` being too much to identify references vs not, i&#x27;m not sure how it could be made any shorter to identify a reference. You&#x27;re already, commonly, hiding the lifetime associated with that, so it&#x27;s really `&amp;&#x27;a str`, but Rust lets you drop the `&#x27;a` most of the time.<p>Considerable effort has been put into easing the language and lowering syntax. What&#x27;s left is essentials imo. I _want_ to see when something is a reference. I _want_ to know generic types. etcetc.<p>&gt; -&gt; Why no love for inheritance? :) - it makes certain patterns easier to implement<p>I can&#x27;t speak much here. I&#x27;ve been using Go and Rust for so long i&#x27;ve forgotten what classical inheritance is actually useful for haha. The Go&#x2F;Rust pattern of Structs, shared behavior, etc cover all use cases for me. i don&#x27;t find myself missing something, fwiw, but i can&#x27;t speak to which is &quot;best&quot;.<p>&gt; -&gt; Why no love for global&#x2F;static variables ? I know they are prone to be misused but some patterns like singleton really need a lot of shortcuts to implement. And there will always be some cases where you want to keep variables with static and global scope<p>You can have global variables fwiw. Granted, i use `lazy_static` which simplifies it a bit, but there&#x27;s nothing i&#x27;m aware of which prevents this pattern. I&#x27;ve typically just used it in tests though. Globals are the devils candy ;)')