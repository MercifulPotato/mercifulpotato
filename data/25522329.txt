Item(by='tialaramex', descendants=None, kids=[25525330, 25522485], score=None, time=1608758307, title=None, item_type='comment', url=None, parent=25522120, text='Trial decryption. This is a potential server behaviour for Encrypted Client Hello (the current iteration of the work to encrypt SNI in TLS traffic) too<p>ECH will be GREASEd. To prevent those who might want the capability to stop ECH in the future from getting a head start while it&#x27;s uncommon, implementations would always pretend to be doing it anyway.<p>So talking to any TLS server, even one that has no idea about ECH, the client says basically &quot;Hi, here is a normal unencrypted TLS 1.3 Hello message for this.server.example, also, here&#x27;s an Encrypted Client Hello message&quot;. If the server actually does offer ECH, there could be a real Client Hello, perhaps addressed to another.server.example, encrypted inside the Encrypted Client Hello, but if not there&#x27;s just random noise. An eavesdropper doesn&#x27;t have the key, so they don&#x27;t can&#x27;t tell which is the case.<p>Obviously if your server can&#x27;t do ECH, the Encrypted Client Hello is just a mysterious unintelligible extension with noise inside it, no further inspection needed.<p>And in some setups the server knows how to tell easily which key would have been used for any valid ECH, so if that key doesn&#x27;t work then it was just noise, and can be ignored.<p>But in other cases the server knows two or more keys that might be valid, yet the client either can&#x27;t or has chosen not to be open about which (if any) was used, so the server has to try them all until it finds out.<p>This is Section 10.4 of the current draft:<p><a href="https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;draft-ietf-tls-esni-09#page-28" rel="nofollow">https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;draft-ietf-tls-esni-09#page-28</a>')