Item(by='pimterry', descendants=None, kids=None, score=None, time=1602066430, title=None, item_type='comment', url=None, parent=24705596, text='In general: never mix user input indistinguishably from control content.<p>In HTML generation, that means you never dynamically parse HTML generated directly from raw data. E.g. in React, you define your content entirely in terms of components that are explicitly defined in your code (no HTML parsing - they&#x27;re objects in your code, explicitly built by your code) and content for those components (still no HTML parsing, they directly become text either for attribute params, or for text nodes that sit within your HTML tags).<p>It&#x27;s the same as protecting against SQL injection. Don&#x27;t interpolate user input directly into a SQL string and then parse it. Define&#x2F;generate the query in your code separately, with explicit parameter placeholders for where dynamic input will go, and then provide variables that can be safely used for those parameters, but which are never parsed as part of the query itself.<p>For HTML, the only time this becomes challenging is when you accept user input that is itself HTML already. In that case, you have to parse it, and you have a big problem.<p>Don&#x27;t do that, wherever possible. Accept structured data, accept plaintext text, accept markdown (without HTML tags either disabled or _extremely_ carefully limited), but wherever possible, don&#x27;t accept and output HTML given to you by a user. For similar reasons, don&#x27;t accept SQL queries uploaded by a user.<p>Dompurify exists for the case where you can&#x27;t do this, but in general it&#x27;s better, and not that hard, to avoid needing it at all.')