Item(by='jlokier', descendants=None, kids=[25979337, 25979482], score=None, time=1612104794, title=None, item_type='comment', url=None, parent=25978940, text='&gt; I think that&#x27;s a good idea, and is plainly allowed by the standard.<p>Watch out, &quot;secret-token:domain&#x2F;authtype&#x2F;code&quot; is not a valid secret-token by the standard!<p>The standard has grammar:<p><pre><code>  [RFC8959]\n  secret-token-URI    = secret-token-scheme &quot;:&quot; token\n  secret-token-scheme = &quot;secret-token&quot;\n  token               = 1*pchar\n\n  [RFC3986]\n  pchar               = unreserved &#x2F; pct-encoded &#x2F; sub-delims &#x2F; &quot;:&quot; &#x2F; &quot;@&quot;\n  pct-encoded         = &quot;%&quot; HEXDIG HEXDIG\n  unreserved          = ALPHA &#x2F; DIGIT &#x2F; &quot;-&quot; &#x2F; &quot;.&quot; &#x2F; &quot;_&quot; &#x2F; &quot;~&quot;\n  sub-delims          = &quot;!&quot; &#x2F; &quot;$&quot; &#x2F; &quot;&amp;&quot; &#x2F; &quot;&#x27;&quot; &#x2F; &quot;(&quot; &#x2F; &quot;)&quot;\n                        &#x2F; &quot;*&quot; &#x2F; &quot;+&quot; &#x2F; &quot;,&quot; &#x2F; &quot;;&quot; &#x2F; &quot;=&quot;\n</code></pre>\nThat means &quot;&#x2F;&quot; cannot be part of a secret-token, and a strictly standard-compliant scanner will not pattern-match on &quot;secret-token:domain&#x2F;authtype&#x2F;code&quot;.<p>I think that may be a design mistake as people will inevitably build tokens with those characters (using the same reasoning you did), and they won&#x27;t show up in some scanners (any that are strictly compliant).  &quot;&#x2F;&quot; is allowed in query strings despite being a path delimiter before the query string; allowing it in secret-token would make sense too.<p>Fortunately it&#x27;s not a security problem as long as &quot;&#x2F;&quot;-delimited paths in tokens don&#x27;t <i>start</i> with &quot;&#x2F;&quot;, because the preceding characters will be enough to match anyway.  However, if you have a scanner where you whitelist some strings after being shown matches, the fact it doesn&#x27;t match the security part of the token introduces a risk of mistakenly whitelisting too broadly (just the domain in this example), and of course there&#x27;s a chance someone may use a path starting with &quot;&#x2F;&quot; without realising this is a problem.')