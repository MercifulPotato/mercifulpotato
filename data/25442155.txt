Item(by='susam', descendants=None, kids=None, score=None, time=1608124861, title=None, item_type='comment', url=None, parent=25441664, text='Here are my recommendations on this topic:<p>- Choose Common Lisp because it has been the most popular dialect of Lisp in the overall history of Lisp. It is more convenient than Scheme if one decides to develop serious software in Lisp. Clojure appears to be more popular in the technology industry than Common Lisp among organizations (my workplace included) that use Lisp. I still recommend Common Lisp because I believe that it is more likely that one would work on an independent open source or hobby Lisp project than one would encounter one of the rare organizations who use Clojure at work.<p>- Choose SBCL (Steel Bank Common Lisp) as the implementation.[1][2] It is the most popular[3] Common Lisp implementation and is recommended in many online discussions. CCL (Clozure CL, not to be confused with Clojure which is a separate dialect) is also another very good implementation.<p>- Work through this book: Practical Common Lisp: <a href="http:&#x2F;&#x2F;www.gigamonkeys.com&#x2F;book&#x2F;" rel="nofollow">http:&#x2F;&#x2F;www.gigamonkeys.com&#x2F;book&#x2F;</a> (available in print too if you search online). Just use a modern alternative to Lisp in a box when you reach Chapter 2. In fact, I encourage using vanilla Emacs and setting it up with SLIME and Paredit yourself. See Emacs4CL for example.[4]<p>- A Vim user may consider installing Slimv or Vlime[5]. Slimv and Vlime offer an environment similar to Emacs&#x2F;SLIME.  They display the REPL in a Vim buffer. Slimv also comes with Paredit mode that makes typing and executing S-expressions quite convenient.<p>- In case you want to postpone setting up Emacs + SLIME or Vim + Slimv&#x2F;Vlime until a time you have become more familiar with the language, you can also execute your Lisp source code files from the shell.[6]<p>- Optionally, keep another implementation of Common Lisp. Common Lisp is a standard that is implemented by various implementations. Each implementation may have its own extensions or implementation-specific behaviour regarding error handling, command line options, FASL format, unspecified behaviour, etc. Experimenting with concepts with another implementation of Lisp occasionally may offer some perspective about how some things could be different in different implementations. I keep CLISP around for this purpose.[7][8]<p>[1]: Install SBCL on macOS: brew install sbcl<p>[2]: Install SBCL on Debian-based distro: apt-get install sbcl<p>[3]: State of Common Lisp Survey 2020: <a href="https:&#x2F;&#x2F;docs.google.com&#x2F;forms&#x2F;d&#x2F;e&#x2F;1FAIpQLSfg7UJRKrkI3OjOHWL4xI-murE4LpQjIxsiAhFdPEmtyLX3kg&#x2F;viewanalytics" rel="nofollow">https:&#x2F;&#x2F;docs.google.com&#x2F;forms&#x2F;d&#x2F;e&#x2F;1FAIpQLSfg7UJRKrkI3OjOHWL4...</a><p>[4]: Emacs4CL: <a href="https:&#x2F;&#x2F;github.com&#x2F;susam&#x2F;emacs4cl" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;susam&#x2F;emacs4cl</a><p>[5]: Lisp in Vim with Slimv or Vlime: <a href="https:&#x2F;&#x2F;susam.in&#x2F;blog&#x2F;lisp-in-vim-with-slimv-or-vlime&#x2F;" rel="nofollow">https:&#x2F;&#x2F;susam.in&#x2F;blog&#x2F;lisp-in-vim-with-slimv-or-vlime&#x2F;</a><p>[6]: Load (execute) code in a file and exit: sbcl --script foo.lisp<p>[7]: Install CLISP on macOS: brew install clisp<p>[8]: Install CLISP on Debian-based distro: apt-get install clisp<p>Disclosure: I am the author of [4] and [5].')