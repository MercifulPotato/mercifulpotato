Item(by='dxuh', descendants=None, kids=[25039968], score=None, time=1604956022, title=None, item_type='comment', url=None, parent=25037954, text='I&#x27;m try to not sound rude, but I don&#x27;t think I can. Every C++ developer with even some significant amount of experience will identify this as bad code with one eye closed. Of course this looks wrong to someone that doesn&#x27;t know the language. People freak out because it crashes your program, but in the end it&#x27;s just a bug and producing bugs that are not obvious to someone that doesn&#x27;t use the language much is very easy with every language.<p>I remember people prophesizing the end of C++ because of the introduction of string_views. When writing a text editor over a couple of weeks (a lot of text manipulation) I used string_views extensively and purposely over-used them (returned them <i>a lot</i> or kept them for a long time), because I wanted to see how dangerous they could be and I never got a bug&#x2F;crash that was related to them. Of course you have to think about what you are doing, but you should be doing that anyway.\nWhat I am trying to say is that while it&#x27;s never &quot;free&quot; to not write bad code, if you get used to it, you don&#x27;t have to think as hard about it, as you might think.<p>There are way more common examples of easy ways to break your code, like storing references&#x2F;pointers to elements in vectors, which then resize or capturing objects in lambdas that get destroyed before the lambda is executed and stuff like that. Even out-of-bounds access to arrays&#x2F;vectors is a lot more common than that, I think personally.')