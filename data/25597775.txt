Item(by='ryandrake', descendants=None, kids=[25597917], score=None, time=1609452686, title=None, item_type='comment', url=None, parent=25596556, text='&gt; The right way to do it, imo, is to put your faith in a tech lead and a trusted team to deliver it in a timely fashion<p>I&#x27;ve been on both sides throughout my career, as the engineering lead sometimes, and as the project manager other times, and let me say, this is often just results in blowing estimates and deferring uncomfortable conversations until after things blow up.<p>Let&#x27;s take two projects. Project A is estimated by the eng team to take three months to complete. It&#x27;s not broken down into tasks that are individually estimated and tracked. Just one monolithic task: Do Project A. The project manager says &quot;go!&quot; and then leaves the tech lead to basically run open loop, maybe with a monthly &quot;So, how are things going, eh?&quot; conversation.<p>Project B is estimated by the engineering team to take three months, but is then broken into small week-long sub-projects, and days-long sub-tasks, highlighting dependencies.  After stacking the tasks up and assigning them to the team, it looks like the project will actually take four months. Throughout development, new tasks are created as bugs are found and assigned priorities. The project manager and eng lead watches the finished&#x2F;remaining task lists daily or weekly, and can easily tell when something is taking much longer or much shorter than expected, and what other parts that depend on that will be delayed.<p>Which project do you think has the best chance of making its estimated complete date? If the complete date is actually a deadline, which project can be more easily re-sized half way through if we need to cut scope in order to make it? Which project can the team&#x27;s boss&#x27;s boss&#x27;s boss more easily obtain status information about? How does anyone besides the eng lead know whether Project A is even done?')