Item(by='steveklabnik', descendants=None, kids=[25389880], score=None, time=1607704497, title=None, item_type='comment', url=None, parent=25387438, text='The core issue here isn&#x27;t <i>exactly</i> GC, though it is related. The issue is that abstraction is about hiding things, and Rust&#x27;s type machinery is about exposing things. In Haskell, you have lambdas, and you have types of all of the same size data, because it&#x27;s all on the heap. In Rust, each closure is a distinct type, <i>plus</i> the three different types of closures, <i>plus</i> types of different sizes...<p>It&#x27;s not so much the GC, as it is &quot;in a GC&#x27;d language, everything is on the heap and a lot of information (from Rust&#x27;s perspective) is erased.&quot; You may be able to get rid of GC in some sense, but you&#x27;d end up with something halfway to Rust, not the whole way.')