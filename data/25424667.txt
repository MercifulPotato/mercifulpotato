Item(by='asd4', descendants=7, kids=[25425197, 25424894, 25424840, 25424919], score=4, time=1607987471, title='Why do web services use so many domains?', item_type='story', url=None, parent=None, text='It is common to see content on the web being loaded from many different domains all owned by the company providing the service or site. Today this really reached a new level of absurdity for me:<p>I received an email that indicated I had been given access to a OneDrive share. It was a little sketchy so I decided to navigate to the base domain and login. Examining the URL I find sharepoint.com. The next steps followed:<p><pre><code>  1. sharepoint.com redirected to microsoft.com\n  2. Clicking &quot;login&quot; took me to live.com\n  3. Entering my username and pressing enter took me to microsoftonline.com\n  4. Entering may password and pressing enter took me to office.com (and the Office dashboard)\n  5. I go back to my email and click the link, which takes me to a logged in page on sharepoint.com with OneDrive branding.\n</code></pre>\nThis took me a bit because it was sketchy being bounced from domain to domain during a simple login process so I checked the cert each time.<p>I know this Microsoft stuff is an extreme example but it happens everywhere under the hood. I see this a lot with javascript and content: Sketchy domains that look a lot like the company&#x27;s frontline domain but shorter or slightly different.<p>What engineering rationale is there for this convoluted implementation that trains users to ignore the URL bar? What happened to having a single trusted domain that all services live under?')