Item(by='garmaine', descendants=None, kids=[25261731], score=None, time=1606768819, title=None, item_type='comment', url=None, parent=25258254, text='Next time you fly through a busy airport, think about the system which assigns planes to gates in realtime based on a large number of variable factors in order to maximize utilization and minimize waits. This is an expert system design in the 80&#x27;s and which allowed a huge increase in the number of planes handled per day at the busiest airports.<p>Or when you drive your car, think about the lights-out factory that built-it, using robotics technologies developed in the 80&#x27;s and 90&#x27;s, and the freeways which largely operate without choke points again due to expert system models used by city planners.<p>These advances were just as revolutionary before, and people were just as excited about AI technologies eating the world. Still, it largely didn&#x27;t happen. To continue the example of robotics, we don&#x27;t have an equivalent of the Jetson&#x27;s home robot Rosey. We can make a robot assemble a $50,000 car, but we can&#x27;t get it to fold the laundry.<p>These rapid successes you see aren&#x27;t literally &quot;any problem from any field&quot; -- it&#x27;s specific problems chosen specifically for their likely ease in solving using current methods.  DeepMind didn&#x27;t decide to take on protein folding at random; they looked around and picked a problem that they thought they could solve. Don&#x27;t expect them to have as much success on every problem they put their minds to.<p>No, machine learning is not trivially solving the hardest problems in every field. Not even close. In biomedicine, for example, protein folding is probably one of the easiest challenges. It&#x27;s a hard problem, yes, but it&#x27;s self-contained: given an amino acid sequence, predict the structure. Unlike, say, predicting the metabolism of a drug applied to a living system, which requires understanding an extremely dense network of existing metabolic pathways and their interdependencies on local cell function. There&#x27;s no magic ML pixie dust that can make that hard problem go away.')