Item(by='rualca', descendants=None, kids=None, score=None, time=1610269392, title=None, item_type='comment', url=None, parent=25703243, text='&gt; I will never understand how a group looked at overly-complex Makefiles, determined it was hard to write complex build scripts, and concluded: &quot;I should write a Makefile meta-language that can generate these.&quot;<p>If that&#x27;s your personal experience then it seems you do not have any relevant experience at all developing and maintaining software projects, specially if they need to be cross-platform and cross-tech stack.<p>For example, it&#x27;s clear to anyone with any basic experience that providing an abstraction over C++ compiler&#x27;s so that you can ensure your C++ project can and does build successfully regardless of C++ standard, compiler make and model, and eve os and os distribution is extremely valuable.<p>Can you show me a Makefile that handles that?<p>With Cmake you get the exact same C++ project building flawlessly on macOS with Xcode and clang, windows with any version of MS Visual Studio, and of course any linux distribution.<p>You just download the project, run Cmake to generate a makefile, and build<p>How do you expect to even run a Makefile the same on all those combinations?<p>There are very good reasons why Cmake is the de facto standard.')