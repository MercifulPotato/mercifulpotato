Item(by='coldtea', descendants=None, kids=[25578106], score=None, time=1609297324, title=None, item_type='comment', url=None, parent=25576529, text='&gt;<i>You&#x27;re missing the point which is context. If you&#x27;re the accountant, the tax code is essential. HTML is accidental. If you&#x27;re the programmer, then HTML is essential. The outcome of your page is accidental. Accidental is what you have control over. Essensial is what you&#x27;re forced to work with.</i><p>That&#x27;s not what accidental&#x2F;essential complexity mean in Computer Science.<p>Essential Complexity is the business logic, program structure considerations, necessary tradeoffs, and so on.<p>Accidental Complexity is BS you have to put up that&#x27;s not essential to the program, but you need to handle. Things from manual memory management to setting up Webpack are &quot;accidental complexity&quot;.<p>It&#x27;s not about the language itself. Even if you&#x27;re programming in bash, bash is not &quot;essential complexity&quot;.<p>The complexity inherent in the task is the essential complexity (e.g. &quot;I need to copy files from a to b, and do a processing on them, handle the case where one file is missing or when a column in the file is mangled, etc&quot;).<p>Bash (or whatever other tool you use) can directly help you with this essential complexity, or impose accidental complexity on top of it.<p>E.g.<p><pre><code>  cp &#x2F;foo&#x2F;a &#x2F;bar&#x2F;.\n</code></pre>\nfor copying a from &#x2F;foo to &#x2F;bar has pretty much no accidental complexity. It essentially captures just what you need to do.<p>But as the script becomes bigger and you implement more of the business logic, shit like bash messing up pipelines when a part of a pipeline fails, or dealing with its clumsy error handling, add accidental complexity.')