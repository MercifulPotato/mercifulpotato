Item(by='lmilcin', descendants=None, kids=[25982281], score=None, time=1612113976, title=None, item_type='comment', url=None, parent=25979814, text='The question isn&#x27;t whether it is possible to write shitty code in a given language. Every language can be used to write shitty code.<p>The issue is, given a person that knows the language does not know how to structure their code, what is likely going to be the outcome with regards to maintainability.<p>My production experience is mostly with C, C++, Python and Java.<p>As an example, consider typical Java backend application. Even novice developers would typically learn Spring and create applications that contain controllers, views, repositories, services, etc.<p>They (I mean novice developers) would be constantly repeating rules they don&#x27;t know why they are following, but heard it is important or seen it as popular. So maybe things like you should have your objects accept injected dependencies.<p>It does not mean they will know how to use these or even that they will use these productively to create more readable code, but what this does is creates code that has at least some structure.<p>The code might have huge amount of duplication and redundant or unnecessary constructs, but you will be able to move around, understand what you are looking at (okay, this is controller so I know how this most likely works, this is database layer so I know what I can expect, etc.)<p>On the other hand Clojure imposes exactly ZERO structure on your application. That is powerful but only if you know how to structure the application yourself, know what kind of choices you need to make and know ins and outs of various options.<p>If you have no experience creating structure, have been Java dev all your life and have always relied on structure that was given to you and never thought about it until today, you are likely to produce absolutely unmaintainable mess that nobody is going to be able to figure out.')