Item(by='antpls', descendants=None, kids=[25890485, 25893253, 25890948, 25890493, 25890509], score=None, time=1611478045, title=None, item_type='comment', url=None, parent=25889412, text='Renaming to a complete different name is not necessary, everyone understands a major version breaks compatibility. Python3 is still very close to Python2 both in syntax and spirit.<p>But there was a sort of broken promise given by the Python creators: Python3 was almost like Python2, but every library author had to review and repackage their libraries, anyway.<p>At that point, Python 3 should have been unambiguously incompatible with Python 2 :<p><pre><code>  - the only allowed file extension should be py3\n\n  - all environment variables should have been duplicated with a &quot;3&quot; (it shouldn&#x27;t read or modify Python 2 env vars)\n\n  - all installation folders should have been duplicated with &quot;3&quot;\n\n  - all tools like pip should be suffixed with &quot;3&quot;\n\n  - and most importantly, it shouldn&#x27;t try to  optimistically run previous Python2 code or previous v2 tools\n</code></pre>\nThe mistake was that you could use &quot;pip&quot; or &quot;python&quot; in bash scripts&#x2F;shell, and not know if python2 or python3 were going to run.<p>Still today, you can run &quot;python&quot; in a recent version of Ubuntu or Fedora, and it will be Python 3. Only &quot;python3&quot; should be possible. Distro are repeating the same mistake than with Python 2, and we will struggle again with Python 4, if there is any Python 4.<p>Many headaches wouldn&#x27;t have happened if &quot;python&quot; was reserved to Python 2.<p>Pro tip to language and distro maintainers : make the major version part of the language name and executable, from version 1.')