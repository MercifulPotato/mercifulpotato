Item(by='brundolf', descendants=None, kids=[25328343], score=None, time=1607301185, title=None, item_type='comment', url=None, parent=25326552, text='This certainly falls under Rich Hickey&#x27;s definition of &quot;simple&quot;, which is one virtue. But:<p>&gt; it is not immediately evident how the more elegant solution actually works<p>another virtue is ease of comprehension, and the more elegant solution lacks that in my (and seemingly Linus&#x27;) opinion. Maybe if you&#x27;re used to working with pointers to pointers you might have an intuituon for them, but I at least had a difficult time gaining an intuitive grasp on the second solution, which could potentially nullify the bug-resistance of having fewer branching cases. In short, calling the second one objectively better is overstating it I think.<p>It&#x27;s worth noting that in a language with union types, you can have the best of both worlds (using Rust here because it&#x27;s the one I&#x27;m most familiar with):<p><pre><code>  enum LinkedList {\n    Null,\n    Node { value: i32, next: Box&lt;LinkedList&gt; }\n  }\n</code></pre>\nIn the same way that the pointer to a pointer homogenizes the head-case with the rest, a union type means that any given linked list &quot;is just a node&quot;, and the head can therefore be treated the same way as any later node')