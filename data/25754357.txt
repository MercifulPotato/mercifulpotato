Item(by='Jtsummers', descendants=None, kids=[25754430], score=None, time=1610488236, title=None, item_type='comment', url=None, parent=25754003, text='Shallow wrappers that don&#x27;t wrap much (now) but convey intent better are valuable if you buy into the idea of modularity and encapsulation in general. Some reasons (probably more out there):<p>1. The now-provided interface can more clearly express what the code is intending to do (better names for the operations you&#x27;re providing than the underlying system has, <i>remove_from_end</i> to <i>pop</i> or <i>dequeue</i>)<p>2. Hide methods of interacting with the underlying data structures that you don&#x27;t want people to use (use a C++ vector as a stack, but don&#x27;t want random access)<p>3. You can replace the underlying mechanisms at will without impacting the users<p>If you just wrap a vector in your own vector class and otherwise provide the same operations (or a limited set of operations but for no good reason to restrict usage), sure, that&#x27;s moronic. But if you wrap a vector class in a &quot;BigNumber&quot; class and provide operations like <i>add</i>, <i>subtract</i>, <i>mod</i>, etc. then value has been added. Same thing with the idea of wrapping a map in a set interface.')