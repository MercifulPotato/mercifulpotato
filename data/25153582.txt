Item(by='SubjectToChange', descendants=None, kids=None, score=None, time=1605815265, title=None, item_type='comment', url=None, parent=25153069, text='<i>As you point out Apple&#x27;s per core performance is impressive, but their ability to customize their hardware to optimize very specific compute tasks like the nsobject release example or floating for Javascript will be a lot harder to convince off the self&#x2F;least common denominator parts like x86 processors have traditionally been.</i><p>The improvement in retaining and releasing NSObjects is mostly due to Arm&#x27;s weaker memory model. And javascript specific instructions like FJCVTZS are available for anyone designing Arm cores. Also, IIRC, FJCVTZS was added to more closely match the way x86 handles floating point numbers because that is what Javascript was designed to target.<p><i>But if it did turn out to be on the right side of the cost&#x2F;benefit equation now instead of having to convince multiple parties it&#x27;s a good idea, at worst Apple just has to convince a few internal divisions to work together.</i><p>The problem is that Apple does what they want at their discretion. You need them, but that don&#x27;t need you. Whereas hardware manufactures are usually quite sensitive to customer needs. We&#x27;ve already seen how this plays out with Apple&#x27;s professional software products like Shake or Final Cut.<p>Not to downplay Apple&#x27;s accomplishment, after all nobody expected them to be this competitive. But people are getting caught up in the hype.')