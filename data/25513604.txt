Item(by='nickjj', descendants=None, kids=[25523051, 25513768], score=None, time=1608688912, title=None, item_type='comment', url=None, parent=25512951, text='&gt; Fwiw, you can use long polling for LiveView if you wanted.<p>How does that work for page transitions? The docs don&#x27;t mention anything about this or how to configure it.<p>With Turbolinks or Hotwire Turbo Drive, the user clicks the link to initiate a page transition and then the body of the page is swapped with the new content being served over HTTP. With Turbo Frames the same thing happens except it&#x27;s only a designated area of the page. In both cases there&#x27;s no need to poll because the user controls the manual trigger of that event.<p>How would LV do the same thing over HTTP? Everything about LV in the docs mentions it&#x27;s pretty much all-in with websockets.<p>Then there&#x27;s progressive enhancement too as another difference. Turbo is set up out of the box to use controllers which means you really only need to add a tiny amount of code (2-3 lines) to handle the enhanced experience alongside your non-enhanced experience. For example you could have a destroy action remove an item from the dom when enhanced using Turbo Stream or just redirect back to the index page (or whatever) for the non-enhanced version.<p>There&#x27;s an example in the Turbo docs for that at <a href="https:&#x2F;&#x2F;turbo.hotwire.dev&#x2F;handbook&#x2F;streams" rel="nofollow">https:&#x2F;&#x2F;turbo.hotwire.dev&#x2F;handbook&#x2F;streams</a> if you search for &quot;def destroy&quot;.<p>But with LV wouldn&#x27;t you need to create both a LV and a regular controller? That&#x27;s a huge amount of code duplication.<p>Although to be fair I would imagine most apps would require JavaScript to function so that one is kind of a non-issue for most apps, but it&#x27;s still more true to the web to support progressive enhancement and the easier you can do this the better.')