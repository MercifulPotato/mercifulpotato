Item(by='mynameisash', descendants=None, kids=None, score=None, time=1611940827, title=None, item_type='comment', url=None, parent=25956502, text='At work, I&#x27;m using PyO3 for a project that churns through a lot of data (step 1) and does some pattern mining (step 2). This is the second generation of the project and is on-demand compared with the large, batch project in Spark that it is replacing. The Rust+Python project has really good performance, and using Rust for the core logic is such a joy compared with Scala or Python that a lot of other pieces are written in.<p>Learning PyO3, I cobbled together a sample project[0] to demonstrate how some functionality works. It&#x27;s a little outdated (uses PyO3 0.11.0 compared with the current 0.13.1) and doesn&#x27;t show everything, but I think it&#x27;s reasonably clear.<p>One thing I noticed is that passing very large data from Rust and into Python&#x27;s memory space is a bit of a challenge. I haven&#x27;t quite grokked who owns what when and how memory gets correctly dropped, but I think the issues I&#x27;ve had are with the amount of RAM used at any moment and not with any memory leaks.<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;aeshirey&#x2F;CheeseShop" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;aeshirey&#x2F;CheeseShop</a>')