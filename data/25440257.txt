Item(by='dmitriid', descendants=None, kids=[25440296, 25440661], score=None, time=1608107065, title=None, item_type='comment', url=None, parent=25440217, text='&gt; I think you misunderstand.<p>I don&#x27;t<p>&gt; You can write very restricted queries that mirror REST routes 1:1. No need for persisted queries.<p>What stops a frontend developer writing an ad-hoc query?<p>&gt; Persisted queries enter the game when you define a query that potentially can become very complex and deep<p>That... That is exactly what I wrote.<p>---<p>Honestly, I&#x27;m baffled at GraphQL defenders. It&#x27;s like they never even read the documentation to the tools they defend.<p>- How is GraphQL different from REST?<p>- Ad-hoc queries of unlimited complexity<p>- But you write restricted queries<p>- No. The whole point of GraphQL is <i>ad-hoc queries</i><p>- Persisted queries enter the game when you define a query that potentially can become very complex and deep<p>- That is <i>exactly what I&#x27;m saying</i><p>And elsewhere, you can see it in other replies, it&#x27;s the same story with N+1:<p>- GraphQL is great!<p>- Except the issues on the server and trying to handle N+1 queries<p>- What&#x27;s N+1?<p>- It&#x27;s.... It&#x27;s a prominent part of the documentation for the frigging tool you use. And the reason for the things you advocate like dataloaders and persisted queries')