Item(by='yowlingcat', descendants=None, kids=[25502729], score=None, time=1608608555, title=None, item_type='comment', url=None, parent=25502362, text='&gt; some time down the line you will always encounter a situation where the organizational scheme you chose is less than ideal or even flat out wrong?<p>I&#x27;m with you here...<p>&gt; The actual solution to the above problem is to use point free combinators as much as possible in your code.<p>You lost me here. Perhaps if you&#x27;re working in a problem space with high complexity, little ambiguity and hard performance requirements (fairly rare in my experience), you might get mileage here.<p>Otherwise, functional programming techniques are somewhat orthogonal to Conway&#x27;s law. Point-free combinators don&#x27;t stop new information about customers from completely altering your domain model, business logic and how your data is stored at rest.<p>I think it&#x27;s helpful to realize that some of the root causes of bit-rot in a codebase are more closely tied to not fully knowing what was going to evolve into ahead of time, which in and of itself isn&#x27;t a bad thing. However, it means that it&#x27;s a failure mode that is independent and often out of the hands of the engineer writing the code -- functional programming idioms or not.')