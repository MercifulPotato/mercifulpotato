Item(by='cesaref', descendants=None, kids=[24826215, 24825738, 24828184, 24826136, 24826323], score=None, time=1603109715, title=None, item_type='comment', url=None, parent=24824378, text='Not sure if this has been mentioned, but this exact technique (storing extra data in addresses) was used in the early days of the MacOS, with 24 bits for the address, and 8 bits for extra info (not sure if I can remember exactly what they were for). The 68000 only had 24 address lines after all. This allowed a maximum of 16Mb of RAM which was of course far more than would ever be in a computer...<p>By the time the Mac II came out (68020 with 32 bit address bus), it was apparent that this was going to be an issue, and there was an effort to remove this logic. Those early machines were a combination of ROM and loaded OSes, so there was an effort to clean the code for both the distributed OS and the stuff included in the ROMs of the machines.<p>I think if memory serves the Mac IIcx from around &#x27;89 or so was the first machine with 32 bit clean roms, and with the right OS version you were good for &gt;16mb of RAM.<p>I&#x27;ve also got a hazy memory of some architecture (i&#x27;m going to guess DEC Alpha) which only read from 32 bit boundaries, and where the bottom 2 bits of the address were masked out, so you could store data there too...<p>Anyhow, the real take home from all that was that misusing addresses to store additional information, which might seem like a clever trick is likely to bite you at some point in the future.')