Item(by='nerdtime', descendants=None, kids=[24973909], score=None, time=1604352622, title=None, item_type='comment', url=None, parent=24972748, text='&gt;You&#x27;re just trolling at this point. Please reconsider your confidence in this material, because you are egregiously mistaken.<p>Why the heck would I run such a long expose and troll you and be mistaken at the same time.<p>&gt;How does this Haskell program write to stdout if it doesn&#x27;t mutate memory?<p>Let&#x27;s not be stupid here. Every program on the face of the earth must mutate memory because that&#x27;s how computers work. Assembly instructions mutate things. We&#x27;re not even talking about that. We&#x27;re talking about application level programming where we only deal with primitives that the application programmer is aware about. I am saying that at the application level within the category of Hask nothing is mutated.<p>In your example tell me what haskell primitive.... What variable or data was mutated within haskell? That is what I&#x27;m referring to.<p>Try to implement IO or ST in another lang using only purely functional primitives. Use your algebra to make it work. You&#x27;ll find it&#x27;s impossible. What this means is that imperative primitives must exist for any programming to work.<p>&gt;Then it doesn&#x27;t work. Every Haskell program does nothing, because mutation of program state does not occur.<p>Obviously I&#x27;m operating on a certain layer of abstraction here. In X = 6, X is obviously immutable in haskell. A runtime is obviously executing your haskell program and mutating the console but your haskell code itself is pure. But you know this. It&#x27;s quite obvious you&#x27;re the one that&#x27;s trolling.')