Item(by='tialaramex', descendants=None, kids=None, score=None, time=1610606033, title=None, item_type='comment', url=None, parent=25771886, text='So, what you do goes like this: You provide DNS service, offering A answers even where (if you were to ask the public Internet) there are none. When you&#x27;re asked for foo.bar.example you do an AAAA query, and you track for a while a mapping from the answer to a (RFC1918 or assigned for this purpose) IPv4 address, and recording it, then you reply to the A? query with your temporary address as the answer and a chosen timeout (maybe you plan to have this work for one hour, so you give 3600 seconds timeout). You then act as a NAT gateway that translates between IPv6 and IPv4 for that address mapping.<p>This doesn&#x27;t work <i>great</i>, it breaks protocols which assume they&#x27;re transparent (e.g. some FTP modes), it is slower and clunkier than &quot;just&quot; having IPv4 as we do today, and as I said it isn&#x27;t viable with huge numbers of users (you run out of address space) but it&#x27;s good enough that a lot of common application software remains usable this way.<p>This is about the gentle slope down, so it doesn&#x27;t need to be perfect or even have the potential to be perfect, it just needs to work well enough to reduce the amount of tech support phone calls.<p>Think of it like the way pulse dialling was deprecated. Nobody needed to figure out a way to have pulse dialling be <i>as good</i> as tone dialling, let alone a truly out-of-band system (as is used by your mobile phone, and most other modern systems), they just needed to minimise the situation where lots of customers discover that they were using pulse dialling only because now it doesn&#x27;t work.')