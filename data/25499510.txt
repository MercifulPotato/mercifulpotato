Item(by='nickjj', descendants=None, kids=None, score=None, time=1608584652, title=None, item_type='comment', url=None, parent=25495539, text='&gt; Anecdotally, since I got away from Ruby, working on software became way more productive and tolerable.<p>Oddly enough I found myself becoming less productive when I tried Elixir and Phoenix for a bit (compared to Ruby).<p>You could look at code written by 10 people and end up with 10 drastically different looking code bases. Not just the organization of files but the logic behind the functions. It makes it very hard to read other people&#x27;s code unless you know every pattern they use very well.<p>Here&#x27;s an example of that where I wrote something one day, asked if there&#x27;s a better way to do it and someone else wrote their own version[0]. Take a look at the 2nd code snippet vs the 3rd. The first code snippet happens to be Python btw. Even after a year of casually working with Elixir I can&#x27;t understand the 3rd snippet of code at a glance. When I first tried to parse it mentally I spent literally an hour picking it apart just to see what everything did and I forgot almost all of it a week later.<p>I also found myself much less productive mainly because the language tends to be quite verbose compared to Ruby, especially when you compare things like ActiveRecord vs Ecto. Ecto is one of those tools where it sounds unbelievably good on paper with great abstraction ideas but in practice it&#x27;s pretty complicated because there&#x27;s tons of different syntactical ways to do the same thing, the docs aren&#x27;t inconsistent and every blog post you read has people implementing things in a different way. Then you combine that with it being fairly low level and you end up having to write huge amounts of very tricky code to do the equivalent of what you can do in AR.<p>At least with Rails, most projects look the same and unless someone dives off the deep end with meta programming, you can generally follow the code. I guess this is a testament to how good Rails is when it comes to developing its APIs. You can go such a long ways and develop fully featured apps based on Rails without really having to do anything crazy.<p>[0]: <a href="https:&#x2F;&#x2F;nickjanetakis.com&#x2F;blog&#x2F;formatting-seconds-into-hh-mm-ss-with-elixir-and-python" rel="nofollow">https:&#x2F;&#x2F;nickjanetakis.com&#x2F;blog&#x2F;formatting-seconds-into-hh-mm...</a>')