Item(by='KronisLV', descendants=None, kids=None, score=None, time=1608899816, title=None, item_type='comment', url=None, parent=25535510, text='Seems about right. Luckily, if performance becomes an issue, you can probably scale out horizontally, or perhaps if you don&#x27;t care much about sticking to the reference implementations, you can consider using alternative ones.<p>For example, there are benchmarks of some of the Ruby implementations here: <a href="https:&#x2F;&#x2F;pragtob.wordpress.com&#x2F;2020&#x2F;08&#x2F;24&#x2F;the-great-rubykon-benchmark-2020-cruby-vs-jruby-vs-truffleruby&#x2F;" rel="nofollow">https:&#x2F;&#x2F;pragtob.wordpress.com&#x2F;2020&#x2F;08&#x2F;24&#x2F;the-great-rubykon-b...</a><p>And here&#x27;s a paper from 2016 comparing some of the Python implementations: <a href="http:&#x2F;&#x2F;kth.diva-portal.org&#x2F;smash&#x2F;get&#x2F;diva2:912464&#x2F;FULLTEXT01" rel="nofollow">http:&#x2F;&#x2F;kth.diva-portal.org&#x2F;smash&#x2F;get&#x2F;diva2:912464&#x2F;FULLTEXT01</a><p>Of course, performance in real world scenarios and when using larger frameworks (such as Ruby on Rails or Django) may differ from synthetic benchmarks, but it&#x27;s nice that at least there&#x27;s work done in creating these alternative implementations. A bit like how we have Hotspot and OpenJ9 for Java as well or even how there&#x27;s glibc and musl - that way you can choose which implementation is the most suited for your needs, be it for performance reasons or others...')