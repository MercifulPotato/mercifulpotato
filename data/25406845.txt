Item(by='alquemist', descendants=None, kids=None, score=None, time=1607870457, title=None, item_type='comment', url=None, parent=25398225, text='Can not resist. The tension between &#x27;basic feature set&#x27; and an admittedly superficial reading of the docs is very funny. The manifesto links to <a href="https:&#x2F;&#x2F;github.com&#x2F;commercialhaskell&#x2F;rio#readme" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;commercialhaskell&#x2F;rio#readme</a> and urges us to use the rio library to get started. Upon opening the rio link and scanning for a list of the &#x27;basic feature set&#x27;, I stumble upon the first block of quoted code. After removing 39 eoln characters in respect for the HN audience, it reads:<p>&quot;Our recommended [language extensions] defaults are: AutoDeriveTypeable BangPatterns BinaryLiterals ConstraintKinds DataKinds DefaultSignatures DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DoAndIfThenElse EmptyDataDecls ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase MonadFailDesugaring MultiParamTypeClasses MultiWayIf NamedFieldPuns NoImplicitPrelude OverloadedStrings PartialTypeSignatures PatternGuards PolyKinds RankNTypes RecordWildCards ScopedTypeVariables StandaloneDeriving TupleSections TypeFamilies TypeSynonymInstances ViewPatterns&quot;<p>39 <i>language</i> extensions just to get started. This screams &#x27;incredibly complicated&#x27;, even if perhaps reality is rather more mundane. Consider the 40th language extension: GradualTyping, so perhaps those that would rather write code about data than about types using a half baked and evolving type language  (which taken to its logical conclusion will have to become a full fledged theorem prover in the Coq &#x2F; Idris &#x2F; Agda &#x2F; Lean lineage anyways) could get their jobs done.<p>Wish you guys all the best!')