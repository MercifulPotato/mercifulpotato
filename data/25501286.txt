Item(by='serial_dev', descendants=None, kids=[25501884, 25503971, 25501479, 25502929, 25501509, 25501333, 25503743], score=None, time=1608595195, title=None, item_type='comment', url=None, parent=25500671, text='I like the sentiment of this article. It&#x27;s a great analogy.<p>Might be a little off topic, but it reminds me how I am happy that the Go programming language and its philosophies gained popularity even though I don&#x27;t use the language regularly. Watching Go talks made me appreciate simplicity and clarity.<p>It made me accept that I don&#x27;t always need to use every design pattern in the book. It made me think about the readers of my code, who might not always be experienced enough, or might not always have time to understand the brilliant architecture I came up with. I can have some repeated code sprinkled around in the codebase. I don&#x27;t always need to have n+1 layers in my architecture where all the layers just call the next layer anyway. It might be better to use functions over a complicated hierarchy of classes. It made me appreciate simple tools and widely accepted conventions that result in codebases that feel familiar the second you dive in.<p>Of course, go is not the only community where these ideas are prevalent, and it&#x27;s good to know your design patterns and architecture, etc... Finding the balance is not always easy, but it&#x27;s good to have a popular, successful &quot;counter force&quot; community.')