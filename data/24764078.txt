Item(by='Jugurtha', descendants=None, kids=None, score=None, time=1602584552, title=None, item_type='comment', url=None, parent=24763257, text='I use TaskWarrior with tags like `+read` or `+watch`. The `.task` directory is pushed to GitLab with a function in my rc file. This function is on my several machines so I can pull the tasks anytime:<p><pre><code>  function tupd() {\n      git  -C ~&#x2F;.task commit -a -m &quot;Update tasks $(whoami)@$(hostname)&quot;\n      git  -C ~&#x2F;.task push\n  }\n\n\n</code></pre>\nI also use this for product management with the projects functionality in TaskWarrior. Then, I run a script that takes entries relative to a project (JSON) and converts them to Markdown, pushes them to the project Wiki and buffer backlog for the rest of the team to be aware of different things I stumble on.<p>This is a buffer, the entries will then be refined into either &quot;issues&quot; in the backlog, or entries in the knowledge base when we learn something that solves one of our problems. We also do that when we close issues: we learn something, it goes to the knowledge base for future projects.<p>This has served us well. For example, when we started developing the product we&#x27;re working on, the first commits were to use a plugin architecture, and this was made easier because there were entries with many resources on how to go about it. Same when we wanted to sandbox arbitrary code, or when we wanted to add live editing for Jupyter notebooks.<p>The funnel is nice. Add task with title and description and tag. Push it. Augment is as you evolve and learn things. Push. At some point, you reach a certain activation energy and you just go for it and execute. Or when you&#x27;ve had a problem and find yourself well equipped to solve it.<p>When it&#x27;s a paper that passes a certain quality threshold, I&#x27;ll often read it, summarize it in Markdown with a sort of template with meta information like link, authors, etc. Then key points, measures, data they used, possible applications. Then I disseminate this to the team so people who are more competent at this can take a closer look after the article passed preliminary screening.')