Item(by='wnoise', descendants=None, kids=[25743733], score=None, time=1610437958, title=None, item_type='comment', url=None, parent=25742851, text='It probably technically does, in a horrifying Turing-tarpit way.<p>I actually did try to get the behavior I wanted out of nested tmux invocations and a hairy mess of scripts. There was no &#x27;next-session&#x27; command (though now it looks like &#x27;switch-client -l&#x2F;-n&#x2F;-p&#x27; would work. Hmm.)<p>I couldn&#x27;t get it to work right, only a half-done approximation, and it involved way too many tmux interpositions.<p>Screen: client -&gt; per client view of P panes -&gt; P of entire pool of T terminals in session.<p>Tmux: client -&gt; 1 of S sessions -&gt; 1 of W windows -&gt; P panes<p>To get splitting at the top level I need one top-level tmux client and its associated top-level session managed by one server.  It can actually be locked to one window for what I care about.<p>In each of its panes, I need to run another tmux client so as to be able to actually change what final pty each pane will display.  And each of these need to be separate sessions, so that I can display separate things in each of them.  Each of these separate sessions will generally only have one window, with its implicit single pane.  I should, of course, run all of these inner tmux sessions as a separate server from the top one.<p>Now I just have to make restricted keybindings for both the top and inner clients, and make make sure that any binding for the inner clients are replicated as &quot;self-insert&quot; in the top-level client.  And remember that there are multiple places I can direct the command-lines (so need two bindings).<p>This results in the top level server having:\nclient -&gt; session -&gt; 1 window -&gt; P Panes -&gt; P clients<p>And the bottom server having:\nP clients -&gt; T sessions -&gt; T windows -&gt; T panes<p>And this doesn&#x27;t yet let you have multiple top-level clients attached the way\nscreen does.<p>I&#x27;m sure I could eventually sand off all the sharp edges where it doesn&#x27;t do what I want and make this work.<p>Or I could just use screen.')