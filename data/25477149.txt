Item(by='mlthoughts2018', descendants=None, kids=[25479177, 25477979, 25477554, 25477325], score=None, time=1608382887, title=None, item_type='comment', url=None, parent=25476993, text='Simple: use mocker.patch to patch out random.randrange and have it return a fixed sequence of results that would imply a known result.<p>Your test should not depend on the internal workings of randrange or anything relying on unfixed random state. Your test is only checking if, <i>given correct results from randrange</i> (or any other external world source of random draws) that the rest of your function correctly produces the two-digit bias number.<p>Otherwise you are just testing randrange itself.<p>If you are asking how to test a pseudorandom number generator, you have a few choices. You can either fix the random seed and test the algorithmâ€™s precise implementation on a large number of known results. Or you can define tests statistically with margins of error, for example testing the entropy in a series of uniformly generated bits or the resulting distribution in a series of random draws from a fixed list, and decide what level of precision is tolerable before considering a test failed.')