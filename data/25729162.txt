Item(by='sradman', descendants=None, kids=[25729238], score=None, time=1610375167, title=None, item_type='comment', url=None, parent=25725778, text='The last-modified headers indicate that the front page and docs have not been updated since May 2018. This is not a viable platform and the analysis of Twitter&#x27;s technical shortcomings is facile. The original 140 character limit, now doubled to 280 characters, was originally constrained by the SMS interface Twitter supported but ultimately imposes a preferred content style that distinguishes the microblogging experience.<p>The scaling problem is what AWS&#x27;s James Hamilton use to call the &quot;Hairball Problem&quot; in which there is no single database partitioning scheme that performs well under all workloads. The Subscriptions [1] section of the documentation demonstrates this problem:<p>&gt; I immediately came up with the naïve solution: keep a list of users to which users are subscribed, then when you want to get updates, iterate over the list and find the last entries for each user. And that would work, but it&#x27;s kind of costly in terms of disk I&#x2F;O. I have to visit each user in the list, retrieve their last few entries, and store them somewhere else to be sorted later. And worse, that computation has to be done every time a user checks their feed. As the number of users and subscriptions grows, that will become a problem.<p>&gt; So instead, I thought about it the other way around. Instead of doing all the work when the request is received, Blërg tries to do as much as possible by &quot;pushing&quot; updates to subscribed users.<p>This approach works well except when some users have hundreds of thousands of followers which results in an explosion of &quot;pushing&quot; updates. This doesn&#x27;t even take into account geography related latencies of a global user base. Furthermore, naive attempts at databases without fault tolerance assume that losing recent data is not a big deal. It isn&#x27;t, the big problem is failures that corrupt data and can&#x27;t be restored to a known good state.<p>[1] <a href="https:&#x2F;&#x2F;blerg.cc&#x2F;doc&#x2F;#subscriptions" rel="nofollow">https:&#x2F;&#x2F;blerg.cc&#x2F;doc&#x2F;#subscriptions</a>')