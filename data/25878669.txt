Item(by='throwaheyy', descendants=None, kids=None, score=None, time=1611365852, title=None, item_type='comment', url=None, parent=25877052, text='Talking about specifically boot? Once all other bottlenecks (such as mechanical HDDs or insufficient RAM) are eliminated?<p>Plug and play. Enumerating buses for hardware, and loading drivers for it all. Starting off in backward-compatible hardware modes (eg. a BIOS using PIO in the case of storage devices) and progressively enabling faster and more complicated modes (e.g. DMA or AHCI as drivers get loaded).<p>The same mechanisms that allow you to plug in hardware to a desktop and have it “just work” make your computer slower to start up than it could theoretically be. There’s a trade-off between that configurability and startup performance. Embedded systems can start up faster because addresses of its peripherals, resources, accessories etc. are computed ahead of time and hardcoded. It doesn’t have to dynamically rediscover them every time it starts.<p>Extend the “plug and play” concept to software — modular software packages, frameworks, reusable components, dynamic plugins. That’s why, once the OS is loaded, software is slow to start up.<p>The configurability&#x2F;performance trade off is true at every level of computing, even down to the function call - <a href="https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;4667882&#x2F;is-a-statically-linked-executable-faster-than-a-dynamically-linked-executable" rel="nofollow">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;4667882&#x2F;is-a-statically-...</a>')