Item(by='tompic823', descendants=None, kids=None, score=None, time=1602214607, title=None, item_type='comment', url=None, parent=24726293, text='Lots of really great questions in here! Starting at the top-<p>The process demoed in the video is for user-based auth. Service tokens can be issued programmatically and provide read-only access to one config. You can pass these into your environment via puppet and other configuration tools, or even via LDAP, in much the same way you bootstrap other OS config like SSH keys.<p>I really like your thoughts around more niche access roles, and it&#x27;s definitely where we&#x27;re headed. Admittedly our RBAC is currently more limited with a basic Member, Admin, Owner model. We do have existing audit capabilities for monitoring secrets changes (without revealing the actual secrets) and support shipping those logs to Slack or a webhook.<p>Audit history is based on your specific plan[0], but we currently offer up to a year. Some customers do have requirements for longer time periods and we can easily configure that for them.<p>Regarding your last point, this is what we refer to as secret referencing. You can absolutely reference secrets across different configs and projects to avoid repeating common values. Here&#x27;s our announcement from when we shipped this feature back in August[1].<p>[0] <a href="https:&#x2F;&#x2F;doppler.com&#x2F;pricing" rel="nofollow">https:&#x2F;&#x2F;doppler.com&#x2F;pricing</a><p>[1] <a href="https:&#x2F;&#x2F;doppler.com&#x2F;changes&#x2F;secrets-referencing" rel="nofollow">https:&#x2F;&#x2F;doppler.com&#x2F;changes&#x2F;secrets-referencing</a>')