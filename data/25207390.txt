Item(by='lispm', descendants=None, kids=None, score=None, time=1606296391, title=None, item_type='comment', url=None, parent=25204538, text='&gt; each calling lots of opcodes but just can execute a single opcode and works by hardware beings extremely faster.<p>Typically these language oriented instructions need to be implemented by microcode in the CPU. Often this does not create a fast system, but it helps to keep the compiler simple. Examples are typical Lisp Machines, you&#x27;ve mentioned. With RISC CPUs OTOH the idea is to make the CPU instructions more primitive and put more effort into optimizing compilers instead. There were a few attempts to combine (high) language supporting architecture and the RISC principle, but I personally have never seen such a machine.<p>&gt; in the hundreds of thousands of dollars<p>Usually in the &#x27;tens of thousands of dollars&#x27;.')