Item(by='lmm', descendants=None, kids=None, score=None, time=1605059527, title=None, item_type='comment', url=None, parent=25046929, text='&gt; &quot;runMain&quot; is still &quot;runMain&quot;, I don&#x27;t know where that comes from.<p>Ah, I got it backwards: old tutorials say to use &quot;run-main&quot;, and if you do run-main now you get &quot;Expected &#x27;;&#x27;&quot;.<p>&gt; There are lots of available commands indeed, due to the nature of SBT, but a basic workflow always uses the same commands: compile, test, run. Any extra tasks used usually come from plugins, just like in Maven. And reading documentation is needed for configuring and running those, just like in Maven.<p>But in Maven you <i>don&#x27;t</i> need to read any documentation if you&#x27;re just building the project, because every project has the exact same lifecycle. If you want to add or remove plugins to make the build do something different then you need to read the documentation of those plugins, sure, but you don&#x27;t have to know anything about the plugins if you&#x27;re just working on the code. E.g. if an SBT project is packaged for docker then you&#x27;ll have to run some docker-specific command to do it (and you&#x27;ve got no way to discover which submodule you&#x27;re supposed to run it in), whereas if a maven project is packaged for docker then you just run &quot;mvn deploy&quot; as usual.<p>&gt; And if the common settings are defined within the parent project, it stops being self-contained. SBT accepts this reality and that&#x27;s why multimodule projects are a thing.<p>Parent projects work consistently whether or not you&#x27;re using a multimodule project, which is another problem with SBT - it&#x27;s really confusing to share parts of a build definition between more than one project, to the point that most people copy&#x2F;paste instead. With maven you can do a very natural, gradual progression from single module -&gt; multi-module project -&gt; multi-module project where the parent is its own module -&gt; independent projects  using a shared parent (e.g. an organisation-level parent). It&#x27;s another case of a hierarchy working much better than a grid.<p>&gt; By the way: creating a separate integration test config in Maven is painful, up to the point that people recommend to just add a new subproject that contains them. Yay, more nesting!<p>Think of the people who come to join your project! I&#x27;ve seen SBT modules with 5 different scala source directories and no obvious relationship between what depends on what, and good luck getting any IDE to understand whether test depends on integration-test or vice versa (most will give up and just build everything together, which is fine until you add something that works in the IDE and then errors when you build it with SBT).<p>A separate submodule is a much better approach - tools and people are much better at handling &quot;module A depends on module B&quot; than &quot;this source folder depends on that source folder&quot;.')