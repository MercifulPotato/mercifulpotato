Item(by='dragontamer', descendants=None, kids=[25736679], score=None, time=1610397323, title=None, item_type='comment', url=None, parent=25733285, text='Hmmm...<p>Well, first problem is using RDRAND in this case. RDRAND isn&#x27;t meant for seeds, its for a random number.<p>If you&#x27;re seeding something, you&#x27;re supposed to use RDSEED, which has more guarantees about seeding &#x2F; entropy behavior. I don&#x27;t think RDRAND was ever intended to be used as an entropy source.<p>(Think of it this way: RDSEED is kinda like &#x2F;dev&#x2F;random, while RDRAND is kinda-like &#x2F;dev&#x2F;urandom)<p>------<p>RDRAND is an older instruction than RDSEED. So that then brings up the question: what is the proper startup behavior of systems without RDSEED but with RDRAND? Well, since RDRAND never had entropy guarantees, I guess its up to other sources of entropy (see clock-entropy, such as RDTSC).<p>RDTSC isn&#x27;t a source of entropy, its just a clock. But as a GHz-level precise timer, it can be used to capture entropy from some other source that does have time-based entropy. (IE: hard drive response rates, or something).<p>Will the hard drive respond in 10,000,000 clock ticks? Or 10,000,020 clock ticks? That&#x27;s a source of entropy, a bad one, but maybe you have enough hard drive I&#x2F;O going on that you can get enough entropy to boot up Systemd.<p>EDIT: Hmm... hard drives may not be on all systems. In that case, DRAM-latency could possibly be the answer. DRAM refreshes on a regular basis, locking the CPU out temporarily. As such, the amount of time it takes to access data from DRAM is actually somewhat random (in the scope of a GHz clock anyway). Maybe that could be used as an entropy-source of last resort? (as long as RDTSC exists anyway).')