Item(by='derefr', descendants=None, kids=[25313988, 25307401], score=None, time=1607110497, title=None, item_type='comment', url=None, parent=25304666, text='&gt; No. JavaScript was a web language for web developers to be able to automate forms, etc, client-side. AFAIK, originally it was never intended to run on the JVM server-side like Groovy does.<p>Sure, but that&#x27;s not an argument against JavaScript having potentially been a planned part of the JVM ecosystem (or, at least, a language playing a <i>role</i> in the JVM ecosystem, without itself being hosted on the JVM, instead maybe interacting with the JVM through some kind of IPC or FFI bridge.)<p>Remember, Sun used to be trying to squeeze the JVM into web browsers as well, in the form of Java applets. But we never saw any real ability to script against these applets. &quot;Java applet &#x27;engines&#x27; under JavaScript control&quot;, could have been the portable equivalent to &quot;ActiveX components under JavaScript control.&quot;<p>You know how modern games involve 1. a self-contained game engine written in C++ or C#, plus 2. the game itself being mostly Lua scripting? If Sun had pushed harder, we could have seen something like that in 1995, with web browsers running JavaScript-scripted games calling into Java game engines; long before we got equivalent HTML5 APIs like Canvas.<p>Probably, if the world had gone down that path, we would have seen JavaScript gradually moving &quot;into&quot; the JVM; and the JVM gradually coming to take the position that the JavaScript engine takes in modern web browsers.')