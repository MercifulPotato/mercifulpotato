Item(by='roblabla', descendants=None, kids=[25935216], score=None, time=1611783100, title=None, item_type='comment', url=None, parent=25932317, text='&gt; Their CI&#x2F;CD pipelines also seem a bit more refined than GitHub actions - maybe it is just a maturity thing though? That could also just be my inexperience with GitHub Actions.<p>My experience with CI&#x2F;CD is that github action&#x27;s is stellar, while gitlab-ci is a huge mess of features that don&#x27;t compose well. For instance, in gitlab-ci, you can specify that the job should only run when a specific file changes with `only:rules`, very useful for monorepo setups. Separately, you can specify explicit dependencies in your steps to construct a sort of DAG of your steps with `needs`. Those two features independently work great, but when used together, things become very weird, down to causing YAML parsing errors...<p>Another similar experience: Child pipelines are a mess. Child pipelines can&#x27;t depend on the parent steps, can&#x27;t download artifacts from the parent steps. Similarly, the parent can&#x27;t access the child pipeline&#x27; artifact.<p>CI has some fun interaction with bot accounts. By fun, I&#x27;ve had MRs started by bot accounts running in weird CI contexts where some environment variables were not set for whatever reason.<p>Overall, gitlab-ci feels... poor. Github-actions, on the other hand, has been a joy to use, and is a lot less surprising. Most features tend to be thoughtfully designed and work well together. I can&#x27;t give many examples here as it&#x27;s hard to point out things that just work, but I&#x27;ve done extensive work with both gitlab-ci and a github actions and I certainly prefer working with github actions any time of day.')