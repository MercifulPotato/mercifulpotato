Item(by='azhenley', descendants=None, kids=[25273930, 25267007, 25266430], score=None, time=1606838879, title=None, item_type='comment', url=None, parent=25266262, text='No, this isn&#x27;t inlining. They&#x27;re managing their own call stack and relying on undefined behavior. See the quote from the article:<p>&gt; BEAM&#x2F;C generated a single C function for each Erlang module. Local calls within the module were made by explicitly pushing the return address to the Erlang stack followed by a goto to the label of the called function. (Strictly speaking, the calling function stores the return address to BEAM register and the called function pushes that register to the stack.)<p>&gt; Calls to other modules were done similarly by using the GCC extension that makes it possible to take the address of a label and later jumping to it. Thus an external call was made by pushing the return address to the stack followed by a goto to the address of a label in another C function.<p>&gt; Isnâ€™t that undefined behavior?<p>&gt; Yes, it is undefined behavior even in GCC.')