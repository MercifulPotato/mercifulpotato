Item(by='JabavuAdams', descendants=None, kids=[24989063, 24988893, 24991062], score=None, time=1604496138, title=None, item_type='comment', url=None, parent=24986908, text='IMGUI is good on many levels, but also has some serious drawbacks. Specifically: latency in figuring out exactly how big a control or layout will be. This also translates into at least 1-frame latency when drawing to a widget based on user input. Imagine a scrubber line on a video timeline or graph, for instance.<p>Non-immediate mode GUI (retained-mode?) means that you can query a layout for exactly how big it will be before it gets drawn. So, if the user clicks at say (100, 200), I know exactly where to draw something in response to that click on top of my widget, without waiting a frame for the GUI to layout.<p>Maybe developers who have come up in the web world don&#x27;t care, but I find reflow issues to be one of the worst features of browser apps. If you&#x27;re going for a tight native experience, then this is a huge no-no.<p>The &quot;immediate-mode&quot; GUI idea was something that Casey Muratori, a very influential indie game developer, came up with. Part of his rationale was that it was annoying to store all the state for your widgets in a parallel data structure to the widgets themselves. So why not just draw the widgets, as needed, where you have the local variables and data to draw them?<p>Various developers and frameworks seem to get smitten with this idea, jump on the bandwagon, and then run into the flaws. For a long time the Unity game engine followed this model. I found the GUI easy to get started with, but ultimately limiting. Unity eventually abandoned this approach.<p>Really, this is good for developer-quality in-game debugging UI, but it&#x27;s not a great approach for creating polished end-user UI.<p>I adopted IMGUI, used it briefly, was impressed by its speed, but ran into massive problems customizing controls to get exactly the right look and feel.<p>My take -- this is an ideologically-driven kind of neat but ultimately dead end. Use it to quickly get a dev GUI going, but it won&#x27;t see you through to a polished consumer-ready GUI.')