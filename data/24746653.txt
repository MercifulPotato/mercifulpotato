Item(by='nendroid', descendants=None, kids=[24754941], score=None, time=1602431885, title=None, item_type='comment', url=None, parent=24745522, text='&gt;I can only quote Lutwid Wittgenstein: &quot;The limits of my language mean the limits of my world&quot;<p>Except I don&#x27;t see how a quotation proves anything or how this is relevant. First off is Lutwid correct? Can you think of things outside of language? Can you think in pictures? If so than I would say he&#x27;s wrong.<p>Second off, what does this have to do with bad naming in a programming language? Nothing.<p>&gt;No need for that, because history has shown that people like English keywords, but that&#x27;s about it.<p>I&#x27;m not arguing for english or english keywords. I&#x27;m arguing for phrasing in naming things, this is exactly what literate programming is arguing for. I may have used the word &quot;English&quot; because HN is an english forum but you can easily replace that with &quot;Any relevant language&quot;<p>&gt;Check discussion here: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24730713" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24730713</a><p>Check out my response to it here: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24733487" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24733487</a><p>The article is talking about composability not readability which is a separate problem. SQL is in fact quite a readable language. Many people can read a query and instantly derive meaning. Either way I am not talking about programming language syntax. I am talking about naming within the bounds of the syntax.<p>&gt;let&#x27;s look at one of these: COBOL. It is literally what you want: programs look like text, which comes from trying to make it read like English &quot;for business people&quot; (who don&#x27;t use it anyways). And guess what? No one who actually uses it really likes the syntax.<p>It&#x27;s not about whether or not the writer likes the syntax. Clearly program writers have a bias for elegance over readability. It&#x27;s about whether someone can read your program and completely understand it in one pass. Clearly COBOL was first off, not guaranteed to be readable and second off had many many other issues outside of readability. Readability was definitely not the main issue with COBOL.<p>&gt;Maybe you should start with Mathematicians and ask them to stop naming their variables &quot;x&quot; or &quot;f&quot; and use English instead of symbols. How about that? :)<p>All mathematicians are expected to write paragraphs in &quot;English&quot; or some other relevant language outside of equations. Many math papers and math books have more written english than equations.<p>Whenever a mathematician uses the letter &quot;x&quot; or &quot;f&quot; they define the meaning with an english phrase or paragraph. This is expected for clarity in math and in english but for some odd reason not expected for programmers. The mathematician can only get away with an &quot;x&quot; or an &quot;f&quot; because he has an accompanying english explanation defining those variables right next to the equations.<p>Programmers are like mathematicians writing conceptual papers using only equations and math symbols without the english explanations. We have the luxury to insert some english into the naming of primitives so we should take advantage of that lest all our programs devolve into primitives with single letter names.<p>Sure we can comment our code. But people tend not to do that to the degree that it&#x27;s done to explain things in a mathematical research paper.')