Item(by='tetromino_', descendants=None, kids=[25625174], score=None, time=1609705473, title=None, item_type='comment', url=None, parent=25624077, text='The problem is not with C the language, but with the C standard library, which has many inefficiency warts. Examples:<p>* Strings. Any form of string access other than scanning the string&#x27;s characters one by one from start to finish can benefit from knowing the string&#x27;s length in advance. In C++, std::string and std::string_view know their lengths; plain C strings don&#x27;t. Thus, in performance-optimal plain C, <i>almost any</i> function that takes a string parameter ought to also take the string length as a separate parameter - but most C standard library functions neglect to do so.<p>* Callbacks. When the callback is static, you want to give the compiler the opportunity to inline it into the call site. In C++, this is natural: pass the callback as a template parameter. In performance-optimal C, you&#x27;d want to provide macro version of functions that take callbacks. But the C standard library only supports callbacks as function pointers (e.g. in bsearch(3), qsort(3) etc.), which means unnecessary pointer dereferences and which makes inlining impossible.')