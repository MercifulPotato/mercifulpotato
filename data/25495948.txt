Item(by='dooglius', descendants=None, kids=[25496117, 25496059], score=None, time=1608565802, title=None, item_type='comment', url=None, parent=25493577, text='The articles defines its sense of commutation as &quot;meaning that if the two changes could be written without knowledge of each other, they can be applied in any order&quot;<p>But, this seems to require semantic level understanding of the code, which generally can&#x27;t be done. For instance, say Alice adds a call to foo() while Bob changes foo to require some precondition that doesn&#x27;t hold in Alice&#x27;s case. That&#x27;s going to appear to commute as these changes would touch completely separate files, but actually the resulting code won&#x27;t work. In a normal git flow, this would be a case of whoever gets the commit in and passes CI first &quot;wins&quot;, and the second commit fails CI and requires the issue to be fixed. This method seems to rely inherently on the fact that git commits are ordered. How would this work with a pijul-based flow?')