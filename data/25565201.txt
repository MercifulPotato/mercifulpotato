Item(by='tabtab', descendants=None, kids=None, score=None, time=1609202384, title=None, item_type='comment', url=None, parent=25565116, text='Why is state management a problem? Could you give a sample scenario? Have all screens be tied to an application session instead of managing page per page. A given screen stays put the entire session (although may be hidden or removed as needed). Its state would be hierarchically addressable &amp; examinable, such as requesting &quot;scopeA:screenB.panelC.widgetD.value&quot;. (Scoping clause optional.) I have some further suggestions for state and scope management that would take up too much space here.<p>The Oracle Forms client seemed to somehow pull it off. (It used a proprietary markup, not XML.) There are deficiencies with the Oracle Forms model, but it proved a browser-like GUI client approach can work. Companies loved Oracle Forms before Java ruined it. They weren&#x27;t pretty, but cheap and practical to create and maintain. The Oracle Forms devs were 3x more productive than our MVC team and it took about 1&#x2F;5 the code to do the same thing. Productivity died in CRUDville; we de-evolved. (Same for desktop VB &amp; Delphi like tools, although they required per-PC reinstalls for app upgrades, unlike Oracle Forms.)')