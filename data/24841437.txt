Item(by='marmaduke', descendants=None, kids=[24841905], score=None, time=1603222197, title=None, item_type='comment', url=None, parent=24841382, text='The main thing missing from Numba is user defined structures, the jit classes are a performance penalty usually.<p>That said, in terms of composability you can jit over the closure to achieve a lot of what you might want, e.g.<p><pre><code>    def make_loop(f):\n        @jit\n        def fn(x):\n            for i in range(x.shape[0]):\n                 x[i] = f(x[i])\n        return fn\n</code></pre>\nfor any jit&#x27;d function f will be just as fast as if you had inlined the body of f.<p>For introspection and simplicity, I think, in high performance, you simply have to choose two of fast, simple and generic.  Julia clearly chooses fast and generic.')