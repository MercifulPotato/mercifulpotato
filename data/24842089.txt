Item(by='kbenson', descendants=None, kids=None, score=None, time=1603226062, title=None, item_type='comment', url=None, parent=24839030, text='It&#x27;s not about trust that they aren&#x27;t doing something malicious, it&#x27;s about trusting them to provide the level of attention and work required to keep something very secure.<p>A kernel and the core OS capabilities are a high security domain and I expect Apple to be extremely careful and put a lot of attention into making it secure.  Desktop applications are a different domain where security is not quite at the same level and Apple will not and <i>can not</i> provide the same level of security for all of them that it can and does provide for the base OS.<p>As a simple example, compare Safari and the OS.  The domains in which they operate make it extremely hard, if not impossible, for Safari to have the same level of security as the OS and kernel because the use case of Safari opens it to far more attack vectors.<p>Does anyone believe that exempting all Safari traffic from firewalls would be a good idea?  If not, then why should we accept that it&#x27;s a good idea for some arbitrarily set of other Apple applications?<p>The issue here is simple, it&#x27;s the same as it always is with Apple.  There&#x27;s a choice to do the thing that&#x27;s slightly more complex and requires users to provide even a minimal amount of input that they might have to think about (&quot;An application is attempting to change the traffic flow required by X service, if you allow this it may cause problems with this service. Yes&#x2F;No?&quot;), but instead they opt for &quot;Users must trust us implicitly and entirely in <i>everything</i> we do&quot;, which is their go-to solution.  It all comes back to control, does Apple control the user, or the the user control their software?  Apple has built their empire around the former, so while we can&#x27;t expect the latter without if being forced on them, that doesn&#x27;t mean we <i>shouldn&#x27;t</i>.')