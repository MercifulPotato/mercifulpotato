Item(by='m45t3r', descendants=None, kids=[25865853, 25866389], score=None, time=1611267169, title=None, item_type='comment', url=None, parent=25863550, text='I don&#x27;t really understand this feature creep argument against systemd. I mean, this is not like this is a feature included in PID1, it is a new binary so a separate feature (and I am pretty sure that you can choose to not compile it too if you don&#x27;t want, like almost any other systemd feature with the exception of systemd itself and journald).<p>Also, the way I understand systemd nowadays is it isn&#x27;t an init system, it is an API for Linux systems that abstracts low level features in kernel in a consistent way (either using unit files or systemd C interface). It has an init system because it needs control from early boot so it can offer a nice interface for services. Ditto for dbus, mount system, timers, logging, etc. You can use as much or as little as you want, but if you choose not too you need to invent your own way (that was what most distros used to do before systemd).<p>Also, integration between those subsystems (say, init systemd and cron) was basically writing glue code, while in systemd world they&#x27;re meant to be integrated (unit files of any type can depend of each other, so you can have a service that depends on a timer, a disk mount and a udev event, for example).<p>So yeah, you may not like the way that systemd does things, but at least use valid arguments like the fact that things are more opaque (but this is understandable, this is an abstraction layer), or that the declarative approach of systemd makes some things harder (true enough, but you can always fallback to use scripts and you still have all the power of systemd dependency system).')