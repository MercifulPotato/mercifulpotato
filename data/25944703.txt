Item(by='adenozine', descendants=None, kids=[25945222], score=None, time=1611852635, title=None, item_type='comment', url=None, parent=25944485, text='Call me crazy, but I think if there&#x27;s any HS classes or earlier, teaching algorithmic thinking, those kids are have a crazy head start if they choose CS.<p>I don&#x27;t mean these classes where they get out and write<p><pre><code>    class Dog(Animal):\n      def bark(self):\n        print(&quot;a Dog is barking!&quot;)\n    \n</code></pre>\nbut if there&#x27;s young people being taught the difference between quadratic&#x2F;exponential&#x2F;polynomial algorithms, that&#x27;s going to stew in their brains and ferment into gray matter that will ACTUALLY make them better programmers.<p>I&#x27;m not an educator, nor am I educated ABOUT education, but it&#x27;s just my hunch. I&#x27;ve seen many a young buck come around with a fancy degree or whatever, and not be able to see a skip-list shaped hole for his skip-list shaped peg. That&#x27;s hard to deal with at a meta scale. I can&#x27;t develop a way to quickly train people OTJ how to think algorithmically. They either learned to think about the problems that way, or they learned to rely on some stupid Haskell&#x2F;Python&#x2F;Elixir&#x2F;Kotlin&#x2F;Blub thing, and can&#x27;t get any meaningful work done quickly.')