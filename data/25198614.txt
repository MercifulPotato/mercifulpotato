Item(by='mumblemumble', descendants=None, kids=None, score=None, time=1606227520, title=None, item_type='comment', url=None, parent=25185197, text='This article has me torn. On the one hand, I always use multiparadigm languages at work, and have always preferred a pragmatic, &quot;best tool for the job&quot; approach.<p>On the other hand, I am starting to believe that, in truth, there are no multi-paradigm languages. Only imperative languages with bells and whistles. Because what matters isn&#x27;t how you <i>can</i> use the language, it&#x27;s how you <i>do</i> use the language. With the peculiar recent exception of Scala, multi-paradigm languages seem to always tend toward a mushy, homogeneous, imperative style whose most noteworthy feature is just how imperative it is. Even with all the classes, higher-order functions, and declarative DSLs sprinkled on top, the overall shape always ends up being overwhelmingly imperative. It takes more than a dollop of meringue to turn apple pie into key lime pie.<p>I didn&#x27;t really start thinking this way until more recently, when I started looking outside of the mainstream and paying more attention to explicitly single-paradigm languages. I think maybe it&#x27;s a bit like how McDonald&#x27;s, A&amp;W, Burger King, Hardee&#x27;s, etc. all seem completely interchangeable if you don&#x27;t spend a lot of time eating at them.')