Item(by='tzs', descendants=None, kids=[25767523], score=None, time=1610567557, title=None, item_type='comment', url=None, parent=25765884, text='Here&#x27;s the problem. Say I develop program&#x2F;library&#x2F;whatever Foo.<p>I make a new release every six months, so we have Foo 1, six months later Foo 2, six months after that Foo 3, and so on.<p>Between the time Foo n and Foo n+1 are released, I&#x27;ll release minor updates to Foo n to fix bugs, and maybe even add minor features, but I don&#x27;t make breaking changes.<p>Foo n+1 can have break changes, and once Foo n+1 is out I stop doing bug fixes on Foo n. My policy is that once Foo n+1 is out, Foo n is frozen. If Foo n has a bug, move to Foo n+1.<p>A new version of Debian comes out, and includes Foo n which is the current Foo at the time. Debian supports new versions for typically 3 years, and the Debian LTS project typically adds another 2 years of security support on top of that.<p>That version of Debian is not going to update to Foo n+1, n+2, n+3, etc., as I release them, because they have breaking changes. A key point of Debian stable is that updates don&#x27;t break it. That means it is going to stay on Foo n all 3 years, and then for the 2 after that when the LTS project is maintaining it.<p>That means that Debian and later Debian LTS ends up backporting security fixes from Foo n+1 and later to Foo n.')