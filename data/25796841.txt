Item(by='malkia', descendants=None, kids=[25798019], score=None, time=1610746482, title=None, item_type='comment', url=None, parent=25794220, text='ugh - I was expecting something better, then again while probably .NET bytecode maybe more mergeable (Without knowing much about it, assuming &quot;java&quot; like essence), there is still the issue of &quot;pdb&quot; merging (but that should be doable...). Obviously native is problematic.<p>Back at Google, I really like how this was solved. Bazel (blaze) internally when doing java or python tool - would actually compile the java runner to become the main app, then the .jar (combined) could be part of it (not sure right now, but it could be), and any native C&#x2F;C++ JVM code would be part of the java runner (all statically linked) - so you end up with single executable.<p>Same for python - any C&#x2F;C++ linked externally becomes part of the &quot;python.exe&quot; (sorry, I&#x27;m mostly on windows terms now) + the rest of the compiled .python code - may go as .zip with the .exe - or even directly embedded as some data.<p>I really hope Microsoft goes this way. Distributing single (ok, two with .pdb) executables goes a long way of easing the process - CI, tools, or just here is a tool (to a coworker) that would work for you, and right now is... oh, and you need these extra .dlls (and app.config, and now .dll.recipe files, and who knows what else).<p>I do really wish .NET comes to realize that single true binary is a must (without temp files extracting, this is so prone to errors, security issues, leaks, etc.)')