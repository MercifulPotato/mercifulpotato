Item(by='vincentmarle', descendants=None, kids=None, score=None, time=1611002428, title=None, item_type='comment', url=None, parent=25825244, text='I&#x27;ve been using the Rumsfeld Matrix to classify software estimations into 4 categories:<p>Known knowns: familiar tasks that can be reliably estimated from past experience. You can improve these estimates by better knowledge sharing (internal wiki, adding comments).<p>Unknown knowns: tasks that can be increasingly better estimated the more time you spend on estimating (for example creating Draft PRs with pseudo code).<p>Known unknowns: tasks that have to be done, but haven&#x27;t been done before, so estimations need a decent buffer (30-50%) to account for research and potential blockers. You can improve these estimates by benchmarking your previous efforts combined with the team&#x27;s skill levels (aka sprint story point velocity).<p>Unknown unknowns: the unforeseen blockers that come out of nowhere, can&#x27;t really be estimated, and can really disrupt a project&#x27;s schedule. Improving these estimates is really hard. The key to improving these is by improving team&#x2F;company communication and building agile feedback loops so you can identify these issues early and reprioritize as needed.')