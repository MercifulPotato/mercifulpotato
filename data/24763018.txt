Item(by='mzl', descendants=None, kids=[24763203], score=None, time=1602572505, title=None, item_type='comment', url=None, parent=24762871, text='As another commenter mentioned, MiniZinc is a DSL for modelling combinatorial optimization problems, and Google or-tools is a solver that can solve such problems. So it is not really comparable in that sense.<p>The benefit of using MiniZinc instead of a specific solver directly, is that the user can try different solvers easily to find the one that works best for their problem. The drawback is naturally that it may be harder to use solver specific features.<p>The MiniZinc challenge is a competition that pits these solvers against each other. Note that the group that runs the challenge also develops solvers (which are ineligible to win prizes in the challenge, but are participating), and that these solvers are sometimes better than Google or-tools (no solver dominates all other solvers). See <a href="https:&#x2F;&#x2F;www.minizinc.org&#x2F;challenge2020&#x2F;results2020.html" rel="nofollow">https:&#x2F;&#x2F;www.minizinc.org&#x2F;challenge2020&#x2F;results2020.html</a> to get the full results.<p>Finally, while solving speed is of course important, it is not always the most important issue when developing a cobinatorial optimization solution. Choice of general tech stack, documentation, support, ease of integration, local expertise, and so on are important issues, as it is for every large dependency choice.')