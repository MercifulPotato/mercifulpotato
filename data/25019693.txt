Item(by='Hurtak', descendants=None, kids=None, score=None, time=1604784895, title=None, item_type='comment', url=None, parent=25015159, text='&gt; GitHub was flakey, some things didn’t have error responses<p>That just seems like API problem rather than GraphQL problem. The equivalent would be REST API that just returns 500 without any additional info. You can be lazy in both stacks, I don&#x27;t think any one of them particularly prevents you from being lazy about handling errors &#x2F; typing useful error messages.<p>&gt; Mutations would screw up encoding “ character and it was just painful.<p>Interesting, haven&#x27;t heard about this. Also cant come up with how this is related to GraphQL, as you are just transferring string, just like you would do with REST. It seems more of an problem with some proxy&#x2F;grapql framework layer that didn&#x27;t handle the character correctly?<p>&gt; REST api was much more deterministic and easier to work with. POST&#x2F;PATCH&#x2F;PUT&#x2F;DELETE map well.<p>I don&#x27;t see this as a big win, in GraphQL you just have `somethindUpdate` `somethingCreate` `somethingDelete` mutations, it is true that it is up to you to keep the naming consistent but nothing really that would be big trouble, or win for the REST.<p>&gt; I wish graphql didn’t invent its own quirky language and stuck to good ol json.<p>If they did that you would end up with some quirky JSON query and schema syntax that would look like json schema or the mongo query schema. It is true that if you do new syntax you lose some json tooling that could be used (eg syntax highlight) but I don&#x27;t see that much stuff transferable to the problems that GraphQL is solving.. so you would still end up with bunch of custom tooling on top, and when you need that you might as well go the way they did, with new syntax, that is not as quirky as whatever mongo&#x2F;json schema like thing they would come up with.<p>&gt; There is a lot of over complication.<p>This is definitely true and one of the most overlooked things by GraphQL evangelists, the &quot;additional complexity layers&quot; are non negligible.')