Item(by='fnord123', descendants=None, kids=None, score=None, time=1609761431, title=None, item_type='comment', url=None, parent=25628188, text='&gt;C++ templates are more powerful than Rust generics, and also easier to write<p>They are definitely not easier to write. The last time I checked, the error reporting were still so intractable that would be hard to take this argument in good faith. Maybe it improved?<p>&gt;In practice templates are embraced and used extensively, not &quot;avoided at all costs&quot; (like C++ exceptions.)<p>I think many would agree that this is largely because the package management system for C++ is so awful that header-only libraries are popular since you just need to copy paste a single file into your project.<p>C++ is a large language and there are some wildly different coding standards. Some do avoid templates (but you&#x27;re right that GP overstated this). Why? Templates introduce a lot of code bloat because there is little opportunity for eliding copies of the same code at link time. Aside from bloating the global offset table in position independent executables (if the GOT doesn&#x27;t fit in cache, perf drops), the compile time hit is also a non trivial issue. But this is a really exceptional scenario where you are shaving the monolith and need to get the ELF executable down (e.g. server side ball-of-mud, small embedded systems).')