Item(by='dwohnitmok', descendants=None, kids=None, score=None, time=1604948097, title=None, item_type='comment', url=None, parent=25034468, text='My personal conclusion is a need for &quot;escape hatches&quot; in any language with strong constraints rather than an indictment of Turin-incompleteness in general.<p>The usual criticism that is leveled at Turing-incomplete languages is &quot;well you&#x27;ve only changed the problem from taking an infinite time to taking more time than the heat death of the universe which really isn&#x27;t that much better,&quot; but that&#x27;s completely ignoring the ergonomics of how this actually plays out in real-life coding.<p>In real-life coding, the choice is almost never between &quot;does not terminate&quot; and &quot;heat death of the universe.&quot; When we write buggy, non-terminating code, the fix is usually a small change that takes it from &quot;does not terminate&quot; to &quot;terminates in a reasonable amount of time.&quot; The fix usually does not take it to &quot;indistinguishable from non-termination.&quot;<p>This might be forgetting a base case in a recursive definition or getting a loop termination condition wrong. More insidiously this can happen when termination conditions are based off of non-local things and therefore depend on assumptions that &quot;far away&quot; from the original code.<p>The point of Turing-incomplete languages is to go after those use cases, where the function would otherwise complete in a reasonable amount of time, save for one small little issue.<p>What the article is pointing out is that in pursuit of that dream, the language can be overly restrictive to the point that people are forced to write &quot;heat death&quot;-style functions to get around its restrictions.<p>This is an important distinction! People aren&#x27;t accidentally writing functions that take insane amounts of time to complete in Turing-incomplete languages, but are rather doing so intentionally because that&#x27;s the only way they can get their desired functionality. This is why the analogy of &quot;non-termination&quot; to &quot;termination after the heat death of the universe&quot; doesn&#x27;t work. The former occurs when people don&#x27;t realize that they&#x27;ve done that. The latter is a conscious, angry choice by users.<p>That&#x27;s why I think you need escape hatches to make sure people aren&#x27;t forced to abuse the language when its restrictions really make a certain task impossible to complete in a reasonable amount of time.')