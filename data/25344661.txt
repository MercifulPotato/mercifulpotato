Item(by='dr_zoidberg', descendants=None, kids=None, score=None, time=1607433596, title=None, item_type='comment', url=None, parent=25340488, text='&gt; I&#x27;d say the biggest advantage of a standard linked list is that it can be intrusive.<p>That&#x27;s one big benefit. I teach operating systems and, when the semester has been good, we dig into physical memory dumps with a few python scripts, and show the students how to parse Windows process list following _EPROCESS structures.<p>That&#x27;s one of the big things they find themselves surprised every year: that the process list is a chain of LIST_ENTRY structures embedded within the _EPROCESSes[0] (or any other structure that is doubly-linked in memory). And LIST_ENTRY is just 2 pointers going hand in hand with list_entry-&gt;flink and list_entry-&gt;blink attributes and nothing more.<p>[0] You can read some about this structures here <a href="https:&#x2F;&#x2F;www.nirsoft.net&#x2F;kernel_struct&#x2F;vista&#x2F;index.html" rel="nofollow">https:&#x2F;&#x2F;www.nirsoft.net&#x2F;kernel_struct&#x2F;vista&#x2F;index.html</a> but beware this is based on Vista and a bit old. Kernel data structures vary with versions of the OS (and not even major versions at that) and target processor (x86, x86-64, ARM too would be reasonable).')