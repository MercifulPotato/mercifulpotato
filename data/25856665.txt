Item(by='teleforce', descendants=None, kids=None, score=None, time=1611217084, title=None, item_type='comment', url=None, parent=25831911, text='Very nicely written article. Kudos to the Shipreq team for having close to 100% offline or local-first feature, is Shipreq utilizing automerge library to do that?<p>It&#x27;s mentioned in the article that Go has a very fast compilation time and the same can be said of D language. The reason they are fast to compile because the languages&#x27; authors design the languages to be compiler friendly unlike C++. One of the main tricks to being fast to compile is by avoiding symbols look-up table.<p>For one of the feasible solutions, perhaps Petri net is better than graph. It is a generic state machine mechanism and here are a few examples of having a compiler design using Petri Net approach[1][2].<p>[1] ZINC: a compiler for\n“any language”-coloured Petri nets, <a href="https:&#x2F;&#x2F;www.ibisc.univ-evry.fr&#x2F;~fpommereau&#x2F;publis&#x2F;2018-01-01-zinc-a-compiler-for-any-language-coloured-petri-nets.html" rel="nofollow">https:&#x2F;&#x2F;www.ibisc.univ-evry.fr&#x2F;~fpommereau&#x2F;publis&#x2F;2018-01-01...</a><p>[2] Model, Design, and Evaluation of a Compiler for a Parallel Processing Environment, <a href="https:&#x2F;&#x2F;ieeexplore.ieee.org&#x2F;document&#x2F;1702471" rel="nofollow">https:&#x2F;&#x2F;ieeexplore.ieee.org&#x2F;document&#x2F;1702471</a>')