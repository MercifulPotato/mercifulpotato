Item(by='bko', descendants=None, kids=[25716451, 25716223], score=None, time=1610294821, title=None, item_type='comment', url=None, parent=25715689, text='&gt; a.zip(b).map(func1).filter(func2).forall(func3)<p>Lets make this a somewhat concrete example.<p>---<p>heights = [1,2,3]<p>widths = [4,5,6]<p># printing area greater than 10<p># functional<p>heights.zip(widths).map(to_area).filter(lambda area: area &gt; 10).forall(lambda a: print(&quot;Area &quot; + a)<p>#Verbose way<p>hw_zipped = zip(a,b)<p>areas = hw_zipped.map(to_inches)<p>big_areas = areas.filter(a: a &gt; 10)<p>for a in big_areas:\n  print(&quot;Area &quot; + a)<p>---<p>Which do you prefer? I would argue the right level of abstraction is the functional way in this example, and its often the case in my experience, especially in python where you don&#x27;t often use a namespace to store these intermediary variables and you have can&#x27;t rely on typing')