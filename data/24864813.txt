Item(by='chrischen', descendants=None, kids=[24866037], score=None, time=1603412242, title=None, item_type='comment', url=None, parent=24864686, text='I think as someone who has evaluated functional Typescript, ReasonML, and purescript, I can say that ReasonML provides the best developer experience (interop with the JS&#x2F;TS ecosystem) while providing the next generation of type safety and composability for backend development. Unfortunately the ReScript branding is probably going to be a lot more confusion (more-so than the dual bucklescript&#x2F;reasonml branding). To make it even more confusing, ReasonML technically isn&#x27;t dead (only Reasonml.org is) and is now a third syntax (in addition to rescript and ocaml).<p>Also I don&#x27;t know why these languages aren&#x27;t being promoted more for backend development as it&#x27;s a perfect fit for the paradigms espoused in <a href="https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;swdddf&#x2F;domain-modeling-made-functional&#x2F;" rel="nofollow">https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;swdddf&#x2F;domain-modeling-made-func...</a>. I would say Ocaml&#x2F;ReasonML is even more ergonomic than F# (polymorphic variants are great for composable error handling).<p>Even in the current state, ReasonML can be used to progressively enhance a JS or even typescript codebase with no need to fully buy into a rewrite or even heavy toolchain modifications.')