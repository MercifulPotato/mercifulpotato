Item(by='profquail', descendants=None, kids=None, score=None, time=1608524217, title=None, item_type='comment', url=None, parent=25491467, text='I wrote an implementation of this several years back. If you’re interested in the code: <a href="https:&#x2F;&#x2F;github.com&#x2F;jack-pappas&#x2F;facio&#x2F;tree&#x2F;master&#x2F;Reggie" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jack-pappas&#x2F;facio&#x2F;tree&#x2F;master&#x2F;Reggie</a><p>The derivatives approach makes Unicode support easier since its able to keep the symbols sets for each transition edge (in the DFA) more compact by virtue of supporting negation. If you add in aggressive term-normalization, hash-consing, and an efficient dense-set implementation (all of which I’ve done in my implementation), the derivatives approach can be extremely fast, even when generating the DFA for something like the lexer of a full programming language (in my case, F#).')