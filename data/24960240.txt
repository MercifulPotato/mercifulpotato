Item(by='Veedrac', descendants=None, kids=None, score=None, time=1604245874, title=None, item_type='comment', url=None, parent=24960021, text='Mostly the concern around the lack of instructions in RISC-V revolves around a few well-known cases (eg. indexed loads) where the instructions to fuse are pretty canonical.<p>There is always room for creativity, but that would be the same with or without indexed loads in the base instruction set. Any non-monopolistic hardware ecosystem has this problem; we&#x27;ve been able to ignore it largely on x86 since Intel had had a performance monopoly for so long, but once you have multiple competing core implementations compilers will have to worry about the edge-case performance differences.<p>What I&#x27;m talking about is more specific to groups of instructions that are safe to treat as fused by default. Note that even if the compiler outputs a pair of instructions but the hardware running the code doesn&#x27;t fuse it, out-of-order execution means the penalty will generally be extremely small versus \nthe best unfused instruction schedule.<p>RISC-V does give guidelines on which instructions are good fusion candidates. See for example section 2.13 in the bitmanip extension document.<p>Hardware, naturally, just has a fixed set of fusions it does.')