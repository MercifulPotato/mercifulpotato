Item(by='aldanor', descendants=None, kids=None, score=None, time=1610330565, title=None, item_type='comment', url=None, parent=25713915, text='Why the JS-like naming, weird method naming convetions with strange underscores, and capitalized module name? I can&#x27;t remember a <i>single</i> commonly used Python library with naming this strange.<p>E.g.<p><pre><code>    def removeByIndex(self, b):\n        &quot;&quot;&quot; Removes the value at specified index or indices. &quot;&quot;&quot;\n        ...\n\n    def removeByIndex_(self, b):\n        &quot;&quot;&quot; Removes the value at specified index or indices in-place. &quot;&quot;&quot;\n        ...\n</code></pre>\nIf you were to follow typical naming conventions, these would be either<p><pre><code>    def remove_by_index(self, b): ...\n    def remove_by_index_inplace(self, b): ...\n</code></pre>\nOr pandas-like:<p><pre><code>    def remove_by_index(self, b, inplace=False): ...\n</code></pre>\nOr, one more step, use explicit typing as well (which also makes it more clear that the method returns self), and give a better name to the method argument rather than &#x27;b&#x27;:<p><pre><code>    def remove_by_index(\n        self, \n        index: Union[int, Iterable[int]], \n        inplace: bool = False,\n    ) -&gt; &#x27;Array&#x27;: ...\n</code></pre>\nExplicit type signatures in libraries like this make many things self-explanatory, like the one above.')