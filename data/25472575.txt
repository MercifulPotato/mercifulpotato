Item(by='nine_k', descendants=None, kids=[25473030], score=None, time=1608328682, title=None, item_type='comment', url=None, parent=25470672, text='I&#x27;d like to say that what makes reddit and twitter big and important is not technical sophistication. It is the fact that a lot of interesting people are there â€” so another person would join to read and interact with them.<p>So I&#x27;d try to build the simplest thing that conveys the idea and provides the experience (twitter was initially a Rails app), and spend most of the effort on getting <i>and keeping</i> interesting people aboard. These trendsetters are the users you want to listen to, and pander to. You went them around. You want their audience around.<p>I can remember a somehow similar site, only more minimalist, founded like 15 years ago. It was friendfeed.com: link sharing, posting commenting, real-time IM-like updates (it even had a Jabber gateway for some time). It was great, though it never grew huge. Facebook bought them and acquired their most important invention,  the &quot;Like&quot; button.<p>I don&#x27;t say that technical sophistication is not important! It is.   But it becomes important when your social &#x2F; communication mechanics work, and you have a number of real users. Until then, you want your technology small and easily malleable. Back in the day I&#x27;ve seen a brilliant online community forming around a few hundred lines of Perl scripts. Guys from friendfeed first came with a schemaless DB, and only later with the high-performance Tornado server (in Python still). Guys from YouTube first found the area where their site was useful (not their initial dating, but video publishing and discovery), and later came up with advanced video delivery solutions. Same likely applies to your site.<p>Good luck!')