Item(by='drothlis', descendants=None, kids=[25405785], score=None, time=1607855530, title=None, item_type='comment', url=None, parent=25405489, text='For the curious, if you want to avoid numpy&#x27;s memory overhead[1] here&#x27;s how you&#x27;d do it in C with no dependencies:\n<a href="https:&#x2F;&#x2F;github.com&#x2F;stb-tester&#x2F;stb-tester&#x2F;blob&#x2F;v32&#x2F;_stbt&#x2F;sqdiff.c" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;stb-tester&#x2F;stb-tester&#x2F;blob&#x2F;v32&#x2F;_stbt&#x2F;sqdi...</a><p>This C code isn&#x27;t doing exactly the same thing; here it&#x27;s calculating a global similarity measure by calculating sum-of-squared-differences and comparing the end sum against the specified threshold, instead of comparing each pixel-wise diff against the threshold.<p>It is straightforward C code but it&#x27;s vectorised by the compiler: <a href="https:&#x2F;&#x2F;godbolt.org&#x2F;z&#x2F;-3uO1z" rel="nofollow">https:&#x2F;&#x2F;godbolt.org&#x2F;z&#x2F;-3uO1z</a><p>Excluding the overhead of reading &amp; decoding the PNGs, it takes 80ms for the same 8400x4725 images as my parent comment.<p>Benchmark:<p><pre><code>  $ git clone git@github.com:stb-tester&#x2F;stb-tester.git\n  $ cd stb-tester\n  $ make\n  $ ipython\n  &gt;&gt;&gt; import _stbt.sqdiff, cv2, timeit\n  &gt;&gt;&gt; f1 = cv2.imread(&quot;water-4k.png&quot;)\n  &gt;&gt;&gt; f2 = cv2.imread(&quot;water-4k-2.png&quot;)\n  &gt;&gt;&gt; timeit.timeit(lambda: _stbt.sqdiff._sqdiff_c(f1, f2), number=1)\n  0.081\n</code></pre>\n[1] The Python code in my parent comment will allocate memory (the size of the entire image) for each intermediate calculation like the colourspace conversion, the absolute differences, etc.')