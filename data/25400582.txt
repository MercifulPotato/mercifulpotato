Item(by='geophile', descendants=None, kids=[25400980, 25400605], score=None, time=1607799945, title=None, item_type='comment', url=None, parent=25400254, text='Check out my pandemic project, marcel: <a href="https:&#x2F;&#x2F;marceltheshell.org" rel="nofollow">https:&#x2F;&#x2F;marceltheshell.org</a>. It hits that spot you described: still a shell, but more strongly typed. Instead of bailing out and redoing everything in Python (when you reach the end of your pipeline), you can add a bit of Python code in your command.<p>For example, find all the .py files under the current directory, find the ones that have changed in the last day, and then print the lines (with their filenames) that define classes:<p><pre><code>    ls -fr \\\n    | select (f: f.suffix == &#x27;.py&#x27; and now() - f.mtime &lt; days(1)) \\\n    | read -l \\\n    | select (path, line: line.startswith(&#x27;class &#x27;))\n</code></pre>\nread -l reads and labels a file, i.e., filename -&gt; stream of (filename, line in file)<p>(Yes, this is doable with find and awk, but this is just an accessible example that gets across the idea of Python functions on the command line.)')