Item(by='blandflakes', descendants=None, kids=[25055278, 25054130], score=None, time=1605053753, title=None, item_type='comment', url=None, parent=25053614, text='The vast majority of my work has been on the JVM - and most of that in Java. I tried Go for a while, and came away pretty unhappy.<p>First, similarities:\nGo seems like a really good language for building software for teams. It&#x27;s straightforward and simple, and generally what you see is what you get. That&#x27;s great.<p>Where it wins:<p>- having a standard formatter is amazing<p>- having a compiler that is fast, and an executable that starts fast and runs quickly is great<p>- the built-in http stuff seems better than what was available in Java&#x27;s stlib for years<p>- channels are nice<p>- lower resource usage, especially memory<p>- by breaking with the JVM, you get to abandon a lot of bad patterns because they simply aren&#x27;t available<p>Where it loses:<p>- I simply don&#x27;t need pointers for the places I want to use Go<p>- the GC, though different, still needs tuning&#x2F;consideration for high-load, and if I have to mess with GCs I want the options available to me on the JVM<p>- the dependency management story was rough for a while, though that seems to have settled into something more mature<p>- the error handling is unacceptably anemic<p>- the type system is unacceptably anemic. I&#x27;m not even talking about generics (maybe I am) - it just seems moronic to have to subvert it with &quot;interface{}&quot; all the time, which also renders the documentation pretty opaque to me.<p>Overall Go is a solid tool, and I see why it&#x27;s so successful, especially for network stuff and command-line tools. It&#x27;s hard to overstate how great an experience it is to have a fast-compile loop and I really envy that (I feel this way any time I use most languages not on the JVM).<p>And for learning something new, there&#x27;s nothing novel that I&#x27;ve seen in Go. If you want to use it because it is pragmatic and efficient, that&#x27;s a great reason.')