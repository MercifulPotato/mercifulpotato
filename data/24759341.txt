Item(by='politelemon', descendants=None, kids=[24759762, 24759662, 24759473], score=None, time=1602536157, title=None, item_type='comment', url=None, parent=24758772, text='I&#x27;d point out two other aspect not mentioned here - first is that the complexity doesn&#x27;t go away.  Application architectures running on a &#x27;serverless stack&#x27; have a lot more moving parts than a traditional server based equivalent.  Try showing the you from 10 years ago a modern serverless architecture and they&#x27;ll think you&#x27;re mad.  More moving parts is more maintenance&#x2F;problems, but on the plus side, does allow you to throw more resources at a specific part of the whole.<p>Second - with each cloud provider&#x27;s serverless service, I&#x27;ve noticed that the underlying complexity is shifted into your application and provisioning.  They&#x27;re a great example of leaky abstractions.  The name &#x27;serverless&#x27; may lure you into thinking that you don&#x27;t need to think about servers any more, but actually you do have to adjust to the way they&#x27;ve implemented a service that you&#x27;re using.  Think of Lambda cold starts, or have a look at the DynamoDB pricing page.  There&#x27;s still a server running somewhere.<p>Personal experience: I&#x27;ve found that ECS (Fargate) is a decent step into the serverless realm, if you&#x27;ve been running normal containers on normal EC2s. It does take away the EC2 management aspects, and it&#x27;s especially useful if you have some applications that are resource hungry, and some are not.  It&#x27;s a cheap way to run ETLs (we use the ECS Operator from Apache Airflow, which itself is on EC2).  It doesn&#x27;t take long to learn, and it&#x27;s a good place to start.  It does come with its own baggage... the &#x27;stack&#x27; that you had on a single EC2 is now scattered about; you may need AWS Cloud Map for service discovery, ALBs for networking, SSM&#x2F;KMS for secrets, Cloudwatch for logging.<p>That&#x27;s when you realize, those sticker infested laptops at Devops conferences are actually modern architecture diagrams.')