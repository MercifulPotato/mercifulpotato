Item(by='steelframe', descendants=None, kids=None, score=None, time=1604262648, title=None, item_type='comment', url=None, parent=24960694, text='My team has been tracking its story-point-based velocity for about 20 months. The team&#x27;s composition, product, and structure has been largely unchanged. We started tracking when we were newly formed, and we continued to use the same methodology until we shipped GA.<p>When not focused on just one objective and not under deadline pressure, the team&#x27;s average story point velocity per week was 30. This was when we tracked anything and everything we did. When we&#x27;ve track against a launch, where we only focused on the minimum set of tasks we needed to meet a clearly-defined objective with inter-team dependencies and a deadline, the team&#x27;s average velocity has been 12.<p>We don&#x27;t use story points alone in forecasting timelines. What we do is presume a per-dev weekly velocity of (12 &#x2F; team size). With all of the tasks on a chart, we work with the team to assign tasks to individuals, and we create a strawman schedule for how all the work gets done to meet the timeline. The &quot;length&quot; of each bug is a function of (12 &#x2F; time size). We track and reassess how all the tasks are coming along on a weekly basis, with the understanding that the &quot;strawman&quot; schedule will end up looking different than we initially project.<p>For example, take a team size of 6. Then the story points per week per dev is (12 &#x2F; 6 = 2). Story points per weekday is (2 &#x2F; 5). So for a task of size 3, we expect one dev to take ((5 &#x2F; 2) * 3 = 7.5) days to complete, and so the length of the task on the timeline is (rounded up) 8 days.<p>Then we bring the &quot;fudge factors&quot; into play. For the devs who are more productive we tend to schedule them back-to-back with the tasks that are more urgent and&#x2F;or are blockers. For the devs that tend to need more time, we keep a lot of whitespace between the end of their assigned tasks and the deadline.<p>The only time this methodology has gotten us into trouble is when we&#x27;ve caved to pressure by upper management to say we can actually do 15 story points per week or whatever. The most important thing is to measure actual velocity under as similar conditions as you can, and then refuse to accept any projection with a velocity other than you&#x27;ve actually observed. Story points are opaque outside of your team, and upper management is usually satisfied when you translate the story points into the schedule using the method I described.')