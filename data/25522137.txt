Item(by='aequitas', descendants=None, kids=None, score=None, time=1608757049, title=None, item_type='comment', url=None, parent=25521901, text='Indeed, declerativeness and conventions but also dependency resolving and ubiquity are the main plusses for me.<p>Bash scripts used for these tasks tend to accrue a lot of boilerplate and every script has it&#x27;s own conventions. So every time you need to debug them you need to debug a lot of code.<p>With make every target can be it&#x27;s own little isolated piece of code with input and output which makes reasoning about them a lot easier.<p>A few tips when learning makefiles: terminology[0]: it&#x27;s a lot easier to find answers if you know what it&#x27;s called what you are searching for. Automatic Variables[1]: learn these by heart, and the way they allow DRY targets. If you have a dependecy that is not a file you can use a dot prefixed file as a proxy.<p>[0] <a href="https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;manual&#x2F;html_node&#x2F;Rule-Syntax.html" rel="nofollow">https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;manual&#x2F;html_node&#x2F;Rule-Synt...</a>\n[1] <a href="https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;manual&#x2F;html_node&#x2F;Automatic-Variables.html" rel="nofollow">https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;manual&#x2F;html_node&#x2F;Automatic...</a>')