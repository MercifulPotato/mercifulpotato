Item(by='treve', descendants=None, kids=[25433139, 25433353, 25433259, 25433074], score=None, time=1608055296, title=None, item_type='comment', url=None, parent=25432233, text='This paper has a pretty naive understanding of REST. While &#x27;REST&#x27; can mean something different depending on who you talk to, I think in the context of a paper we can expect a bit more research.<p>This paper takes a typical query, and just overlays it on a CRUD-style REST endpoint, but it ignores:<p>* REST can definitely be strongly typed. There&#x27;s OpenAPI, and JSON-Schema. In many instances I think this will work <i>better</i> than GraphQL, as the data you get back is more likely to follow a fixed format.<p>* Mutations. In GraphQL this is an RPC-style feature, whereas with the typical &#x27;REST as CRUD&#x27; API you write in the same format you read, which can make this a lot simpler.<p>* Discovery. The paper discusses that REST can benefit from an &#x27;IDE&#x27;, but if you do REST well your browser is your IDE and you serve text&#x2F;html as well as JSON. Ignoring good hypermedia APIs that serve multiple formats, there&#x27;s also systems that let you test APIs based on for example OpenAPI schemas.<p>To me this is not a comparison between REST and GraphQL, but a comparison between GraphQL and a GET request on a poorly documented, low effort HTTP endpoint. To be fair, many APIs are just that.')