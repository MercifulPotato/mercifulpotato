Item(by='dmm', descendants=None, kids=[25255413], score=None, time=1606753018, title=None, item_type='comment', url=None, parent=25254906, text='A favorite HN comment that discusses this: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13503951" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13503951</a><p>Go read it all but here&#x27;s a relevant quote:<p>&quot;&quot;&quot;\nSo how does Erlang ensure that processes don&#x27;t hog a core forever, given that you could theoretically just write a loop that spins forever? Well, in Erlang, you can&#x27;t write a loop. Instead of loops, you have tail-calls with explicit accumulators, ala Lisp. Not because they make Erlang a better language to write in. Not at all. Instead, because they allow for the operational&#x2F;architectural decision of reduction-scheduling. \n&quot;&quot;&quot;')