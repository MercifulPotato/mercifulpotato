Item(by='michelpp', descendants=None, kids=[24684601], score=None, time=1601857644, title=None, item_type='comment', url=None, parent=24683344, text='Numpy (and CuPy) provide <i>dense</i> matrices.  They&#x27;re super awesome and certainly very useful for many kinds of problems, but they are not useful for storing adjacency matrices for sparse graphs.  That is the point of the paper and the purpose of SuiteSparse and The GraphBLAS.<p>Dense matrices are great, and their implementation is straightforward, a dense chunk of memory contains every element in the matrix, for an N sided square matrix, the storage requirement is N squared.  Finding an element is a simple matter of indexing math.  For large adjacency matrices, this is horribly inefficient, and the bigger the graph gets the worse the cache and memory locality as most elements end up being zero.<p>Hypersparse graphs, like say a large social network, may only have a few hundred billion edges, but trying to fit that in a dense adjacency matrix means requiring quadrillions of mostly empty elements.  This is clearly impossible, so sparse matrices are required to store a large graph.')