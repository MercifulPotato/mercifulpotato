Item(by='markburns', descendants=None, kids=None, score=None, time=1604469511, title=None, item_type='comment', url=None, parent=24982670, text='I’ve used it quite a bit and you make a valid point.<p>The appeal it had to me was watching one of the videos in which he talks about inherent versus accidental complexity.<p>I’d say eliminating all the extraneous accidental complexity you see in the entire process of building software is what it aims to do. That really resonated with me.<p>Deployment, code versioning, IDEs, infrastructure. So many of these things can be replaced by a simpler holistic toolset.<p>I’d say for simple use cases they’re well past the 80% mark. And it really is enjoyable building something in this paradigm.<p>The challenges are obviously the next 20% which will be where all the really hard edge case parts come.<p>I’m really looking forward to seeing it evolve.<p>It’s worth watching the introductory talk, even if you never intend to build something with it.<p>Accidental complexity is something I’m sure all engineers battle with. It’s nice seeing a genuine attempt to eliminate it. Even if it has ironically come along with some of its own accidental complexity. (E.g. not having enough libraries)<p>I’m hopeful that they’ll continue to battle all the right parts of accidental complexity and stay aware (as they are) of where they’re introducing it')