Item(by='rstuart4133', descendants=None, kids=None, score=None, time=1604900557, title=None, item_type='comment', url=None, parent=25023338, text='&gt; 12 characters is only 72 bits of entropy ... Thatâ€™s nowhere near enough entropy for a proper password.<p>What do you base that on?<p>If you assume the password is stored using current best practices (ie, you use a key definition function like PBKDF2 or even better scrypt), it&#x27;s tons.  You can&#x27;t assume a website will be using anything reasonable - but anything I manually enter this 12 character password into, like a password manager a modern auth service, or ssh it is reasonable.<p>Proof: assume you use a KDF that makes a check of a single password take at least 1ms on modern reasonable machine, 72 bits means it will take 149,642,763,799 (= 2^72 &#x2F; 3600.0 &#x2F; 1000.0 &#x2F; 24 &#x2F; 365.35) years to break.  Sure you can parallelise it, so lets throw a billion of these &quot;reasonable machines&quot; at it.  That reduces it to 149 years.  I&#x27;ll be well and truly six foot under before they crack it, which meets my definition of tons.<p>But it&#x27;s better to look at it from the point of view of the worth of the information they get versus expense.  Let&#x27;s say for argument&#x27;s sake my entire net worth is $100M.  Lets also also say a &quot;reasonable machine&quot; worth $10.  And finally assume the value of that $100M shrinks over time, so after 20 years it&#x27;s worth almost nothing.  Continue assuming we use a KDF to ensure doing one guess takes 1 second, and you end up with needing 62 bits of entropy - or 11 characters.')