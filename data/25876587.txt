Item(by='nickodell', descendants=None, kids=[25876638], score=None, time=1611351095, title=None, item_type='comment', url=None, parent=25869472, text='&gt;First, the client makes an unauthenticated request to the server to retrieve the password salts associated with the username. If no user is found, an error is returned to the client. If a user is found, the server sends the client the user&#x27;s password salt and password token salt, which the client uses to rebuild the password token. The password token is then passed to the server for authentication. To prevent brute force password guesses, clients get 25 incorrect attempts in a row before the server locks the user out of their account for 24 hours (Note we are aware this introduces a DoS vulnerability. Our first priority is to protect user data. We plan to implement a more sophisticated lockout mechanism in the future).<p>Hang on, so the process of retrieving the salt gives the remote client information about whether the user exists? Doesn&#x27;t this mean that an attacker could take a list of possible usernames, and confirm which of them are using your service?<p>Seems like you could return a salt even when the user doesn&#x27;t exist, and that would prevent this information disclosure.')