Item(by='kartickv', descendants=None, kids=None, score=None, time=1605492753, title=None, item_type='comment', url=None, parent=25105166, text='Author here.<p>&gt; Your DB is likely to contain internal state that has no business being sent to the client.<p>Which is why not all tables need to be sent to the client. The post gives an example of exposing the friends table to the client but not others.<p>&gt; If you do this, any business logic not captured in your backend has to be duplicated in each front end.<p>No, the post says to make your backend layer as thin AS POSSIBLE, not to not have a backend layer at all costs even if it means duplicating code.<p>&gt; How do you make breaking DB changes if you take on this strategy of API design?<p>You change the frontend!<p>&gt; This advice may be good for a proof of concept, a prototype, or an early version which stands a good chance of getting rewritten.<p>Which is why the blog post begins by saying, &quot;Say you&#x27;ve started a startup today&quot;<p>&gt; I would not recommend it for anyone wishing to build a lasting architecture.<p>In a startup, I wouldn&#x27;t recommend over-designing on day 1, because that&#x27;s a good way of not delivering enough business value fast enough and so going bust.<p>&gt; Take a look at your favorite famous internet company and look at their API and try to deduce if they follow this advice or not.<p>As the blog post says, you shouldn&#x27;t cargo-cult Google or Amazon. You don&#x27;t operate at their scale, you don&#x27;t have as much traffic, you don&#x27;t have as many teams, and so on. You should what makes sense for you given your company&#x27;s maturity and where in the product lifecycle you are.')