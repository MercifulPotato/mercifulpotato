Item(by='tsimionescu', descendants=None, kids=None, score=None, time=1608118767, title=None, item_type='comment', url=None, parent=25441376, text='Well, when you say &#x27;give me all cars and all users joined by user ID = owner id&#x27;, that&#x27;s business logic. With a good REST API you would just do a GET on &#x2F;cars and find any user details that are needed already in each car (perhaps under a link, which may lead to the N+1 problem, but that&#x27;s another discussion).<p>Of course, a bad REST API may expect that you do a GET &#x2F;cars and GET &#x2F;users and match them in your code, which is once again business logic in the front-end and bad design. There are even many DB-To-Rest libraries that encourage exactly this, unfortunately.<p>A good GraphQL API could also allow you to query cars and get car.Owner.Name and car.Owner.Address without you explicitly joining (the join still happens in the backend). However, I feel that many people who choose GraphQL are trying to avoid exactly this type of logic on the backend, which would explain the popularity of DB-to-GraphQL libraries.')