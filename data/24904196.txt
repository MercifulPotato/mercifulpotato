Item(by='maxwellryan', descendants=0, kids=None, score=2, time=1603768773, title='Ask HN: When does bug prevalence exceed normal?', item_type='story', url=None, parent=None, text='My job frequently requires working bugs that were unplanned for. The bugs are not production support type bugs, but bugs for feature work not yet released. If not a bug, we are commonly blocked from developing due to domains we are dependent on, but donâ€™t own, being down (auth, account creation, etc). As this is my only job as a SWE (3-4 years), I am starting to suspect this is not normal, is limiting my growth, and indicates I should find a new position. One where a larger percentage of time is focused on implementing and creating. Without experience at other companies, I am also aware this thinking could be flawed and this is not that far from the norm.<p>When do you view bug prevalence as an indicator of systemic problems? What are your experiences and perspectives?<p>P.S. \nQuantifying bugs is of course challenging and hard to compare across industries, application types, complexity&#x2F;maturity, etc. For some context, the nature of the work I am referring to is not incredibly complicated. For example, adding features to a customer facing Angular application at a S&amp;P500 finance company. Think more along the lines of preference and option inputs, saving customer states, and coordinating with different backend domains and APIs. Often times, bugs are uncovered for unreleased features at a high rate. Roughly 2 bugs for every 3 planned stories completed. This raises questions of work quality, regression testing standards, and PR process effectiveness.')