Item(by='jrochkind1', descendants=None, kids=[25199973, 25199733, 25199660, 25199405, 25200499, 25199305], score=None, time=1606230884, title=None, item_type='comment', url=None, parent=25197890, text='I am still in awe of NeXT&#x27;s software technology, generally. It was just so carefully and intentionally designed as a coherent whole; one would hope this was where we were going as we got <i>better</i> at architecting software (as individuals, as a field), but disappointingly in retrospect it appears as a kind of high-point, after which we continued to descend into ball-and-twine mediocrity. For Reasons economic and and social that I think people could argue about a lot, but we don&#x27;t because in part because as a field we don&#x27;t seem to even agree on what excellence in software architecture&#x2F;design even means anymore.<p>But what I want to talk about instead is:<p>&gt; Like EOF, our database layer that still puts Ruby-on-Rails to shame.<p>I spent a couple years programming with EOF (the &quot;Enteprise Object Framework&quot;, an ORM), and many more recent years programming with ActiveRecord. EOF had a few features that ActiveRecord still doesn&#x27;t that I miss (like properly functioning multi-table inheritance; and lazy &quot;eager loading&quot; triggered on first access for all associations; Rails 6.1 has a welcome feature to RAISE on n+1 behavior, but why not just lazily trigger the efficient load instead, which is probably no harder to implement? Maybe nobody thought of it, having not used EOF?).<p>But I wouldn&#x27;t actually say it still puts ActiveRecord &quot;to shame&quot;.  ActiveRecord is <i>very</i> similar to EOF in design, by 2020 nearly as mature, with 80-90% of the features.<p>Yeah, it&#x27;s striking that ~20 years later we can say AR is <i>mostly</i> as good as EOF haha (and doesn&#x27;t have anything of note that EOF didn&#x27;t already have, it hasnt&#x27; superceded it in any ways).  It&#x27;s internal architecture isn&#x27;t quite as elegant. But it really is nearly as good as EOF, it&#x27;s deficiencies compared to EOF aren&#x27;t large enough to be particularly shameful, in my experience&#x2F;opinion, it&#x27;s in the ballpark!<p>AR is so similar to EOF that I have always wondered if some of it&#x27;s designers had experience with EOF.')