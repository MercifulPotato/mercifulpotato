Item(by='Jtsummers', descendants=None, kids=None, score=None, time=1605023049, title=None, item_type='comment', url=None, parent=25045439, text='&gt; Code should have a hierarchical structure, so one could read it on the high level of abstraction and also zoom in gradually, as necessary<p>I agree with this. Some of the best code I&#x27;ve read and written was done in this style. Properly separating out components into a hierarchy of modules.<p>&gt; this is what they usually mean by &quot;code is the documentation&quot;<p>I disagree with this. I don&#x27;t think this is what people mean at all, because I don&#x27;t think that most people do the first part. If they did, there wouldn&#x27;t be so many problems with &quot;code is the documentation&quot;. But most code is <i>not</i> written in a clear hierarchical fashion. Logic is weirdly commingled, and depending on the language you have an assortment of low-level bookkeeping mixed with high-level logic.<p>I think they literally just mean &quot;code is the documentation&quot;. One of the best&#x2F;worst programmers I ever worked with is a perfect example of this. He&#x27;d always insist on the &quot;code is the documentation&quot;, and his code always worked. But his code was absolutely <i>awful</i> to read for anyone but him. By way of analogy, I don&#x27;t have a file system for physical papers. I have a literal chronological (by access time) stack. No one but me can make use of it, but it&#x27;s <i>very</i> effective for me because I have a really good memory (though not as good as it was 20 years ago, I don&#x27;t actually do this anymore because I have to work with others). That&#x27;s his code. No one else can go into it and actually understand it (at least not easily), but he can jump in and make exactly the necessary changes. The code is <i>not</i> the documentation until it&#x27;s properly organized, and maybe not even then.')