Item(by='rektide', descendants=None, kids=[25006530], score=None, time=1604629536, title=None, item_type='comment', url=None, parent=25003973, text='You listed 21 different pieces of software, 21 different needs in your post.<p>For some reason almost everyone commenting here seems to think it&#x27;s totally unreasonable to try to use a consistent, stable tool to operate these services. Everyone here is seems totally convinced that, like you, it&#x27;s better to just go off &amp; manage 21 services or so independently, piece by piece, on a box.<p>If it were just postfix, fine, sure, manage it the old fashioned way. Just set up some config files, run it.<p>But that&#x27;s not a scalable practice. None of other 20 pieces of software are going to be managed quite like that. Tools like systemd start to try to align the system&#x27;s services into a semi-repeatable practice, but managing configuration is still going to be every-service-for-itself. Trying to understand things like observability &amp; metrics are going to be highly different between systems. It seems so past due that we start to emerge some consistent ways to manage our systems. Some consistent ways of storing configuration (in Custom Resources, ideally), of providing other resources (Volumes), of exposing endpoints (Endpoints). We can make real the things that we have, so far, implicitly managed &amp; operated on, define them, such that we can better operate on them.<p>It&#x27;s not about containers. It&#x27;s about coherent systems, which drive themselves to fulfill Desired State. Containers are just one example of a type of desired state you might ask for from your cluster. That you can talk about, manipulate, manage any kind of resource- volumes, containers, endpoints, databases, queues, whatever- via the same consistent system, is enormously liberating. It takes longer to go from zero to one, but your jump from one to one hundred is much much smoother.')