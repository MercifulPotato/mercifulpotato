Item(by='kordlessagain', descendants=None, kids=[24715149, 24710824], score=None, time=1602089950, title=None, item_type='comment', url=None, parent=24708385, text='Data packets are already &quot;decentralized&quot;. In fact, saying data is not decentralized is a fallacy that can be used to irrationally represent the rest of this argument you are making for the use of this technology.<p>It&#x27;s irrational because, by the way we see it, there is no instance of this software running that we can inspect. It&#x27;s just you talking about it, which isn&#x27;t anything at all if you&#x27;ve used tricky language (or GPT-3) to fool people into thinking you&#x27;ve done something when all you&#x27;ve done is write about it. On the other hand you could be almost done with it and see it working as magic, but we wouldn&#x27;t because we can&#x27;t see it or use it.<p>To support my argument, one only needs to look at the responses about &quot;not understanding&quot; what you are talking about.<p>&gt; users don&#x27;t need do things like connecting to P2P networks and the app looks just like a regular web app, except that every API is signed by the user Bitcoin wallet.<p>Word salad. Users would still need to sign their data packets with crypto and a regular web app is JavaScript, so what does that have to do with where the API <i>endpoints</i> are run and how?<p>I&#x27;ll point out you are conflating the ideas of APIs and &quot;apps&quot; together. An app <i>can</i> use API endpoints, but an app can also just run in a browser and not talk to anything. How does vapor contribute anything to that scenario?<p>Most data packets are already copies of data stored somewhere. In fact, most data packets are decentralized copies of packets that are served from multiple locations already. Your story itself has multiple data packets representing it. They are all copies and they are all signed by a certificate. If I run a web app on AppEngine, the data comes from multiple servers running instances of my app somewhere. This is a thing, already, is what I&#x27;m saying. It works because of the standardized way the routers, servers and clients all talk to each other.<p>In this &quot;vapor&quot; software story you tell, it appears we can have &quot;centralized&quot; HTTP requests (like the POST that will happen when I click reply) which are packed up in a Bitcoin transaction, and then we have a place to store it where other <i>things</i> can pick it up later and make it &quot;decentralized&quot;. That would be the place these &quot;logs&quot; go. Ok. Where is this storage router thing run? Who owns it? Does it use 402s when people need to pay or authenticate for content? Does it route things quickly, or does it take a little time to process each transaction? How does the router route packets that need to be secure end to end? Who is running the APIs that pick these packets up? How do they know they are ready for pickup? Does the router call them? If it does, how does it know how to call them?<p>More questions than answers means this is probably vaporware.')