Item(by='electricshampo1', descendants=None, kids=[25242941], score=None, time=1606457698, title=None, item_type='comment', url=None, parent=25224933, text='Naively it seems that ingestion for data of the form<p>(space (longitude, latitude), time, DATA)<p>is readily addressed by the ideas in that patent:<p>- hierarchical partitioning of space, each node storing the data for the regions represented by a number of leaves. shard per leaf and adaptive rebalancing (merge,split, move shard) as necessary.<p>- within each shard, partition by time<p>With this you can gang together any number of nodes that you need to hit the aggregate ingestion rate requirement.<p>The query<p>&quot;give me all the data that occurred in this region of space in this time period&quot;<p>is readily supported as well. Applications (shard aware or hitting some stub proxy aware of the sharding) sitting on top of this datastore can use this repeatedly to build arbitrary logic (though you would have to query all the nodes if you don&#x27;t have a space region, which is fine if your query rate is low).<p>Likely my mental model of applications consuming spatial data is too simple, but what other innovation would be required beyond this for ingestion and querying? What kind of interface does the datastore provide to the application?<p>Would also love to hear more about the comment you made above<p>&quot;there are several more hard&#x2F;interesting computer science problems related to topological types and conflict resolution that you&#x27;ll likely need to solve before you have a useful system&quot;')