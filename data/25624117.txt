Item(by='ohazi', descendants=None, kids=[25624544, 25624603], score=None, time=1609700757, title=None, item_type='comment', url=None, parent=25623305, text='For decades, the FPGA vendors have had this fever dream of &quot;an FPGA in every PC&quot; -- either as an add-on card, or as part of the chipset on a motherboard -- that would enable a compiler or operating system to seamlessly accelerate arbitrary tasks on demand.<p>In my opinion, the problem has always been their software: the FPGA vendor tools are slow, bloated monstrosities. The core of these tools are written by the big three EDA vendors (Cadence, Synopsys, and Mentor Graphics) rather than the FPGA vendors themselves. The licenses include ridiculous, paranoid restrictions [1] and force the FPGA vendors to keep their bitstream formats and timing databases secret [2] in order to prevent competition from other tool vendors. Most FPGA vendors didn&#x27;t see this as a problem, but even the ones that did didn&#x27;t have much of a choice, because the tool market is a cartel.<p>Thankfully, we now have an open source toolchain [3] with support for a growing number of FPGA architectures [4], and using it vs. the vendor tools is like using gcc or llvm vs. a &#x27;90s era, non-compliant C++ compiler. It even has a real IR that isn&#x27;t Verilog, which has made it easier to design new HDLs [5].<p>I don&#x27;t see how a dynamic FPGA accelerator platform can be even remotely viable without this. It&#x27;s the difference between a developer getting to choose between one of a few dozen pre-baked designs that lock up the entire FPGA (and needing to learn how to shovel data into it), vs. a compiler flag that can give you the option of unrolling any loop directly into any inactive region of FPGA fabric.<p>It would be quite the cherry on top to see AMD build something interesting in this space. But unless they&#x27;re willing to fully unencumber at least this one design, I think the effort is likely to fail. The open source guys are chomping at the bit to make this work, and have been making real progress lately. Meanwhile, the EDA vendors have been making promises, failing, and throwing tantrums for the last 20 years. It&#x27;s time to write them off.<p>[1] <a href="https:&#x2F;&#x2F;twitter.com&#x2F;OlofKindgren&#x2F;status&#x2F;1052822081652617221?s=20" rel="nofollow">https:&#x2F;&#x2F;twitter.com&#x2F;OlofKindgren&#x2F;status&#x2F;1052822081652617221?...</a><p>[2] Imagine trying to write an assembler without being allowed to see the manual that tells you how instructions are encoded. It&#x27;s like that, but the state-space is hundreds to thousands of bytes in multiple configurations rather than a few dozen bits.<p>[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;YosysHQ&#x2F;yosys" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;YosysHQ&#x2F;yosys</a><p>[4] <a href="https:&#x2F;&#x2F;symbiflow.github.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;symbiflow.github.io&#x2F;</a><p>[5] <a href="https:&#x2F;&#x2F;github.com&#x2F;m-labs&#x2F;nmigen" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;m-labs&#x2F;nmigen</a>')