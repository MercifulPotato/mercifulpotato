Item(by='fh973', descendants=None, kids=[24730850, 24730100], score=None, time=1602249741, title=None, item_type='comment', url=None, parent=24716319, text='Their architecture descriptions starts with a strawman:<p>&gt; Usually distributed file systems split each file into chunks, a central master keeps a mapping of filenames, chunk indices to chunk handles, and also which chunks each chunk server has.<p>&gt; The main drawback is that the central master can&#x27;t handle many small files efficiently, and since all read requests need to go through the chunk master, so it might not scale well for many concurrent users.<p>The chunk server architecture has been first put into production with the Google File System AFAIK. And it has been designed specifically for large files (what search needed at that time). So no surprise.<p>But that&#x27;s only one architecture for a DFS. There are also block-based DFS (like GPFS), \nobject-based DFS (Lustre.), cluster file systems (OCFS), and other architectures. They exhibit other characteristics.<p>Telling from the architecture and Wiki, it does not seem to be a file system at its core, but an object store with a file translation layer. One of the core problems of this approach is that in-place updates usually mean read-modify-write (if the object store has immutable objects, like most have, with Ceph being a notable exception).<p>From the replication page:<p>&gt; If one replica is missing, there are no automatic repair right away. This is to prevent over replication due to transient volume sever failures or disconnections. In stead, the volume will just become readonly. For any new writes, just assign a different file id to a different volume.<p>This sounds like the architecture and implementation is still pretty basic. Distributed storage without redundancy (working redundancy!) is not that interesting.<p>Sorry to be that critical (great that someone writes a distributed file system!), but I think it is important to add some context. And the seaweed auther seems to have problems with bold statements either...<p>Disclaimer: I also work on a distributed file system (with unified access via S3 ;)')