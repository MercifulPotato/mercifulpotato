Item(by='1vuio0pswjnm7', descendants=None, kids=[25769164, 25772876], score=None, time=1610575339, title=None, item_type='comment', url=None, parent=25762625, text='On the systems I can control, I do all work &quot;disk-less&quot;.  I strongly prefer it.  I like to keep programs and data segregated.  The basic setup on NetBSD is as follows, with endless variations possible therefrom.  The kernel(s) and userland(s), along with bootloader(s), are on external media, like an SD card or USB stick, marked read-only.  There&#x27;s a RAM-disk in the kernel with a multi-call binary-based userland (custom-made using BusyBox or crunchgen).  After boot, a full userland from external media or the network is mounted on tmpfs-based or mfs-based overlay and then we chroot into the full userland.  From there, the work space is all tmpfs (RAM).^1  I can experiment to heart&#x27;s content without jeopardising the ability to reboot into a clean slate.  The &quot;user experience&quot; is also much faster than with disk-based.  Any new &quot;data&quot; that is to be retained for future use across reboots is periodically saved to some USB or Ethernet connected storage media.  I do not use &quot;cloud&quot; for personal data.  Sorry.  This forces me to think carefully about what needs to be saved and what is just temporary.  It helps prevent the accumulation of cruft.  The number one benefit of this for me though is that I can recover from a crash instantly and without an internet connection.  No dependencies on any corporation.<p>This BeagleV looks like it would work well for me as it has Ethernet and USB ports.<p>1.  With NetBSD, I can run out of memory with no major problems.  With Linux, this has not been the case.  I have to be more careful.')