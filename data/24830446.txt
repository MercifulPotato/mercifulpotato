Item(by='to11mtm', descendants=None, kids=None, score=None, time=1603138404, title=None, item_type='comment', url=None, parent=24829687, text='&gt; Let&#x27;s be clear though. I am saying that the lower levels of your application should be ALL uncoupled logic. Then you build logical layers on top of your primitives that consists of compositions of your logic that build higher and higher. So a person on layer 5 only needs to go to layer 4 to understand it, and does not need to go to layer 1 to understand every primitive.<p>Yep. If you do this right you only need to understand one or two layers at a time. Great example of this is the Akka Toolkits for JVM and .NET; Every time I&#x27;ve hacked on a given subsection, the amount of domain knowledge I&#x27;ve had to have was &#x27;Basics anyone using Akka has to know&#x27; and then just the layer I was working with and maybe one other.<p>&gt; The problem is OOP does this all the time. It couples state with logic. These two things should be uncoupled.<p>Agreed. And dare I say, when you start going from coupled state+logic, and go more towards functional... you&#x27;ll find you can possibly shed a layer or two in your overall design.')