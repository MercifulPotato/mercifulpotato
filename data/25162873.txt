Item(by='peterwwillis', descendants=None, kids=None, score=None, time=1605894384, title=None, item_type='comment', url=None, parent=25160461, text='&gt; I think DevOps, as we understand it today, is coming to an end. At least the Ops part of it.<p>No, this is backwards. Ops in DevOps is more important than it ever has been. Devs honestly have the simplest job in the world: they just have to write some business logic and check out for the day. There&#x27;s many other teams of people who then take over in order just to make sure that the app will actually work for customers, and will fix it when it stops working. The scope of work covered in QE, Architecture, Data&#x2F;Privacy, InfoSec, etc teams is massive, and Ops aligns it all so the app works accordingly.<p>On &quot;configuration languages&quot;: Pulumi won&#x27;t ever take over because 1) some of it requires money and companies are cheapskates, 2) the licensing is not Free (part of #2), 3) there&#x27;s already this other crap called Terraform that everyone is already using that doesn&#x27;t have the problems of #1 &amp; #2 and does most of what is needed for infrastructure. For the rest, there&#x27;s not one thing that can manage it.<p>CFEngine was where I learned that Configuration Management is the 8th circle of hell. Puppet was slightly better, but now I am trying to burn down every Puppet install in the company whenever I can. Chef isn&#x27;t any better. Configuration Management as a concept (such as it is up to this point, anyway) is just horrible.<p>It will take another 10 years, but eventually the industry will wake up to the fact that its current obsession with tooling isn&#x27;t actually generating any more profit or product quality than a bunch of shell scripts would, and so maybe they should calm down a bit.<p>The <i>only</i> critical feature of orchestration tools is dependency management. Knowing what changes will impact what other changes and planning for them. Otherwise, a bunch of shell scripts really does work just as well. At that point they&#x27;ll probably write some other tools, hopefully ones that separate the task of dependency management into a standard independent thing, and let other tools interoperate with it, so that we don&#x27;t have to custom-code dependency management into anything that wants to use it.<p>I mean, Terraform is a genuinely crappy product to use, but we literally can&#x27;t stop using it because of that one feature. Same goes for systems like K8s, where the design is an absolute mess, but nobody can get rid of it because they desperately need something to run a container on multiple hosts for them. And since they have that, they decide, fuck it, let&#x27;s pile on a bunch of other bullshit while we&#x27;re doing that and we&#x27;ll lie to ourselves and say it&#x27;s better now.<p>The <i>important</i> parts of modern DevOps are <i>not technology</i>. They are the practices, principles, values, and patterns that have proven to uplift everything else. DevOps is not about Ops, or Dev, or any other team.')