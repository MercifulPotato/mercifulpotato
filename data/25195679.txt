Item(by='kilburn', descendants=None, kids=[25196368], score=None, time=1606196957, title=None, item_type='comment', url=None, parent=25195482, text='I use vscode-ssh to offload the heavy work to my desktop when working from my laptop.<p>The big deal is that vscode uses a client&#x2F;server setup, where a &quot;client&quot; vscode instance runs on your machine and a &quot;server&quot; vscode instance runs on the remote one. Then they figured out how to make latency and&#x2F;or network intermittencies a non-issue. The experience is basically the same as working locally, except the linter, language server, formatter, and compilation run on the server-side (and hence don&#x27;t bog down my laptop in this case).<p>Then there are quality-of-life touches, such as vscode offering to tunnel ports whenever you launch something in the integrated terminal that listens for connections. That is: let&#x27;s say I run &quot;python3 -m http.server&quot; in the terminal within vscode (where I&#x27;m working on a remote project). The http server is launched on the remote machine, and I get a prompt asking me if I want to setup a 8080 (laptop) -&gt; localhost:8080 (server) tunnel.<p>I was an adept of Jetbrain&#x27;s various IDEs (and smart completions are still better there for most languages), but vscode-remote works so well that it has won me over.<p>Not long ago, a friend of mine was considering a new laptop. He was happy with his pixelbook in general, but working in the &quot;c++ with lots of number-crunching&quot; space the pixelbook wasn&#x27;t cutting it. I gave him an account to my desktop machine to let him try, and he&#x27;s now a happy owner of a nice workstation for much less than what the laptops he was considering cost. Important point: my desktop uses a residential connection in Spain, and he&#x27;s in the US. He had 0 issues with latency whatsoever (and I can attest the connection itself does have such problems).')