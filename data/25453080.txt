Item(by='webmaven', descendants=None, kids=[25453343], score=None, time=1608185461, title=None, item_type='comment', url=None, parent=25448061, text='<i>&gt; When you use Win32 you get the latest fixes and features even in applications that haven&#x27;t been updated for two decades - for example you get new common dialogs and access to shell extensions (e.g. TortoiseSvn&#x2F;Git integration) that didn&#x27;t exist back when those applications were made.</i><p>What you&#x27;re describing is not backward compatibility, it&#x27;s forward compatibility.<p>The OS is backward compatible with old applications that continue to run. The old applications are forward compatible with newer versions of the operating system including some of the new features that are added.<p>Achieving backward and forward compatibility (the combination is often called &quot;full compatibility&quot;) is actually quite difficult. The resources Microsoft throws at this problem and the related coordination costs are massive (and conversely, the progress any individual developer sees on their particular tasks is often glacial)[0]. In the open source world, I think only web browsers typically see anything resembling a similar level of effort applied to evolving the platform while maintaining compatibility with extant (and often buggy) code, and that&#x27;s still a much smaller problem (though it might not be after another decade or two), since for all intents and purposes, the web as a whole is a &quot;rolling release&quot; system with bugs and incompatibilities popping up and being fixed constantly.<p>[0] <a href="http:&#x2F;&#x2F;moishelettvin.blogspot.com&#x2F;2006&#x2F;11&#x2F;windows-shutdown-crapfest.html" rel="nofollow">http:&#x2F;&#x2F;moishelettvin.blogspot.com&#x2F;2006&#x2F;11&#x2F;windows-shutdown-c...</a>')