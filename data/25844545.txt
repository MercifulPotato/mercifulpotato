Item(by='toast0', descendants=None, kids=[25846167, 25844596, 25846213], score=None, time=1611136783, title=None, item_type='comment', url=None, parent=25844302, text='The underlying design issues are:<p>a) there&#x27;s no Xserver concept of a lock screen which would be hard to fix, I suspect. How would you signal X to lock&#x2F;unlock; what would it do if the lock client wasn&#x27;t connected, etc.<p>b) there&#x27;s no atomic way to transfer mouse&#x2F;keyboard grab to another window, which means you can&#x27;t have a reliable, crash reduced screen locker that supervises a beautiful password checking program; it has to be the same program. This could probably be fixed with an X extension; yes, an extension is a lot of work, and yes, you&#x27;d have to deal with fragmentation, but you could keep the untoolkited password dialog in case the extension isn&#x27;t present, nobody would see it unless they did something odd, so it&#x27;s fine.<p>Another issue is that I think I&#x27;ve seen some linux systems don&#x27;t launch the screen locker until resume, instead of locking before suspend; that&#x27;s not ideal, because the screen locker will take time to launch and lock the screen (more so if it&#x27;s got a fancy initialization routine and is a large binary&#x2F;many libraries to load).<p>An option could be running a dedicated screen lock Xserver on a different VT, and (securely) switching to that one somehow. But that would probably involve changes to multiple layers at the same time, which is hard to pull off in Linux. People would complain about the bloat of running a second Xserver, regardless of the actual bloat or imcreased utility.')