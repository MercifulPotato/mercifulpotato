Item(by='hassy', descendants=None, kids=None, score=None, time=1606562911, title=None, item_type='comment', url=None, parent=25235787, text='Member of team artillery.io here, my 2c on the subject. We chose MPLv2 specifically to address licensing concerns. With MPLv2, you can build on top of Artillery, you can build plugins and extensions for it, and integrate it into your systems without worrying about licensing. It&#x27;s a well-understood license with very clear boundaries between your code and MPLv2-licensed dependencies (e.g. all Hashicorp tools use MPLv2).<p>That&#x27;s unfortunately not the case for AGPL. There&#x27;s a reason a lot of companies have policies banning any AGPL dependencies outright, Google probably being the most prominent example: <a href="https:&#x2F;&#x2F;opensource.google&#x2F;docs&#x2F;using&#x2F;agpl-policy" rel="nofollow">https:&#x2F;&#x2F;opensource.google&#x2F;docs&#x2F;using&#x2F;agpl-policy</a><p>AGPL is designed to be extremely viral and has not been tested in court. The definitions of boundaries between your code and AGPL-licensed code are not well understood. Consider that MongoDB, probably the most popular AGPL-licensed project in use before 2018 when they switched to SSPL, had to explicitly publish their drivers under Apache because communicating with an AGPL dependency over a network was not sufficiently distant enough to prevent infection. <a href="https:&#x2F;&#x2F;www.mongodb.com&#x2F;blog&#x2F;post&#x2F;the-agpl" rel="nofollow">https:&#x2F;&#x2F;www.mongodb.com&#x2F;blog&#x2F;post&#x2F;the-agpl</a><p>As engineers we need to be aware of licensing implications of code we depend on. I am obviously not a lawyer, and obviously your employer&#x27;s legal team are the people you should be talking to if you have an absolutely critical dependency on an AGPL-licensed project.')