Item(by='yourabstraction', descendants=None, kids=[25306341], score=None, time=1607099746, title=None, item_type='comment', url=None, parent=25299252, text='Yes, and I went against the standard advice to not look at the solution until you solve it yourself. I think for the first 50-100 problems it&#x27;s best to not think too hard about it before looking at the solution, gaining a full understanding, and writing an implementation or three (building that muscle memory so to speak).<p>At this point, you&#x27;ll have many more tools in your kit (graph traversal, search, dynamic programming, queues, heaps, stacks, etc.) and you can work on coming up with your own solutions to new problems. But I found it to be a waste of time staring at a problem for hours when I didn&#x27;t already have the fundamentals in place to tackle it.<p>The other thing I did was watch youtube videos to get a better grounding in some of the data structures that I struggled with. I mostly did this wish graphs, as I was always terrible at graph problems and never had to apply them in my career. I found this series of videos to be extremely good.<p><a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLDV1Zeh2NRsDGO4--qE8yH72HFL1Km93P" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLDV1Zeh2NRsDGO4--qE8y...</a>')