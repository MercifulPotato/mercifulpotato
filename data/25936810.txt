Item(by='AmericanChopper', descendants=None, kids=[25937095, 25943023], score=None, time=1611796559, title=None, item_type='comment', url=None, parent=25936528, text='But every programming paradigm can be (and perhaps most often is) done badly. They each just create their own set of issues when &quot;done badly&quot;. I think it just comes from not properly understanding why you&#x27;re making certain choices. Deciding to use a design pattern is going to come with a certain set of strengths and weaknesses, so ideally you&#x27;d consider your problem and choose design patterns that makes the most of the strengths and minimizes the impact of the weaknesses. But I don&#x27;t think it&#x27;s very common to put that much thought into programming decisions, so people will often make a design decision, and then invest their effort into fighting the constraints it imposes, while usually failing to realize the potential benefits of it. OOP can be a perfectly suitable tool to solve a problem, but if you haven&#x27;t thought about the actual reason why you want to use it, then you&#x27;re just going to end up creating complicated abstractions that you&#x27;re not properly benefitting from. ORMs can be great tools to, but if you want to use an ORM, you have to solve your problems using the approaches implemented by the ORM. If a programmer can&#x27;t&#x2F;won&#x27;t do that, then they&#x27;ve just chosen the wrong tool for their problem&#x2F;the approach they wanted to take to solve it.')