Item(by='Blikkentrekker', descendants=None, kids=None, score=None, time=1610787749, title=None, item_type='comment', url=None, parent=25797025, text='&gt; <i>If Zig code doesn’t look like it’s jumping away to call a function, then it isn’t. This means you can be sure that the following code calls only foo() and then bar(), and this is guaranteed without needing to know the types of anything:</i><p>Okay, but what&#x27;s the advantage, when due to optimizations such as inlining and tail call elimination, this isn&#x27;t reliable in the other direction to begin with?<p>The reason compilers can remove function calls as such as an optimization is because it doesn&#x27;t alter the semantics.<p><i>Rust</i> will certainly inline most implementations of `std::ops::Add` to begin with as they tend to be small enough, and does it really matter they not be inlined?')