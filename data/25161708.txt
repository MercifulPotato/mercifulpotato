Item(by='jws', descendants=None, kids=None, score=None, time=1605888413, title=None, item_type='comment', url=None, parent=25157942, text='This sounds like a great addition for servers written in Swift. Pair it with the very easy to use and clean command line arguments package and it should be &quot;trivial&quot; to add management&#x2F;diagnostic console full of commands to your server.<p>Traditionally for HTTP servers I carve off a URL prefix, e.g. &#x2F;diagnostics&#x2F; or listen on a different port, and make handlers there to let me know how things are going. The downside is that I then have to protect those which collides with whatever other authentication is going on.<p>Moving that to a command console eliminates all those ways to screw up and let <i>evil people</i> into my diagnostic functions.<p>The command line parser package is trivial to use once you get the hang of it and generates acceptable &quot;help&quot; automatically, so you&#x27;ll end up with a custom CLI of your diagnostic commands with a &quot;help&quot; function to remember them for essentially zero coding and maintenance effort.<p>Now I have to spend all day resisting the urge to weld this into my latest HTTP server to see how it goes.<p>Update: There is an example server in the Sources&#x2F;NIOSSHServer directory of the repository. 5 files, about 500 lines total to implement a &quot;bash&quot; command executer and a remote port forwarder.<p>Update 2: 50 minutes in and I have an ssh server embedded in my server. Maybe. When I send a command it explodes my process with a Posix.close() to a bad file descriptor tripping a precondition check. So, maybe don&#x27;t rush this to a live server.')