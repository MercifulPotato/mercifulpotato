Item(by='oppositelock', descendants=None, kids=[25563794], score=None, time=1609192087, title=None, item_type='comment', url=None, parent=25563416, text='It&#x27;s a lot more difficult than you make it out to be.<p>I&#x27;m a former game engine lead from an Activision studio. The whole engine architecture was my responsibility, testing included.<p>You can easily write tests for all the deterministic stuff; math, physics, save games, utility code, filesystem code, etc.<p>However, where it gets difficult is testing the content. Every platform has some quirks which force you to create art custom made for that platform (your other choice is to use the minimal subset of what they all support). If you want a good looking game, your content has several versions, so now, things like intersection and pathing code are slightly different between platforms. GPU behavior is different enough that using GPU&#x27;s for anything results in multiple test code paths. AI isn&#x27;t always fully deterministic, by design, making it even more difficult to test. So, what you have in the end are some deterministic tests to make sure your foundation is sound, and &quot;fuzzy&quot; tests to catch many problems in the higher level constructs, and your final line of defense are play testers, which is an awful job!<p>Now, we engineers know how to make the games stable and reliable, and our time estimates are frequently at odds with the PM&#x27;s. You MUST make Christmas, which in the days that I worked, where CD&#x27;s must be mastered, meant code freeze and asset freeze in October sometime. So, in this mad scramble to make a hard deadline, quality suffered.<p>It was much more important in the old days (PS1, PS2, GameCube, N64, etc), to get it right the first time, as you couldn&#x27;t ship patches, but the notion of patching games allowed release versions to be more buggy, since people kicked the can down the road. Granted, the earlier consoles only supported simpler games, and the diffiulty was dealing with the particulars of the system, not the game itself. The PS1 had no Z-Buffer, the PS2 had a CPU&#x2F;GPU combo built by a crazy person with an PS1 as its IO controller, and the PS3 required you to write DMA management code, while the GameCube had a memory model that was nuts and matrices were only 4x3 so you couldn&#x27;t do projections. So, you spent most of your time dealing with these quirks and the game ended up simpler due to the effort being spent elsewhere.<p>Now, it&#x27;s much easier, consoles are effectively PC&#x27;s with powerful general purpose CPU&#x27;s and GPU&#x27;s, so it should be possible to write high quality, reusable engines.')