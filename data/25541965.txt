Item(by='systemvoltage', descendants=None, kids=[25542151], score=None, time=1608967036, title=None, item_type='comment', url=None, parent=25541893, text='I am opionated about this, I am sure people can share other perspectives.<p>When you&#x27;re operating a CNC machine, as an operator, do you need mess around with internal wiring, schematic, motor controllers? No. You just need a control panel, with DRO and a bunch of buttons, a joystick for manual override, e-stop and a keypad. You&#x27;re not dealing with the exposed wiring and internals of the machine. Nor do you care (except if you&#x27;re a hacker, more on this below).<p>APIs are all things the user needs to do and we allow them specific endpoints to do those things. A lot of modern GraphQL methods allow you to become a &quot;hacker&quot; and get access to what you want. But, after you&#x27;re done hacking, you want a proper control panel with steel panels and a version number. You, as a user, are guaranteed that interface and you&#x27;re going to build your world around it. Check out Shopify, Stripe or Dropbox APIs. See what they allow you to do and what they don&#x27;t.<p>Here are some reasons why we want an API:<p>- Decoupling internal resources from the user (user can still be an internal service). We want to be able to change the database, swap it with anything else we want, completely change the schema, whatever... without affecting the user.<p>- We might require processing&#x2F;handling of the data, sometimes with help from other microservices before serving.<p>- We might want to cache read access, although I am sure this is possible with these automation tools.<p>- We want stability over expediency (although, this is ok to forego initially).<p>- We want a singular point of entry, aka entrypoint and be able to control it.<p>- We might want to asychorniously process the request. &quot;Hey, I got your request and I am processing, here is the processing ID&quot; and respond with status code 202.<p>All these automation tools are great to get a product running quickly. Personally, I would just use straight SQL for prototyping. If you&#x27;re working on UIs and don&#x27;t have access to the server, you can just use <a href="https:&#x2F;&#x2F;postgrest.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;postgrest.org&#x2F;</a> and get an API running. However, after you&#x27;re product has reached maturity, tighten up those endpoints.<p>The endpoint design is your control panel. Make it look tidy, checkout how others build this panel, engineer it well and your users will thank you.')