Item(by='some_furry', descendants=None, kids=None, score=None, time=1611081888, title=None, item_type='comment', url=None, parent=25833206, text='This isn&#x27;t safe to use:<p><a href="https:&#x2F;&#x2F;github.com&#x2F;tomquirk&#x2F;zuccnet&#x2F;blob&#x2F;42e351e36b3b5dbaef06256ed11313fab77adb25&#x2F;src&#x2F;util&#x2F;crypto.js#L57-L84" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;tomquirk&#x2F;zuccnet&#x2F;blob&#x2F;42e351e36b3b5dbaef0...</a><p>1. Try encrypting a message larger than 256 characters. Even if you somehow succeed, it will fail to decrypt. (My understanding of JS crypto is that it will throw an error if you try.)<p>2. It lacks forward secrecy.<p>A much better design would be to encrypt with an ephemeral (one-time) 256-bit AES key (using CBC+HMAC), then <i>encrypt the key</i> with RSA. (AES-GCM is probably easier, but if you&#x27;re worried about message commitment, that&#x27;s not recommended.)<p>(On sweis&#x27;s comment about Secret Conversations: I don&#x27;t trust closed source implementations--and neither do a lot of us on HN, so that&#x27;s a non-starter. Tell the Facebook team to open source it, with reproducible builds, if you want it to be trusted.)<p>Recommended reading for the author: <a href="https:&#x2F;&#x2F;soatok.blog&#x2F;2020&#x2F;11&#x2F;14&#x2F;going-bark-a-furrys-guide-to-end-to-end-encryption&#x2F;" rel="nofollow">https:&#x2F;&#x2F;soatok.blog&#x2F;2020&#x2F;11&#x2F;14&#x2F;going-bark-a-furrys-guide-to-...</a>')