Item(by='m463', descendants=None, kids=[25442347, 25438798], score=None, time=1608088308, title=None, item_type='comment', url=None, parent=25435186, text='At one point, I didn&#x27;t know Perl and had to work on a project with it.<p>For a while I was cursing the arcane syntax such as $_, $\\ and even $ on a variable to the left of the equal sign...<p>and then something weird happened.  Those things became idioms in my mind and I started achieving a sort of fluency.<p>And when I started to think in perl, I found it to be the highest-level language I had EVER worked in.  I could express myself because there were multiple ways to do something and one always matched what I was thinking.<p>For example, instead of having to think IF NOT SOMETHING I could UNLESS SOMETHING and then express it as<p><pre><code>  unless(something) { do_something(); }\n</code></pre>\nor even:<p><pre><code>  do_something() unless something;\n\n</code></pre>\nNow I like the idea of regular expressions, but I find the implementation leaves a lot to be desired.  or should I say implementations plural.<p>To me, the main usability problem with regular expressions boils down this:  it is hard to distinguish between a literal and a regex control character.<p>This is exacerbated because regex control characters are usually the <i>same characters</i> other languages treat specially as well.<p>So you have regular expressions - which are somewhat straightforward, but you have to escape them for the place you are USING the regular expression - perl, shell script, sed, awk, grep or egrep, etc.<p>So I&#x27;ve used regular expression for decades, and even now it&#x27;s always subject to a little trial and error and requires testing.')