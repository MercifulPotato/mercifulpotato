Item(by='OJFord', descendants=None, kids=None, score=None, time=1603461719, title=None, item_type='comment', url=None, parent=24867853, text='Shameless plug, I did something similar in Rust (that is, 2017 rust that I haven&#x27;t gone back to) for my MEng project.<p>I really wish more APIs&#x2F;people used OpenAPI, I think&#x2F;thought it&#x27;s fantastic, but I haven&#x27;t really used it since. Docs-only at work, a bit, but it has so much more potential.<p>--<p>Main difference in mine is that I used the OpenAPI spec as the starting point though - I wanted to be able to use it as an API-specific HTTP client. From that I inferred type signatures at compile-time in order to enforce correct (per the spec) use of an API, and enforce handling all the (stated) possible error cases. Idea being that if you did the same on the server side, you&#x27;d have pretty good guarantees about your communication.<p>Kept meaning (still mean?) to go back to it, but I haven&#x27;t yet. It supports the basics, but it&#x27;s far from battle-tested; I might never get back to working on it, but if it&#x27;s of interest to anyone for (absolutely non-production) toying around, I&#x27;ll certainly respond and act on any PRs.<p><a href="https:&#x2F;&#x2F;github.com&#x2F;OJFord&#x2F;tapioca" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;OJFord&#x2F;tapioca</a><p>It seems they&#x27;re not linked from the readme (probably I was scared to update it post-deadline in case of examiner doubt, and presentation&#x2F;slide manufacture was post-submission deadline) but there&#x27;s also slides (linked from the release) that perhaps have a bit more detail on what I was going for from a more technical perspective (though it&#x27;s been a while):<p><a href="https:&#x2F;&#x2F;github.com&#x2F;OJFord&#x2F;tapioca&#x2F;releases&#x2F;download&#x2F;v0.0.1&#x2F;slides.pdf" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;OJFord&#x2F;tapioca&#x2F;releases&#x2F;download&#x2F;v0.0.1&#x2F;s...</a>')