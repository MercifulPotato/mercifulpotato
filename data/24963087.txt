Item(by='pron', descendants=None, kids=[24963711], score=None, time=1604269596, title=None, item_type='comment', url=None, parent=24962985, text='&gt; Maybe in application and theoretical implications, but to grasp the concept you have just have to understand that it&#x27;s relaxing the restriction on &quot;what you can quantify over&quot;, which really isn&#x27;t a huge jump I&#x27;d say.<p>It&#x27;s not that. It&#x27;s hard for me to try and quantify some essential complexity of a type theory and a set theory, but programmers don&#x27;t usually learn type theory in high-school or college, but FOL comes &quot;for free&quot; (not to mention the unnecessary complication of constructive mathematics with special handling of noncomputable functions for specifying digital systems) and engineers don&#x27;t even need to learn the inference rules, because they will rarely bother writing proofs; just pressing the button on the model checker has a much better cost&#x2F;benefit, plus it allows learning just semantics first, even you do want to learn deduction later. With TLA+ there isn&#x27;t much to grasp or learn; you know most of the basics. It could just be a situational thing.<p>&gt; Why would it not be a function?<p>What is the type of its first argument? IIRC, in Lean, it is only a function when a specific universe is given (implicitly).')