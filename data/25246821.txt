Item(by='vram22', descendants=None, kids=None, score=None, time=1606673862, title=None, item_type='comment', url=None, parent=25244850, text='Right. The &#x27;alias&#x27; word is a shell built-in[1], so is interpreted by the shell, which is anyway the first process to parse any command line that you type at the shell prompt. It is only after the shell has done its processing of the command line that the processed line is passed to the actual command being invoked (such as sudo or mv or ls or ...), which is done in the argc&#x2F;argv pair of arguments (using C terminology) to the invoked program. (In Python it is the sys.argv list.)<p>[1] Section 6.6 in <a href="https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;bash&#x2F;manual&#x2F;html_node&#x2F;Aliases.html#Aliases" rel="nofollow">https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;bash&#x2F;manual&#x2F;html_node&#x2F;Aliases.h...</a><p>And the above is also why the shell metacharacters (such as dollar, asterisk, square brackets) that you may use in any Unix command invocation, get expanded by the shell, not by any individual command[2], which is why these metacharacters work for any command, old or new, built-in, external or user-written (in any language, as long as it supports argc&#x2F;argv-like conventions),\n. This is unlike MS-DOS, for example, where some commands supported wildcards but others did not. There, the support was programmed into (only some of) the individual commands. (CMD.EXE of later Windows versions may be different, and IIRC, is more Unix-like.)<p>[2] That may be a less-known fact.')