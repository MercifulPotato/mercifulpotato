Item(by='marmaduke', descendants=None, kids=[24842391], score=None, time=1603223527, title=None, item_type='comment', url=None, parent=24840972, text='&gt; From a Python programmer perspective, how does CUDA.jl compare to PyCUDA?<p>I think the relevant comparison today is with Numba, here&#x27;s a real world recurrence analysis,<p><pre><code>    @cuda.jit\n    def _sseij(Y, I, J, O):\n        # strides\n        sty = cuda.blockDim.x\n        sbx = sty * cuda.blockDim.y\n        sby = sbx * cuda.gridDim.x\n        sbz = sby * cuda.gridDim.y\n        # this thread&#x27;s index\n        t = (cuda.threadIdx.x\n           + cuda.threadIdx.y * sty\n           + cuda.blockIdx.x * sbx\n           + cuda.blockIdx.y * sby\n           + cuda.blockIdx.z * sbz)\n        if t &lt; I.size:\n            i = I[t]\n            j = J[t]\n            x = nb.float32(0.0)\n            for k in range(Y.shape[0]):\n                x += (Y[k, i] - Y[k, j])**2\n            O[t] = math.sqrt(x)\n</code></pre>\nmost of it is index calculation, but super easy')