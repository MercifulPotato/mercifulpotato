Item(by='ironmagma', descendants=None, kids=[25335658], score=None, time=1607362563, title=None, item_type='comment', url=None, parent=25333961, text='How is reference counting slower than say, mark-and-sweep? It&#x27;s not about what&#x27;s better, it&#x27;s about avoiding footguns. Rust (like all languages) has the capability to build a mark-and-sweep collector if you need it, but the built-in heap deallocation (Box + ownership transfer) combined with Rc means you basically don&#x27;t need it where you might have in other languages. You can&#x27;t accidentally get a GC pause in Rust, which is a feature. That&#x27;s not to say there&#x27;s no benefits to using mark-and-sweep.<p>&gt; It was a bit of a fad, and the fad got baked into the language<p>That may be its origin story, but if you look at Java among its current contemporaries, the story is, &quot;What would happen if we had a language where literally everything had to use object-oriented programming, including Hello World? How would it turn out?&quot; and the answer is very popular and used in enterprises heavily. If you can&#x27;t stand OOP, the notion of even entertaining Java as a viable language is a flawed premise.')