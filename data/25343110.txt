Item(by='jpcooper', descendants=None, kids=[25343383, 25343232], score=None, time=1607415777, title=None, item_type='comment', url=None, parent=25330223, text='I like the idea the author mentions of message queues in the database. It also sounds like it would be easier to separate if need be. I also like the idea of keeping everything in a single database as long as possible. Even if it turns out not to scale, it is a lot easier to figure out your business logic in that environment. Anything which avoids microservice madness and Kubernetes keenness as long as possible is very attractive to me.<p>Maybe slightly contrary to the spirit of the article, but a few days ago there was talk about implementing the backend in your database here: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25290339" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25290339</a>. Someone mentioned how Cloudfare was initially implemented on a single Postgres database: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22883548" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22883548</a>')