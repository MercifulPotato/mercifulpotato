Item(by='d23', descendants=None, kids=[25470962], score=None, time=1608315245, title=None, item_type='comment', url=None, parent=25468282, text='&gt; In kind learning environments like programming<p>I&#x27;d agree this is the case up to a point with programming, but some of the most important aspects of the job are in the things that are unkind, like how well your design will hold up under future maintenance.  Often times there are no feedback mechanisms whatsoever for whether you&#x27;ve done a good job.  Or they&#x27;re slow and coarse and can be ignored or justified away.  It&#x27;s easy to just hop onto the next project and leave the mess you&#x27;ve made behind.<p>The more subjective stuff like how to approach problems as well as what to write and not to write in the first place -- these are what separate people who can technically do the job from those at higher levels.  And often even a successful application here ends up getting overlooked by the very fact that it Just Works and doesn&#x27;t make a lot of noise.<p>This is just one aspect of the unkindness.  There&#x27;s also how effective you are, how reliable your systems are, how productive you are, whether you pick the right things to invest in learning about, how well you solve problems, how well you debug, how well you coordinate with peers, how well you are able to understand and navigate existing systems, and how well you communicate technical ideas.  Many of these things compound in positive or negative directions over time.  I&#x27;ve yet to see any good materials teaching most of this stuff, and I suspect plenty of people will go their entire careers without ever really figuring out or being aware of a large chunk of it.')