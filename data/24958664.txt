Item(by='mrkeen', descendants=None, kids=[24959057], score=None, time=1604228556, title=None, item_type='comment', url=None, parent=24956117, text='I&#x27;d say provide concurrency primitives to disallow <i>direct</i> access to shared mutable state.  You still do the reads and the writes, but you let the system take and release locks for you.<p>Let&#x27;s say you wanted to turn a list into a bounded list of 4 elements.<p>Race-condition insert:<p><pre><code>    if (sz &lt; 4) {\n      list.insert(x);\n      sz++;\n    }\n</code></pre>\nSafe insert:<p><pre><code>    atomically {\n      if (sz &lt; 4) {\n        list.insert(x);\n        sz++;\n      }\n    }\n</code></pre>\nSo atomically organises the locking&#x2F;unlocking&#x2F;rollback for you such that a fifth element will not be inserted.')