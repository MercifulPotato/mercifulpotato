Item(by='exikyut', descendants=None, kids=None, score=None, time=1606742001, title=None, item_type='comment', url=None, parent=25235925, text='Thanks very much for replying! Apologies for response latency...<p>Cron jobs make a lot of sense for periodic batch work.<p>It&#x27;s interesting you used PHP to start and manage child workers (I recall reading somewhere in the docs about PHP being unable to report error code status correctly under certain conditions, but I can&#x27;t find it right now).<p>Regarding environment, I was mostly pining about PHP&#x27;s lack of a &quot;correct&quot;&#x2F;idiomatic way to handle genuinely fatal conditions (like syntax errors) in a way that meant the binary would stay alive. I&#x27;m suddenly reminded of Java&#x27;s resilience to failure - it&#x27;ll loudly tell you all about everything currently going sideways in stderr&#x2F;logcat&#x2F;elsewhere, but it&#x27;s &quot;difficult enough&quot; to properly knock a java process over (IIUC) that it&#x27;s very commonly used for long-running server processes.<p>PHP-FPM has this same longevity property, but the CLI was designed to prefer crashing. I just always wished I didn&#x27;t have to bolt on an afterthought extra layer to get reliability. So I wondered if I could learn anything from this particular long-running-process scenario. Cron is hard to beat though :)<p>Hmm. Automating the systemd unit creation process. Hmmmm... :) &lt;mumbling about not knowing whether su&#x2F;sudo credential&#x2F;config sanity will produce password prompts&gt;<p>And... heh, that&#x27;s right, `kill` exists. Need to step up my game and stop `killall php`-ing. Good point.<p>Thanks again for the insight.')