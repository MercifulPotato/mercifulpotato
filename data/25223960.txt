Item(by='radarsat1', descendants=None, kids=[25224214, 25224227], score=None, time=1606429391, title=None, item_type='comment', url=None, parent=25223848, text='&gt; The typical understanding of the industry is essentially a process boundary,<p>I agree that this is the typical thinking but I&#x27;ve always found it a little silly and arbitrary.  It implies that if I write a GPL-licensed library and release it along with a thin wrapper program that gives it a command-line interface, say it does something like a complicated calculation which reads some data and outputs a single number; then someone could come along and write a program that would not work without it, say something that transforms another input format and then passes it to my calculation.  As long as that program calls my &quot;library&quot; as a &quot;program&quot; (using &quot;system()&quot; for example) then they are not bound by the GPL, but if they link to my library and call the calculation directly, then all of a sudden they are?<p>This linking vs. process boundary thing always seemed like the wrong way to determine if a program is a derivative work of another.  If someone writes a program that <i>does not work</i> without the GPL code, they should be bound by the GPL, regardless of whether it&#x27;s linked, loaded into the same process, called through the command line, or over the wire.<p>This last one would obviously be controversial, but frankly a lot of companies do hide their use of open source code behind a REST API, and avoid adhering to any particular licenses that way, since they are not &quot;distributing&quot; the software.')