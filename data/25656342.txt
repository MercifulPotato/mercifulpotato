Item(by='capableweb', descendants=None, kids=[25657181, 25658428], score=None, time=1609928318, title=None, item_type='comment', url=None, parent=25656075, text='I think Clojure will be a very hard language to supersede. Lisp syntax in general is not very common, so lots of people dismiss it just because of that. The ones that don&#x27;t, usually look on programming languages differently, and won&#x27;t leave Clojure unless a serious contender with a seriously awesome team behind it pops up, which since I started doing Clojure (~2010) hasn&#x27;t happened yet and seems unlikely to happen.<p>Although there are some nice efforts on getting wider support for Clojure. Babashka is one of my favorite projects, that leverages SCI (Small Clojure Intreper) and GraalVM to build a subset of Clojure that can startup much faster, making Clojure suitable for CLIs and desktop apps.<p>Then we have the Clojure-like languages that takes the best ideas of Clojure with some differences and different runtimes. Joker comes to mind as one of those. Here are some others: <a href="https:&#x2F;&#x2F;github.com&#x2F;chr15m&#x2F;awesome-clojure-likes" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;chr15m&#x2F;awesome-clojure-likes</a><p>I also think ClojureScript is still a hidden gem in the frontend world. Now with the rise of shadowcljs, it becomes easier to get started, which is seemingly super important for the JS world (rather than focus on longterm experience, first timer experience is the focus), so more people will see the strength in Clojure for client-side clients, especially if the data structures you&#x27;re dealing with is coming from 3rd party clients instead of you making them up on the backend.<p>All in all, Clojure will be hard to replace, but definitely not impossible, it&#x27;ll just take a lot. For now, Clojure is the king on the hill, with it&#x27;s small versions eating up some smaller hills. In my view, it&#x27;s time has yet to come.<p>Edit: Also, to see the current state of Clojure, check out the &quot;State of Clojure 2020&quot; survey results, gives you a overview of the ecosystem: <a href="https:&#x2F;&#x2F;clojure.org&#x2F;news&#x2F;2020&#x2F;02&#x2F;20&#x2F;state-of-clojure-2020" rel="nofollow">https:&#x2F;&#x2F;clojure.org&#x2F;news&#x2F;2020&#x2F;02&#x2F;20&#x2F;state-of-clojure-2020</a> Main take away for me is that Clojure is constantly gaining ground in the professional environment, showing how important the practical side of Clojure really is.')