Item(by='Nullabillity', descendants=None, kids=None, score=None, time=1602544088, title=None, item_type='comment', url=None, parent=24759333, text='&gt; Care to explain what&#x27;s wrong with them? What&#x27;s anticompetitive about them? Or you just don&#x27;t like them because &quot;reasons&quot;?<p>They&#x27;re all sold in wildly misleading ways.<p>VSCode is open source according to the website, but the FOSS build is missing a lot of the advertised features (like, say, the extension manager...).<p>Same with .NET Core. Sure, the compiler and core libraries are open source (if you can find the real thing, rather than the umpteen facades that they pollute their repos with)... But core tools like the debugger are still closed and deliberately locked to only work with (the branded, closed builds of) VSCode. That&#x27;s not a huge problem if it at least had proper support for printf debugging (like Rust&#x27;s `Debug`). But of course that&#x27;s not a thing, because why would you ever use anything else than VSCode?<p>WSL is sold as a drop-in compatibility layer, but WSL1 was missing a lot of core features (hell, SQLite wouldn&#x27;t even run with its default settings). WSL2 is somewhat better, but still does a bunch of shady crap (no systemd or equivalent, DirectX-on-WSL, etc).<p>&gt; What is wrong with it?<p>For one, there was just no need for it. The only reason for it to exist is to make it harder to port stuff away from Windows.<p>If they had a problem with Vulkan&#x27;s API (haven&#x27;t really used either, so can&#x27;t comment on the exact differences) then they could have designed it as a layer on top of Vulkan from the start. DXVK already proved that it&#x27;s a viable approach.<p>&gt; It&#x27;s not like it&#x27;s forced down your throat like Metal. You still have the choice of Vulkan and OpenGL<p>Xbox?')