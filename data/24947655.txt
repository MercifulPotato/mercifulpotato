Item(by='jarpadat', descendants=None, kids=None, score=None, time=1604098858, title=None, item_type='comment', url=None, parent=24947110, text='Queues are a dynamic concept; which queue you’re on is a runtime property. For this reason you may be familiar with assertions to check if a function is running on some queue.<p>Actors however are a static concept, we know at compile time which actor is local, and if we have the right one active.  So the check about whether you’re on right actor happens at compile time.<p>You can think of it as if queues are part of the type system, and the compiler can work out statically what queue is used by any code, and so it can label an entire call tree’s queues by control flow analysis.<p>Because of this you wouldn’t dispatch onto the same queue twice and deadlock. Rather, the compiler would see that the correct actor is local already in the call tree and there’s nothing to do so the dispatch is elided. It would only “switch queues” if it needs a new one.<p>Besides the deadlock issue, the other advantage of this is it gets optimized out if you have several calls with the same actor.')