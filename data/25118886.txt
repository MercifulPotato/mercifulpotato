Item(by='zzo38computer', descendants=None, kids=None, score=None, time=1605572340, title=None, item_type='comment', url=None, parent=25116833, text='That is true. Bloat is a real problem with this, and so is spyware. Implementing such things will waste memory, energy, and bandwidth anyways.<p>JavaScript as a programming language is fine (as are others), but including scripts in web pages is often used badly&#x2F;misused.<p>I agree that it should hand control back to users. Mostly this includes overriding and affecting DOM functions, and allowing more options to the user. Implement them to be more user-oriented. This includes many options, but also to allow the user to write their own code (which can be used to spoof data, but also for many other purposes). For example, for the camera API, instead of merely asking permission to access the camera, the browser can ask the user what (if any) source to use; the user may select an actual device such as a camera, or enter a filename or a command. (Another reason this would be useful is in case you do not have a camera attached to the computer. If a program scans barcodes using a camera, but you instead have it in a file in your computer, you can select that one instead.) Same is true with microphone, MIDI, etc. Even some things that don&#x27;t ask should be implemented better, such as keyboard coding. And some things should ask, and user can adjust otherwise, e.g. redirects and other accesses to a server for data. The user should be able to substitute&#x2F;modify&#x2F;enable&#x2F;disable individual scripts in a document, for example, to substitute their own implementation of jQuery.<p>However, core JavaScript has the Date object, which accesses the current date&#x2F;time; I thought that the ability to access the current date&#x2F;time shouldn&#x27;t belong in core JavaScript, but an implementation could be done to fix this, so that it is overridden like DOM functions are.<p>Actually, I partially wrote a document about improving web browsers, and it is not only about document scripting, but many other things too. The web developer console is a good feature, but that is just a start. More improvements can be done. This includes implementing many things differently, not only scripts.')