Item(by='srcreigh', descendants=None, kids=[25935661, 25934944], score=None, time=1611781484, title=None, item_type='comment', url=None, parent=25931650, text='The two biggest rants on HN are 1) Why doesn&#x27;t this site work without JavaScript? It&#x27;s inaccessible. and 2) Why doesn&#x27;t this app work offline? It invades my privacy.<p>Maybe I&#x27;m wrong, but as far as I can tell, you can&#x27;t have both. Sorry folks.<p>You are right, JS is not needed if the site truly is static content. But if you try to make an interactive app that could be implemented client-side (AKA javascript) and attach a server to it, everybody will complain that the application doesn&#x27;t respect the user&#x27;s privacy, since it could be offline-only but it&#x27;s not.<p>Don&#x27;t get me wrong, I think &quot;interactive&quot; can meaningfully include a simple site with links if you are looking at it from a privacy angle. Just look at how StackOverflow recently was able to track all the pages their hacker viewed. [1] SO is pretty much static content. So do you want StackOverflow to work without JavaScript? Are you happy that in-so-doing it needs to phone home whenever you look something up? You can&#x27;t have one without the other.<p>There is also the argument from scalability. You&#x27;ll get less QPS on your servers if you implement a 3-step form with validation in the frontend, and send off all the data in one go. It&#x27;s also faster&#x2F;better UX and is more resilient under bad network conditions.<p>Edge computing is maybe an alternative there, but that doesn&#x27;t address inherent privacy concerns of phoning home to a server.<p>Last there is the reality of a spectrum of interactivity of websites. If you are doing a blog, sure, don&#x27;t do it in JS. At that point you make a decision to make it difficult to add any interactive features to you site which require JS. If you are building an evolving app with interactive features, there aren&#x27;t many options for easily mixing static HTML with interactive JS. You could see how far you get with static HTML but then what if you need interactivity (JS&#x2F;JQuery)? What if you need complex interactivity (React)? Are you willing to pay the costs of a heterogeneous app architecture of HTML mixed with interactive JS?<p>Think of Facebook. It is kinda like a blog, but what about infinite scroll? Etc.<p>Anyway that last point, I think, is why people are excited about 37signals&#x27; Hotwire[2]. It&#x27;s more of a HTML-but-interactive architecture as opposed to the fully-interactive JS&#x2F;React vs static HTML forms.<p>[1]: <a href="https:&#x2F;&#x2F;stackoverflow.blog&#x2F;2021&#x2F;01&#x2F;25&#x2F;a-deeper-dive-into-our-may-2019-security-incident&#x2F;" rel="nofollow">https:&#x2F;&#x2F;stackoverflow.blog&#x2F;2021&#x2F;01&#x2F;25&#x2F;a-deeper-dive-into-our...</a>\n[2]: <a href="https:&#x2F;&#x2F;hotwire.dev&#x2F;" rel="nofollow">https:&#x2F;&#x2F;hotwire.dev&#x2F;</a>')