Item(by='EdSchouten', descendants=None, kids=[25611974, 25612250, 25612191, 25611980, 25611983, 25611573, 25611642, 25612469], score=None, time=1609580926, title=None, item_type='comment', url=None, parent=25611172, text='In my opinion bugs related to endianness expose a design flaw in the C&#x2F;C++ programming languages, or at least in the way people tend to use those languages. It isn&#x27;t that hard to write code that works well with any kind of endianness, and you don&#x27;t need stuff like __BYTE_ORDER__ for that. For example, if I wanted to read a little endian 32-bit integer value from a byte stream, I could write a function like this:<p><pre><code>    uint32_t read_int32(unsigned char *b) {\n        return uint32_t(b[0]) |\n               (uint32_t(b[1]) &lt;&lt; 8) |\n               (uint32_t(b[2]) &lt;&lt; 16) |\n               (uint32_t(b[3]) &lt;&lt; 24);\n    }\n</code></pre>\nWhich, according to Godbolt.org, at -O2 or higher compiles to:<p><pre><code>    read_int32(unsigned char*):\n        mov     eax, DWORD PTR [rdi]\n        ret\n</code></pre>\nNo magic needed!')