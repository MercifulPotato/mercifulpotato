Item(by='hyko', descendants=None, kids=None, score=None, time=1603874474, title=None, item_type='comment', url=None, parent=24916063, text='I don&#x27;t think this is a very good example of clean architecture; this is just a refactoring that extracts three methods. There&#x27;s no dependency inversion used here, which is one of the key tools you would use to create a clean architecture. The use case itself depends directly on the functionality in <i>requests</i>, which means the business logic is coupled to the concrete details of the requests API.<p>Clean architecture also differs from n-tier in thatâ€“although there are layers, they don&#x27;t have to be physically distinct and the APIs between them are not typically heavyweight gateways designed to work across network boundaries etc. The key design activity in CA is reducing the coupling between abstract business logic and the concrete code that executes it. It&#x27;s actually quite a simple approach to describe, but more difficult in practice.<p>There&#x27;s nothing particularly wrong with the first function; functions certainly don&#x27;t only have to &quot;do one thing&quot; in clean architecture.')