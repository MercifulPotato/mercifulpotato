Item(by='wonnage', descendants=None, kids=None, score=None, time=1603267559, title=None, item_type='comment', url=None, parent=24845300, text='Whether or not you use an ORM, you ideally have your own abstraction on top of it, defining a set of known queries. This avoids the classic Rails problem where the User model has a million methods, and you don&#x27;t know which of them might make a SQL query.<p>Also, ORM caching always finds a way to become a huge pain. It&#x27;s easy to wind up with multiple objects representing the same underlying DB row, but updating one in memory won&#x27;t update the others, so you update them all from DB just to be safe... You might say &quot;find a better ORM&quot; but I&#x27;m pretty sure they all run into this problem at some point. IMO you&#x27;re better off doing it yourself and making it explicit.')