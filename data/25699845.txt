Item(by='chowells', descendants=None, kids=[25699990], score=None, time=1610195673, title=None, item_type='comment', url=None, parent=25699698, text='Haskell is really good when:<p>1. You can afford the costs of a garbage-collected system.<p>2. Your collaborators know it or are eager to learn it.<p>3. You intend to maintain your system over an extended period of time while adding features.<p>4. You don&#x27;t need close integration with the platform GUI.<p>That last one isn&#x27;t impossible to do in Haskell, but it&#x27;s painful enough that it overrides the benefits in a lot of cases.<p>What products niches does this leave? Servers and command-line tools, primarily, though there is room for GUI applications that use various cross-platform UI toolkits and games that build their entire UIs from scratch. (Yes, both of those exist. Even games. Unity uses C#, it&#x27;s not like garbage collection is incompatible with games - it just has overhead you&#x27;ll have to live with and work around.)<p>Honestly, condition 2 above is the biggest limit. A lot of people who like to talk about judging things on their merits refuse to learn Haskell because it&#x27;s not yet another shallow skin over the same programming concepts.<p>My personal experience is that any time you think Ruby would be a good choice for a long-term project, Haskell is a far better option. It supports the same joy of green-field development but is less of a tarpit when the green field is 5 years behind you.')