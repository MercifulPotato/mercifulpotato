Item(by='rst', descendants=None, kids=None, score=None, time=1606575372, title=None, item_type='comment', url=None, parent=25236568, text='Well, you&#x27;ve quoted a sentence that rattles off several of them. In prior operating systems, files were structured objects, often readable and writeable only in collections of fixed-length records; they often had attributes including a &quot;type&quot; (Windows file name extensions are a vestige of this), and had I&#x2F;O APIs requiring a particular memory layout in program memory for data to be read or written.  There were also, in some cases, files that could be accessed only through limited forms of database query (&quot;access methods&quot; -- see, e.g., ISAM for Indexed Sequential Access Method), and not as raw byte streams, or streams of records.<p>Current mainframe programming environments retain a lot of this structure.  Here&#x27;s a writeup by someone trained on more Unix-derived environments who was self-teaching on the &#x27;60s legacy stuff: <a href="https:&#x2F;&#x2F;medium.com&#x2F;the-technical-archaeologist&#x2F;hello-world-on-z-os-a0ef31c1e87f" rel="nofollow">https:&#x2F;&#x2F;medium.com&#x2F;the-technical-archaeologist&#x2F;hello-world-o...</a>')