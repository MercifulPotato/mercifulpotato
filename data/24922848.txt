Item(by='artagnon', descendants=None, kids=[24923336, 24923555, 24922866, 24926613, 24923429, 24924636, 24924040], score=None, time=1603912016, title=None, item_type='comment', url=None, parent=24901244, text='Here are a couple of expertly-written C++17&#x2F;C++20 repositories:<p><a href="https:&#x2F;&#x2F;github.com&#x2F;hanickadot&#x2F;compile-time-regular-expressions" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;hanickadot&#x2F;compile-time-regular-expressio...</a><p><a href="https:&#x2F;&#x2F;github.com&#x2F;nlohmann&#x2F;json" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;nlohmann&#x2F;json</a><p>If you&#x27;ve not written C++ code before, it can take a while to catch up with the latest developments in C++23. Start with C, and learn these, in approximately the specified order:<p>1. lvalue references.<p>2. Constructors, destructors, and inheritance.<p>3. Annotations such as const and noexcept on members.<p>4. Simple type templates, and value templates.<p>5. constexpr, std::move, and rvalue references.<p>6. Type traits and std::enable_if.<p>7. Concepts.<p>Once you learn the core language features, learning the various data structures&#x2F;algorithms in `std` should just be a matter of looking them up in cppreference, and using them over and over again.<p>Good luck.')