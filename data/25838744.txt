Item(by='zackmorris', descendants=None, kids=None, score=None, time=1611089645, title=None, item_type='comment', url=None, parent=25835280, text='I wish there was something like this for Docker rather than Lambda functions.<p>I&#x27;m new to all of it, but the security groups, route tables, internet gateways and other implementation details of AWS left me feeling overwhelmed and insecure (literally, because roles and permissions are nearly impossible for humans to reason about). AWS also suffers from the syndrome of: if you want to use some of it, you have to learn all of it.<p>Basically what I need is a sandbox for running Docker containers with any reasonable scale (under 100? what&#x27;s big these days?). Then I just want to be able to expose incoming port 443 and one or two others for a WebSocket or an SSL port so admins can get to the database and filesystem (maybe). Why is something so conceptually trivial not offered by more hosting providers?<p>I researched Heroku a bit but am not really sure what I&#x27;m looking at without actually doing the steps. I&#x27;m also not entirely certain why CI&#x2F;CD has been made so complicated. I mean conceptually it&#x27;s:<p>1) Run a web hook to watch for changes at GitHub and elsewhere<p>2) Optionally run a bunch of unit tests and if they pass, go to step 3<p>3) Run a command like &quot;docker-compose --some-option-to-make-this-happen-remotely up&quot;<p>So why is a 3 step thing a 3000 step thing? Full disclose, I did the 3000 steps with Terraform and while I learned a lot from the experience, I can&#x27;t say that I see the point of most of it. I would not recommend the bare-hands way on any cloud provider to anyone, ever (unless they&#x27;re a big company or something).<p>I guess what I&#x27;m asking is, could you adapt what you&#x27;ve done here to work with other AWS services like ECS? It&#x27;s all of the same configuration and monitoring stuff. I&#x27;ve already hit several bugs in ECS where you have to manually run docker prune and other commands in the EC2 instance because the lifetimes are in hours and they haven&#x27;t finished the rough edges around their cleanup commands. So I&#x27;ve hit problems where even though I&#x27;ve spun down the cluster, the new one won&#x27;t spin up because it says the Nginx container is still using the port. I can&#x27;t tell you how infuriating it is to have to work around issues like that which ECS was supposed to handle in the first place. And I&#x27;ve hit similar gotchas on the other AWS services too, to the point where I&#x27;m having trouble seeing the value in what they&#x27;re offering, or even understanding why a service exists in the first place, when I might have done it a different way if I was designing it.<p>TL;DR: if you could make deploying Docker as &quot;easy&quot; as Lambda, you&#x27;d quickly run out of places to store the money.')