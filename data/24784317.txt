Item(by='aphyr', descendants=None, kids=None, score=None, time=1602729789, title=None, item_type='comment', url=None, parent=24783528, text='This is an excellent observation--and indeed, one of the things about implementing (so, so many versions of) microKanren: it relies <i>heavily</i> on magic. It is very easy to get a microKanren that works <i>sometimes</i>, but explodes in some conditions, because of the subtle ways that the paper relies on the behavior of improper lists (raw cons pairs) vs proper lists, and because many recursive cases which would normally be explicitly enumerated (or handled via polymorphic dispatch) just <i>happen</i> to work correctly thanks to the way they encode bindings, substitutions, etc as lists. In particular, there are many places where it <i>looks</i> like a `map` might make things simpler, but will subtly break things, thanks to the need to recurse into improper lists. The mplus&#x2F;bind control flow graph is also... extremely tricky if you aren&#x27;t precise about null&#x2F;empty&#x2F;car&#x2F;cdr.<p>If you take a look at the &quot;full&quot; version of this program, which uses more struct types, it involves a good deal more explicit recursion: <a href="https:&#x2F;&#x2F;gist.github.com&#x2F;aphyr&#x2F;4d41e7655b10a68e753f729bdc1c5a6d#file-minikanren-pl-L522-L542" rel="nofollow">https:&#x2F;&#x2F;gist.github.com&#x2F;aphyr&#x2F;4d41e7655b10a68e753f729bdc1c5a...</a>')