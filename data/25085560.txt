Item(by='WorldMaker', descendants=None, kids=None, score=None, time=1605291670, title=None, item_type='comment', url=None, parent=25077759, text='Sure, and that&#x27;s pretty much exactly why Angular seems to refuse to commit. The EventEmitter in Angular&#x27;s core is a really odd BehaviorSubject duck, and it shows. That says everything about their commitment to RxJS purity, and that behavior &quot;from the top&quot; leads to how much Angular pushes everyone to want to abuse BehaviorSubject, to do a lot of bad RxJS and never learn to do it right, because it&#x27;s that rotten to the core. That impression that RxJS is too difficult for mortals becomes the self-fulfilling prophecy that Angular is right not to do RxJS right or commit to it, because it makes doing RxJS right in Angular <i>harder</i>.<p>Half the component examples I see in the wild use RxJS wrong or badly, and of course that stuff gets copied and pasted everywhere.<p>I&#x27;ve already sent patches to at least a few documentation examples that are supposed to be &quot;best practice&quot; that failed to actually live up to best practices because Angular failed them in setting a good example to live by.<p>Angular has created the worst of both worlds that makes RxJS harder than it should be by failing to use it properly (providing too many bad habit escape hatches and failing to commit to it), but also making it almost impossible to avoid <i>and</i> subsequently polluting the entire ecosystem with bad examples, worse documentation, and terrible habits (all of which goes right back up to the top and terrible design decisions such as Angular core&#x27;s EventEmitter).<p>If Angular committed to being an AOT change detection only system it would probably be much more like Svelte. If Angular committed fully to RxJS it would be something different entirely [0] and maybe sure it would be harder for a lot of devs to grasp at first, but instead of the pit of failure that currently awaits devs trying to learn RxJS in place in Angular, maybe they&#x27;d have a pit of success that a lot more devs would learn RxJS given a safe place to do it with fewer papercuts and bad examples to learn from.<p>[0] It probably wouldn&#x27;t be CycleJS either, as they&#x27;d still probably avoid Virtual DOM techniques. This thread has me picturing what you could do with a compile-time template Observable pipeline and I&#x27;m almost curious enough now to build a prototype of it just to show Angular how dumb it is and what it could be.')