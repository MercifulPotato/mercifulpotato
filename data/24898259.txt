Item(by='spacechild1', descendants=None, kids=None, score=None, time=1603731227, title=None, item_type='comment', url=None, parent=24896804, text='&gt; the inline keyword is also available in C (since C99)<p>but it doesn&#x27;t work the same way.<p>&gt; If you put all the implementation code into inline code, this code is parsed over and over again in each source file<p>That&#x27;s true. Good header-only C++ libraries provide &quot;forward&quot; headers, which you can use if you don&#x27;t need the full definition.<p>But the best thing is to only write C++ header-only libraries if there is a technical reason (e.g. heavy templated code).<p>&gt; &quot;STB-style single file libraries&quot; don&#x27;t suffer from this problem.<p>That&#x27;s right, but I also don&#x27;t see the benefit. To me, telling the user to add a #define to some random source file feels incredibly hacky. On a technical level, it&#x27;s the same as asking the user to #include a &quot;.c&quot; file.<p>Why not put the implementation in a single &quot;.c&quot; file, which the user can add to their project? I honestly don&#x27;t understand this...')