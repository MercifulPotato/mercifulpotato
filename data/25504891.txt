Item(by='lmilcin', descendants=None, kids=[25505110], score=None, time=1608633476, title=None, item_type='comment', url=None, parent=25498079, text='I have been working in couple organizations where I have thoroughly explained why we should undo the &quot;microservices&quot; approach and go back to monolythic application.<p>Basically, the problem is that in most cases going to microservices is being pushed by management to complete exclusion of understanding whether the organization is ready to implement it.<p>Microservices require that you have mature approach to many topics. You need to really have nailed down automated deployments and you really need to have nailed down automatically creating development infrastructure.<p>In one company I had a tool where I could log in, give a new project name, click couple parameters like namespace and a completely new microservice would be generated with BitBucket, Jira, automated deployments, confluence space, etc.<p>If you need to spend time to configure anything individually for a project, to do deployments, etc., you are not yet ready to do microservices.<p>So in all those cases where we have scaled back on microservices the developers switched from developing the application to being full time engaged with managing the application and its numerous configurations.<p>In one of the applications we had 140 services rolled back to one. Before, preparing the deployment would take 2 weeks as the developers would be sending and compiling emails with information what needed to be done where. Then the deployment would take one day as an engineer would be executing all those runbook instructions. Each of the 140 services had its own version which made ensuring correct versions a separate problem.<p>After the change where we have rolled it all into a single service under a single version, the entire thing took 2h. Still manually, but way cheaper and more reliably.')