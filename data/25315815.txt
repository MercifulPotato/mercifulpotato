Item(by='jasode', descendants=None, kids=[25316644, 25316237, 25317039, 25319958, 25316315, 25316383, 25321031], score=None, time=1607186432, title=None, item_type='comment', url=None, parent=25314924, text='<i>&gt;I think much of modern C++ should be rejected [...] then fricken switch language! There are countless better alternatives today: Rust, Swift, D, Haskell etc.</i><p>The reality is that many projects are enabled more by <i>existing libraries &amp; tools</i> rather than blank slate clean <i>language syntax</i>.<p>Some example domains of libraries &amp; tools where C++ is the 1st-class client instead of Rust&#x2F;Swift&#x2F;D&#x2F;Haskell:<p>+ deep learning: NVIDIA CUDA api is C++<p>+ HPC High Perfomance Computing: Intel MKL math library is C++<p>+ physics engine for video games: Unreal game engine is C++<p>+ latest cpu chip : ARM Allinea dev tools for the new ARM&#x2F;Neoverse chips (e.g. latest AWS Graviton2 servers) is C++<p>+ Qt GUI is C++<p>Because of the extensive C++ ecosystem, you get a <i>counter-intuitive</i> situation where programming the latest cutting-edge apps requires a <i>35-year-old language from 1985</i> instead of the newer Rust language from 2012. I predict this delta of tools+libraries between C++ and Rust&#x2F;Swift will continue to exist for 10+ years.  Recommending&#x2F;lecturing people to use Rust&#x2F;Swift&#x2F;D overlooks the reasons that many programmers use C++.  It&#x27;s not a random choice.<p>E.g., a realistic starting point for a project might be: <i>&quot;What&#x27;s a good game engine... oh, it&#x27;s Unreal, and that&#x27;s C++.&quot;</i> -- instead of -- <i>&quot;Rust has clean syntax of ownership and borrow with &quot;&amp;&quot; ampersand symbol instead of ugly warts of unique_ptr&lt;T&gt; and std::move() in C++ so I&#x27;ll code a game in Rust.&quot;</i><p>Sometimes, we look at the <i>ecosystem</i> first, and then work backwards from that to make programming choices.<p>It&#x27;s when you have the luxury of a greenfield project that doesn&#x27;t need legacy dependencies that choosing alternative cleaner syntax of Rust&#x2F;Swift is possible.  Amazon AWS and MS Azure are examples of doing new bare-metal projects with Rust instead of C++.')