Item(by='OskarS', descendants=None, kids=[25564587, 25564712], score=None, time=1609197313, title=None, item_type='comment', url=None, parent=25563867, text='&gt; Adding “auto” is just a me-too to the “var” of C# and Java.<p>I get the &quot;C++ is so full of nonsense, and they keep adding more of it!&quot; attitude, and I largely agree with it, but &quot;auto&quot; is a bad target. auto makes a lot of c++ code (most, arguably) much easier to read and cleans up and simplifies a lot of the language. Like, the fact that you never, ever, have to write out the full name of iterator types in C++ (you can just go &quot;auto it = vec.begin()&quot; or whatever) is worth the feature all on its own. It also makes dealing with complex generics simpler. It&#x27;s a huge quality of life improvement.<p>There&#x27;s a reason most languages have added type inference, and it&#x27;s not just a trendy bandwagon. In most reasonably recent languages (Rust and Swift notably), it is in fact the default to do this kind of type inference. It&#x27;s genuinely a nicer way to program.<p>In C++ it also serves another important purpose: if there wasn&#x27;t auto, there wouldn&#x27;t be lambdas. All lambdas in C++ have an type created by the compiler which you can&#x27;t access the name of. In order to store a lambda in its native type, you therefore have to use auto. Basically, if you like that C++ is becoming &quot;more functional&quot;, that is only really possible because of adding auto.')