Item(by='jjk166', descendants=None, kids=None, score=None, time=1611007081, title=None, item_type='comment', url=None, parent=25823907, text='I&#x27;m a mechanical engineer. Not every software developer is an engineer in my book, but many if not most are.<p>Engineering is a method of problem solving: accomplishing goals within a specified framework by using your understanding of the situation to identify constraints and predictably satisfy requirements.<p>To translate that into something more clear: if you can quantify what you&#x27;re doing, and within some range you know you&#x27;ll succeed and outside that range you will fail, you are doing engineering. If you&#x27;re regularly doing engineering, you&#x27;re an engineer.<p>If you regularly find yourself saying &quot;we need a server response time of less than x&quot; or &quot;we only have y amount of memory to work with&quot; or &quot;this layout reduces churn by z%&quot;, you&#x27;re doing engineering. Even if the numbers are only implicit (for example saying it has to run on a phone is just a standin for it has to meet the quantitative requirements to run on a phone) it still counts.<p>There are plenty of software developers who are more artisans than engineers - they don&#x27;t think in terms of satisfying requirements and what is &quot;good enough&quot; but rather in qualitative terms. Perhaps they are more interested in how their software is made than what it actually accomplishes, or perhaps they aren&#x27;t really trying to accomplish anything specific and are more just hacking for its own sake. If nothing else, plenty of software developers simply don&#x27;t question why they are doing something in a given way, deferring to past experience or taste over understanding. Note that in many situations, the artisanal approach is perfectly valid, though in cases where predictable and optimized solutions are really necessary, an engineering approach is really warranted.<p>Also note that no one exclusively engineers. Just because you&#x27;re not doing engineering right now doesn&#x27;t mean you never did in the past nor never could in the future. And vice versa, just because you&#x27;re an engineer at the moment doesn&#x27;t mean you can&#x27;t occasionally apply an artisan&#x27;s touch.')