Item(by='dkersten', descendants=None, kids=None, score=None, time=1606577097, title=None, item_type='comment', url=None, parent=25235206, text='I suppose the loops do help in the sense that looping in Clojure tends to favour using higher level abstractions. I don&#x27;t think I&#x27;ve ever used while, I use doseq only for side-effects, for is for list comprehensions (or for when its more readable than map), but most of my looping is actually through map, reduce, filter&#x2F;remove, etc. So I suppose you&#x27;re right because that is definitely less error prone than C-style for loops. So yeah, as you say, the higher level sequence abstractions definitely do help reduce errors in comparison to traditional loops.<p>&gt; how does i work?<p>The language can handle the mutability internally, perhaps? That is, the user only sees immutability, but under the hood, the language maintains the state mutably. But I guess that&#x27;s just an optimisation over recursion since the end-users code looks the same as if it were recursive. Kinda like &#x27;reduce&#x27;.')