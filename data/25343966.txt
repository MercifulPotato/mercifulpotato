Item(by='valenterry', descendants=None, kids=[25344145, 25344036], score=None, time=1607426684, title=None, item_type='comment', url=None, parent=25343729, text='&gt; I&#x27;m pointing out that, at least with deployments I&#x27;ve seen, GraphQL ends up with the same problems, only hidden behind a single URL.<p>Cool, let me give you a mini example, you&#x27;ll immediately understand it.<p>Two endpoints:\n1. users, which contain video-ids and can efficiently be queried by user-id (index in database)\n2. videos, which contain video data can efficiently be queried by video-id (index in database)<p>How do I get all uploads of a user? I get the user by id (request 1) then all his videos by making one request per video (n requests). No big problem for the database (it&#x27;s all indexed) and sure, we can improve the performance, but for now the bottleneck here is the number of requests that goes over the network if we use REST. This doesn&#x27;t work. You need to make a new endpoint or change an endpoint to make this work in a performant way.<p>In GraphQL we have one endpoint with two different queries. So the same problem can happen if someone queries naively. But, they can also write one nested query that says &quot;give me user for id X and for each video id, give me the video data&quot;. It will be one request from frontend to backend, but still multiple selects to the database, unless we use some &quot;smart&quot; GraphQL framework that does magic for us.<p>But we already solved a big part of the problem. And maybe that is already performant enough for what we need and we don&#x27;t have the need to improve the database query part. Lot&#x27;s of time and code saved on the backend and frontend. Yay.<p>You might say &quot;but we didn&#x27;t have indexes&quot;. Then my answer is: well, you are not worse off with GraphQL and still gain the benefits for all the cases where you have indexes in place. If you have non of these, you seem to be doing something wrong.<p>&gt; It doesn&#x27;t? I was proffering an opinion, based on my observations when GraphQL is fronting many data sources.<p>Yeah, seems you edited your post. When I read it, there was 100% a question-mark in it. ;)')