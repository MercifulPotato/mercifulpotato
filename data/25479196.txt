Item(by='Geminidog', descendants=None, kids=[25482503], score=None, time=1608399369, title=None, item_type='comment', url=None, parent=25477495, text='&gt; My comment was already concise to begin with. Your change reduced clarity. Here I will exaggerate your example:<p>Your comment was concise because it was just a statement. You didn&#x27;t attempt to prove a point.<p>My comment was a proof against your point hence why it&#x27;s longer. Now you&#x27;re trying to disprove my proof which also explains why your subsequent reply is also significantly longer.<p>&gt; There is a point where verbosity decreases clarity by overwhelming the reader with irrelevant detail which can already be inferred from context.<p>I agree with the above completely, but I also think the point is obvious. I never stated there was a level of verbosity that is excessive because I thought that notion is actually completely clear to all readers.<p>Here&#x27;s a good rule of thumb to follow. We clearly don&#x27;t think the English language is too excessive in verbosity. So All I&#x27;m saying is bring programming to the level of verbosity of English and don&#x27;t go past that.<p>Obviously your first example is excessive and past typical English verbosity. But your second example is below English verbosity and has several problems.<p>&gt; Does it matter whether profiles is a list or not? If the typical data structure &#x2F; convention you use for plural variables is a list, you don&#x27;t have to say it.<p>It doesn&#x27;t hurt if I put &quot;list&quot; or &quot;profiles&quot; in the name it&#x27;s just some additional letters letters and adds more information. It doesn&#x27;t matter at all. Also your assumption is wrong. Many containers can be plural including linked lists, hash maps, trees and graphs.<p>&gt;Do I have to say that the variable bobs is a list of people named bob? Not if its obvious from the context on the right hand side that I&#x27;m filtering by name<p>You don&#x27;t have to, but you don&#x27;t not have to either. The Bob variable can be used in a section very far away from the context... then what is a bobs? What is a janes? How do you even know it&#x27;s a list of profiles? You&#x27;re literally making me follow and decipher code to figure it out. That is the point. Give a function an English name where I don&#x27;t need to decipher anything. I read the function name and I don&#x27;t have to dive in to decode anything.<p>&gt;Do I have to use a more verbose argument name in the lambda passed to `filter`? Not really - its short and there is plenty of context around to deduce that its a profile, especially if the reader is familiar with a commonly used standard library function.<p>There is nothing you &quot;have to do&quot; here. You can do whatever you want. I am saying what you&#x27;re doing is actually is worse for communication and that my way is better for communication with the incredibly negligible downside of being more verbose. That being said context can balloon in complexity, reading code is harder than reading english so make the reader read english when he can rather then code.<p>&gt;The last one is tricky, and it depends who you&#x27;re communicating with. Do you expect your readers to be familiar with the standard library of the language, even less commonly used functions? If so, then its fine. If not, again it depends. Is the reader familiar with SQL or relational algebra? If so, then yes they probably have no problem with this.<p>All your variables can be used far away from the context where they are created. You can&#x27;t rely on the fact that the creation of Bobs is right next to it&#x27;s usage in marriages. Often times your style of coding will result in people having to follow code and dive into definitions to figure stuff out.<p>First off marriages. Marriages of what? Sam and Bob? George and Shirley? Second the expression itself. Again what is a bob and jane? What is a partner? Partners in crime? Also seriously:<p><pre><code>   bob.inner_join(janes, (bob, jane) =&gt; bob.partner == jane)\n</code></pre>\ncompare the two.<p><pre><code>   list_of_pairs_with_a_married bob_and_jane = merge_married_profiles_into_list_of_pairs(\n                                                   list_of_profiles_named_bob_and_jane)\n</code></pre>\nI think most people will agree that mine is more clear in communicating what&#x27;s going. Your version despite the brevity needs some deciphering.<p>Also you can&#x27;t expect that the profile data structure is so simple that it can be done in a one liner. You assumed the data structure to be very simple. What if the data structure is an incredibly complex graph structure of profiles. Marriages can only be found by a complex graph algorithm. I don&#x27;t want people to decipher a graph algorithm to decode what I&#x27;m trying to do here.<p>Write your function names so people can avoid deciphering meaning from context. The point is so people can decipher meaning from English because English is ten times easier.')