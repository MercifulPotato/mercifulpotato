Item(by='lbj', descendants=None, kids=None, score=None, time=1605226830, title=None, item_type='comment', url=None, parent=25068303, text='I appologize for the late reply, its been one of those days :)<p>Im overdue for a blogpost on my Webdev setup&#x2F;stack, but in short the main power comes from<p>1) Seamless transfer of data from back- to frontend and vice versa. If my DB contains a DATETIME I can load this in Clojure as a java.sql.Timestamp and pass it to the browser where its converted to a js&#x2F;Date - Free data-sharing between front- and backend is a big productivity boost.<p>2) My usual backend Cloure code, also works in the frontend. That means I can move functions or use libs in the browser that also work in the backend - It also means that my Javascript code is now fully functional, which means 10x shorter and about 10x more robust.<p>3) Everything is REPL driven. Anything surprising happens in the browser I can inspect those vars that are effected in the REPL, toy with them, fix problems and update instantly. Hunting bugs is much faster this way.<p>4) Clojurescript functions compile to React components, zero boiler-plate: (defn banner [img txt] [:div.bannerclass [:img {:src img}] [:h1 txt]]) as an example. Thats a complete component, it will only update when the params update.<p>But like I said, its a bigger talk that I&#x27;ll hopefully have some time to dive into sooner rather than later.')