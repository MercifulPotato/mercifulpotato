Item(by='Ankintol', descendants=None, kids=[25934469, 25934567, 25938627, 25939574, 25935419, 25935397], score=None, time=1611783581, title=None, item_type='comment', url=None, parent=25933972, text='&gt; In general, object orientation is a reasonably elegant way of binding together a compound data type and functions that operate on that data type. Let us accept this at least, and be happy to use it if we want to!<p>Is it elegant? OO couples data types to the functions that operate on them. After years of working on production OO I&#x27;ve still never come across a scenario where I wouldn&#x27;t have been equally or better served by a module system that lets me co-locate the type with the most common operations on that type with all the auto-complete I want:<p><pre><code>  &#x2F;&#x2F;type\n  MyModule {\n    type t = ...\n  \n    func foo = ...\n    func bar = ...\n  }\n\n</code></pre>\nIf I want to make use of the type without futzing around with the module, I just grab it and write my own function')