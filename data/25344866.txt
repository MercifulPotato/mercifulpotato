Item(by='rualca', descendants=None, kids=None, score=None, time=1607434964, title=None, item_type='comment', url=None, parent=25344816, text='&gt; Well, Fargate is simpler in the way that I define CPU+RAM, give it an image, tell it how many of them to run in parallel and let it run.<p>Kubernetes allows you to do just that with about a dozen lines of a infrastructure-as-code script.<p>&gt; That&#x27;s pretty much it. The container cannot be accessed from the outside except for the defined interfaces like http, the containers cannot discover each other unless I use something else to coordinate between them. That is all restrictive, but it also makes things simple.<p>Kubernetes does that out-of-the-box, and allows you to keep your entire deployment in a repository.<p>&gt; I still need to do health-check and such - so if I don&#x27;t really need long running containers, I can make it even simpler by using lambda.<p>With Kubernetes, health checks are 3 or 4 lines of code in a deployment definition.<p>And it&#x27;s used to manage auto-scaling.<p>Oh, and unlike Fargate, you can take your Kubernetes scripts and deploy your app on any service provider that offers Kubernetes.')