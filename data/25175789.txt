Item(by='gls2ro', descendants=None, kids=[25175870, 25176204], score=None, time=1606031590, title=None, item_type='comment', url=None, parent=25175422, text='&gt; Ruby needs new blood infused into it.<p>yes, I strongly agree with this, specially when talking about Web tech.<p>I am programming in Ruby (and Rails) for over 12 years and I think I had the same feeling up until a couple of years ago that it become a stable system where I could move quickly and create new products but did not have so much newness.<p>But now I see at least two things which makes me love even more this ecosystem:<p>1. Stimulus JS along with StimulusRelfex <a href="https:&#x2F;&#x2F;docs.stimulusreflex.com&#x2F;reflexes" rel="nofollow">https:&#x2F;&#x2F;docs.stimulusreflex.com&#x2F;reflexes</a><p>2. ViewComponent <a href="https:&#x2F;&#x2F;viewcomponent.org" rel="nofollow">https:&#x2F;&#x2F;viewcomponent.org</a><p>And now I discovered this Matestack.<p>I am excited because Ruby on Rails is a technology I know very well and I was (and still am) a little against moving to full SPA and adopting a JS framework for frontend. Somehow the SPA felt to me a little unstable in general, when compared with SSR. This unstable I think was mostly due to being very hard to debug real production issues.<p>It might be from the way debugging worked in the beginning not showing proper line of code where the JS error was, or it might be because of my own resistance to change.<p>But now with these new tools added to the Ruby eco-system I can make the web interface more responsive and in the same time feel that I only add stable components into an app.')