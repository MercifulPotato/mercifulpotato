Item(by='Jtsummers', descendants=None, kids=None, score=None, time=1611165596, title=None, item_type='comment', url=None, parent=25848799, text='Ada isn&#x27;t even 1-based, though many of its built-in array-based types <i>are</i> 1-based. It&#x27;s &quot;whatever ascending, consecutive range you want&quot;-based. Which, IMHO, is the best option. You can use 0-based where it makes sense and 1-based where it makes sense, and -100 based where it makes sense, or &#x27;a&#x27;..&#x27;z&#x27; based where it makes sense.<p>And I think that last example demonstrates <i>why</i> the closed range notation makes a lot of sense over half-open (at least for languages that permit describing ranges of arbitrary discrete types). When talking about <i>numbers</i> a half-open range notation is clear and useful because numbers exist in an <i>obvious</i> sequence (so long as we&#x27;re sticking to some subset of the real numbers, complex numbers don&#x27;t have as obvious an ordering). But when talking about other ranges, like characters, how would you use a half-open range (in a clear way) to describe the characters a-z?  &#x27;a&#x27;..&#x27;{&#x27;? Is that actually <i>clear</i>?<p>What about describing the range when you want to include the last valid value? How do I describe, using the byte type itself, a range 0 through 255:<p><pre><code>  type Byte is mod 256;\n  subtype Full_Range is Byte range 0..255; -- valid Ada, closed range notation\n  subtype Full_Range is Byte range 0..256; -- invalid Ada, half-open notation\n</code></pre>\nI&#x27;m now describing my range of a specific type using an element that isn&#x27;t part of the type. For numbers this can work. But what is the character after the last character of the set of characters?<p><pre><code>  subtype Characters_After_And_Including_Lower_A is Character range &#x27;a&#x27;..???;\n  -- presumably we&#x27;d have a better name in a real application\n</code></pre>\nIn a half-open notation that&#x27;s impossible to write <i>and be explicit about the upper bound</i>. You can only describe it with an implicit upper bound by leaving the ??? blank as in:<p><pre><code>  subtype Characters_After_And_Including_Lower_A is Character range &#x27;a&#x27;..;\n</code></pre>\nA valid solution. Though in Ada this would be a no-go as it leaves open some ambiguity&#x2F;possibility for error in the use of the `..` notation (what if the author didn&#x27;t mean for it to run to the end but forgot to type the upper bound?), so a second notation would have to be formed. Perhaps a third `.` or some symbol indicating that it&#x27;s open-ended:<p><pre><code>  Character range &#x27;a&#x27; ...; -- perhaps?</code></pre>')