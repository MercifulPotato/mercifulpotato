Item(by='mumblemumble', descendants=None, kids=[25408221, 25381380], score=None, time=1607632500, title=None, item_type='comment', url=None, parent=25377830, text='I recently inherited a Clojure codebase whose original developers are all long gone. I&#x27;m finding the experience to be a bit like trying to learn how to navigate a city where none of the streets have names.<p>When I was working my way through <i>Clojure for the Brave and True</i>, I really liked all the clever techniques around data-level programming and informal interfaces. Not having to stop to define and name formal types lets you slap things together quickly. But I&#x27;m now seeing the where that approach leads to: A codebase where nothing is formally defined, and nothing has a name.<p>I see where there were some efforts to do it by the book, and formalize this stuff by using functions to define an interface. The problem, though, is that we live in an orderly cosmos, and some laws are universal. One of those laws is that people will always take the shortest practical path to get from point A to point B. No matter how politely you ask them not to. So, if a map <i>can</i> be manually hacked to shreds in an ad-hoc manner, it <i>will</i> be manually hacked to shreds in an ad-hoc manner.')