Item(by='bjourne', descendants=None, kids=[25659074], score=None, time=1609941927, title=None, item_type='comment', url=None, parent=25653407, text='&gt; 3. DRY is a religion here, to the point where everything is fragmented to hell. I have a hard time explaining but I feel like thereâ€™s a tradeoff where things can be split apart into their own modules to a degree that becomes counter-productive. Am I wrong about that?<p>There are three stages that almost every developer goes through. 1. Just code the shit up. Get it done and don&#x27;t worry about structure. 2. Modularize everything! Design patterns, code reuse, code components, refactoring, getters &amp; setters (cause attribute access is &quot;harmful&quot;), pointless doc strings, useless const declarations, and (shudder) microservices. 3. Nirvana. The stage where you realize what matters and what doesn&#x27;t. You do not spend a month refactoring a bash script that will only be run once, for example.<p>I don&#x27;t know you so I can&#x27;t tell if you are in stage 1 or 3. Your colleagues definitely seem to be stuck in stage 2.<p>In my experience, you can&#x27;t really teach people in stage 2 that what they are doing is wrong. They don&#x27;t know that stage 3 exists so if you tell them that they are overdoing it, they&#x27;ll think that you&#x27;re a stage 1 scrub and&#x2F;or sloppy. They have to realize themselves that they are wasting their time and that simple solutions almost always are better.')