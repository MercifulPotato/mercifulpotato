Item(by='gpm', descendants=None, kids=[25460172], score=None, time=1608237782, title=None, item_type='comment', url=None, parent=25459628, text='Good to know about that gcc extension, that&#x27;s cool :)<p>Ok, I think I understand what&#x27;s going on now. To write it down in a bit of a different way for anyone else who is confused<p>Start with some user written code like this<p><pre><code>    ... usercode(...) {\n        ...\n        static_call(x86_pmu_add)(args..);\n        ...\n    }\n</code></pre>\nThat code is expanded to (desugaring the gcc extension as well)<p><pre><code>   ... usercode(...) {\n       ...\n       __ADDRESSABLE(__SCK__x86_pmu_add); &#x2F;&#x2F; Just making sure the compiler doesn&#x27;t think this is unused\n       (&amp;__SCT__x86_pmu_add_tramp)(args...);\n       ...\n    }\n</code></pre>\n__SCT__x86_pmu_add_tramp is where we&#x27;ve &quot;jitted&quot; the function address to jump to. If we&#x27;ve written a function pointer, that assembly is just a &quot;jmp&quot; instruction to the function we wrote (note that one function jumping to another is just a tail call), and in the other case it&#x27;s just a &quot;ret&quot; instruction because we don&#x27;t want to do anything.<p>Thanks woodruffw! This is some really Interesting (and intricate) code')