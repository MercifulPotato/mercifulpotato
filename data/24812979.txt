Item(by='DyslexicAtheist', descendants=None, kids=[24816148, 24814481], score=None, time=1602966214, title=None, item_type='comment', url=None, parent=24812059, text='what is exciting about Tiger Lake IMO is the memory tagging feature (ARM has it already) which can mitigate ROP attacks. It was announced here:<p><a href="https:&#x2F;&#x2F;newsroom.intel.com&#x2F;wp-content&#x2F;uploads&#x2F;sites&#x2F;11&#x2F;2020&#x2F;08&#x2F;Intel-Architecture-Day-2020-Presentation-Slides.pdf" rel="nofollow">https:&#x2F;&#x2F;newsroom.intel.com&#x2F;wp-content&#x2F;uploads&#x2F;sites&#x2F;11&#x2F;2020&#x2F;...</a><p>memory tagging is like a hardware based ASAN that eliminates many memory bugs and improves memory debugging. So its potential is well beyond mitigating ROP (though all these benchmarks will change with memory tagging enabled :-))).<p>Intel patent document &quot;US2020&#x2F;0125502 Low memory overhead heap management for memory tagging&quot;, has more info on how this might work: <a href="https:&#x2F;&#x2F;www.freepatentsonline.com&#x2F;20200125502.pdf" rel="nofollow">https:&#x2F;&#x2F;www.freepatentsonline.com&#x2F;20200125502.pdf</a><p>For a great background primer on why to use this see the brilliant work of Konstantin Serebryany <a href="https:&#x2F;&#x2F;arxiv.org&#x2F;ftp&#x2F;arxiv&#x2F;papers&#x2F;1802&#x2F;1802.09517.pdf" rel="nofollow">https:&#x2F;&#x2F;arxiv.org&#x2F;ftp&#x2F;arxiv&#x2F;papers&#x2F;1802&#x2F;1802.09517.pdf</a><p>IMO this is long overdue on Intel architecture and the main reason why one might want to be excited about Tiger Lake<p>I can imagine it will lead to a lot of effort for Linux: malloc implementation, glibc, compilers, toolchains and debugging tools ... and lots of discussions about why and when it should be enabled. (IMO you want this in production always)')