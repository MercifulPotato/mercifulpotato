Item(by='masklinn', descendants=None, kids=[25422998], score=None, time=1607976665, title=None, item_type='comment', url=None, parent=25421916, text='&gt; I expect that a similar problem will be found in many other libraries, if the XML was publicized. XML namespaces made a critical... &quot;mistake&quot; is probably too strong, but &quot;design choice that deviated too far from people&#x27;s mental model&quot; is about right... that has prevented them from being anywhere near as useful or safe as they could be. In an XML document using XML namespaces, &quot;ns1:tagname&quot; may not equal &quot;ns1:tagname&quot;, and &quot;ns1:tagname&quot; can be equal to &quot;ns2:tagname&quot;. This breaks people&#x27;s mental models of how XML works, and correspondingly, breaks people&#x27;s code that manipulates XML.<p>That right there is why I like Clark&#x27;s notation (despite its unholy verbosity), which I learned of because that&#x27;s how ElementTree manipulates namespaces: in Clark&#x27;s notation, the document is conceptually<p><pre><code>    &lt;{https:&#x2F;&#x2F;sample.com&#x2F;1}tag&gt;\n      &lt;{https:&#x2F;&#x2F;blah.org&#x2F;1}tag&gt;\n        &lt;{https:&#x2F;&#x2F;blah.org&#x2F;2}tag&gt;\n          &lt;{https:&#x2F;&#x2F;anewsite.com&#x2F;xmlns}tag &#x2F;&gt;\n        &lt;&#x2F;{https:&#x2F;&#x2F;blah.org&#x2F;2}tag&gt;\n      &lt;&#x2F;{https:&#x2F;&#x2F;blah.org&#x2F;1}tag&gt;\n    &lt;&#x2F;{https:&#x2F;&#x2F;sample.com&#x2F;1}tag&gt;\n</code></pre>\nWhich is unambiguous. But as you note adds challenges for round-trip equality (in fact ElementTree doesn&#x27;t maintain that, it simply discards the namespace prefixes on parsing, which I have seen outright break supposedly XML parsers which were really hard-coded for specific namespace prefixes).<p>lxml does round-trip prefixes (though it still doesn&#x27;t round-trip documents) by including a namespace map on each element.')