Item(by='35fbe7d3d5b9', descendants=None, kids=None, score=None, time=1611076193, title=None, item_type='comment', url=None, parent=25835348, text='&gt; Reducing it to an issue of following license terms is short sighted<p>It&#x27;s really not: the license terms are the root of the problem you are pointing out.  We can either voice our (righteous, but ultimately pointless) anger or we can try to analyze what&#x27;s happening and how to fix it.  So let&#x27;s do the latter.<p>Amazon offers a fully managed ElasticSearch service running on the core ES code because ElasticSearch was, up to this point, released under the Apache 2.0 license which <i>fully supports Amazon&#x27;s right to do this</i>.<p>Amazon offers a fully managed MongoDB <i>compatible</i> database called DocumentDB.  It is <i>not</i> based on MongoDB â€“ Amazon reimplemented the core functionality but maintained the MongoDB API layer.<p>MongoDB Inc. makes the forceful point that it is not a drop in replacement[1] but a rather crippled product that lags behind what MongoDB can do and continues to diverge.  This is likely very good marketing for MongoDB and probably helps their company succeed :)<p>Why did Amazon do this?  Why would Amazon use the core ES code but go through a more difficult reimplementation for Mongo?<p>Because MongoDB&#x27;s core was licensed under the terms of the AGPL3, but all the drivers that implemented the API functionality were implemented under terms of the Apache 2.0 license.<p>Beginning to see the solution?<p>[1]: <a href="https:&#x2F;&#x2F;www.mongodb.com&#x2F;atlas-vs-amazon-documentdb" rel="nofollow">https:&#x2F;&#x2F;www.mongodb.com&#x2F;atlas-vs-amazon-documentdb</a>')