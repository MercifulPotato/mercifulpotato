Item(by='preommr', descendants=None, kids=[25053968, 25054479, 25056427, 25054778], score=None, time=1605047128, title=None, item_type='comment', url=None, parent=25048028, text='I use Go quite a bit, and I have the exact opposite experience from a lot of these testimonials.<p>Someone else mentioned go just works, they don&#x27;t have to fight the tooling, or that they worked on a go program that works five years later (which language does this not apply to). ??? I&#x27;ve had quite a few problems with things like plugins for go deleting unused imports because I am in the habit of saving frequently. I resolved it, but I still had to fight with the tooling. Then there was the whole go mod situation.<p>Go code is a language that has succeeded in a niche market (It&#x27;s magical to just spin up a web server that works out of the box with great performance. ) while also handicapping itself so that complex code is too difficult to write. So it doesn&#x27;t get associated with the problems some other languages have. Java is a good language that people ruined with horrible enterprise culture.<p>I don&#x27;t even really think that go is that painless to learn. The small size of average projects has led to some dire fault lines. The biggest one for me is that it&#x27;s structural typing for interfaces isn&#x27;t explicit. Often times I&#x27;ll read some code that uses an interface, and I&#x27;ll have a real hard time mentally mapping what uses that interface and how to write code. 90% of the time this isn&#x27;t an issue because the projects are small enough that I can just keep the whole thing in my head, and I can make educated guesses, or I only need to remember a handful of common cases. This doesn&#x27;t scale well. Yea, I know there&#x27;s plugins for these things - and I use them, but I am not a fan of tying development to non-standalone tools.<p>Anyways, rant aside, looking forward to another 11 years of go.')