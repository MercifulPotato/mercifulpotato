Item(by='justin_oaks', descendants=None, kids=[25211542, 25211846, 25217079], score=None, time=1606322941, title=None, item_type='comment', url=None, parent=25210203, text='This project would be better if it wasn&#x27;t exactly a 1-to-1 mapping from words&#x2F;methods to regular expressions.  For example, the regex &quot;\\d+&quot; maps to the code &quot;digits().oneOrMore()&quot;. That doesn&#x27;t read well in English because it&#x27;s odd to have an adjective after the noun (i.e. we say &quot;red bird&quot; not &quot;bird red&quot;).<p>Also, a serious weakness in regex is they are &quot;write only&quot;, or hard to read. That&#x27;s because they are compact and don&#x27;t have discernible sections that are then assembled together.<p>You can do that yourself in Java by assigning chunks of regex to variables and then concatenating them together, but the regex engine doesn&#x27;t let you do that itself. You can&#x27;t name sections of the regex or insert comments into it.<p>The example<p><pre><code>   ^(?:http)(?:s)?(?:\\:\\&#x2F;\\&#x2F;)(?:www\\.)?(?:[^\\ ]*)$\n</code></pre>\ncould be better if it could be broken down into named pieces or commented like this:<p><pre><code>    ^              \n    (?:http)(?:s)? # http or https\n    (?:\\:\\&#x2F;\\&#x2F;)     # :&#x2F;&#x2F;\n    (?:www\\.)?     # optional www.\n    (?:[^\\ ]*)     # rest of URL (no spaces)\n    $</code></pre>')