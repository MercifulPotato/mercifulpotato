Item(by='tzs', descendants=None, kids=[25390281], score=None, time=1607716647, title=None, item_type='comment', url=None, parent=25389088, text='OK, I looked at Aaronson&#x27;s paper. Here is his description of a Turing machine:<p>&gt; Following Radó’s conventions, we consider Turing machines over the alphabet {0, 1}, with a 2-way infinite tape, states labeled by 1, ... , n (state 1 is the initial state), and transition arrows labeled either by elements of {0, 1} × {L, R} (in which case the arrows point to other states), or else by “Halt” (in which case the arrows point nowhere).<p>Note that under this definition when the machine halts it does NOT write the tape or move the head.<p>That gives the machine 4n+1 ways to respond to a given input. If it is not halting, there are 4 actions it can take (0L, 0R, 1L, 1R) and n states it can go to. If it is going to halt, there is just one action. Hence, 4n + 1 possible responses.<p>With two possible inputs, that&#x27;s (4n+1)^2 possible rules, and with n rules that&#x27;s (4n+1)^(2n) possible machines as given by Aaronson and used by the article&#x27;s author, which is indeed 6516 when n = 2.<p>For machines that do write and move even when halting, we can treat halt as an extra state, which gives the formula in your UPDATE2.<p>For completeness we should consider machines that write but do not move on halt. Their formula is (4n+2)^(2n), or 10000 for n = 2.<p>(That would also be the formula for rather pointless machines that move but do not write on halt).')