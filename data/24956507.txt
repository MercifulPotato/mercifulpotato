Item(by='qayxc', descendants=None, kids=[24957351], score=None, time=1604192507, title=None, item_type='comment', url=None, parent=24953856, text='It also didn&#x27;t support as many languages&#x2F;features and was <i>super</i> slow on contemporary hardware.<p>Even my 9 year old laptop can run VSCode just as fast as my 3 year old main machine.<p>Back in 1998 when Visual Studio 6.0 (actually just the second publicly released version) was released, it took ages to load and used up quite some RAM. 6 years later, when I switched to VS.NET 2003, VS6 ran super fast on my PC.<p>The difference was, however, that my 1998 PC was a 300MHz Pentium II with 64MB of RAM, wheras my 2003 machine was a n overclocked AMD Athlon XP at more than 2500MHz with 2GB of RAM.<p>Now compare that with my 2011 laptop vs. my 2017 laptop:\nmy 2011 machine has a dual core 2.5GHz CPU with 8GB of RAM. My 2017 laptop is a dual core 3.5GHz CPU with 16GB of RAM.<p>22 years ago, 5 years of progress meant a 10x increase in RAM and 8x increase in CPU speed. During the past 10 years we saw a doubling in RAM (barely, TBH) and maybe 1.5x in CPU speed (at the same core count).<p>That&#x27;s why the old software felt so fast - because we used it during a time when a major PC upgrade actually meant something. If you used a software package for five years, you could actually see more than a doubling in performance (e.g. Core2Duo E8600, 2008 vs Core i3-4350, 2013 [1]).<p>That&#x27;s just not the case anymore and skews our perception regarding performance heavily towards &quot;lean&quot; vintage apps.<p>[1] <a href="https:&#x2F;&#x2F;www.techspot.com&#x2F;article&#x2F;1039-ten-years-intel-cpu-compared&#x2F;page3.html" rel="nofollow">https:&#x2F;&#x2F;www.techspot.com&#x2F;article&#x2F;1039-ten-years-intel-cpu-co...</a>')