Item(by='kccqzy', descendants=None, kids=None, score=None, time=1602099173, title=None, item_type='comment', url=None, parent=24711679, text='To me the biggest advantage is expression. You can package up a whole traversal or other optics into a single expression and then you can give it a name, refer to it, augment it. For example what if later you&#x27;d like to add another `if` into the inner loop? Would you duplicate the code? Would you add a callback to the original imperative code? The big idea here is that access to some subpart of a big object (like a path) can be abstracted into its own expression type and made composable, and the less important idea is that it can also be well-typed.<p>The second advantage is conciseness. I don&#x27;t know if you&#x27;ve actually used jq, but if you have, I really don&#x27;t know why anyone prefers a verbose for-loop-and-if-statement block over a single concise jq expression. Paul Graham expressed this idea better than I could have so read this: <a href="http:&#x2F;&#x2F;www.paulgraham.com&#x2F;power.html" rel="nofollow">http:&#x2F;&#x2F;www.paulgraham.com&#x2F;power.html</a>')