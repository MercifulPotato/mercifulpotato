Item(by='raiph', descendants=None, kids=None, score=None, time=1610995792, title=None, item_type='comment', url=None, parent=25776374, text='&gt; Raku has a long way to go.<p>Agreed that both Raku (the language, community, and ecosystem) and Rakudo (the compiler) have a long way to go.<p>But whose who know them well know that there&#x27;s still lots of low hanging fruit and it&#x27;s &quot;just&quot; a matter of continuous improvement, year by year.<p>&gt; stuck in a &quot;we&#x27;ll optimise that later&quot; dead-end<p>That&#x27;s a bit like saying Java (or rather the JVM) seemed to be stuck in being dog slow based on its dog slow performance in the first few years of its official existence. It paints a false picture.<p>In reality JVMs got faster each year, sometimes by big jumps, and 10 years after Java&#x27;s first official release it was still slow, but no longer dog slow. (And nowadays Java is no longer considered slow.)<p>What matters is whether there is sustained love and continuous significant improvement of a PL, and an implementation. Raku has demonstrated that it has that for 20 years, and Rakudo for 10.<p>There is good reason to look forward to that continuing for both Raku and Rakudo until well beyond the point at which its raw string processing performance has become respectable.<p>And this will be in addition to what&#x27;s remarkable about Raku&#x27;s string handling, namely its world leading Unicode support and O(1) string indexing. Presuming that will finally pay off, and I see no reason to think it won&#x27;t, it will <i>seriously</i> pay off.')