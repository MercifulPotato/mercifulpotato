Item(by='kentonv', descendants=None, kids=None, score=None, time=1609381071, title=None, item_type='comment', url=None, parent=25588664, text='What you describe sounds exactly like how Cap&#x27;n Proto works. Obviously I like that design since I wrote it.<p>But it does have drawbacks. The encoded size is necessarily a bit larger to allow random access traversal of the raw bytes (though it compresses well). The API to manipulate structures in-place is a little awkward, particularly on the writing side. And, you can&#x27;t really use the generated types as mutable in-memory state, as people commonly like to do with Protobuf types -- as a result, a common feature request for Cap&#x27;n Proto is to support generating &quot;native&quot; structs with the ability to convert between those and the zero-copy types as desired.<p>Everything is full of trade-offs. I don&#x27;t disagree with your design preferences but I do object to the extreme line you are taking on them. You said: &quot;Protobufs isn&#x27;t useful for serious network applications.&quot; That is plainly contradicted by the existence of a trillion-dollar company built on said technology.')