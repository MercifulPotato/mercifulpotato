Item(by='TheOtherHobbes', descendants=None, kids=None, score=None, time=1607765800, title=None, item_type='comment', url=None, parent=25395567, text='The <i>metaphor</i> of a hammer has barely changed over time. What you&#x27;re describing are implementation improvements - not trivial, but you could take a modern hammer back a few centuries and it would still be recognisable as a hammer. Albeit a very unusual one.<p>UX&#x2F;UI has the same issues. Everything is a metaphor anyway. You don&#x27;t get to choose whether your interface is a metaphor, because there is no other option for interfaces. You only get to choose the type of metaphor, and its affordances - from hand-editing binary in a &quot;file&quot; (...which is also a metaphor) to voice recognition.<p>There are some good points in the article, but they&#x27;re maybe 10% of the way to a full understanding of this issue. Most of the complaints are about inconsistencies and expert-level operation (written scripting) vs beginner-level operation. But there&#x27;s also a point about contextual metadata.<p>Modern operating systems are pretty bad at all of the above, but that&#x27;s because designing intuitive and powerful interfaces that incorporate expert-level features with some workable built-in intelligence - and preferably some form of composability - is incredibly hard.<p>It&#x27;s so hard it&#x27;s barely been attempted, never mind done successfully. So most operations in userland are explicitly task-oriented. Their settings are customisable, but not the menu of operations on offer.<p>As a non-expert if you want to rename a folder full of files, you buy a file renamer. You don&#x27;t try to write a script, because even trivial scripting requires a level of comfort with abstractions that most users simply don&#x27;t have.<p>Experts do have that skill level, but they can already use $scripting_lang.<p>It&#x27;s possible to imagine an OS that would be more open-ended and wouldn&#x27;t silo data inside task-oriented applications. But this runs into huge problems with efficient representations and the most appropriate schema for each domain, and just the concept on its own is far outside anything most users would want to deal with.')