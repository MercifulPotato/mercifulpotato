Item(by='mschaef', descendants=None, kids=[25929012, 25933134], score=None, time=1611759486, title=None, item_type='comment', url=None, parent=25927822, text='&gt; FWIW classic VB is a sort of in-between because you are editing the actual forms and state you&#x27;d see running<p>VB could be a little weird in that respect.  This screenshot of 1.0 has a clue about why:<p><a href="https:&#x2F;&#x2F;winworldpc.com&#x2F;screenshot&#x2F;40c3942c-c281-2230-11c3-a4e284a2c3a5" rel="nofollow">https:&#x2F;&#x2F;winworldpc.com&#x2F;screenshot&#x2F;40c3942c-c281-2230-11c3-a4...</a><p>The timer control in the toolbar (left column, second from the bottom) is an example of a control you could drag over into the &#x27;form editor&#x27;, give a location, but was totally invisible at runtime. All it did was provide a hook for timer events.<p>This pattern turned into something common, at least in early VB. The extension mechanism for the language was defined in terms of VBX custom controls - which were intended to be visual controls that showed up on screen. The model worked well as long as that assumption held true, but VBX was also turned into an ad hoc mechanism for everything else.<p>The net of this was that you often had a form editor showing a bunch of totally-non-graphical VBX controls that would do things like send mail, interact with a PBX, whatever else.<p>Rolling back from this mess was a bit part of the impetus for the way OLE&#x2F;COM 2.0 was designed, specifically OCX controls and IDispatch.')