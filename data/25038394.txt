Item(by='stcredzero', descendants=None, kids=[25039223], score=None, time=1604948720, title=None, item_type='comment', url=None, parent=25037893, text='<i>Lack of safety is a feature in game development, because the optimizations required are typically unorthodox and a super strict language slows development down.</i><p>One of my first experiences interacting with a golang programmer, was in the context of my game server project. As an optimization, I had a race condition in the code that disconnected clients. After all, if the connection is about to die, I don&#x27;t care if it dies in frame n, n+1, n+2...etc. This golang programmer was totally out to tell me I&#x27;m stupid, ugly, and bad, because I should always be using -race and always have 0 race conditions.<p>Like, it would have been one thing if he could&#x27;ve had a cogent discussion around how the build should be free of warnings, because that makes such signals super clear, but no, it was just pure dogmatism.<p><i>Additionally, object ownership can be unclear in a game development setting, which typically makes use of global variables for state.</i><p>In ECS, why should object ownership be an issue? The Systems can just own everything.')