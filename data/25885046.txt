Item(by='mavelikara', descendants=None, kids=None, score=None, time=1611428115, title=None, item_type='comment', url=None, parent=25882912, text='&gt; This is quite false, generics RFE was top 3 in the java bug parade since 1.2.<p>True. Also, Odersky and Wadler&#x27;s Pizza language [1] was available as early as 1996 and the language designers at Sun were well aware of it and keen on adding it to Java. Odersky mentions this here[2]:<p><pre><code>  Bill Venners: How did Scala come about? What is its history?\n\n  Martin Odersky: Towards the end of my stay in Zurich, around 1988&#x2F;89, \n  I became very fond of functional programming. So I stayed in research \n  and eventually became a university professor in Karlsruhe, Germany. \n  I initially worked on the more theoretical side of programming, on \n  things like call-by-need lambda calculus. That work was done together \n  with Phil Wadler, who at the time was at the University of Glasgow. \n  One day, Phil told me that a wired-in assistant in his group had heard \n  that there was a new language coming out, still in alpha stage, called \n  Java. This assistant told Phil: &quot;Look at this Java thing. It&#x27;s portable. \n  It has bytecode. It runs on the web. It has garbage collection. This \n  thing is going to bury you. What are you going to do about it?&quot; Phil \n  said, well, maybe he&#x27;s got a point there.\n\n  The answer was that Phil Wadler and I decided take some of the ideas from \n  functional programming and move them into the Java space. That effort became \n  a language called Pizza, which had three features from functional programming: \n  generics, higher-order functions, and pattern matching. Pizza&#x27;s initial \n  distribution was in 1996, a year after Java came out. It was moderately \n  successful in that it showed that one could implement functional language \n  features on the JVM platform.\n\n  Then we got in contact with Gilad Bracha and David Stoutamire from the Sun \n  core developer team. They said, &quot;We&#x27;re really interested in the generics stuff \n  you&#x27;ve been doing; let&#x27;s do a new project that does just that.&quot; And that became \n  GJ (Generic Java). So we developed GJ in 1997&#x2F;98, and six years later it became \n  the generics in Java 5, with some additions that we didn&#x27;t do at the time. In \n  particular, the wildcards in Java generics were developed later independently \n  by Gilad Bracha and people at Aarhus university.\n\n  Although our generics extensions were put on hold for six years, Sun developed a \n  much keener interest in the compiler I had written for GJ. It proved to be more \n  stable and maintainable than their first Java compiler. So they decided to make \n  the GJ compiler the standard javac compiler from their 1.3 release on, which came \n  out in 2000. \n</code></pre>\n[1]: <a href="http:&#x2F;&#x2F;pizzacompiler.sourceforge.net&#x2F;index.html" rel="nofollow">http:&#x2F;&#x2F;pizzacompiler.sourceforge.net&#x2F;index.html</a><p>[2]: <a href="https:&#x2F;&#x2F;www.artima.com&#x2F;scalazine&#x2F;articles&#x2F;origins_of_scala.html" rel="nofollow">https:&#x2F;&#x2F;www.artima.com&#x2F;scalazine&#x2F;articles&#x2F;origins_of_scala.h...</a>')