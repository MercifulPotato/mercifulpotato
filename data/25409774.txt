Item(by='tsimionescu', descendants=None, kids=None, score=None, time=1607890384, title=None, item_type='comment', url=None, parent=25407868, text='Common Lisp has a pretty simple fix for this: when you declare a parameter with a default value, you can also declare a variable that will be true iff the parameter was actually passed.<p>The function definition looks like this:<p><pre><code>  (defun foo (&amp;optional (a 1 a-passed))\n    (if a-passed (print a) \n       (print &quot;a not passed&quot;))\n\n  &gt; (foo 10)\n  10\n  &gt; (foo 1)\n  1\n  &gt; (foo)\n  a not passed\n</code></pre>\nThis is still relatively easy to implement, and very easy to use in my opinion. Of course, combining this with named arguments is even better, and that is supported as well (just replace &amp;optional with &amp;key, and then specify the name when calling the function - (foo :a 1)).')