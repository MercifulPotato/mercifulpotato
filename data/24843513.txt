Item(by='oxinabox', descendants=None, kids=None, score=None, time=1603237893, title=None, item_type='comment', url=None, parent=24843139, text='Jax is awesome.\nBut supporting most of numpy isn&#x27;t enough.\nBecause <i>numpy</i> isn&#x27;t composable.\nYou want to add banded-block-banded matrices to numpy?\nThen you need to fork numpy (or in this case fork jax); this is a package in julia and it works with everything.\nYou want add names to your array dimentions like PyTorch recently did, then like PyTorch you need to fork numpy; again this is package in julia.\nYou want to do both? You have to merge those two forks into each other. In julia this isn&#x27;t even a package this is just using the aformentioned two packages.<p>You want to work with Units or track Measurment error (or both?). Basically same story.\nExcept better in some ways worse in others.\nBetter because you don&#x27;t have to fork numpy, it is extensible enough to allow that. Packages exist that use that etendability for exactly that.\nWorse because those are scalar types, why are you even having to write code to deal with array support at all.\nAgian 2 julia packages and they don&#x27;t even mention arrays internally.<p>The problem&#x27;s not Jax.\nThe problem is numpy.\nOr rather the problem is this level of composability is really hard most of the time in most languages (including the python + C combo. Especially so even).<p>Its true that this is not always trivial 100$% of the time with julia&#x27;s multiple dispatch. but it is truer there than anywhere else i have seen.')