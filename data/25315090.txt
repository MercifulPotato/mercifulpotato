Item(by='exikyut', descendants=None, kids=None, score=None, time=1607181133, title=None, item_type='comment', url=None, parent=25312819, text='In all honesty my two responses would be COBOL and simplicity-focused PHP&#x2F;HTML5&#x2F;{SQLite&#x2F;MySQL}.<p>COBOL&#x2F;FORTRAN&#x2F;Prolog&#x2F;etc type applications are out there, apparently, and if you&#x27;re in the right place at the right time you can entrench reasonably effectively, at least short term.<p><i>However</i>, these types of jobs also have their own unique pain points. This recent article (they surface reasonably frequently on here), and the comments, make for good reading: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25148840" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25148840</a><p>As for PHP+et al, I recommend these for their overall simplicity, relatively low learning curve, and ability to scale &quot;well enough&quot;, for above-average values of &quot;well enough&quot;. PHP itself isn&#x27;t the most ideally designed language, but it can actually get things done. Furthermore, its reputation as a &quot;simple&quot; or &quot;stupid&quot; language, like eg VB6, can also serve to catalyze the upper bound of expected complexity of a particular solution. This has the downside of maybe a bit of isolation from truly interesting challenges, but allows for a slower&#x2F;relaxed and perhaps more maintainable pace. (And there&#x27;s nothing stopping you building something Facebook-sized if you needed to.)<p>On the client side, HTML5 is expansive and... very backward compatible with how things have been done for the past 20 years. Elitist forum commentators may make snooty noises about your use of tables, but Chrome won&#x27;t. JavaScript could be a harder language to reason about, especially for simple enhancements like fetching bits of data which won&#x27;t require learning pages of theory first.<p>Finally, my recommendation to focus on the Web is that, well, once you grumble and context-switch to &quot;ugh, fine, HTML+JS&quot;, everything else can roll in incrementally as you go along.<p>With something stuck in the 80s&#x2F;90s, sure, you guarantee that you&#x27;re completely isolated from the firehose... at the cost of being objectively less economically viable in industry.')