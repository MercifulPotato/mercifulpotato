Item(by='sai_c', descendants=None, kids=[24754203], score=None, time=1602506541, title=None, item_type='comment', url=None, parent=24753633, text='I understand the &quot;unsafe&quot; construct on the technical level, but thanks for clarification nevertheless.<p>My point was that, with &quot;unsafe&quot;, Rust provides a technical construct which allows to carry over some negative development styles, possible in the C(++) world, without friction (if wanted). And from the list I linked, there seems to be a lot of momentum for this kind of behaviour in certain industries.<p><pre><code>   You&#x27;d have to actually re-write it with unsafe constructs in the first place.\n</code></pre>\nThis is what I think would happen, and tried to describe. Someone trying to implement a feature, failing with safe mode and resorting to &quot;unsafe&quot; from scratch, just to get it done.<p>So it stays the way it is, i.e. I can&#x27;t buy the &quot;possible fail places are easily grepable&quot; argument.')