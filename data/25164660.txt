Item(by='pluto9', descendants=9, kids=[25177016, 25164792, 25166828, 25164805, 25164885], score=9, time=1605904621, title='Ask HN: Most efficient way for the inexperienced to learn PCB design?', item_type='story', url=None, parent=None, text='I&#x27;m a software developer looking to get into hardware and embedded devices. I have some experience with digital electronics using things like STM32 discovery boards, but not designing my own circuits around microcontrollers.<p>As a developer I&#x27;m used to &quot;learning by doing&quot;, iterating rapidly to correct and learn from mistakes. I&#x27;m having a hard time applying this to hardware, though. Microcontroller-based designs often seem impractical to breadboard. I could design a PCB, send it off to have a few samples made and assemble it myself, but that&#x27;s a lot of time and effort (shipping and assembly) for a single iteration that no doubt contains numerous mistakes due to my lack of experience. It&#x27;s also difficult to tinker and correct mistakes with a PCB, so I feel like I&#x27;d have to make a semi-educated guess about what I did wrong and send off a new design for fabrication that&#x27;s likely to also be wrong.<p>I get the impression that experienced PCB designers can confidently whip up a prototype design and send it straight off to a fab shop, confident that it&#x27;ll mostly work and maybe require just a few tweaks. Am I wrong about this? Do professionals do a lot of breadboarding? Do they use simulation tools that can validate a design with a high degree of confidence?<p>What&#x27;s the most efficient way for someone like me to get started developing custom PCBs? Many thanks.')