Item(by='ryan29', descendants=None, kids=None, score=None, time=1601761423, title=None, item_type='comment', url=None, parent=24673917, text='The description of that dependency used by the BBC makes me wonder why trust is somehow based on popularity.  What if the BBC got duped into using a dependency from a bad actor?  Is that package trustworthy now?<p>I wonder if the package repos could come up with some type of standardized, domain verified organization namespaces.  I was able to register a decent .com a couple years ago and immediately ran around registering the matching namespace everywhere.  That feels a bit dumb when I have a globally unique identifier (the domain) sitting right there.<p>Why can&#x27;t I have `example.com` as my organization on NPM?  I realize there would be a little complexity in domains changing ownership or being abandoned, but I feel like that&#x27;s already an issue with first come, first served namespaces.  It&#x27;s just glossed over with the assumption no one will ever give away their account &#x2F; namespace which isn&#x27;t true.  Is there a way to tell if an organization&#x27;s owner has changed in NPM?<p>A domain verified namespace could be on equal footing pretty quickly IMO.  If it&#x27;s limited to organizations, which makes sense to me, have a requirement for the domain owner to declare the official owner of the namespace via DNS or a text file under `&#x2F;.well-known&#x2F;`.  Ex:<p>npmjs._dvnamespace.example.com  TXT  ryan29<p>Now `ryan29` can claim or take ownership of the `example.com` organization.  Every time an artifact is published, that record could be checked to ensure `ryan29` still owns the organization.  If it doesn&#x27;t match, refuse to publish the artifact.<p>In effect, it&#x27;s saying &quot;example.com is delegating ultimate trust for this namespace to the user ryan29&quot;.  If the domain expires, no one can publish to that namespace.  If someone new registers the domain and claims the namespace by delegating trust to a new owner, that works as a good indicator that everyone pulling artifacts from the namespace should be notified there was a change in ownership.<p>It seems like a waste to me when I&#x27;m required to register a new identity for every package manager when I already have a globally unique, extremely valuable (to me), highly brandable identity that costs $8 &#x2F; year to maintain.<p>Edit:<p>To add one more thought, I&#x27;ve always been of the opinion that ultimate trust needs to resolve to an individual, not an organization.  That probably needs to be done via certificates or key signing and should be done by a local organization.<p>If I could dictate a system for that, I&#x27;d use local businesses to verify ID and sign keys.  For example, I&#x27;m from Canada and would love to go into Memory Express with my ID and have them sign my GPG key.<p>I don&#x27;t think you can get a real WoT like what I think was originally the intent for GPG.  There are just too many bad actors these days.  I think verifying identity and tying stuff back to a real person is the best you&#x27;ll get.<p>An no, I don&#x27;t want the current code signing style verification.  It sucks and the incumbents are nothing more than a bunch of rent seeking value extractors.')