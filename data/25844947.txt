Item(by='qayxc', descendants=None, kids=None, score=None, time=1611140574, title=None, item_type='comment', url=None, parent=25844602, text='Hehe - cracks me up every time.<p>This is a left-over from mathematics where indices are distinct from the abelian group of integers.<p>So the index &quot;1&quot; as used to refer to vector element for example, is different from the number &quot;1&quot; on the number line. That is, one is an element of an index set comprised of ordinal numbers, while the other is an element of the integers.<p>The confusing part is, that both use the same symbol when in actuality they represent different concepts. The integer &quot;1&quot; is just a number like âˆš2 or -7. The ordinal &quot;1&quot;, however, is the representation of the concept &quot;first&quot;.<p>The ordinal &quot;0&quot; would, if used as an index, always yield the empty set as a result (see von Neumann ordinals), which wouldn&#x27;t be particularly useful in a programming language.<p>The mapping that selects elements given an index is arbitrary and can be defined as necessary. This allows for constructs like &quot;x[-1]&quot; mapping to the last element of an array. Here, &quot;1&quot; still means the &quot;first&quot; element, but the sign indicates the negative direction, i.e. start from last element.<p>In short: there&#x27;s an argument to be made for having two distinct versions. One (1-based indexing) is consistent with mathematics, while the other (0-based indexing) is consistent with low-level low-level data representation and makes no distinction between ordinals and integers.')