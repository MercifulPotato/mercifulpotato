Item(by='lalaithion', descendants=None, kids=[24676368, 24675144, 24674836, 24675661, 24676050], score=None, time=1601760848, title=None, item_type='comment', url=None, parent=24663770, text='Anyone care to explain what<p><pre><code>    template &lt;size_t i, typename... Ts, typename CurTy&gt;\n    void recurseFillChildren(CurTy &amp;E)\n    {\n      using PackTy = std::variant&lt;Ts...&gt;;\n      using TyL = std::variant_alternative_t&lt;i - 1, PackTy&gt;;\n      static_assert(std::is_same_v&lt;CurTy, TyL&gt;);\n      using TyR = std::variant_alternative_t&lt;i, PackTy&gt;;\n\n      for (i32 j = 0; j &lt; E.NChildren; ++j)\n      {\n        E.Children.push_back(miniParser&lt;TyR&gt;());\n        if constexpr (i + 1 &lt; sizeof...(Ts))\n          recurseFillChildren&lt;i + 1, Ts...&gt;(E.Children.back());\n      }\n    };\n</code></pre>\ndoes, and why it can&#x27;t be translated into Rust?')