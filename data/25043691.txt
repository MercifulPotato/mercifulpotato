Item(by='RomeoDelta', descendants=None, kids=None, score=None, time=1604994954, title=None, item_type='comment', url=None, parent=25042917, text='&gt; the branch may or may not be optimized out<p>That&#x27;s true, and while I agree that it is a concern, is there ever a way to gain both ergonomics and optimization? In other words, aren&#x27;t we always leaving it up to the compiler one way or another? You mention C++&#x27;s specialization, and I suppose that is a solution, but then you are (potentially, I can&#x27;t say for certain) sacrificing compile times. Although I will admit that this is probably a fair trade for certainty of optimization, and it would be nice if Rust at least offered some amount of specializing.<p>&gt; you really do have to babysit Rust to get efficient codegen. <a href="https:&#x2F;&#x2F;rust.godbolt.org&#x2F;z&#x2F;PjW5vo" rel="nofollow">https:&#x2F;&#x2F;rust.godbolt.org&#x2F;z&#x2F;PjW5vo</a><p>Oh wow, that is interesting. Yeah, that probably speaks to Rust still being a relatively new language, although I would have expected LLVM to do something about that... In any case, that&#x27;s certainly no zero-cost abstraction.<p>Thanks for the neat info!')