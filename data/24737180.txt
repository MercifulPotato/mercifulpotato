Item(by='thethirdone', descendants=None, kids=[24737316], score=None, time=1602314381, title=None, item_type='comment', url=None, parent=24736559, text='&gt; In C++, this can be done in zero-copy fashion with string_view. In C, every string has to be null-terminated. Thus, you need to either manipulate the original buffer, or copy it over. I elected the latter.<p>Is the null-termination requirement due to returning the value of cells as C strings? I couldn&#x27;t find an easy answer looking through the provided code. Otherwise if its just an internal detail, I would think a (pointer,length) string type would be ideal to allow you to use the buffer without modification or copying.<p>&gt; It is about 2x slower than csv2. This is expected because we need to null-terminate strings and copy them to a new buffer.<p>I think it is strange to settle for a 2x slowdown in order to not modify the original buffer. Substituting a null byte for the separator &#x2F; newline should be simpler than copying and null-terminating. So is keeping the original buffer free from modifications important? In most cases preserving the original buffer seems unimportant.')