Item(by='rektide', descendants=None, kids=[25002399], score=None, time=1604611527, title=None, item_type='comment', url=None, parent=25001789, text='This is such a great write-up. I hope we continue to evolve the modern ops set-up on the metal, make it easy for folks to onboard into something that scales both big &amp; high, and small &amp; low. This is, imo, enormously good tech to learn, and I feel like many people are wasting their time learning &quot;things that work for them&quot; or that &quot;aren&#x27;t as complex&quot; when those personal choices &amp; investments will, in all due chance, not pay off elsewhere, will not be things other people are as likely to know or use or enjoy. And k3s is so easy to use, works so well, that I think many folks kind of cheat themselves out of a better experience when they pick something a little more legacy, like Docker-compose.<p>Also noteably that this is just a first step, &amp; we can get better &amp; better at creating a wider system of services for the personal server from Kubernetes. For example I use the zalando postgres-operator, which lets me just ask for&#x2F;apply a kubernetes object, and presto-chango, i have a postgres database with as many replicated instances as I want. The author here similarly enjoys having Let&#x27;s Encrypt being ambient available. Managing more and more systems within Kubernetes will continue to scale the operational network effect of choosing tech like Kubernetes, tech that doesn&#x27;t just run containers, but is an overaching cloud. Kubernetes is Desired State Management, a repository for all of your (small) cloud&#x27;s state.<p>I&#x27;d consider maybe replacing some of the hand-made Wireguard work done here with Kilo[1], which can either run as a Container Network Interface (CNI) plugin or can wrap your existing Kubernetes networking CNI provider (by default K3s uses Flannel). This will automate the process nicely, let you manage things like peers in Kubernetes easily. When the author connected the RPi to their existing cluster, that&#x27;s exactly the sort of multi-cloud topology that Kilo is there to help you run &amp; manage, and from inside of Kubernetes itself! Kilo rocks.<p>Also worth noting that some of the latter half of this write-up is optional. Switching K3&#x27;s own ingress out for nginx is the authors opinion, for example. You may&#x2F;may not need a mail server. The write-up is pretty long; I think it&#x27;s worth highlighting that the core of what&#x27;s happening here, what others would need to do, is pretty short.<p>I do enjoy that the author started the steps by running gpg &amp; sops, to make keys to secure this all. This is pretty rigorous. It&#x27;s good to see! I don&#x27;t think all operators have to do this, but it showed that the author was taking it fairly seriously.<p>For reference, I run a 3 node K3s cluster at home, a separate single K3s instance, and am planning on trying to convert my laptops &amp; workstations over so that operationally I get the same kind of great observability &amp; metrics &amp; managability on them that I enjoy on the cluster. I&#x27;d like to cloud-nativize more of of my day to day computing experience, for consistency sake, &amp; because I think uplifting many of the local things on my machine into pieces of a larger Cloud body of state will give me more flexibility &amp; capabilities that I can enjoy playing with. I look forward to becoming less machine-centric, and more cross-machine cloud-centric.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;squat&#x2F;kilo" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;squat&#x2F;kilo</a>')