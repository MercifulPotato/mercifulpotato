Item(by='bigbizisverywyz', descendants=None, kids=None, score=None, time=1608644489, title=None, item_type='comment', url=None, parent=25502801, text='It&#x27;s also often very deeply nested and follows different paths based on variables that were set higher up in the code, also depending on deeply nested criteria being met. Bugs, weird states, bad error handling and resource leaks hide easily in such code.<p>In my experience refactoring out anything nested &gt;3 levels immediately makes the code more readable and easier to follow - I&#x27;m talking about c++ code that I recently worked on.<p>Decomposing to functions and passing as const or not the required variables to functions that then do some useful work makes it clear what&#x27;s mutated by the sub functions. Make the error handling policy clear and consistent.<p>Enforce early return and RAII vigorously to ensure that no resources (malloc,file handles,db connections, mutexes, ...) are leaked on error or an exception being thrown.<p>And suddenly you have a code base that&#x27;s performant, reliable and comprehensible where people feel confident making changes.')