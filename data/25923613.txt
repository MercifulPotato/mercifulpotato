Item(by='evanelias', descendants=None, kids=None, score=None, time=1611715177, title=None, item_type='comment', url=None, parent=25922170, text='&gt; no JOINs<p>Sharded environments still have some JOINs. Typically all data for a single user&#x2F;customer&#x2F;whatever should be placed on a single shard, and it&#x27;s still very useful to join across tables for a single user.<p>&gt; If you constrained the features on the non-sharded databases, you&#x27;d achieve the same net result.<p>No, that&#x27;s not the main reason for operational benefits. Rather, it&#x27;s simply because the shards all have a uniform schema, uniform query workload, and relatively small data size (as compared to a large monolithic DB). You can perform operational maintenance at better granularity -- i.e. on a single shard rather than the entire logical data set. And if a complex operation is fine on one shard, it&#x27;s very likely fine on the rest, due to the uniformity.<p>For example, performing a DBMS major version upgrade on a large monolithic DB is a nightmare. It&#x27;s an all-or-nothing affair. If you encounter some unforeseen problem with the new DB version only in prod, you can expect some significant application-wide downtime. Meanwhile for a sharded environment it&#x27;s both easier and safer from an operational perspective, assuming your team is comfortable automating the process once it has been proven safe. You can upgrade one shard and confirm no problems after a week in prod before proceeding to the rest of the fleet. If unforeseen problems do occur, worst-case it only impacts a tiny portion of users.<p>&gt; it also restricts your ability to perform other operations (more complicated queries or reports are ~impossible). It is not without its tradeoffs.<p>Yes, this is why I said above &quot;There are definitely major downsides to sharding, but they tend to be more on the application side in my experience.&quot; OP claimed the downsides were operational (e.g. more complex failures or larger downtime), which I do not agree with.')