Item(by='jnxx', descendants=None, kids=None, score=None, time=1602934386, title=None, item_type='comment', url=None, parent=24806666, text='&gt; Of course you can do a data table representation in almost any language, but once you benchmark the implementations, the languages that gives you full control of memory and are good at moving bytes are the ones that lead in performance.<p>The thing is, once you need even more performance, you might need parallel evaluation. And in C++, there are plenty of opportunities to shoot yourself with which even very experienced programmers have sometimes extreme difficulty doing it correctly:<p><a href="https:&#x2F;&#x2F;www.cs.umd.edu&#x2F;~pugh&#x2F;java&#x2F;memoryModel&#x2F;DoubleCheckedLocking.html" rel="nofollow">https:&#x2F;&#x2F;www.cs.umd.edu&#x2F;~pugh&#x2F;java&#x2F;memoryModel&#x2F;DoubleCheckedL...</a><p><a href="https:&#x2F;&#x2F;preshing.com&#x2F;20130930&#x2F;double-checked-locking-is-fixed-in-cpp11&#x2F;" rel="nofollow">https:&#x2F;&#x2F;preshing.com&#x2F;20130930&#x2F;double-checked-locking-is-fixe...</a><p>And this is the area which Rust, <i>while being as performant as C++</i>, is heavily improving on.')