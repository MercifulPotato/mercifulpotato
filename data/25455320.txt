Item(by='timhwang21', descendants=None, kids=None, score=None, time=1608211391, title=None, item_type='comment', url=None, parent=25454409, text='I&#x27;ve more or less driven frontend development with React at several companies over the last 4 years. While some of the complaints are exaggerated I don&#x27;t think the overarching premise should be dismissed as &quot;a meme.&quot;<p>&gt; No idea what this promise chaining thing is that you&#x27;re talking about.<p>If you have any asynchronous things going on in `useEffect`, you&#x27;ll have to do something similar to that `await(0)` song and dance in tests. This specifically affects tests if you do things like update the UI by toggling loading spinners on await.<p>&gt; Redux<p>s&#x2F;Redux&#x2F;higher order components. One of the motivations for hooks was that as a mechanism for logic composition, HOCs just felt awful to use. (So did render props, which everyone suddenly used for everything in a brief moment of collective insanity.)<p>&gt; Only a superficial understanding of React<p>I think there&#x27;s something in this. The fact is that good or bad, 1) hooks aren&#x27;t intuitive, 2) hooks have basically doubled React&#x27;s API surface area. Previously, React was so simple that a backend engineer could pick it up and get productive with it in half a week. That&#x27;s much less the case these days. I&#x27;ve been onboarding devs to React for years, and these days there&#x27;s a lot more &quot;yeah, that&#x27;s magic, you don&#x27;t need to know how that works for now.&quot;')