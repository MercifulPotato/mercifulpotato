Item(by='jcrawfordor', descendants=None, kids=[24876927], score=None, time=1603509293, title=None, item_type='comment', url=None, parent=24876197, text='I think a lot of semi-delusion happens around whether or not cryptographic hash functions are used for integrity and what kind of integrity.<p>I would argue against this two ways: First, if the only concern was bit-error detection, forensic tools would use a simple checksum. CRC, for example, is far faster to compute than any of these cryptographic functions. Second, one of the functions of evidential custody is to provide some defense against malicious tampering with evidence, even if unlikely. And for this purpose MD5 is clearly an inferior choice to a SHA2 function.<p>The real reason that forensics tools stick to MD5, I would contend, is a combination of the state of the art in filesystem forensics tools being surprisingly bad and bureaucratic lockin related to documentation and interoperability (the chain of custody form asks for MD5, after all, not SHA512).<p>This kind of factors into one of my hills to die on, which is that careless or cargo-cult selection of hash functions causes problems. When you select a hash or integrity function for files, you need to make a clear decision about whether your goal is to prevent collision or simply to protect bit errors. You should then choose a function that is state-of-the-art for one of those two categories. The whole line of reasoning behind &quot;MD5 is good enough because we&#x27;re not really using it for security&quot; is just asking for trouble. When you split the middle you either have a bad integrity check, a bad security control, or more likely both (MD5).')