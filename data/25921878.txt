Item(by='ddevault', descendants=None, kids=[25922081], score=None, time=1611700740, title=None, item_type='comment', url=None, parent=25921774, text='&gt;I think you&#x27;ll find in disagreeing with the comment on logic errors you just said the same thing the comment did about logic errors.<p>I think you&#x27;ll find that my comment explicitly acknowledges this and expands on it with another example. Are we done telling each other to read the things we&#x27;re writing?<p>&gt;Firefox not only set out to make Rust for this purpose but it&#x27;s not had an explosion in vulnerabilities with the modules it has replaced.<p>You&#x27;re setting the bar pretty high with an &quot;explosion&quot; of vulnerabilities here. Rust programs have vulnerabilities, including rewrites. They also have other kinds of bugs, often ones which were not present in the code that they&#x27;re replacing. You need only browse your nearest convenient RiiR bug tracker to find evidence of this.<p>Let me restate my thesis in mathematical terms. If we presume that 1 in 100 lines of production code has a bug in it, regardless of language (generous, I know), and that 1 in 10 bugs in C programs are memory corruption related, then saving 10% of those bugs by rewriting it in Rust would take a 10,000 line codebase from 100 bugs to 90 bugs. A 1,000 line codebase, still written in C and without the advantage of memory safety, would have only 10.<p>In today&#x27;s example, sudo is a caricature of runaway complexity. Rust is often touted as a panacea, but C has very little to do with why sudo is insecure. Sudo is comically overengineered and that level of overengineering has no place in a security context. This is the larger issue that needs to be addressed, not Rust.')