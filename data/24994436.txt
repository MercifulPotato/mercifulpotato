Item(by='qz2', descendants=None, kids=None, score=None, time=1604535107, title=None, item_type='comment', url=None, parent=24994094, text='Nope. If only. There are four considerations to look at which are rarely if ever mentioned between the mountains of well organised hype:<p>The first is application complexity. A lot of real workloads are quite complex but do not need to scale out a lot. The cloud and all the hype is organised around simple workloads that need to scale out easily which is an easy win. So for example Netflix or a SaaS application with a few tens of endpoints and a React front end or something. The wide sprawling real businesses are a terrible fit and tend to get rather expensive rather quickly when you start putting their workloads into the cloud. There is marginal aggregate cost benefit over actually buying hardware ($4m a year SQL server clusters are a reality in the cloud), the real benefit being only agility.<p>The second is simply &quot;hooking up components&quot; sounds really easy. But it&#x27;s not. I think perhaps 50% of my time is working out why X won&#x27;t talk to Y or why Z is broken and finding some opaque abstraction which doesn&#x27;t allow me to get to the bottom of the problem. It&#x27;s very very easy to turn your deployment into a complete tangle of chaos and circular dependencies which are very hard to rationalise and automate even with state of the art automation tools (which I will say tend to melt in your hands). This is existing layering on top of the same concerns you had before rather than a different one.<p>Thirdly we have to work out the difference between mature products and hype. Nearly all solutions are described in little blog snippets that make things look really easy for a specific and narrow use case but realistically things are really fucking complicated and in some cases absolutely awfully described in documentation. In a lot of cases, including AWS, it&#x27;s actually hard to find someone at the cloud vendor who knows how something works when you break it. And sometimes there are solutions which are just absolutely dire. Again pointing the finger here at Amazon&#x27;s managed ElasticSearch.<p>Fourthly, you end up being perpetual bean counter afraid of the rube goldberg machine waking in the middle of the night due to some event you didn&#x27;t anticipate and drinking the content of your credit card in a few minutes. Some of the cost management and spot instance management software automates this rather nicely into a whole cluster of new failure modes as well just as if the complexity wasn&#x27;t enough already. A trite version of this is &quot;saving money costs money and sometimes the benefits are less than the costs&quot;<p>So what you end up doing is trading your original problems for a set of new and shiny ones which are possibly even more complicated.<p>But at least you only have one vendor to shout at, which is a net win if you&#x27;ve ever tried to get HPE and Cisco to work out what fucked up mess is going on between their two lumps of iron.<p>I digress but be careful with assumptions about it being magical unicorns. They poop and you have to shovel it.')