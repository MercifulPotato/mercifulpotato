Item(by='SergeyBykov', descendants=None, kids=None, score=None, time=1601939495, title=None, item_type='comment', url=None, parent=24692849, text='After more than a decade of working on Orleans and only three weeks on Temporal it&#x27;s foolish of me to talk about what I &quot;like better&quot; :-). I&#x27;m working on a couple of conference talks to compare the two approaches.\nIn short, Orleans is biased towards quick low latency operations. Longer running workflow style operations are totally doable, but require extra application logic and thinking.\nTemporal&#x27;s main abstraction is a workflow. So, it&#x27;s biased towards reliable execution (with retries if needed) of business processes that may take seconds or days&#x2F;months.\nOrleans executes application code within the runtime process. Temporal orchestrates execution of external application workers (processes) I started referring to it as Inversion of Execution.\nOrleans is .NET. Temporal currently provides Go and Java SDKs.\nThese are just top-level differences that come mind. There are many others. But there are also major similarities.')