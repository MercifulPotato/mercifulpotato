Item(by='rvense', descendants=None, kids=[25143857], score=None, time=1605739501, title=None, item_type='comment', url=None, parent=25143066, text='How is it ad hoc? You&#x27;re creating a class .button, but you&#x27;re using the Tailwind-specified design system. This is how the framework is meant to be used!<p>Atomic&#x2F;utility-first CSS doesn&#x27;t mean that you shouldn&#x27;t make classes. It just means that you should make them where they make sense. Don&#x27;t make a new class just to add a margin to something,or whatever. If the margin is literally all this element needs, use the utility class directly. If it&#x27;s the only place you&#x27;ll use this combination of classes and naming the combination doesn&#x27;t add anything, you might as well just keep it inline.<p>But if you find yourself repeating a bunch of utility classes, make a class with a semantic name once you start seeing the pattern. In some cases, like buttons, you might see that pattern before you&#x27;ve even started. That&#x27;s fine. You should definitely have a button class (or three).<p>What you (probably) shouldn&#x27;t have a is .info-page__navigation__aside__second_button that just includes the button class and adds a margin, or whatever... like we did at my old job. Urgh. I refer to this as &quot;might as well be inline CSS&quot; - making extremely specific classes that are only used once. If your CSS classes aren&#x27;t reusable, all you gain from not having it inline is the joy of maintaining two text files, and manually look up the cross references. Tailwind solves this perfect, IME.')