Item(by='tetha', descendants=None, kids=[24662818], score=None, time=1601646819, title=None, item_type='comment', url=None, parent=24661810, text='You&#x27;ll need to be careful what your N is and what you&#x27;re counting.<p>But lets assume the input is an array of n characters, n being an arbitrarily large but fixed positive number during a single invocation. And we&#x27;re estimating the number of char compares.<p>Then, each invocation of isVowel(c) will do 1 - 5 compares. 1 in the case that c is the first element of the array, 5 if c is the last element or no element. As a worst-case estimation, isVowel(c) will do 5 compares at worst.<p>As such, if isVowel(c) is called for all elements of A, we will see between n compares (best case for all invocations) and 5*n compares (worst case for all compares).<p>As such, your algorithm has a worst-case runtime of O(5n) for all arrays A, which is a subset of O(n).<p>In practice and outside of academia, that&#x27;s pretty much all you do:<p>- Identify your input set, and estimate its size<p>- Count how many loops are nested in the algorithm, call that L (1 in this case)<p>- Your algorithm should be O(n^L).<p>Once it gets into amortization and such... it becomes much harder.')