Item(by='jose_zap', descendants=None, kids=None, score=None, time=1609359319, title=None, item_type='comment', url=None, parent=25585009, text='Some real world examples with links:<p>- A safe streaming library where effects are guaranteed to only be performed once: <a href="https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2018-06-21-linear-streams&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2018-06-21-linear-streams&#x2F;</a><p>- Efficient zero-copy network communication: <a href="https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2017-08-24-linear-types-packed-data&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2017-08-24-linear-types-packed-dat...</a><p>- Safe manual memory management and prompt resource release: <a href="https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2020-02-06-safe-inline-java&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2020-02-06-safe-inline-java&#x2F;</a><p>- Explicit API design to guide developers on what function to call next when implementing a protocol like TCP: <a href="https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2017-08-03-linear-typestates&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2017-08-03-linear-typestates&#x2F;</a><p>- Add correctness proofs to already existing algorithm implementations like merge sort: <a href="https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2018-03-08-linear-sort&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2018-03-08-linear-sort&#x2F;</a>')