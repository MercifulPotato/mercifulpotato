Item(by='gregmac', descendants=None, kids=[25614038, 25617912, 25618842, 25617542, 25617076], score=None, time=1609604369, title=None, item_type='comment', url=None, parent=25612464, text='I think the key is describing the user-facing effects and impact. This means knowing your users (are they developers, IT or highly technical? Do they automatically or manually update quickly, or do they take time to evaluate before rolling out updates?). It&#x27;s a way to convey continuing value to users and convince them it&#x27;s worthwhile to keep paying, and get motivated to get the update.<p>I&#x27;d try to change what you wrote to something like:<p>&quot;Fixed out-of-memory errors on some 32-bit systems&quot;<p>&quot;Improved startup time for configurations with lots of items&quot;<p>This makes it easy to gauge if this update is important to get installed ASAP, such as fixing something they&#x27;ve experienced or are likely to experience.<p>Grouping &quot;several UI fixes&quot; or &quot;performance improvements&quot; is usually fine, but I tend to call out something like &quot;fixed UI bug where a network error could result in changes not being saved with no warning&quot; or an issue that a sizable chunk of users had reported.<p>Doing this well takes time, though, as you have to synthesize the internal ticket summaries, PRs and&#x2F;or commit messages and reword almost everything. This is understandable for open source or free&#x2F;indie apps, but for subscription&#x2F;&quot;enterprise&quot; software it&#x27;s definitely one of the differences between &quot;great&quot; and merely acceptable (or worse).')