Item(by='fluffything', descendants=None, kids=None, score=None, time=1604059541, title=None, item_type='comment', url=None, parent=24941159, text='&gt; But why should one choose Rust when there&#x27;re plenty of alternatives with much larger and much more stable ecosystems.<p>In my experience, and this is just a data point: because it is much simpler to write correct Rust code and to refactor large Rust code bases correctly than doing the same for Javascript, Ruby, Python, C++, C, Java, etc.<p>That Rust has great perf and uses little resources is just a bonus, but not something that most apps will care much about.<p>The downsides you mention about the ecosystem, libraries, frameworks, are real.<p>I disagree with your claim that there is no &quot;talent pool&quot; for Rust. The &quot;talent pool&quot; for javascript or C++ is _only_ &quot;all javascript experts&quot; or &quot;all C++ experts&quot; because if you are not very good at Javascript or C++, you can&#x27;t really be trusted. A Javascript programmer can start being productive in Rust without issues quickly, but the same wouldn&#x27;t be true if they had to program in C++ instead.<p>The &quot;talent pool&quot; for Rust is &quot;all programmers with domain knowledge&quot;. If they are not experts in Rust, that doesn&#x27;t matter. Smart people you want to hire all pick up Rust very quickly, and the amount of dangerous mistakes anyone can make by not being a Rust expert is very small.<p>Offer&#x2F;demand wise, the demand for Rust jobs is much higher than the Rust jobs that are currently available. If you post a Rust job on reddit you&#x27;ll get 100 CVs in a day...<p>---<p>IMO, your main point still holds: right now Rust web frameworks are not as feature full as Django, Rails, etc. and if Rust frameworks are missing features you need, picking it up for a professional project probably doesn&#x27;t make sense. Unless... you are willing to implement those features yourself...')