Item(by='jcranmer', descendants=None, kids=None, score=None, time=1603840146, title=None, item_type='comment', url=None, parent=24912343, text='So, in my job, I&#x27;ve had a few, rare reasons to actually push into developing new algorithms for problems nobody has had to solve before. Literally nothing I&#x27;ve had to do for leetcode or whiteboarding has been useful there.<p>The more common instance I&#x27;ve had to do is plug-and-play existing algorithmic design on existing data structures that are well-represented in libraries. Need a hashtable or an auto-growing array? That&#x27;s in virtually every standard library. Balanced search trees are also pretty common, although (in my experience) actually quite rare in practice. Graphs are usually not in standard libraries, but graph libraries are pretty standard in languages: there&#x27;s petgraph in Rust, Boost has graphs in C++, and Python has networkx. Just pop those libraries in, and you don&#x27;t need to bother implementing anything basic like traversals.<p>The only things exotic enough that I&#x27;ve had to personally implement them myself are Johnson&#x27;s algorithm for elementary circuits and the union-find datastructure. Both times, I&#x27;ve had the algorithm in pseudocode right in front of me when writing the code, so I&#x27;ve never had to actually memorize how these things work.')