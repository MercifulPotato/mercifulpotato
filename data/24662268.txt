Item(by='fubfubdjng', descendants=None, kids=None, score=None, time=1601644780, title=None, item_type='comment', url=None, parent=24661202, text='We&#x27;re using the term compression in its usual CS meaning. As you say, it&#x27;s well known that a compression algorithm can&#x27;t compress every input.<p><a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lossless_compression#Limitations" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lossless_compression#Limitatio...</a><p>For a program to be credibly called a compression algorithm, it just has to work well in compressing a certain class of expected inputs. The issue of whether it&#x27;s bijective or not doesn&#x27;t really have anything to do with this.<p>To try to explain it one last time: a bijective decompressor makes no assumptions about file format or well-formedness of the compressed data. It will happily &quot;decompress&quot; <i>any</i> file. That&#x27;s what the term means. The name might not be self-explanatory but it makes good sense, just like &quot;homomorphic encryption&quot;.<p>As a mapping from files to files, a bijective compressor is surjective (as well as being injective like any other lossless codec). The consequence of this is that any file is a possible output of the compressor. And so on.<p>...and I&#x27;m done here.')