Item(by='simias', descendants=None, kids=None, score=None, time=1605626263, title=None, item_type='comment', url=None, parent=25124011, text='I don&#x27;t understand your point, content signature verification would have the same consequences that HTTPS for non-repudiation, no?<p>Also it&#x27;s really different from DKIM: the problem with DKIM is that since the signature is part of the email itself, so unless the receiver bothers to strip it (why would they?) then it&#x27;s stored forever in the metadata, even though arguably its use as an anti-spam feature stops being relevant once it&#x27;s been delivered to the MUA. So basically every time you send an email through gmail you effectively also send a signature saying &quot;I, Google, vouch that h4x0r@gmail.com did send this email&quot; and the receiving end will keep this signature for as long as they keep the email.<p>HTTPS session keys however are not typically saved unless somebody goes out of their way to do it. As such it&#x27;s a lot less likely to be used for blackmail in hindsight. In general people use archive.org to prove that some content used to exist in this scenario, not old HTTPS session dumps.<p>And like for DKIM the solution is fairly trivial if it&#x27;s really an issue: every time you rotate your keys (which should be fairly frequent if you use something like letsencrypt) be sure to make the expired private keys available publicly to give you plausible deniability.<p>I have yet to hear a good argument against HTTPS everywhere honestly, it generally boils down to &quot;but I don&#x27;t <i>want</i> to do it&quot; with some weak post-hoc justification for why it&#x27;s bad.')