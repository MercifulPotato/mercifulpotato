Item(by='socialdemocrat', descendants=None, kids=None, score=None, time=1609151381, title=None, item_type='comment', url=None, parent=25557444, text='&gt;  The point is that if you want a general purpose performant cpu (like ARM&#x2F;x86) targeting a wide swath of applications, you will end up with these optional extensions as default.<p>Yes, but the number of instructions is still minuscule compared to ARM and x86. It am sitting with the reference sheet here in my hand. It is just two pages. Very quick to read over.<p>&gt; And then it is as bloated as others.<p>Eh... nope. A huge number of those instructions exist due to cruft building up over years, not due to an actual need. A major source the huge number of instructions is tons of SIMD instructions which have superseded each other. RISC-V designers have specifically sought to avoid this preferring a Vector extension instead which adds a lot fewer instructions as it is more flexible.<p>People keep saying that is complex, but several companies have already made implementations of this. Esperanto Technologies is making SoCs with over 1000 RISC-V cores with vector extensions. So it cannot be that complex if they can fit that many cores.<p>And the compiler technology is better developed for vector instructions than for SIMD.<p>&gt; And it is wishful thinking that it will happen otherwise.<p>It is not wishful thinking to assume a couple of lessons have been learned decades later in ISA design. You can just read up on the details about how the RISC-V ISA has been designed to understand how they are able to keep things simple while still retaining flexibility.<p>&gt; Whether ARM&#x2F;x86 thought about extension from the ground up doesn&#x27;t matter if you are targeting the same application space as them.<p>The flaw in your assumption is that you seem to think all those instructions are actually used and need to be able to handle modern tasks. Tell me how much software today needs special instructions for Binary encoded decimal numbers? x86 is full of that kind of legacy bloating the ISA, with no value to modern software.<p>&gt; I have not seen anything done to even acknowledge this issue, let alone do something about it, for the simple reason that this lies far into the future and has no impact on the current scenario.<p>I think you should just read what they have said about all these things. They have thought a lot more about this than you seem to have. They been doing ISA design for many decades and seen problem develop over time. RISC-V is a response to all those problems of the past. To not build yet another bloated ISA with redundant legacy instructions.')