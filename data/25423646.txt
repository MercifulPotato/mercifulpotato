Item(by='unwind', descendants=None, kids=None, score=None, time=1607981604, title=None, item_type='comment', url=None, parent=25422968, text='I came to say this too, it seemed like an obvious evolution. I find the &quot;randomness&quot; of the defer-statement a bit scary, like there is too much freedom. There&#x27;s no guarantee that you&#x27;re deferring the proper code to free the resource, which somehow should be the default.<p>Not at all sure of the proper syntax, but at least tying it together with something like<p><pre><code>    void * const x = DEFER(malloc(...), free);\n</code></pre>\nwould make sense. In a more high-level language with interfaces, there should be a way to tie together the creation and destruction into a combined type, and just do<p><pre><code>    obj = acquire SomeType(...);\n</code></pre>\nAnd then &#x27;acquire&#x27; should take care that the type to the right implements the interface, and automatically add a deferred call to the proper freeing method. Hm. I guess I just invented some kind of garbage collection, bummer.')