Item(by='slifin', descendants=None, kids=[25141987, 25137602], score=None, time=1605698830, title=None, item_type='comment', url=None, parent=25133041, text='Who knows what bowl.stir() actually does to the internal state of bowl, and what methods should have been run up until this point to get into that state, is the bowl ready to stir? What methods should have already run for that? So much of the article&#x27;s code is crutched on good naming<p>I like to think of this in terms of the Charizard Pokemon card<p>For context in this example I have this card and I&#x27;m sensitive about damage to it<p>so in this OO example I put the card in a box and allow you to interact with it\nin a very limited way, you cannot use anything you&#x27;re used to to interact with it\nlike your own gloves or hands etc<p>Just my &quot;methods&quot; so I might give you a tiny hole to look at it, you could still damage it through the hole, so I have lots of logic to ensure you cannot poke it incorrectly hopefully the verbosity on both your and my side is&#x2F;was worth it and bug free and not missing cases, hopefully my hole was in the right place for your uses<p>Obviously I can&#x27;t give you too many holes in the box otherwise what&#x27;s the point in the box? I need the box to maintain my sanity<p>The other alternative is I just give you the card, and take the risk\nthat you might damage it, this is a disaster for my well being OR I duplicate the card perfectly and give you the duplicate in which case I don&#x27;t care what happens to the duplicate, MUCH easier in my opinion, so please<p>Stop creating hellish boxes with holes for other developers to peak through just choose a language with efficient immutability as the default or use pass by value semantics with mostly pure functions<p>Reserve your classes for things that are truly data structures in the general sense, not bs domain stuff like &quot;bowl&quot;, bowl is not a fundamental type of computer science like integer, bowl is just data and it should be treated as such <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=-6BsiVyC1kM" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=-6BsiVyC1kM</a> so it can have schema and such but don&#x27;t put it in some kind of anal worry box, otherwise your program may end up more about managing boxes and peak holes than it will be about pokemon cards')