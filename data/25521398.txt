Item(by='HexagonalKitten', descendants=None, kids=None, score=None, time=1608752986, title=None, item_type='comment', url=None, parent=25518222, text='&gt; One of the biggest learnings was how much speculation would dominate over anything non-financial<p>Yup. And still does. There was a huge sea change circa 2013(?) when everything became about currency and speculation. Every idea had to pivot to being its own coin, or including some useless utility token (a bit later) because that was 99%+ of the value to investors.<p>&gt; Is there any reason that Bitcoin doesn’t have Turing completeness, faster blocks, oracles, etc? Not really; but ...<p>It feels like the first implementation couldn&#x27;t have gotten it right if it aimed for too much more than Satoshi did. But technically, yes, BTC is a plausible base for this as much as anything else.<p>&gt; debate inside the smart contracts community about the halting problem and how it could be used to attack the network. This is probably practically solved with transaction costs alone, but I think it was a practical software engineering compromise do scripting without looping and backward jump instructions because they made the software much more complex and vulnerable to attack.<p>Unbounded loops are an issue, but functional constructs (foreach) have 99% of the power and little of the risk. Ideally we&#x27;d have Satoshi take three months now and make v2, which would be BTC in spirit but with the lessons of the last ten years.<p>&gt; To go further, the gas price itself doesn’t solve the problem of computational complexity because only the miner that wins the block actually gets the reward, while all others downstream are expected to verify it, but they have no incentive to do so, and frankly, today, most don’t.<p>This seems like where we need a mechanism that allows a script to be audit-executed, and if its outputs don&#x27;t match expectations a deposit can be claimed by the auditor and the script will be marked as unreliable. If the precondition of the code is that it returns the correct public key, make sure that key works. If it doesn&#x27;t you can claim the QA&#x2F;Security prize - which can be set at whatever amount the script author wants depending on their belief in their code.<p>&gt; Most of the early eth discussions I was involved with implied doing this in snarks or some other provable computation in the initial discussions, but that never made it into eth. So no; that problem was never solved, although we are getting closer.<p>Is there a specific blocker for this or just that the complexity is 1000x what is currently supported?')