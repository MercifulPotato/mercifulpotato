Item(by='sriku', descendants=None, kids=None, score=None, time=1601799482, title=None, item_type='comment', url=None, parent=24674490, text='I&#x27;m not a fan of rigid formats for human-entered metadata structures like config. I think it violates a kind of Postel&#x27;s law .. where there ought to be considerable flexibility for the human to specify the structure (and therefore in what the format reader accepts). If you want rigidity, just use an appropriate programming language or, say, s-expressions. The rigid formats ask for their own linters to be created and maintained.<p>In my indian music notation publication tool Patantara, I use a text preamble format that&#x27;s limited and far simpler for people to use than any of these &quot;data structure capable&quot; formats - including NestedText&#x2F;YAML&#x2F;JSON. Here is a quick description -<p>1. You specify key value pairs with lines of the form -<p><pre><code>    key with allowed spaces = any textual value\n</code></pre>\n2. The first &quot; = &quot; on a line separates the key from the value. The key is normalized to lower case and spaces in the key are normalized to single space, and the key is LR-trimmed. The textual value is mostly kept as is (except for LR-trimming), but can accumulate more content.<p>3. Lines which don&#x27;t have a &quot; = &quot; are just strings that get appended to the value of the immediately preceding key. So<p><pre><code>    key = value1\n          value2\n          value3\n</code></pre>\nwill result in the key &quot;key&quot; having the single string value &quot;value1\\nvalue2\\nvalue3&quot;.<p>4. If the same key is given multiple times, the values are concatenated with line breaks. So<p><pre><code>    key = value1\n    key = value2\n    key = value3\n</code></pre>\ngets you, for the key &quot;key&quot;, the value &quot;value1\\nvalue2\\nvalue3&quot;.<p>5. The reader doesn&#x27;t care about data types. However, the application can decide how to parse the string values. One convenience I use for lists of items is &quot;comma or whitespace separated values&quot;, where a list of values is given as &quot;value1, value2, value3&quot; or &quot;value1\\nvalue2\\nvalue3&quot; or &quot;value1 value2 value3&quot; or any combination including &quot;value1, value2,\\nvalue3 value4&quot;.<p>Nested structure is not possible with this format (unless you impose more structure on the value in the application), but it serves very well as a metadata format for text files in my application.<p>Ref: <a href="https:&#x2F;&#x2F;blog.patantara.com&#x2F;blog&#x2F;2017&#x2F;04&#x2F;16&#x2F;controlling-who-can-view&#x2F;edit-your-document&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.patantara.com&#x2F;blog&#x2F;2017&#x2F;04&#x2F;16&#x2F;controlling-who-c...</a>')