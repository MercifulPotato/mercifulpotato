Item(by='fransiscoli', descendants=None, kids=[25679710], score=None, time=1610062974, title=None, item_type='comment', url=None, parent=25679054, text='I think lifetimes are the part of Rust that people see as ugly. I recently wrote the following lines of code:<p><pre><code>  struct Parser&lt;&#x27;a, &#x27;b, T&gt; {\n      value: &amp;&#x27;a [T],\n      inner: InnerParser&lt;&#x27;a, &#x27;b&gt;\n  }\n\n  impl&lt;&#x27;a, &#x27;b, T&gt; for Parser&lt;&#x27;a, &#x27;b, T&gt; {\n      fn parse&lt;T: Into&lt;String&gt;&gt;(value: T) -&gt; &amp;&#x27;static str {\n          ...\n      }\n  }\n</code></pre>\nand the equivalent code in Scala:<p><pre><code>  class Parser[T] {\n    var value: List[A] = Nil\n    var inner: InnerParser = Nil\n\n    def parse(value: String): String = ...\n  }\n</code></pre>\nof course, those programs are not semantically equivalent, but you can clearly see that the Scala version is the more elegant of the two. I can&#x27;t think of any other way that you could syntactically express lifetimes, but I can see why people would see Rust as ugly.')