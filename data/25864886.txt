Item(by='DyslexicAtheist', descendants=None, kids=None, score=None, time=1611265915, title=None, item_type='comment', url=None, parent=25863195, text='for me the downside is mostly when I am forced as user to everything the &#x27;systemd --user&#x27; way. All I have are mpd, dbus, pulseaudio, mako which I can easily run from my sway&#x2F;config (the script that starts sway or xinitrc whatever) and I do not need systemd and journalctl and all the tooling that I&#x27;m then also buying into. This is IMO an annoyance where I think systemd is creeping in too much.<p>From a developer pov I&#x27;m optimistic. systemd seems to be positioning itself as a isolation technology. It gives me a simple and effective way to ship security controls that the user themselves would not be able to do with this granularity (well normally) and it&#x27;s part of the package &#x2F; installer (e.g. by default hardened because why bother the user?). And the process for me as dev is really simple too (see below).<p>It gives me additional options rather than just hope everyone will use firejail and apparmor (even on a debian sid apparmor userspace is too permissive or not properly maintained - firejail is better but rare).<p>some simple things that can be dumped into a systemd.service file (source <a href="https:&#x2F;&#x2F;www.redhat.com&#x2F;sysadmin&#x2F;mastering-systemd" rel="nofollow">https:&#x2F;&#x2F;www.redhat.com&#x2F;sysadmin&#x2F;mastering-systemd</a>) to ensure hardening isolation&#x2F;hardening is always shipped with the package.<p><pre><code>  RestrictNamespaces=true\n  RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6 AF_NETLINK\n  ProtectClock=true\n  NoNewPrivileges=true\n  DevicePolicy=closed\n  PrivateTmp=true\n  ProtectControlGroups=true\n  ProtectHome=true\n  ProtectKernelLogs=true\n  ProtectKernelModules=true\n  ProtectSystem=strict\n  RestrictSUIDSGID=true\n  SystemCallArchitectures=native\n  SystemCallFilter=sendmsg recvfrom sendto getpid prctl brk socket read stat openat rt_sigaction fstat bind close connect getsockname setpriority capset getpriority lseek mmap mprotect munmap access execve getuid capget arch_prctl gettid\n  RestrictRealtime=true\n  LockPersonality=true\n  MemoryDenyWriteExecute=true\n\n</code></pre>\nAs an elitist user, sure firejail is great - but I would not install firejail on my 72 yro aunt Debian laptop (because many reasons :))')