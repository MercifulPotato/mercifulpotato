Item(by='jackyfkc', descendants=0, kids=None, score=1, time=1609726512, title='A puzzled deadlock: it seems that the lock is hold on primary index first', item_type='story', url=None, parent=None, text='We got a puzzled deadlock on MySQL 5.7 (InnoDB, Isolation Level: RR). The result of `show engine innodb status` as below shown<p><pre><code>    *** (1) TRANSACTION: \n            UPDATE fruit_setting set\n            value = CASE\n                WHEN eid = &#x27;?&#x27; and key = &#x27;?&#x27; THEN &#x27;?&#x27;\n                WHEN eid = &#x27;?&#x27; and key = &#x27;?&#x27; THEN &#x27;?&#x27;\n                END\n               WHERE aid = &#x27;?&#x27; and eid in (&#x27;?&#x27;, &#x27;?&#x27;, &#x27;?&#x27;, &#x27;?&#x27;, &#x27;?&#x27;, &#x27;?&#x27;) and key = &#x27;?&#x27;\n                \n    *** (1) WAITING FOR THIS LOCK TO BE GRANTED:\n    RECORD LOCKS  index PRIMARY of table `jacky`.`fruit_setting` trx id  lock_mode X locks rec but not gap waiting\n    ...\n    \n    \n    *** (2) TRANSACTION:\n    TRANSACTION 1739954049, locked 1\n    LOCK WAIT 94 lock struct(s), heap size 1136, 184 row lock(s)\n            UPDATE fruit_setting set value = CASE\n                WHEN eid = &#x27;?&#x27; and key = &#x27;?&#x27; THEN &#x27;?&#x27;\n                END\n               WHERE aid = &#x27;?&#x27; and eid in (&#x27;?&#x27;, &#x27;?&#x27;, &#x27;?&#x27;, &#x27;?&#x27;, &#x27;?&#x27;, &#x27;?&#x27;) and key = &#x27;?&#x27;\n    *** (2) HOLDS THE LOCK(S):\n    RECORD LOCKS index PRIMARY of table `jacky`.`fruit_setting` trx id lock_mode X locks rec but not gap\n    Record lock, \n     ...\n    \n    *** (2) WAITING FOR THIS LOCK TO BE GRANTED:\n    RECORD LOCKS  index PRIMARY of table `jacky`.`fruit_setting` lock_mode X locks rec but not gap waiting\n    ...\n</code></pre>\nThe table<p><pre><code>    CREATE TABLE `fruit_setting` (\n      `id` bigint(20) NOT NULL AUTO_INCREMENT,\n      `aid` varchar(32) NOT NULL,\n      `eid` varchar(32) NOT NULL,\n      `key` varchar(32) NOT NULL,\n      `value` varchar(32) DEFAULT NULL,\n      PRIMARY KEY (`id`),\n      UNIQUE KEY `i_e_key` (`eid`, `key`),\n      KEY `i_a_eid` (`aid`, `eid`)\n    );\n</code></pre>\nNote that the <i></i>aid<i></i> in two sqls are the same and the `eid` could be overlap;<p><i></i>Question 1<i></i>: why the lock is not on index <i></i>i_e_key<i></i> or <i></i>i_a_eid<i></i>, but on primary index.<p><i></i>Question 2<i></i>: Does MySQL acquire lock on index record one by one based on the order of <i></i>eid<i></i> appeared in <i></i>in<i></i> clause?')