Item(by='derefr', descendants=None, kids=[25382421], score=None, time=1607657085, title=None, item_type='comment', url=None, parent=25381709, text='&gt; At that point why use YAML at all?<p>Ideological answer: For the same reason HTTP&#x2F;2.0’s binary protocol didn’t instantly obviate&#x2F;deprecate HTTP&#x2F;1.0’s text protocol. Text has advantages: text is debuggable, and prototypable. If the interface between two programs is a text based declarative language, you can audit that text, diff that text, edit that text to see how changes affect the result, mock one side or the other by producing or consuming that text, etc. “GitOps” style config management would never work if config was all opaque binary blobs. These are all reasons that major software projects standardize on YAML or other widely-supported textual data serialization formats for their config.<p>Pragmatic answer: because we’re talking about production configuration management, here, which is, 99% of the time, about writing configuring and managing the <i>third-party black-box components</i> in your stack, not <i>your own</i> components. Your own business layer usually can be configured conventionally, with minimal explicit config, for your use case, since you built it to work idiomatically for that use-case. It’s all the third-party stuff that has an impedance mismatch to your use-case assumptions, translating to needing tons of config to do what you need.<p>And, obviously, if you don’t control the other end, you don’t decide how the other end does its config. Usually, these days, it’s YAML (or TOML) — for the ideological reasons mentioned above.<p>Example: Kubernetes. Big consumer of complex YAML. Many people try to template that YAML. Much simpler and less error-prone to just write a program to generate said YAML. No reason to assume you’re writing in whatever language the k8s orchestrator is written in. (In fact, there are multiple orchestrators, written in different languages, and the shared YAML resource spec is the only formal interface they share.)')