Item(by='physicsguy', descendants=None, kids=None, score=None, time=1605083695, title=None, item_type='comment', url=None, parent=25056380, text='I think the reality is, plenty of scientists use Windows, and even among those who use Linux, many aren&#x27;t <i>that</i> comfortable with it.<p>The issue is, most scientists who do software development are not used to the paradigms commonly used in Windows software development. Anything that&#x27;s unfamiliar seems &#x27;wrong&#x27; to them - and I know when I started doing dev on Windows, I felt like that too.<p>Just a few examples<p>* When making a dynamic library on Windows, you need to explicitly export the symbols you want to be visible. You <i>can</i> do this with GCC, but it&#x27;s not the default.<p>* It&#x27;s common to generate a .lib (import library) and a .dll for a dynamic library on Windows vs just a single .so on Linux.<p>* Using an IDE and MSVC projects for development is common on Windows, even with CMake support improving rapidly<p>* Lots of scientific packages just assume that they&#x27;re running on Linux and have hard coded path names, and use tools in the setup scripts that aren&#x27;t necessarily available on Windows. So Cygwin + MinGW can plug the gap sometimes, but for e.g. if you want to build a Python extension that can work via pip on Windows, that&#x27;s not necessarily sufficient, because Python is usually built by MSVC and so a library you build via MinGW won&#x27;t work because it&#x27;s not ABI compatible.<p>None of these make Windows &#x27;worse&#x27; - it&#x27;s just different. And unless you know what the differences are, you do limit yourself to having a package that only works on one or the other. I used to think that knowing Linux was sufficient, but I&#x27;ve moved on to think that anyone calling themselves a scientific software developer should be able to (and be willing to) develop on both, even if that means pushing people to use WSL.<p>Also - I don&#x27;t think most packages can just be taken and put on Windows CI like the author suggests. Just as a start - if it uses Make, autoconf, etc. then you&#x27;re out of luck straight away and need to come up with something better.')