Item(by='dchest', descendants=None, kids=None, score=None, time=1608758534, title=None, item_type='comment', url=None, parent=25522096, text='It&#x27;s not <i>absolutely required</i> for end-to-end encrypted apps (that encrypt data with password or use it for authentication). The two benefits of SRP-like (aPAKE) protocols are:<p>- a password hash (verifier in SRP) is not transmitted during authentication. (But is transmitted during registration and stored on the server). This isn&#x27;t really required if the secure channel is already established — e.g. TLS — you can as well just send the password hash via TLS, which the server will hash again and check against the stored hash. For registration you already need some kind of non-password based secure protocol to transfer the verifier anyway.<p>- mutual authentication (that is, client also learns if the server knows the password&#x2F;verifier). For this case, an app would already come with some kind of mechanism to ensure that the server it talks to is authentic (e.g. TLS with pinned certificates or some other public key protocol with hard-coded keys). So the benefit of verifying that this authentic server is the one that stored your verifier is also limited.<p>To summarize, there&#x27;s not much use for SRP in a typical e2e app, since it already needs a secure connection between a client and the server, and SRP verifier is a client-side password hash.<p>SRP is useful if you need to establish a secure connection with a password and nothing else, but it requires first to store the verifier on the server somehow.')