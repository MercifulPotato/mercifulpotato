Item(by='dmitrygr', descendants=None, kids=[25510910, 25510942, 25510907], score=None, time=1608667815, title=None, item_type='comment', url=None, parent=25510566, text='<p><pre><code>  &gt; surely emulating 32-bit\n  &gt; instructions from 8-bit\n  &gt; doesn&#x27;t take a thousand\n  &gt; cycles on average.\n</code></pre>\nIt does if you do it in C, and also need to emulate the mmu and permission checks. Plus arm&#x27;s instructions do a lot. A free arbitrary 32-bit shift in every instruction is hard on an 8-bit device which can only shift 8 bits by one bit per instruction. You end up with a lot of loops, and loop control instrs kill perf there.<p>The fact that I had to <i>bit-bang</i> the memory interface also does not help as the avr device has no dram controller<p>I had, at some point, rewritten the core in avr assembly for a large-ish speedup, but i never got around to publishing it.<p>Currently i am working on a TTL-built 1-bit computer, unto which i want to port this emulator, so boot linux on a 1-bit computer :)')