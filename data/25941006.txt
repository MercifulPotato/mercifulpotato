Item(by='smcleod', descendants=None, kids=[25941305, 25941738], score=None, time=1611837012, title=None, item_type='comment', url=None, parent=25940245, text='I&#x27;ve been struggling on and off with this for the past few years since moving into consulting after 15~ years of permanent (platform&#x2F;ops&#x2F;automation) engineering roles.<p>Often the most difficult situations are not complex due to the use of some advanced technology or business need - but instead because of the sheer amount of components in play that you need to understand in order to add any value.<p>The ramp up time just to understand WHAT components make up a given system let alone HOW they work seems to have shot through the roof over the past 5 or so years.<p>With once monolithic systems being broken down into distributed microservices, service meshes being widely deployed, everything-is-an-API architecture and other good things - an unfortunate side effect (when combined with seemingly growing expectations on engineers to be &#x27;full stack&#x27;) is that cognitive load has shot through the roof.<p>While compared to 10 years ago - it does seem like most systems have better uptime - I&#x27;m not convinced they&#x27;re easier to support and aren&#x27;t over-engineered most of the time.<p><i>Edit: spelling, grammar (sorry it&#x27;s midnight and I&#x27;m falling asleep)</i>')