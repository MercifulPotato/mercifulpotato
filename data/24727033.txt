Item(by='quinndiggity', descendants=None, kids=None, score=None, time=1602220095, title=None, item_type='comment', url=None, parent=24726328, text='To clarify, I&#x27;m more looking for closure, as seeing this behaviour on HN first-hand (as opposed to the N times witnessing these sorts of issues raised by someone else) has made me question the ethicality behind how HN is operated. The escalation of frustration comes in response to experiencing it first hand.<p>I will try to restate my points, in as neutral of manner, so they aren&#x27;t misinterpreted as attacks. This is my thought process, and I&#x27;m providing it as genuine feedback.<p>This project in particular:<p>- attacked otherwise neutral competitors, misrepresenting them.<p>FTP is a protocol associated with a general air of insecurity and poor practice. Most technical people would immediately say not to use it, and that there are far better solutions which aren&#x27;t fundamentally insecure. Vault is not anything like that. That is a misrepresentation and additionally an attack on the usability of their competitor&#x27;s product, which is unmerited.<p>- does not observe the best practice of having security-oriented products be open source.<p>It is crucial for software in this category be open source, in order to have them widely vetted, and for vulnerabilities not to be incentivized to hold onto (and sold), vs reporting to the vendor. The team have reached their decision that they will NOT open source it <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24720669" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24720669</a> If I cannot build my own binaries (even if unreproduceable builds), I cannot trust the vendor. Additionally, I must trust them to operate and secure it as a public multi-user system better than one could in their own infrastructure under several layers separating it from the public. Humans are prone to mistakes, closed source software engineers make the same mistakes made in open source, only they have employees who&#x27;s primary task is shipping new features-not fixing a bug which no one may see until it comes out that it&#x27;s been actively exploited for years; let people improve the overall security, and encourage the only people looking for vulnerabilities to be those who would benefit from exploiting them personally, or by reselling them to the highest bidder.<p>- demonstrated that the are willing to say things which aren&#x27;t true, or that they just didn&#x27;t care to verify the details before stating them as fact.<p>The authors make the black&#x2F;white distinction between &quot;you use Dropbox if you aren&#x27;t paranoid&quot; and &quot;there are self-hosted options if you care about that, but they aren&#x27;t qualified because you can only use them this way&quot;, despite it not being the case. It&#x27;s a spectrum, and you can achieve the same results with either offering, only with one your only choice is to trust them and that they have things so tight that several malicious employees would be subverted.<p>- used their employees&#x27; previous employers to legitimize their product.<p>As someone who may be selecting security-oriented tools for a project, and as a someone who has experienced a lot of issues specifically with their engineering&#x2F;operations firsthand, Uber engineering as a point pushes me away from considering this tool. Uber has also been criticized many times for unethical actions; sure, engineers may often be simply heads-down and following a spec, but I would rather work with someone who didn&#x27;t just &quot;follow orders&quot;. As someone evaluating your offering, my specific feedback is that you will push people like myself away by leaning on that as part of your marketing&#x2F;branding, particularly when it involves secret management - a topic which is highly dependent on unbreakable morals.<p>---<p>I&#x27;ll stop there, but these are all legitimate concerns, which their prospective customers may consider. My contribution to the conversation is raising those concerns, rather just just discounting them and two years down the line this tool is everywhere and a real problem happens to a company or individual as a direct result of people being led to trust this tool&#x2F;team.<p>Some people aren&#x27;t going to politely state these things, most won&#x27;t at all and will just pass by; I think the team should be prepared to address these sorts of concerns, for a variety of reasons, including risk assumed by their own investors. If they make a mistake, it&#x27;s important that they own it, and not just brush things under the rug and ignore those concerned enough to raise such issues.')