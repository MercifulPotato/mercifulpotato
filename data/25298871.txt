Item(by='dnautics', descendants=None, kids=[25299216], score=None, time=1607055487, title=None, item_type='comment', url=None, parent=25298748, text='When I was a hiring manager at the previous company I was at, I gave an interview where I gave an exact description of what I wanted coded.  No algorithm tricks (you <i>could</i> solve it faster with a paradigm, but it wasn&#x27;t necessary) actually this is a problem I remember having to solve for homework in intro HS CS class 25 years ago.  I was checking to see if the candidate could<p>1. read documents.<p>2. ask questions.<p>3 identify corner cases.<p>4. identify why the problem was hard<p>5. actually try out their code instead of just thinking about it.<p>One candidate used a very troublesome technique to try and solve it, and proudly declared, &quot;I am sure this works&quot;.  I knew it didn&#x27;t - but it took me one hour to find the bug, and in order to find the bug I had to write a property test.  This is SUPER dangerous behavior IMO.  Code Reviews will not catch everything, so if you have a dishonest coder you can wind up in trouble.  He got hired for another team &quot;this is literally the best hash table I have ever seen&quot;.<p>Unfortunately all of the candidates were clearly folks who had practiced their leetcoder skills.  Nobody completed the problem correctly.  However, I was okay with partial answers that fulfilled some of the softer qualities I was looking for The other folks who were interviewing gave one of the candidates who bombed my part rave reviews.  I got steamrolled into hiring him onto my team, and sure enough he didn&#x27;t read documents, he didn&#x27;t try out his code.  In the month that I worked with him he did not push any code.  I left.')