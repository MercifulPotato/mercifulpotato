Item(by='IshKebab', descendants=None, kids=[25763178, 25763308], score=None, time=1610549623, title=None, item_type='comment', url=None, parent=25762256, text='Compared to ARM, nothing significant. They&#x27;re very similar load-store architectures.<p>Here&#x27;s a RISC-V quick reference: <a href="https:&#x2F;&#x2F;www.cl.cam.ac.uk&#x2F;teaching&#x2F;1617&#x2F;ECAD+Arch&#x2F;files&#x2F;docs&#x2F;RISCVGreenCardv8-20151013.pdf" rel="nofollow">https:&#x2F;&#x2F;www.cl.cam.ac.uk&#x2F;teaching&#x2F;1617&#x2F;ECAD+Arch&#x2F;files&#x2F;docs&#x2F;...</a><p>And ARM: <a href="http:&#x2F;&#x2F;users.ece.utexas.edu&#x2F;~valvano&#x2F;Volume1&#x2F;QuickReferenceCard.pdf" rel="nofollow">http:&#x2F;&#x2F;users.ece.utexas.edu&#x2F;~valvano&#x2F;Volume1&#x2F;QuickReferenceC...</a><p>The main difference is that RISC-V is a lot more modular, so it&#x27;s going to be difficult to distribute binaries for but more flexible if you&#x27;re doing something completely vertical. Also a lot of the modules have bundle relatively common&#x2F;easy instructions with niche&#x2F;difficult ones. E.g. multiply with divide.')