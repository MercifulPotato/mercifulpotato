Item(by='mmalone', descendants=None, kids=[25308364, 25313318], score=None, time=1607114551, title=None, item_type='comment', url=None, parent=25307076, text='Yea that&#x27;s reasonable, but there are pros and cons and it&#x27;s also definitely an opinion :).<p>I don&#x27;t see the problem with piping help text through a pager (that&#x27;s literally all `man` is doing). Alternatively, a tool can use a pager automatically (as `git help ...` does). So `man` isn&#x27;t required to have a pager. Whether you should use a pager by default is a different argument.<p>That said, I find pagers annoying because it&#x27;s hard to switch back and forth between typing a command and the docs. That&#x27;s way easier to do with scrollback. Although someone in this comment thread also mentioned the `PAGER` env var, and that you can set `PAGER=cat`, which is a good pro-tip. So, TIL.<p>Still, if you&#x27;re concerned with command-line ergonomics for a broad audience I think there are more people that either 1) know how to `| less` or 2) prefer or don&#x27;t care about a pager than people who are gonna automatically just know they can do `PAGER=cat man &lt;some-subcommand-of-my-cli-tool&gt;`.<p>Plus, there&#x27;s still the cross-platform argument.<p>Oh, and OP doesn&#x27;t mention this, but man pages also complicate install, uninstall, versioning, and having multiple versions of a tool installed simultaneously. Built-in help is obviously just works and is distributed with the standalone binary. To use man pages you have to place additional artifacts on the system and make sure they&#x27;re managed correctly (e.g., versioned). It&#x27;s additional complexity with basically zero benefit.<p>So yea. Seems like, as a rule, their guidance is reasonable. I don&#x27;t see a lot of benefit to using man pages other than &quot;because that&#x27;s how it&#x27;s always been done&quot;.')