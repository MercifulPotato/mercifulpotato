Item(by='tabtab', descendants=None, kids=None, score=None, time=1601926672, title=None, item_type='comment', url=None, parent=24686863, text='I&#x27;ve always liked the idea of &quot;table oriented programming&quot; where more detailed schema info is used to do most of the CRUD and UI work. In my experiments, the tricky part is exceptions to the patterns. You always need to be able to tweak things imperatively (via code). But the attributes can still do roughly 90% of the job.<p>My latest approach to get enough tweakability is what I tentatively call &quot;fractal rendering events&quot; or &quot;staged rendering&quot;. When rendering HTML or SQL, you need event &quot;hooks&quot; for the different stages. Level 1 events may override&#x2F;alter field attributes. Level 2 events may override&#x2F;alter the HTML (or sql) generated for the field based on the Level 1 values. Level 3 events may override&#x2F;alter the HTML of page sections (or entire SQL clauses). Level 4 is overriding&#x2F;altering the entire page (or final sql statement).<p>In other words, the schema provides drafts, which can then be adjusted along the way through event hooks. The granularity of what&#x27;s tweaked goes up with each stage.<p>But managing that many potential events needs something more powerful than a file-based system. It may be better to manage such source-code in an RDBMS so you can search, sort, and group by different factors at different times rather than hard-wire in one viewpoint as file systems do.<p>But current IDE&#x27;s are not ready for this. I do believe it&#x27;s the future, though. File trees are too limiting.<p>Consider this: it&#x27;s common for a non-coding analyst to want to change a field label, page title, max field length, or &quot;required&quot; status. If they could do it in the schema info (data dictionary), then they don&#x27;t have to involve the coders. Whether the data dictionary is referenced directly or generates scaffolded code is a stack-specific or shop-specific choice. Minor things like this shouldn&#x27;t involve a lot of effort.')