Item(by='pjmlp', descendants=None, kids=None, score=None, time=1604434326, title=None, item_type='comment', url=None, parent=24981099, text='As Hoare would put it in 1981,<p>&quot;The first principle was security: The principle that every syntactically incorrect program should be rejected by the compiler and that every syntactically correct program should give a result or an error message that was predictable and comprehensible in terms of the source language program itself. Thus no core dumps should ever be necessary. It was logically impossible for any source language program to cause the computer to run wild, either at compile time or at run time. A consequence of this principle is that every occurrence of every subscript of every subscripted variable was on every occasion checked at run time against both the upper and the lower declared bounds of the array. Many years later we asked our customers whether they wished us to provide an option to switch off these checks in the interests of efficiency on production runs. Unanimously, they urged us not to--they already knew how frequently subscript errors occur on production runs where failure to detect them could be disastrous. I note with fear and horror that even in 1980, language designers and users have not learned this lesson. In any respectable branch of engineering, failure to observe such elementary pre- cautions would have long been against the law.&quot;<p><a href="https:&#x2F;&#x2F;www.cs.fsu.edu&#x2F;~engelen&#x2F;courses&#x2F;COP4610&#x2F;hoare.pdf" rel="nofollow">https:&#x2F;&#x2F;www.cs.fsu.edu&#x2F;~engelen&#x2F;courses&#x2F;COP4610&#x2F;hoare.pdf</a><p>I guess in IT one needs a couple of decades to be proven right.')