Item(by='jerf', descendants=None, kids=None, score=None, time=1603296923, title=None, item_type='comment', url=None, parent=24849096, text='v8 is not C-fast on general code.<p>A lot of people seem to have the mistaken impression that v8 makes Javascript &quot;fast&quot;. It&#x27;s &quot;fast&quot; for a dynamic language. But on general code... it&#x27;s still slow. It seems to plateau around 10x slower than C, as with the other JIT efforts to speed up dynamic languages, with a roughly 5-10x memory penalty in the process.<p>Microbenchmarks like the benchmark game tend to miss this because a lot of microbenchmarks focus on numeric speed. But numeric code is easy mode for a JIT. Now, that&#x27;s cool, and there&#x27;s nothing wrong with that. If it&#x27;s the sort of code you have, great! You win. But that performance doesn&#x27;t translate to <i>general</i> code. These are not value judgments, these are just facts about the implementation.<p>I expect v8 is roughly as fast as JS is going to get, and it&#x27;s now news if they can eke out a .5% improvement on general code.<p>You can also do much better with v8 if you program in a highly restricted subset of JS that it happens to be able to JIT very well. However, this is not really the same as writing in JS. It&#x27;s an undocumented subset, it&#x27;s a constantly changing subset, and there&#x27;s not a lot of compiler support for it (I&#x27;m not aware of anything like a &quot;use JITableOnly&quot; or anything).')