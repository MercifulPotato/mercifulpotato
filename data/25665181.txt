Item(by='j1elo', descendants=None, kids=None, score=None, time=1609979398, title=None, item_type='comment', url=None, parent=25659942, text='There&#x27;s still a lot of room in the space of <i>WebRTC troubleshooting tooling</i>, precisely due to the complexity inherent of &quot;doing it right&quot;.<p>I know well about the mess of difficult to debug technologies that form WebRTC... and on top of that you&#x27;ll want monitoring, recording, reconnection logic when things go wrong. Of course, add the ability to seamlessly scale when there are lots of users joining a call. The list goes on and on even for a seemingly simple service that &quot;just works&quot;!!<p>I&#x27;ve been maintaining and improving the oss Kurento server for several years now (<a href="https:&#x2F;&#x2F;www.kurento.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.kurento.org&#x2F;</a>), and the kind of issues that users find is crazy. A slight misconfig in an intermediate proxy can cause random issues very hard to track down.<p>Shameless plug: We&#x27;re now building OpenVidu (<a href="https:&#x2F;&#x2F;openvidu.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;openvidu.io&#x2F;</a>) on top of Kurento, to provide some of these features. This is a tool that in turn (pun intended) eases writing videoconference services. Most people looking into starting their own WebRTC app from scratch with Kurento, would be better served by OpenVidu!')