Item(by='didibus', descendants=None, kids=[25596145, 25592128], score=None, time=1609417014, title=None, item_type='comment', url=None, parent=25591206, text='Seems Nim will do some static analysis where if it can infer a reference is locally scoped in some way, it will deterministically inject a call to the destructor at the end of the scope. If not, it will do reference counting which will also have (if using orc) an extra cycle detection pass so that the references count references can also handle cycles. Finally, Nim will also do some static analysis, and if it can infer that even though a reference is passed to something else, if it can tell that it isn&#x27;t used afterwards from the previous place, instead of copying the data, it will share it, bit since it&#x27;s not used by the previous owner you can think of it as moving it rather then sharing it. If Nim can&#x27;t be sure this is the case or sees it isn&#x27;t, then data will be copied.<p>That&#x27;s what I understood at least. So ya, it does look like some kind of hybrid between statically inferable ownership semantics, reference counting, ARC and GC.')