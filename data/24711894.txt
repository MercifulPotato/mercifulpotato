Item(by='marta_morena_29', descendants=None, kids=None, score=None, time=1602099732, title=None, item_type='comment', url=None, parent=24711792, text='It&#x27;s a tradeoff. The problem is that academia often comes from the angle of abstracting and generalizing everything, which is even more harmful than copy &amp; pasting and using the simplest code possible (mostly because copy &amp; paste + simplest code is still readable and can be improved upon, while academic style code usually is inaccessible).<p>You don&#x27;t want to listen to any specific camp. The best is always in the middle and you are on the right track:<p>&quot;Pick what is easy to read.&quot;<p>However there is a caveat, which is that functional style is only hard to read at the beginning. Have a look at how modern languages integrate functional programming (see java, C#, C++, etc.).<p>Java streams are a common example. They make most code much easier to read ONCE you are used to it, because they provide standardized behaviour that is side-effect free. \nWhen you write everything in plain syntax, the reader needs to abstract your code in his head, while when using streams, you just know what `filter`, `map`, `reduce`, etc. do and you only need to look at the small customizations. It&#x27;s easier to read once you are used to it.<p>However there is a limit and this limit get hit quickly. A lot of people like to make their code as complicated and fancy as possible and reduce every possible line. This is definitely wrong. Code must be easy to understand and change. If you fail that, you are doing it wrong.<p>This also depends on your environment. If your co-workers don&#x27;t understand the code you write, you have failed, no matter if your code is &quot;nicer&quot; or not. You either need to write simpler code or educate your co-workers to create common ground.')