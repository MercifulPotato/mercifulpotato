Item(by='ben509', descendants=None, kids=None, score=None, time=1604169122, title=None, item_type='comment', url=None, parent=24951606, text='&gt; Providing the users of a product with the option of a Dark Mode is a good business decision, especially if the application requires users to spend lots of time on the application.<p>I just got done correcting ten exception requests, and this kind of blithe assurance is why I empathize with the compliance guy who insisted we had to explain why we needed these, in particular, how not approving them would impact our business.<p>They provide a pretty reasonable example of where a dark mode makes sense: a streaming service where people are likely to be in a dark room watching mostly your video.<p>It is not self-evident that adding an option for dark mode is a good business decision in general, though.<p>Let me present a counter example: when I receive a package in Amazon Hub, I recieve an SMS (but it&#x27;s really an MMS) with a six-digit code and a barcode image. The Hub lockers have a barcode scanner and a keypad. I have gotten the barcode to scan a few times, but it almost always fails and I just punch in the code.<p>The Pixel is usually in dark mode when I scan. It has worked in light mode. I&#x27;m not inclined to hang around the package locker for ages messing with it, though.<p>Granted, this is already stupidly broken, but the dark mode option introduces additional uncertainty as to whether it&#x27;s the cause of this seemingly unrelated process being broken. Is framing the barcode in black going to interfere with a scanner? Maybe?<p>Before you claim that it&#x27;s a good business decision, you need to at least confirm it&#x27;s a net benefit to users:<p>1. if it&#x27;s an option, do they find the option? How does it interact with the system option if any? Is it consistent between platforms?<p>2. if users toggle the option and a year later want to toggle it again, do they find it again? Or do they complain to support? Or do they delete the application in frustration?<p>3. are you going to properly test two sets of UX?<p>4. did you test uncommon cases, e.g. toggling it while the application is running?<p>5. looking back to my example, will it interfere or <i>appear</i> to <i>possibly</i> interfere with unexpected use cases?<p>Then your business case is tangible benefits (greater sales) + intangible benefits (trust, reputation, delight) - tangible costs (testing, design, support) - intangible costs (confusion, frustration).<p>If it&#x27;s a core use case, e.g. streaming video, or if you can do it simply, especially via the native widgets, then it&#x27;s likely a good business decision. Otherwise, it gets dicey.')