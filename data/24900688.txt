Item(by='jpeloquin', descendants=None, kids=[24900868, 24900947], score=None, time=1603742651, title=None, item_type='comment', url=None, parent=24864087, text='&gt; Specificity is required to disambiguate between two or more methods which are all supertypes of the argument type. â€¦ The specificity rules are defined by the implementation and lack a formal semantics.<p>The lack of formal rules governing which method will be selected for a given set of arguments has made me somewhat reluctant to use Julia for large projects.  Since everything in the language works off of multiple dispatch, it&#x27;s a little disconcerting to have it governed by vague rules.<p>However, the manual [0] says that when two methods of equal specificity are present, &quot;Julia raises a MethodError rather than arbitrarily picking a method&quot;.  The manual doesn&#x27;t discuss the 5 special cases in the linked PDF, though, as far as I can tell.  So did the dispatch &#x2F; specificity rules get formalized at some point?  Or is concern about having formal rules governing dispatch unwarranted?<p>[0] <a href="https:&#x2F;&#x2F;docs.julialang.org&#x2F;en&#x2F;v1&#x2F;manual&#x2F;methods&#x2F;" rel="nofollow">https:&#x2F;&#x2F;docs.julialang.org&#x2F;en&#x2F;v1&#x2F;manual&#x2F;methods&#x2F;</a>')