Item(by='rrss', descendants=None, kids=[25802146, 25802118, 25803183], score=None, time=1610803032, title=None, item_type='comment', url=None, parent=25801500, text='&gt; However due to pressure from customers ARM relented and announced in 2019 that they would allow extensions.<p>The cited announcement here was for ARMv8-M only, the microcontroller variant of ARMv8 for embedded systems.<p>From the linked EETimes article:<p>&gt;&gt; Arm is opening up its instruction set to customersâ€™ customized instructions for Cortex M cores<p>&gt;&gt; For Cortex-A cores, Arm is still a long way from offering any customizable instructions<p>From <a href="https:&#x2F;&#x2F;www.arm.com&#x2F;why-arm&#x2F;technologies&#x2F;custom-instructions" rel="nofollow">https:&#x2F;&#x2F;www.arm.com&#x2F;why-arm&#x2F;technologies&#x2F;custom-instructions</a>:<p>&gt; Arm Custom Instructions are a standard feature of the Armv8-M architecture<p>Apple M1 is not an ARMv8-M core, it&#x27;s an ARMv8-A core.<p>I&#x27;d very much like to understand the contractual terms under which Apple put custom instructions into their ARMv8-A core, but I don&#x27;t think it is as simple as &quot;ARM is totally fine with all licensees doing this now.&quot; AFAIK, the latest revisions of ARMv8-A still do not permit custom instructions.<p>Other reasons I don&#x27;t think AMX is in the category of the publicly announced &quot;custom instructions&quot; part of the ISA:<p>- arm custom instruction are prohibited from accessing memory, but AMXLD* and AMXST* exist.<p>- arm custom instructions are prohibited from having their own register states, but AMX has amx0, amx1, amx2 registers.<p><a href="https:&#x2F;&#x2F;developer.arm.com&#x2F;architectures&#x2F;instruction-sets&#x2F;custom-instructions" rel="nofollow">https:&#x2F;&#x2F;developer.arm.com&#x2F;architectures&#x2F;instruction-sets&#x2F;cus...</a>')