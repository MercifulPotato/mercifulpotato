Item(by='rgoulter', descendants=None, kids=None, score=None, time=1605676325, title=None, item_type='comment', url=None, parent=25133041, text='I&#x27;d note that the recipe used in the post doesn&#x27;t include a list of ingredients. The list of ingredients has to be inferred from the steps. (Not to over-extend the analogy, but from my casual experience with baking, the method is usually pretty easy to remember, but it&#x27;s the exact measurement of ingredients that&#x27;s difficult to recall).<p>So I think specifically the post&#x27;s analogy of &quot;it&#x27;s hard to know how-much of each ingredient to use in each step&quot; doesn&#x27;t really map very well.<p>Adding indirection can make things more difficult to read. If the details you need to know are placed in multiple places, this is complex and adds cognitive load to understanding the code. -- Ruby is nice to write, but a PITA to refactor, because the &#x27;type&#x27; of a method&#x27;s argument is implicit. Whereas with languages with ADTs and records, a piece of code can be made &#x27;smaller&#x27; and more explicit, and easier to refactor.<p>Maybe the post&#x27;s argument can be adjusted where with some baking items, an additional step may-or-may-not be taken.. where an indirect style makes it harder to get an understanding of what&#x27;s going on. -- But it&#x27;s also important to note that sometimes the system being modeled <i>is</i> complicated and benefits from the added indirection.')