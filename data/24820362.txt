Item(by='simias', descendants=None, kids=[24822117, 24820505], score=None, time=1603048881, title=None, item_type='comment', url=None, parent=24819640, text='I&#x27;m not really seeing it, at least not in this opcode list.<p>As far as I can tell the C operands are fairly simple and basic (add, subtract, complement, and, or, xor etc...). They would almost always map to a single instruction in MIPS, ARM32, ARM64, Z80 etc... So I&#x27;m not convinced that there&#x27;s a direct correlation here, one way or the other.<p>Conversely if C was really deeply influenced by the PDP-11 ISA then why isn&#x27;t there a single &quot;bit set&quot;, &quot;bit clear&quot; or &quot;rotate right&quot; operator in C? Those require multiple operators in C but a single opcode here. Rotation in particular is a bit of a pain to code in C since you need to know the size of the integer you&#x27;re rotating. I always thought that it was an oversight not to have built-in support for rotations in C.<p>The only thing that really stands out as being fairly C-ish is the auto-incrementing and -decrementing addressing modes which map well to <i>p++ and friends (although </i>++p needs two opcodes as far as I can tell) but it&#x27;s a feature that&#x27;s available on other ISAs.')