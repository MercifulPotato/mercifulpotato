Item(by='PaulDavisThe1st', descendants=None, kids=[25719766], score=None, time=1610309134, title=None, item_type='comment', url=None, parent=25715414, text='I have issues with the combining of what to me are entirely different categories of things in the sort of &quot;critique&quot; that &quot;duct tape&quot; programming supposedly represents.<p>Fine, COM and COBRA are baroque and complex and one can make the case that they merely make &quot;simpler&quot; things that can be done in other, more duct-tape-y ways. I&#x27;m fine with dismissing this sort of overgrown, overcooked-before-anyone-even-ate-it API&#x2F;framework in favor of simpler approaches.<p>But ... just because Netscape didn&#x27;t need threads in 1995 doesn&#x27;t mean that nobody needs threads. And by threads, I&#x27;m not talking about &quot;concurrency&quot; in the way that is in vogue today in the context of Rust&#x2F;Go&#x2F;JS. Sometimes, you do actually need threads, and you just have to grapple with having multiple execution streams running simultaneously, with everything that implies.<p>That&#x27;s just picking out the most prominent example from TFA, but there are other floating around too. Failure to properly identify &quot;baroque over-designed nonsense&quot; from &quot;complex, hard to use but necessary stuff&quot; is a common failure, and an important one to try to avoid.<p>Also, the &quot;next and previous points xor&#x27;ed into a DWORD&quot; hack mentioned at the end? This isn&#x27;t duct tape programming. It&#x27;s absurdly context-dependent premature optimization, useful only in insanely memory-constrained environments, and not likely useful in almost any of the scenarios that most programmers (especially duct-tapers) find themselves working.<p>Also, real programmers don&#x27;t say DWORD.')