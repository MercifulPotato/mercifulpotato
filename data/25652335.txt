Item(by='lhorie', descendants=None, kids=None, score=None, time=1609887065, title=None, item_type='comment', url=None, parent=25650224, text='My kid was playing Lightbot at 6yo. Most programming toys I&#x27;ve seen have similar mechanics. I put together a cardboard version myself to help him practice some concepts (e.g. procedures), with the difference that it uses actual directions (up, down, left, right) instead of the usual forward, turn left, turn right commands, which in my observation was more intuitive.<p>He didn&#x27;t seem to take much more interest in programming after mastering that, but he did eventually take interest in chess. The reason is that we borrowed a bunch of chess books from the library and he would go read them whenever he was bored, and he would play with his grandpa to try to apply the tricks he was reading about. Point being that having self-study and tight feedback loops seem to help in acquiring proficiency in a skill.<p>Personally, after the most beginner level, I&#x27;d start to move away from using game development as a motivator for learning programming simply because after some threshold, the math requirements ramp up substantially (e.g. implementing jumping in a side-scroller requires middle school level math at a very bare minimum). In my own journey, I&#x27;ve found that web development (using only the most vanilla subset of technologies) was a relatively gentle way to get into programming. The syntax is relatively forgiving, the building blocks are high level enough to allow easy creation of interesting interactive things, the built-in tooling in browsers nowadays are amazing and the tight feedback loop is there.<p>YMMV')