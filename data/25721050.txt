Item(by='tikhonj', descendants=None, kids=None, score=None, time=1610318814, title=None, item_type='comment', url=None, parent=25719393, text='I use Emacs&#x27;s direnv integration. Haven&#x27;t had any trouble. It straight-up works better than alternatives I tried before like trying to turn pyvenv mode on automatically.<p>I also manage Emacs, its packages and its packages&#x27; native dependencies with Nix.<p>Having an automatic link between Emacs packages and native libraries has made my life <i>massively</i> easier. For example, earlier today I installed `pdf-tools`[1] just by adding (use-package pdf-tools :ensure t) to my init.el, and Nix took care of building and installing the native software needed to support it. I didn&#x27;t have to go through any of the installation steps in the pdf-tools README[1], it just worked.<p>I&#x27;m on my laptop now, but when I get back to my desktop, all it will take to get pdf-tools working is pulling the latest version of my config from git and switching to it. As long as there&#x27;s a version of the native libraries packaged for macOS, getting it working on my work laptop won&#x27;t be any harder; if there aren&#x27;t, I might either change the config to only have that package on Linux or I might write a bit of Nix code myself to build a macOS-compatible version.<p>pdf-tools is a cute self-contained example, but this has been even bigger for using lsp-mode and different language servers as well as other nice-to-have development tools.<p>For all the hassle that learning and moving to NixOS took—and still occasionally takes—I&#x27;m convinced that things like this have <i>more</i> than paid off for me and that I&#x27;m saving time on net.<p>[1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;politza&#x2F;pdf-tools" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;politza&#x2F;pdf-tools</a>')