Item(by='DudeInBasement', descendants=None, kids=None, score=None, time=1607964399, title=None, item_type='comment', url=None, parent=25418918, text='Add:\nIf you want an easier, and use shadowed variables:<p><pre><code>    #define guard_name3(name, line) name ## line\n    #define guard_name2(name, line) guard_name3(name, line)\n    #define guard_line_name(name) guard_name2(name, __LINE__)\n    #define guard { void * defer_scope = &amp;&amp;guard_line_name(defer_scope ##_exe); \\\n      if (0) { guard_line_name(defer_scope ##_exe) : defer_scope = 0; }\\\n      if (defer_scope != 0)\n    #define guard_end goto * defer_scope; }\n    #define guard_break goto *defer_scope;\n    #define defer(func) void * guard_line_name(defer_scope_item) = defer_scope; \\\n      defer_scope = &amp;&amp;guard_line_name(defer_scope_item##_label); \\\n      if (0) { guard_line_name(defer_scope_item##_label): { func } goto * guard_line_name(defer_scope_item); }\n\n    guard {\n      void * p = malloc(10);\n      if (!p) guard_break;\n      defer({ printf(&quot;freep\\n&quot;); free(p);});\n      void * q = malloc(10);\n      if (!q) guard_break;\n      defer({printf(&quot;freeq\\n&quot;); free(q);});\n            \n      void * fail = 0;\n      if (!fail) guard_break;\n      defer({printf(&quot;freefail\\n&quot;); free(fail);});\n      guard_end;\n    }</code></pre>')