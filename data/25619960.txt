Item(by='steve_adams_86', descendants=None, kids=None, score=None, time=1609655012, title=None, item_type='comment', url=None, parent=25616593, text='Wow, this is an excellent critique. I don’t expect any language to be perfect, so I’m personally alright with my investment in Go. Nonetheless, I love when people share the ugly parts of software so clearly so I can anticipate and avoid similar problems. Since I use Go, I actually got a lot out of this and enjoyed reading it a lot.<p>Go’s simplicity scared me a lot from the outset - there is no free or easy solution in software. Everything is a trade off. As such, I think Go is an excellent tool for prototyping dumb solutions for relatively simple problems. Or at least, for modelling solutions around simple parts of problems while ignoring complexity until later. On our team we see anything important as something we finish fast with Go&#x2F;Python, then we do it right with Rust when we fully understand it.<p>As a tool for getting things done quickly with that pretence, I’d argue that Go is an awesome tool. I would be afraid of building something large and expected to live a long time with it, though. Anyone who has worked with software for a while should be wary of any solution that claims to be simple.<p>Anyway, I really enjoyed this but wanted to point out what I like about Go.')