Item(by='MaxBarraclough', descendants=None, kids=[24916175], score=None, time=1603835829, title=None, item_type='comment', url=None, parent=24910784, text='&gt; I don&#x27;t understand your opposition to writing a kernel in some form of Oberon, but accepting pretty much any other language&#x2F;paradigm<p>When people talk about developing a kernel in a language other than C, the question that springs to mind is <i>So what does this choice of language bring to the table?</i><p>Rust and especially SPARK bring significant assurances of correctness, as they both improve greatly on the unsafety (supposing that&#x27;s a word) of the C language.<p>The same is true of a middle-of-the-road language like Java, but Java isn&#x27;t ideally suited to kernel development. (If OS researchers prove me wrong on this point, then that&#x27;s great, of course.)<p>Assembly isn&#x27;t a very compelling choice of language in terms of safety&#x2F;correctness assurances, but I can see the appeal for a hobbyist OS, or for a carefully tuned high-performance codebase.<p>From what I know of Oberon, using it for kernel development isn&#x27;t in itself very interesting. Does it offer the guaranteed absence of broad categories of runtime errors? I guess it&#x27;s still probably a rather safer language than C, and I presume its performance is ok, but this isn&#x27;t anything new.<p>(Of course, I&#x27;ve only talked about language. There are plenty of other ways an OS can be interesting besides the language it&#x27;s implemented in, but that&#x27;s the topic at hand.)')