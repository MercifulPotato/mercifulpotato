Item(by='hn_throwaway_99', descendants=None, kids=[25065865], score=None, time=1605147249, title=None, item_type='comment', url=None, parent=25063993, text='TBH, this whole blog post just seemed like a poor ad for Akamai&#x27;s Page Integrity product, and deliberately overcomplicated 2 problems that should be very simple to deal with:<p>1. How did the malicious script get injected in the first place? CSP should eliminate if not greatly reduce this attack surface.<p>2. The blog post states &quot;Also, a lot of CSP policies don&#x27;t limit WebSockets usage.&quot; Umm, what? Why not, this seems incredibly stupid to me, that&#x27;s the whole point of connect-src. What I did find was this issue report, <a href="https:&#x2F;&#x2F;github.com&#x2F;w3c&#x2F;webappsec-csp&#x2F;issues&#x2F;7" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;w3c&#x2F;webappsec-csp&#x2F;issues&#x2F;7</a> , stating that connect-src &#x27;self&#x27; doesn&#x27;t allow websockets in many browsers because it&#x27;s technically not same-origin, so all I can imagine is that there is some (bad, lazy) practice where if you wanted connect-src &#x27;self&#x27; to allow websockets back to the same host you just said &quot;fuck it&quot; and also put ws:* in your connect-src, which is just a bazooka aimed at your foot.')