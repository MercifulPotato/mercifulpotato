Item(by='curryst', descendants=None, kids=None, score=None, time=1605892295, title=None, item_type='comment', url=None, parent=25161714, text='&gt; It is not, it is a python orchestration framework that just happens to have a configuration state module.<p>I&#x27;ve seen small pieces of utilization like this that looked awesome.  I totally agree with the sentiment.<p>&gt; There are legitimate criticisms of Salt of course. There&#x27;s a lot of moving parts, there&#x27;s a lot of half-baked stuff, the crypto has been questioned, but the core idea is honestly pretty great and its always been a pleasure to work with.<p>I could deal with that, but I have had absolutely misery trying to stabilize Salt minions.  I had constant issues with them crashing or just hanging.  Complexity is manageable, I can work around the parts that aren&#x27;t totally there yet, I can live with maybe insecure crypto, but I can&#x27;t have any stage of the deployment pipeline be flaky.  It&#x27;s annoying for me because I have to fix it; it&#x27;s annoying to the people that need to deployments because they can never tell if their pipeline will succeed or not, and they have to wait on me to fix it.  It ends up building a lot of animosity towards the tool, and by association, to the team that introduced it.<p>I just use Ansible now.  It&#x27;s not nearly as powerful (the ability to drop into Python in Salt is really nice, and I find equivalent things difficult to write in Ansible), but it pretty much always works.  The abstractions are messier, but at a certain point, the less powerful but stable solution just makes more sense.<p>I really hope Saltstack can turn around on their reliability, because I would love to use it again.')