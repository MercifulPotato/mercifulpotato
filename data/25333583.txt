Item(by='Ozzie_osman', descendants=None, kids=[25335129, 25336511], score=None, time=1607358041, title=None, item_type='comment', url=None, parent=25329108, text='There&#x27;s a pretty subtle pitfall that teams can fall into here.<p>Let&#x27;s say a team has 2 developers. Josh is 20% &quot;better&quot; than the John, or simply started earlier and has more context on the code base. So initially, Josh is 20% faster, but now John has to spend an extra 20% of his time reviewing Josh&#x27;s code in a pull request (or understanding Josh&#x27;s code so he can make a change) instead of making forward progress. So now, actually John is even 20% less effective than he can be, and he has less time to actually code. And since he&#x27;s even less productive, Josh has __more__ time to code, so he&#x27;s even faster, which means he writes more code. It kind of compounds, and even an initial slight advantage in speed or context for one developer can amplify itself over time.<p>A good engineering manager or senior engineer can detect when that&#x27;s happening and try to correct the balance. But often the team kind of settles into a mode where Josh is known to be better and more productive and everything is funneled to him.')