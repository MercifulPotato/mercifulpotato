Item(by='Someone', descendants=None, kids=[25627069], score=None, time=1609723035, title=None, item_type='comment', url=None, parent=25626699, text='Devil’s advocate: compared to assembly, C is portable, but compared to a lot of high-level languages, C isn’t very portable.<p>Every “implementation defined” feature (<a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unspecified_behavior#Implementation-defined_behavior" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unspecified_behavior#Implement...</a>) creates two different languages (examples are sizes of basic numeric types, signedness of the <i>char</i> type, and evaluation order of arguments)<p>Also, the standard library is so limited that, historically, you needed lots of stuff that wasn’t standardized between systems (<a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;GNU_Autotools" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;GNU_Autotools</a>: <i>“It can be difficult to make a software program portable: the C compiler differs from system to system; certain library functions are missing on some systems; header files may have different names.”</i>)<p>But yes, bringing up C on a system is a lot easier than doing the same for, to pick another extreme, Ada, but that’s because only half the job is done. Autotools does a bit of the rest, but still requires help from program writers.')