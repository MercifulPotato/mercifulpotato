Item(by='DarkWiiPlayer', descendants=None, kids=None, score=None, time=1601907520, title=None, item_type='comment', url=None, parent=24687119, text='The git log isn&#x27;t a release history, it&#x27;s a development history. Squashing commits throws away context that could be useful in any number of ways.<p>There&#x27;s nothing wrong with squashing a bunch of commits that really should have been a single commit from the start:<p>- Update X to do Y<p>- Fix typo in X<p>- Add &quot;foo&quot; option to X for when Y is a bar<p>But most of the time &quot;features&quot; consist of many changes: we add one function we&#x27;re going to need, then another, then yet another... Then we change an API to expose the new functions, then extend the UI to make room for it and finally make put it into the application and pull all the strings together.<p>Squashing all these into one commit is just a bad idea. You can always do git rebase -i before merging to do minor fixups or even reorder your commits (like when you notice a typo after several other commits), but completely removing all granularity... just no.')