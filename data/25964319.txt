Item(by='dublin', descendants=None, kids=None, score=None, time=1611963477, title=None, item_type='comment', url=None, parent=25942780, text='NO!  The important (and hardest) part is NONE OF THE ABOVE.  It&#x27;s understanding the REAL WORLD PROBLEM that the software is intended to help with!<p>Example: A decade ago I hired a Designer who had the potential to become a decent JS&#x2F;UI coder, but wasn&#x27;t one yet.  He upleveled his own JS skills to where he was quite competent.  But more importantly, we made sure he learned WHAT THE SOFTWARE DOES IN THE REAL WORLD.  If he doesn&#x27;t know that, and how the people that use it think about their own jobs and environments, he can&#x27;t possibly design and write good interfaces.  (This was software to manage, operate, maintain, and optimize utility-scale solar power plants.)<p>When we merged with another company in the space a year or two later, he came back and reported that he was stunned that <i>he</i> (the UI designer!) knew MUCH more about how solar power plants actually operated than any of their &quot;engineers&quot; writing their application code.  (And yes, he did...)<p>It&#x27;s not about solving the problem in the currently &quot;right&quot; or trendy way - it&#x27;s about doing a good job of solving the right problem in a really useful way!<p>(FWIW, I no longer care at all which tools, languages, or frameworks are used - if you care about that, you&#x27;re focusing on the wrong stuff...)')