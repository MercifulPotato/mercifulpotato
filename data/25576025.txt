Item(by='mxmxnxor', descendants=None, kids=None, score=None, time=1609282133, title=None, item_type='comment', url=None, parent=25570363, text='Just remembered this interesting provocative video from 2011 - <a href="https:&#x2F;&#x2F;youtu.be&#x2F;00gAbgBu8R4" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;00gAbgBu8R4</a>\nAs I understood right - to achieve something like unlimited detailed geometry we need to store objects in adaptive vector form which is very fast to render in current zoom level and will need a little bit of computation if zoom also changes a little. And what encoding form of models&#x2F;geometry will be the fatest way for rendering? From 2d&#x2F;ui engine perspective it&#x27;s just a pixel cache and we only need to copy pixels to viewport. And there will be max zoom level where it makes no sense to cache pixels for bigger zoom level because of memory overhead and ability to render straight from original vector representation in realtime. \nBut what is equivalent of pixels caching in 3d world? Due to ability of viewing objects&#x2F;geometry from different sides&#x2F;angles (without changing distance from camera to object e.g zoom level) we need to have something like 3d pixel cache which seems like huge memory requirements. Maybe voxels or points&#x2F;splats? Or maybe just same 2d pixels cache but for each 6 sides of object (like 6 edges of cube) and do some pixel interpolation for intermediate viewing angles?')