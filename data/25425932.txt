Item(by='ludocode', descendants=None, kids=[25428087], score=None, time=1607995767, title=None, item_type='comment', url=None, parent=25424695, text='You have accused me of arguing in bad faith twice in one post. This is insulting, not to mention against the HN rules (&quot;assume good faith&quot;).<p>Clearly we disagree on whether a syntax change is minor. But first let me repeat the point I made that you ignored in between your accusations: it really is just syntax. Of the four examples in the second part of your post, if we assume defer is implemented like attribute cleanup and fix up the compile errors, your first and fourth example compile to the identical assembly code:<p><a href="https:&#x2F;&#x2F;godbolt.org&#x2F;z&#x2F;n14z5q" rel="nofollow">https:&#x2F;&#x2F;godbolt.org&#x2F;z&#x2F;n14z5q</a><p><a href="https:&#x2F;&#x2F;godbolt.org&#x2F;z&#x2F;Ksq1rj" rel="nofollow">https:&#x2F;&#x2F;godbolt.org&#x2F;z&#x2F;Ksq1rj</a><p>I would argue that the best solution is one you didn&#x27;t present: move the &quot;business logic&quot; into a separate function, one that takes the necessary resources as arguments. This way you&#x27;re no longer mixing up resource acquisition error handling with business logic, and the function that acquires the resources can use the nested if statement style (or any other style) with no downsides. No surprises here, it again compiles to the identical assembly code:<p><a href="https:&#x2F;&#x2F;godbolt.org&#x2F;z&#x2F;b375E9" rel="nofollow">https:&#x2F;&#x2F;godbolt.org&#x2F;z&#x2F;b375E9</a><p>In my opinion the nested if style is better than using defer because it&#x27;s completely linear with no backward jumps. But even if you disagree you can hardly complain about cleanup code being far from init code because the whole resource handling function is less than 20 lines of code regardless of what cleanup style you chose. It doesn&#x27;t matter, which is why I argue that it&#x27;s a minor syntax change not worthy of addition to C.')