Item(by='toinbis', descendants=None, kids=None, score=None, time=1607532808, title=None, item_type='comment', url=None, parent=25360243, text='Sure! :) But I think it&#x27;s all just about few principles. Elaborated a bit more on them:<p>1. Tailwind CSS classes extracted with purge-css, all inlined.<p>2. Favicon inlined, small images (&lt;4kb) inlined. Not sure what’s the best threshold. Here is all <a href="https:&#x2F;&#x2F;turboeshop.com&#x2F;inlinedimages&#x2F;" rel="nofollow">https:&#x2F;&#x2F;turboeshop.com&#x2F;inlinedimages&#x2F;</a> is all page in one requests. Meaning two big images that are <a href="https:&#x2F;&#x2F;turboeshop.com&#x2F;fastestpageintheworld&#x2F;" rel="nofollow">https:&#x2F;&#x2F;turboeshop.com&#x2F;fastestpageintheworld&#x2F;</a> were inlined - results are way worse. So larger images - definitely excluded.<p>3. Gzip stuff(as one commenter below commented, not done in turboeshop.com&#x2F;fastestpageintheworld&#x2F;).<p>4. Everything from same domain and subdomain. If you want cloudinary or friends, I guess they are only allow subdomain. This is totally OKeish exemption. Or maybe there is a way to work around that cloudinary serves, Cloudflare caches.<p>5. JS - inlined. Cash.js maybe if you need jquery replacement, or just vanilla. Little content on vanilla js nowadays :), <a href="https:&#x2F;&#x2F;gomakethings.com&#x2F;articles&#x2F;" rel="nofollow">https:&#x2F;&#x2F;gomakethings.com&#x2F;articles&#x2F;</a> is something interesting. Don’t want to flame here, am not js expert, maybe someone can elaborate.<p>6. For compex components - svelte web components (or stencils or lithtml) - I’d prefer svelte but am not sure what’s best.<p>7. Google analytics a) - there is new google analytics (GA4) with measurement protocol2 and new server side google tag manager. Serve side gtm does two things a) serves gtag.js; b) accepts measurement protocol hits and sends to GA. Take a look how it’s done - <a href="https:&#x2F;&#x2F;www.simoahava.com&#x2F;gtm-tips&#x2F;build-custom-universal-analytics-client-server-side-tagging&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.simoahava.com&#x2F;gtm-tips&#x2F;build-custom-universal-an...</a> , it’s very similar as cloudflare workers, cool stuff. But it’s hosted on Google App Engine, thus - slow. But you don&#x27;t need google&#x27;s server anymore, you control full infra, so why not setup simple cache here.<p>8. Google analytics b) To owerome latency to Google App engine, so you make async proxy in cloudflare workers - one worker to proxy for gtag.js download, one for serving gtag.js from your own domain. &lt;script src=“<a href="http:&#x2F;&#x2F;yourdomain.com&#x2F;workers&#x2F;gtag&#x2F;js?id=G-1234455" rel="nofollow">http:&#x2F;&#x2F;yourdomain.com&#x2F;workers&#x2F;gtag&#x2F;js?id=G-1234455</a>&gt; . Basicly just serve from js cache and check every once in a while if google hadn’t changed their code. Same for GA hits. It used to be google-analytics.com&#x2F;collect endpoint, server side gtm allows to host collection yourself. You again make worker-proxy, define it in gtag’s transport_url:&#x27;<a href="https:&#x2F;&#x2F;turboeshop.com&#x2F;measure" rel="nofollow">https:&#x2F;&#x2F;turboeshop.com&#x2F;measure</a>&#x27; setting and make sure worker returns non-blockingly, and just then forward\nthe measurement protocol hit from worker async-ly with event.waitUntil().<p>9. Google analytics c) The gtag.js&#x2F;analytics.js is a huge file and you have no control, so maybe just use <a href="https:&#x2F;&#x2F;github.com&#x2F;segmentio&#x2F;analytics.js" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;segmentio&#x2F;analytics.js</a> instead or check out <a href="https:&#x2F;&#x2F;www.thyngster.com&#x2F;app-web-google-analytics-measurement-protocol-version-2" rel="nofollow">https:&#x2F;&#x2F;www.thyngster.com&#x2F;app-web-google-analytics-measureme...</a> (search “navigator.sendBeacon”) - craft measurement protocol yourself and send it to gtm. I plan on investigating this but have not yet done that.<p>10. All the stuff (fb tracking pixel, etc.) you are used to just ‘putting in html’, you instead send as measurement protocol hit dimension and do ETL in google tag manager.<p>11. All the 3rd party stuff that demands to be executed client-side - you just don’t use that :D (or use, but wisely)<p>12. HTML - bussiness as usual.<p>13. So after page reload - double check if all requests are done&#x2F;received from your own domain. Use curl on each of them to find header CF-cache-status: HIT. They have this ‘varied’ or similar status which means something I can’t remember, but I always fix stuff till ‘Hit’ :)<p>14. I guess that’s it. Enjoy your own fastest website in the world :)')