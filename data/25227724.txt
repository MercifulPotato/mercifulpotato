Item(by='zRedShift', descendants=None, kids=None, score=None, time=1606476135, title=None, item_type='comment', url=None, parent=25226901, text='In Rust ? is the try&#x2F;error propagation operator. It converts the error to the correct type, if necessary, and returns it.<p><pre><code>  let ok = return_result()?;</code></pre>\nand<p><pre><code>  let ok = match return_result() {\n      Ok(ok) =&gt; ok,\n      Err(err) =&gt; return Err(err.into()),\n  };</code></pre>\nare equivalent<p>In TypeScript&#x2F;Kotlin&#x2F;C#&#x2F;PHP and many more languages, ?.&#x2F;?[]&#x2F;?-&gt; is the null conditional operator.\nRust doesn&#x27;t have it in operator form (? works on Option&lt;_&gt; types as if they were a degenerate Result&lt;_, ()&gt; type). instead, you &quot;flatmap&quot; the Options with and_then() (if it&#x27;s fallible) and map() if it&#x27;s infallible. Or just use bare pattern matching.<p><pre><code>  $country = $session?-&gt;user?-&gt;getAddress()?-&gt;country;</code></pre>\nis<p><pre><code>  let country = session\n      .and_then(|session| session.user)\n      .and_then(|user| user.get_address())\n      .map(|address| address.country);</code></pre>')