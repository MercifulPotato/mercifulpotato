Item(by='notyourNMI', descendants=None, kids=[25521115, 25527165], score=None, time=1608750733, title=None, item_type='comment', url=None, parent=25520111, text='Non-degreed Software Engineer from the USA here, weighing in with biased opinions:<p>Depends on the field you are in. Here at least, use of the title as it relates to software is currently driven by the hiring agency&#x2F;company. If you are hired on as a Software Engineer without a degree, then you are a Software Engineer (at least in title, at that position). You damn well better be able to perform. But you can legally write &quot;Software Engineer&quot; on your tax forms.<p>In my personal opinion, what differentiates a software engineer from a software developer is the level of engineering rigor required for the development and application of your software in a given environment or system. Are there standards in place that recommend (mandate) you provide certain reasonable assurances (e.g.: verifiable proof derived through specified means) that your software will not yield unexpected behavior? Are there standards in place for a given industry that confine the way you use specific languages (to attempt to ensure the aforementioned unexpected behavior will be minimized or eliminated)? I&#x27;m thinking of DO-178B&#x2F;C, IEC 62304, &amp; MISRA as industry representatives here. If you can digest and navigate these standards, and prove to the applicable regulatory body that you adhered (designed, developed, and tested) to their respective guidance documents, they couldn&#x27;t give a damn about a degree. You&#x27;ve <i>proven</i> you&#x27;re aware of the risks your software can pose and how to mitigate them through thoughtful application of standards, rules, and hopefully best practices.<p>Here&#x27;s where I&#x27;ll piss some people off: Would I call a front-end UI developer a &quot;Software Engineer&quot;? Probably not, unless that UI is destined for a system where a developer error could cause harm, property damage, etc. What about a trading system where performance losses measured in nano-seconds could accumulate millions in losses? Possibly, depending on the complexity. My personal metric (based on my own career experience) is &quot;will a screw-up cause harm, loss of life, or irreparable damage&#x2F;destruction to expensive things&quot;. Losing millions in a trade and losing millions in an *craft crash are not equivalent to me personally.<p>Background: Non-traditional EE trained on avionics hardware who moved into developing safety critical avionics and medical device software and hardware.')