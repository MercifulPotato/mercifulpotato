Item(by='creamytaco', descendants=None, kids=[25971118], score=None, time=1612026558, title=None, item_type='comment', url=None, parent=25969006, text='You are being disingenuous here. Lisp is cool but it does not  enable &quot;any part of Nyxt to be reprogrammed at any time&quot;.<p>Your project is essentially a thin UI veneer on top of C browser engines. That latter part, which is by far the most interesting, can not be reprogrammed in Lisp except through the very limited exposed C library API. Which leads me to the issues I see with Nyxt:<p>Security will always be a serious problem (and getting worse as time flows). You don&#x27;t have the resources of Google or even Mozilla, that ship self-contained browsers and can implement security solutions in a holistic, systemic manner. Doing browsing with the isolated engine libraries was (and still is) a recipe for disaster.<p>Then, for the same reasons, the big corporations can essentially kill your project at any point by treating it as unsafe&#x2F;insecure and having their sites stop working (which is actually happening at Google).<p>But most important to me, other than security, is the lack of flexibility and power. The UI veneer and subsets of the rendering engine library APIs that you expose as programmable in Lisp, are the least interesting ones. Why would anyone want to reimplement uBlock or other popular extensions in some convoluted mix of Lisp and Javascript, rather than use the superior originals? This is the final tombstone for me.<p>It&#x27;s clear that you&#x27;re trying to build an ecosystem and deliver &quot;apps&quot; on top of, like an Emacs-like for the web maybe, but for the reasons I mentioned I see it as fundamentally flawed and want no part of it.')