Item(by='moonchild', descendants=None, kids=[25557722], score=None, time=1609142038, title=None, item_type='comment', url=None, parent=25557458, text='Not sure what your point is calling gcc both ‘awful’ and ‘so fast overall’.  Nor why you&#x27;re conflating gcc and glibc.<p>FWIW my experience has been has clang produces a superior development experience for c++ code, but that gcc is better for c.  Llvm does have a more modular architecture than gcc, but it&#x27;s not really fair to say that it&#x27;s more modern overall.  Gcc has gotten several features ahead of llvm, like hot&#x2F;cold LTO separation and parallel compilation (the former is now in llvm and the latter apparently is impractical due to architectural problems).<p>&gt; The compilers are only good for short memcpy&#x27;s. For the rest the asm hinders modern compiler optimizations<p>Also not sure what you mean by that.  TFA isn&#x27;t performing memcpys with inline assembly.  They&#x27;re using inline assembly to perform a call to the exact same ‘memcpy’ function you would have called anyway, but also to inform the compiler that memcpy clobbers fewer functions.  So it&#x27;s true that this will mainly improve performance for copies of small memory regions; but the performance of large copies will be unaffected.')