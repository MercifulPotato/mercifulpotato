Item(by='loup-vaillant', descendants=None, kids=None, score=None, time=1610189897, title=None, item_type='comment', url=None, parent=25695992, text='This quote from GP&#x27;s link could possibly be interpreted as &quot;Signal does not look very trustworthy&quot;:<p>&gt; <i>Signal requires phone numbers and is a centralized service. HushChat is completely anonymous and decentralized and requires absolutely no metadata be given to any centralized third parties. Signal is also not fully open source, the backend servers are NOT OPEN SOURCE, and so, Signal should be considered &quot;open core&quot; and not fully open source. HushChat is Free Software! We are about your freedom, Moxie cares about his Silicon Valley friends.</i><p>I believe Signal requires phone numbers to be usable at all. I <i>maybe</i> vaguely recall plans to get rid of this restriction, but I&#x27;m not sure.<p>The Signal protocol is explicitly designed to trust servers as little as possible, so even if the server code were proprietary, that doesn&#x27;t mean much.<p>Ultimately, HushChat and Signal are probably chasing slightly different goals. HushChat seems to be focused on privacy at all costs. Signal is focused on privacy for <i>everyone</i>. There&#x27;s a usability tradeoff here, between usability and security.<p>---<p>While I&#x27;m at it, the following quote rubs me the wrong way:<p>&gt; <i>Are you rolling your own crypto like stupid people?</i><p>&gt; <i>No. We use the industry standard libsodium to provide cryptographic primitives: […]</i><p>My first objection here is that there&#x27;s nothing wrong with writing your own implementation of known primitives. The problem when you do so is taking the time to get it right¹, which is why it is almost always much cheaper to just use an existing crypto library.<p>[1]: <a href="https:&#x2F;&#x2F;loup-vaillant.fr&#x2F;articles&#x2F;crypto-is-not-magic.html" rel="nofollow">https:&#x2F;&#x2F;loup-vaillant.fr&#x2F;articles&#x2F;crypto-is-not-magic.html</a><p>My second objection is that they <i>are</i> designing and implementing their own protocol. Not that there&#x27;s anything wrong with that, but they are suggesting it&#x27;s easier than implementing a primitive. In my experience, it&#x27;s not. It tends to take less time, but it&#x27;s also more delicate. Overall, it evens out.<p>Really, I don&#x27;t fault them for what they <i>do</i> here. But it sucks that they have to defend against the &quot;rolling your own crypto&quot; in this way.')