Item(by='MrYellowP', descendants=None, kids=None, score=None, time=1602363642, title=None, item_type='comment', url=None, parent=24741287, text='I&#x27;m not going to read this article. My apologies when I&#x27;m completely off with my post, but I&#x27;ve had lengthy discussions with people who are unable to even imagine what I recognize as screaming into their faces. I&#x27;m talking about what Microsoft is doing and the future of computing in general. No, this is not a conspiracy theory. It&#x27;s just 20 years of observing technological progression and drawing conclusions.<p>So, with all due respect, please allow me to expand:<p>I usually start such conversations with &quot;The Desktop Wars are over and no one&#x27;s the winner. The only actual participant decided to withdraw and instead change the rules of the engagement.&quot;<p>In keypoints, in no particular order, to make this shorter: Trusted Computing, Virtualization, SaaS, WSL, web applications, WASM, Docker, CPU based in-flight&#x2F;runtime memory encryption, walled gardens, consoles-are-just-PCs-anyway. All of these go together, one way or another, leading to a particular outcome.<p>When virtualization became a default feature of CPUs, eventually sandboxing became a thing. Docker. You can download &quot;sandboxes&quot; and run those instead of downloading and running &quot;just&quot; programs. It&#x27;s pretty fast, safe, completely self-contained. You don&#x27;t dirt up your OS by installing software and potential malware has to be significantly more sophisticated to break out of the sandbox.<p>Now look at WSL. At some point in the likely-not-so-distant-future Microsoft will proudly announce &quot;full integration&quot;, at which point the idea of a Windows, or a Linux, simply becomes irrelevant. The Linux kernel will be running virtualized next to a virtualized Windows kernel, controlled by a hypervisor.<p>Combined with on-the-fly encryption of memory, which eventually <i>will</i> hit the consumer market, software can then be &quot;trusted&quot; on both sides of the equation. While virtualization makes sure that the user can &quot;trust&quot; the software, on-the-fly memory encryption ensures that the software (developer) can &quot;trust&quot; the user (not to hack&#x2F;reverse engineer it).<p>The situation we will then be in allows for software&#x2F;content to be rented on demand without creators needing to fear that their software, or content, will be copied and shared with others. We will be downloading the programs&#x2F;data we wish to run to local, &quot;trusted&quot; machines (without the ability to copy it), and&#x2F;or running heavy workloads &quot;in the cloud&quot; streamed to the local machine.<p>If you think we already have this, then you&#x27;re not wrong, but it&#x27;s still in the baby steps. It&#x27;s not something that has yet reached the mainstream yet, but we&#x27;re getting there. UWP programs offered in the Microsoft Store are sandboxed by default, but the environment is not yet fully <i>trustable</i>.<p>Back in the early 2000s there were stories about TPM and how we will end up with paying money for copy&#x2F;pasting content, which got ridicouled, but have become a technological possibility in the present. Considering that the prevention of &quot;stealing&quot; content will always be a high priority, the scenario does not seem so unlikely to happen. Imagine that! A simple and straight-forward way of solving any and all copyright&#x2F;licensing issues simply by paying immediately.<p>So, to answer the question:<p>&quot;Could Microsoft be en route to dumping Windows in favor of Linux?&quot;<p>No. They&#x27;re dumping the whole concept of an OS entirely.<p>...<p>PS: Remember not to just downvote me without sharing your thoughts. This isn&#x27;t reddit. : - )')