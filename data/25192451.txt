Item(by='nickcw', descendants=None, kids=[25192822, 25193081], score=None, time=1606168805, title=None, item_type='comment', url=None, parent=25192127, text='You <i></i>can<i></i> build a O(n log n) multiplication with FFT based convolutions.<p>The trick is to only put as many bits into each number as are guaranteed not to overflow. So if the convolution is n long and you put B bits in to each &quot;digit&quot; then the output needs to be able to hold log(n)+2*B bits.<p>So if your convolution is done with double precision with 56 bits of precision and n = 1 million, log(n) = 20 so you put (56 -20)&#x2F;2 = 18 bits into each &quot;digit&quot;. You do your convolution, and ripple the carries at the end.<p>This is the way Prime95 does its maths, though it uses a IBDWT which through a bit of extra maths magic halves the length of the FFT needed. While it is rippling the carries at the end it checks to see if each number is pretty nearly an integer - if it isn&#x27;t them something has gone wrong and it blows up with &quot;FATAL ERROR: Rounding was 0.5, expected less than 0.4&quot;.')