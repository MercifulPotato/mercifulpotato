Item(by='dep_b', descendants=None, kids=None, score=None, time=1603271639, title=None, item_type='comment', url=None, parent=24845300, text='This.<p>Everything else that does more than mapping SQL results 1-1 to a query result and maybeeeee helps you with atomic actions like INSERT, UPDATE and DELETE ends up being a chore. They all have their own quirks like around threading and usually end up forcing you to design your application around it unless you take some measures to isolate it from your main application, which means you&#x27;re now writing code while you wanted to type less code.<p>Add to insult a ton of the them seem really resistant to map the results of hand-written queries to an object. Also SQL dependency trees and object dependency trees never really seem to map that well. And don&#x27;t try to do more complex queries with the built in query language in Django or .Net. I have sometimes spent hours trying to get an SQL query working in an optimal way that would not cost me more than 5 minutes two write and map with simpler ORM&#x27;s.<p>The other day I talked to a dev that was otherwise a very strong iOS developer in a discussion why I always used SQLite directly with a simple wrapper that said &quot;I really should learn SQL sometimes&quot;.<p>There probably hasn&#x27;t been a skill more universally useful in my career as a developer than SQL apart from HTTP? But it also made me think about why I never really learned to write C (I can read and futz with it).<p>For anybody new in the trade reading this, the following things have been or could have been useful at any step in my career:<p>* HTTP<p>* HTML<p>* SQL<p>* JavaScript (blegh but true)<p>* C<p>* Unix<p>The rest were just passing by for a while, like Windows, Flash, PHP or any god damn JS framework out there.')