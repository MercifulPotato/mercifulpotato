Item(by='Ericson2314', descendants=None, kids=None, score=None, time=1609392031, title=None, item_type='comment', url=None, parent=25586083, text='Yes me too, and shout out to <a href="https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;users&#x2F;hsyl20" rel="nofollow">https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;users&#x2F;hsyl20</a> behind this work, who has been doing the unglamorous work of refactoring away decades of tech debt in GHC like no person ever before, to the best of my knowledge.<p><a href="https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;ghc&#x2F;ghc&#x2F;-&#x2F;issues&#x2F;17957" rel="nofollow">https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;ghc&#x2F;ghc&#x2F;-&#x2F;issues&#x2F;17957</a> for example. You would think the Haskell compiler in Haskell would be a shining example of a pure functional programming, but you would be wrong!<p>(GHC most predates more modern ideas about how programs should leverage pure functional languages. I also speculate early on there was an &quot;innovation budget&quot; idea, conscious or otherwise, that if the language was novel, and the compilation analyses (e.g. strictness analysis) were novel, that was enough, and the domain-agnostic architecture of the compiler should be proven and bog-standard.)')