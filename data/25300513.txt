Item(by='chridou', descendants=None, kids=None, score=None, time=1607073899, title=None, item_type='comment', url=None, parent=25294022, text='&gt; However, for most people, using Rust for these purposes is absolutely not recommended.<p>Who are these &quot;most people&quot;? Can you get more specific here?<p>&gt; Java&#x2F;Kotlin paired with reactive streams makes these tasks super easy to read, once you get the hang of reactive streams. Also there are complexities in there, you just simply can&#x27;t brush all the intricacies of network programming and multi-threading under the rug, but at least you are dealing only with the complexities that are necessary for your problem.<p>The text goes pretty much into detail. I do not understand where Rusts streams are more complicated than the Java&#x2F;Kotlin&#x2F;Scala ones? Did you\never write an application with reactive streams and got problems with the thread pool, people unknowingly blocking in combinators, etc..?\nI&#x27;d dare to say that these things also add complexity that is not necessary to the kind of problems you defined as &quot;99% of ...&quot;<p>&gt; With Rust you are dealing with tons of additional complexity that doesn&#x27;t matter to 99% of people &amp; problems.<p>Where did you get that number from? What are &quot;tons of additional complexity&quot;?<p>&gt;  I just find it very alienating when people compare this to Python and do everyday tasks with it.<p>Maybe you just have not yet recognized that you can do everyday tasks with it?')