Item(by='Jtsummers', descendants=None, kids=None, score=None, time=1604519537, title=None, item_type='comment', url=None, parent=24991784, text='I&#x27;m reminded of <i>The Good Place</i>&#x27;s Chidi. If you go down this route, you&#x27;re likely to become paralyzed as you consider all the possible ways you might be harming others.<p>If the only factor in the energy consumption of a program was the efficiency of the code, then maybe. But different languages have different development and maintenance costs as well (both in terms of human and computer time). Different design decisions as well.<p>Hand-tuned assembler with mostly static bounds on memory consumption could lead to much more efficient executables (in terms of raw cycles). And compilation would be a relatively simple translation step, much faster than compiling every other language. But at a severe cost of often non-reusable code (so more time is spent writing the same things over and over), more time debugging the code (unless you&#x27;re really good at assembly or working on small programs).<p>At a minimum we could consider a &quot;simpler&quot; (by various measures) language like Pascal or C where it&#x27;s relatively straightforward to reuse code, and compilation isn&#x27;t as time consuming and can be fairly well optimized. But then we have to remember, there are reasons other languages are made. Usually having to do with programming ergonomics for particular problem domains. Then you build your Datalog or SQL interpreter on top of one of these languages and we&#x27;re back to something &quot;inefficient&quot; (not fully optimized).<p>And on this goes. We could ask much better questions like: Is most code worth writing&#x2F;running? Should we have several of the biggest tech companies in the US be, fundamentally, advertising companies? They produce and promote much more energy waste with their software than any programmer&#x27;s inefficient code is going to produce.')