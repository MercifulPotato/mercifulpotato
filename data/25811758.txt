Item(by='dathinab', descendants=None, kids=[25812492], score=None, time=1610899336, title=None, item_type='comment', url=None, parent=25799566, text='&gt; Runs within the same VM with strong safety guarantees.<p>You still generate code at runtime and there had been multiple Java vulnerabilities where features like &quot;runtime code loading&#x2F;generation&quot; and &quot;reflections&quot; lead to RCE vulnerabilities.<p>And sure you can RCE bytecode but so what, it&#x27;s still code which can do anything your application can do. I.e. the same as you have with &quot;unsafe&quot; attack vectors. And while you could try to use the VM as a security sandbox it requires additional work and at lest for Java is known to not work well and if you do so you can also spend additional work to sandbox binaries...<p>And then C#&#x2F;Java libraries still do bind to C&#x2F;C++ code, and their VM is still implemented in C&#x2F;C++ and neither VMs are meant to be a sandbox to allow running untrusted code (both had some features for this, in both cases but especially Java it didn&#x27;t work out well and by now both have dropped&#x2F;deprecated it).<p>&gt;  <a href="https:&#x2F;&#x2F;medium.com&#x2F;@shnatsel&#x2F;how-rusts-standard-library-was-" rel="nofollow">https:&#x2F;&#x2F;medium.com&#x2F;@shnatsel&#x2F;how-rusts-standard-library-was-</a>...<p>Sure, there had been a single bad security vulnerability in the standard library on stable. But so what. There had been more then one or two in fundamental parts of the JVM and probably for C#, too (IDK).<p>In the end neither rust&#x27;s unsafe nor Java&#x27;s&#x2F;C#&#x27;s VMs&#x2F;GC are meant as security protection mechanisms. <i>They are tools to make it easier to write correct code.</i> And more correct code also means less security vulnerabilities.<p>If you rely on any of them for security you already have lost.<p>Which doesn&#x27;t mean you can&#x27;t design VM&#x27;s for safety purposes, e.g. most JavaScript Browser VM&#x27;s are designed to safely isolate JS and even then there where cases of VM escapes. In  even then you might want to add at least one additional layer of protection and generally run all from the outside reachable services on properly locked down systems.')