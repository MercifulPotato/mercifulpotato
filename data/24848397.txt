Item(by='krastanov', descendants=None, kids=None, score=None, time=1603291687, title=None, item_type='comment', url=None, parent=24843917, text='I am confused why you assume I am a &quot;Julia booster&quot; or use such combative language. I love Python and Jax and use it for much of my research work, I just also like learning of other approaches. Please try to honestly address the sibling comments. We have repeatedly claimed that tools like Zygote.jl can autodifferentiate efficiently things that Jax can not (without a lot of extra special code and hand-defined backprop methods), e.g., an array of structs with scalar and vector properties over which a scalar cost is defined. Just give examples, so that we can both learn something new about these wonderful tools instead of using such offensive language. It is hard to not take your own comments as the ones being dismissive.<p>Also, look from where this conversation started. My claim was that jax does not work with &quot;(scipy ode solvers, special functions, image processing libraries, special number types (mpmath), domain-specific libraries)&quot;. A julia library does not need to know of Zygote.jl to be autodifferentiable. A python library needs to be pure-python numpy-based library to work with jax.<p>In order to try to contribute to the discussion: I think this paper describes relatively well what is so special about the Julia autodiff tools: <a href="https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;1810.07951" rel="nofollow">https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;1810.07951</a><p>For a separate approach, which is also very original, check out <a href="https:&#x2F;&#x2F;github.com&#x2F;jrevels&#x2F;Cassette.jl" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jrevels&#x2F;Cassette.jl</a>')