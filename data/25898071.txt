Item(by='m45t3r', descendants=None, kids=None, score=None, time=1611538544, title=None, item_type='comment', url=None, parent=25897476, text='This is one of the reason I think FP is better than OOP for business development.<p>You can still have entities (that are plain maps, possibly annotated with types so you can keep your sanity), but the business logic now works with simple data structures: you input some data and gets another more data back. Do this transformation a few more times and very complex business requirements can be expressed. Testing is also easy since most functions are pure.<p>Now you need to transform the data? Ok, convert this data to another data format and pass it to serializer. Same thing for deserializing.<p>Traditional OOP really makes this last step more complicated than it should, since now you have an object, and the object should be opaque so you don&#x27;t leak implementation details. To serializer you possible have a complex hierarchy of objects so your serializing logic is more complex too.<p>Of course OOP doesn&#x27;t need to do this, but the FP model seems so much simpler to enforce this data processing part.')