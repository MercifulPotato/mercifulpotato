Item(by='sleevi', descendants=None, kids=[25285513], score=None, time=1606967273, title=None, item_type='comment', url=None, parent=25284803, text='Happy to be up front here: as we call out in <a href="https:&#x2F;&#x2F;g.co&#x2F;chrome&#x2F;root-policy" rel="nofollow">https:&#x2F;&#x2F;g.co&#x2F;chrome&#x2F;root-policy</a> , the goal is to support the things the user installed and authorized.<p>The priority of constituencies for the Web is a little different than on Android. Android gives a lot of deference to app developers, even against user wishes (think things like screenshot detection or making it hard to intercept traffic without rooting). This gives it a more “secure” reputation for some purposes, but certainly isn’t always what users want. The web has a different set of priorities, as spelled out in <a href="https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html-design-principles&#x2F;#priority-of-constituencies" rel="nofollow">https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html-design-principles&#x2F;#priority-of-co...</a><p>I’m not going to argue which is better, but I will acknowledge there are tradeoffs in both. Chrome, the browser, tries to be the user’s agent to the Web.<p>Sometimes, however, being the users agent isn’t always cut and dry obvious. Extensions are a great way to empower users to mix the Web as they want, but they can also be a really harmful abuse vector. Finding the balance is tricky, and I know folks aren’t always happy with how that balance is struck, but a lot of thought and community engagement definitely goes in to it.<p>Now, how does this relate to what you were speculating about? Well, installing roots is similarly one of those things that’s dual-use. I love tools like Fiddler and CharlesProxy, and have fought hard to make sure they work well (see the token binding discussions, which would have totally broke these tools). These tools use locally installed certs to really empower developers and users, and I don’t want to break that! But there’s also stuff like <a href="https:&#x2F;&#x2F;security.googleblog.com&#x2F;2019&#x2F;08&#x2F;protecting-chrome-users-in-kazakhstan.html" rel="nofollow">https:&#x2F;&#x2F;security.googleblog.com&#x2F;2019&#x2F;08&#x2F;protecting-chrome-us...</a> , which can completely destroy users’ privacy and security, using locally installed roots. So, like with extensions, there’s a balance to be had, between enabling great use cases, while also protecting users from abusive things.<p>Obviously, as you note, problems like this could be “solved” by not allowing locally installed roots at all. When Kazakhstan required a root to be installed to compromise traffic, for example, Android and iOS users were largely protected precisely because “install this root” doesn’t really work as KZ intended. That’s great! But it’s also got downsides, like breaking Fiddler and Charles.<p>I can absolutely say that the reason for this new root program is exactly what is said on the policy, and similar to Mozilla’s explanation at <a href="https:&#x2F;&#x2F;blog.mozilla.org&#x2F;security&#x2F;2019&#x2F;02&#x2F;14&#x2F;why-does-mozilla-maintain-our-own-root-certificate-store&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.mozilla.org&#x2F;security&#x2F;2019&#x2F;02&#x2F;14&#x2F;why-does-mozill...</a> . This isn’t about trying to block all locally installed certs, like Android, but about providing good, safe, cross-platform and interoperable defaults.<p>But I also will acknowledge that there totally are concerns about <i>abusive</i> roots, whether from Unwanted Software, device compromise, or the like, and this will give better tools to help communicate, explain, and warn users as appropriate, so they have a chance to make an informed decision. For example, this can close off quite a few abuse vectors for malware, today, and that’s already a win. However, any big changes to how locally installed roots work are quite a while away, and, like so many of the changes that involve complex tradeoffs, will involve a lot of research to understand users’ needs and desires and use cases. So no, this isn’t some secret plot to prevent users from managing their device as they see fit, or from choosing the CAs they trust.')