Item(by='Silhouette', descendants=None, kids=None, score=None, time=1607186733, title=None, item_type='comment', url=None, parent=25315648, text='I respectfully disagree. Using tools provided by the standard library is common practice in any general purpose programming language. It just means that the algorithms you&#x27;re implementing can concentrate on the novel aspects that provide additional value and not get bogged down with reinventing wheels for the basic implementation details.<p>Also, you seem to be suggesting that it&#x27;s necessary to use unsafe code to implement these data structures in Rust. For something like the doubly-linked lists that were mentioned in an earlier comment, it usually suffices to use tools like Option and Rc for the links and to encapsulate the logic that manages those links inside functions like push_back and pop_back that you are surely defining to mutate your data structure anyway. Is there something specific you have in mind where this kind of strategy doesn&#x27;t work and unsafe code is the only solution?')