Item(by='steveklabnik', descendants=None, kids=[24802385], score=None, time=1602860111, title=None, item_type='comment', url=None, parent=24800637, text='There&#x27;s a couple of challenges here with Rust. None are insurmountable, but there are just other things that are higher priority.<p>There are 15,000 packages on Hackage, but 48,000 on crates.io. According to <a href="http:&#x2F;&#x2F;www.modulecounts.com&#x2F;" rel="nofollow">http:&#x2F;&#x2F;www.modulecounts.com&#x2F;</a> hackage is getting about four new packages a day right now, and crates.io is getting 54. This means that expense is more of an issue.<p>I don&#x27;t know about Haskell, but in Rust, many projects tweak various compiler flags, for performance, or whatever. You&#x27;d need to get the exact flags the same too. It&#x27;s possible there&#x27;s a long tail effect here.<p><a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;rustc&#x2F;platform-support.html" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;rustc&#x2F;platform-support.htm...</a> is way longer than <a href="https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;ghc&#x2F;ghc&#x2F;-&#x2F;wikis&#x2F;platforms" rel="nofollow">https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;ghc&#x2F;ghc&#x2F;-&#x2F;wikis&#x2F;platforms</a> (I am not 100% sure the latter is canonical). This isn&#x27;t a <i>hard</i> stopper, and there&#x27;s probably a long tail effect here, but it&#x27;s still a factor in you getting a precompiled binary or not.<p>Rust relies more heavily on inlining than Haskell does, and relies heavily on monomorphization This means more work to do during compilation; it also means that even for a &quot;precompiled binary&quot;, you still end up needing to do a lot of work on the final compilation.<p>There are existing tools like sccache that you can use to implement a binary cache, so people that really want this feature also have the ability to get it, and some do. It&#x27;s just not a globally available thing.<p>If you look at Rust&#x27;s compile times, generally, even once your dependencies are compiled, it&#x27;s still slower than we&#x27;d like. You only compile dependencies once, and so, while binary libraries may help your initial build, they don&#x27;t really affect later builds at all, and that&#x27;s most builds. So more effort is going into improving that, rather than focusing on pre-compiled dependencies.<p>That&#x27;s off the top of my head...')