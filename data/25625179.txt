Item(by='mikelevins', descendants=None, kids=None, score=None, time=1609707451, title=None, item_type='comment', url=None, parent=25620984, text='Other people are making the same point I&#x27;m about to make, but I&#x27;m going to try to clarify it anyway because, y&#x27;know, besides being a programmer, I&#x27;m also a technical writer, and I just have to scratch that itch.<p>Common Lisp source code (and the source code of its immediate ancestors) is not made of text strings. It&#x27;s made of S-expressions, which are made of cons cells, symbols, numbers, and so on.<p>A text file of &quot;Lisp source code&quot; does not actually contain Lisp source code. It contains a text-based serialization of Lisp source code. Other serializations are possible (and there are things you can do in a Common Lisp repl to see some of them).<p>The &quot;read&quot; in &quot;read-eval-print&quot; means &quot;deserialize the text into the source data that it&#x27;s meant to represent&quot;.<p>This point is not trivial pedantry because the full power of the Lisp language is available to the read process, and can be brought to bear on how reading is done and what happens when you do it. Compilers for other languages certainly do read text strings and convert them into tree structures and so forth, but the difference is that those data structures are private to the compiler; the data structures that Lisp reads into are standard parts of Lisp&#x27;s public API, as are the read function, the compile function, the eval function, the print function, and so on. It&#x27;s all on the table for you to work with.<p>The same is true of the disposition of the s-expressions produced by the read process; you have an opportunity to bring the whole of the Lisp language to bear on those s-expressions before they are ever passed to (compile or) eval. Then, once again, what eval produces is S-expressions, and those, not strings, are passed to the print function. You once again have the opportunity to intervene in the process that produces the text serialization.<p>It so happens that I&#x27;ve spent the past six months working on an AI machine-control system written in Common Lisp, and every one of these capabilities was an important part of the work we were doing.')