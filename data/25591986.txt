Item(by='creata', descendants=None, kids=[25593870], score=None, time=1609417155, title=None, item_type='comment', url=None, parent=25591151, text='&gt; That said, reading a list length (in O(n) time) and then performing an operation on it is usually an anti-pattern<p>Of course it&#x27;s unnatural for Haskell lists, but replace &quot;list&quot; with &quot;Array&quot; (or even just the height of a tree, which is merely O(log n)) and I feel that this is a very common and acceptable use.<p>&gt; If you want to touch a list twice, don&#x27;t mark it as linear.<p>But <i>why</i> are we counting how many times we &quot;touch&quot; the list? Wouldn&#x27;t it be nice to have some set of operations which get data out of the list without &quot;touching&quot; it?<p>Anyway, the other commenter points out that you can return the array as you compute its length, and yes, that is a common trick with linear types (Idris&#x27; experimental linear arrays do the same). But isn&#x27;t it better to express in the type system that you will use something &quot;nondestructively&quot;? As an added bonus, it&#x27;d probably be more ergonomic than constantly reassigning the list.')