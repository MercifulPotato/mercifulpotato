Item(by='WoodenChair', descendants=None, kids=None, score=None, time=1608797809, title=None, item_type='comment', url=None, parent=25525310, text='&gt; Something I have always been interested in trying is writing a chess engine that makes human-like moves.<p>This was one of the debates in computer chess in the ‘70s. Should a good engine spend a lot of time on evaluating each position like a human using many heuristics, or should it go for speed and depth? In a famous match Dartmouth CP[0] was able to tie Northwestern’s program (the reigning champ) using this approach. But ultimately it turned out search depth was much more important. Modern engines don’t need to compromise compared to the ‘70s. They can do a great deal of depth and also evaluate way more heuristics for each position than in the ‘70s. But there is of course still a trade off between how much you analyze each position and how deep you can get in a reasonable amount of time.<p>We covered this debate briefly in our podcast’s episode on computer chess:\n<a href="http:&#x2F;&#x2F;kopec.live&#x2F;episode&#x2F;03ab19084c9e408e&#x2F;computer-chess" rel="nofollow">http:&#x2F;&#x2F;kopec.live&#x2F;episode&#x2F;03ab19084c9e408e&#x2F;computer-chess</a><p>0: <a href="https:&#x2F;&#x2F;www.chessprogramming.org&#x2F;Dartmouth_CP" rel="nofollow">https:&#x2F;&#x2F;www.chessprogramming.org&#x2F;Dartmouth_CP</a>\nWhich includes details about its evaluation function')