Item(by='aequitas', descendants=None, kids=None, score=None, time=1604669798, title=None, item_type='comment', url=None, parent=25007306, text='I also have a single node &#x27;cluster&#x27; for the more bulkier (diskio) stuff that won&#x27;t fit the raspi&#x27;s. And it&#x27;s nice to have the same API accross all my setups. Apart from the data (backups, photos, media, etc) that is stored on the disk there is nothing of state worth saving on the node. If my root disk crashes, I just install K3s again and apply all configurations from the yaml files on my workstation and K3s pull everything back up as it was before.<p>As you said Linux does offer standardized packages, but they are not applications&#x2F;deployments. To get them running, beyond installing the binary, still requires a lot of configuration. Nginx (proxy, tls), a database maybe, storage&#x2F;LVM, firewall, etc.  So you quickly run into tools like Puppet and Ansible to manage this. The disadvantage is that they don&#x27;t reverse the changes they make. So if you want to try something out and deploy it with Ansible, there is no easy trivial way to undo it except for reverting all the changes individually. Also there is always the tempation to quickly tweak something by hand, forgetting to commit it to CM.<p>With a system like K8s, everything (container, volume, ingress) is a declarative configuration and the &#x27;system&#x27; works to converge to the state you declared. If you delete something, K8s will revert all changes. So there will be no lingering state or configuration left. Making everything way more managable imho.')