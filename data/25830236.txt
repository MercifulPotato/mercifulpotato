Item(by='rckoepke', descendants=None, kids=None, score=None, time=1611033249, title=None, item_type='comment', url=None, parent=25828701, text='I&#x27;ve done this exercise and generally what you want is a combination of your suggestion (which is elaborated by &#x27;polyphora[0]) and &#x27;p1necone&#x27;s suggestion [1]<p>Polyphora mentioned CIELAB as just one example, and it&#x27;s a good example. I believe state of the art these days is Oklab[2], talked about here[3]. I&#x27;d like to pull out a comment from &#x27;jiggawatts in that discussion:<p>&gt; This is a tour de force of colour theory, and should be mandatory reading for anyone serious about computer colour!<p>I completely agree.<p>With regards to &#x27;p1necone&#x27;s suggestion, k-nearest neighbors is one simple and relatively easy way to separate the colors into bins. I&#x27;ve only done this on a single image, but with multiple images maybe you could also k-nn bin the resulting colors from each image and only return bins which have multiple members.<p>0: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25828733" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25828733</a><p>1: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25828773" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25828773</a><p>2: <a href="https:&#x2F;&#x2F;bottosson.github.io&#x2F;posts&#x2F;oklab&#x2F;" rel="nofollow">https:&#x2F;&#x2F;bottosson.github.io&#x2F;posts&#x2F;oklab&#x2F;</a><p>3: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25525726" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25525726</a>')