Item(by='kthejoker2', descendants=None, kids=[25801387], score=None, time=1610777799, title=None, item_type='comment', url=None, parent=25798925, text='It is fractally amazing to see the exact same false dichotomy within data stores, DBMSes, and query engines themselves playing out in the &quot;market view&quot; of those same products.<p>That is:<p>The tradeoffs between all these systems has always been the effort required to create, modify, and maintain well-groomed (albeit rigid) schemas and data models versus the speed, scale and agility of a schema-on-read &#x2F; &quot;unstructured&quot; data storage mechanism.<p>Which is then counterbalanced by the tradeoff between getting quick, accurate (albeit rigid) answers of a well-managed data warehouse vs. having to string together fragile, complex ad-hoc wrangling and querying code.<p>So pick your poison: a junk drawer full of Legos or a beautiful sculpture with the head and an arm missing.<p>And the obvious answer is for most organizations you need both! Agility for bottoms-up discovery and exploration, and rigidity for top-down hard facts and shared objectives. (Maybe it&#x27;s a lakehouse, maybe it&#x27;s not, TBD.)<p>And then there&#x27;s this meta thing where NoSQL was pitched as a disruptor, agile, low barriers to entry, and RDBMSes and data warehouse vendors got this reputation as slow, rigid, too in love with their creations to change ...<p>And now there&#x27;s this reverse pushback - oh, actually these NoSQL vendors need to grow up and mature their products, that agility was just a lot of hype and chaos, these data warehouse vendors had the right ideas, they&#x27;ve learned to play the NoSQL vendors&#x27; game better than they have and their go-to-market strategies have stood the test of time ..<p>When (again!) the answer is you need both: disruptors bringing different paradigms to market, letting organizations pick and choose capabilities based on their needs, making legacy vendors adapt and evolve.<p>Funny to see that rhyme.')