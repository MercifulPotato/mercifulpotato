Item(by='webmaven', descendants=None, kids=[24713971, 24712727, 24713214, 24709856], score=None, time=1602087124, title=None, item_type='comment', url=None, parent=24707817, text='&gt; This isn&#x27;t how copyright works though. It&#x27;s neither necessary or sufficient. If you copy an API but change the words using a thesaurus you are still copying it so it would still be infringement. If by happenstance you come up with the same wording in your API, then that would not be copyright infringement because you didn&#x27;t copy anything.<p>That also isn&#x27;t how copyright works.<p>You&#x27;re essentially asserting copyright over the <i>semantics</i> of an API.<p>The semantics of an API <i>may</i> (although I would argue otherwise) be protected, but <i>if</i> they are it would have to be either as a design patent, or as trade dress, not as copyright.<p>That said, even if the un-synonymized API is protected by copyright (and I would generally argue otherwise), reimplementing it must be seen as fair use, all the more so an API with renamed functions.<p>For a more recent example: Amazon&#x27;s DocumentDB reimplements the MongoDB API. This should be allowed, even though we could wish Amazon had acted otherwise.<p>Here is the crux of the matter: unless there is some sort of no-man&#x27;s-land between the various intellectual property regimes for software, no interoperability will be allowed except that which a vendor explicitly opts into. If copyrights, trademarks, and patents overlap sufficiently, even clean-room reimplementations will be forbidden.<p>We can argue about which aspects of software should be protected, for how long, and by what means, but at the end of the day there must be an unprotectable area of some kind, or we&#x27;re all going to be doomed to either working entirely within vendors&#x27; vertically integrated stacks, or else implementing NSidedWheelAPIFactoryFactory() all the way down to bare metal for the foreseeable future.')