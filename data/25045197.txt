Item(by='Cogito', descendants=None, kids=[25046052], score=None, time=1605011270, title=None, item_type='comment', url=None, parent=25044942, text='I don&#x27;t know what you think git-flow is, but a linear history it is not.<p>Look at any post on git-flow (or even just the original [0]), and you will see a myriad of merges.<p>Quoting the original git-flow post:<p>&gt; <i>When the source code in the develop branch reaches a stable point and is ready to be released, all of the changes should be merged back into master somehow and then tagged with a release number. How this is done in detail will be discussed further on.</i><p>The examples further on all use `git merge --no-ff` (ie no fast forward).<p>This is very different to what is described in this post:<p>&gt; <i>When merging fixes and features into master, we avoid merge commits and use rebases and fast-forward as much as possible. This makes the branch very easy to browse, understand and work with â€“ as it is 100% linear.</i><p>So no, this is not git-flow.<p>[0] <a href="https:&#x2F;&#x2F;nvie.com&#x2F;posts&#x2F;a-successful-git-branching-model&#x2F;" rel="nofollow">https:&#x2F;&#x2F;nvie.com&#x2F;posts&#x2F;a-successful-git-branching-model&#x2F;</a>')