Item(by='miki123211', descendants=None, kids=None, score=None, time=1603659845, title=None, item_type='comment', url=None, parent=24887521, text='Things I like about Go (in this order):<p>* useful, not shiny. No new framework every year, just for the sake of it. An actually readable spec. Changes heavily thought through before being introduced. A programming language isn&#x27;t a place to move fast and break things, as changes often cannot be undone.<p>* Readable code. You can figure out what a piece of code does pretty easily. Even if you can&#x27;t do so at first glance, you know where to look next.<p>* Simplicity. I personally like having full understanding of things. This applies both to the language itself, as well as to the tools (go test, go mod, go generate etc). This is pretty subjective.<p>* The formatter. As a screen reader user, aligning things with spaces so that they would form nice little tables is a hard task for me. I&#x27;m happy I don&#x27;t have to do so.<p>* Compiling programs as  single, static binaries, assets included.<p>Some small things I don&#x27;t like (also in that order):<p>* No try macro[1]. IMO try was a better solution than exceptions, and I found the arguments against it not that compelling.<p>* Overrelliance on struct tags, which shouldn&#x27;t exist at all IMO. I don&#x27;t want to couple my business logic, storage and view layers. Options for i.e. JSON should be specifiable at call time.<p>* No generics, or, even better, zig-like comptimes. They&#x27;re simpler and more powerful, though they wouldn&#x27;t probably neatly fit into go2.<p>Overall, I&#x27;d give go about 8.5&#x2F;10.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;proposal&#x2F;blob&#x2F;master&#x2F;design&#x2F;32437-try-builtin.md" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;proposal&#x2F;blob&#x2F;master&#x2F;design&#x2F;32437-...</a>')