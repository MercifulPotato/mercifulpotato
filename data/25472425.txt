Item(by='ptr', descendants=None, kids=[25472965], score=None, time=1608327806, title=None, item_type='comment', url=None, parent=25472150, text='This is the crux of the matter. Design patterns are just common structures that have been found useful at some point in some context. Some programming languages have adopted these patterns, adding &quot;native&quot; support for them. If your programming language didn&#x27;t have parameters, then yes, I guess someone would add the &quot;Parameter Pattern&quot;. It&#x27;s all rather arbitrary what ends up in a book on &quot;design patterns&quot;.<p>Regarding the strategy pattern, when does it start becoming the pattern and when is it just &quot;passing a function as a parameter&quot;?<p><pre><code>   sortList(list, [](const item&amp; i) {return i.name();});\n\n   struct MySorter\n   {\n      bool operator ()(const item&amp;) {...}\n   };\n\n   sortList(list, MySorter{});\n\n   class MySorter : public ISorter\n   {\n   public:\n      virtual bool execute(const item&amp;) override {...}\n   };\n\n   sortList(list, MySorter{});</code></pre>')