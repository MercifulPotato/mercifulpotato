Item(by='MaxBarraclough', descendants=None, kids=None, score=None, time=1607943129, title=None, item_type='comment', url=None, parent=25415448, text='&gt; the more bugchecked and field tested the code is, the more obscure any bug that surface is?<p>Right. A battle-tested codebase only has subtle errors, as the obvious ones will all have been fixed. An immature codebase has subtle errors <i>and</i> more obvious ones.<p>&gt; GCC compiles to alot of architectures. I have a hard time imagining any modern language compiling to all those platforms without quirks in practice.<p>Compiler bugs are a separate issue from undefined behaviour and surprising language subtleties. With mature compilers they&#x27;re pretty rare, but they do happen.<p>JavaScript is a good example. There&#x27;s no undefined behaviour in JavaScript. That&#x27;s vitally important given that JavaScript engines have to be able to run untrusted code. If JavaScript code is able to cause undefined behaviour, that&#x27;s a serious security issue in the engine. Such bugs do happen, of course, but they aren&#x27;t all that common. Generally, JavaScript runs fine regardless of whether you&#x27;re running on x86, AMD64, or AArch64. Same goes for Java.<p>(I admit I&#x27;m ignoring the possibility of a constrained&#x2F;contained kind of undefined behaviour where the JavaScript context might see things go haywire but the process containing the JavaScript environment is unaffected.)')