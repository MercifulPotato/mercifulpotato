Item(by='ocornut', descendants=None, kids=None, score=None, time=1604514315, title=None, item_type='comment', url=None, parent=24990829, text='&gt; Sure, a button function that returns a boolean can be used as a simple parameter to an if statement, but you would would need a switch statement to test for all the different events that a text editor could send. That&#x27;s a terrible clumsy API!<p>Yes indeed, it would be stupid for a text editor to force you to react on one million events or state changes. But this not how text editors are used. To use  text editor in most case you only care about the text contents. Any other information is opt-in.<p>&gt; And where do you store the complex state of the attributed text, or parsed source code in a code editor? Do you just pass the entire string in every frame and re-parse html each time?<p>You store it wherever you&#x27;d store it normally. Many of your question are assuming - and it&#x27;s a misunderstanding - that IMGUI means that everything HAS to be recomputed every frame. What matters if the interface presented to the UI programmer. Of course the non-trivial text editor requiring a heavy parser, is going to store data if it needs to do so. What&#x27;s the problem? Did you expect that IMGUI used zero-byte of memory and never store anything?<p>Text editor:\n<a href="https:&#x2F;&#x2F;github.com&#x2F;ocornut&#x2F;imgui&#x2F;wiki&#x2F;Useful-Widgets#text-editors" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ocornut&#x2F;imgui&#x2F;wiki&#x2F;Useful-Widgets#text-ed...</a><p>&gt; You can&#x27;t just store that state in the actual objects you&#x27;re showing in the outline, because that mixes your user interface layer with your data modeling layer.<p>Ever heard of data structures? You can associate data to an object given its ID without storing data inside the object.. This is what practically any advanced widgets in IMGUI land work. If you need 1 piece of data, use a dumb containers, if you need N pieces of data, use a map.<p>&gt; And how do you implement efficient scrolling lists or tables or spreadsheets containing thousands or even hundreds of thousands of items? Do you have to pass every single item through the API every frame, instead of implementing callbacks to only pass and cache the items that fit on the screen?<p>You use a function call helping you to submit only items that fit on the screen. There&#x27;s literally a helper for that in dear imgui.\nAt this point I&#x27;m assuming you have never used what you are criticizing.<p>&gt; And how do you implement graphics editors?<p><a href="https:&#x2F;&#x2F;github.com&#x2F;ocornut&#x2F;imgui&#x2F;wiki&#x2F;Useful-Widgets#node-editors" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ocornut&#x2F;imgui&#x2F;wiki&#x2F;Useful-Widgets#node-ed...</a><p>&gt; Or drag and drop previewing? Or popping up item specific menus and submenus when you right-click on a list or outline item?<p>That&#x27;s widely shown in the demo.')