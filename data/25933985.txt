Item(by='ben509', descendants=None, kids=[25934284, 25937122], score=None, time=1611781754, title=None, item_type='comment', url=None, parent=25933121, text='I think OO caught on because it encourages people to organize their thoughts, and good structure alone brings a tremendous improvement in code.<p>I think the reaction to it is more the &quot;everything is mutable&quot; approach most OO languages took, which led to things that looked organized but that were a hot mess of side-effects.<p>With dataclasses (or attrs) you can cut back on that by freezing everything, and still get the clarity of methods that lay out the essential functionality of a type.<p>In their own example, &quot;get_items&quot; and &quot;save_items&quot; make a bit more sense if they&#x27;re stashed away in the Client namespace, and you can see that they&#x27;re essential to what a Client does.<p>And while Oil&#x27;s conjecture is probably right, I&#x27;m not sure it survives if you add the caveat, &quot;in that same language.&quot;<p>For instance, Python doesn&#x27;t have a native way of expressing sum types outside of inheritance. That&#x27;s not to say inheritance, especially an always open style, is a good way of working with a sum type, it&#x27;s just the only native way.')