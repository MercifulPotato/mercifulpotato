Item(by='danShumway', descendants=None, kids=[25591353, 25590978, 25590995], score=None, time=1609405046, title=None, item_type='comment', url=None, parent=25590764, text='&gt; then why doesn&#x27;t one already exist?<p>I think that&#x27;s the big question that these threads need to be asking, because it&#x27;s not just that it doesn&#x27;t exist for the web. It doesn&#x27;t exist anywhere for any platform.<p>Coming in and just saying, &#x27;HTML5 can&#x27;t replicate Flash&#x27; -- not only is that inaccurate, it&#x27;s unhelpful. We need to ask what modern developers need and why we seem to be unable to supply that. What are our modern tools missing? Would Flash still be relevant for indie development today? Do we need something more extensive or powerful? Do we need to rethink developer workflows? Is the problem funding, or finding a way to monetize, or is it a community problem where we just can&#x27;t get indie devs to standardize on one tool?<p>Every thread where people complain about the loss of Flash could be a really productive conversation about what a modern animation engine would need and how we could build one. But instead it&#x27;s just people re-litigating a 15-20 year old fight for no reason.<p>Because the APIs are there. Any company could build an animation engine today that output to any low-level language: C, Rust, whatever. And the output could be compiled to WASM and the pixel buffers could be rendered to a canvas. We could even do smart updates and partial re-renders and cache large operations on separate canvases. Or that frame compilation could happen behind the scenes in WASM and the image data could be spit out as a single array of pixels. We could do all of the optimizations we need.<p>But that tool doesn&#x27;t exist. It doesn&#x27;t exist for the web, or for iOS, or for Android, or for Windows, or for any modern console. Why? That&#x27;s the productive question to ask, that&#x27;s the question that will actually help us make progress towards replacing Flash. The only thing the web can provide is APIs and technology, at some point game devs need to stop complaining about the web in specific and start asking why our game dev tools in general aren&#x27;t up to snuff.')