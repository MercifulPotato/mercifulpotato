Item(by='spapas82', descendants=None, kids=[24697990], score=None, time=1601993907, title=None, item_type='comment', url=None, parent=24694374, text='The main problem with Celery is its overuse in the python world. It&#x27;s not a bad project but sees a lot of negativity because it&#x27;s used in places where it shouldn&#x27;t! There are a lot of tutorials suggesting that using &quot;async tasks&quot; are required if you are interfacing with an external service (i.e like sending email). Most of these people suggest to actually use Celery for that.<p>Well, the fact is that if you are sending a couple of emails per hour for users that are registering to your site you <i>don&#x27;t need to use async tasks</i>. Just offload them to your SMTP or use something like sendgrid. It won&#x27;t matter to the user if there are a couple of seconds until he sees the http response or he gets the email after 1 minute. Also, even for other kinds of async tasks you can usually get away using a management command and a cron job running once per minute. Let&#x27;s suppose your users may need to create a report that needs 1 minute to be created. Just flag it to run in your request response cycle and run it in the management task from cron. The user will be notified when it&#x27;s been finished. Or even if you actually need that async task functionality, just start by using a <i>simpler</i> way to run async tasks (that aren&#x27;t as complex as celery, don&#x27;t need rabbit mq and can even use the database as a broker so you won&#x27;t need any external parts). You almost probably don&#x27;t need to support hundreds of async tasks per minute or complex task workflows using forks joins etc. I mean if you need to use celery you probably will know it.')