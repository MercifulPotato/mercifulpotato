Item(by='elseweather', descendants=None, kids=None, score=None, time=1610700950, title=None, item_type='comment', url=None, parent=25785708, text='This is a <i>fascinating</i> article that winds through a whole raft of problems that feel super relevant in the software world today: end-to-end encryption, distributed messaging, what we would today call &quot;containerization&quot; (in 1984!), many other things besides. I often dislike this kind of abstract general nonsense but I think there&#x27;s a really interesting through-line here I hadn&#x27;t noticed before.<p>One thing that struck home with me was this line:<p>&gt; Some of these source files were corrupted by byte exchanges, and their owners were forced to the ultimate end-to-end error check: manual comparison with and correction from old listings.<p>At work I sometimes joke that us SWEs are the last line of retry-and-checksum defense, but it&#x27;s not a joke! This paper argues correctly that engineering extreme reliability into lower level common components is uneconomical, but on the other hand pushing reliability all the way up the stack doesn&#x27;t work either. If you surface the jank all the way up to your customers you just have a buggy, crappy product and your business will fail. One level down, if you rely on talented engineers to fight operational fires all the time you have to pay a lot of expensive engineers to not make progress delivering features.')