Item(by='eyelidlessness', descendants=None, kids=[25894926], score=None, time=1611514442, title=None, item_type='comment', url=None, parent=25891435, text='I think I agree with basically everything on the list except one (I don’t think rgb&#x2F;hsl should accept alpha arguments, rather rgba&#x2F;hsla should have been available from the start; but that’s probably an unrealistic expectation given the performance impact at the time), but haven’t thought through all the ramifications.<p>But one thing I’m disappointed isn’t on the list is a syntax sanity and unification proposal. CSS is a DSL so it gets some flexibility here, but there are <i>far too many</i> syntax variations for the same basic language primitives.<p>- Either all functions should require arguments separated by commas, or treat all commas between arguments as whitespace (helllloooo lisp)<p>- More to the point, a slash as an argument separator is bonkers. The rgb&#x2F;hsl syntax breaks my brain every time I see them with an alpha value.<p>- Every shorthand should have a longhand equivalent (they’re finally fixing transform, but this is another syntax disaster).<p>- Lists should have delimiters at all. Or they should be an explicit function.<p>- Keywords should have some kind of sigil. The current state is untenable, as the keyword space is enormous and ever growing, making invalid bare strings (often used for browser compat) dangerously likely to become valid on unmaintained sites. The “don’t break the web” counter-instinct makes introducing new features almost guarantee more syntax fracturing.<p>- Either media queries should have been a part of selectors, or  nesting should have been made available across the board (though I’ve seen rumors that this is being considered).<p>- Existing properties should get new values rather than introducing an ever growing, increasingly confusing, set of similar properties that do slightly different things in ways that are so inscrutable that even MDN can’t explain them in plain language.<p>- Feature forking should have its own syntax (eg or&#x2F;cond type functions), not implemented as multiple definitions of the same property.<p>Partly syntax, partly behavior:<p>- Every pseudoclass should have a -within suffix equivalent, not just focus.<p>- Equal-specificity rules should be considered more specific by the order they apply to elements (ie the order classes are applied in markup), not the order they’re defined in the stylesheet. Atomic CSS is brilliant, but a minefield to generate programmatically (with any library in the space left to write tomes on ordering caveats), because the specificity spec is just plain wrong.<p>- Functions should be composable. And I’m thinking specifically about color manipulation here, so while I’m on the topic, HSLuv or some other perceptual color space should be supported.<p>- Styles in general should be composable <i>in stylesheets</i>. This can be as simple as a native extends keyword modeled on SASS, or as a function.')