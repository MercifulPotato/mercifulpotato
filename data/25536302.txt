Item(by='cesarb', descendants=None, kids=None, score=None, time=1608902489, title=None, item_type='comment', url=None, parent=25536248, text='In Rust, memory leaks are considered &quot;safe&quot;; you don&#x27;t need unsafe to create a memory leak. There&#x27;s even a function in the standard library (std::mem::forget) to explicitly leak a value, and it&#x27;s not marked as unsafe. And even without that function, it&#x27;s very easy to leak memory in safe code (just create a cycle with reference-counted values).<p>But yes, memory managers generally require unsafe. Consider what happens when you release memory containing a value of type A, and that memory is later allocated for a value of type B. This is equivalent to a transmute between types A and B, which requires unsafe.')