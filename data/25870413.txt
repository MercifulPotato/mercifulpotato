Item(by='OskarS', descendants=None, kids=None, score=None, time=1611311960, title=None, item_type='comment', url=None, parent=25868949, text='It&#x27;s blows my mind that something like this hasn&#x27;t been in the standard library for, like, 20 years. Like, why can&#x27;t i do this?<p><pre><code>   std::string str = &quot;Values: &quot;;\n\n   for (auto &amp;[key, val]: dict) {\n       str.append(&quot;%s: %d, &quot;, key, value);\n   }\n</code></pre>\nThis is so much nicer to use than stringstream, and it&#x27;s also so much more efficient! You could allocate a &quot;big enough&quot; string at the beginning, and then you would have no more allocations. You could also reuse the string, so you can avoid almost all allocations for the lifetime of the program. This is basically impossible to do with stringstream: it&#x27;s just insane about copies and allocations, and it&#x27;s more or less impossible to reuse buffers.<p>The C++ format strings are an improvement, but just this simple thing (a super straight-forward translation of printf to C++ std::strings) is basically all you would ever need. C more or less got it right in the 70s, and then C++ spent decades with its own (significantly worse) solution.')