Item(by='blackrock', descendants=None, kids=None, score=None, time=1606535940, title=None, item_type='comment', url=None, parent=25229291, text='Perhaps you should perform a self-reflection first?<p>Maybe you can stop forcing engineers to jump through hoops to pass your stupid l33t testing questions? You might think youâ€™re hiring the smartest guy, for the cheapest price, but instead of getting a good engineer that can write solid code, you get a code monkey that throws shit into your engineering process. Think about that for a moment.<p>Maybe you can set realistic deadlines?  And readjust them as the requirements change in midstream.<p>Maybe you can hire managers that understands the complexities of software development?  So they can actually manage effectively for a change.<p>Maybe you can avoid putting your employees through death marches to solve some arbitrary business problem?<p>Maybe you can get rid of your stupid open office seating arrangement, thereby forcing your most valuable employees to sit in such close proximity to one another? Thank god for Covid-19! That finally put a check on this stupid business practice.<p>Maybe you can stop viewing your employees as a cost center, and start to view them as an asset? Since the job of the engineer, is to help automate some process, he is actually reducing labor needed elsewhere, which costs you actual money if you had to pay an analyst to do it. The engineer automates this part of the job. And once you have a system in place, the initial investment pays for itself.<p>Maybe you can stop doing stupid employee ranking scenarios, like your stupid Stack-Ranking game, where your goal is to kill the bottom 10% regardless. This pits your best employees, your assets, against one another, in a Lord-of-the-Flies fight to the death challenge. This is not a very good scenario to engender loyalty from your best employees, again, your best assets.<p>Anything else?')