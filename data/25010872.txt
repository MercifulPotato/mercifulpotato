Item(by='theptip', descendants=None, kids=[25025317], score=None, time=1604694840, title=None, item_type='comment', url=None, parent=25007689, text='Unfortunately it&#x27;s tricky to add new fields in a zero-downtime fashion without making them nullable. Django does not store defaults in the DB (this is surprising, and the opposite of the Rails approach), and this means that if you upgrade your DB first, until you&#x27;ve upgraded your application all writes to your model are going to fail because the (down-level) application code doesn&#x27;t know it has to specify the (up-level) DB field.<p>From chatting to folks, most applications just YOLO this, and accept downtime on every such DB operation; you might not even notice that this is happening at first because you&#x27;d need to have a create _during_ your DB migration. It&#x27;ll bite you sooner or later though. I&#x27;m sure for many apps a client-side retry is totally acceptable, assuming it&#x27;s safe to do so.')