Item(by='jchw', descendants=None, kids=[24996875], score=None, time=1604555335, title=None, item_type='comment', url=None, parent=24987829, text='If you want a better server-side solution, you could try employing mandatory idempotency tokens in the request payload. The concept is simple: either have the server give the client an idempotency token as part of the page load, or have the client request one at some point, or have it be something that can be generated on the client side (nonce style) and send it with the request. The server can then validate, using some strongly consistent system, that it has not received any requests in a certain window of time with that token. (Or, possibly, react with the existing response.)<p>This has an additional benefit that even methods like PUT do not: it works no matter how many layers of your stack might have retry behavior (properly or improperly) and enables safe retry even when you can’t be sure if the request went through or not. The primary downside is that it introduces a single point of failure, though you could theoretically shard it by some property of the request such as the session key&#x2F;user id&#x2F;IP address. Still desirable if you have something you really don’t want to repeat, like a transaction. (Probably would be wise to <i>also</i> make those multiple stage, but nonetheless.)<p>Goes without saying you should definitely still mitigate this on the client side by updating the UI state if JavaScript is available.')