Item(by='sixdimensional', descendants=None, kids=None, score=None, time=1609608204, title=None, item_type='comment', url=None, parent=25611729, text='Think of it like this - please, go ahead and use graphs and state machines.  If you would like to model the operation of those graphs or state machines, one way to do it is to model them using Petri nets.  And if you use Petri net modelling, you get some nice properties that have mathematical proofs behind how it works.  And they might be handy for working out logical problems with your graph or state machine due to how they are constructed- which you discover based on the language Petri nets give you for talking about the process.<p>Like, set logic in relational modeling.. if you abide by that technique, set logic gives you certain guarantees about operational characteristics that have mathematically proven grounding.  It gives you primitives for talking about set operations, like union, difference, intersection, join, etc.<p>Petri nets are a modelling technique.  Activity diagrams (UML) are another way of expressing similar processes, but they don&#x27;t necessarily have the mathematical grounding inherent in the way you model Petri nets.<p>Perhaps yet another way of saying it is that Petri nets are closer to a visual modelling language of execution that shows more of the logic of the concerned process or system.')