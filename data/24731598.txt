Item(by='stephen_cagle', descendants=None, kids=None, score=None, time=1602261152, title=None, item_type='comment', url=None, parent=24729913, text='I have recently looked at 2 nocode solutions:<p>* <a href="https:&#x2F;&#x2F;www.glideapps.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.glideapps.com&#x2F;</a>\n* <a href="https:&#x2F;&#x2F;honeycodecommunity.aws&#x2F;" rel="nofollow">https:&#x2F;&#x2F;honeycodecommunity.aws&#x2F;</a><p>I was particularly impressed with glideapps as it allows you to build most of your app with excel sheets (google sheets actually). I think the thing that surprised me the most was that I previously though (clojurescript) coding was the best solution for any app more complicated than a recipe book. However glide caused me to realize that there is a solid (though very broad) set of apps that are best built with these nocode solutions.<p>I thought it was a bit of a marketing stretch to call honeycode a &quot;nocode&quot; solution. When you are pasting things like `FINDROW(Leads, &quot;Leads[Region] = &quot;&quot;West&quot;&quot;&quot;)[Email]` in your application I think you are coding. It does however have a pretty advanced relation model and also lets you build your (a bit ugly, lets be honest) UI with a nice WYSIWYG editor.<p>Anyway, nothing profound to say about it. But these nocode solutions are powerful in ways that aren&#x27;t directly addressed by software engineering.<p>1) When doing nocode, your mental framework shifts from &quot;How can this be done?&quot; to &quot;Is it ok to do without this thing?&quot; As a software engineer you are used to modifying anything. You think of solutions. When you are nocoding though you are a user of a service and therefore are limited to what the service provides. You ask &quot;can I do without?&quot; Rather than &quot;How can this be done?&quot; It is a change of perception.<p>2) No coding opens up a world of application development to a solid majority of the population. Like the printing press, the quality will go down on average but the volume will make up for it. :)<p>3) No coding maybe has problems when analytics, scaling, aggregation, etc. come into play.<p>4) In my experience when I have walked up to nocoding solutions as a software engineer, they are just messes in terms of untangling. I don&#x27;t know if nocoding solutions have great migration stories. With that said, I think most businesses may not need to upgrade to code from their nocode solution as they will never scale to those needs.<p>Anywho, those are some random thoughts. I will give this Unqork a looksy next, sounds neat.')