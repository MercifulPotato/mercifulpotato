Item(by='derefr', descendants=None, kids=[24829986], score=None, time=1603120851, title=None, item_type='comment', url=None, parent=24826663, text='&gt; It makes no sense<p>Why so? &lt;head&gt; is a conventional place for tags <i>with document metadata semantics</i> to live, but &lt;head&gt; has no semantic meaning itself. (I think the only thing one could say about how UAs treat &lt;head&gt; is that some scraping robots might <i>only</i> parse &lt;head&gt;, discarding &lt;body&gt; entirely.)<p>And read my words above again: tags <i>with document metadata semantics</i>. Not “metadata tags.” <i>All</i> tags are just containers for DOM nodes or text, whatever additional implications they carry for the document. HTML is &quot;a markup language for text first, and a container format for web pages second.&quot;<p>IMHO, &lt;title&gt; especially should be styled for display more often. It works great as an effective “&lt;h0&gt;“ tag, rather than duplicating &lt;title&gt;&#x27;s text into an explicit &lt;h1&gt; somewhere in the &lt;body&gt;. That way, the document only embeds its own title in one canonical location—a title which both gets rendered on the page, and displayed in the title bar. (And if you’re worried about positioning, there’s nothing saying you can’t put your &lt;title&gt; <i>in</i> your &lt;body&gt;. Yes, it will do the right thing.)<p>Tangent: in fact, there&#x27;s really no reason to have &lt;head&gt; and &lt;body&gt; in your document at all. You can just declare &lt;html&gt; and start spitting tags. IMHO, despite going against a long-standing trend, it&#x27;s a much more practical arrangement—especially if you keep all your &quot;outside the content&quot; formatting to CSS, and apply that CSS using <i>a response header</i> (<a href="https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html401&#x2F;present&#x2F;styles.html#h-14.6" rel="nofollow">https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html401&#x2F;present&#x2F;styles.html#h-14.6</a>). If done correctly, your &quot;full document&quot; HTML can look exactly like your XHR-response &quot;patch&quot; HTML, such that your API endpoints can themselves render as full documents when viewed separately—without changing what they return! (I really need to blog about this.)')