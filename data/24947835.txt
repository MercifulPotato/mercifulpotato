Item(by='e12e', descendants=None, kids=None, score=None, time=1604100571, title=None, item_type='comment', url=None, parent=24944415, text='&gt; I had the impression RPC was seen as a mistake.<p>For hypermedia&#x2F;hypertext Fielding made a solid argument for preferring REST over RPC (mostly because of caching). I still recommend reading his very approachable thesis - these days <i>not</i> so much for the web&#x2F;REST architecture, but for the other ones, which include modern SPAs (they&#x27;re <i>not</i> great as hypermedia apps, but fine as networked applications):<p><a href="https:&#x2F;&#x2F;www.ics.uci.edu&#x2F;~fielding&#x2F;pubs&#x2F;dissertation&#x2F;top.htm" rel="nofollow">https:&#x2F;&#x2F;www.ics.uci.edu&#x2F;~fielding&#x2F;pubs&#x2F;dissertation&#x2F;top.htm</a><p>Apart from caching (and cache invalidation) it&#x27;s accepted that making the network invisible is a bad idea - it will lead to issues. So remote procedure calls aren&#x27;t inherently bad, but blurring the distinction too much between local procedure calls and remote ones aren&#x27;t a great idea. From hung nfs mounts to unpredictable application performance, it is unpleasant.<p>This Netflix talk on their not-graphql framework gives a very nice summary of when and how you might prefer RPC to REST:<p><a href="https:&#x2F;&#x2F;youtu.be&#x2F;hOE6nVVr14c" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;hOE6nVVr14c</a>')