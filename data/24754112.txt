Item(by='StefanKarpinski', descendants=None, kids=None, score=None, time=1602509131, title=None, item_type='comment', url=None, parent=24748920, text='For the historical record, when we picked those benchmarks [1] we were terrible at them. Like 10,000x slower than C. We picked them because they were representative of the kinds of things that we felt a language should be good at: iteration, recursion, shuffling data in arrays, floating-point operations, complex number arithmetic, string operations, small matrix operations and large matrix operations. Then we worked on the language until it was no worse than 2x slower than C. So claiming that we cherry-picked those benchmarks because they made Julia look good simply isn&#x27;t historically accurate: we picked them because they made Julia look bad, and then we improved Julia until it didn&#x27;t look bad anymore.<p>[1] <a href="https:&#x2F;&#x2F;julialang.org&#x2F;benchmarks&#x2F;" rel="nofollow">https:&#x2F;&#x2F;julialang.org&#x2F;benchmarks&#x2F;</a><p>The only faster way to read CSV files in R that I&#x27;m aware of is vroom, which is faster because it&#x27;s lazy: it doesn&#x27;t parse until you actually access the data. According to vroom&#x27;s own benchmarks, if you access all the data, it is slower than data.table, which is compared here. So yes, if you want to load a CSV file and not access most of the data, then vroom is faster; if you want to access all of the data (which seems pretty typical), it is not faster.<p>Regarding &quot;nonstop attacks on other languages&quot;, honestly, we don&#x27;t care and would be happy to stop talking about other languages. However, there is a constant barrage of people making comparisons to other languages and demanding that we justify Julia&#x27;s existence. Like it is literally offensive to people that Julia exists â€” &quot;why didn&#x27;t you just use Python&#x2F;R&#x2F;Matlab?!??!&quot; I cannot express how continual this is. So many people have asked to see these <i>exact</i> benchmarks comparing CSV.jl to read.table and Pandas&#x27; csv reader. So here are the benchmarks. If you see a mildly worded benchmark comparison showing that one CSV library is faster than some others as &quot;an attack&quot;, then you are too good for the internet.')