Item(by='saghm', descendants=None, kids=[25564421], score=None, time=1609189216, title=None, item_type='comment', url=None, parent=25562602, text='Yes, you&#x27;re correct. From the documentation on std::mem::forget[1]:<p>&quot;forget is not marked as unsafe, because Rust&#x27;s safety guarantees do not include a guarantee that destructors will always run. For example, a program can create a reference cycle using Rc, or call process::exit to exit without running destructors. Thus, allowing mem::forget from safe code does not fundamentally change Rust&#x27;s safety guarantees.<p>That said, leaking resources such as memory or I&#x2F;O objects is usually undesirable. The need comes up in some specialized use cases for FFI or unsafe code, but even then, ManuallyDrop is typically preferred.<p>Because forgetting a value is allowed, any unsafe code you write must allow for this possibility. You cannot return a value and expect that the caller will necessarily run the value&#x27;s destructor.&quot;<p>[1]: <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;mem&#x2F;fn.forget.html#safety" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;mem&#x2F;fn.forget.html#safety</a>')