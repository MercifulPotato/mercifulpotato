Item(by='JMTQp8lwXL', descendants=None, kids=[24690312, 24690448, 24690255, 24691545, 24691713, 24692492, 24690795], score=None, time=1601920769, title=None, item_type='comment', url=None, parent=24688932, text='The concept is called &#x27;optimistic updating&#x27; and the intent is to make the UI &#x27;feel faster&#x27; by assuming a positive response from the back-end, and only reverting when things go awry. Given the vast majority of messaging attempts will complete successfully, it&#x27;s easy to see why the interaction pattern is used.<p>The converse is pessimistic rendering: waiting for the server response before updating the UI (and possibly showing a loading spinner in the interim).<p>Facebook Messenger has the best UX paradigm for this I&#x27;ve seen, since it&#x27;s most graceful in handling the edge case failures while still presenting as optimistic. Your message immediately appears as a conversation bubble, with an icon displaying if the server has received it, an &#x27;X&#x27; if it fails (clicking the icon gives you options: re-send, delete, etc), and a read receipt for when the other party views the message. It&#x27;s a fantastic way of handling the lifecycle.<p>Slack fails because it doesn&#x27;t communicate that pending, the-server-hasn&#x27;t-received-it-yet status, and the fallback isn&#x27;t as graceful.')