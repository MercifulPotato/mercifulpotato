Item(by='breatheoften', descendants=None, kids=None, score=None, time=1607110560, title=None, item_type='comment', url=None, parent=25302181, text='I&#x27;m not sure I really think of  function coloring as a &quot;problem&quot; ...<p>facebook is experimenting with auto differentiation for Kotlin and looks like it&#x27;s adding a new &quot;differentiable&quot; function color --  <a href="https:&#x2F;&#x2F;ai.facebook.com&#x2F;blog&#x2F;paving-the-way-for-software-20-with-kotlin&#x2F;" rel="nofollow">https:&#x2F;&#x2F;ai.facebook.com&#x2F;blog&#x2F;paving-the-way-for-software-20-...</a><p>It looks  very easy to reason about and use to me ... and i personally find async a similarly useful marker ...  It&#x27;s about being able to push constraints from caller arbitrarily far down the callee stack -- which is really not something that types support at all but provides for a very high confidence variety of constraint -- and high confidence constraints seem to me like they convey a ton of information.<p>I&#x27;ve been wondering actually whether &quot;function colors&quot; might actually just be a good way to create a whole variety of strong statically enforceable constraints for functions.  It seems like they lead to very good and simple programmer mental models ...<p>Are there languages that offer &quot;user definable&quot; function colors?  I can think of a lot of application domains that would be much better served by these kinds of constraints than oo or other type-centric approaches ... it would be ridiculously useful to be able to mark a function with the &quot;MyDomainBusinessLogic&quot; color and get assurances that such a method can only call other functions annotated with that color ... would provide an easy way to iterate on app specific abstractions provide   compiler assistance for the communication of layering intent -- rather than a bunch of poorly specified words in documents that try to communicate layering intent to other developers -- in language that is either sufficiently precise as to be  incomprehensible -- or sufficiently vague as to be subject to (mis)interpretation ...')