Item(by='jhallenworld', descendants=None, kids=None, score=None, time=1604251392, title=None, item_type='comment', url=None, parent=24959806, text='After thinking about this some more: I think the extension instruction should work like &quot;slt&quot; (set on less than).  So we have &quot;sov&quot;- set if add would overflow:<p><pre><code>    add t2, t1, t0\n    sov t3, t1, t0\n    bnez t3, overflow\n</code></pre>\nWhy this way?  &quot;extra bits on destination registers&quot;- this is really flags.  The flags have to be preserved during interrupts, so extending the registers is not so easy (I think it just reduces to classic flags).<p>&quot;add but jump on overflow&quot; or &quot;add and skip on no overflow&quot;- I don&#x27;t like this because you can not break it into separate operations without flags.  I think you might have to add hidden flags in a real implementation.<p>An add followed by an sov could be fused, but requires an expensive multi-register write.  Fusing maybe could be more likely if the destination is always to a fixed destination register:<p><pre><code>    add t2, t1, t0\n    sov tflags, t1, t0\n    bnez tflags, overflow</code></pre>')