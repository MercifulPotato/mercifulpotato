Item(by='brundolf', descendants=None, kids=[25107464, 25107732, 25107762, 25107184, 25108244], score=None, time=1605491362, title=None, item_type='comment', url=None, parent=25101768, text='I wonder, is there a good even-handed critique out there of the dependency-injection pattern and related philosophies?<p>For me and probably a lot of people here, the pattern fundamentally offends my sensibilities; mainly, but not exclusively, because it forces you to put everything into classes. I&#x27;d much rather pass plain functions when I need inversion of control, and use closures if I really need to &quot;configure&quot; some piece of code. I&#x27;d also prefer to import and pass down those functions explicitly, instead of having values magically resolve in some runtime context that lives outside of the &quot;real language&quot;. I do acknowledge that languages like Java don&#x27;t, or at least didn&#x27;t for a long time, support these other language features and so may have had no choice but to use DI as a crutch. But I&#x27;ve also seen it used in languages that do have those features, like JavaScript.<p>On the other hand, I&#x27;m not sure I&#x27;ve used the pattern enough to critique it fairly. And obviously it&#x27;s been used for decades at many very large and successful companies. So what I&#x27;d really like is to hear from someone who&#x27;s experienced with both worlds about the advantages and disadvantages, assuming that both exist.')