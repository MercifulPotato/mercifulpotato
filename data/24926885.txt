Item(by='lmm', descendants=None, kids=None, score=None, time=1603942229, title=None, item_type='comment', url=None, parent=24920702, text='&gt; How do they do this? Well, a lot of WebSockets, in the case of Reflex and LiveView, as well as very tightly coupled server interactions. As you can see in the LiveView demo, which I highly recommend, these frameworks tend to operate sort of like reactive DOM libraries on the front end – in which the framework figures out minimal steps to transform from one state to another - except those steps are computed on the server side and then generically applied on the client side. They also do a lot more data storage &amp; state management on the server-side, because a lot of those interactions which wouldn’t be persisted to the server are now at least communicated to the server.<p>Reminds me of Wicket&#x27;s AJAX support, which is still the best web development experience I&#x27;ve ever had. You keep the state in the server-side session, when the user pushes a button you update that state and re-render those parts of the DOM that changed because of it. It dovetails nicely with the whole framework being properly component-oriented - rather than the page-oriented MVC style, you make encapsulated, reusable widgets that know what their own state is and how to render themselves based on it, and the actual top-level page becomes almost an afterthought.')