Item(by='spiffytech', descendants=None, kids=[25827429], score=None, time=1611006569, title=None, item_type='comment', url=None, parent=25826645, text='&gt; But a lot of software engineering issues are entirely divorced from the underlying hardware. So I&#x27;m not sure how the shape of hardware has any significant bearing to our current situation.<p>To play devil&#x27;s advocate with the other&#x27;s position, even just over the time I&#x27;ve been in software since the early&#x2F;mid 2000s I&#x27;ve seen things shift  a number of times as new hardware creates new demands from our software or obsoletes old development struggles. PC RAM capacities rising 100x from 20+ years ago, more operations coming over on a slow and flaky WAN from untrusted devices, fewer people tolerating apps that only work on the tower PC stuck on their desk, more apps expected to sync state across devices because they&#x27;re cheap enough we can own a bunch of them, use cases we learned to handle with plugged-in tower PCs adapting to power-draw-sensitive mobile devices, mobile devices being 1.5GHz instead of 16HMz, CPUs becoming fast enough that performance is often a footnote concern for whether to implement crypto, dedicated AI microchips changing what&#x27;s possible on-device...<p>All of these seem like very reasonable justifications to rethink the way we build software, to change what&#x27;s standard practice or to invent new tools that solve old problems in a modern context. To some degree the clock on when our industry starts accumulating stable knowledge won&#x27;t start ticking until these kinds of changes stop happening.')