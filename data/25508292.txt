Item(by='elamje', descendants=None, kids=[25508468, 25509232, 25509809, 25508402, 25509009, 25508347], score=None, time=1608655959, title=None, item_type='comment', url=None, parent=25507942, text='This is the Ruby on Rails version of what Elixir Phoenix Live View and .NET Blazor do.<p>For those not familiar, rather than using a standard web framework where a lot of processing is done client side, these frameworks allow html buttons etc to call native Ruby, C#, or Elixir functions on the server rather than using some sort of post&#x2F;get request to do that. Every UI interaction goes over the wire, which is where performance can be hurt.<p>Having used Blazor in production for nearly a year, it speeds up development, but your server is doing a lot more processing and will not be able to handle an equivalent amount of users that a normal web app would because it’s keeping a copy of the clients DOM in memory. It’s updates the dom on the server then streams that update through websockets to the clients dom, creating your magic Single Page App experience.<p>I think it’s cool tech, but not necessarily scalable due to the increased server load. I’d be interested to hear from people using it to serve large orders of magnitude of clients at once.')