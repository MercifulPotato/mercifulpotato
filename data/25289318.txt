Item(by='ficklepickle', descendants=None, kids=[25289802], score=None, time=1607006889, title=None, item_type='comment', url=None, parent=25288520, text='This argon2 implementation[0] looks good to me. It uses a native module so it should be fast, and I like the look of the API. It returns the salt and params with the hash in one string, so storing and verifying looks real simple. It appears to be maintained. It has TS type declarations, if you are into that sort of thing.<p>Here is an scrypt just in JS[1]. It will also run in the browser, if you need to hash client side for some reason. On node, it will use the built in crypto api which IIRC is a wrapper around openSSL so perf should be native. I&#x27;m not a big fan of the API, you have to concern yourself with buffers and normalization. Maybe that is important for non-latin alphabets? I don&#x27;t actually know, I&#x27;m too anglo-centric.<p>Then there is good ol bcrypt[2]. Certainly the most mature, it has been around a while. Like [0], it also uses a native module with node-gyp.<p>All three support async&#x2F;await so you can avoid blocking the event loop during expensive hashing operations. I should note I haven&#x27;t really used any of them. I was just curious so I did some googling.<p>Based on your criteria, I think [0] fits the bill best. Very hard to forget the salt, as it is generated by default and stored with the hash.<p>I&#x27;m always really curious about other people&#x27;s code, so I hope you don&#x27;t mind me asking: I typically use a library&#x2F;framework that handles details like password hashing. That said, sometimes i like to avoid libs and really understand every aspect. Can I inquire about your stack? Are you using express or koa or anything like that?<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;ranisalt&#x2F;node-argon2" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ranisalt&#x2F;node-argon2</a><p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;ricmoo&#x2F;scrypt-js" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ricmoo&#x2F;scrypt-js</a><p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;kelektiv&#x2F;node.bcrypt.js" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;kelektiv&#x2F;node.bcrypt.js</a>')