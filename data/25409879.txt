Item(by='BlargMcLarg', descendants=None, kids=None, score=None, time=1607891092, title=None, item_type='comment', url=None, parent=25408494, text='Kevlin Henney makes interesting points on this. We often assume that abstractions make things harder to understand, at the benefit of making the architecture more flexible. When inserting an abstraction, it is supposed to do both, if at all possible. Abstracting should not only help the architecture, but also the understanding of the code itself. If it doesn&#x27;t do the latter, then you should immediately question whether it is necessary, or if a better abstraction exists.<p>The take-away I took from it is that as developers, we love to solve problems using technical solutions. Sometimes, the real problem is one of narration. As we evolve our languages, better technical abstractions become available. But that&#x27;s not going to prevent &#x27;enterprisey&#x27; code from making things look and sound more difficult. Just look at any other field where abstractions aren&#x27;t limited by technicalities: the same overcomplicated mess forms. Bad narrators narrate poorly, even when they are not limited.')