Item(by='robpalmer', descendants=None, kids=None, score=None, time=1605128751, title=None, item_type='comment', url=None, parent=25062150, text='It&#x27;s more about setting up the guard-rails ahead-of-time to avoid falling into a hole, rather than getting out of one.  We know the way to do this is to stick to standards like ECMAScript.<p>ES Modules are the glue that binds the whole JS ecosystem together.  Whilst ESM is the standard, today a lot of people are using ESM only as an authoring format that later gets converted to CommonJS before being published or executed.  Many of today&#x27;s tools rely on this, meaning the ecosystem is partially tied to CommonJS.  Migration is happening but it&#x27;s slow and non-trivial.<p>In a way, we bypassed the CommonJS era and skipped directly from AMD to ESM.  AMD and ESM are pretty much isomorphic and differ only in syntax.  You just run a codemod to get from AMD syntax to ESM syntax - semantics are preserved.  Whereas the step from CommonJS to ESM does not fully preserve semantics.  CommonJS module initializers are always synchronous.  ESM can be asynchronous - you can use `await` in the module initializer.<p>The article covers a few of the things we&#x27;ve done to retain a very standard ES Module system that is ECMAScript compliant.  I think it is this pursuit of standards and desire for robust interoperable packages that led to some of the surprising discoveries.')