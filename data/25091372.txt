Item(by='maweki', descendants=None, kids=[25092192, 25092924, 25092618], score=None, time=1605349571, title=None, item_type='comment', url=None, parent=25090816, text='It&#x27;s fun to think about useful languages that are not computationally complete. I am writing my PhD thesis about Datalog used as a general purpose programming language, specifically for robots and microcontrollers. And you know what? You don&#x27;t need to be able to simulate a Turing machine for a lot of tasks. On the other hand, you have guaranteed termination.<p>Excel (without scripting) uses a terminating (and therefore incomplete) model of computation and it still manages to do a lot of heavy lifting in the real world.<p>I wholeheartedly agree with the author that declarative languages and Domain specific languages are great, and even if they do not have a (hidden) embedded lisp, they can still be useful.<p>Once you are in a computationally complete language (and you don&#x27;t just use a subset of language features that is &quot;easy&quot;), most problems are generally undecidable. Turns out, that&#x27;s a bad property for static analysis.')