Item(by='jgilias', descendants=None, kids=[25962496], score=None, time=1611952001, title=None, item_type='comment', url=None, parent=25957307, text='Ok, so let&#x27;s take an example. In a very hand-wavy way, the ZeroMQ messaging queue works without a central messaging broker or service, but purely as a library. In theory, you can implement ZMQ messaging primitives in your language of choice, but this is a lot of work, so it is usually used through bindings to libzmq C library.<p>I don&#x27;t know exactly how it works, but at some point it writes things to some memory address. This is the point where the Rust compiler starts complaining about the situation if you try to use the bindings from something that can potentially be sent between threads. So you use some mutex, or a lock, and maybe wrap the whole thing in an atomic reference counted entity.<p>What would be the Pony way of solving a situation like this? It does say that it is possible to directly call C or C++ libraries.<p>I&#x27;d really appreciate if someone from the Pony community can elaborate a bit on such use cases.')