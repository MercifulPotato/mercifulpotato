Item(by='alex-lawrence', descendants=None, kids=None, score=None, time=1608457894, title=None, item_type='comment', url=None, parent=25482736, text='In one project, where we could have done otherwise, we went consciously full Event Sourcing. In another project, the Domain Model was inherently event-based. In my book, the Sample Application first persists domain objects and is later refactored towards Event Sourcing.<p>While I read about the possibility of doing both at the same time, I never encountered this practice in a project. How I see it, there is always only one source of truth. If you apply Event Sourcing, it is the event log. Any other representation should be seen as derivation&#x2F;projection.<p>The one long-term project where we applied Event Sourcing showed quite some challenges you can face with this pattern. For me, the most challenging aspect is the versioning of an event-sourced system. When the Domain Model evolves, it might necessitate changes to events or the introduction of new ones. Greg Young even wrote a book on this topic: <a href="https:&#x2F;&#x2F;leanpub.com&#x2F;esversioning" rel="nofollow">https:&#x2F;&#x2F;leanpub.com&#x2F;esversioning</a> (I haven&#x27;t read it though).')