Item(by='peterwwillis', descendants=None, kids=None, score=None, time=1606021923, title=None, item_type='comment', url=None, parent=25170547, text='All of these points are true. If you&#x27;re building a tech org, take note.<p>But there&#x27;s a couple big problems that these points raise:<p>1. Why don&#x27;t engineers design for production, and how do you get them to? I find most devs just do not want to care about how their apps <i>actually work</i>. They don&#x27;t care about the product or user experience. Getting them to care is hard.<p>2. Deployment is not a problem - an ongoing site reliability process is the problem. Anyone can ship some code to a server accessible on the internet. But what do you do when it breaks? <i>Or even worse</i> - what do you do when it&#x27;s just getting incrementally slower? Deployment is just one tiny part of getting your code to production in such a way that it continues to be a functioning product. Site Reliability is really <i>Product Reliability</i> - and that&#x27;s something devs need to learn about.<p>3. The company never wants to pay for <i>anything</i>, yet they insist on hiring people to build stuff by arbitrary deadlines that can&#x27;t be met. How can we fix this? Beats me.<p>4. A person manually checking for quality is basically a relic of old managers who have no idea how to <i>get</i> quality other than to pay someone to care about quality, but they don&#x27;t know how to get <i>those</i> people to do the right thing, which is work with devs to write tests.<p>5. Simple things are the hardest to make, and definitely takes the longest to get right. I would start with easy, and try to work my way up to simple. Simplicity being complexity reduced to its most essential parts. I think all refactors should be always towards simplicity, and should happen often.<p>6. The reason that building or running systems can be so difficult or error-prone is human communication problems. Look for communication problems and solve them, and you will magically see less errors, more frequent deploys, and happier customers. Yes, this is kind of obvious, but it&#x27;s amazing how often communication problems are both known and ignored because &quot;we&#x27;re too busy because we&#x27;ve got to do X other thing&quot;.')