Item(by='andyjpb', descendants=None, kids=None, score=None, time=1608120792, title=None, item_type='comment', url=None, parent=25437904, text='You&#x27;re not strictly wrong...<p>But what I&#x27;m trying to say is that what&#x27;s in your database should be well defined. You shouldn&#x27;t just put any old stuff in there. You should have a standard for exactly how everything is escaped (or not) so that your consumers have a spec to work to.<p>You&#x27;d do the same with, say, character encodings. One option is to convert everything to a single character set on the way in, such as UTF-8. Another option is to annotate everything with the character set it uses. You must chose one.<p>Relying on adhoc code spread across the codebase for the security properties of untrusted data leads to whack-a-mole security situations.<p>Being able to trust the data in your database is essential.<p>Note, that absolutely <i>doesn&#x27;t</i> mean things like &quot;Robert&#x27;); DROP TABLE Students;--&quot; shouldn&#x27;t appear in database fields.<p>It just means that if you define the type of a field to be &quot;eMail address&quot; then consumers of it really should be able to trust that it really is a legitimate and valid eMail address. What does &quot;valid&quot; mean in this context? Well, that&#x27;s up to your spec. Perhaps just &quot;legally structured&quot;. Perhaps &quot;something that eMail can actually be delivered to&quot;. Perhaps &quot;something that is known and assured to actually be associated with this particular user&quot;.<p>...but you must be explicit otherwise consumers have nothing to work from and you&#x27;re building castles on the sand.')