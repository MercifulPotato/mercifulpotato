Item(by='jjmarinho', descendants=2, kids=[25753475, 25755156], score=2, time=1610482221, title='The benefits of a garbage collected Rust', item_type='story', url=None, parent=None, text='I started learning Rust some time ago, and i can&#x27;t stop thinking that Rust could be a really good substitute to Java, C# and Go in most applications. This language has it all, but there are some big learning hurdles caused by some of it&#x27;s design decisions and features.<p>Don&#x27;t get me wrong, i know the developers of the Rust language took these decisions very seriously and the language has it&#x27;s own philosophy, but Rust expressiveness is so good that it could benefit from a garbage collected spin-off.<p>As most of you guys already know, the 3 biggest difficulties when learning Rust are Lifetimes, Unsafe and Ownership&#x2F;Borrowing[0].<p>These 3 difficulties are all related to how Rust handles Memory Management, and could be severely reduced or even eliminated in a Garbage Collected Rust.<p>What we get in exchange for having to deal with these hurdles is a language as fast as C&#x2F;C++. Sometimes this speed is needed, and for those times the current Rust is a nearly perfect solution.<p>But for general development the biggest asset that lies in Rust is its expressivenes: Iterators, Traits, Trait bounds, Modules, the Macro system, Parametric Polymorphism, the type system, and the enum implementation are REALLY GOOD and lead to healthy and maintainable code tha can benefit every organisation.<p>This expressivenes could be maintained in a GC&#x27;ed Rust.<p>I know this is basically daydreaming, as i don&#x27;t have nearly enough skills to produce such a tool. But what do you guys think? Is there a language like this?<p>[0] https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2018&#x2F;11&#x2F;27&#x2F;Rust-survey-2018.html')