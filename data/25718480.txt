Item(by='ibraheemdev', descendants=None, kids=[25721501, 25719029], score=None, time=1610306325, title=None, item_type='comment', url=None, parent=25715431, text='There was a thread posted on the rust forum a while back that laid out the goals of this project [0]:<p>&gt; A friend of mine (Luke) has been talking about the need for a Rust frontend for GCC to allow Rust to replace C in more places, such as system software. To allow some types of safety-critical software to be written in Rust, the GCC frontend would need to be an independent implementation of Rust, since the relevant specs require multiple independent implementations (so just attaching GCC as a new backend for rustc wouldn&#x27;t work).<p>Luke:<p>&gt; The goal is for the GNU Compiler Collection to have a peer level front end to the gfortran frontend, gcc frontend, g++ frontend and all other frontends.<p>&gt; The goal is definitely not to have a compiler written in rust that compiles rust code [edit: unless there is an acceptable bootstrap process, and the final compiler produces GNU assembly output that compiles with GNU gas]<p>&gt; The goal is definitely not to have a hard critical dependence on LLVM.<p>&gt; The goal is to have code added, written in c, to the GNU Compiler Collection, which may be found here <a href="https:&#x2F;&#x2F;gcc.gnu.org" rel="nofollow">https:&#x2F;&#x2F;gcc.gnu.org</a> 20 such that developers who are used to gcc may compile rust programs and link them against object files using binutils ld.<p>&gt; The primary reason why I raised this topic is because of an experiment permitting rust modules to be added to the linux kernel: <a href="https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;797828" rel="nofollow">https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;797828</a><p>&gt; What that effectively means if that takes off is that the GNU Compiler Collection, which would be incapable of compiling that code, would be relegated to a second class citizen for the purposes of compiling the largest software project on the planet: the linux kernel.<p>&gt; Thus it is absolutely critical that GCC be capable not just of having rust capability but of having up to date rust capability.<p>0: <a href="https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-help-implementing-an-independent-rust-frontend-for-gcc&#x2F;32163" rel="nofollow">https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-help-implementing-an-...</a>')