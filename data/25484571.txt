Item(by='tannhaeuser', descendants=None, kids=[25489011], score=None, time=1608448741, title=None, item_type='comment', url=None, parent=25482410, text='&gt; <i>[XML] lacked all the facilities that apply to writing good code, so principles like “Don’t Repeat Yourself” went overboard and copy&#x2F;paste programming ensued</i><p>Technically, XML has entities (text substitution variables) and entity references, along with a evolved infastructure to share declarations and declaration sets via parameter entities. Of course, that doesn&#x27;t help with tools such as maven which outright forbid use of entities and use their own ad-hoc mechanism for reuse. Technically, this makes a pom.xml non-XML-compliant, but in any case, whining about XML pointless when the creators should rather blame themselves for using XML in the first place, and then using it inappropriately.<p>As to FaaS, I don&#x27;t see the problem with CGIs; they&#x27;ve stood the test of time with ultra-robustness and uptimes in the range of years and decades, including service updates with zero downtime by virtue of Unix processes being  detached from their binaries (unlike Windows processes). Also, since you can run CGIs as one-shot invocations on the command-line, developer feedback as postulated in TFA is excellent. Of course, CGIs itself use environment variables rather than function or command-line arguments, so their lifecycle is bound to Unix processes. What helps is to use wrappers rather than coding to CGI specs directly; we had this in 2007 already with SCA (service component architecture). Maybe it&#x27;s time to refresh SCA with new bindings for AMZN and other proprietary FaaS to bring back the portability we valued highly in pre-Cloud times?')