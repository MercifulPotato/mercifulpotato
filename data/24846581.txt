Item(by='chme', descendants=None, kids=None, score=None, time=1603278158, title=None, item_type='comment', url=None, parent=24845535, text='&gt; Historically the dependency management tool for C++ is the system&#x27;s package manager, and&#x2F;or a shell configure&#x2F;provision script.<p>I agree with you here. The system package managers where invented to solve system global dependency problems between libraries&#x2F;executables as well as provide headers and static libraries for development on the current machine.<p>&gt; I don&#x27;t see any value add to a &quot;built in&quot; dependency management tool to C++. Not as in it isn&#x27;t a useful thing to have, just that it can&#x27;t solve the big problem which is that most C++ projects would never support it.<p>Even if you don&#x27;t see a need, you have to acknowledge that many other people see the need to have some sort local dependency management, be it compile time like cargo or the different cross-build environments (openembedded, buildroot, co.) or runtime like chroots, containers, virtual machines.<p>It can be argued that the local dependency management solutions are in their infancy.')