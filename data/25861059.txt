Item(by='SJC_Hacker', descendants=None, kids=None, score=None, time=1611248242, title=None, item_type='comment', url=None, parent=25857845, text='I&#x27;m no academic, but functional languages have performance problems that simply cannot be handwaved away.  For example, say you have a function that modifies an array. In a pure function, you cannot mutate in place, the function would need to return a &quot;new&quot; array.  This necessitates at least a partial copy.  I have seen proposed solutions for this where the array structure is some type of index table, where you can just mutate part of it and still maintain most of the original, thus avoiding having to potentially copy a huge amount of memory.  However there is an unavoidable performance penalty, and also introduces issues like cache misses&#x2F;pipeline stalls come in to play.')