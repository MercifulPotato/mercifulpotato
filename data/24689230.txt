Item(by='jmull', descendants=None, kids=[24690201, 24690190, 24690258, 24690767, 24690960, 24689835, 24690980, 24690663, 24690561], score=None, time=1601915358, title=None, item_type='comment', url=None, parent=24686863, text='I don&#x27;t think these principles add up to something useful. It&#x27;s not complete and I think some of the principles don&#x27;t align that well to the problem space.<p>The big one: &quot;Data is immutable&quot;. The problem here is that data <i>isn&#x27;t</i> actually immutable (generally) and mutability isn&#x27;t actually the problem. The problem is unmanaged references or other dependencies on the mutable data. The &quot;source of truth&quot; becomes muddled which creates the problem of how to keep the various instances in sync (or otherwise handle cases where they are&#x2F;become out-of-sync). Immutability is a very useful tool since you have have any kind of dependency -- direct, indirect, implied, etc) -- and there&#x27;s no worry. But you still need a mechanism to manage mutating data. Maybe it comes out somewhere, but the principles of DO don&#x27;t cover it, which is a rather serious omission.<p>Also, principle 2 isn&#x27;t really a principle. I think what it&#x27;s getting at is that you don&#x27;t really know the precise type of your data, over time, in a distributed system, so it&#x27;s good to include the flexibility to handle that. That makes sense to me. but generic data structures aren&#x27;t necessarily always the right way to handle that.')