Item(by='anonacct38', descendants=None, kids=[24977802, 24978803, 24976243], score=None, time=1604369074, title=None, item_type='comment', url=None, parent=24975031, text='I&#x27;ve seen both extremes. For instance I&#x27;m told github largely has a rails monolith and that they have to run headless instances of rails to do database leader election (although this statement implies they are trying to break things out).<p>I&#x27;ve also talked to junior engineers who want to make every function call a pubsub message.<p>I&#x27;ve heard principals from Amazon promote a model where one service is responsible for one entity.<p>What I&#x27;ve decided is that the services in your company should follow conway&#x27;s law. Most of the problems with a monolith come when multiple teams with differing release cycles and requirements are making changes in a shared codebase and they are having trouble keeping their tree green. You should generally have one to a few services per team. Scoping a service to a team ensures that people can have true ownership.<p>For SREs microservices are harder, but they give SREs the control plane they need to do a good job. If communication happens between services rather than function calls, it&#x27;s easier to instrument all services in a common way and build dashboards. It&#x27;s simpler to spin up different instances connected to different datasources.')