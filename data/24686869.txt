Item(by='swalsh', descendants=None, kids=[24687445, 24687183], score=None, time=1601899223, title=None, item_type='comment', url=None, parent=24686698, text='I do, all the time.  I highly recommend others do it too.  I like to keep to 1 commit per ticket (even a super large ticket that might take me weeks of development).  But having a commit history like the fella in this story is nice too.  So what you should do is work in a feature branch.  On the day of deployment I&#x27;ll squash, and cherry pick (in my case to a train).  If the deployment goes bad, and my code is at fault, then all that is required to fix it is a single revert.<p><pre><code>  If you want to continously deploy to production (with real users using it) you need a process to very quickly revert bad commits from it.  At my last company with hundreds of developers, we would push to prod several times a day.  Each deployment would have several devs changes included.  A clean linear history is essential to making that process work.</code></pre>')