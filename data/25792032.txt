Item(by='mchristensen', descendants=None, kids=None, score=None, time=1610724669, title=None, item_type='comment', url=None, parent=25792031, text='The latest generics design proposal is here: <a href="https:&#x2F;&#x2F;blog.golang.org&#x2F;generics-proposal" rel="nofollow">https:&#x2F;&#x2F;blog.golang.org&#x2F;generics-proposal</a>. This could land as early as Go 1.18 beta.<p>I&#x27;ve started putting together the beginnings of what I hope will become a utility library like Lodash&#x2F;Underscore (in the JS world) or go-funk[0] (in the Go world).<p>Generics means no longer choosing between code duplication (multiple type-safe function implementations) and losing compile-time type-safety with reflection-based implementations. This is the current trade-off in e.g. go-funk.<p>More info in blog post: <a href="https:&#x2F;&#x2F;github.com&#x2F;mschristensen&#x2F;go-funk-generics" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;mschristensen&#x2F;go-funk-generics</a><p>Feedback welcome - especially with regards on how to achieve method chaining...!<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;thoas&#x2F;go-funk" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;thoas&#x2F;go-funk</a>')