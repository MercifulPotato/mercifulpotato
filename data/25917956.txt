Item(by='j-pb', descendants=None, kids=None, score=None, time=1611679524, title=None, item_type='comment', url=None, parent=25917376, text='Glad that you like it :D\nThis actually pushes me a bit more into the direction of open-sourcing the whole thing, we kinda have it planned, but it&#x27;s not a priority at the moment, because we use it ourselves quite happily :D.<p>Subject and Entity are the same thing, just different names for it. People with a Graph DB background will more commonly use [entity attribute value] for triples, while people from the Semantic Web community, commonly use [subject predicate object].<p>We don&#x27;t use timestamps, but we just implemented something we call UFO-IDs (Unique, Forgettable, Ordered), where we store a 1 second resolution timer in the first 16 bit, which improves data locality and allows us to forget irrelevant tribles within a 18h window (which is pretty nice if you do e.g. robotics or virtual personal assistants), while at the same time still practicing the overflow case regularly (in comparison to UUIDv1, ULID, or Timeflakes), and not loosing too many bits of entropy (especially in cases where the system runs longer than 18h).<p>The 128bit is actually big enough though that you can just choose any random value, and be pretty darn certain that it&#x27;s unique. (UUIDv4 works that way)\n64 byte &#x2F; 512bit not only fits into cache lines, it&#x27;s also the smallest value, which is statistically &quot;good enough&quot;. 128 bit random IDs (entity and attribute) are statistically unlikely enough to collide, and 256bit hashes (the value) are likewise good enough for the foreseeable future to avoid content collision.<p>And yeah well, the human language name, as well as all the documentation about the attribute is actually stored as tribles alongside the data. We use them for code generation for statically typed programming languages which allows us to hook into the languages type checker, to create documentation on the fly, and to power a small ontology editing environment (take that protege ;) ).<p>We kinda use it as a middleware, similar to ROS, so it has to fit into the same soft realtime, static typing, compile everything nich, while at the same time allowing for explorative programming in dynamic languages like Javascript.\nWe use observableHQ notebooks to do all kinds of data-analysis, so naturally we want a nice workflow there.<p>jsonLD is heavily hooked into the RDF ecosystem. We actually started in the RDF space, but it became quickly apparent that the overall complexity was a show stopper.<p>Originally this was planned to bring the sub projects in a large EU research project closer together, and encourage collaboration.\nWe found that every sub project wanted to be the Hub that connected all the other ones.<p>By having a 2.5kloc implementation we figured, everybody could &quot;own&quot; the codebase, and associate with it, make it so stupid and obvious that everybody feels like they came up with the idea themselves.\nThe good old inverse Conway manoeuvre.<p>jsonLD is also very static, in the ways that it allows you to reinterpret data, RDF in =churn=&gt; JSON out, and we wanted to be able to do so dynamically, so that when you refactor code to use new attribute variants (e.g. with different deserialisations) you can do so gradually.\nAlso dynamic is a lot faster.<p>The tribles instead of triples idea came when we&#x27;ve noticed that basically every triple store implementation does a preprocessing step where CURI are converted to u64 &#x2F; 8byte integer to be stored in the indices.<p>We just went:\n&quot;Well, we could either put 24 byte in the index and still have to do 3 additional lookups. Or we could put 64 byte (2.5x) in there and get range queries, sorting, and no additional lookups, with essentially the same write and read characteristics.[Because our Adaptive Radix Tree index compresses all the random bits.]&quot;\n64 bit words are already pretty darn big...<p>Currently there is nothing published (except for it being vaguely mentioned in some linguistics papers), and no studies done.\nThey are planned though, but as this isn&#x27;t our source of income it&#x27;s lowish priority (much to my dismay :D).<p>Keep an eye on tribles.space tho ;)<p>Edit:\nAh well, why wait, might as well start building a community :D<p><a href="https:&#x2F;&#x2F;discord.gg&#x2F;KP5HBYfqUf" rel="nofollow">https:&#x2F;&#x2F;discord.gg&#x2F;KP5HBYfqUf</a>')