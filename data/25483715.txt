Item(by='0xbadcafebee', descendants=None, kids=[25484567], score=None, time=1608436098, title=None, item_type='comment', url=None, parent=25483082, text='&gt; You’d have to pay engineers to build the same systems provided by serverless if you want smooth deployments and high availability. Also, imagine if you wanted to start operations outside of the continental United States. You’d need to find a data center provider, buy machines, pay someone to install them (and hope they do it correctly), and then, when ever you have a technical problem, you need to email the datacenter team to have someone plug in a KVM with 5 seconds of lag so your engineers can debug, and then you have to pay admins to constantly maintain the servers, and consistently pay for their rack space even if they aren’t being fully utilized. None of this is a problem on a fully managed serverless platform.<p>What are you even talking about dude? You don&#x27;t have to build a rack in a colo to run a non-Serverless app. There&#x27;s this thing called The Cloud now, and Virtual Machines, and other fancy new technologies from 15 years ago.<p>&quot;Serverless&quot; as in Lambda is a joke. &quot;Serverless&quot; as in Fargate is legitimately great at lowering ops overhead. But &quot;zero operational overhead&quot; is absolute bullshit. Even Lambda has operational overhead.<p>Serverless is just the abstraction of a function into a compute unit. There&#x27;s like 20 other things you need for a functioning <i>product</i>, many of which literally cannot be replaced by Serverless-anything. And the severe limitations of many Serverless technologies make it very unwieldy to use.<p>Give it 10 years and it may morph into something more like a monolith whose functions become &quot;Serverless&quot;, like a Beowulf cluster where forks are executed on remote nodes and there&#x27;s some ugly glue to tie it all together. That seems a lot more seamless and useful than trying to architect 100 tiny pieces together with crappy custom integrations everywhere.')