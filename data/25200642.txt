Item(by='spacedcowboy', descendants=None, kids=[25201282], score=None, time=1606238854, title=None, item_type='comment', url=None, parent=25197552, text='cobegin&#x2F;coend sound very much like co-routines, which is a relatively simple implementation of co-operative multitasking[1]. I&#x27;ve seen it used a lot in embedded programming, and the original Mac OS (pre os-x) was co-operative. Not so common these days with linux&#x2F;freeRTOS&#x2F;others providing pre-emptive multitasking<p>As for &#x27;monitor&#x27;, that&#x27;s a standard term for a high level synchronization concept - basically shared data between tasks, but you can only access that data via the monitor&#x27;s procedures, and it enforces one-at-a-time access. You can create a monitor with a semaphore and a class-with-private-ivars, assuming all the accessors wait on the semaphore.<p>[1]: <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Coroutine" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Coroutine</a>')