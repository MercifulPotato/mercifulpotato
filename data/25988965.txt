Item(by='Zababa', descendants=None, kids=None, score=None, time=1612189836, title=None, item_type='comment', url=None, parent=25979500, text='This is possible to do without dependent types. You could have something like this (using TS syntax):<p><pre><code>  function produceComplexArray(arr: array&lt;number&gt;): ComplexArray | null {\n    ...\n  }\n\n  function consumeComplexArray(arr: ComplexArray) {\n    ...\n  }\n</code></pre>\nIf the only place where you can produce a ComplexArray is produceComplexArray, and produceComplexArray ensures that the arrays it receives are &quot;a monotonically increasing array of numbers with a mean value of such and such and a standard deviation of such and such&quot;, then all the functions after produceComplexArray can be assured that they have the right array. Therefore, even with a relatively simple type system, you can ensure this invariant.<p>I think I got this idea from this article: <a href="https:&#x2F;&#x2F;lexi-lambda.github.io&#x2F;blog&#x2F;2019&#x2F;11&#x2F;05&#x2F;parse-don-t-validate&#x2F;" rel="nofollow">https:&#x2F;&#x2F;lexi-lambda.github.io&#x2F;blog&#x2F;2019&#x2F;11&#x2F;05&#x2F;parse-don-t-va...</a>')