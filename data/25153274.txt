Item(by='rektide', descendants=None, kids=None, score=None, time=1605813650, title=None, item_type='comment', url=None, parent=25151732, text='Git executable is good for one off commands.<p>Ideally, an in-language git implementation would also let you model &amp; compute on git in a more enduring fashion.<p>I don&#x27;t think isomoprhic-get is particularly set up to allow folks to do incremental-computation, but one could imagine having the git tree in memory, &amp; manipulating it there across a series of operations, &amp; then generating a diff or what not, without needing to touch the file system or re-read the tree while multiple operations are happening.<p>This is a bit of a leap of topics, but I think one of the main things missing in JS is a good representation, an abstraction for files. Node has an api for opening files &amp; reading &amp; writing, very normal stuff, but it relies entirely on the platform. There&#x27;s no abstract concept of a file at a path. Because of this, one can not easily substitute in something powered by S3 or something powered by WebDAV, since there is no abstraction in the language.<p>The once-well-known Node.js build tool Gulp is based very much around one of the libraries out there filling this gap, called vinyl-fs[1]. From the start of it&#x27;s readme, &quot;Vinyl is a very simple metadata object that describes a file. When you think of a file, two attributes come to mind: path and contents. These are the main attributes on a Vinyl object.&quot; By defining a file in an abstract manner, it allows for non-platform implementations, like S3, or WebDAV, or in-memory. It allows talking about files, without having to actually do unto files.<p>It&#x27;s a bit hard to connect back to the discussion on git and git executable&#x27;s run-to-completion model, but this idea, of the language having it&#x27;s own abstractions &amp; being able to do computing inside the runtime without having to keep going back to the platform as the one &amp; only source of truth, allows a lot of flexibility for manipulating the system that is otherwise often cumbersome &amp; involves redundant back &amp; forth work.<p>Getting away from git&#x27;s normal run-and-execute command model, &amp; comprehending git is the sort of thing that&#x27;s super useful if you&#x27;re writing editors, ides, github-like systems, &amp; gitops tools.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;gulpjs&#x2F;vinyl-fs" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gulpjs&#x2F;vinyl-fs</a>')