Item(by='scottlamb', descendants=None, kids=[25975471, 25975347], score=None, time=1612060488, title=None, item_type='comment', url=None, parent=25971481, text='(The quoted paragraph is no longer in the article. But I&#x27;m still curious about it.)<p>&gt; Therefore, the parameter -force_key_frames expr:gte(t,n_forced*4) is needed, which produces a key frame every 4 seconds.<p>How often would you like it to be producing key frames? My video experience is mostly with security cameras, and the ones I&#x27;ve used produce an I-frame every 2 seconds by default. Their encoders don&#x27;t seem to be real high-quality; sometimes there&#x27;s visible pulsing where the image will get worse until the next I-frame, so I wouldn&#x27;t want to increase the interval much beyond that.<p>&gt; WebRTC solves this problem using the RTP Control Protocl (RTCP). When a new user consumes a stream, they send a Full Intra Request (FIR) to the producer. When a producer receives this request, they insert a keyframe into the stream. This keeps the bitrate low while ensuring all the users can view the stream.<p>I&#x27;m writing an NVR that does live streaming with HTML5 Media Source Extensions, sending one-frame .mp4 fragments over a WebSocket connection. My approach to this problem is different: when a new client connects, I send them everything since the last key frame. IIRC there&#x27;s more data in the I-frame than in the (up to 2 seconds of) P-frames since then, so this seems to work pretty well. If there were only an I-frame (say) every minute, I&#x27;d probably look at that inserting a keyframe approach...there is an ONVIF command to insert a key frame IIRC.')