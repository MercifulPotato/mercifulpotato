Item(by='yvdriess', descendants=None, kids=None, score=None, time=1606480255, title=None, item_type='comment', url=None, parent=25220430, text='&gt; I wonder if graph processing might be more broadly applicable than matrix processing as done on GPU&#x27;s.<p>Ultimately, yes. Graph processing is slow on traditional architectures because it&#x27;s a very sparse compute problem, which defeats most performance devices developed to help the memory wall: D cache, TLB, etc are mentioned in the paper. For sparse compute, you just hit that memory wall straight up, and things like caches are more a liability than a help.<p>There are plenty of other spare compute problems that do not fall into the graph processing category. Genomics springs to mind (plenty of graphs there too though).<p>Another factor is that a lot of sparse problems are kind of avoided in research, because it is usually more optimal to reformulate it into a dense problem. With hardware like this, I fully expect certain approaches seeing a comeback. Fully sparse neural nets come to mind.')