Item(by='patrec', descendants=None, kids=None, score=None, time=1605049445, title=None, item_type='comment', url=None, parent=25052275, text='Thanks for alerting me to the existence of the faq, which I had missed (in fact even after you mentioned it it took me a bit to find it on the page)!<p>It makes more sense now.<p>So bascically the idea is P6 is too complicated. And you don&#x27;t need (color-space, bit=depth etc.) metadata -- just add a side-car XMP file, and your non-existing resource fork based file system will take care of the rest; at least once you&#x27;ve got a good understanding of XMP (specs 1,2 and 3) and a full featured parser for it. You also won&#x27;t need anything other than 16-bit depth, because 16 bits is the most you&#x27;ll ever need (I wonder if the author heard of floating point image data) and if you use just 8 (or 1&#x2F;3) bits per channel, bzip2 compression will take care of it. So if you have a high resolution monochrome image, you don&#x27;t need to deal with some complicated data format like netpbm P4 where the first two bytes (&quot;P4&quot;) will tell you to expect a monochrome bitmap, you can just first run a bzip2 decompression and then inspect millions of 64 bit values to see if they all are 0x0000 and 0xffff or something. Simple and efficient!<p>I mean I see the appeal of some of the thinking behind this, but without a lot of wishful thinking&#x2F;false accounting I find it a bit hard to see how this would work out as  an actual simplification in any practical scenario. Still, as a thought-experiment it&#x27;s more interesting than I had given it credit for.')