Item(by='2ion', descendants=None, kids=None, score=None, time=1608473453, title=None, item_type='comment', url=None, parent=25481465, text='Selfhosting is neat until you really start thinking about durability, reliability, quality, integrity. Never self-host important data with at least doubly redundant backups incl. regular offline backups. On that thought, also never have a single authoritative copy without backup online. If all important photos are on Google Photos with no backup, you&#x27;re doing it wrong. If you have important data in Onedrive with the convenient sync enabled from multiple PCs and maybe your phone, it&#x27;s not safe, all these clients have write access. Same for nextcloud.<p>I employ a &quot;spider&quot; system. I use paid online storage like Onedrive, S3, Azureblob or Gdrive, or Fastmail for email and calendar and contacts, but pull all data from their primary hosting location and then disperse it into multiple  cloud copies plus local plus distributed local offline (in intervals). All spider copies are encrypted either using GPG or symmetric encryption. I can access all spider target locations with credentials I know by heart or have offline backups of them, and I can also access or know the encryption keys required to access the data itself.<p>I also keep an encrypted emergency copy of my most important data on my phone&#x27;s storage.<p>In such a system, it&#x27;s perfectly fine to use Google storage + Azure storage + S3 and whatnot provider, as long as you have a sound system and encrypt your data.<p>Nothing is free.<p>Essentially, to safeguard the most important personal data, the exact same methods and knowledge that a system engineer who designs a storage layer as part of business critical infrastructure should be applied.<p>Nextcloud is just too messy and complex. I don&#x27;t want to spent a lot of time managing its lifecycle, testing updates before deploying them to production, etc. I trust accomplished vendors to host production copies of my data as a service, and take responsibility from there. Sure it&#x27;s easy enough to deploy some piece of open source software and update it continuously, but I suppose the work that goes into making it a high-quality service, like testing updates with duplicate data before letting a new software version lose on your important personal data master copies, is something I doubt few people are putting in.')