Item(by='lifthrasiir', descendants=None, kids=None, score=None, time=1604265190, title=None, item_type='comment', url=None, parent=24962460, text='It should be said that C++ templates are <i>dynamically</i> typed (not weakly) and Rust generics are <i>statically</i> typed. But otherwise it is correct that Rust generics give a stronger guarantee than C++ templates.<p>It is beneficial to view C++ as a two-stage programming language, where the first stage runs templates and emits instances and the second stage runs them in the actual target. When C++ templates are said to be &quot;untyped&quot;, that&#x27;s really about the first stage [1]. You can&#x27;t be very sure that templates act as intended for all valid inputs because it can&#x27;t statically determine types before the first stage. Of course you can still write almost-working templates.<p>[1] Specifically the template invocation. C++ templates do have types for compile-time expressions and for that reason it was a wise move to move most of them into constexpr functions.')