Item(by='luizfelberti', descendants=None, kids=[24674002], score=None, time=1601741677, title=None, item_type='comment', url=None, parent=24672408, text='This has been one of the biggest pain points for me when using Rust, and I think this is a bad philosophy.<p>Leaving the implementation of basic functionality, that everyone needs in any language if you&#x27;re trying to do anything even slightly non-trivial, to the &quot;organic process of letting things naturally arise from the community&quot;, has so far been a very effective way to ensure no packages can naturally talk to each other ever, or have any composability.<p>Everyone re-implements their own &quot;personal abstractions library of crap I need often&quot; like we used to do with C because package management in C is horrid and the stdlib is as crude as it comes, or use one of the many crates of people who decided to publish their 10 LOC crate, and then you get a proliferation of microscopic packages that implement trivial functionality and the ecosystem starts looking a lot like NPM.<p>Rust could really use some more top-down leadership. Say what you want about Rob Pike (and I&#x27;m not saying that Golang doesn&#x27;t have pain-points with the leadership), but almost <i>everything</i> in the ecosystem composes like magic.<p>On top of that, everytime I try to use Rust I&#x27;ll need a feature and will run into some issue from 8 years ago, where everybody admits it&#x27;s a problem, there are good and obvious solutions on the table, but all those 8 years were spent circlejerking and bikeshedding and no one can make up their minds; it&#x27;s not even a &quot;this is what the future of this issue looks like but it will take some time&quot;, it&#x27;s more like a &quot;after 8 years consensus hasn&#x27;t been reached and no progress has been made on something a lot of people agree is a problem&quot;.<p>Sometimes the need for group consensus serves only to corrupt the conceptual integrity of systems, and dilute any sense of vision into oblivion... I wish we could do without it sometimes')