Item(by='mhd', descendants=None, kids=None, score=None, time=1602079346, title=None, item_type='comment', url=None, parent=24706724, text='If you&#x27;re really going for easy data entry and are willing to sacrifice program readability, I&#x27;d go with something that just has fewer tokens. The length of them hardly matters, as you can easily find shortcuts to enter them -- even the ZX80 did that, and a modern mobile phone has soo many technical advantages compared to that.<p>The problem comes when introducing names. Those are pretty independent from the language itself, apart from some basic length and character set constraints. But if you have something where you don&#x27;t need that many variables (point free code, stack-based PL), you don&#x27;t have to go to full keyboard mode that often, and completion would have to work with fewer possibilities, too.<p>But in the end people manage to type pretty well on screens, as long as you don&#x27;t have to switch layouts. Which brings us a constraint like many early programming languages had, where you really couldn&#x27;t depend on anything but alphanumeric characters on a keyboard. That brought us Algol, Fortran and C trigraphs. Now ditch parens and you&#x27;re good to go, although I guess that displaying a single additional line on your OSK with the necessary few items is easy enough.<p>Now, the editing environment is interesting. Fewer widgets to display on screen and more awkward shortcuts. This could point towards something like vi, or maybe even Oberon&#x2F;acme, with touch gestures taking the place of mouse button chords.')