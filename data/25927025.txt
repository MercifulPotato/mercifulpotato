Item(by='MayeulC', descendants=None, kids=None, score=None, time=1611747608, title=None, item_type='comment', url=None, parent=25921506, text='I agree about your point on complexity, that was my second thought. Especially for such critical pieces of infrastructure. Thank you for mentioning doa, I will have a look.<p>But the two are pieces of the same puzzle (defence in depth). Ideally, SUID binaries should be formally specified&#x2F;verified (ada+spark?), though you could still have bugs in the specification.<p>And I&#x27;d argue that if you need more specific features than just `sudo`&#x27;s core functionality, you should probably just make your own setuid binary. That still exposes you to making the same mistakes, so better keep the complexity low, and still rely on a memory-safe language. Using proved, lightweight libraries helps getting an implementation correct.<p>As much as I like C (which is the language I&#x27;m most proficient with), it just gives you too many ways to shoot yourself in the foot, and IMO isn&#x27;t really the best suited for something where:<p>- performance doesn&#x27;t really matter<p>- memory safety, typechecking are critical.<p>You could always get away with a transpiler for a DSL, or a compiler that injects more checks, but better suited tools are available anyway.')