Item(by='simias', descendants=None, kids=[24851249], score=None, time=1603285578, title=None, item_type='comment', url=None, parent=24845918, text='So I have zero experience with Meson but quite a bit of experience maintaining C++ codebases of varying quality and with all sorts of build systems (qmake, autotools, cmake, simple Makefiles, ...) and honestly I think if you want to make a build system that works reliably, doesn&#x27;t take 3 months to learn to use correctly and gives you all the features you want you&#x27;ll have to cut on flexibility.<p>Otherwise you end up with a complicated mess that everybody uses differently and you have to relearn on every single codebase.<p>Rust&#x27;s cargo is one of the most inflexible build systems I&#x27;ve ever used. It&#x27;s great. When I open any random Rust crate I know exactly what to expect, where to find what I&#x27;m looking for and what I need to tweak to fit my needs.<p>&gt;ant to have file foo&#x2F;bar&#x2F;baz.c compile to foo&#x2F;bar&#x2F;baz.o in the build tree? Nope, must be foo_bar_baz.c.o. Want to have source files with a .inc.c extension which aren&#x27;t compiled like plain .c files? Nope, you need to rename them to .c.inc.<p>Great. Sold.<p>Not that I particularly care about these particular stylistic choices, what matters is that I know that any project using Meson will work the same way. I never liked the &quot;mod.rs&quot; convention of Rust, but I definitely think that it would be worse if you could override it on a per-project basis.<p>Again, I have no first hand experience with Meson so maybe it does suck but in my book being opinionated is actually a very good sign and I&#x27;ll definitely have a look at it if, god forbid, I have to start a new C++ project in the future.')