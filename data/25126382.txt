Item(by='jillesvangurp', descendants=None, kids=[25126624], score=None, time=1605633500, title=None, item_type='comment', url=None, parent=25121705, text='We&#x27;re currently in an era where UI mostly means doing react type stuff or IOS&#x2F;Android native, for whatever very loose definition of native you wish to use.<p>A trend that is interesting here is jetpack compose and swift UI, which are both inspired by react but better in the sense that they make full use of their respective type systems to make things like data bindings a lot less painful than they are in react. At least that being painful must be a reason why they keep changing how that works in every major release.<p>Add internal DSLs to the mix and you are basically looking at a nicer way to do UIs. That&#x27;s only covering mobile currently unfortunately. However, Jetbrains just announced Compose Desktop which brings this to the desktop as well. If they figure out how to target web and IOS with this, they could very well have a winner.<p>For the web there is currently something called Fritz2, which runs via kotlin-js and basically adds very similar style bindings to a react like component framework. It&#x27;s fully written in Kotlin and I&#x27;ve been meaning to give it a try so I can use my multi platform kotlin libraries there as well without having to figure out react and how to make that play nice with things like co-routines, data classes, etc.<p>For me the trend here is new UI frameworks originating outside of the javascript world gaining traction and eventually ending up running in a browser as well. IMHO it&#x27;s that that is ripe for disruption.')