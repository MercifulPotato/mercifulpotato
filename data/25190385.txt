Item(by='The_Colonel', descendants=None, kids=[25190593, 25194335], score=None, time=1606158491, title=None, item_type='comment', url=None, parent=25190029, text='&gt; you need to have someone who is very comfortable saying &quot;no&quot; to be in charge of maintaining the interface.<p>Of which the end result will be that the desired functionality will be somehow hacked within the plugin or will not be available at all.<p>Problem with such plugin based architecture is that it relies on a well designed interface. Person which designs the interface needs to have very good idea of how that interface will be used in the future, which is difficult &#x2F; often impossible thing to do.<p>When business requirements change, you then have the difficult dilemma - just insist on &quot;no&quot;, introduce a minimal hack, redesign interfaces to support the use case in a clean way (possibly big task) etc.<p>&gt; your encapsulation suffers death by a thousand cuts. you can end up with a de facto monolithic codebase that also has a complicated plugin interface that doesn&#x27;t really encapsulate anything.<p>Yes, worst outcome of all. In reality, plugin based architecture is no silver bullet. It can be very counter productive, especially when you&#x27;re figuring out what you actually want to build, as you build it.')