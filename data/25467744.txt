Item(by='smiths1999', descendants=None, kids=[25468296, 25468089], score=None, time=1608303908, title=None, item_type='comment', url=None, parent=25467408, text='I&#x27;m sure many will come down hard on my comment and disagree. But speaking as someone who teaches at a university and also works in industry and is involved in hiring, I don&#x27;t think becoming an expert in git is worth your time. At this stage in your career you should spend your time mastering algorithms, data structures, and a compiled language like Java or C++. I would put emphasis on learning how to use your language of choice idiomatically (e.g., iterators, streams, the standard library and its core data structures, etc.). In my experience, the best way to do this is practice Leetcode every day. Doing one question a day (a 30-60min commitment) will put you leagues ahead of your peers. Combine this with reading a major book on your language (e.g., Effective Java or Modern C++ Design, etc.)<p>Without getting sidetracked about the merits of the technical interview, it is current a fact of life. In my experience most undergrads struggle solving even the most basic problems and even if they come up with a solution, they are unable to code it in any language of their choice. If you are coming out of university as a &quot;git expert&quot; and can&#x27;t code up a basic solution, you will get passed over every time.<p>Most teams (at least in my experience) are not struggling to solve git problems (although they certainly pop up). So while you could add some &quot;value&quot; there, overall you aren&#x27;t adding a whole lot of value. On the other hand, if you know your language and are a moderately competent coder, you can add a lot more value.')