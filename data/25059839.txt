Item(by='mumblemumble', descendants=None, kids=[25060030], score=None, time=1605112680, title=None, item_type='comment', url=None, parent=25059639, text='Follow up thought: To me, dynamic features are useful, and a net win for maintainability, when they allow you to write smaller, simpler code. Just picking some magic numbers out of thin air, say I can get the same job one in 100 lines of Python or 1,000 lines of Java. It&#x27;s likely, if not guaranteed, that the Python code base will end up being easier to maintain in the long run.<p>I think that sometimes maintainability comparisons fail to be entirely fair because they rely on cross-language comparisons of codebases of similar size, rather than of similar levels of functionality. Which is only natural, since substantive opportunities for the latter kind of comparison are rare in the wild, but still.<p>To take a concrete example: The original Smalltalk system was this enormously featureful piece of software, even by today&#x27;s standards. And it was written in one of the most dynamic languages ever, but it was also famously maintainable. My impression (admittedly based only on poking around at the edges a bit and not actually living in Smalltalk in any serious way) is that the reason for this is that the whole thing was implemented with so little - and such simple - code that, in stark contrast to just about any other GUI environment, it was feasible for a single person to read <i>and understand</i> the whole thing in a reasonable amount of time.')