Item(by='loup-vaillant', descendants=None, kids=None, score=None, time=1610188167, title=None, item_type='comment', url=None, parent=25696584, text='&gt; &gt; <i>That proof can in theory be tied to a particular message.</i><p>&gt; <i>It&#x27;s a good point that a signature is needed, so code is not simpler.</i><p>A common misconception. One that I would forgive, if I didn&#x27;t already linked to a counter-example in this very thread: <a href="https:&#x2F;&#x2F;noiseprotocol.org" rel="nofollow">https:&#x2F;&#x2F;noiseprotocol.org</a><p>Noise protocols don&#x27;t use signatures. Their existence proves beyond the shadow of a doubt that mutual authentication can be achieved without signatures. Here&#x27;s an example:<p><pre><code>  Before the protocol\n  -------------------\n  sa : Alice&#x27;s private key\n  SA : Alice&#x27;s public key (known to Bob)\n  sb : Bob&#x27;s private key\n  SB : Bob&#x27;s public key (know to Alice)\n\n  Protocol\n  --------\n\n  Alice:\n    ea = random\n    EA = public_key(ea)\n    send -&gt; EA, SA\n\n  Bob:\n    eb = random\n    EB = public_key(eb)\n    send -&gt; EB, SB\n\n  Alice:\n    verifies that SB is indeed Bob&#x27;s key\n    ee  = DH(ea, EB)\n    es  = DH(ea, SB)\n    se  = DH(sa, EB)\n    key = HASH(ee, es, se)\n\n  Bob:\n    verifies that SA is indeed Alice&#x27;s key\n    ee  = DH(eb, EA)\n    es  = DH(sb, EA)\n    se  = DH(eb, SA)\n    key = HASH(ee, es, se)\n</code></pre>\nAt this point, Alice and Bob have a mutually authenticated, secret, shared session key. We only needed key exchange (and hashing) to achieve that.<p>Now if you need a public key infrastructure, that&#x27;s another matter. Stuff like certificate <i>does</i> require signatures. But that&#x27;s a separate matter from the protocol itself, which can verify the trustworthiness of a key buy a simple lookup. For instance, an IoT device can hold a copy of its Company&#x27;s public key. Or, Alice and Bob could have met in a crypto party.')