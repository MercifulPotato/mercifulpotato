Item(by='Cpoll', descendants=None, kids=None, score=None, time=1607225146, title=None, item_type='comment', url=None, parent=25320510, text='It&#x27;s a shame that you&#x27;re getting downvoted, because I see what you&#x27;re getting at, but I don&#x27;t think you&#x27;re talking about the same things.<p>I think you mean YAGNI, and I agree. I&#x27;ve seen plenty of over-engineered solutions.<p>On the other hand, when the parent say &quot;future change is contained,&quot; I take that to mean separation of concerns, plugin-based architectures, decoupling of business logic, etc. And I can also say I&#x27;ve seen plenty of under-engineered solutions, where you need to change constants in five places, and twenty different if-blocks just to add a simple feature.<p>An experienced developer who&#x27;s been using the codebase a long time can sometimes spot when an abstraction is needed right away. Conversely, an inexperienced developer won&#x27;t write twice and make an abstraction, they&#x27;ll write five times and make a headache for everyone.')