Item(by='tptacek', descendants=None, kids=None, score=None, time=1608862691, title=None, item_type='comment', url=None, parent=25533566, text='I&#x27;ve done a lot of professional work over the past few months† with WireGuard and can&#x27;t think of a piece of information I&#x27;ve ever needed to troubleshoot it that it doesn&#x27;t provide. You know about `dynamic_debug`, right?<p>There&#x27;s also just not that much to debug! You&#x27;ve got keys, allowed IP lists, and endpoint addresses. There aren&#x27;t a lot of other knobs to turn!<p>I think a thing that gets people into trouble with WireGuard is not understanding how modest its design is. The goal of WireGuard is to drop into the networking stack as just another interface. It doesn&#x27;t intend to implement an entire new networking model on top of itself. My experience has generally been, if it&#x27;s straightforward to express in the Linux networking model, it&#x27;s straightforward with WireGuard.<p>I think this is a very good thing. I really don&#x27;t want to have to think about what the OpenVPN developers believe about networking in general. I want to bring up secure transports and route packets over them the way I&#x27;d route over any other tunnel I want orthogonal, predictable interfaces that I (or Tailscale, or whatever) can build more complicated things on top of.<p>† <a href="https:&#x2F;&#x2F;fly.io&#x2F;blog&#x2F;ipv6-wireguard-peering&#x2F;" rel="nofollow">https:&#x2F;&#x2F;fly.io&#x2F;blog&#x2F;ipv6-wireguard-peering&#x2F;</a>')