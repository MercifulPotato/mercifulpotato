Item(by='aseipp', descendants=None, kids=None, score=None, time=1606307347, title=None, item_type='comment', url=None, parent=25208031, text='There&#x27;s quite a bit more to it than that, though.<p>First, the &quot;closed nature&quot; thing is just as true about x86 as it is about ARM; you don&#x27;t get full specs for any machine these days, Broadcom or not. Rather, from the perspective of &quot;Linux developers who write code on and deploy to Linux&quot; — or maybe &quot;Linux Desktop Users&quot; — the difference is in peripheral discovery and setup, of which x86 has ACPI and UEFI to dynamically discover and configure devices upon every boot, while ARM boards use device tree, which is static and requires up front, BSP-specific descriptions.<p>Userspace binaries for AArch64 Linux will work across most devices. A RPi4 running Ubuntu and a RockPro64 running Ubuntu will use the same binaries just fine. The problem is when vendors have kernel patches or workarounds that make booting harder. But it&#x27;s not like literally all software stops working on a specific date. If you have the kernel and dtb, you can make it work and keep your system booting. It&#x27;s <i>definitely</i> less than ideal, if you think of it like a desktop, where timely updates are common and easy. But it&#x27;s doable. And more devices seem to be moving towards an upstream-first model, so this seems like less of a problem anyway. I&#x27;ll also note it&#x27;s not actually <i>hard</i> to package a device tree blob with a userspace+kernel, it&#x27;s just that most &quot;desktop&quot; distros make spinning custom variants unreasonably hard, IMO, so you need Buildroot&#x2F;Yocto or whatever to build custom images. And again, &quot;Linux users&quot; like, say, most people reading this comment, don&#x27;t actually want Yocto — they want Arch or Debian or whatever. A bit chicken and egg.<p>Furthermore, the RPi4 also supports ACPI and UEFI (upstream Tianocore) which is continuously improving, so it can support generic Linux distros. I have a &quot;generic&quot; Fedora 33 install working on my RPi4, with UEFI boot, all from a USB3 stick. It even installed using an ISO, and I configured the install using Anaconda, identically to x86. The Pi4 also has a production date of at least 2026, and almost the entire userspace software stack is completely upstreamed now, including kernel, graphics drivers, and peripherals. So from the perspective of someone who treats the RPi as a kind of &quot;mini Linux Desktop&quot;, most of your complaints don&#x27;t really apply at all. But...<p>---<p>The actual biggest problems with the lack of specs&#x2F;dtb shit&#x2F;&quot;closed stuff&quot; <i>isn&#x27;t</i> when you want to treat it like a normal Linux machine with keyboard&#x2F;usb&#x2F;ethernet. That&#x27;s easy and works today. You can get most of the desktop Raspberry Pi experience, including generic distro boot, today! It&#x27;s when you want to treat it like an actual &quot;embedded device&quot; where you write custom drivers or poke GPIOs or use hardware features, or whatever. That&#x27;s where the closedness sucks, but in that case, even if it sucks or there&#x27;s no specs, there&#x27;s normally <i>no realistic x86 alternatives</i>.<p>Sure, you can buy a $100 x86 device in an RPi form factor with RAM and plug a keyboard into it, and it&#x27;s OK if it uses 2x as much power at load, <i>if you just want a mini desktop that is cool</i>. But where&#x27;s the $20 x86 device that has a shitload of I&#x2F;Os I can use to interface with various peripherals of my choosing, with all the accompanying good stuff like good DAC&#x2F;ADCs, GPIOs, camera support, eMMC? And where can I buy them? Where&#x27;s the $5 RPi Zero alternative? Because the ODROID-H2+ is $120 USD, and <i>doesn&#x27;t even have GPIOs</i>!')