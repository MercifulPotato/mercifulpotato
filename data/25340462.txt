Item(by='hn_throwaway_99', descendants=None, kids=[25343738], score=None, time=1607391095, title=None, item_type='comment', url=None, parent=25336461, text='Yes, in my current tech stack our entire backend is in Node with TypeScript, and the front end is React with TypeScript.<p>&gt; You could argue here there are much better languages and platforms for that.<p>You could, but I think you&#x27;d be wrong. I come from a background of using Java on the backend for over a decade, then some time with various backend languages including Python and Ruby. This is the first time in my career when everything (front end and back end) are essentially on the same stack, and there are huge, gigantic productivity improvements to that. Most of it stems from it being easy for developers to switch between front end and back end code. E.g. it&#x27;s very easy for front end developers to dig in and debug something that&#x27;s not right on the back end, and usually to fix it themselves. Same thing goes for backend devs investigating how APIs are used by the front end. In all my previous jobs it was relatively rare (certainly not never but not that common) for devs to cross that divide, mainly because setting up the environment in a totally different stack was time consuming and annoying, and mentally context switching into a different language was difficult, if all you wanted to do was dig in on one particular endpoint, for example.<p>But even discounting that, I am much more productive in TS than I ever was with Java, primarily because the structural typing of TS makes thing much easier to refactor compared to the nominal typing of Java. Sure, there are some cases (mainly WRT scalability) where Java may be a better choice, but the idea that TS&#x2F;Node is not an awesome choice for the server is outdated IMO.')