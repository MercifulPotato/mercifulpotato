Item(by='kempbellt', descendants=None, kids=None, score=None, time=1606869152, title=None, item_type='comment', url=None, parent=25269914, text='Piggybacking on @flatline&#x27;s comment: AWS is great for hobby projects as well. The beautiful thing is that AWS has free tiers for a lot of their services, so you can play around without committing much (if any) money. Check out <a href="https:&#x2F;&#x2F;aws.amazon.com&#x2F;free&#x2F;" rel="nofollow">https:&#x2F;&#x2F;aws.amazon.com&#x2F;free&#x2F;</a><p>For a hobbyist, lambda is basically always free - so long as you stay under 1 million requests and 3.2 million compute-seconds per month. <i>Super</i> friendly for just playing around with, imo. I barely pay anything for the hobby projects I run in AWS - literally pennies per month.<p>Much of AWS&#x27; praise comes from the ability to <i>scale</i> projects if there comes a need. If your hobby project running on 5 lambdas gets super popular over the weekend and you suddenly need 10,000 times the power - <i>done</i>. AWS handles this kind of dynamic scaling extremely well, <i>and</i> reliably. So well in fact, that you might handle a 10k X increase in demand without even noticing, because AWS is that flexible, until you get your bill and realize that you exceeded the free tier - be careful with this ;) This is why a lot of big-name software companies use AWS though.<p>However, over recent years, there&#x27;s been a lot of in-fighting in the community about which AWS services handle which types of projects better&#x2F;cheaper&#x2F;more reliably&#x2F;etc. You can host a static site in S3 with lambda as an API backend and a DynamoDB for essentially no cost. You can also manually spin up an EC2 instance running Ubuntu, and write&#x2F;deploy that site to the server by hand. There are also half a dozen other services that will spin up that EC2 instance for you, if you&#x27;d like to automate that process for any reason.<p>The confusing part about Proton is that it <i>seems</i> to be an abstraction service for other AWS services, that glues together functionality to make it easier for some niche purpose. I couldn&#x27;t glean what that purpose is from the landing page, or what Proton is doing behind the scenes to accomplish it. So it&#x27;s essentially a big ?? for me.<p>CloudFormation is...complicated, especially for an inexperienced AWS user. It&#x27;s a power-user tool that you can use to define your AWS infrastructure with code, rather than manually within each service. It&#x27;s very cool, and very powerful, but you can also get by completely fine without it in most cases. I would not recommend spending much time learning it without having a better grasp on the individual services you are trying to define first.')