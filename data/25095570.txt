Item(by='jodrellblank', descendants=None, kids=None, score=None, time=1605387556, title=None, item_type='comment', url=None, parent=25094458, text='I&#x27;m not sure. In his article on &quot;Building Online Communities&quot; (<a href="http:&#x2F;&#x2F;hintjens.com&#x2F;blog:117" rel="nofollow">http:&#x2F;&#x2F;hintjens.com&#x2F;blog:117</a>) he says he experimented with building online communities for three years and gathering results, and that ZeroMQ is his biggest success (at being organised to defend to both vendor capture, or takeover by a single powerful&#x2F;competent&#x2F;rude contributor). For background of why that was his focus, he wrote this (<a href="http:&#x2F;&#x2F;hintjens.com&#x2F;blog:125#toc15" rel="nofollow">http:&#x2F;&#x2F;hintjens.com&#x2F;blog:125#toc15</a>) about his experiences with working on OpenAMQ:<p>&quot;&quot;&quot;<i>In late 2009, the Chair and Red Hat sat down and decided, in a secret meeting, to rewrite the spec. [...] From scratch. By himself. After years and years of committee work. After years of investment by others in working code. Without asking anyone except Red Hat. And then, to force this spec through the working group using his usual tactics: bullying and lobbying. [...]</i><p><i>One of my spin-off projects was the Digital Standards Organization, and I came to understand what was needed to protect a standard from predatory hijack. I summarized the definition of a &quot;Free and Open Standard&quot; as &quot;a published specification that is immune to vendor capture at all stages in its life-cycle.&quot; What the &quot;free&quot; part means is, if someone hijacks your working group and starts to push the standard in hostile directions (as Red Hat did), can you fork the standard and continue? Does the license allow forking, yes or no? And secondly, does the license prohibit &quot;dark forks,&quot; namely private versions of the standard?</i><p><i>If either answer is &quot;no,&quot; then you are at the mercy of others. And when there is money on the table, or even the promise of money, the predators will move in. The AMQP experience gave me a lot of material for my later book on psychopaths. [...]</i><p><i>If we&#x27;d managed to build a thriving community around OpenAMQ, it would have survived. So the lesson here is simple: community before code. Today this is obvious to me. Eight years ago, it wasn&#x27;t.</i>&quot;&quot;&quot;<p>And reference this (<a href="http:&#x2F;&#x2F;hintjens.com&#x2F;blog:120" rel="nofollow">http:&#x2F;&#x2F;hintjens.com&#x2F;blog:120</a>) Social Architecture FAQ which talks about rude but highly skilled people contributing to projects (read that with &quot;community before code&quot; and the quote &quot;if you want to go fast go alone, if you want to go far go together&quot; in mind).')