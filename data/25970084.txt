Item(by='SloopJon', descendants=None, kids=[25970455], score=None, time=1612022474, title=None, item_type='comment', url=None, parent=25969145, text='He touched on JSON parsers in a previous post about fast_double_parser: &quot;People who write fast parsers tend to roll their own number parsers (e.g., RapidJSON, sajson), and so we did. However, we sacrifice some standard compliance.&quot;  (The &quot;we&quot; in this context refers to simdjson.)<p><a href="https:&#x2F;&#x2F;lemire.me&#x2F;blog&#x2F;2020&#x2F;03&#x2F;10&#x2F;fast-float-parsing-in-practice&#x2F;" rel="nofollow">https:&#x2F;&#x2F;lemire.me&#x2F;blog&#x2F;2020&#x2F;03&#x2F;10&#x2F;fast-float-parsing-in-prac...</a><p>He followed up in a comment: &quot;RapidJSON has at least two fast-parsing mode.  The fast mode, which I think is what you refer to, is indeed quite fast, but it can be off by one ULP, so it is not standard compliant.&quot;<p>The Github README for this new project says, &quot;The fast_float library provides a performance similar to that of the fast_double_parser library.&quot;<p><a href="https:&#x2F;&#x2F;github.com&#x2F;fastfloat&#x2F;fast_float" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;fastfloat&#x2F;fast_float</a><p>However, the benchmarks show a significant improvement relative to those in the fast_double_parser README:<p><a href="https:&#x2F;&#x2F;github.com&#x2F;lemire&#x2F;fast_double_parser" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;lemire&#x2F;fast_double_parser</a><p>I tried to run the benchmarks, but my CMake is apparently too old, and Homebrew barfed all over the living room rug when I tried to update it.')