Item(by='cxr', descendants=None, kids=None, score=None, time=1611592608, title=None, item_type='comment', url=None, parent=25904431, text='I&#x27;ve been advocating for this type of thing, especially since a lot of the tooling around NodeJS is so bad, viz:<p><a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24495646" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24495646</a><p>For my personal site, I switched to Marijn Haverbeke&#x27;s Heckle &lt;<a href="https:&#x2F;&#x2F;marijnhaverbeke.nl&#x2F;blog&#x2F;heckle.html" rel="nofollow">https:&#x2F;&#x2F;marijnhaverbeke.nl&#x2F;blog&#x2F;heckle.html</a>&gt; several years ago.  I realized that I could pretty easily do a rewrite that uses my browser&#x27;s native JS engine + browser APIs instead of requiring NodeJS and depending on the slipshod fragility of the NPM ecosystem.  The result is triickl:<p><a href="https:&#x2F;&#x2F;codeberg.org&#x2F;triplescripts&#x2F;triickl" rel="nofollow">https:&#x2F;&#x2F;codeberg.org&#x2F;triplescripts&#x2F;triickl</a><p>What&#x27;s more is that, because I also created some tools that allow triickl (and similar programs) to be packed into a single, self-contained file that can run in the browser (e.g. buildfoo.html or pages.app.htm), it&#x27;s pretty natural to let there be a page on the target site corresponding to this file.  The end result is that if you&#x27;re using triickl, you can clone the site&#x27;s source repo and then use buildfoo.html to generate the static assets.  In other words, so long as you&#x27;re able to get your hands on the source tree, then every computer is already a development system.')