Item(by='davidkell', descendants=None, kids=[25025427], score=None, time=1604838113, title=None, item_type='comment', url=None, parent=24999103, text='The two places I’ve seen this working best today:<p>- Open source data science&#x2F;scientific computing ecosystems. Notably python, where all the libraries interop seamlessly via numpy&#x2F;pandas&#x2F;arrow and Jupyter is the visual coding platform. But also R&#x2F;tidyverse and Julia.<p>- Modern “no-code” tools, where the visual coding is Notion&#x2F;Coda&#x2F;Bubble, interfaces via Zapier&#x2F;Integromat&#x2F;Autocode and data models in Airtable&#x2F;Sheets. (Many of these tools use the word “block” as part of the UX)<p>And ofc, we take it for granted but the concept of a “file” is the ultimate building block for applications.<p>In my experience, commercial disincentives aside, the main trade off for this power&#x2F;flexibility is the complexity. It is intimidating for new users, and hard to design well for because of the combinatorial explosion of interactions. Users need to be strongly motivated to get over this complexity hump - whereas most users, most of the time want a single happy path. Personally I don’t see this as a negative thing - you are essentially coding best practices into the tool.<p>As an aside, the instant feedback coding in python looks fantastic! Could be a fantastic extension eg for Jupyterlab or VSCode.')