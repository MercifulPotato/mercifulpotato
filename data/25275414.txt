Item(by='ncmncm', descendants=None, kids=[25275668], score=None, time=1606908277, title=None, item_type='comment', url=None, parent=25273708, text='Me, I&#x27;m ready to see a Risc-6 fork. By keeping most of the details, and just fixing certain unfortunate early choices, it could benefit from almost all the work done on RISC-V, but outpace it in performance.<p>RISC-V embodies many unnecessarily weird and costly choices that would be easy to patch if you were not obliged to retain bitwise compatibility. At the same time, it benefits from a great deal of verification work that could itself be retargeted relatively cheaply, and applied to the forked ISA. Similarly, implementations could be forked with minimal effort, and get a very cheap performance boost. Compiler code generators would also be easy to fork.<p>Pretty comprehensive lists of small but costly design booboos have already been published.<p>Probably the biggest fundamental problem in the RISC-V world is the extensions architecture, where each huge extension effectively holds hostage its few most valuable instructions.<p>For example, the base instruction set lacks the extremely valuable POPCNT instruction. You don&#x27;t get it without swallowing the whole, huge B extension, which itself has not even been finalized. Likewise ROTL&#x2F;ROTR, essential in hashes and crypto. Even multiplication is missing from the base set, unavailable without a lot of other stuff.<p>Freedom to fork is one of the great benefits of the Free Software movement. The same kind of benefits should be possible for a forked ISA.<p>Really, network benefits can accumulate for two or more related ISAs as well as for just one, if no corporate walled garden prevents it.')