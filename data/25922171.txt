Item(by='ddevault', descendants=None, kids=[25922834, 25922359, 25923624, 25922467], score=None, time=1611702893, title=None, item_type='comment', url=None, parent=25922081, text='Even if we run the same math with 7 out of 10 bugs being memory safety related, and assuming that Rust prevents <i>all</i> of them, those same example programs end up with 30 bugs in Rust and 10 bugs in C.<p>There&#x27;s another argument I could make, too. Look at the bug tracker for the program you want to rewrite in Rust, examining the historical bugs. You&#x27;ll find that there are often hundreds or thousands of mistakes that they made and already fixed in the original codebase. If you&#x27;re rewriting it from scratch, can you be sure you won&#x27;t make just as many? A stable, maintained codebase with a low throughput of changes tends to have fewer bugs over time, as the lack of churn avoids introducing new bugs and the application of time susses out all of the existing bugs. Rewriting the whole thing from scratch has a very high rate of churn, introducing a whole new slew of bugs on its own.<p>Now, a small codebase, focused on delivering its key value-adds without distractions, kept stable and at a low-churn rate over a long period of time: no matter what language you use, this is the best recipe for reliability and security.')