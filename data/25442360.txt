Item(by='mcint', descendants=None, kids=None, score=None, time=1608126158, title=None, item_type='comment', url=None, parent=25441664, text='When hackers[1] wax poetic about lisp, they focus on the core properties of the language (-family) that aren’t found in other languages. The meta-circular evaluator (lisp interpreter&#x2F;compiler in lisp), “homoiconic” syntax (enabling easy modification of code), and others. These are what stuck with me most strongly.<p>ClojureScript (cljs) (and Clojure) I would recommend as practical, but simple and approachable dialects.<p>Scheme is a good, simple dialect to learn if you’re just looking to grok lisp  in “maxwell’s equations” elegance (but not work in it). Not nearly as many libraries written for it as Common Lisp has, or Clojure with JVM interop, or CLJS with javascript+node interop).<p>Whether you use Scheme or cljs (or another~), I recommend SICP[2] “Structure and Interpretation of Computer Programs”, free online from MIT press. There’s even an interactive, editable version online [3] (though it doesn’t support saving reader code)<p>[1]: <a href="http:&#x2F;&#x2F;www.paulgraham.com&#x2F;lisp.html" rel="nofollow">http:&#x2F;&#x2F;www.paulgraham.com&#x2F;lisp.html</a><p>[2]: <a href="https:&#x2F;&#x2F;mitpress.mit.edu&#x2F;sites&#x2F;default&#x2F;files&#x2F;sicp&#x2F;index.html" rel="nofollow">https:&#x2F;&#x2F;mitpress.mit.edu&#x2F;sites&#x2F;default&#x2F;files&#x2F;sicp&#x2F;index.html</a><p>[3]: <a href="https:&#x2F;&#x2F;xuanji.appspot.com&#x2F;isicp&#x2F;" rel="nofollow">https:&#x2F;&#x2F;xuanji.appspot.com&#x2F;isicp&#x2F;</a>')