Item(by='duckfang', descendants=None, kids=[25983346], score=None, time=1612116954, title=None, item_type='comment', url=None, parent=25978068, text='Part of why GRC is computationally expensive is multiple reasons...<p><pre><code>    1. GRC is really just a python front-end. You can see that by generating the .py script for any flow\n    2. sample mismatch\n</code></pre>\nNote about the sample mismatch... &quot;man rtl_fm defaults to 24Ksps&quot; , whereas the flowgraph for retrieving all the sideband data is set to 2.4Msps. The Gnuradio flow is crunching 100x the data as rtl_fm does.<p>Now, if detection of each pilot tone is done across 2.4MHz of the total sample on the rtl-sdr, then you could retrieve all the stations in view. However, this is centering on a single channel (106.7MHz), and therefore effectively &#x27;wasting&#x27; all the extra retrieved IQ data.<p>Tl;dr. GRC isn&#x27;t inherently CPU intensive - chewing through 100x the data IS computationally expensive.')