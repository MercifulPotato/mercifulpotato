Item(by='ragnese', descendants=None, kids=None, score=None, time=1607103063, title=None, item_type='comment', url=None, parent=25304915, text='&gt; I&#x27;m not sure I get your point about colored functions. Under the hood the compiler generates what is basically a callback structure not unlike what you get in javascript (i.e. a promise). It gains features like callback hierarchies, cancellation, etc. Loom fixes this by forcing you to wrap things with a Thread. Same kind of mental overhead.<p>The difference is that I&#x27;m not allowed to pull apart the callback structure that colored functions (in Kotlin) cause the compiler to make. Instead, I just have a colored function I have to work with. And it&#x27;s incompatible (in one direction) with functions of the wrong color.<p>Colored functions don&#x27;t compose well. The green thread approach allows you to call anything from anywhere and compose whatever you want. When you choose to make it asynchronous, then you wrap it in a green thread and fire it off. That&#x27;s pretty different than having two juggle different colored functions AND still needing to fire them off via whatever coroutine laucher.')