Item(by='WorldMaker', descendants=None, kids=None, score=None, time=1610582203, title=None, item_type='comment', url=None, parent=25766091, text='&gt; For &quot;Store&quot; apps, you would be using UWP, which are the &quot;modern UI&quot; apps you see when you use Windows 10. These can run on any Windows 10 version and Xbox One+. You can also make that style of app with WPF by theming it though.<p>&quot;Project Reunion&quot; which has key pieces in .NET 5 (including and especially the new C#&#x2F;WinRT projection system, which replaces dark&#x2F;magic .NET internals with NuGet packages) is entirely blurring the line between WPF and UWP. With WinUI 3 you can use all of the modern UI controls in WPF apps (and in WinForms if you&#x27;re nasty). You can also package WPF apps for the Store, including opting into UWP sandboxing and security models (though not yet far enough that you can run WPF on the Xbox yet). (The ability to package WPF, WinForms, and other Win32 applications has been around for some time, in fact, that&#x27;s not specifically new. Project Reunion has roadmap features to keep making it a better experience, though.)<p>&gt; Xamarin is now mostly used for mobile .NET development, but I really can&#x27;t recommend it nowadays as there&#x27;s a lot of cruft and documentation, in comparison to the stellar work MS has been doing, is quite lacking. If you need to reuse .NET code in your mobile apps, it&#x27;s there as a way for you to do that.<p>Upcoming .NET 6 will see Xamarin merged closer&#x2F;deeper inside and the cross-platform pieces (currently named Xamarin.Forms and Xamarin.Devices) rebranded MAUI. Presumably that will also involve a lot of spring cleaning out of cruft and upgrades to the documentation. There&#x27;s also roadmap talk of much more desktop support beyond just mobile (people wanting to share code not just between Android and iOS, but also Windows, macOS, and Linux).')