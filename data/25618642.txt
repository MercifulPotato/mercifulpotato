Item(by='hardwaresofton', descendants=None, kids=None, score=None, time=1609639161, title=None, item_type='comment', url=None, parent=25614913, text='&gt;  You can just write information out to files in Terraform with no stress.<p>This wasn&#x27;t the point -- it was that I wanted to do something that I know how to do in a fully featured programming language, and I can &quot;just do it&quot;. Writing local files is a very simple example -- unless you&#x27;re arguing that terraform&#x27;s capabilities amount to an entire language&#x27;s ecosystem, this is just the tip of the iceberg.<p>&gt;  So what&#x27;s the plumbing that you would have to do? Under the hood, Pulumi is using the Terraform providers...<p>I think I didn&#x27;t explain it well enough. Pulumi and Terraform are almost the same tool, but the difference is <i>how the pieces are plumbed together</i>. I prefer plumbing with a programming language more than shell scripts, utilities and&#x2F;or some other programming languages.<p>Also, Pulumi&#x27;s system of custom resources which are just pieces of code sitting in your codebase is fantastic and novel (terraform has custom providers but this feels significantly more heavy weight).<p>&gt; In my pipelines I don&#x27;t bother writing out to files things that are in terraform state. I just create an output for that state (potentially set to sensitive) and then use that output in my CI&#x2F;CD. Remote state stays encrypted and without wide access and I don&#x27;t have to worry about secrets being in files anywhere.<p>If you&#x27;re really adjusted to Terraform, and it works great for you, then awesome -- I&#x27;m not out to change how you do things. It sounds like you&#x27;ve fully bought in to the terraform way of doing things, and it&#x27;s working for you, and that&#x27;s great.<p>&gt; That&#x27;s where the bash scripts do things with outputs. It could by python or whatever, it doesn&#x27;t matter really. But with bash I can easily just set variables to `terraform output -json | jq &lt;select output &amp;&#x2F;|| do stuff&gt;`.<p>Here it is again... My point is that the plumbing matters, and a fully baked programming language offers the possibility of better plumbing. I didn&#x27;t touch on it much, but just having access to custom resources with Pulumi might be able to cut down the external plumbing to zero, and enable creating more reusable pieces.')