Item(by='StillBored', descendants=None, kids=None, score=None, time=1605892505, title=None, item_type='comment', url=None, parent=25159705, text='While mostly missing the mark, and just rehashing the old discussions. AKA the micro architecture concepts of both &quot;RISC&quot; designs and &quot;CISC&quot; designs is so similar across product lines as to be mostly meaningless. As mentioned you have RISC designs using &quot;micro ops&quot; and microcode, and you have CISC designs doing 1:1 instruction micro op mapping. Both are doing various forms of cracking and fusing depending on the instruction. All have the same problems with branch prediction, speculative execution, and solve problems with OoO in similar ways.<p>Maybe the largest remaining difference is around the strength of the memory model, as the size of the architectural register file, and the complexity of addressing modes and other traditional RISC&#x2F;CISC arguments are mostly pointless in the face of deep OoO superscaler machines doing register renaming&#x2F;etc from mop caches, etc.<p>Even then, like variable length instructions (which yes exist on many RISCs in limited forms) this differentiation is more about when the ISA was designed rather than anything fundamental in the philosophy.')