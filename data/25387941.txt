Item(by='tombert', descendants=None, kids=None, score=None, time=1607706190, title=None, item_type='comment', url=None, parent=25382961, text='Honestly, I just went through all the JeroMQ examples ported from the guide [0], and translated them to Clojure. I added no dependencies outside of JeroMQ, and tried to port them in an as-idiomatic-as-possible way.  It actually wasn&#x27;t too hard once I wrapped my head around it, and it took me about 6-8 hours in total (spread over the course of a week or so), so not a huge time sink. This also had the (unintended) benefit of me getting pretty good with ZeroMQ (and networking patterns in general), so I think that time investment paid for itself several fold.<p>I definitely think there needs to be a better messaging with the library support in Clojure; as it stands, a Clojure newbie might (very reasonably) look up &quot;clojure zeromq&quot; on Google, get a crappy, unmaintained library, and dismiss the language as having &quot;bad library support&quot;, when in reality most of the Clojure veterans that I work with do the same thing that I do: when the Clojure libraries are bad, just use the Java ones.<p>There are exceptions to this in rare cases; I haven&#x27;t done a ton of ClojureScript, but the bit I have, I genuinely really liked the Re-frame framework.  I&#x27;m not a frontend guy, so I&#x27;m speaking largely out of my ass, but I found it to be a lot more pleasant then vanilla React.<p>[0]<a href="https:&#x2F;&#x2F;github.com&#x2F;zeromq&#x2F;jeromq&#x2F;tree&#x2F;master&#x2F;src&#x2F;test&#x2F;java&#x2F;guide" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;zeromq&#x2F;jeromq&#x2F;tree&#x2F;master&#x2F;src&#x2F;test&#x2F;java&#x2F;g...</a>')