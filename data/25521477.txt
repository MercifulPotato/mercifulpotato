Item(by='abeppu', descendants=None, kids=None, score=None, time=1608753392, title=None, item_type='comment', url=None, parent=25505701, text='What&#x27;s needed to automate &#x2F; mechanize defunctionalization? In worked examples like this one, and the Reynolds paper mentioned (which I haven&#x27;t read in quite a while), it seems like the author has to know which functions get pulled out into the same data types and eval definition, which seems to be based on tracing how the functions get moved around and eventually called. For arbitrary programs, this can be quite hard -- e.g. perhaps I generate administrative lambdas of more than one flavor, and put them in a common data structure, and based on some invariant not encoded in the type system, I know which flavor of function is being read back or evaluated when.<p>I&#x27;m aware in a broad way that compilers &#x2F; program transformation systems have used defunctionalization, but I don&#x27;t quite see how without some sort of rich static analysis. Can anyone point me at what I&#x27;m missing?')