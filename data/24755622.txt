Item(by='zzzeek', descendants=None, kids=[24760687, 24760466], score=None, time=1602517545, title=None, item_type='comment', url=None, parent=24751264, text='SQLAlchemy author here.  The critique of &quot;Backbone&quot; and the original quoted author&#x27;s note at <a href="https:&#x2F;&#x2F;github.com&#x2F;jashkenas&#x2F;backbone&#x2F;issues&#x2F;2888#issuecomment-29076249" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jashkenas&#x2F;backbone&#x2F;issues&#x2F;2888#issuecomme...</a> expresses an issue that SQLAlchemy has as well.   A fine-grained development library has a ton of &quot;surface area&quot;.  Like Backbone, a large portion of our bugfixes necessarily infringe upon some previously undefined behavior that will now &quot;break&quot; for people who relied upon that.  If SQLAlchemy were pure semver, we too would be at SQLAlchemy 48.0.0, the third digit for us would usually be fixed at &quot;0&quot; and mostly useless, and we would have no way to distinguish between a &quot;major feature release with semi-breaking changes and removal of things that have been deprecated for years&quot; which is what we normally have in our 1.2, 1.3, 1.4 etc.  vs. a &quot;major release with significant backwards-incompatible changes&quot; which is what we will have in SQLAlchemy 2.0.<p>We necessarily include extremely detailed change documentation for a 1.x to 1.y release and our versioning system is described in great depth at <a href="https:&#x2F;&#x2F;www.sqlalchemy.org&#x2F;download.html#versions" rel="nofollow">https:&#x2F;&#x2F;www.sqlalchemy.org&#x2F;download.html#versions</a> .   I didn&#x27;t provide an easy word like &quot;romantic&quot; for this website to mock but we&#x27;re doing essentially the same thing AFAICT.<p>When Jeremy says &quot;This allows folks, immediately upon hearing about a new release, to get a rough sense of its scope.&quot;, that is exactly what we are doing as well when we are suddenly calling an upcoming release &quot;2.0&quot;.   The scope is dramatically broader than the scope in which we move from 1.x to 1.y.    It&#x27;s fun for semver purists to make clever (and definitely funny) websites mocking this need but that does not change that fact that semver does not work for every kind of project.')