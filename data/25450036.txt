Item(by='dgb23', descendants=None, kids=None, score=None, time=1608160138, title=None, item_type='comment', url=None, parent=25448311, text='I also don&#x27;t have a CS degree and am self-taught. And I very much agree with you that many CS concepts have quite a practical impact. Some of them more on the side of approach and selecting the right tech&#x2F;solution, but some have a more hands-on practical use.<p>- State machines: completely agree. I use them especially in the context of user facing stuff, like GUIs, animations and so on. In fact I would even argue that they are _inherent_: Even if you don&#x27;t recognize and specifically structure your code around them, they are still _there_ just smeared all over your logic.<p>- A&amp;D I find ubiquitous are: sets, graphs, trees. Sets especially are underused and graphs are the most expressive data structures if you need them and can help you model complex, long lasting models.<p>- Relational algebra is likely one of the most important concepts. It is fundamental to the Swiss army knife of databases: SQL.<p>- Algorithmic complexity: I rarely use this formally, but it really helps to get a decent intuition for performance.')