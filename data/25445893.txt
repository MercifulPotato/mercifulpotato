Item(by='nemoniac', descendants=None, kids=None, score=None, time=1608141763, title=None, item_type='comment', url=None, parent=25442267, text='I wouldn&#x27;t focus too much on &quot;sequencing, selection, and iteration&quot;. That&#x27;s only the start of it. It&#x27;s how you think if you&#x27;re programming Python or Java or C or whatever.<p>With Lisp you can better think in terms of abstractions. In particular how do you do data abstraction, how do you do functional abstraction (that&#x27;s the control flow: sequencing selection and iteration) and how do you do syntactic abstraction?<p>That last one is where Lisp (any Lisp) really comes into its own. It&#x27;s where you go beyond the expressiveness of those other programming languages. Whether you go with defmacro or define-syntax, it opens up a whole other world.<p>And the expressiveness here isn&#x27;t meant to suggest that you can write programs that you can&#x27;t in other languages (they&#x27;re all Turing complete) but that you can write new kinds of control flow and scoping constructs so you&#x27;re not limited to the sequencing selection and iteration that the language provides.')