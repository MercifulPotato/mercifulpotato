Item(by='Jtsummers', descendants=None, kids=None, score=None, time=1601583345, title=None, item_type='comment', url=None, parent=24655602, text='For context, the relevant answer:<p>&gt; Yes. STL is not object oriented. I think that object orientedness is almost as much of a hoax as Artificial Intelligence. I have yet to see an interesting piece of code that comes from these OO people. In a sense, I am unfair to AI: I learned a lot of stuff from the MIT AI Lab crowd, they have done some really fundamental work: Bill Gosper&#x27;s Hakmem is one of the best things for a programmer to read. AI might not have had a serious foundation, but it produced Gosper and Stallman (Emacs), Moses (Macsyma) and Sussman (Scheme, together with Guy Steele). I find OOP technically unsound. It attempts to decompose the world in terms of interfaces that vary on a single type. To deal with the real problems you need multisorted algebras - families of interfaces that span multiple types. I find OOP philosophically unsound. It claims that everything is an object. Even if it is true it is not very interesting - saying that everything is an object is saying nothing at all. I find OOP methodologically wrong. It starts with classes. It is as if mathematicians would start with axioms. You do not start with axioms - you start with proofs. Only when you have found a bunch of related proofs, can you come up with axioms. You end with axioms. The same thing is true in programming: you have to start with interesting algorithms. Only when you understand them well, can you come up with an interface that will let them work.<p>I have seen this a few times and have felt that &quot;hoax&quot; is the wrong word each time. Later he talks about OOP being &quot;philosophically unsound&quot;, which adds some clarity to the statement. It&#x27;s not that OOP or AI are made up (true hoaxes), it&#x27;s that they will not accomplish (in his view) what they set out to do because they are founded on unsound bases.')