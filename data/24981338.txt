Item(by='bilkow', descendants=None, kids=None, score=None, time=1604422301, title=None, item_type='comment', url=None, parent=24979893, text='&gt; You&#x27;d be constantly fighting the type checker for memory issues.<p>I think you mean borrow checker for ownership issues...<p>&gt; why doesn&#x27;t Haskell take the same route as Rust and ditch its garbage collector?<p>The Rust language was designed in a way (with ownership) that doesn&#x27;t need a GC, while Haskell have many different properties (such as lazy evaluate everything) that I don&#x27;t think would work well without a GC.<p>The borrow checker is usually a nuisance when you&#x27;re writing highly mutable code, which isn&#x27;t a problem for functional code. If you need to store the same data in multiple structures, the sibling is right, .clone() and .to_owned() will usually fix your problem with a very small overhead.')