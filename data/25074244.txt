Item(by='outworlder', descendants=None, kids=[25079753], score=None, time=1605211656, title=None, item_type='comment', url=None, parent=25072153, text='&gt; This feels very different from Azure or GCP.<p>Yes. Compared to those, newly AWS services are more likely to work with, and integrate with existing services. However, the further you stray from &#x27;Compute&#x27; the less likely this is to be the case. More &#x27;esoteric&#x27; services tend to be their own microcosm and sometimes feel like they could have come from another company entirely (Quicksight? etc)<p>This is still light years ahead of Azure (and to a less extent GCP), where even compute services will not necessarily work with one another. You need to make sure the &quot;SKU&quot;s are compatible. Want to use some fancy storage? Oh no you need to use SKUs XYZ and premium this premium that. Whereas if AWS releases a new storage type (such as IO2), you can pretty much assume you can attach that to any of your existing instances (even if some particular types could be recommened).<p>Not to mention surprising behavior when you try to mix and match features. GCP and AWS, you have instances working perfectly fine, but you have discovered that they provide the ability to create &#x27;internal&#x27; load balancers? Cool! Create one, point to the instances, or point to their respective automatically managed groups (ASGs or instance groups). It will be there in case you need it, your workloads are unaffected. Do that on Azure, and now your instances have no internet connectivity whatsoever, as all traffic is now routed through it. There are footguns everywhere.<p>Technically, GCP tends to be the most advanced of the bunch (their automatic instance migration is <i>brilliant</i>, meanwhile AWS keeps sending emails to us saying that some instance is degraded and it&#x27;s our problem now). Their networking capabilities are impressive as well (first to have global anycast load balancers, Google&#x27;s premium network, subnets spanning AZs, etc). However, they do seem to be too opinionated. Want proxy protocol on your NLBs, even though NLBs preserve source IP so in theory you don&#x27;t need this(but with K8s ingress you might). AWS says sure, we have the feature, enable it, we don&#x27;t care. Google says: why do you need proxy protocol, the source IP is there. These are not the headers you are looking for. Azure says: proxy protocol wat?')