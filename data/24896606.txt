Item(by='ddragon', descendants=None, kids=None, score=None, time=1603723126, title=None, item_type='comment', url=None, parent=24894380, text='I have doubts that the powerful tools that Lisp provides don&#x27;t work in large teams. OOP was declared the default abstraction for managing software in large teams but there were still a lot of unmanageable code, but still people kept using it and pooling their experiences, creating innumerous design patterns to handle each limitation, and through &quot;natural&quot; selection the do and don&#x27;t of OOP became more and more clear.<p>Lisp on the other side not only had less of that collective experience due to becoming less popular, but it was also famous as the language that gives super powers allowing programmers to do 10x more, so the experience was also biased for single dev performance. The Lisp Curse is a cultural problem, not a technological one, you don&#x27;t need to reinvent stuff just because it is easy (and fun).<p>I&#x27;m optimistic though since the new generation of languages (closure, elixir, julia, nim, rust) is increasingly going against the rooted belief in OOP (stuff like inheritance) and incorporating more Lisp features like macros, code as data and everything as expression. This means more and more large dev groups will have access to the tools and reason to make it scalable in order to get a little of that super power under control.')