Item(by='gumby', descendants=None, kids=None, score=None, time=1603157447, title=None, item_type='comment', url=None, parent=24833052, text='&gt; What free software is good at is proof-of-concept solutions. Someone looked at a tough problem and spent some evenings making an elegant solution.<p>That&#x27;s pretty dismissive of gcc, clang, linux, apache etc.  &quot;some evenings&quot;, eh?  By 2000 I&#x27;d put probably $60M into gcc alone.<p>&gt; The thing I care the most is how much effort (physical time and also distraction) does it take to solve my typical workday problems with certain software. And, based on my experience, GNU tools very rarely excel at this metric.<p>Whereas based on my experience it excels, in particular over software that only, or primarily works with a GUI.<p>The GNU tools in particular are optimized for their target end-user base.<p>You may happen not to be in it.  Nothing bad or good about that; there&#x27;s plenty of stuff for which I am not in the target user base.  It just seems odd you are so casually dismissive.<p>&gt; As an end user, the least thing I care about is how the program behaves under some synthetic circumstances [fuzz test] that I will very likely never encounter.<p>Actually you care a lot that your program is robust against fizz tests like these, for security and accident reasons... or you will care if it has not been subject to such tests.  Just as you care that your car has been crash tested &quot;under some synthetic circumstances&quot;')