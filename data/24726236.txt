Item(by='nawgz', descendants=None, kids=[24726365], score=None, time=1602211697, title=None, item_type='comment', url=None, parent=24725802, text='Thank you for the tutorial. It is quite a nice library, to be sure, and the freedom to work outside of the JS ecosystem, instead writing your servers however you please, seems ncie. However, I feel you are talking right past me to show me your library &amp; dislike of JS.  From my last message:<p>&gt; how are you making this [...] not require a page reload or server round-trip after the user clicks on a Table row<p>The whole appeal of SPAs is they take perhaps 2s longer to start up than your normal webpage, and then you get lots of instant interactions. The example above is one of them. Your model requires server round-trips for <i>every</i> interaction.<p>I get it - you don&#x27;t like JavaScript. I find your model quite nice and graceful for non-application purposes. It&#x27;s certainly a brilliant way to render some types of data.<p>But for fully interactive applications where your user would want to have context menus showing applicable actions; good feedback on app &#x2F; loading state; and avoid server latency on any type of event; I feel like SPAs are far superior.<p>I also feel like you have removed yourself from writing JS flavored HTML, but the solution of server-siding it introduces two problems. One is that you still need to hydrate and format that HTML somehow; I again think you can go a long way with templates, but if you&#x27;re just using React on the back-end it seems ridiculous. Second, you have to take on all the rendering load instead of just passing thru some JSON-formatted DB results, which puts your server infra under far more pressure at less load to my eyes.<p>Final gripe: that interaction is not &quot;pure HTML&quot;, you are using a JS library...')