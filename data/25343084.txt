Item(by='roenxi', descendants=None, kids=[25343898, 25345701, 25343229, 25343175, 25346258, 25344406, 25350298, 25343431], score=None, time=1607415526, title=None, item_type='comment', url=None, parent=25322836, text='Indenting styles is, humorously, a massive problem for the lisps.<p>Consider, say,<p><pre><code>  for (i in [1, 2, 3]) {\n    x(i);\n    y(i);\n    z(i);\n  }\n</code></pre>\nThe indentation here very naturally demarcates between control structures and non-control code.<p>Compared to similar lisp-y code:<p><pre><code>  (map\n    #(-&gt; % x y z)\n    (range 3))\n</code></pre>\nThe indentation doesn&#x27;t give the programmer any hints that map is actually a control structure fulfilling the same role as a for loop.<p>Given that indentation is critical enough to be a major language feature of something like Python, lisps have a weakness here that isn&#x27;t dealt with very often. This so-called &#x27;semantic indenting&#x27; doesn&#x27;t go far enough - programmers want much more of it if Python and C-like languages are any indicator. I think there is a very desirable equilibrium here; something where the indentation changes based on the semantic intention of the function. I don&#x27;t want all my Clojure functions to indent the same way, map&#x2F;reduce&#x2F;recur&#x2F;let&#x2F;etc are special.')