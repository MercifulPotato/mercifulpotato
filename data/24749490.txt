Item(by='jjoonathan', descendants=None, kids=None, score=None, time=1602453917, title=None, item_type='comment', url=None, parent=24746975, text='&gt; Leaving some performance critical stuff in C is okay.<p>I disagree on account of the glovebox problem.<p>If you can&#x27;t touch your data without losing perf, your API becomes awkward like a glovebox. All meaningful low-level operations must be represented in your high-level API which bloats the heck out of it. To add insult to injury, it still usually doesn&#x27;t get you 100% functionality coverage, so projects that veer even slightly off the beaten path are all but guaranteed to involve C and bridge crossings and explode in complexity. So the end result is unnecessarily bloated libraries that unnecessarily constrain your creativity.<p>Yes, I know about numba -- I&#x27;ve used it heavily and even contributed a few bugfixes -- but it&#x27;s often not even a workable solution, let alone a good solution, let alone a good solution that&#x27;s fully integrated into the ecosystem (i.e. debug and in other people&#x27;s code).<p>Most of the code I write is still python, but I need perf, so I suffer at the python&#x2F;C bridge regularly. Like any other programming language bridge, it has trolls under it, so if you only need to cross once or twice you&#x27;re probably fine but if you frequent the bridge they&#x27;re going to periodically pop up and beat the shit out of you. This won&#x27;t affect people following tensorflow tutorials but it greatly affects people in the deep end of the ecosystem and it really sucks.<p>Next time the trolls come out, I&#x27;m going to try to make the case for Julia again. Hopefully one of these times we make the right choice, but in the meantime it would be nice if the people using my libraries understood that I was taking troll-beatings on their behalf and listened to my requests that maybe we should do something about it one of these days.')