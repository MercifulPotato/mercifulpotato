Item(by='webmaven', descendants=None, kids=None, score=None, time=1601870188, title=None, item_type='comment', url=None, parent=24677962, text='<i>&gt; The idea with dual licensing with GPL is that the user has to either open-source their code, which most corporations will not want to do, or use the paid licensing scheme.</i><p>That&#x27;s part of it (and it&#x27;s probably dominant when the software is infrastructural and typically has other software built on top of it), but not quite the whole story.<p>The other part is for software that is more of an application than a component: when your commercial version has additional features aimed at deep-pocketed customers (typically &quot;enterprise&quot; features like SSO, or various forms of compliance).    Since these features aren&#x27;t released as open source, you are the sole source of those capabilities. Someone else could duplicate those features and release them as GPL, competing against you with a completely open source offering, and nuke your profit margin, but what they <i>can&#x27;t</i> do is duplicate the features and keep them proprietary as you are doing. So anything they release like that is now effectively free, and they don&#x27;t really get any of the attractive profit margins you had, making it harder for them to recoup the sunk cost of duplicating those features.<p>IOW, they can fill in your moat, but then can&#x27;t really dig their own.<p>This gets back to why big companies release software as open source: Sometimes they aren&#x27;t just trying to commoditize their own complements, they are trying to commoditize someone else&#x27;s <i>core</i> to blow their business model up (or more accurately, cause their competitor&#x27;s market to evolve faster than they are prepared for). Open Source isn&#x27;t the only possible play here though. A free or freemium offering as well as other tactics can have a similar effect.')