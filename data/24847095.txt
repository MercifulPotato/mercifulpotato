Item(by='BozeWolf', descendants=None, kids=None, score=None, time=1603283288, title=None, item_type='comment', url=None, parent=24846059, text='Agree! I like django&#x27;s ORM and I love SQL databases. It is nice that your in-code model changes, will reflect the schema changes in the database. And migrations are a blessing. (Of course it has some foot guns.)<p>For optimizations:\nmy_queryset.explain(verbose=True, analyze=True) is very nice to understand what is going on. If you cannot get it done with django&#x27;s database abstractions, there is always:<p>my_queryset.extra() or even my_model.objects.raw(). Where the last one maps the result to the model, for free.<p>To others responding that ORMs are bad:\nIMHO saying that raw sql is better than ORMs is short sighted. Many simple things are nice in ORMs. Queries are often simple. Today, in django, complex queries are also nice. For edge cases raw sql can be better.<p>Extending queries is also super easy with a good ORM, where with raw sql you would have to maintain two almost the same queries.<p>Just remember to run and inspect queryset.explain().')