Item(by='gregdoesit', descendants=None, kids=[25377345, 25376382, 25377459, 25377147, 25377534, 25379051, 25377307, 25384702, 25377577, 25376926], score=None, time=1607622848, title=None, item_type='comment', url=None, parent=25375921, text='Former Uber engineer&#x2F;EM here: I worked on the Rider app.<p>The “there are only a few screens” is not true. The app works in 60+ countries, with features shipped in the app that often for a country, and - in rare cases - a city.<p>The app has thousands of scenarios. It speaks to good design that each user thinks the user is there to support their 5 use cases, not showing all the other use cases (that are often regional or just not relevant to the type if user - like business traveler use cases).<p>Uber builds and experiments with custom features all the time. An experimental screen built for London, UK would be part of the app. Multiply this by the 40-50 product teams building various features and experiments outside the core flows you are talking about (which core flows are slightly different per region as well).<p>I worked on payments, and this is what screens and components are in the Uber app:<p>- Credit cards (yes, this is only a a few screens)<p>- Apple Pay &#x2F; Google Pay on respective platforms<p>- PayPal (SDK)<p>- Venmo (SDK)<p>- PayTM (15+ screens)<p>- Special screens for India credit cards and 2FA, EU credit cards and SCA, Brazil combo cards and custom logic<p>- Cash (several touch points)<p>- AMEX rewards and other credit card rewards (several screens)<p>- Uber credits &amp; top-ups (several screens)<p>- UPI SDK (India)<p>- We used to have Campus Cards (10 screens), Airtel Money (5), Alipay (a few more), Google Wallet (a few) and I other payment methods I forget about. All with native screens. Still with me? This was <i>just</i> payments. The part where most people assume “oh, it’s just a credit card screen”. Or people in India assume “oh it’s just UPI and PayTM”. Or people in Mexico “oh, it’s just cash”. And so on.<p>Then you have other features that have their own business logic and similar depths behind the scenes when you need to make them work for 60 countries:\n- Airport pickup (lots of specific rules per region)<p>- Scheduled rides<p>- Commmuter card functionality<p>- Product types (there are SO many of these with special UI, from disabled vehicles, vans, mass transport in a few regions etc)<p>- Uber for Business (LOTS of touchpoints)<p>- On-trip experience business logic<p>- Pickup special cases<p>- Safety toolkit (have you seen it? Very neat features!)<p>- Receipts<p>- Custom fraud features for certain regions<p>- Customer support flows<p>- Regional business logic: growth features for the like of India, Brazil and other regions.<p>- Uber Eats touchpoints<p>- Uber Family<p>- Jump &#x2F; Lime integrations (you can get bikes &#x2F; scooters through the app)<p>- Transit functionality (seen it?)<p>- A bunch of others I won’t know about.<p>Much of the app “bloat” has to do with how business logic and screens need to be bundled in the binary, even if they are for another region. E.g. the UPI and PayTM SDKs were part of the app, despite only being used for India. Uber Transit was in a city or two when it launched, but it also shipped worldwide.<p>And then you have the binary size bloat with Swift that OP takes about.')