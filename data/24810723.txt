Item(by='wffurr', descendants=None, kids=None, score=None, time=1602948829, title=None, item_type='comment', url=None, parent=24810264, text='If we focus just on the programming cases where C++ has been heavily used, you can narrow that list down to D, Rust, Nim, and Zig.  Dynamic languages or those with a heavy runtime like Python, Java, C#, and JavaScript are substantially different use cases.<p>Among those remaining, Swift has substantially more corporate backing, what with Apple relying on it for their massively successful iOS platform and Google trying to use it for TensorFlow.<p>C wrapper for C++ APIs has long been standard practice, but adds a substantial maintenance burden to C++ library authors and does not address semantics in the host language, which is a major part of this proposal.  The whole proposal is based around the idea of seamless Swift to C++ interoperability.  C++ has a lot of higher-level concepts that potentially can translate to similar higher-level concepts in other languages; round-tripping through a C API loses all of that.<p>To be clear, I like your idea - it&#x27;s a grand one, and potentially solves the N+M problem once and for all.  The real stumbling block for it is the C++ ABI and sheer mass of existing C++ code.')