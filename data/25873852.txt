Item(by='jgraettinger1', descendants=None, kids=None, score=None, time=1611336621, title=None, item_type='comment', url=None, parent=25872887, text='Here&#x27;s another approach to the problem [0]:<p>This package is part of Gazette [1], and uses a gazette journal (known as a &quot;recovery log&quot;) to power raw bytestream replication &amp; persistence.<p>On top of journals, there&#x27;s a recovery log &quot;hinting&quot; mechanism [2] that is aware of file layouts on disk, and keeps metadata around the portions of the journal which must be read to recover a particular on-disk state (e.x. what are the current live files, and which segments of the log hold them?). You can read and even live-tail a recovery log to &quot;play back&quot; &#x2F; maintain the on-disk file state of a database that&#x27;s processing somewhere else.<p>Then, there&#x27;s a package providing RocksDB with an Rocks environment that&#x27;s configured to transparently replicate all database file writes into a recovery log [3]. Because RocksDB is a a continuously compacted LSM-tree and we&#x27;re tracking live files, it&#x27;s regularly deleting files which allow for &quot;dropping&quot; chunks of the recovery log journal which must be read or stored in order to recover the full database.<p>For the SQLite implementation, SQLite journals and WAL&#x27;s are well-suited to recovery logs &amp; their live file tracking, because they&#x27;re short-lived ephemeral files. The SQLite page DB is another matter, however, because it&#x27;s a super-long lived and randomly written file. Naively tracking the page DB means you must re-play the _entire history_ of page mutations which have occurred.<p>This implementation solves this by using a SQLite VFS which actually uses RocksDB under the hood for the SQLite page DB, and regular files (recorded to the same recovery log) for SQLite journals &#x2F; WALs. In effect, we&#x27;re leveraging RocksDB&#x27;s regular compaction mechanisms to remove old versions of SQLite pages which must be tracked &#x2F; read &amp; replayed.<p>[0] <a href="https:&#x2F;&#x2F;godoc.org&#x2F;go.gazette.dev&#x2F;core&#x2F;consumer&#x2F;store-sqlite" rel="nofollow">https:&#x2F;&#x2F;godoc.org&#x2F;go.gazette.dev&#x2F;core&#x2F;consumer&#x2F;store-sqlite</a><p>[1] <a href="https:&#x2F;&#x2F;gazette.readthedocs.io&#x2F;en&#x2F;latest&#x2F;" rel="nofollow">https:&#x2F;&#x2F;gazette.readthedocs.io&#x2F;en&#x2F;latest&#x2F;</a><p>[2] <a href="https:&#x2F;&#x2F;gazette.readthedocs.io&#x2F;en&#x2F;latest&#x2F;consumers-concepts.html#recovery-logs" rel="nofollow">https:&#x2F;&#x2F;gazette.readthedocs.io&#x2F;en&#x2F;latest&#x2F;consumers-concepts....</a><p>[3] <a href="https:&#x2F;&#x2F;godoc.org&#x2F;go.gazette.dev&#x2F;core&#x2F;consumer&#x2F;store-rocksdb" rel="nofollow">https:&#x2F;&#x2F;godoc.org&#x2F;go.gazette.dev&#x2F;core&#x2F;consumer&#x2F;store-rocksdb</a>')