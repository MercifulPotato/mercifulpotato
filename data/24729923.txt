Item(by='steveklabnik', descendants=None, kids=None, score=None, time=1602251730, title=None, item_type='comment', url=None, parent=24729791, text='I don&#x27;t know why you&#x27;re downvoted.<p>&gt;  But what are they?<p>The language&#x27;s semantics are such that by default, you get memory safe code. This is checked at compile time. While many languages are memory safe, they often require a significant amount of runtime checking, with things like a garbage collector. Rust moves the vast majority of these kinds of checks to compile time, and so has the performance profile of C or C++, while still retaining memory safety.<p>&gt; How does it compare with modern C++?<p>One way to look at Rust is &quot;modern C++, but enforced, and by default.&quot; But that ignores some significant differences. For example, Rust&#x27;s Box&lt;T&gt; and std::uniq_ptr are similar, but the latter can still be null, whereas Rust&#x27;s can&#x27;t. C++ cannot be checked statically for memory safety, even if modern C++ helps improve things, it doesn&#x27;t go as far as Rust does.')