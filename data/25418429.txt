Item(by='throwawaygh', descendants=None, kids=[25419139, 25422971, 25419300, 25418473], score=None, time=1607958794, title=None, item_type='comment', url=None, parent=25415270, text='I am neither a software developer nor a philosopher, but I am a Computer Science researcher who spends a fair amount of time talking with colleagues in the Philosophy department.<p>My view is mostly the opposite of the headline -- philosophers need scientists&#x2F;engineers&#x2F;practitioners more than the other way around. Asking and attempting to answer big questions about the world requires, first, understanding the world. And today, understanding the world requires immense technical expertise.<p>One example: philosophers are quick to opine on the problem of bias in machine learning, but almost all lack even a CS 1 level understanding of answers to basic questions like &quot;what is an algorithm?&quot;, and therefore mistake these fairly straightforward questions as somehow profound [1]. And all but a precious few philosophers [2] are frankly technically unqualified for discussions about how to actually address bias in ML.<p>Things only get worse when we enter questions about AI &amp; Theory of Mind, computer ethics, etc.<p>--<p>[1] Of course, &quot;what is an algorithm?&quot; <i>can</i> result in conversations that lead to deep questions; my point is that there is a standard and more-or-less fit for purpose definition that&#x27;s given in every CS 1 class, and understanding that definition is a prerequisite for deeper interpretations of the question. Diving off the deep end without having e.g. written and analyzed a simple sorting algorithm will always be a waste of time.<p>[2] Often those with either excellent training in the analytic tradition or, more commonly, some serious background in a quantitative field such as Mathematics or Physics.')