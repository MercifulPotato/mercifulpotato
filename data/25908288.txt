Item(by='jacques_chester', descendants=None, kids=None, score=None, time=1611606263, title=None, item_type='comment', url=None, parent=25907312, text='&gt; <i>That said, strain on the kube-scheduler is spiky. A new job may consist of many hundreds of pods all being created at once, then return to a relatively low rate of churn.</i><p>Last I checked, the default scheduler places Pods one at a time. It might be advantageous to use a gang&#x2F;batch scheduler like kube-batch[0], Poseidon[1] or DCM[2].<p>Edit: looks like they&#x27;re already investigating that approach --<p>&gt; <i>We tried a few things needing a custom scheduler, but ran into edge cases that caused conflicts with how normal pods were scheduled. Kubernetes 1.18 introduced a plugin architecture for the core Kubernetes scheduler, making it much easier to add features like this natively. We recently landed on the Coscheduling plugin as a good way to solve this problem.</i><p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;kube-batch" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;kube-batch</a><p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;poseidon" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;poseidon</a><p>[2] <a href="https:&#x2F;&#x2F;github.com&#x2F;vmware&#x2F;declarative-cluster-management" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;vmware&#x2F;declarative-cluster-management</a>')