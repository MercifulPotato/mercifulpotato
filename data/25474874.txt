Item(by='Geminidog', descendants=None, kids=[25476474, 25480036, 25476384, 25476394, 25477141, 25476652, 25475685, 25475235, 25476095], score=None, time=1608350234, title=None, item_type='comment', url=None, parent=25473603, text='The bigger tragedy is the illogical need for programmers to come up with &quot;elegant&quot; names. A 20 character name doesn&#x27;t do any damage if it communicates the correct point. Neither does a 10 character name that also communicates the same point.<p>Why does a developer favor the 10 character name over the 20 character name when both do the exact same thing? Is the goal to save memory? What is the point? There is no point.<p>It is a subconscious bias that makes programmers want to give things elegant names over clear names. There is no harm in creating a 40 character name that is ugly.<p><pre><code>   def find_xy_coordinate_of_dogs_cats_and_baboons_in_picture(picture: Picture) -&gt; List[XYCoordinates]:\n          #there is NOTHING wrong with this function name.\n</code></pre>\nIt baffles me to no end why humans have a tendency to turn the above for no clear reason into:<p><pre><code>   def imgrecFindAnimal(p: Pict) -&gt; List[vectxy]:\n</code></pre>\nBeauty and elegance in code belongs in structure not naming. Clarity belongs in naming not structure (Golang is the antithesis of this). When both are unionized perfectly you get  elegant code that does not sacrifice clarity.<p>A really good example of this is a function that encapsulates a complex regular expression. That regex is all but unreadable but you can embed an entire comment&#x2F;description into the function name. Seriously write a grammatically correct sentence and make it a function name, there is no reason why this is bad... was there a more elegant name that you could have came up with??? Who cares. No harm done with your huge name other than burning the eyes of your inner OCD.<p>Except of course if you don&#x27;t have auto complete. Then I can see how it&#x27;s annoying for you to type out a whole sentence when you just want to call a function.')