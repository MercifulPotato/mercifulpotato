Item(by='psykotic', descendants=None, kids=[24753118], score=None, time=1602492873, title=None, item_type='comment', url=None, parent=24752466, text='Leaving aside arguments about &quot;what the drivers are&quot;, the kernel driver being discussed here generally doesn&#x27;t have or need that kind of thing. The user-space drivers which talk to the kernel drivers are under the Mesa umbrella as part of Gallium for OpenGL and Direct3D support (e.g. <a href="https:&#x2F;&#x2F;github.com&#x2F;mesa3d&#x2F;mesa&#x2F;tree&#x2F;master&#x2F;src&#x2F;gallium&#x2F;drivers&#x2F;radeonsi" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;mesa3d&#x2F;mesa&#x2F;tree&#x2F;master&#x2F;src&#x2F;gallium&#x2F;drive...</a>) or as a standalone driver for Vulkan support (<a href="https:&#x2F;&#x2F;github.com&#x2F;mesa3d&#x2F;mesa&#x2F;tree&#x2F;master&#x2F;src&#x2F;amd&#x2F;vulkan" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;mesa3d&#x2F;mesa&#x2F;tree&#x2F;master&#x2F;src&#x2F;amd&#x2F;vulkan</a>). That said, I haven&#x27;t seen many app-specific hacks in the open source drivers, even in the user-space code.<p>If anyone wants to learn more about lower-level aspects of GPUs, the Vulkan driver code I linked is one of the best places to start. It directly implements the Vulkan API on one end and talks to the kernel drivers on the other end, so it&#x27;s relatively easy to follow if you&#x27;re a systems programmer with an API-level understanding of graphics. Just pick a Vulkan function of your choice and start tracing through the code, e.g. vkCmdDraw: <a href="https:&#x2F;&#x2F;github.com&#x2F;mesa3d&#x2F;mesa&#x2F;blob&#x2F;master&#x2F;src&#x2F;amd&#x2F;vulkan&#x2F;radv_cmd_buffer.c#L5365" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;mesa3d&#x2F;mesa&#x2F;blob&#x2F;master&#x2F;src&#x2F;amd&#x2F;vulkan&#x2F;ra...</a>. The Vulkan driver calls into some of the low-level radeonsi code I linked from the Gallium tree but it isn&#x27;t a Gallium-based driver, so you don&#x27;t have to deal with those extra layers of abstraction.')