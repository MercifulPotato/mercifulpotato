Item(by='nicbou', descendants=None, kids=None, score=None, time=1611834874, title=None, item_type='comment', url=None, parent=25939361, text='What is asserted without evidence can be dismissed without evidence. It&#x27;s not our job to debunk a poorly formed argument.<p>Regardless:<p>pathlib.Path:<p>- <a href="https:&#x2F;&#x2F;docs.python.org&#x2F;3&#x2F;library&#x2F;pathlib.html" rel="nofollow">https:&#x2F;&#x2F;docs.python.org&#x2F;3&#x2F;library&#x2F;pathlib.html</a><p>Django&#x27;s class-based views and mixins:<p>- <a href="https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;3.1&#x2F;topics&#x2F;class-based-views&#x2F;generic-display&#x2F;" rel="nofollow">https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;3.1&#x2F;topics&#x2F;class-based-vie...</a><p>- <a href="https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;3.1&#x2F;topics&#x2F;class-based-views&#x2F;mixins&#x2F;" rel="nofollow">https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;3.1&#x2F;topics&#x2F;class-based-vie...</a><p>Hell, you don&#x27;t even need to look into other code. Just use the sample from the article.<p>What if client_a and client_b write to different APIs? One expects authentication, the other has pagination and rate limiting. Actually, one of them returns XML. Their URL structure is completely different.<p>Classes are great when you want a bunch of different things to produce a similar result. You don&#x27;t care how the client fetches and transforms data, as long as it returns it in a certain format.<p>For example, you might want TwitterTweetSource.get_items() and FacebookPostSource.get_items() to both return a list of Posts that have certain attributes. The implementation details don&#x27;t matter; you just want these methods to have the same signature, because you call [s.get_posts() for s in source_list]. Maybe you&#x27;ll add FacebookCommentSource, which reuses the same authentication strategy, but on a different endpoint.')