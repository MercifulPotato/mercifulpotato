Item(by='jscholes', descendants=None, kids=None, score=None, time=1610036767, title=None, item_type='comment', url=None, parent=25672331, text='&gt; I’m genuinely asking here out of lack of experience — Is it separate but equal, or is it customizing the user experience?<p>It&#x27;s separation, because it introduces the chances of an inequitable experience being created as the &quot;customised&quot; version for screen reader users drifts out of sync.  This may not even be down to anything malicious; plenty of companies create mobile-friendly versions of websites and apps, only to find that as years go by, they no longer have the budget to facilitate their upkeep.  Far from assigning them to the trash heap of history, these often continue to be provided, offering a substandard experience, and this is despite companies having so much data available about high mobile usage.  The chances of it happening to an accessibility-specific version are higher because the likely user take-up is lower, and as this post and thread indicate, speciality skills are often required to make a good job of it.  Not like responsive web design, where experts are ten a penny.<p>There are other reasons this approach is flawed, of course:<p>1. Screen reader users aren&#x27;t the only disabled people out there.  Heck, even within that group, there are those who use the software as an absolute necessity, and others who use it in addition with other assistive tech like speech recognition or a magnifier.  Nobody in their right mind is going to create a separate experience for every subset of disabled users.  Even if they did, how would they be surfaced?<p>2. Some people are only temporarily disabled, e.g. because of an injury.  They don&#x27;t have the lifelong feel for how to look for accessibility settings or separate modes, so they aren&#x27;t likely to benefit from a shiny accessible version.  Making your main product inclusive prepares for this.<p>3. The aim should be to allow customisations to be included which aren&#x27;t intrusive to those who don&#x27;t need them, e.g. via techniques like WAI-ARIA[1] which allow additional context to be added for screen reader users while remaining invisible to everyone else.<p>[1] <a href="https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;wai-aria-1.2&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;wai-aria-1.2&#x2F;</a>')