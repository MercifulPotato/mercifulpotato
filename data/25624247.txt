Item(by='brundolf', descendants=None, kids=[25624874], score=None, time=1609701460, title=None, item_type='comment', url=None, parent=25624069, text='&gt; The book does guide you towards Box&lt;dyn Trait&gt; for this reason.<p>Yeah. And that makes sense, though an aside that explains the broader concept (&quot;Note: dyn is usually paired with Box, but it can be used to describe any reference&quot;) would help establish the more generalized understanding (it is possible this aside already exists and I just missed it)<p>Re: the deref coercion, I do think many cases of this class of problem I&#x27;m describing come down to implicit behavior the compiler does to infer certain commonly-used and onerous syntactical elements, to make code cleaner and easier to write. I understand why this was deemed necessary, and it&#x27;s not as much a problem as &quot;magical&quot; behavior in other technologies, because (seemingly) everything the compiler does implicitly maps directly to an equivalent explicit version.<p>But it leads to a lot of confusion when those rails eventually break. In terms of brevity, this can be looked at as &quot;gracefully degrading&quot;: it makes the normal cases better, and reverts to the &quot;baseline&quot; behavior when you step outside of those. But in the context of learning, it is not such a strict win, because the implicit cases have colored the user&#x27;s understanding of the language itself, actively hampering their ability to venture off the golden path (or form generalizations about concepts).<p>I kind of wish the compiler had a &quot;turn off all implicit behavior&quot; option, so that you could learn how everything is done explicitly before turning the helpers back on for the sake of productivity.')