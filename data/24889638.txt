Item(by='skyzyx', descendants=None, kids=None, score=None, time=1603657851, title=None, item_type='comment', url=None, parent=24887521, text='I learned JavaScript in 1999, PHP in 2003, Ruby in 2009, Python in 2015, and Golang in 2018. <i>Modern</i> PHP (despite its historical reputation) and Python are pretty much a toss-up to me (both have warts, both are a blend of functions and objects, and both can be written very well or very poorly). Ruby and JavaScript are more elegant (I like how everything is an object), but Ruby has historically been very slow and JS developers have forgotten how to program (see left-pad, or the dumpster fire of npm modules).<p>In July 2018, I decided to go all-in on Golang. I like how fast it is, I like that it forces me to pay attention to my types. I wish that error handling felt less like yak shaving, but I understand the rationale. I write task-oriented servers&#x2F;daemons, and CLI tools mostly, and it&#x27;s great because it compiles down into a single binary with zero dependencies (which none of my other languages can claim), and it&#x27;s extremely fast. It compiles easily for a variety of OS&#x2F;Arch combinations, and as someone who can follow instructions to compile C&#x2F;C++ code, dependency management is FAR easier than having to track down which &quot;dev&quot; versions of packages I need to install from whatever flavor of Linux or on macOS (via Homebrew). Overall, it&#x27;s the best of many worlds for producing something that&#x27;s easy for other people to consume.<p>These days, I do a lot with AWS, Docker, Security, Terraform, etc. I&#x27;m also going back to my web roots a bit on the weekends and looking at building a GraphQL API on top of DGraph, and the tooling for Go is really good. Lots of static analysis and linting tools are available to help me write the best code I can, and teach me when I&#x27;ve done something poorly.<p>My only big complaint is when I&#x27;m parsing JSON of which I don&#x27;t know the shape. I end up with this nested mess of `map[string]interface{}` types that I have to sift and cast over. Even when I know the shape ahead of time, I still need to do the work to model it as a struct before I can work with it sanely. This is something that JS, PHP, Python, and Ruby all do with far more ease.<p>I still write in multiple languages frequently, but Go has become my go-to for a lot of things over the past couple of years.')