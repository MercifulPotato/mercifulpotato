Item(by='exikyut', descendants=None, kids=[25762014], score=None, time=1610535576, title=None, item_type='comment', url=None, parent=25759887, text='This idea seems really interesting&#x2F;promising. Here are three considerations I&#x27;ve thought of while thinking about how it might be implemented:<p>1. Many years ago (I only saw this here and there myself) a particular essay on Asking Smart Questions that would sometimes be linked whenever a suboptimal(ly worded) query was posted on a mailinglist or newsgroup or forum. <a href="http:&#x2F;&#x2F;www.catb.org&#x2F;~esr&#x2F;faqs&#x2F;smart-questions.html" rel="nofollow">http:&#x2F;&#x2F;www.catb.org&#x2F;~esr&#x2F;faqs&#x2F;smart-questions.html</a><p>It&#x27;s quite the wall of text, because it&#x27;s thorough. This produces an unfortunate effect: everyone who reads the article, digests it, and applies what it says &quot;disappears&quot; into the bigger picture of people who ask good questions; while people who don&#x27;t have the time to read an issue template properly have their eyes glaze over and they add the URL to their mental list of &quot;evil entitled webpages that demand too much of my time&quot; and go on filling the internet with noise.<p>TL;DR, a webpage this big: --&gt; &lt;-- works for just about everyone, but the &quot;TLDR dropoff&quot; is disillusioningly exponential beyond 0 bytes.<p>2. Taking as an example the common use case of people at the stage of learning about software development, there&#x27;s a specific point in that learning process where <i>everything</i> seems possible... <i>too</i> possible. Of course it&#x27;s possible to merge the Linux and Windows kernels. Of course it&#x27;s possible to &quot;just rewrite the codebase&quot; to make the two mutually incompatibly designed components work together. One place that comes to mind that this sort of thing can concentrate is in game modding communities. It&#x27;s not uncommon for there to be one or two &quot;dev&quot; type positions that are basically hacking it but have enough figured out to be competent, with a bunch of other users surrounding them that have no idea what they&#x27;re doing and asking for the impossible. The net result is 500+ issues or forum posts, with only one or two ((ahem, achievable)) items slowly being acknowledged worked on, and the rest basically ignored for the sake of efficiency. The people that all have no idea what they&#x27;re doing collectively think each others&#x27; ideas are great and if only the devs would actually listen to them the project might actually get somewhere.<p>TL;DR, accessibility and intuitivity are hard.<p>3. There are thousands of devs out there in situations where they simply don&#x27;t have time to answer every possible question. They may honestly have a massive workload and are doing triage on top of that, they might be maintaining a minimum-viable free user support forum for a commercial product, they might be a time-poor OSS contributor, they may have laziness issues :P (independent of any other points here), they may have communication issues, ...<p>Again, there are thousands of devs out there who would be looking for a TLDR for their circumstance.<p>A large proportion of those that choose to use a template-as-a-service website to optimize their time can only pick from the best possible option from the available choices, even where the choices that are available aren&#x27;t an exact fit, because this is a common pattern when optimizing.<p>Considering all of the above together, *<i>you are going</i>* to have circumstances where angry users will feel snubbed by suboptimally-chosen messages, and the challenge with a site like this would be to figure out how to reduce the chances that...<p>- almost-but-not-100% templates are chosen by time-poor devs for lack of better options, which will lead to poor reception of the site by end users<p>- the message is too long or complicated for the user to read and act on (can the user read English easily? Do they have intellectual issues (autism and ADD are particularly common, and drastically underaddressed) that make it hard for them to break work down into chunks and focus on it? Does the text of the template help the user to feel supported so they can calm down and focus on the work they must now do? Etc)<p>A couple of other points:<p>- Analytics would definitely be a good idea, as would actually looking through the supplied referers (that you can actually open).<p>- An &quot;I didn&#x27;t find anything appropriate for [URL]&quot; option with a free-text &quot;description&quot; box would deliver a lot of helpful signal to further refine the options available<p>- Editing everything on GitHub or similar would make it straightforward for people to simply just contribute direct improvements (the &quot;nothing appropriate&quot; submission box would not be public)')