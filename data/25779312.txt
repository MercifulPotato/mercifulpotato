Item(by='Hizonner', descendants=None, kids=None, score=None, time=1610645632, title=None, item_type='comment', url=None, parent=25773171, text='OK, but wait. 2.9BSD is from like 1982. And I think SLIP was later than that, and PPP was definitely <i>much</i> later than that. So you don&#x27;t have a &quot;pure&quot; 1975 machine; you&#x27;re using later software. What does &quot;support&quot; mean, then?<p>If you&#x27;re allowed to use software that&#x27;s later than your hardware, then you can write a stack for almost anything, so the idea of a machine &quot;supporting IPv4&quot; becomes kind of meaningless. You need 576 bytes of memory for a packet buffer, plus your program. Any mid-sixties mainframe, maybe even older.<p>If you do count the age of the software in deciding what&#x27;s &quot;supported&quot;, and you require that the TCP&#x2F;IP stack run locally and communicate with modern computers without translation, then you&#x27;ll have a hard limit at about 1980 or 1981, since the TCP and IPv4 protocols weren&#x27;t defined until then, and there was therefore definitely no software.<p>You could allow using NCP as a &quot;legitimate Internet precursor&quot; to TCP&#x2F;IP, but if you do <i>that</i> there&#x27;s no real reason not to just allow serial terminals as &quot;legitimate precursors&quot; to NCP. So 1980 or 1981 seems like the limit for a &quot;pure&quot; system with its own software.<p>If you allow software newer than the hardware, but limit yourself to not <i>writing</i> that software, my guess is that the oldest thing would be a KA-10, which is a 1968 computer. RFC 801 says that as of 1981, there was a stack for TENEX, which you could run on a KA-10. You could at least do Telnet, maybe FTP. That&#x27;s assuming you can find another old computer to gateway whatever ancient serial protocols it was using at the physical layer.')