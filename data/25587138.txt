Item(by='haberman', descendants=None, kids=[25588051], score=None, time=1609368228, title=None, item_type='comment', url=None, parent=25586812, text='&gt; make apologies from authority (after all, Google can&#x27;t do anything wrong, right?)<p>That&#x27;s not my position at all.  In my other comment (<a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25586447" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25586447</a>) I explain how I&#x27;ve spent 10 years trying to improve on protobuf C++ precisely because I agree that some of these limitations are unnecessary.<p>&gt; No zero-copy for networking? Forced internal heap allocations with only this arena feature after a decade? Sorry no. Protobufs isn&#x27;t useful for serious network applications.<p>I suppose it depends what you are comparing it to.  Almost every JSON library has the same limitations you mentioned, and yet many people find JSON useful for network applications.  But I agree that giving users full control over allocations makes a library useful in many more situations.<p>I think arena allocation is a pretty reasonable solution to the problem.  You can use whatever memory you want for the arena (stack, heap, static buffer) and you can constrain it so that no heap allocations are allowed.<p>Unfortunately protobuf C++ can&#x27;t live fully within this arena model while it uses std::string for accessors.  Hopefully this can be fixed at some point.')