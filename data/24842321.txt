Item(by='cogman10', descendants=None, kids=None, score=None, time=1603227680, title=None, item_type='comment', url=None, parent=24835462, text='I&#x27;ve seen a lot of compromises around REST because of http 1.1 overhead.<p>A great example of this happens when someone wants to query for a list of resources.<p>The rest way for this would be to do requests like this<p><pre><code>    get &#x2F;foo&#x2F;1\n    get &#x2F;foo&#x2F;2\n    get &#x2F;foo&#x2F;3\n</code></pre>\nHowever, unless you spin up a bunch of parallel connections (wasting a bunch of resources both in the servers and the client), you are going to experience performance issues.<p>The compromise is to create endpoints that look like this<p><pre><code>    post &#x2F;foo [1,2,3]\n</code></pre>\nThat saves the connection problem but creates a bunch of new issues.  The client can send arbitrary request sizes to single servers (making LBing more difficult).  It&#x27;s not idiomatic, which means things like Http caching simply can&#x27;t be used (or at least are less effective).  A lot of http clients will do auto-retry but only for idempotent verbs, that&#x27;s gone, you now need to implement all that stuff yourself.<p>http2 fixes all that.  Making parallel requests for n datapoints isn&#x27;t nearly as big an issue.  Those requests can be fanned out to a bunch of servers and those servers can be in charge of figuring how how much batching thing should be doing before reaching out to the DB.  Making it impossible for a single client to really tank the system.<p>Certainly you can work around this, usually by having the service farm out work over a message bus so you don&#x27;t run into the problem of a single server going down due to a big request.  However, the reason those message buses work and are fast is precisely because they are similar to Http2.<p>All of these have major consequences for backend services.  If I have a fleet of apps talking to another fleet of apps, then it matters, a LOT, if each of those apps are creating 20 TCP connections to the other fleet.  Get the wrong kind of load storm and your backend will topple over.<p>Now, is this super scientific?  No.  Rather it&#x27;s based on what I&#x27;ve seen in the field.<p>Http2 has a ton of benefits when doing a lot of small message communication.')