Item(by='ImprobableTruth', descendants=None, kids=[24769978], score=None, time=1602611343, title=None, item_type='comment', url=None, parent=24764198, text='&gt;In this version, tactics write code - you use tactics to generate a term (Haskell code), and then you can edit the term itself. Save and load the file, and all you get is the Haskell code: the tactics only existed for codegen.<p>There&#x27;s nothing preventing you from already doing this. You can use Isabelle&#x27;s hammer&#x2F;CoqHammer to generate a proof, dump the proof term and then replace your usage of the hammer tactic with the term. It&#x27;s just, why would you want to edit the proof term manually? I&#x27;m pretty sure you can do this with Haskell&#x27;s normal metaprogramming facilities too, it&#x27;s just really not the intended way.<p>&gt;Why?<p>Because it&#x27;s a lot harder to maintain. Not only do you lose out on information about the generation (Why&#x2F;How was it generated?), if you change the code it was generated from, you&#x27;ll have to either manually edit the generated code (especially troublesome because the information of how it was generated was thrown away!) or you&#x27;ll have to figure out how to do it using tactics again (in that case, why not just keep the tactics as documentation?).<p>&gt;As you yourself pointed out, tactics would be terrible as an opaque metaprogram - they only work if you don&#x27;t care about the particular term they generate.<p>Tactics aren&#x27;t &#x27;opaque&#x27;, it&#x27;s just a pain to manually look at the generated code and I don&#x27;t see how the same doesn&#x27;t apply here.<p>&gt;Because it&#x27;s built out of several tactic steps, which the article goes into the construction of. You could still (presumably) have built it piece by piece, by applying each tactic one at a time - and each step only modifies the term slightly, leaving a hole for later steps.<p>You could, but it seems pretty clear to me that this is not the intention. If you just want some form of &#x27;quick actions&#x27; you don&#x27;t need a tactics system. Having an option to &#x27;try filling this hole&#x27; heavily indicates that this is to be used for more heavy automation.')