Item(by='j-pb', descendants=None, kids=None, score=None, time=1611673013, title=None, item_type='comment', url=None, parent=25915435, text='&gt; Don&#x27;t implement XML serialization. The simplest and most widely supported serialization is n-quads (<a href="https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;n-quads&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;n-quads&#x2F;</a>). 10 pages, again with exaples, toc, and lots of non-normative content.<p>You omit the transitive hull that the n-quads standard drags along, as if implementing a deserializer somehow only involved a parser for the most top-level EBNF.<p>Also, you&#x27;re still tip-toeing around the wider ecosystem of OWL, SHACL, SPIN, SAIL and friends.\nThe fact that RDF alone even allows for that much discussion is indicative of it&#x27;s complexity.\nIt&#x27;s like a discussion about SVG and HTML that never goes beyond SGML.<p>And you can&#x27;t have your cake and eat it too. You either HAVE to implement XML-Syntax or you won&#x27;t be able to load half of the worlds datasets, nor will you even be able to start working with OWL, because they do EVERYTHING with XML.<p>You&#x27;re still coming from a user perspective. RDF will go nowhere unless it finds a balance between usability and implementability. Currently I&#x27;d argue, it focuses on neither.<p>JS is a bigger ecosystem than just the browser, if you want to import any real-world dataset (or persistence) you need disk backing. So anything that just goes <i>poof</i> on a power failure doesn&#x27;t cut it.<p>Sorry but &quot;works pretty well&quot;, and 6 examples combined with an unannotated automatically extracted API, does not reach my bar for &quot;production quality&quot;.<p>It&#x27;s that &quot;works pretty well&quot; state of the entire RDF ecosystem that I bemoan. It&#x27;s enough to write a paper about it, it&#x27;s not enough to trust the future of your company on.\nOr you know. Your life. Because the ONLY real world example of an OWL ontology ACTUALLY doing anything is ALWAYS Snowmed.\nSnowmed. Snowmed. Snowmed.<p>[A joke we always told about theoreticians finding a new lower bound and inference engines winning competitions:\n&quot;Can snowmed be used to diagnose a patient?&quot;\n&quot;Well it depends. It might not be able to tell you what you have, but it can tell you that your &#x27;toe bone is connected to the foot bone&#x27; 5 million times a second!&quot;]<p>Imagine making the same argument for SQL, it&#x27;d be trivial to just point to a different library&#x2F;db.<p>And so far we&#x27;ve only talked about complexity inherent in the technology, and not about the complex and hostile tooling (a.k.a. protege) or even the absolut unmaintainable rats nests that big ontologies devolve to.<p>Having a couple different competing standards would actually improve things quite a bit, because it would force them to remain simple enough that they can still somehow interoperate.<p>It&#x27;s a bit like YAGNI. If you have two simple standards it&#x27;s trivial to make them compatible by writing a tool that translates one to the other, or even speaks both. If you have one humongous one, it&#x27;s nigh impossible to have two compatible implementations, because they will diverge in some minute thing. See rich hickeys talk &quot;simplicity matters&quot;, for an in-depth explanation on the difference between simple (few parts with potentially high overall complexity through intertwinement and parts taking multiple roles), and decomplected (consisting of independent parts with low overall system complexity).<p>And regarding JSON Schema:\nI never advocated for JSON schema and the fact that you have to compare RDFs maturity to something that hasn&#x27;t been released yet...<p>You would expect a standard that work began on 25 YEARS ago to be a bit more mature in it&#x27;s implementations.\nIf it hasn&#x27;t reached that after all this time, we have to ask the question, why is that?\nAnd my guess is that implementors see the standards _and_ their transitive hull and go TL;DR, and even if they try, they get overwhelmed by the sheer amount of stuff.')