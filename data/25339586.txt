Item(by='tabtab', descendants=None, kids=None, score=None, time=1607386062, title=None, item_type='comment', url=None, parent=25322656, text='Re: <i>The same things that make Scratch easy to learn also make it an unproductive environment for more serious programmers. For a professional, programming with drag and drop is way slower than keying in code — that’s just a fact.</i><p>I would say the best tools allow one to switch back and forth between visual&#x2F;drag-and-drop and code as needed. Web-based UI&#x27;s never seemed to get that to work well. The stateless nature of the web is a productivity kicker in multiple ways. The same number of features could be created and managed by fewer programmer hours in IDE&#x27;s from the 90&#x27;s than modern web stacks in my observation.<p>Web stacks are so bloated that orgs need layer specialists to manage it all. &quot;Separation of concerns&quot; (SOC) is to fit the shape of dev staff, not the shape of productivity nor the domain. It just creates busy-work interfaces between all those layers; a time drain. The older tools were closer to the domain such that it was less code to do the same thing, making SOC not worth it. SOC is symptom of bloat, not a solution. Concerns naturally interweave; the forced walls are just to serve Conway&#x27;s Law.<p>The counter argument is often, &quot;yes, but we have choice&quot;. Sure, but you pay dearly for it.<p>I believe a stateful GUI markup standard could help bring rank-and-file office-oriented CRUD productivity back to 90&#x27;s levels. One could then spend time on domain issues instead of gluing bloated buggy stack layers together. I can&#x27;t say it will help all domains, but one-browser-fits-all is failing CRUD, if productivity matters.')