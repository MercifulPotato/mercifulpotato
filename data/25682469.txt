Item(by='haberman', descendants=None, kids=[25682591, 25682865, 25682713, 25684007], score=None, time=1610091049, title=None, item_type='comment', url=None, parent=25682375, text='&gt; either TCO is a defining feature of the language, or a best-effort optimization that nobody should rely on.<p>I think a third option is that tail calls are only guaranteed if you add a special attribute (eg. [[musttail]]) and that attribute fails to compile if your code is written in such a way that a true tail call cannot be guaranteed.<p>The LLVM backend supports a &quot;musttail&quot; marker on function calls (<a href="https:&#x2F;&#x2F;llvm.org&#x2F;docs&#x2F;LangRef.html#call-instruction" rel="nofollow">https:&#x2F;&#x2F;llvm.org&#x2F;docs&#x2F;LangRef.html#call-instruction</a>), but it specifies a set of constraints that must be met for &quot;musttail&quot; to be valid.  I have been experimenting with a Clang change that would plumb a C++ [[musttail]] attribute through the C++ frontend to LLVM, but it requires some care to make sure we satisfy LLVM&#x27;s constraints.')