Item(by='indigochill', descendants=None, kids=[25447334], score=None, time=1608146443, title=None, item_type='comment', url=None, parent=25446835, text='&gt; These coding challenges used to be a very good measure of ability<p>I&#x27;m skeptical. The stereotypical interview question involves reciting algorithms from memory, where the thing you actually want to know of a software engineer is do they appreciate how things fit together to meet the constraints of the project.<p>&gt; The problem is that I haven&#x27;t seen any good alternatives.<p>Something we&#x27;ve done before (and had good success with in hiring good candidates) has been to pose a real problem we&#x27;re dealing with now or have recently solved (so the solution and problems are fresh in the reviewers&#x27; mind) and ask the candidate for their solution at a high level. Not whiteboard coding, though. Something like if I tell you we&#x27;re trying to filter out strings that contain creatively obfuscated obscenities, what should we do in order to maximize true positives while minimizing false negatives (and as the candidate offers solutions, provide sample strings that would fail their solution and see how they adapt)?')