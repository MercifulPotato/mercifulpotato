Item(by='JHonaker', descendants=None, kids=None, score=None, time=1602293811, title=None, item_type='comment', url=None, parent=24735269, text='Oh I’m not saying that it’s a bad thing to want static type checking. I’m just saying that the type annotations in current Julia are absolutely not for that. It’s for multiple dispatch and for helping the compiler choose optimize your code.<p>The thing that’s interesting about Julia is that it’s sort of like a verb first language instead noun first. You describe the behaviors that you want by creating methods with one name, getindex, setindex!, etc. that defines the API. Then you can implement that for any type by creating a new method with the same name and a different type signature.<p>Edit: In fact, I think that over-annotating your methods is probably the number one mistake that new Julia programmers make. Adding a type to the type signature doesn&#x27;t make your code fast. Adding too many types will restrict your code and it won&#x27;t work when you think it will because you&#x27;ve told the compiler that this only works with 3-dimensional arrays of type Float64 and you&#x27;re trying to call it with a 3-dimensional array of type Float32 or Int64.<p>What makes code fast is type stability, but that&#x27;s a whole other topic.')