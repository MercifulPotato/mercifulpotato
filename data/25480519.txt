Item(by='rossjudson', descendants=None, kids=None, score=None, time=1608407206, title=None, item_type='comment', url=None, parent=25478184, text='All you need is to be able to influence the behavior of the build system at runtime. If you have that, you do not need access to the source code, and you do not need to check anything in. This includes scenarios where the tool chain itself is checked into the source control system.<p>Ken Thompson described this a long time ago: <a href="https:&#x2F;&#x2F;www.win.tue.nl&#x2F;~aeb&#x2F;linux&#x2F;hh&#x2F;thompson&#x2F;trust.html" rel="nofollow">https:&#x2F;&#x2F;www.win.tue.nl&#x2F;~aeb&#x2F;linux&#x2F;hh&#x2F;thompson&#x2F;trust.html</a><p>At runtime, you alter the build system to notice if a new compiler binary is being built. If so, inject code that, from then on, invisibly &quot;injects the injector&quot;. Once you&#x27;ve shifted to this new compiler, the compiler binary itself is the attacker.<p>Since you have an injector, you can put other types of detections and alterations in...like watching for the compilation of the initialization of a Solarwinds DLL. Then you inject in what you need. No source code is involved.<p>There are probably lots of ways of getting around this, but unless you&#x27;re actually <i>looking</i> for it, you won&#x27;t see it.')