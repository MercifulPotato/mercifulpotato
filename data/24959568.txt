Item(by='filleokus', descendants=None, kids=[24959825, 24960059, 24960937], score=None, time=1604239633, title=None, item_type='comment', url=None, parent=24958392, text='Kotlin Multiplatform looks really cool and limiting code sharing to non-UI code makes much more sense to me. However, I wonder if&#x2F;when&#x2F;to what extent the abstractions become leaky.<p>For me it makes perfect sense to e.g create an internal API client using this. You use platform specific frameworks for making the actual HTTP requests[1], but can write all higher level business logic in Kotlin and expose that. Adding a new REST route or change data validation would be done only once and be in sync on all platforms.<p>But I&#x27;m guessing that you have to pretty knowledgeable about the underlying platforms to know how (and if it&#x27;s even possible) to create a good abstraction above the platform code. For something like audio&#x2F;video playback or BLE, I&#x27;m guessing that there might be enough differences between Android and iOS that an abstraction that fit both is really unwieldy. And even if you create something resonable today, one of the platforms might introduce new features which destroys your abstraction.<p>[1]: I noticed that they even have some kind of built-in HTTP client abstraction: <a href="https:&#x2F;&#x2F;kotlinlang.org&#x2F;docs&#x2F;mobile&#x2F;use-ktor-for-networking.html#select-an-engine" rel="nofollow">https:&#x2F;&#x2F;kotlinlang.org&#x2F;docs&#x2F;mobile&#x2F;use-ktor-for-networking.h...</a>')