Item(by='mpweiher', descendants=None, kids=[24809573, 24810852], score=None, time=1602937110, title=None, item_type='comment', url=None, parent=24809321, text='<i>Swift is a crescendo of special cases stopping just short of the general; the result is complexity in the semantics, complexity in the behaviour (i.e. bugs), and complexity in use (i.e. workarounds).</i><p><a href="https:&#x2F;&#x2F;www.quora.com&#x2F;Which-features-overcomplicate-Swift-What-should-be-removed?share=1" rel="nofollow">https:&#x2F;&#x2F;www.quora.com&#x2F;Which-features-overcomplicate-Swift-Wh...</a><p>That was <i>2015</i>, when Swift was far simpler than today.<p>Heck, they added almost all of Smalltalk syntax recently to address one special case of a special case.<p><a href="https:&#x2F;&#x2F;blog.metaobject.com&#x2F;2020&#x2F;06&#x2F;the-curious-case-of-swift-adoption-of.html" rel="nofollow">https:&#x2F;&#x2F;blog.metaobject.com&#x2F;2020&#x2F;06&#x2F;the-curious-case-of-swif...</a><p>And the method syntax that this is a special case of a special case of is many pages of spec.<p>And of course there&#x27;s initialization, which was 14 pages of the Swift spec at the time, with crazy overlaps and gotchas.  Unsurprisingly and predictably (as in: I predicted it), it wasn&#x27;t enough, or rather far too specific, so for SwiftUI they had to create an entirely new way of creating&#x2F;initializing: function builders.<p><a href="https:&#x2F;&#x2F;blog.metaobject.com&#x2F;2020&#x2F;04&#x2F;swift-initialization-swiftui-and.html" rel="nofollow">https:&#x2F;&#x2F;blog.metaobject.com&#x2F;2020&#x2F;04&#x2F;swift-initialization-swi...</a>')