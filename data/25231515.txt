Item(by='drknow007', descendants=None, kids=None, score=None, time=1606502917, title=None, item_type='comment', url=None, parent=25222762, text='&gt;&gt; CSS and algorithms? Come on.<p>I&#x27;m not sure what you are missing here - I&#x27;m not directly comparing CSS and algorithms. Rather, I&#x27;m pointing out that the lower layers have tools that better allow their devs to express their intentions. The front-end does not do this well.<p>&gt;&gt; I absolutely remember those, and they didn&#x27;t work around the problem at all...<p>For who? You? They absolutely solved several problems that existed with the Web stack. Why do you think they were created and used? I agree, the download requirement sucked, but that was because the plugin model of the browser sucked.<p>Your perspective seems too narrow here. Imagine if someone told you that you could build sites with your vanilla Web stack (HTML&#x2F;CSS&#x2F;JS), but you were not allowed to use 3rd party packages? Trust me, if Steve Jobs could close your Web stack too, he would. He would also close your hardware stack if he could. They are the least open company of them all for devs. Again, thank goodness for port 80!<p>&gt;&gt; I am so grateful to Steve Jobs for effectively killing those technologies...<p>Wow. Who are you to make a blanket statement like that? Are you suggesting that all the devs and projects that used those plugins simply didn&#x27;t have a strategy and rather were too lazy to just learn the HTML&#x2F;CSS&#x2F;JS stack properly? Btw, many of these devs have a background in native development, which is typically a much more rigorous CS training - HTML&#x2F;CSS&#x2F;JS is not beyond them.<p>&gt;&gt; Libraries are good, though JavaScript is in great need of a rich standard library...<p>Agreed. You&#x27;re making my point further. The Web stack is far behind native development in so many ways. However, port 80 is such a big deal (for bypassing OS politics), that it remains crucial that we try to embrace and improve upon it.<p>&gt;&gt; Hacks are arguable: how many were really necessary, and how many came from people who refused to learn the language well but pasted code samples from the web.<p>You&#x27;re still making my point. This is an issue largely unique to Web development. With proper libraries and a more organized dev stack, these issues haven&#x27;t existed for decades in native development. However, it does mean the Web community has conducted some really great experiments, which the original poster discusses.<p>Look... If you want to argue that the Web is great for static web pages, I will give you that. But only because its largely not complicated. However, if you want to argue that the Web is great for Web apps and positioned well for future software projects, then I would suggest you spend more time in the native world to gain a better appreciation for how much worse Web dev can be.<p>Finally, I believe front end development is not great no matter where you look. It&#x27;s clearly a difficult layer to get right. This is why I stand with the intentions of the original post. The Web can build some great user experiences. But they are difficult to build, lack a consistent dev experience, and too often are full of hacks to get them to work.')