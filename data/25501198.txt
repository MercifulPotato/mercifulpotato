Item(by='GSGBen', descendants=None, kids=None, score=None, time=1608594610, title=None, item_type='comment', url=None, parent=25500835, text='Everything in powershell is an object, but sometimes the output format doesn&#x27;t make it clear. Select-String basically returns a match object with some nested results, but the output formatting makes it awkward to see. Pipe it to<p><pre><code>  | format-list *\n</code></pre>\nto investigate it, and you&#x27;ll see a bunch of members. In this case if what you want is just the matched string, you want to expand the `Matches` property of the object, then expand the value property of each of those. In this case the term &#x27;expand&#x27; is key: if you just use `select` it&#x27;ll return you the property, name and all. Use `-expand` to return the plain array. So something like:<p><pre><code>  Get-ChildItem -Recurse -Path * | Select-String $pattern | select -expand matches | select -expand value\n</code></pre>\nwhich you can then use how you like. An alternate form is<p><pre><code>  (Get-ChildItem -Recurse -Path * | Select-String $pattern).Matches.Value\n</code></pre>\nbecause the . notation for member access works on all items in an array (Matches in this case).')