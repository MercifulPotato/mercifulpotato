Item(by='mushbino', descendants=None, kids=None, score=None, time=1602959670, title=None, item_type='comment', url=None, parent=24810914, text='I don&#x27;t mean a hard separation in terms of roles, but I agree with your general sentiment. The reality, in my experience with startups, is that an MVP is built by an engineer or a couple of engineers and it&#x27;s launched as quickly as possible to get market validation. The thought is usually along the lines of &quot;we&#x27;ll launch it, get feedback from customers, and then quickly iterate.&quot; The reality is usually that the MVP is launched and the company is stuck supporting that MVP and the company is afraid to make changes because they got a customer to give them money (enough perceived validation) and they&#x27;re stuck supporting the MVP they&#x27;ve just launched instead of iterating. I&#x27;ve seen it so many times that I refer to it as &quot;the MVP trap&quot;.<p>Also, User research can be done in a way to account for the fact that users will say they love something, but actually never use it. I&#x27;ve done it many times.<p>All of these things that you&#x27;ve mentioned should be done in tandem, but in practice, that&#x27;s pretty rare. The good thing is that it creates market opportunities for other companies. Amazon is a more extreme example, but it&#x27;s basically the business model of AWS. Another example is Terraform. HashiCorp has done a poor job of keeping up with user needs so there are add-ons or straight up replacements coming out of the woodwork to fill the feature and experience gaps that have been around in TF for years and years. You will see more competitors to TF and other HC products coming up for exactly this reason. They aren&#x27;t even the close to the most glaring example, but just the first thing that came to mind.')