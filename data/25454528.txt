Item(by='valenterry', descendants=None, kids=[25456266, 25455342], score=None, time=1608203844, title=None, item_type='comment', url=None, parent=25454322, text='I&#x27;m not familiar with react hooks, but when I read what you write, my immediate reaction is: we already have a way to reuse business logic. It&#x27;s called functions. Define a function and use it, either a global static function or pass it down to the component if you want to mock it.<p>Reading the react docs, I find this part interesting:<p>&gt; Hooks were designed with static typing in mind. Because they’re functions, they are easier to type correctly than patterns like higher-order components. Importantly, custom Hooks give you the power to constrain React API if you’d like to type them more strictly in some way. React gives you the primitives, but you can combine them in different ways than what we provide out of the box.<p>(<a href="https:&#x2F;&#x2F;reactjs.org&#x2F;docs&#x2F;hooks-faq.html#do-hooks-work-with-static-typing" rel="nofollow">https:&#x2F;&#x2F;reactjs.org&#x2F;docs&#x2F;hooks-faq.html#do-hooks-work-with-s...</a>)<p>Seems to me as if hooks try to fix the lack of a good programming language. These approaches usually go wrong eventually. Maybe it&#x27;s time to ditch Javascript (and even Typescript) and use a proper language (purescript maybe?) so that all these things can be done with just functions.')