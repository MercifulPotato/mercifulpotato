Item(by='lptk', descendants=None, kids=None, score=None, time=1604255655, title=None, item_type='comment', url=None, parent=24958093, text='(I&#x27;m not the person you were asking, but:)<p>The power of Haskell&#x27;s type classes comes from two things:<p>* Implicit composition of instances: you can write `show [True, False]`, which will automatically&#x2F;implicitly compose the `Show` instances of lists and booleans. With modules or interfaces, you&#x27;d have to build and use a &quot;BoolListShow&quot; manually.<p>* Higher-kinded types, to abstract over type constructors. This enables the use of abstractions like monads.<p>Rust only has the first of these two.<p>Scala uses OOP interfaces instead, but by augmenting them with both capabilities (implicit composition and higher-kinded types), it achieves the same expressiveness as Haskell.')