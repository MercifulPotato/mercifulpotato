Item(by='dasyatidprime', descendants=None, kids=[25270477], score=None, time=1606857070, title=None, item_type='comment', url=None, parent=25269501, text='QEMU in fact does dynamic translation, which is more like how JIT works in bytecode languages; this is why it&#x27;s much faster than some earlier machine emulator software. (I <i>think</i> e.g. Bochs didn&#x27;t have dynamic translation back when QEMU was coming into play, but the Web suggests that there&#x27;s at least discussion around that feature so maybe that&#x27;s not true anymore.)<p>The BEAM is currently a bytecode interpreter. The article describes it as using threaded code, which if you look at the C source is true in a sense on platforms where the C compiler provides the GNU-style extension of being able to take the address of labels for dynamic `goto` (<a href="https:&#x2F;&#x2F;stenmans.org&#x2F;happi_blog&#x2F;?p=194" rel="nofollow">https:&#x2F;&#x2F;stenmans.org&#x2F;happi_blog&#x2F;?p=194</a> agrees with my skim of `beam_emu.c`)—though if that&#x27;s the only use as it seems, I might find that an edge case of the term, since I associate “threaded code” with the style used in Forth where “user-level” subroutines can be pointed to directly. If computed `goto` isn&#x27;t available, then it uses a conventional switch&#x2F;case loop, repeatedly dispatching the result of fetching the next bytecode instruction pointer value.')