Item(by='colejohnson66', descendants=None, kids=[24828829], score=None, time=1603118327, title=None, item_type='comment', url=None, parent=24826543, text='Correct. x86-64 mandates “canonical” addresses where all the upper bits <i>must</i> be the same in order to dereference a pointer.[0] So on a processor with 48 physical address lines, the upper 16 <i>must</i> be either all set or all unset. This is obviously to prevent people using those upper bits to store extra data.<p>Of course, this doesn’t <i>stop</i> you from being able to[a], it just makes it harder.<p>[a]: The processor doesn’t know the “type” of a register’s value; It’s just bits. It could be a pointer, integer, floating point, etc. until you tell the processor to do something with it. So one could obviously use those extra bits to store data, then when a dereference is needed, store those bits in another register, dereference, then put the bits back. But that’s a lot of work to save a byte or two.<p>[0]: Intel SDM Volume 1 §3.3.7.1:<p>&gt; In 64-bit mode, an address is considered to be in canonical form if address bits 63 through to the most-significant implemented bit by the microarchitecture are set to either all ones or all zeros.')