Item(by='meheleventyone', descendants=None, kids=[24691197], score=None, time=1601925296, title=None, item_type='comment', url=None, parent=24690424, text='Nope. It&#x27;s about the different types passed into a function parameter. For optimization JS engines look at the differing shapes of JS objects. Which is determined by the order and type of each member.<p>So:<p><pre><code>  { a: 6, b: 7 } is different to { b: 7, a: 6 } and { a: &quot;six&quot;, b: &quot;seven&quot; } is different to both.\n</code></pre>\nThis is done so the member can be looked up quickly by offset. Functions then have an inline cache that stores the shapes the function has seen. If the function is called monomorphically it will only ever see one shape and hit the fastest path. If it is called with up to three shapes (in V8) it will be pretty quick. Once past three the cache falls through to a global table and is dog slow.<p>This matters if you are using structural typing as you are still creating different shapes to be passed into the same function(s).')