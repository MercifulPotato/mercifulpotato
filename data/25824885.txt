Item(by='svat', descendants=None, kids=None, score=None, time=1610994702, title=None, item_type='comment', url=None, parent=25822463, text='I looked up TAOCP (<i>The Art of Computer Programming</i> by Knuth), and (unsurprisingly) this trick is mentioned there, and already by the time of the first edition this trick was folklore, with its origins lost to antiquity: the last exercise in section 2.2.4:<p>&gt; <i>18. [25] Devise a way to represent circular lists inside a computer in such a way that the list can be traversed efficiently in both directions, yet only one link field is used per node. [</i>Hint: <i>If we are given two pointers, to two successive nodes x_{i-1} and x_i, it should be possible to locate both x_{i+1} and x_{i-2}.]</i><p>Answer (in 1st edition [1968], second printing [1969]):<p>&gt; <i>18. Let the link field of node x_i contain LOC{x_{i+1}) ⊕ LOC{x_{i-1}), where &quot;⊕&quot; denotes either subtraction or &quot;exclusive or.&quot; Two adjacent list heads are included in the circular list, to help get things started properly. (The origin of this ingenious technique is unknown.)</i><p>The &quot;either&quot; is modified to &quot;e.g.&quot; in the 2nd edition [1973], and further slightly modified in 3rd edition ([1997], first digital release [December 2013]):<p>&gt; <i>18. Let the link field of node x_i contain LOC(x_{i+1}) ⊕ LOC(x_{i−1}), where “⊕” denotes “exclusive or.” Other invertible operations, such as addition or subtraction modulo the pointer field size, could also be used. It is convenient to include two adjacent list heads in the circular list, to help get things started properly. (The origin of this ingenious technique is unknown.)</i><p>With modern languages and compilers, even if doing these operations on your language&#x27;s pointer type is implementation-defined&#x2F;undefined behaviour as mentioned in some of the other comments, you can still use this trick with your own &quot;pointers&quot; (indexes in an array, as Knuth does in many of his programs: <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;w&#x2F;index.php?title=Pointer_(computer_programming)&amp;oldid=990952393#Simulation_using_an_array_index" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;w&#x2F;index.php?title=Pointer_(computer...</a>), I guess.<p>Anyway, this gives me another point of appreciation about why the TAOCP series of books were so highly regarded: they were (are) encyclopedic and gathered&#x2F;organized much of what was known at the time, in a highly compressed way (packed into exercises etc).')