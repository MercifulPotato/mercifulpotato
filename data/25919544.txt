Item(by='davidfstr', descendants=None, kids=None, score=None, time=1611686381, title=None, item_type='comment', url=None, parent=25918116, text='&gt; 1. You can define a function type somewhat clumsily (`Callable[[Arg1T, Arg2T], ReturnT]`), but if your callback uses keyword arguments (pervasive among Python programs), you&#x27;re out of luck.<p>I&#x27;ve personally never missed the ability to add keyword arguments to a Callable. If you want to anyway, I understand that at least mypy has syntax for this:<p>* <a href="https:&#x2F;&#x2F;mypy.readthedocs.io&#x2F;en&#x2F;stable&#x2F;protocols.html#callback-protocols" rel="nofollow">https:&#x2F;&#x2F;mypy.readthedocs.io&#x2F;en&#x2F;stable&#x2F;protocols.html#callbac...</a><p>* <a href="https:&#x2F;&#x2F;mypy.readthedocs.io&#x2F;en&#x2F;stable&#x2F;additional_features.html?highlight=keyword#extended-callable-types" rel="nofollow">https:&#x2F;&#x2F;mypy.readthedocs.io&#x2F;en&#x2F;stable&#x2F;additional_features.ht...</a><p>&gt; Beyond that, it&#x27;s just the general usability issues that ultimately derive from Python&#x27;s election to shoehorn a lot of typing functionality into minimal syntax changes<p>Many syntax niceities will be introduced in upcoming Python releases. From the article:<p>* Union types are shortened to X | Y (PEP 604)<p>* (?) Optional types shortened to X? (PEP 645)<p>* Type Hinting Generics In Standard Collections (PEP 585) - Can use list[T], dict[K, V], etc in place of List[T] and Dict[K, V].<p>With those changes, you won&#x27;t generally need to import the `typing` module at all anymore.<p>&gt; there just isn&#x27;t enough investment to move it forward.<p>Dropbox has dedicated engineers maintaining mypy. And of course a few volunteers such as myself. And Guido. :)')