Item(by='adamzerner', descendants=None, kids=None, score=None, time=1601743660, title=None, item_type='comment', url=None, parent=24670560, text='Yeah, I have learned a few things from the comments here and my understanding isn&#x27;t perfect. Previously I thought of `n` as arbitrary; that it can be whatever you define it to be. I see now that you&#x27;re right that technically it has a more precise definition: it refers to the input size.<p>However, I also think that in _practice_, as Znafon [says](<a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24661411" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24661411</a>), the meaning of `n` is clear and it makes sense to stretch the technical definition a bit. In my experience, people often do. Imagine if there were one trillion vowels. It wouldn&#x27;t be practical to describe it as an O(1) algorithm, despite what the answers to exam questions might say.<p>That said, I think that it is worth understanding the distinction between what `n` means in theory vs practice, so I was going to add a note to the blog post in order to avoid confusing readers, like you recommend. However, as I tried to do so, things got too side-tracked. Too many tangents, especially ones that aren&#x27;t the easiest to understand, makes the post harder to follow. So I decided on linking to this thread parenthetically. That seems to my eye to strike the right balance.')