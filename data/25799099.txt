Item(by='no_wizard', descendants=None, kids=[25799398], score=None, time=1610761513, title=None, item_type='comment', url=None, parent=25798191, text='Sincere question, how many people work on this application or suite of applications? One, ten, twenty?<p>It&#x27;s as the number of developers grow on projects that these things become nightmares. Having worked somewhere that used React <i>and</i> had extremely strict eslint and typescript settings, it was all so uniform (those type checking static linting really keep the guard rails on code quality) because you were guided to use the same effective patterns in solving those problems. In fact, all the interesting work started happening <i>outside</i> interactions with the framework (and more around redux, in this case) so we were more focused on business logic and other concerns, react fell straight into the background. There were only ~25 developers or so. The ecosystem and the framework really lent itself hand in hand. That shouldn&#x27;t be left out of discussions like this.<p>I can see this model falling flat on its face after about 6 developers working in this system, especially since there is no adjacent tooling that specifically made to keep the guard rails on code quality.<p>I&#x27;d love to hear a counter example to that.<p>Edit: my point is, in order for something to be an acceptable alternative to React, it needs to have the ability to thrive in an example like I gave. React isn&#x27;t for the 1 man shop, per se, or even perhaps a team of 5-6 developers that can coordinate well. Its real strength is in large application development, with `n` number of developers, where n is greater than 6. Thats just been my experience.')