Item(by='alwillis', descendants=None, kids=[25329396], score=None, time=1607311783, title=None, item_type='comment', url=None, parent=25328241, text='<i>It will force the x86 vendors to adopt the microarchitectural aspects of the M1 that make it fast in practice, instead of spending so much area&#x2F;power budget chasing SPEC benchmarks. We will get better chips through competition.</i><p>There&#x27;s only so much you can do with a 40-year old instruction set. There&#x27;s certain things neither ARM or Intel can do compared to the M1.<p>Example: the max number of instruction decoders Intel and AMD can use is 4 and that brings tons of complexity due to x86 instructions ranging in size from 1-15 bytes. There&#x27;s no way for the processor to know where the instruction boundaries lie except through trial and error essentially.<p>All ARM instructions are one size, so decoding them and having many instructions in flight at any given time is much easier. The M1 has 8 instruction decoders.<p>Short answer: the M1 can process twice as many instructions per clock cycle than Intel&#x2F;AMD processors can.<p>The M1 and the Zen3 run neck and neck, with the Zen3 being slightly faster in some benchmarks.<p>But the Zen3 runs at 5 GHz and the M1 runs at 3.2 GHz, meaning if the M1 ran at 5 GHz, it would blow the Zen3 away. And of course, on a performance per watt basis, the M1 is the obvious winner.<p>This article gets into all the reasons why Intel and AMD are between a rock and a hard place when it comes to competing with the M1:<p>&quot;Why Is Apple’s M1 Chip So Fast?&quot;—<a href="https:&#x2F;&#x2F;debugger.medium.com&#x2F;why-is-apples-m1-chip-so-fast-3262b158cba2" rel="nofollow">https:&#x2F;&#x2F;debugger.medium.com&#x2F;why-is-apples-m1-chip-so-fast-32...</a>')