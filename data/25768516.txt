Item(by='jFriedensreich', descendants=None, kids=[25769311, 25769759, 25770368, 25770968, 25770796], score=None, time=1610575206, title=None, item_type='comment', url=None, parent=25767030, text='As someone who came to erlang at least in part because i hated ruby (and also rails&#x2F;phoenix like frameworks) i can partially sympathise. I would however put pipe operators clearly on the pro side of elixir and also add the string handling to that list (no pun intended).<p>I am ultimately really happy about Elixir giving BEAM some new popularity in otherwise unreachable audiences, even though i had really hoped for something more akin to erlang2 or similar to an erlangish coffeescript.<p>But in the end even joe approved of elixir and i don&#x27;t remember significant effort on erlang2 after initial experiments.<p>But the problem seems not to be syntax but more culture. I see many ruby&#x2F;rails people coming into the BEAM ecosystem who bring their poisonous way to think about systems with them, even when they understand the theory about functional programming and what BEAM is about, they seem to still fall back all the time, maybe partially because the syntax is too familiar.<p>If is see<p><pre><code>  defmodule TimelineLive do\n     use Phoenix.LiveView\n</code></pre>\ni am already fighting a puking reflex, does elixir dictate to to build a framework like this? No, but the culture bleads over.<p>Funnily this is a similar effect to java culture poison-swapping into javascript after class and decorator syntax was added.')