Item(by='quickthrower2', descendants=None, kids=None, score=None, time=1604300831, title=None, item_type='comment', url=None, parent=24963821, text='The idea of needing a 1-5 compile-time constrained value is rare in any application I have worked with, because either you&#x27;d use an enum, or the &quot;5&quot; isn&#x27;t really known at compile time. (I thought about this when doing some basic Idris lesson.).<p>It makes me wonder what the constrained type might be that I do need?<p>A non-negative floating point number would be a common one I think, e.g. for a coordinate. I&#x27;ve not been keeping up with Haskell but can you guarantee this at compile time?<p>I guess it would be hard to do so, because every assignment to this from a normal floating point would need to be checked, requiring you &quot;prove&quot; that the number is non-negative at compile time, so back to Idris I guess?<p>E.g. x:Positive, x+5 -&gt; this is now a normal float, or I need to prove x+5:Positive.<p>I have only haskelled a little bit, but I would think most of the newtypes are mostly to trace the meaning of something. E.g. Latitude, Longitude, X, Y, WeightKg, and so on. These would be hard to constrain (and to what..?) they are just floating points.')