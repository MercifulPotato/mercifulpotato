Item(by='lisper', descendants=None, kids=[25985624], score=None, time=1612123242, title=None, item_type='comment', url=None, parent=25981809, text='Personally, I consider teaching the lambda calculus to be a real-life situation.  Teaching the lambda calculus is no less real to me than any other part of my life.  But OK, self-apply is not something you&#x27;re likely to see in production code, and neither are Church numerals, which is where this problem shows up for real.  But MAP, REDUCE, and APPLY are, and they all have the same problem as self-apply: their static types are infinite.<p>This is a general problem with all static type systems.  There are only two possibilities: either your type system is Turing complete or it is not.  If it is not, then there are things that one might reasonably want to express that cannot be expressed, and if it is, then it is undecidable.  Static typing is either constraining, or it is a Turing Tarpit (<a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Turing_tarpit" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Turing_tarpit</a>).')