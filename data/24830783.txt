Item(by='klyrs', descendants=None, kids=None, score=None, time=1603140196, title=None, item_type='comment', url=None, parent=24830478, text='Note: this comment is written under the assumption that Nintendo included GPL&#x27;d code, which doesn&#x27;t appear to be the case.  But this is an interesting hypothetical either way.<p>The answers here are in line with my (NAL) understanding of the issue:<p><a href="https:&#x2F;&#x2F;softwareengineering.stackexchange.com&#x2F;questions&#x2F;331846&#x2F;dual-license-with-gpl-and-a-closed-source-license" rel="nofollow">https:&#x2F;&#x2F;softwareengineering.stackexchange.com&#x2F;questions&#x2F;3318...</a><p>If the Nintendo-authored derivatives of Dr. Mario are free of external GPL code; more generally, if they are the sole copyright holders of those derivatives -- they may release them (or not) under any license they like.<p>For instance, you&#x27;re welcome to release a work under GPL, and maintain a proprietary patchset that you release only in binary form.  But, at the moment that you incorporate code&#x2F;content written by external contributors under the GPL license, you cannot incorporate that into your proprietary version.<p>While Nintendo may not be compelled to release derivatives, it is my (NAL) understanding that the gzip authors would have a very strong case to a very expensive discovery process which would provide them very broad access to Nintendo&#x27;s game source code.  While I don&#x27;t think that all of the revealed code would enter public record, some of it would inevitably be entered as evidence.<p>There&#x27;s another fun case worthy of consideration: if you are the sole author of some body of code, and you contribute that code to a GPL-licensed project (but do not assign copyright to that project), you retain full rights to the original code.  You may, at a later date, license the original form of that code to an employer for proprietary use, or to another project using an incompatible license.  And this is a <i>great</i> use of version control software -- you <i>must not</i> include later improvements to that code that was made by others; and the repo provides excellent historical evidence.')