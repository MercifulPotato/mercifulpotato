Item(by='ilikepi', descendants=None, kids=[25408147], score=None, time=1607879835, title=None, item_type='comment', url=None, parent=25405685, text='&gt; I wish there were a way for the db to filter out or not surface rows that violated a constraint but that then loaded the data that did meet the constraints.<p>You can definitely have PG ignore rows that would violate constraints by specifying &quot;ON CONFLICT DO NOTHING&quot;[1] as part of your INSERT statement.<p>If you wanted to capture those rows on the fly, one way would be to perform the load via a PL&#x2F;PgSQL program and include an exception handler specific to the particular constraint violation(s) you expect to hit.  But I guess then you&#x27;d have to load them one row at a time...and that&#x27;s not too different from just doing that in your high-level language of choice.  Also the PL&#x2F;PgSQL docs specifically recommend against this idea.[2]<p>[1]: <a href="https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;11&#x2F;sql-insert.html#SQL-ON-CONFLICT" rel="nofollow">https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;11&#x2F;sql-insert.html#SQL-ON-CO...</a><p>[2]: <a href="https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;11&#x2F;plpgsql-control-structures.html#PLPGSQL-UPSERT-EXAMPLE" rel="nofollow">https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;11&#x2F;plpgsql-control-structure...</a><p>EDIT: formatting and clarity')