Item(by='fuzzfactor', descendants=None, kids=None, score=None, time=1611818717, title=None, item_type='comment', url=None, parent=25921626, text='&gt;it may have been the model VI<p>Seems plausible, that&#x27;s worth an upvote for you.<p>Mechanical arms under the maze not much different than an XY plotter, move the mouse similar to Pac-Man but without needing a game controller or human player attached.<p>Under the maze an auto position (re)locator, followed by directional XY servo advancing plus a N&#x2F;S&#x2F;E&#x2F;W impact sensor provide the input data for the memory to learn the maze from.  This stuff actually all could be implemented in hardware with no memory needed.<p>All you need to do is place the mouse anywhere, grab the joystick and head on directly to the target like Pac-Man without any enemies or time limit.  This would be a really easy game so far.<p>If you didn&#x27;t see that wall coming and hit one anyway, the gameboard lets you know.  At this point you already know which direction you are going so now you <i>really</i> know where that wall is.  The gameboard doesn&#x27;t need to tell you whether it&#x27;s a N&#x2F;S&#x2F;E or W impact, surely you could figure it out.<p>Or if you did have just enough memory for a map of the maze but no _software_ hooked up to the sensors you could run the joystick yourself whatever direct path you might want and that would be enough of a maze map, whether you entered the data manually or could automatically somehow.<p>Then if the gameboard were able to play the movements back from memory when the mouse was placed at the identical starting position, that would not require code either.  You could even play back from less than the full path on a previously memorized trajectory.<p>While you&#x27;re at it memorize the entire maze anyway, this is just a preliminary training session, later there will be a quiz.<p>Then, without looking at the maze any more, just do the exact same series of joystick movements needed to get from anywhere directly to the goal as long as you know where the mouse is at the start.  The gameboard itself tells you exactly where the puck is dropped and you just take it from there.  If you can&#x27;t remember and take a wrong turn, the gameboard throws a flag and lets you know it&#x27;s bad.  So you can refresh your memory.  But you&#x27;ll have to remember which way you are going, which way you were coming from and which ways were right or wrong, even better than when you were looking and hit the wall anyway.  It hardly ever happens and it was just a little wall wasn&#x27;t it.<p>Well, that&#x27;s training.  When you get really good then you don&#x27;t need to look at any maze to begin with, and you can handle any combination of maze rearrangement including during real time.  As long as it&#x27;s truly solvable and you&#x27;ve got enough time.<p>When the machine actually did learn without a human or a joystick, that&#x27;s ML.  The final result was simply the full details of the entire landscape as if it was static.  No actual higher machine intelligence necessary, the intelligence was naturally still contained within Shannon.<p>He made sure the machine would move in the useful ways and collect the desired data as it goes no matter how long it takes to memorize the maze.<p>His program allowed any maze to be memorized automatically, then perform without obstacle.  The memory alone could guide the performance perfectly after that, but in real-time an unexpected obstacle had to be &quot;learned the hard way&quot; again, however after the memory was updated the new obstacles were perfectly dealt with after that.  It only learned what it needed to learn and knew when it had enough.  The rest of the time it just ran perfectly until more learning was needed.  And it always got it right.<p>Keep in mind how many full-speed collisions it takes for the mouse just to memorize enough of the maze to get to the goal the first time.<p>No forgetting anything but a single element at a time, and only when it undoubtably needs updating.<p>In this case a single bit, each changed bit only allowed if it gives a more realistic representation of the maze, building only on what is absolutely known.<p>He had more digital memory to work with than almost anyone in history at the time, even though it&#x27;s just one relay per bit somebody was bound to think of numbering the possible states 0 and 1 sooner or later.<p>The actual electro-mechanical processor and relay memory banks were much bigger than would ever fit under the gameboard.  Tonnes.<p>All making up a static program which reads the gameboard sensors in real time, controls the mouse along as much proven path as there is before searching, and builds the variable maze map in memory systematically but mindlessly.  Every time the routine is complete on a static maze it&#x27;s always correct.<p>So the program itself is good enough to be burned to a ROM and you need almost insignificant RAM.<p>RAM is only for the intermediate variables needed by the program which can always start zeroed, plus a single variable in memory of the exact position within the current maze, and the maze itself at any one time to whatever degree it is known.<p>When it seems fairly intelligent but the machine didn&#x27;t learn a damn thing compared to how smart it should be, that&#x27;s current AI.<p>Shannon had an auto-learning ML machine including its immutable _software_ which on any static playing field eliminated all mistakes then after self-learning did exactly what was expected without mistake from that point forward.  Other features built on top of that were the only thing that made the mouse hit a wall again.  Even though a human could do it the first time without hitting any walls if looking at the gameboard.  When the human can not see the gameboard and has to depend on the sensors alone, he will make mistakes the pre-programmed robot will not make.  But the machine is not expected to learn the exact same path to success that the human does even when the exact same goal is reached.  Shannon did it without ever having anything of consequence be unknown in memory except what could be easily audited in full detail whenever needed because it was small and to the point.<p>Kind of intelligent the way he did that.<p>Seems like maybe a lost art.')