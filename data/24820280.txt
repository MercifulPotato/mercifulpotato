Item(by='aeturnum', descendants=None, kids=[24822616], score=None, time=1603048075, title=None, item_type='comment', url=None, parent=24819040, text='&gt;  All of these other things could be done for C++. But, importantly, they haven&#x27;t.<p>I think programmers often under-emphasize the importance of culture, so I want to boost this line.<p>Lots of &quot;debates&quot; around programming languages are, I think, better understood as differences in beliefs about what a language should prioritize. C++ could add an allocation checker that provides stronger memory guarantees by outlawing certain operations (or requiring they be marked a&#x27;la `unsafe`). They don&#x27;t add it because, I think, they view other additions to the language as having a higher &quot;return&quot; on allowing people to create high quality programs.<p>It seems to me that a lot of this comes back to first-principles about what makes a good programming language. These ideas are, to some degree, set before a line of code is written. The rust folks thought memory and concurrency safety were very important when they were designing rust - even though they couldn&#x27;t have formed those opinions by using the kind of language they were making (because nothing quite like it existed yet).<p>I also think about &quot;infamous&quot; qualities of languages (generics in go, the GIL in python). These ideas exist within wider cultural beliefs about what makes a good programming language. In a sense, it&#x27;s inevitable that most of the people working on cpython aren&#x27;t too concerned about the GIL, because they chose to work on a project that has developed <i>around</i> the GIL and believe its limitations are worth the gains from being able to rely on its coordinating function.<p>The implications of this are, to me, that when advocate for languages to adopt features we&#x27;d like to see we should remember the wider cultural context. It seems silly to expect the current golang team to implement generics &quot;the way the community wants&quot; because they&#x27;ve spent years building a fully featured language that functions without generics. Culture runs deep and it&#x27;s not an intellectual or professional flaw to value improvements differently than our peers.')