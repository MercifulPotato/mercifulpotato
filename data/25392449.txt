Item(by='huahaiy', descendants=None, kids=None, score=None, time=1607726292, title=None, item_type='comment', url=None, parent=25376817, text='Cutting edge CS papers are written by Ph.D students who have not had any industrial experience yet. Of course, the code they wrote for those papers would certainly use languages that they learned in school, which would be C&#x2F;C++&#x2F;Java if the papers are system papers, python if the papers are ML&#x2F;DL papers. That tells you nothing about the merit of functional programming language vs. other mainstream language.<p>If anything, as someone who has a Ph.D. and a career spanning both academia and industry, I can assure you that functional programming languages like Clojure is much more productive than the mainstream languages, even for implementing cutting edge CS research.<p>My experience of implementing algorithms from papers is that, in Clojure, the implementation is much more straightforward, always almost a direct translation from pseudo code in the paper to actual working code, even the pseudo code is inevitably written in an imperative style. However, the original author&#x27;s code implemented in c&#x2F;c++&#x2F;java is always much more convoluted and bears no resemblance to their pseudo code in the paper. That should tell you one thing: that is functional languages often capture the bare essence of computer science, whereas mainstream language often have too much incidental complexity imposed by the languages themselves.')