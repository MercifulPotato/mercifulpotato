Item(by='Sodman', descendants=None, kids=[25062010], score=None, time=1605116960, title=None, item_type='comment', url=None, parent=25060000, text='Correct, this is what I meant. Even though they&#x27;re technically different concepts, I&#x27;ve found in practice they&#x27;re almost always coupled together.<p>FWIW, these days I usually do go with GraphQL over REST in my APIs, partially due to some of the advantages you get from separating the queries and mutations. But like you said, I prefer to ultimately store the info in a DB in one consistent format unless it&#x27;s absolutely unavoidable. Sometimes it is unavoidable, but like the article mentions you can frequently get away with having a &quot;Reporting Database&quot; separate to your &quot;Primary data&quot; database.<p>Once you start spreading your data across multiple databases and storing it in different structures managed by different apps with different APIs, suddenly getting to even eventual consistency can quickly become a non-trivial problem, which itself is usually solved or mitigated by adding more complexity.<p>Sometimes this complexity really is required because of incredibly large scale, large&#x2F;numerous engineering teams working on one project, or unique business requirements - but my original point was that for most cases, particularly new products&#x2F;projects that aren&#x27;t going to have 10M+ daily users from launch, you should keep it simple until you know for a fact that it needs the complexity of a full CQRS + event sourcing system.')