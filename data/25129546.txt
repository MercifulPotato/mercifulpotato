Item(by='einpoklum', descendants=None, kids=None, score=None, time=1605645794, title=None, item_type='comment', url=None, parent=25125900, text='I like C fine, and I also taught it when I was in grad school.<p>New languages mostly don&#x27;t replace existing ones. Rather, they supplant them for some uses, and open up new kinds of software which are easier to implement or to conceive with the new language. Now, you referred to C++ specifically, and since I&#x27;m somewhat familiar with it I&#x27;ll address some of the points you made with respect to just that one:<p>C++ was not intended to &quot;replace C&quot;, but rather to combine features of BCPL (later C) and Simula. See: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=69edOm889V4" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=69edOm889V4</a><p>Bjarne Strousup said: &quot;If you want to create a new language, a new system - it&#x27;s quite useful not to try to invent every wheel.&quot; For a long while now, C++ teachers&#x2F;trainers encourage their audience _not_ to think of C++ as an &quot;augmented C&quot; or &quot;C with feature X Y and Z&quot;, and to avoid most &quot;C-style&quot; code in favor of idioms appropriate to what the language offers today.<p>Also, C didn&#x27;t &quot;win the competition&quot; because there isn&#x27;t a &quot;bestest language for everything&quot; competition. It has been, and is, a popular language with many uses. Writing operating system kernels is one kind of programming task, where C is the most popular. Even at this level (and lower still), other languages are potentially interesting and often used. See, for example:<p>* IncludeOS - Running C++ without an operating system: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=cQPrtTsM7Zg" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=cQPrtTsM7Zg</a>\n* Generating optimal assembly in an embedded setting at (C++) compile time: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=CNw6Cz8Cb68" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=CNw6Cz8Cb68</a><p>Finally, C++ doesn&#x27;t require a huge library nor a complex runtime system because it has a &quot;freestanding mode&quot; in which the requirements are very limited (although more is required than for C). See:\n<a href="https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;freestanding" rel="nofollow">https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;freestanding</a>')