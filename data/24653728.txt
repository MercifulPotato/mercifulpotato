Item(by='segfaultbuserr', descendants=None, kids=[24654152, 24654035], score=None, time=1601573348, title=None, item_type='comment', url=None, parent=24653542, text='In this case, just &quot;rm&quot; everything is far from enough, it needs to be a secure deletion. And the best way to implement secure deletion is using full disk encryption, this way, instead of wiping the entire disk, you just need to wipe the header, which contains its master key.<p><pre><code>    head -c 100000000 &#x2F;dev&#x2F;zero &gt; &#x2F;dev&#x2F;sdX1; sync\n</code></pre>\nAn even better solution is interfacing the motherboard with a small microcontroller and storing the master key in hardware (and possibly with a key-split algorithm, so compromising the hardware doesn&#x27;t reveal the key, but its destruction will kill the key), such as a battery-backed SRAM or a hardware crypto chip. The self-destruction command would be an I&#x2F;O request to wipe the chip. Tamper-switches can be placed at strategic physical locations around the machine.<p>You can also write a deamon to monitor USB devices and trigger the self-destruction when an unknown device is detected, e.g. If your machine has been seized on-the-fly, the attacker is likely to plug an anti-screenlock USB mouse emulator, which triggers its self-destruction.<p>The tricky part is balancing the degree of security protection and the risk of data destruction from a false-positive trigger...')