Item(by='pickpuck', descendants=None, kids=None, score=None, time=1609436037, title=None, item_type='comment', url=None, parent=25593343, text='&gt; What do we do about this?<p><a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DBcz_bGcHgk" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DBcz_bGcHgk</a><p>After watching this video from Google, I think the future is web components + AOM[1].<p>This makes sense to me because:<p>1) Most web developers are already using frameworks (such as React) which can render web components.<p>2) We can&#x27;t expect all web developers to be ARIA&#x2F;WCAG&#x2F;ADA experts â€” they&#x27;re always going to be trying to write code that quickly&#x2F;efficiently expresses their intent.<p>Once we get full buy-in and implementation in all browsers and screen readers, most web developers probably won&#x27;t be using &lt;button&gt; much anymore.<p>Instead, they&#x27;ll be using &lt;framework-button&gt;. The &lt;framework-button&gt; sets up all the appropriate ARIA properties&#x2F;attributes, can restrict what slot content it accepts, and can present remaining issues as errors in the console.<p>Perhaps under the hood &lt;framework-button&gt; does indeed include a &lt;button&gt; in its Shadow DOM, or maybe it&#x27;s a &lt;span&gt;.<p>Coupled with Houdini and some other emerging standards, I think AOM will finally make web components a viable option for most developers, and can solve the vast majority of accessibility issues we see today.<p>[1]: <a href="https:&#x2F;&#x2F;wicg.github.io&#x2F;aom&#x2F;explainer.html#motivating-use-cases" rel="nofollow">https:&#x2F;&#x2F;wicg.github.io&#x2F;aom&#x2F;explainer.html#motivating-use-cas...</a>')