Item(by='ubercow13', descendants=None, kids=None, score=None, time=1608038179, title=None, item_type='comment', url=None, parent=25426871, text='&gt;You can&#x27;t and shouldn&#x27;t rely on your audio handler getting called on time via a timer in order to keep playback stable, especially not on a non latency sensitive use case<p>Why not? According to [1], using timers is how Windows, CoreAudio, and PulseAudio all work under the hood, and on Windows and in PulseAudio it replaced the previous interrupt-based implementations. On the app-end of the APIs, Windows&#x27; WASAPI code example uses Sleep polling [2], and PulseAudio&#x27;s write callback is optional and VLC doesn&#x27;t use it [3], foobar2000 has a polling-based output mode[4], Windows has specific APIs for audio thread scheduling [5], etc.<p>Is this a specific deficiency of Android?<p>[1] <a href="https:&#x2F;&#x2F;fedoraproject.org&#x2F;wiki&#x2F;Features&#x2F;GlitchFreeAudio" rel="nofollow">https:&#x2F;&#x2F;fedoraproject.org&#x2F;wiki&#x2F;Features&#x2F;GlitchFreeAudio</a><p>[2] <a href="https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;coreaudio&#x2F;rendering-a-stream" rel="nofollow">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;coreaudio&#x2F;ren...</a><p>[3] <a href="http:&#x2F;&#x2F;www.videolan.org&#x2F;developers&#x2F;vlc&#x2F;modules&#x2F;audio_output&#x2F;pulse.c" rel="nofollow">http:&#x2F;&#x2F;www.videolan.org&#x2F;developers&#x2F;vlc&#x2F;modules&#x2F;audio_output&#x2F;...</a><p>[4] <a href="http:&#x2F;&#x2F;wiki.hydrogenaud.io&#x2F;index.php?title=Foobar2000:Components_0.9&#x2F;foo_out_wasapi#Output_modes:_push_and_event-driven" rel="nofollow">http:&#x2F;&#x2F;wiki.hydrogenaud.io&#x2F;index.php?title=Foobar2000:Compon...</a><p>[5] <a href="https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;procthread&#x2F;multimedia-class-scheduler-service" rel="nofollow">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;procthread&#x2F;mu...</a>')