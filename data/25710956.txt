Item(by='psoundy', descendants=None, kids=None, score=None, time=1610257686, title=None, item_type='comment', url=None, parent=25708007, text='The number of deployed CRDs is not likely to be an issue. The number and size of custom resources (CRs - instances of CRDs) is potentially an issue.<p>Scalability is relative, and depends on many factors including but not limited to:<p>- the resources available on the hosts running apiservers and etcd members<p>- the number and size of resources (custom and native) that controllers will maintain<p>Relatively speaking, a cluster of a given size might be perfectly capable of handling on the order of many thousands of resources . Push that an order of magnitude and the overhead of serving LIST calls - marshaling json from etcd to golang structs for apimachinery and back again for sending over the wire - could exhaust an apiserverâ€™s memory allocation. And since the impact of resources is cumulative, any one application relying on lots of CRDs might not destabilize a cluster on its own but might well contribute to an unhealthy cluster when running alongside similarly CRD-heavy applications.<p>The key takeaway is that the kube api is best thought of as a specialized operational store rather than a general-purpose database. Anyone wanting to rely on CRDs at non-trivial scale would be well-advised to test carefully.')