Item(by='ojnabieoot', descendants=None, kids=[25966840], score=None, time=1611978099, title=None, item_type='comment', url=None, parent=25964071, text='I think you made the wrong correction in the article:<p>&gt; Update: Thanks to gus_massa and wiml @ HackerNews for pointing out I had used associative instead of commutative.... This means that floating point arithmetic is noncommutative [i]n that A + B != B + A.<p>Floating-point arithmetic <i>is</i> commutative, but <i>not</i> associative. So for floating-point numbers,<p>A + B = B + A always, but<p>A + (B + C) != (A + B) + C in many cases.<p>The problem comes about from significant digits and rounding - A + B might round up to 1, but B + C might round down to zero, etc. The point remains that the <i>order</i> in which you do things actually does matter in floating-point arithmetic, but it&#x27;s the order you compute the &quot;inner parentheses,&quot; not the actual order of numbers in (e.g.) the FPU registers.')