Item(by='pron', descendants=None, kids=[25622767], score=None, time=1609689681, title=None, item_type='comment', url=None, parent=25622404, text='&gt; is already pretty high towards &quot;implicit flow of control&quot; end<p>Its implicitness is zero -- there is zero information not available in the syntax of the current block, exactly as in C -- so I don&#x27;t see how it can be high compared to anything. You just don&#x27;t have it in C, so you&#x27;re not used to it. This is exactly like an Assembly programmer who says that C&#x27;s `while` is implicit because there is no explicit jmp. In fact, the third clause in C&#x27;s `for` header works almost exactly like defer: you write a piece of code that isn&#x27;t executed immediately after the preceding one, but is injected to the end of the block.<p>A language with `while` isn&#x27;t any more implicit than a language with just goto; it just has another explicit control-flow construct. Same goes for defer.<p>&gt; It&#x27;s literally a structured machine-independent assembler.<p>Not so much once you take the preprocessor into account.<p>&gt; it&#x27;s already perfect for what it is<p>I think that was true in 1970, not today. First, we know more. Second, we write much bigger programs. Third, &quot;structured assembly&quot; isn&#x27;t as valuable as it was now that even machine code is &quot;high level.&quot; This is not to say that C could be replaced <i>everywhere</i>, but I think, intertia aside, it could be replaced almost everywhere.')