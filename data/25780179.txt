Item(by='masklinn', descendants=None, kids=None, score=None, time=1610649150, title=None, item_type='comment', url=None, parent=25779160, text='&gt; It&#x27;s a shame subclass numbers do change from version to version, so there is no &quot;one-size-catch-all&quot; injection string.<p>Yeah going through subclasses is not trivial, but that&#x27;s the way exploits work really. And usually once you find a target the version is going to be reliable.<p>An other big injection sources in Python is when <i>modules</i> are available in the evaluation context, that&#x27;s way more risky than exposing classes, functions, and objects due to Python&#x27;s transitive import nature: anything you import becomes an attribute of your module, meaning if your module is visible so are <i>its</i> module. And very often there&#x27;s a point at which `sys` is imported somewhere within transitive reach. Once `sys` is available they&#x27;re out of the interpreter.')