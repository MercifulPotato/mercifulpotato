Item(by='NovemberWhiskey', descendants=None, kids=None, score=None, time=1601650670, title=None, item_type='comment', url=None, parent=24661903, text='It depends on exactly what and how you&#x27;re measuring and why.<p>TLS has a non-trivial bootstrap cost, due to the need for extra network round-trips during establishment (mitigated with 0-RTT, if available), the additional byte overhead of certificate exchange (which can be substantial relative to small payloads if you have a long chain or are sending unnecessary certs, and more so if you&#x27;re using RSA keys), and the cost of performing the crypto operations for the  public key part and key exchange.<p>So if your use-case is &quot;client arrives from the blue with a one-off API request and latency is important&quot; then you are going to suffer with TLS.<p>If this is a web application (on the other hand), then what&#x27;s actually going to happen is that the browser is going to establish HTTP&#x2F;1.1 connections over TLS to the load-balancer, keep them alive, and re-use them. Assuming a well-configured load-balancer, it&#x27;s also going to have the same from it&#x27;s back-end to your actual service implementation.<p>However, once that&#x27;s done, the only necessary overhead is the symmetric key stuff (microscopic) and maybe rekeying in long sessions.<p>Using curl to do a one-and-done connection to your service (as suggested by another poster) will give you an estimate which is only relevant to the first use case I described.')