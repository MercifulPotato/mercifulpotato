Item(by='eesmith', descendants=None, kids=None, score=None, time=1608840728, title=None, item_type='comment', url=None, parent=25530848, text='I agree.<p>I&#x27;m pretty sure the word &quot;class&quot; here comes from the repr for types, in Objects&#x2F;typeobject.c :<p><pre><code>  static PyObject *\n  type_repr(PyTypeObject *type)\n  {\n    ...\n      if (mod != NULL &amp;&amp; !_PyUnicode_EqualToASCIIId(mod, &amp;PyId_builtins))\n          rtn = PyUnicode_FromFormat(&quot;&lt;class &#x27;%U.%U&#x27;&gt;&quot;, mod, name);\n      else\n        rtn = PyUnicode_FromFormat(&quot;&lt;class &#x27;%s&#x27;&gt;&quot;, type-&gt;tp_name);\n    ...\n</code></pre>\nwhich is used later on when defining the &quot;type&quot; type:<p><pre><code>  PyTypeObject PyType_Type = {\n      PyVarObject_HEAD_INIT(&amp;PyType_Type, 0)\n      &quot;type&quot;,                                     &#x2F;* tp_name *&#x2F;\n       ...\n      (reprfunc)type_repr,                        &#x2F;* tp_repr *&#x2F;\n</code></pre>\nThat is, Python 3 has no actual &quot;class&quot; type, so it&#x27;s not correct to say that &#x27;&quot;type&quot; is an instance of &quot;class.&quot;&#x27;<p>(I could be wrong - I&#x27;m no expert at the Python internals.)')