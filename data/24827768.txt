Item(by='chriswarbo', descendants=None, kids=None, score=None, time=1603124160, title=None, item_type='comment', url=None, parent=24826064, text='I completely agree, using &#x27;reduce&#x27; can make code hard to figure out. I&#x27;m very guilty of this myself, e.g. I&#x27;ve written a bunch of hacky mess which roughly follows this template:<p><pre><code>    snd (reduce (FOO, BAR) go BAZ)\n      where go (x, y) elem = (FIZZ x y elem, BUZZ x y elem)\n</code></pre>\nThis usually starts out as a &#x27;map&#x27;; then I find myself needing to append or discard some elements so I change it to a &#x27;reduce&#x27;; then I find myself needing to propagate some info across calls, so I pair this on to the accumulator and discard it at the end. The end result is a sequential computation with mutable state; hardly a &#x27;functional pearl&#x27;!<p>My point above was that we can&#x27;t <i>forbid</i> &#x27;reduce&#x27;; since it&#x27;s a fallback when our calculation doesn&#x27;t follow an established pattern; and that it&#x27;s often useful to codify that pattern into a nice, generic function (using &#x27;reduce&#x27;), and use that new pattern in our application code.')