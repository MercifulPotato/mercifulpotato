Item(by='cookiengineer', descendants=None, kids=[24893770, 24893684, 24897883, 24896222, 24894509, 24896526], score=None, time=1603697351, title=None, item_type='comment', url=None, parent=24888234, text='I don&#x27;t understand this case, to be honest.<p>On one hand people tend to side with youtube-dl, because everybody claims they did nothing wrong. But it can be argued that the testsuite (and CI pipeline) is the responsibility of the person who implemented. And I agree with that point.<p>From youtube-dl&#x27;s perspective, this is an unnecessary attack surface that can be easily removed. I mean, this was bound to happen at some point, don&#x27;t kid yourself.<p>With a project so big, I think it is irresponsible to not care for its legality. I mean, they could have just prevented this with a supersimple fix.<p>0. Use only CC licensed content in testsuite. If necessary, open up your own youtube-dl-tests channel and upload a video of your dog or cat. It just takes less than an hour.<p>1. Implement a license check, required by all plugins. Default to proprietary if none given. If proprietary, provide a url to Terms Of Service.<p>2. Let the end user manually confirm that the license is XYZ once it is proprietary and not public domain or CC based. Do this with every download.<p>3. Introduce a CLI flag like &quot;--agree-to-license&quot; in order to skip that.<p>4. Document this under legal compliance in the readme, and state that youtube-dl does in good faith try to comply with legal requirements, but that the responsibility is the action of its users that it cannot influence.<p>Boom. Plausible deniability, and RIAA would have not a single basis for the case.<p>I mean, this would have been so easy to implement. I don&#x27;t understand why this wasn&#x27;t integrated.')