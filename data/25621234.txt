Item(by='lispm', descendants=None, kids=None, score=None, time=1609674205, title=None, item_type='comment', url=None, parent=25621190, text='&gt; therefore making source locations useless<p>Just make source available on the file system. Mount it. Copy it.<p>That&#x27;s why Common Lisp has logical pathnames. Typically one uses logical pathnames in source locations. When I set up my application on a machine, I define a translation table to point to the source code.<p>One can also just use standard pathnames and mount the source code to a standard path. That&#x27;s how one also has set up Lisp systems in clusters. Every machine mounts the source in a standard path (or a logical path) and a client system will then have access to that source code. The image still has the recorded locations.<p>Btw., even Smalltalk stores its source code not in the image. The Smalltalk source code is stored OUTSIDE of the image in the file system and it has to have the files available and needs to know the location of these source files.<p>See: <a href="https:&#x2F;&#x2F;squeak.org&#x2F;downloads&#x2F;" rel="nofollow">https:&#x2F;&#x2F;squeak.org&#x2F;downloads&#x2F;</a><p><pre><code>    The Squeak&#x2F;Smalltalk programming system consists of three parts:\n\n    * a virtual machine for your platform,\n    * both image and changes files of a particular version, and\n    * a sources file for the particular image file.\n</code></pre>\nThe source and changes files contain the source code of the running Smalltalk. An edit of source code will then lead to an entry in the changes file.<p>Smalltalk usually can decompile byte code, so one can edit code which has no corresponding source code, with some loss of original source information.')