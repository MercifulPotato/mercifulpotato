Item(by='rhizome31', descendants=None, kids=[25562400], score=None, time=1609183574, title=None, item_type='comment', url=None, parent=25561091, text='&gt; If you rage quit every toolset that has problems, I have some really bad news for you.<p>As someone who has tried to learn Haskell twice and failed (and trust me I went way beyond the second page of a tutorial ;-), I don&#x27;t think the issue is that Haskell has problems. As you hinted every language has problems. The issue is that for a lot of people Haskell requires significantly more effort to learn than other languages and doesn&#x27;t have a lot publicly available software to show off for. So when we learn Haskell and stumble on problems, we are less forgiving than with other languages because we have spent more effort and we don&#x27;t have enough examples of useful software made with Haskell to reassure us that our efforts will eventually pay off.<p>We loose confidence because it seems that the promises of correctness aren&#x27;t fulfilled and we don&#x27;t have enough evidence that we aren&#x27;t wasting our time. We would need at least to see the light at the end of the tunnel to keep us motivated. The sad thing is that if we decided to spend long hours of our free time learning this language instead of doing other things it&#x27;s because we really believe in ideas behind it. What we have read about the language obviously speak to us but at some point we loose motivation because we don&#x27;t get any tangible results.<p>I&#x27;m pretty sure that a good part of why it clicks for some people and not others is due to the amount of mathematical literacy. I don&#x27;t have a strong mathematical background so the amount of effort for me to learn the language is probably much higher than it is for someone better at math. I have to invest more so I expect more in return, which in my personal experience Haskell fails to deliver. To appeal to a wider audience Haskell needs to be pretty much flawless and also to have more public software to showcase.')