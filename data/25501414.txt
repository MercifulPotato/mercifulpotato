Item(by='motohagiography', descendants=None, kids=None, score=None, time=1608596221, title=None, item_type='comment', url=None, parent=25500671, text='This nugget stood out for me: &quot;In my experience most codebases have a pure functional subset, and I believe writing that subset in a pure-functional style is nearly always a win for the long-term health of the project.&quot;<p>This is probably often true. In high level applications, the idea of classing or abstracting out your i&#x2F;o from the core functionality is appealing from a security and reasoning  perspective, but not sure if serious developers think that way.<p>Would you need to understand the rationale behind the codebase from a functional perspective, and even the economics of the business logic behind the features? It&#x27;s kind of an architects view of &quot;this thing essentially reduces to a queue and if I optimize for this, I get more value.&quot;')