Item(by='chombier', descendants=None, kids=None, score=None, time=1607687561, title=None, item_type='comment', url=None, parent=25384201, text='Looking at the replies the difference was not entirely clear to me, but the book has a nice explanation <a href="https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;stable&#x2F;book&#x2F;ch19-03-advanced-traits.html#specifying-placeholder-types-in-trait-definitions-with-associated-types" rel="nofollow">https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;stable&#x2F;book&#x2F;ch19-03-advanced-trait...</a><p>&gt; &quot;The difference is that when using generics, as in Listing 19-13, we must annotate the types in each implementation; because we can also implement Iterator&lt;String&gt; for Counter or any other type, we could have multiple implementations of Iterator for Counter. In other words, when a trait has a generic parameter, it can be implemented for a type multiple times, changing the concrete types of the generic type parameters each time. When we use the next method on Counter, we would have to provide type annotations to indicate which implementation of Iterator we want to use.&quot;')