Item(by='codebje', descendants=None, kids=None, score=None, time=1610419740, title=None, item_type='comment', url=None, parent=25741067, text='You can overwhelm a NAT in several ways.<p>UDP is connectionless, but typically a UDP communication is bidirectional. This means a NAT needs to inspect UDP packets and retain a mapping to direct incoming UDP packets to the right place. With no connection information this can only be done as an LRU cache or similar.<p>TCP is connection oriented, and a NAT might rapidly free up resources when a connection is closed (ie, when the final FIN has been ACKed). But if there&#x27;s no FIN, the NAT is in the same case as it is with UDP. Making a lot of connections without closing them fills up NAT buffers.<p>When you have a home NAT and a carrier-grade NAT you may get an impedance mismatch of sorts. The CGNAT might have insufficient ports allocated to your service to keep up with your home NAT, resulting in timeouts or dropped mappings. Your home NAT will have one set of mappings and the CGNAT another, and the two sets probably won&#x27;t be exactly the same. This means some portion of the mappings held in memory are useless.<p>As a specific example, many years ago Google Maps would routinely trigger failures. Using Maps would load many tile images, which could overwhelm a NAT or CGNAT. The result was a map with holes in it where some tiles failed to load.<p>Browsers have long had limits on concurrent connections per domain. Total concurrent connection limits are also old news, but are not quite as old as per-domain limits. You probably can&#x27;t make a NAT choke with just simple web requests (even AJAX) any more. You might be able to do it using, eg, WebRTC APIs, though I would be surprised if those aren&#x27;t also subject to limits.')