Item(by='gregmac', descendants=None, kids=None, score=None, time=1604619031, title=None, item_type='comment', url=None, parent=25001789, text='I recently rebuilt my home server from scratch, and after a bunch of research decided to run Proxmox [1] on it.<p>I considered Kubernetes but two things really held me back: I&#x27;ve never installed&#x2F;managed Kubernetes itself (and didn&#x27;t really want to learn with my &quot;production&quot; home network), and I wanted to be able to run things other than Docker containers such as a Windows VM. I&#x27;ve used stuff like VMware and VirtualBox before and Proxmox is closer to those, but without the overhead of everything being a full VM.<p>My old system was a &quot;The Server&quot; style setup as described here, running everything on a single Ubuntu bare metal machine (acting as a NAS, running Plex, Unifi, HomeAssistant, and a dozen other applications). It was getting old, had gone through some major OS upgrades and was about due for another. I used to do more &quot;experimental&quot; work on other old hardware I had laying around, but there&#x27;s so much overhead involved that it often killed my motivation to learn something new.<p>It&#x27;s only been a couple months but I&#x27;m quite happy with Proxmox so far. I run most stuff in LXC containers with Alpine, though have at least one Ubuntu (Unifi Controller) and have played with some VMs (qemu): Hass-io [2] (which is designed for the Pi) and Windows 10 (just to try it). I actually made my Windows 10 image into a template, so I can quickly stand up an instance to try something out on Windows without hassle of reinstalling or worrying about breaking an actual PC.<p>The LXC containers are very lightweight, and what I love is I can upgrade, experiment or swap out a service knowing I have good isolation from everything else -- just restore backup or revert to a snapshot. If I need to run the latest Debian Unstable to try some particular application out, I can do that without worry or having to setup another machine.<p>Even porting everything over was very smooth, since I didn&#x27;t have to worry about interaction between things or worry too much about permissions -- just install where it wants to go, whatever. (I used to try to keep my server setup in a consistent way, and it was often painful when some app had a different way of running or configuring itself or expected a different filesystem or user+group layout than I wanted). Now I just make symlinks in &#x2F;root of each container and&#x2F;or use Proxmox&#x27;s &quot;notes&quot; feature to remind my future self where config files or other important things are located, and that&#x27;s worked fine so far.<p>What I can&#x27;t attest to is what&#x27;s involved in running it long-term: for example I haven&#x27;t had to upgrade Proxmox itself, yet.<p>On the plus side, it&#x27;s removed an excuse preventing me from learning new things, and I donated&#x2F;recycled a big pile of old hardware I had sitting in the basement (&quot;just in case&quot; I wanted to experiment on something).<p>[1] <a href="https:&#x2F;&#x2F;www.proxmox.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.proxmox.com&#x2F;</a><p>[2] <a href="https:&#x2F;&#x2F;www.home-assistant.io&#x2F;hassio&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.home-assistant.io&#x2F;hassio&#x2F;</a>')