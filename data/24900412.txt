Item(by='prussian', descendants=None, kids=[24902010, 24903153], score=None, time=1603741379, title=None, item_type='comment', url=None, parent=24899933, text='I tend to agree. I am just finishing up a tool I&#x27;m using to automate a bunch of interactions I have with the 4 USB UARTs on my desk and I ended up going with expect. If I knew about pexpect I would have probably used that.<p>However, since I did use expect and spent some time learning Tcl, I actually did appreciate one useful thing about it. It&#x27;s very easy for me to in-line Tcl code into, say, a configuration, parse it with the help of `[info complete]`, attach it to a list and then expand that list `{*}$some_list` as an argument to `expect` or `interact`. I can now have UART specific macros that are bound to keystrokes like Ctrl-t x. Sure I could do something like that in python, but it probably wouldn&#x27;t be as clear-cut as:<p><pre><code>  # Fix terminal row&#x2F;col height for less, vi, etc\n  # type Ctrl-t r\n  bind[r] = {\n    # depends on xterm size info, may not be universal\n    send &quot;\\{ &quot;\n    send {old=$(stty -g);}\n    send {stty raw -echo min 0 time 5;}\n    send {printf &#x27;\\033[18t&#x27; &gt; &#x2F;dev&#x2F;tty;}\n    send {IFS=&#x27;;t&#x27; read -r _ rows cols _ &lt; &#x2F;dev&#x2F;tty;}\n    send {stty &quot;$old&quot;;}\n    send {stty cols &quot;$cols&quot; rows &quot;$rows&quot;;}\n    send {unset old cols rows;}\n    send {shopt -s checkwinsize;}\n    send {clear;}\n    send &quot; \\}\\r&quot;\n  }</code></pre>')