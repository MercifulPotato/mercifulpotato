Item(by='mehrdadn', descendants=None, kids=[25472806, 25480130, 25473433, 25472794, 25472800, 25472773, 25472801, 25472795], score=None, time=1608329847, title=None, item_type='comment', url=None, parent=25472455, text='I&#x27;m skimming this but so far I still don&#x27;t understand how any kind of authentication failure can or should lead to an SMTP server returning &quot;this address doesn&#x27;t exist&quot;. Does anyone see an explanation?<p>Edit 1: Oh wow I didn&#x27;t even realize there were multiple incidents. Thanks!<p>Edit 2 (after reading the Gmail post-mortem):\nAH! It was a messed up domain name! When this event happened, I said senders need to avoid taking &quot;invalid address&quot; at face value when they&#x27;ve recently succeeded delivering to the same addresses. But despite the RFC saying senders &quot;should not&quot; repeat requests (rather than &quot;must not&quot;), many people had a <i>lot</i> of resistance to this idea, and instead just blamed Google for messing up implementing the RFC. People seemed to think every other server was right to treat this as a permanent error.\nBut this post-mortem makes it crystal clear how that completely missed the point, and in fact wasn&#x27;t the case at all. The part of the service concluding &quot;address not found&quot; <i>was</i> working correctly! They <i>didn&#x27;t</i> mess up implementing the spec—they messed up their domain name in the configuration. Which is an operational error you just <i>can&#x27;t</i> assume will never happen—it&#x27;s <i>exactly</i> like the earlier analogy to someone opening the door to the mailman and not recognizing the name of a resident.\nA robust system (in this case the sender) needs to be able to recognize sudden anomalies—in this case, failure to deliver to an address that was accepting mail very recently—and retry things a bit later. You just can&#x27;t assume nobody will make mistake operational mistakes, even if you somehow assume the software is bug-free.')