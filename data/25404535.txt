Item(by='willghatch', descendants=None, kids=None, score=None, time=1607837562, title=None, item_type='comment', url=None, parent=25400254, text='Since everybody else is peddling their better shells, I&#x27;ll drop a plug for mine:  <a href="https:&#x2F;&#x2F;rash-lang.org" rel="nofollow">https:&#x2F;&#x2F;rash-lang.org</a><p>It&#x27;s a shell embedded in the Racket programming language.  If you&#x27;re familiar with Xonsh, it&#x27;s similar, but both more powerful and less polished.  It allows easy, recursive mixing of shell code (not posix compatible, but with a similar feel) and Racket.  Its interactive mode is not polished (I need to write a better line editor), but it works, and it&#x27;s great for programming.<p>I haven&#x27;t worked on it much lately (I need to wrap up other things to finish my PhD), but this weekend I added support for user-programmable substitutions with automatic cleanup.  As an example, beyond common substitutions like process substitution (IE &lt;() and &gt;() in bash), I added a demo “closure substitution” form that allows you to send Racket functions to `find -exec`.  Importantly, this is something that a user could add, because Rash is super extensible and malleable.<p>Shell is a great DSL, but there are huge advantages to having an embedded DSL rather than a stand-alone DSL.  Rash inherits all the cool features of Racket and can be mixed with other Racket languages (eg. Typed Racket, Honu, etc), has advanced features like first-class delimited continuations and the world&#x27;s most advanced macro system (which makes Rash possible), and any shell script can import functions from Racket&#x27;s catalog of third-party packages.  Embedded shells like Rash allow a shell script to be copied from interactions like you do with Bash, but then grow past the “rewrite in Python” stage gradually with no rewrite -- just a gradual transition from being more shell code to being more “normal” code.<p>Though I&#x27;m kicking myself for continually not getting around to rewriting all the documentation, which is still very poor.')