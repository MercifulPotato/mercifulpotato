Item(by='codethief', descendants=None, kids=None, score=None, time=1612038782, title=None, item_type='comment', url=None, parent=25968008, text='I don&#x27;t think this qualifies as literate programming, at least not in my book. Yes, it looks nice and everything but from my point of view OP just moved regular code comments to a side bar.<p>For instance, there are many comments that explain what values are stored in opaque-looking variables&#x2F;parameters. But these are simply necessary (especially in data science, where almost everything is a tensor) and should be part of every decently documented program, anyway, and don&#x27;t make this literate programming yet just because they&#x27;re now in a sidebar.<p>Besides, there are a lot of comments that 1) just repeat verbatim what the code does, e.g.<p><pre><code>    Run through each layer                   for layer in self.layers:\n\n  (https:&#x2F;&#x2F;nn.labml.ai&#x2F;gan&#x2F;cycle_gan.html)\n</code></pre>\nor that 2) explain what the code does because the code, at times, is unnecessarily hard to read and&#x2F;or little modularized (no offense, OP).<p>These types of comments, I&#x27;d say, belong to the sort of comments and documentation that can (and usually should) be avoided. They don&#x27;t tell me more about the code than what the code already tells me (or should&#x2F;could tell me) and thus are not what I would expect from literate programming, either.<p>There are a whole lot of other types of comments that I <i>would</i> expect from literate programming, though, and these are mostly missing. There was an excellent article[0] a few years back by Salvatore Sanfilippo aka antirez (of Redis fame) where he identified the following useful comment types:<p><pre><code>    - Function comments\n    - Design comments\n    - Why comments\n    - Teacher comments\n    - Checklist comments\n    - Guide comments\n</code></pre>\nNow, the OP&#x27;s code checks off one or two items on that list but only in parts and in a few places. Overall, looking at the many code snippets antirez&#x27;s article presents from the Redis code base, I find Redis&#x27;s style is much closer to my idea of literate programming than the OP&#x27;s code.<p>(Again, I hope OP is not taking offense to my comment. I am aware that they didn&#x27;t claim they were doing literate programming.)<p>[0]: <a href="https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20191224044125&#x2F;http:&#x2F;&#x2F;antirez.com&#x2F;news&#x2F;124" rel="nofollow">https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20191224044125&#x2F;http:&#x2F;&#x2F;antirez.co...</a><p>EDIT: When I wrote my comment, I hadn&#x27;t looked at <i>all</i> the pages&#x2F;files and simply assumed the others I hadn&#x27;t looked at would be similar. I&#x27;ve now noticed, though, that some of them do follow the literate programming style quite closely. Nice. :)')