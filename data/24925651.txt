Item(by='wahern', descendants=None, kids=None, score=None, time=1603930170, title=None, item_type='comment', url=None, parent=24923018, text='I don&#x27;t think so. The traditional, canonical regular expression[1] for parsing a URL is<p><pre><code>  ^(([^:&#x2F;?#]+):)?(&#x2F;&#x2F;([^&#x2F;?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n</code></pre>\nSee <a href="https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;rfc3986#appendix-B" rel="nofollow">https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;rfc3986#appendix-B</a><p>The authority section (which contains the host domain) must begin with &quot;&#x2F;&#x2F;&quot; whether there&#x27;s a scheme prefix or not. Otherwise it&#x27;s just part of the path (or query or fragment). IIRC, these semantics are also fixed by HTML such that any attribute like HREF or SRC is parsed as-if using the canonical regex (but after entity substitution and whitespace trimming). Browsers might have implemented this differently many years ago, but I doubt it as it would conflict with being able to use a bare path atom (e.g. foo.html).<p>[1] I normally eschew using regular expressions for proper parsing, but for URLs the canonical expression is both adequate and advisable for correctness.')