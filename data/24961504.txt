Item(by='brandmeyer', descendants=None, kids=None, score=None, time=1604256424, title=None, item_type='comment', url=None, parent=24960973, text='Its a tough situation to be in, especially when RISC orthodoxy elevates measurements to a paramount position in the ISA design process.  I don&#x27;t think they were wrong to do so, either.  The error was in finalizing the ISA without more backends to work with.<p>How much business code out there burns most of its cycles in Java&#x2F;C#&#x2F;Rust&#x2F;Go?  Having even one of those (lets face it: Java) would have gone a very long way.  How much client computing spends most of its cycles in (JITted) javascript?<p>I understand the tradeoff that drives this omission, though.  How many VC megabucks (Tens?  Hundreds?) would they have had to spend commercially on a bet?  Alternatively, how many grad student-years grinding through low payoff work to prove yea&#x2F;nea on the value of checked arithmetic?<p>Lets say that you make a hip-shot bet on some checked arithmetic support without the supporting toolchains and application code to back up the design choice.  You could end up making a different set of mistakes instead and end up in the same situation.<p>I think the only mistake was in finalizing the ISA without any support for checked arithmetic.  My belief is that doing it well will not be orthogonal to the rest of the ISA&#x27;s design, and therefore is a poor candidate for an extension.')