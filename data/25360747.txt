Item(by='folkhack', descendants=None, kids=[25361007, 25361430, 25360985], score=None, time=1607533211, title=None, item_type='comment', url=None, parent=25360557, text='When I was working in a stack like this I found people spending outstanding amounts of time not actually working to improve the stability&#x2F;performance of the application. The reason you triggered that memory was &quot;GKE, Prometheus, Sysdig, Grafana, ELK&quot; - that&#x27;s exactly what we were dealing with. The support infrastructure&#x2F;compute needs for it far exceeded the 20-30 hosts that actually needed to be there to operate the application.<p>We either were using someone else&#x27;s prebuilt orchestration for something like ELK (insecure, needs constant auditing to be OK) or rolling it ourselves (very expensive in engineer time). None of it was ever working 100% and that was because we were jumping at software packages no one had really taken the time to fully understand. The mentality was &quot;it&#x27;s containerized!&quot; which many on my team took to mean &quot;we don&#x27;t need to really grok it, it&#x27;s in a container!&quot; That burnt us, both on our TIG and ELK stacks. I left that job because it became putting out dumb fires that were not business-justifiable.<p>All-in-all I&#x27;m not saying what anyone is doing is wrong, I&#x27;m just saying that if you&#x27;re going for an orchestrated environment like this you have to have a very mature team. You have to really care about learning these services well, and you have to be careful to not let your own architecture take your time away from solving real problems for the business.<p>The team I was on did not have that maturity outside of a couple bitter&#x2F;broken ops guys who didn&#x27;t deserve what the team had done to them while buzz-word driven leadership gutted their very-proven and stable VMWare infra into a total cluster-f K8s setup because &quot;that&#x27;s what we&#x27;re suppose to do in 2018! That&#x27;s what the new engineers want to work in!&quot;<p>&gt; the &quot;operating system&quot; has moved up a stack<p>Splitting hairs: The OS is still the same. The &quot;stack&quot; is newly imposed abstraction on-top of already established paradigms where we are trying to abstract ourselves <i>away</i> from the OS. It&#x27;s distributed compute more than it is the &quot;OS moving up a stack&quot;.<p>Edit: Ha I think you may have edited your comment with the Coinbase article. That article is actually what I point people to when explaining that K8s isn&#x27;t some golden bullet, I personally think Coinbase is a great compromise in leveraging containers without going off of the rails (as they write about, ex: talking about the need for dedicated &quot;compute&quot; teams etc).')