Item(by='paultopia', descendants=None, kids=[25397517, 25380245, 25375871, 25376836], score=None, time=1607620068, title=None, item_type='comment', url=None, parent=25375513, text='Maybe a broader version of this point: clojure tries to be something suited both for industry use at scale and for hobbyists wanting to do freaky-deaky stuff at the same time, but those are fundamentally incompatible.<p>I say this as someone squarely in the latter category who has exactly the opposite problem from you: I love clojure the language and its features, but all the major libraries seem to be written by refugees from Java working at big companies who have a will to massively overengineer everything.<p>I&#x27;m thinking of libraries like mount and such which everyone uses for everything, and which I experience as, like, &quot;did you want to inject your dependencies in your injected dependencies?  Well first you have to do a quadruple axel inversion of control at the fifth abstraction layer out and use the fooflarb design pattern to delegate your inheritance and you thought you could even <i>find</i> the place in the code where it talks to the database?  Good luck, sucker.&quot;  Like, I always thought the point of a functional language was to not have to do any of that stuff...<p>Like, I vividly remember the first time I used a clojure web framework that brought in all that stuff, and I literally, I&#x27;m serious here, could not find where in the code it was actually talking to the database.  Just indirection on top of indirection on top of indirection.  And when the application I was building on top of that, which was supposed to be quick and dirty, started mysteriously losing data, the only thing I could do was just tear it down and rewrite with Python and flask.')