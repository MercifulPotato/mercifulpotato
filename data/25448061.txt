Item(by='badsectoracula', descendants=None, kids=[25448208], score=None, time=1608150201, title=None, item_type='comment', url=None, parent=25447486, text='&gt; The GTK developers do care about backwards compatibility, as evidenced by their continued maintenance of GTK3.<p>That sort of &quot;backwards compatibility&quot; is useless in the long run and a big source of waste of time for the developers who rely on their library - see XFCE or even Gimp as examples of projects wasting tons of time just to do the same stuff just with a different API.<p>In addition it isn&#x27;t what the thread is about which should have been obvious from the Win32 as an example. When you use Win32 you get the latest fixes and features even in applications that haven&#x27;t been updated for two decades - for example you get new common dialogs and access to shell extensions (e.g. TortoiseSvn&#x2F;Git integration) that didn&#x27;t exist back when those applications were made.<p>Backwards compatibility isn&#x27;t just about keeping the old stuff running as they were back when they were released - that is just the absolute minimum. It is also about adding new features and fixing bugs that all applications - both old and new - can benefit whenever possible.<p>&gt; Jumping to pure Xlib or Motif is a bit beside the point, to that end you might as well use GTK1 or GTK2 if you don&#x27;t mind using an old stable API that is not really being updated anymore.<p>Xlib and Motif are not equivalent to GTK1 and GTK2 since they do receive updates and bugfixes, even if they rarely receive new features (though both do receive new features too).')