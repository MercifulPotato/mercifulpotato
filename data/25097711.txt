Item(by='user5994461', descendants=None, kids=[25097830, 25097932, 25099309], score=None, time=1605407662, title=None, item_type='comment', url=None, parent=25094956, text='I&#x27;m surprised from this checklist because this checked almost none of what I would be looking for in a as a professional embedded developer.<p>What I would like to see:<p>How easy to push the software from the computer to the microcontroller? Preferably you should be able to push the firmware over USB or something like that in a few seconds. Don&#x27;t mind whether that&#x27;s a command line tool or a button in the IDE but there has to be something and it MUST work.<p>Is the tool friendly to source control? I had very bad experiences with embedded tools automatically creating hundreds of files all over the project and editing them on every build, causing a massive headache to store the project in source control. Note that software developers expect their development tools to support source control natively but I have no illusion of that happening in embedded IDE.<p>How easy to make a simple software and how is the documentation? For reference the basic in EE is to blink a LED, the microcontroller should provide API with documentation and examples to do that (and much more). It&#x27;s shocking how many MCU have zero doc and the little there is doesn&#x27;t work.<p>Personal note: It&#x27;s funny the author wants to compile a hello world because that&#x27;s not a thing in embedded, there&#x27;s no screen on a microcontroller so printf(&quot;hello world&quot;) does nothing.<p>Last. I&#x27;d like to know about debug capabilities? Can you connect the computer to the MCU and debug directly on the device? Ideally there should be a full debugger including breakpoint support and step by step execution and displaying all local variables. The debugger should also be able to show debug output from the microcontroller (output from printf or equivalent).')