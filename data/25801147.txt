Item(by='drran', descendants=None, kids=[25805197], score=None, time=1610788965, title=None, item_type='comment', url=None, parent=25800277, text='I use Java since first beta. These getters and setters are always looking awkward for me, unless they are part of a library API, so they are useful for providing backward compatibility, or they are lazy objects, or they are defined in an interface. In my own code, I avoid using them in POJO.<p>For example, I prefer<p><pre><code>  public class LineOptions {\n    public Color color = Color.BLACK;\n    public int thickness = 1;\n    ...\n  }\n\n  void drawLine(int sx, int sy, int tx, int ty, LineOptions options) { ... }\n\n  ctx.drawLine(0,0, 100, 100, new LineOptions() {{ color=Color.RED; thickness=3; }});\n</code></pre>\nIMHO, it is much simpler and easier than classic POJO + Builder patterns.<p><pre><code>  public class LineOptions {\n    private Color color = Color.BLACK;\n    private int thickness = 1;\n    ...\n    public LineOptions() { }\n    public LineOptions(Color color, int thickness, ...) {\n      this.color = color;\n      this.thickness = thickness;\n      ...\n    }\n    public Color getColor() { return this.color; }\n    public LineOptions setColor(Color color) { this.color = color; return this; }\n    public Color getThickness() { return this.thickness; }\n    public LineOptions setThickness(int thickness) { this.thickness = thickness; return this; }\n    ...\n  }\n  \n  ctx.drawLine(0,0, 100, 100, new LineOptions().setColor(Color.RED).setThickness(3));\n</code></pre>\nor even more classic<p><pre><code>  LineOptions opts = new LineOptions();\n  opts.setColor(Color.RED);\n  opts.setThickness(3);    \n  ctx.drawLine(0,0, 100, 100, opts);</code></pre>')