Item(by='rgovostes', descendants=None, kids=[25552203], score=None, time=1609086399, title=None, item_type='comment', url=None, parent=25550280, text='You could take this idea further by fully parsing queries according to the grammar of the SQL language, rather than using simple pattern matching.<p>In fact it is a result of theoretical computer science that you _cannot_ correctly parse languages like SQL, HTML, Python, etc. with regular expressions: Any attempt to do anything non-trivial will have cases where it misunderstands the code.<p>So you would want to find a SQL grammar (an outdated example in [1]) and a module[2] that can use this to parse queries into a data structure to which you can apply transformations (e.g., changing case of keyword tokens) and then write back out as a string.<p>SQLite&#x27;s documentation has some nice diagrams[3] to get an idea for how it parses a query string. The table of links at the top lets you dive into, e.g., all the optional parts of a SELECT statement.<p>1: <a href="https:&#x2F;&#x2F;ronsavage.github.io&#x2F;SQL&#x2F;sql-92.bnf.html" rel="nofollow">https:&#x2F;&#x2F;ronsavage.github.io&#x2F;SQL&#x2F;sql-92.bnf.html</a><p>2: <a href="https:&#x2F;&#x2F;tomassetti.me&#x2F;parsing-in-python&#x2F;" rel="nofollow">https:&#x2F;&#x2F;tomassetti.me&#x2F;parsing-in-python&#x2F;</a><p>3: <a href="https:&#x2F;&#x2F;sqlite.org&#x2F;lang.html" rel="nofollow">https:&#x2F;&#x2F;sqlite.org&#x2F;lang.html</a>')