Item(by='erichanson', descendants=None, kids=None, score=None, time=1609557531, title=None, item_type='comment', url=None, parent=25609613, text='Yeah I think it takes a special mind to use <i>today&#x27;s</i> dev environment, but the distance from where we are today, to an interrogative system creator (which is a pretty cool idea btw) is eons; there has to be something more in the middle.<p>I think it&#x27;s always going to take someone with a systems-thinking mind to engineer a system that&#x27;s any good, but lots of people have that, people who created their own business and thought through all the steps in their system and engineered the whole thing in their head.  That&#x27;s systems engineering, just not with code.  But there&#x27;s <i>so</i> much knowledge that&#x27;s required to go from zero to custom software deployment that I&#x27;d characterize as non-essential complexity, today.<p>Yeah I think programmers tend to make tools for programmers, for themselves and the way they think, which is totally natural and to be expected.  But man these poor users.<p>It&#x27;s not so bad when they&#x27;re using mainstream programs with millions of dollars in dev budgets behind them, but when you get further down the long-tail it just gets so awful and users are so helpless.  The software an insurance agent uses, the charting app a therapist uses, the in-house warehouse management system people spend their entire day using, where if they could just make this field auto-focus or a million tiny other things, they would save so much time and frustration.<p>Generally speaking, users edit data and programmers edit schema, and never the two shall cross.  Users execute code but only programmers change it.  What hope do we have of democratizing programming when these roles are about as foundational to computers as it gets?  What would we have to unlearn to change this?')