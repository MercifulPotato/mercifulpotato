Item(by='pfedak', descendants=None, kids=None, score=None, time=1602978728, title=None, item_type='comment', url=None, parent=24813921, text='The main shader:<p>uniform vec3 mouse;\nuniform vec2 resolution;\nuniform sampler2D texture;<p>vec3 computeNormal( vec4 n ) {<p><pre><code>  &#x2F;&#x2F; pixel scale\n  vec2 un = 1.0 &#x2F; resolution;\n  vec2 uv = gl_FragCoord.xy &#x2F; resolution;\n\n  &#x2F;&#x2F; tex sample neighbour-4;\n  vec3 n_r = texture2D( texture, uv + vec2( 1., 0. ) * un ).xyz;\n  vec3 n_l = texture2D( texture, uv - vec2( 1., 0. ) * un ).xyz;\n  vec3 n_u = texture2D( texture, uv + vec2( 0., 1. ) * un ).xyz;\n  vec3 n_d = texture2D( texture, uv - vec2( 0., 1. ) * un ).xyz;\n\n  &#x2F;&#x2F; partial differences n-4;\n  vec4 dn = vec4( n.z );\n  dn -= vec4( n_r.z, n_l.z, n_u.z, n_d.z );\n\n  &#x2F;&#x2F; right - left, up - down;\n  vec2 xy = vec2( dn.x - dn.y, dn.z - dn.w );\n  xy += n_r.xy + n_l.xy + n_u.xy + n_d.xy;\n  xy *= 0.89;\n\n  float z = length(xy) * 0.1;\n\n  return vec3( xy, z ) * 0.25;\n</code></pre>\n}<p>void main() {<p><pre><code>  vec2 uv = gl_FragCoord.xy &#x2F; resolution;\n\n  &#x2F;&#x2F; normal sampling\n  vec4 height = texture2D( texture, uv );\n\n  float vel = height.a; &#x2F;&#x2F; previous velocity\n  float elasticity = 0.002;\n  float viscosity = 0.06;\n  vel += - (height.z - 0.01) * elasticity - vel * viscosity;\n\n  &#x2F;&#x2F; compute normal advection\n  vec3 normal = computeNormal( height );\n  normal.z += height.z + vel;\n\n  float dist = distance( mouse.xy,  gl_FragCoord.xy);\n  float mouseRadius = 10.0;\n  float peak = 1.9; &#x2F;&#x2F; max-height\n  \n  if ( dist &lt;= mouseRadius ) {\n    float dst = ( mouseRadius - dist ) &#x2F; mouseRadius;\n    normal.z += pow( abs(dst), 1.9 ) * peak * 2.5;\n    normal.xy -= normal.xy * pow( abs(dst), 1.9 ) * 0.1;\n    normal.z = min( peak, normal.z );\n  }\n\n  gl_FragColor = clamp( vec4( normal, vel ), -1.0, 1.0);\n\n}</code></pre>')