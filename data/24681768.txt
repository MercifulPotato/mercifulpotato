Item(by='nn3', descendants=None, kids=None, score=None, time=1601840978, title=None, item_type='comment', url=None, parent=24670936, text='It is somewhat striking how high level the 360 assembler is. It&#x27;s not that difficult to read the code snippet below.<p>So there are assembler instructions (not macros I believe) that are equivalent to &quot;strcmp&quot;, &quot;strcpy&quot;. Well I guess they&#x27;re more sub routine calls for micro code.<p>Equivalent C code probably wouldn&#x27;t be that much shorter, while modern assembler languages would expand to much more and harder to read code. Even x86 which has strcmp&#x2F;strcpy instructions requires much more boilerplate, and also they&#x27;re generally not used anymore because they&#x27;re too slow.<p>Now of course with all the gotos (jumps) it is still quite spaghetti code. But if the assembler had some structured programming features (and maybe types) it probably wouldn&#x27;t be that bad.<p>Of course it helps that everything was much simpler then.<p>(sorry for the screwy formatting)<p>SEARCH   LA    R9,LENGTH      LIMIT FOR BXLE<p><pre><code>         LA    R8,12          INCREMENT FOR BXLE                      \n  \n         LA    R1,SMLIST      POINT TO STATE PLIST  \n                    \n         MVC   8(8,R1),8(R7)  MOVE IN FILENAME  \n                        \n         MVI   24(R1),C&#x27;P&#x27;    SEARCH PERMANENT DISK FIRST \n              </code></pre>\nLOOP2    LA    R2,TYPES       SET BXLE INDEX AT 1ST FILETYPE<p>LOOP     MVC   16(8,R1),0(R2) CHECK FOR VARIOUS FILE TYPES<p><pre><code>         SVC   X&#x27;CA&#x27;          CALL STATE\n\n         DC    AL4(ERH)       GO CHECK R15 ERROR CODES\n                 \n         BC    15,8(0,R2)     RETURN CODE WAS 0.  FILE FOUND, SO BRANCHERH\n         C     R15,AONE       WAS RETURNED ERROR CODE A 1?\n\n         BE    BIX            IF SO, FILE NOT FOUND. TRY AG\n\n         LA    R9,4           STATE ERROR CODE OF 4                   \n \n         BC    15,CLOSUP</code></pre>')