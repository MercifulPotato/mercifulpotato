Item(by='mikepurvis', descendants=None, kids=[25549388], score=None, time=1609041082, title=None, item_type='comment', url=None, parent=25547499, text='I&#x27;ve examined this a number of times over the years for deploying a ROS (Robot Operating System) workspace to robots and laptops. Some of our competitors use snaps or various container technologies for this, but I&#x27;ve always felt that the isolation&#x2F;sandboxing would be more of a barrier than a helpâ€” it&#x27;s one more layer of udev rules and other indirection to have to punch through with another set of config files (and to no benefit as we&#x27;re not trying to run multiple independent &quot;apps&quot; or anything).<p>So currently at my org we use basically the same scheme I advocated for at a developer conference in 2016 [1]: we just build it all into a gigantic bundled debian package, and deploy that to the host system with apt.<p>I keep revisiting these various technologies and all of them seem less mature than apt&#x2F;dpkg, and mostly in service of features and capabilities which don&#x27;t apply to my particular needs. Obviously I&#x27;m a bit of a niche case, and my needs aren&#x27;t everyone&#x27;s, but of all of them, nix is the one that seems to be doing the most that is truly interesting and different; being able to send a new nightly build out to users with requiring them to re-downloading an entirely new asset would be a major win.<p>[1]: <a href="https:&#x2F;&#x2F;vimeo.com&#x2F;187705228" rel="nofollow">https:&#x2F;&#x2F;vimeo.com&#x2F;187705228</a>')