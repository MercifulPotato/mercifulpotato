Item(by='ddragon', descendants=None, kids=None, score=None, time=1603287016, title=None, item_type='comment', url=None, parent=24846989, text='The power of Lisp but without parentheses so Lispers can have something to complain.<p>But seriously, for me is something similar to Python vs Ruby (I used to prefer programming in Ruby before Python became the default ML language and made so I pretty much had to change). Like Ruby, Julia is a language that I can adapt to the problem instead of having to adapt the problem to the language. In Python there is only one obvious way of doing it (at the higher level) no matter what the problem is, usually some hard to read chain of pandas transformation followed by not much better numpy&#x2F;jax or pytorch method. In Julia I feel less restricted, and if a problem is clean using loops and arrays I do with loops and arrays, if it&#x27;s clean with vectorization I do that with broadcasting, if someone enabled some macro that looks almost like a description of the problem I can use that as well.<p>And the result ends up not being what people fear that having many ways to do something means the programmer will abuse it and write unreadable code golf, but having a more natural approach to each problem makes it easier for me to read after it&#x27;s done, it&#x27;s not language A twisted in language B (like those pandas operations), but something that is close to a direct representation of language A that I don&#x27;t need to convert mentally or even with a dictionary.')