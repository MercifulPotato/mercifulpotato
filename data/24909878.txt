Item(by='chrismorgan', descendants=None, kids=[24910775, 24910723], score=None, time=1603820715, title=None, item_type='comment', url=None, parent=24909477, text='&gt; <i>- if your paths have white space in them</i><p>This is probably my second biggest complaint about Make.<p>&gt; <i>- if you change your Makefile, nothing will be rebuilt</i><p>Heh, there’s a common trick for that: just slap Makefile on the end of prerequisite lists. I’ve worked with more complex projects that extend this to versioning the makefile with a `build&#x2F;.makefile-v${MAKEFILE_VERSION}` common prerequisite so that you can bump the version if the change is such that you’ll need to rebuild everything.<p>&gt; <i>- if inkscape writes out a partial file because full disk and you fix the problem, the partial svg will no be rebuilt</i><p>Or the more common form, you run a fallible program and it produces errors but still produced a file (e.g. if you used piping, `&gt; $@` instead of a `--output=$@` command line argument that only creates the file after processing has succeeded).<p>I think “build errored but produced a file” is probably my biggest complaint about Make. You can work around it in a few ways; `|| (touch --date=@0 $@; false)` is probably my favourite, which I used in <a href="https:&#x2F;&#x2F;chrismorgan.info&#x2F;blog&#x2F;make-and-git-diff-test-harness&#x2F;" rel="nofollow">https:&#x2F;&#x2F;chrismorgan.info&#x2F;blog&#x2F;make-and-git-diff-test-harness...</a>.<p>&gt; <i>- if you install a new version of inkscape nothing will be rebuilt</i><p>I’m curious: would Ninja rebuild on a new version of Inkscape? I’d be pleasantly surprised and view it much more favourably if it does.<p>In the scope of Make, prerequisite satisfaction is all reckoned with timestamps, which is a thing I’m not always fond of, so you definitely can’t do this properly. I think the closest you could get is generating a file containing the versions of all your prerequisites, and arrange for it to only be updated when they’ve changed. Basically a slight variant of the MAKEFILE_VERSION trick discussed earlier, though definitely much more involved, especially if you want it to have one filename always rather than just being a hash of all the versions.<p>And yes, all this is supporting your point that Make is not the best thing in this space, which I quite agree with. But for simple things I reckon it’s often still worth using despite this.')