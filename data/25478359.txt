Item(by='randomhacker123', descendants=None, kids=[25479952, 25480550], score=None, time=1608394767, title=None, item_type='comment', url=None, parent=25477069, text='Checking if a code is secure by counting the usage of memcpy is pretty stupid, but very easy, so it is done by checklist experts to check for security.\nmemcpy_s is not supported by glibc and most other libc implementations for Linux, I do not expect this to change in the future. Here is a good analyses of this optional extension to the C standard from a glibc developer: \n<a href="http:&#x2F;&#x2F;www.open-std.org&#x2F;jtc1&#x2F;sc22&#x2F;wg14&#x2F;www&#x2F;docs&#x2F;n1969.htm" rel="nofollow">http:&#x2F;&#x2F;www.open-std.org&#x2F;jtc1&#x2F;sc22&#x2F;wg14&#x2F;www&#x2F;docs&#x2F;n1969.htm</a>\nAll standard Linux tools use the &quot;unsafe&quot; functions from the libc.\nYou should not use gets(), there are better alternatives in your libc. ;-)<p>You can link one of these libraries against your code on Linux to get the Safe C functions:\n<a href="https:&#x2F;&#x2F;github.com&#x2F;rurban&#x2F;safeclib" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;rurban&#x2F;safeclib</a>\n<a href="https:&#x2F;&#x2F;sourceforge.net&#x2F;p&#x2F;safeclib&#x2F;code&#x2F;ci&#x2F;master&#x2F;tree&#x2F;" rel="nofollow">https:&#x2F;&#x2F;sourceforge.net&#x2F;p&#x2F;safeclib&#x2F;code&#x2F;ci&#x2F;master&#x2F;tree&#x2F;</a><p>Changing an existing code base from the normal glibc C functions like memcpy to memcpy_s is not easy, you do it wrong in 10% or more if you are not the original author of this code or do not have very long experience with it. Even when you are an expert a lot of problems are getting introduced, this is from my own experience. This is not a search and replace task for a junior!<p>Having one team developing something and then an other team making it secure is not working from my point of view. You should teach all your developers what they have to look for and <i>why</i>. I think it is important to not only says, X, Y, Z, is banned, but also why exactly and how to solve the use case X, Y, Z were used for.<p>A lot of the security work is not to improve the security, but for compliance to some guidelines internally or externally. The compliance is checked with some tools, like checking if &quot;grep memcpy(&quot; finds a result. Then the engineer or his manager will use the cheapest solution to solve this like Huawei did here.<p>To improve the real security you need some experts looking with the original developer into the real code. These experts do need more experience than just good PPT and Excel skills, but they need some knowledge in such software, probably different people for an embedded controller than a node.js application.')