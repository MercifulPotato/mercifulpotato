Item(by='Silhouette', descendants=None, kids=[25315412], score=None, time=1607183330, title=None, item_type='comment', url=None, parent=25315121, text='<i>But at the same time, there is no alternative that ticks all the boxes C++ does (performance, portability, maturity and stability).</i><p>As you identified yourself, that&#x27;s not entirely true, because C offers all of those things. But the really tragic thing about the status quo is that because there is so much sunk effort behind the C and C++ ecosystem, the resulting momentum makes it difficult for new languages that are simply better to gain traction.<p>In a way, C++ is the ultimate demonstration of how important the surrounding tool, library and developer ecosystem is to the success (== usefulness in practice) of a programming language. If the language itself were the dominant factor, the writing would have been on the wall when almost every language at a higher level than C was adding features like first class functions and C++ was trying to do something vaguely similar with overcomplicated binder templates.<p>A language with nicer syntax for working with higher-order functions, Haskell say, might have used<p><pre><code>    xs = [1, 2, 3, 4, 5]\n    n = count_if (&lt;3) xs\n</code></pre>\nBut for many years in C++, the closest theoretical equivalent would have been to write something like<p><pre><code>    xs = &#x2F;&#x2F; some standard container type, tediously constructed\n    n = count_if(xs.begin(), xs.end(), bind2nd(less&lt;int&gt;(), 3))\n</code></pre>\ninstead. Obviously hardly any real programmers ever did that, and it&#x27;s true that modern C++ is better in several relevant ways, but it&#x27;s been literally decades and it still hasn&#x27;t entirely caught up.<p>Meanwhile, several much more promising languages are struggling to break into the kinds of markets they deserve to because they haven&#x27;t achieved a critical mass of support. And the world continues to suffer the loss of productivity and problems with security and reliability that come from using a language like C++ for things that do actually matter. It&#x27;s an understandable situation, but still a regrettable one.')