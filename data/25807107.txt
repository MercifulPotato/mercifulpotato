Item(by='amluto', descendants=None, kids=None, score=None, time=1610845404, title=None, item_type='comment', url=None, parent=25806943, text='As someone who helps write an operating system, some areas of kernel code can be less subject to the usual C memory safety issues than most user code. This isn’t because kernel programmers are special, but because the kind of code that gets written is different. I rarely find myself allocating memory at all in kernel code, and if I don’t allocate memory, I’m less likely to overrun a buffer.<p>In other areas of kernel code, buffers common, but the data is completely opaque. You won’t find kernel code parsing a buffer written to a filesystem because there is nothing to parse.  The buffer is literally just a pointer and a length.<p>That being said, I would <i>love</i> something like Rust for lifetime management and thread safety and for the occasional data structure.<p>(Large sections of Linux are indeed quite scary from a memory safety perspective.  Anything related to &#x2F;proc or &#x2F;sys comes to mind.)')