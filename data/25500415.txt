Item(by='dfabulich', descendants=None, kids=None, score=None, time=1608589704, title=None, item_type='comment', url=None, parent=25499145, text='The Server Components FAQ has been updated. It now says:<p>&gt; <i>Why not use async&#x2F;await?</i><p>&gt; <i>The React IO libraries used in the demo and RFC follow the conventions we&#x27;ve discussed previously for writing Suspense-compatible data-fetching APIs. Suspense-compatible APIs return data synchronously when it is already available, throw if there is an error, or &quot;suspend&quot; to indicate to React that they are unable to return a value. The mechanism for Suspending is to throw a Promise value. React uses resolution of the promise to know when the API may be ready to provide a value (or that it has failed) and to schedule an attempt to render the component again.</i><p>&gt; <i>One new consideration in the design of Suspense from this proposal is that we would like to use a consistent API for accessing data across Server Components, Client Components, and Shared Components. Overall, though, the design of Suspense is outside the scope of this RFC. We agree that we should document this design clearly and will prioritize doing so in the new year.</i><p>Thanks for incorporating this; let&#x27;s see how the design doc plays out next year.')