Item(by='Geminidog', descendants=None, kids=[25557088, 25556830], score=None, time=1609124779, title=None, item_type='comment', url=None, parent=25555855, text='&gt;At a deeper level, I think you&#x27;re making a lot of assumptions that don&#x27;t seem rooted in reality. Worse still, you don&#x27;t seem to feel any need to root them in reality -- you minimize and diminish uncomfortably sharp edges in a very whiggish kind of historiography. Why is that?<p>What the hell is whiggish historiography? You want me to to come up with some textbook historical account of how software design has moved in circles? I assume it&#x27;s obvious and it&#x27;s just generally hard to write about a trend that defies exact categorization. It probably can be done, I just can&#x27;t spare the effort.<p>As for your other stuff I respectfully request that you keep this argument formal rather then comment on my personal character. Nobody appreciates another person speaking about their personal character in a negative and demeaning way. You are doing exactly this and there&#x27;s really no point or need unless your goal is set me off personally and have this argument degrade into something where we both talk about each other personally.<p>&gt;What if you&#x27;re merely conflating cause and effect, and software architecture has not been formalized because it is not well understood? Then formalization is merely a memento of something else -- something far more primal, something far more deeper. And I think (though only you can say) that you might be afraid of that.<p>If it&#x27;s a paradox then your reasoning could have existing evidence. Are there any attempts at formalizing software organization in academia? Have those attempts been ignored or have they actually failed?<p>Either way, in the industry, it&#x27;s pretty clear to me that a lot of energy is spent discussing, debating and coming up with design analogies year after year. In my opinion this is actually a misguided attempt at optimization. People think the latest software design analogy or architecture pattern is going to save the world but it&#x27;s always just a step to the side rather then forward and that&#x27;s because most people in the industry don&#x27;t even know what it means to truly &quot;step forward.&quot;<p>&gt; What if you&#x27;re taking it for granted that architecture will &#x2F;ever&#x2F; reach the level of formalization as the hard sciences?<p>Well I&#x27;m obviously betting that it can. Either way there&#x27;s no denying that given a formal definition of a problem, several or a single best optimum solution does exist. In other words There must exist a configuration of assembly instructions that fits a general definition of best solution to a problem. Whether a formal method other than brute force can help us find or identify this solution remains to be seen, but the existence of a best solution is enough for me to &quot;predict&quot; that a formal method for finding this thing exists.<p>&gt;It is the observations, the data accumulated in enough curious detail, kept preserved through painstaking work via the investigator and archiver, which provide material for abstraction to compact into greater expression: succinctness, clarity, and semantic power. But without that raw material, the abstraction is nothing but window dressing. It is onanistic and serves no formal purpose.<p>You&#x27;re conflating science and logic. Science is about observing reality and coming to conclusions based off of observations and the assumption that logic and probability are real. It involves a lot of statistics.<p>Logic is just a game with rules. We create some axioms and some formal rules and play a game where we come up with theorems. The game exists apart from reality. We build computers on the assumption that logic applies to reality. But more importantly we use computers on this assumption as well.<p>Thus the computer is in fact a tool designed to facilitate this logic game. The computer is in itself a simulator of a simple game involving formal rules with assembly language terms as the axioms.<p>That&#x27;s why formality applies to software and we can disregard science for a good portion of computing.<p>Scientism has nothing to do with this. You are at an extreme point of misunderstanding here.<p>&gt;Bertrand Russell tried to axiomatize mathematics into logic, and completely failed. And not because he was unintelligent. He failed because the opposite premise was vindicated by reality.<p>No he failed because he assumed that logical systems must be consistent and complete. But others have succeeded in saying that logical systems can exist within our logical games, so long as they do not hold the above two properties of consistency and completeness at the same time.<p>Also the logical premise you are speaking of was not vindicated by reality (aka scientific observations). It was vindicated by additional formal logical analysis by another logician. Reality and logic are two separate things. The main connection in those two areas is that science assumes logic and probability are part of reality. Outside of that assumption the two have zero relation.')