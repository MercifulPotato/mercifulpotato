Item(by='wffurr', descendants=None, kids=None, score=None, time=1603722191, title=None, item_type='comment', url=None, parent=24892768, text='Unfortunately, this feature is (still) stuck behind an origin trial and requires serving three different WebAssembly binaries to get correct fallback behavior across different browsers.<p>Feature detection for WebAssembly[0] is stuck in spec discussions, and SIMD general availability is blocked on either that or its own mechanism for backwards compatibility[1].<p>The issue is that a WebAssembly binary that contains instructions unknown to the engine (e.g. SIMD instructions not supported by a particular engine) won&#x27;t validate, even if the functions aren&#x27;t used at runtime.  The only way to work around this is to compile your binary NxMx... times and detect which feature set is supported before loading a binary.  It&#x27;s a real pain in the tail when trying to support new WebAssembly features.<p>e.g. check out this snippet from canvas.apps.chrome which supports WebAssembly threads on Chrome with a non-thread fallback for e.g. mobile &#x2F; Firefox:<p><pre><code>        var X;\n        try {\n            X = (new WebAssembly.Memory({\n                initial: 1,\n                maximum: 1,\n                shared: !0\n            })).buffer instanceof SharedArrayBuffer ? !0 : !1\n        } catch (a) {\n            X = !1\n        }\n        var ua = r(X ? [&quot;js&#x2F;threads&#x2F;ink.js&quot;, &quot;defines_threads.js&quot;] : [&quot;js&#x2F;nothreads&#x2F;ink.js&quot;, &quot;defines.js&quot;])\n          , va = ua.next().value\n          , wa = ua.next().value;\n</code></pre>\n[0]: <a href="https:&#x2F;&#x2F;github.com&#x2F;WebAssembly&#x2F;conditional-sections" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;WebAssembly&#x2F;conditional-sections</a>  \n[1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;WebAssembly&#x2F;simd&#x2F;issues&#x2F;356" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;WebAssembly&#x2F;simd&#x2F;issues&#x2F;356</a>')