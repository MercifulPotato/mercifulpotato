Item(by='bruschee', descendants=None, kids=None, score=None, time=1606470920, title=None, item_type='comment', url=None, parent=25227109, text='Hi, I&#x27;ve created Humlix (<a href="https:&#x2F;&#x2F;www.humlix.com" rel="nofollow">https:&#x2F;&#x2F;www.humlix.com</a>) that will help generate tests for your REST APIs.\nToday REST clients offer the possibility to set up a test suite and write code that executes some tests, or they allow you to call an endpoint with some data and look at the result.\nHumlix automatically generates tests based on example data. That allowed me to discover bugs in GitLab CE (see <a href="https:&#x2F;&#x2F;blog.humlix.com&#x2F;how-to-create-1040-tests-targeting-gitlab-in-5-minutes-with-humlix&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.humlix.com&#x2F;how-to-create-1040-tests-targeting-g...</a>).<p>Humlix is using Property-Based Testing and treats a status code of 5XX as an error. When it finds a problem, it tries to reduce the scope and figure out what data caused it.\nFor this to work, the test setup would need to be re-created between test runs to get the best results. E.g., by re-starting a Docker-container.<p>Tech stack:\nI built the core parts of Humlix using Clojure and ClojureScript. I had never used Clojure before, but I am thrilled by the development experience so far.\nHumlix runs as an Electron app on Mac OS and Windows. The -jar file launches in the background as a node child process.<p>I have a video available on the Humlix site: <a href="https:&#x2F;&#x2F;www.humlix.com" rel="nofollow">https:&#x2F;&#x2F;www.humlix.com</a>\nIt is also available on youtube: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QHLRRIW-7Ps" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QHLRRIW-7Ps</a><p>I&#x27;m happy to answer any questions.\nPlease download and try Humlix for yourself.')