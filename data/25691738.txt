Item(by='brandur', descendants=None, kids=None, score=None, time=1610147560, title=None, item_type='comment', url=None, parent=25690212, text='Excellent points in the article about &quot;top&quot; (booting off top-level workers in Ractors) versus &quot;bottom&quot; (parallelization at the edges of the code where not as much state needs to be shared) cases, with the top likely to take more time to widely manifest as more Ruby code becomes Ractor friendly.<p>I know Ractors are still quite new, but I&#x27;m curious to see how much luck people will have in migrating existing parallel code over to them.<p>Relying on a lot of shared state is going be the major blocker. Just on a token reading of the docs [1], it looks like you should be able to share quite a lot of state still as long as you&#x27;re able to freeze it all into immutability. You could then use message passing around the edges where immutability is a non-starter.<p>But this is probably easier said than done.<p>---<p>[1] <a href="https:&#x2F;&#x2F;docs.ruby-lang.org&#x2F;en&#x2F;3.0.0&#x2F;Ractor.html" rel="nofollow">https:&#x2F;&#x2F;docs.ruby-lang.org&#x2F;en&#x2F;3.0.0&#x2F;Ractor.html</a>')