Item(by='aerovistae', descendants=None, kids=[25175522, 25175789, 25176307, 25175686, 25177821, 25175964, 25175967, 25176623, 25180883, 25175474, 25178448, 25178537, 25175926, 25175981], score=None, time=1606026246, title=None, item_type='comment', url=None, parent=25175172, text='Love the idea of it, even if it&#x27;s not for me. Ruby needs new blood infused into it.<p>I realized recently that Rails started losing its popularity because it just didn&#x27;t quite keep up as the web evolved. Where the framework and its community resources (guides&#x2F;tutorials) should have started promoting REST APIs and out-of-the-box no-friction compatibility with modern tooling like npm&#x2F;webpack&#x2F;react&#x2F;whatever, instead it stuck with &quot;the Asset Pipeline,&quot; purely MVC-style full-page-reload apps, and things like Coffeescript&#x2F;jQuery by default.<p>It&#x27;s really unfortunate because Rails is such a brilliant framework, and Ruby such a lovely language, and they&#x27;re falling out of the mainstream and losing popularity because of this. I wish the community would re-align.<p>Michael Hartl&#x27;s book, the go-to &quot;learn Rails&quot; resource, is a classic example. I think it&#x27;s costing the community more than helping it nowadays. Although it&#x27;s a great guide, it just feels weirdly out of date to be building a purely MVC full-page-reload app. And I think for every person it helps, five people look at it and think &quot;seem like this isn&#x27;t what I need for my project.&quot;')