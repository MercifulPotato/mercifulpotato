Item(by='audunw', descendants=None, kids=[25416970], score=None, time=1607946270, title=None, item_type='comment', url=None, parent=25412158, text='&gt; It&#x27;s another &quot;C but better&quot; language.<p>This is actually a surprisingly underserved field. There&#x27;s relly very few language that <i>actually</i> tries to be just C but better.<p>Go: Uses garbage collection, not very applicable<p>Rust: Too complex, more like C++ but better. Bit too cumbersome to write &quot;unsafe&quot; code<p>D: More like Java&#x2F;C++, although they have a &quot;better C&quot; mode, but feels like an afterthought<p>Nim: Uses garbage collection.. like D they&#x27;re kind of trying to reach down into the plain C usecase, now with some nice reference counting stuff. Also relatively complex<p>Some actual attemps that I know of: C2, Odin<p>Some reasons why Zig is a better attempt at &quot;C but better&quot;:<p>- Complexity of the language is just a little higher than C, and mostly in ways that resolves issues with C that leads to its own complexities (Like, the C pre-processor is simple, but solving problems with it can be surpringly complex. Or how you may have to resort to compiler extensions&#x2F;pragmas to solve real problems)<p>- The Zig compiler is also a fantastic C compiler<p>- C headers can be imported and used directly in many cases<p>- Significant parts of the language is dedicated to excellent interop with C (even has syntax for 0-terminated strings)<p>- Cross-compilation is a highly prioritized use-case (C is very popular in embedded programming, where cross-compilation is essential)')