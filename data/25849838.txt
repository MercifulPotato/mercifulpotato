Item(by='grinich', descendants=None, kids=None, score=None, time=1611166601, title=None, item_type='comment', url=None, parent=25848349, text='We&#x27;ve taken a slightly different approach to this at WorkOS. (I&#x27;m the founder.)<p>We decided to handle authentication but explicitly _<i>not</i>_ user management or authorization.<p>This means our API is essentially just an OAuth2 wrapper around enterprise identity systems like Okta, Microsoft ADFS, generic SAML, OpenID Connect, etc. We don&#x27;t require developers to migrate users into WorkOS, handle access policy, or &quot;own&quot; the user object. The primary user database always stays in the developer&#x27;s app and WorkOS just serves as an authentication gateway. This turns out to be much more flexible, faster to integrate, and ultimately what developers actually want when adding advanced authentication strategies to their app (like enterprise SSO).<p>So I guess what I&#x27;m saying is this article title is a bit of a misnomer. It&#x27;s actually about outsourcing your user management and identity infrastructure to FusionAuth, which is a much larger decision with architectural effects. And unfortunately that results in strong vendor lock-in to a platform like FusionAuth (or Auth0).<p>(For anyone curious, you can see more about the WorkOS approach here: <a href="https:&#x2F;&#x2F;workos.com&#x2F;docs" rel="nofollow">https:&#x2F;&#x2F;workos.com&#x2F;docs</a>)')