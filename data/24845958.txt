Item(by='dkersten', descendants=None, kids=[24846017], score=None, time=1603270101, title=None, item_type='comment', url=None, parent=24845731, text='&gt; If you have a monolith, now youâ€™ve got a distributed system.<p>You already did, you just chose to ignore that the DB is actually a separate service. Ignoring this has meant that I&#x27;ve spent a not-insignificant amount of time in my last few jobs cleaning up bad ORM code because the queries performed terribly. I&#x27;ve cleaned such messes as pulling in all rows and then looping&#x2F;filtering on them client-side, just generally querying for too many things&#x2F;too many columns, querying for data and then looping over it to do more queries (instead of figuring out how to do it in a join), etc. When people treat the database as if its part of your monolith, because all the query logic is locally part of your codebase in your ORM, there&#x27;s a temptation to be lazy and treat it that way. And it works fine in development because the database is small with only test data, but can be painfully slow in production.<p>I&#x27;m sure plenty of people do it properly, even with an ORM, but I&#x27;ve had to clean up the mess too many times now, across multiple companies and dev teams.<p>I&#x27;m not advocating for putting all of this logic into stored procedures, I think that&#x27;s going too far in the other direction, only that you already have a distributes system, if you have a database, where the boundaries do matter.')