Item(by='jrockway', descendants=None, kids=None, score=None, time=1606557443, title=None, item_type='comment', url=None, parent=25234746, text='I&#x27;m glad this was posted.  I tried it this evening and it worked great.  It took me like 20 seconds to get started, and I was hooked.  (A few more minutes were required to setup a tsconfig.json so that my editor could type-check the k6 imports.  I don&#x27;t think the documentation really says &quot;add a tsconfig with compilerOptions.types = [k6]&quot; anywhere, but that worked for me.  Writing the tests in Typescript instead of Javascript is an exercise for another day.)<p>I like the design of running each virtual user in its own Javascript VM inside of a Go process.  I can just install a single binary, but still write tests in a high level language (and not rebuild the load testing framework for every change).<p>An idea that&#x27;s been kicking around in my head for a while is extending Go applications by embedding a WebAssembly VM, exposing relevant hooks, and letting users add whatever they want at runtime.  That way, you don&#x27;t have to bundle a bunch of crap into a statically linked binary, users can go add that later :)  K6 seems to validate that this is a good idea; while not WebAssembly, it sure works well.  (I would want to write my plugins in Go, not Javascript... but the idea is good.)')