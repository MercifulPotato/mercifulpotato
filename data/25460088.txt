Item(by='terrelln', descendants=None, kids=[25460282], score=None, time=1608237505, title=None, item_type='comment', url=None, parent=25459698, text='Zstd fully supports binary deltas. If you&#x27;re computing a delta between `old` and `new` you would do this to round trip it:<p>zstd --patch-from=old new -c | zstd -d --patch-from=old<p>Using the library this can be achieved by using the old file as a dictionary. If you have very large files (MB-GB range) you will also want to enable long range mode, otherwise zstd might not be able to find the repetition. --patch-from on the CLI will manage this automatically.<p>The release notes from zstd-1.4.5 [0] contain some details about the speed&#x2F;size tradeoff of &quot;patch-from&quot; mode, compared to other delta engines. There is also a wiki page detailing how to use zstd as a delta engine [1].<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;zstd&#x2F;releases&#x2F;tag&#x2F;v1.4.5" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;zstd&#x2F;releases&#x2F;tag&#x2F;v1.4.5</a><p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;zstd&#x2F;wiki&#x2F;Zstandard-as-a-patching-engine" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;zstd&#x2F;wiki&#x2F;Zstandard-as-a-patchin...</a>')