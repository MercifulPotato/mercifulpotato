Item(by='KineticLensman', descendants=None, kids=None, score=None, time=1607949095, title=None, item_type='comment', url=None, parent=25412267, text='Really great site! Uncluttered and easy to follow.<p>I have one question: is there JD best practice on how to handle file sets that are generated frequently and in large-ish numbers? I’m thinking specifically of camera image files. My current approach is to have a directory per year, and then subdirectories (with a YYYMMDD-subject name) for each distinct shoot (typically between 30 and 50) in that year, together containing between 5000 and 20000 new images (depending on how many shoots I do). I maintain a parallel folder structure for the processed images. My current thinking is to keep this photo-library as-is, but put all of my ‘normal’ files into a JD structure.<p>By the way, and picking up memetherapy’s comment, I’ve also experienced knowledge management problems in large corporations for which JD would be a great answer. The last place I worked moved several years ago from a ‘classic’ system based on servers and file systems to a system based upon numerous per-project sharepoint sites. It didn’t help that the template for the sites was developed from a project lifecycle perspective and had about 70 folders covering every stage from initiating a bid to project shutdown. There was pretty-much a single ‘dev’ folder for the actual work, that techies like myself inevitably populated in inconsistent ways. Something that was never resolved was that all of these silos made searching for old reports, etc really really hard and fundamentally broke knowledge management in the company. Especially when most of the silos had per-project access permissions.<p>On the point made elsewhere about tagging, in my experience it is extremely hard to get people across a large company to add metadata to content, let alone do it consistently.')