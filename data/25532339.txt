Item(by='bob1029', descendants=None, kids=[25532555, 25532616, 25532695, 25532454, 25532758], score=None, time=1608850890, title=None, item_type='comment', url=None, parent=25530178, text='We are chasing the wrong things. Our conceptualization of the problem domain is fundamentally insufficient. Even if we took our current state of the art and scaled it up 1,000,000x, we are still missing entire aspects of intelligence.<p>The AI revolution is very likely something that will require a fundamental reset of our understanding of the problem domain. We need to identify a way to attack the problem in such a way that we can incrementally scale all aspects of intelligence.<p>The only paradigm that I am aware of which seems to hint parts of the incremental intelligence concept would be the relational calculus (aka SQL). If you think very abstractly about what a relational modeling paradigm accomplishes, it might be able to provide the foundation for a very powerful artificial intelligence. Assuming your domain data is perfectly normalized, SQL is capable of exploring the global space of functions as they pertain to the types. This declarative+functional+relational interface into arbitrary datasets would be an excellent &quot;lower brain&quot;, providing a persistence &amp; functional layer. Then you could throw a neural network on top of this to provide DSP capabilities in and out (ML is just fancy multidimensional DSP).<p>If you know SQL you can do a lot of damage. Even if you aren&#x27;t a data scientist or have a farm of Nvidia GPUs, you can still write ridiculously powerful queries against domain data and receive powerful output almost instantaneously. The devil is in the modeling details. You need to normalize everything very strictly. 20-30 dimensions of data derived into a go&#x2F;no-go decision can be written in the same # of lines of SQL if the schema is good. How hard would this be on the best-case ML setup? Why can&#x27;t we just make the ML write the SQL? How hard would it be for this arrangement to alter its own schema over time autonomously?')