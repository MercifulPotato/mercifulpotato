Item(by='pjmlp', descendants=None, kids=None, score=None, time=1605771834, title=None, item_type='comment', url=None, parent=25146493, text='Which is 100% correct.<p>NVidia cared to make CUDA into a polyglot GPGPU programming model, with nice debugging tools where you can do everything like CPU graphical debuggers, then thanks to PTX it was a matter to just add a new backend to your compiler.<p>Hence why, even though it doesn&#x27;t get that much press, you can even use flavours of Java and .NET on CUDA.<p>Meanwhile Khronos kept driving their C only agenda, and when they realized the mistake, came up with SPIR (then SPIR-V after Vulkan was introduced), tried to also cater to the C++ devs (with printf like debugging tools).<p>All this effort was largely ignored by OEMs, with their lousy tools, thus ending with OpenCL 3.0 being effectively OpenCL 1.2 renamed to sound cool, and the C++ efforts (SYSCL) are now focusing on compute agnostic backends.<p>The problem wasn&#x27;t NVidia, rather Intel and AMD did not deliver and all their alternatives to OpenCL are even worse, half backed attempts that always loose steam half way through.')