Item(by='lninyo', descendants=None, kids=None, score=None, time=1607646791, title=None, item_type='comment', url=None, parent=25373831, text='I think the future of Clojure is not much different from the present of Common Lisp. If you go look at supposedly &#x27;workhorse libraries&#x27;, work has been abandoned. Some of the projects that Clojure&#x27;s own page points to haven&#x27;t seen updates for 6,7, 8 years. Some people who were super active in the community have moved on to other pastures. This is not a good sign.<p>If you look at Clojure problems being solved by beginners on Exercism, you&#x27;d see problems categorized as &quot;easy&quot;, but to solve them idiomatically, you need to know quite a bit of the language and its library ecosystem. The problems that do get solved, are mostly not idiomatic and most people are just trying to write C&#x2F;JS&#x2F;Java in Clojure (maybe because they want to appear to be &#x27;wise&#x27; because you know, once you can conj two vectors together, your poopoo basically doesn&#x27;t smell anymore.) This indicates a major disconnect between what &quot;experienced&quot; Clojure dev&#x27;s think is &quot;easy&quot; for beginners to solve and what actually might be easy given the nature of a language. If you can&#x27;t solve the problem idiotmatically without knowing obscure functions in the clojure core, and also of ways to apply those functions just in the right way (the functional part) you shouldn&#x27;t categorize them as &#x27;easy&#x27; but they do, which is odd and counter productive, yet there they are.<p>So a lot of genuinely curious people abandon learning clojure simply because the learning curve is a lot like the &quot;emacs learning curve&quot; in one of those XKCD pieces.<p>Rich Hickey joining Cognitect was beginning of the end IMO. It&#x27;s like Chuck Moore and his lady friend starting up Forth Inc. I hate to say it but I see Clojure going the way of Forth. It will increasingly become niche and it will eke out its days just like other niche languages tend to do. It has already begun to do so.<p>Hickey is super smart, and this language is for him and super smart people like him for problem domains he operates in, not for mere mortals. You can&#x27;t have long term viability when you&#x27;re not attracting new people, and most new people come into a language by way of wanting to do simple stuff like webdev. Clojure&#x2F;Script ecosystem just doesn&#x27;t offer that (despite the claims). If it did, you&#x27;d see people leaving JS frameworks and going to Clojure&#x2F;Cljs in large numbers but they just aren&#x27;t and the ship has sailed on that because the time to do that was around 2012-2015 . Python has won the AI glue wars, and JS has won the web war.<p>This is brushed aside as &quot;well they&#x27;re mostly stupid people anyway and who needs them in this refined atmosphere of clojure zen that WE all have?&quot;<p>Thoughtworks made a lot of hay during the RoR sunshine in the mid 2000&#x27;s onwards, and they did the same with Clojure starting around 2012. One or two successful companies does not an expanding eco system make. And they and even cognitect to some extent are more in maintenance phase rather than expansion phases.<p>Clojure programmers (some) may be commanding six figure salaries, but you can do the same if you&#x27;re any good at COBOL, and believe me, there are a lot more COBOL jobs out there right now than there are Clojure jobs.<p>As of this writing, Thoughtworks&#x27; career page has 14 openings for ReactJS, 5 for Java and ZERO for Clojure. That should tell you something about the future of Clojure.<p>I do not write these things as a &#x27;hater.&#x27;')