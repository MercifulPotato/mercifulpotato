Item(by='kentonv', descendants=None, kids=[25587129], score=None, time=1609364986, title=None, item_type='comment', url=None, parent=25586047, text='Eh... I&#x27;d actually argue that Protobuf&#x27;s big advantage is all the languages it supports that Cap&#x27;n Proto doesn&#x27;t.<p>If you&#x27;re using C++ exclusively, I&#x27;d argue Cap&#x27;n Proto beats Protobuf. That &quot;army of engineers&quot; isn&#x27;t necessarily the advantage you think it is -- rather than forcing Protobuf to be the best it can be, I would argue they forced Protobuf to get stuck with early design decisions that no one thinks were ideal (e.g. varint encoding), because it&#x27;s too hard to change once you have a lot of users. Battle-testing is great, but you could argue that Cap&#x27;n Proto benefited more from Protobuf&#x27;s battle-testing than Protobuf itself did, since Cap&#x27;n Proto was designed from scratch with those lessons already learned.<p>On the other hand, if you need to support a broad set of languages, Protobuf is more likely to meet your needs. This is where the army of engineers and Google backing is helpful -- in building out support for a wide variety of languages and platforms.')