Item(by='LinguaBrowse', descendants=None, kids=None, score=None, time=1606268818, title=None, item_type='comment', url=None, parent=25201887, text='Thanks for these tips; really interesting. Getting a clearer understanding of the differences between types and interfaces, and got some confirmation of the merits of writing explicit return types.<p>I was wondering whether any more could be done to improve editing performance when large .d.ts files are included. This is a problem in particular for NativeScript, which has a vast set of large types files to include to express the entirety of the iOS and Android SDKs, e.g.: <a href="https:&#x2F;&#x2F;github.com&#x2F;NativeScript&#x2F;NativeScript&#x2F;tree&#x2F;master&#x2F;packages&#x2F;types-ios&#x2F;src&#x2F;lib&#x2F;ios&#x2F;objc-x86_64" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;NativeScript&#x2F;NativeScript&#x2F;tree&#x2F;master&#x2F;pac...</a><p>In fact, the skipLibCheck flag was originally developed to improve NativeScript compile time: <a href="https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;TypeScript&#x2F;issues&#x2F;8521" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;TypeScript&#x2F;issues&#x2F;8521</a><p>Unfortunately, editing still feels slow to me when including NativeScriptâ€™s iOS&#x2F;Android types (have to wait 1-2 seconds after any keystroke for any IntelliSense to appear); beyond including fewer of the types files, could editing performance be improved somehow?<p>Thanks!')