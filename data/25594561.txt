Item(by='gregmac', descendants=None, kids=None, score=None, time=1609434697, title=None, item_type='comment', url=None, parent=25590846, text='&gt; Missing Easy Search Option for Finding Issues in the Project<p>Really? I think search is one of the most compelling features.<p>I find most of the time when I can&#x27;t find something, it&#x27;s because of different terms used, such as searching for &quot;schedule task failing&quot; vs the ticket saying &quot;job run error&quot;. (Usually once I eventually find it I just edit the ticket to have the other keywords I tried)<p>The UI for selecting advanced search is acceptable.. it&#x27;s not the easiest thing - for example searching open vs closed on GitHub is an much simpler - but it also exposes a lot more of the fields.<p>Personally I use the text-based JQL interface most of the time. It&#x27;s very powerful, and as the name implies, anyone that knows SQL will find it familiar. A quick example, an easy way to find bugs closed in the version you&#x27;re releasing but that weren&#x27;t correctly tagged: `(type = bug) and (fixversion is null) and (status changed to closed after 2020-12-02)`.<p>And search you do is updated in the url (easy to share with others), and even better, if you paste that url into Confluence, it turns into an embedded dynamic list. This is great for release notes, or making category pages of certain types of tickets (eg: all open bugs related to feature x, or all bugs older than 6 months with more than a few comments, etc). Yeah you can build reports with this, but I find these are more accessible and used when they&#x27;re organized within a logical structure in the wiki vs buried in a flat list of dozens or hundreds of other reports.')