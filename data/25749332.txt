Item(by='KMag', descendants=None, kids=None, score=None, time=1610469748, title=None, item_type='comment', url=None, parent=25745440, text='You could presumably statically link in the runtime.  Also, without the dynamically-optimizing runtime, it would run just fine, just a bit slower than normal native code due to the extra indirection.  Lots of indirect calls also increase the chances of address mispredictions due to tag collisions in the BTB (Branch Target Buffer).<p>Function calls&#x2F;jumps through arrays of pointers are how virtual method calls&#x2F;optimized virtual method tail calls are executed.  Though, in this case, the table offsets would be held in a register instead of immediate values embedded within the instruction.  I&#x27;m not aware of any instruction set where they&#x27;ve decided it&#x27;s worthwhile making instructions specifically to speed up C++ virtual member function dispatch, so I doubt they&#x27;d find optimizing this worthwhile.<p>Also, if things go according to plan, your hot path is a long strait run of code, with only occasional jumps through the table.')