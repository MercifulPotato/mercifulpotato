Item(by='lima', descendants=None, kids=[24820403, 24820227], score=None, time=1603046370, title=None, item_type='comment', url=None, parent=24819921, text='&gt; <i>- Google still hasn&#x27;t raised the rules count like it announced last year in the blog post you linked. The current API is still limited to 30k rules. (the dynamic rule count is ridiculously low too)</i><p>Manifest v3 is still in development, so I&#x27;m assuming that this simply hasn&#x27;t happened yet. It definitely needs to fit uBlock Origin&#x27;s default rule set and I don&#x27;t see them backtracking on the 150k announcement.<p>&gt; <i>- Even if the rule count were unlimited, having a static list of rules handicaps more complex algorithms like those used in uBlock Origin, that aren&#x27;t limited to &quot;if URL in URL_LIST then block&quot;. For instance, a Levenshtein-distance-based algorithm can&#x27;t be implemented with declarativeNetRequest.</i><p>This is the explicit trade-off that is being made. I&#x27;ll gladly accept this limitation in exchange for not having to trust the ad blocker extension.<p>&gt; <i>- Similarly, its stance that the proposed API is more efficient is extremely dubious. Modern WebAssembly has close-to-C++ performance, meanwhile ads and analytics are one of the biggest source of slowdowns of the modern net. The idea that restricting adblockers would improve performance in the general case is absurd.</i><p>The blog post explains this - the issue isn&#x27;t the (in the case of uBlock, carefully written and very fast) extension code, but the IPC overhead in routing all requests through the extension. The Chromium teams loves metrics and they wouldn&#x27;t make this claim without having substantial data to back it up - it&#x27;s not a matter of opinion, but objectively quantifiable.<p>&gt; <i>- Manifest v3 doesn&#x27;t seem to prevent extensions from examining traffic, just blocking it. So Google&#x27;s stance that its API is against data mining, not ad blockers in particular seems hypocritical.</i><p>The blocking version sits in the critical path, the non-blocking one can be called asynchronously. This is consistent with their reasoning.<p>With Manifest v3, blanket host and activeTab permissions are going away, which addresses data mining extensions and would make the existing blocking webRequest API impractical: <a href="https:&#x2F;&#x2F;twitter.com&#x2F;justinschuh&#x2F;status&#x2F;1138889508512866304" rel="nofollow">https:&#x2F;&#x2F;twitter.com&#x2F;justinschuh&#x2F;status&#x2F;1138889508512866304</a>')