Item(by='spiffytech', descendants=None, kids=None, score=None, time=1603047159, title=None, item_type='comment', url=None, parent=24819670, text='I think it&#x27;s because Rust was started by a high-profile, respected company specifically because they felt C++ was inadequate for their use case, and they had the expertise to be authoritative about that inadequacy.<p>That means Rust is a technologically natural counterpoint to C++ because it was literally designed to be a C++ replacement, and coming from a high-profile company means its entire target audience found out about it very quickly, so any discussion relevant to Rust can find plenty of participants. The rest is just due to all the usual reasons programmers bicker about things, and we&#x27;ve seen this language bickering again and again before, it&#x27;s just a different language&#x27;s turn in the spotlight.<p>I&#x27;d love to see these discussions include a more coherent analysis of when a language is appropriate, instead of assuming everyone should always make the same choice. If I&#x27;m starting greenfield, when should I pick C++ over Rust? If I&#x27;m looking at C++ alternatives, how would I choose between Rust and Golang? Is D ever a better choice? When? Why do we act like you can only pick one, when IPC and FFI and microservices mean you can split the difference if a language is only best for a portion of your project?')