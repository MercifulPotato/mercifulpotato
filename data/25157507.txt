Item(by='hakfoo', descendants=None, kids=None, score=None, time=1605849332, title=None, item_type='comment', url=None, parent=25155746, text='As a security measure, the cows are out of the barn already.<p>Workflows already exist where an app shows an embedded login page.  Users have already become accustomed to it.  A malicious developer trying to phish in that flow will just substitute a self-hosted or local simulation of the Google login form.  Worst case, you pretend there was an error and punt the user to &quot;backup login&quot; in a real browser to now blow your cover.  This won&#x27;t prevent such scams.<p>If they had made the decision several years ago, they might have been able to say &quot;We&#x27;ve never and never will supported this type of login flow; if you see it, it&#x27;s a scam&quot; and managed expectations on a going forward basis.  But now you&#x27;re stripping functionality without a clear user-facing notification that embedded logins are suspicious.  Is there even a reasonable way to convey that info to most potentially impacted users today?<p>Of course, that doesn&#x27;t solve the problem of dividing the world between &quot;real&quot; and &quot;embedded&quot; browsers, but that&#x27;s another story.  Again, if this wasn&#x27;t a regression, it would be more forgivable.  I can accept that the full Google experience won&#x27;t work on other unsupported environments (say, the web browser packed in with OS&#x2F;2), but it&#x27;s not like those worked yesterday but not today as a policy choice.')