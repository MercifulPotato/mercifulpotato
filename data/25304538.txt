Item(by='jayd16', descendants=None, kids=[25316281, 25304906], score=None, time=1607100639, title=None, item_type='comment', url=None, parent=25302350, text='One headache I see that no one seems to mention is thread affinity seems a lot harder to manage in an implicit system.  Many patterns use a single thread for synchronization but often times one thread is special.  UI systems often have a UI thread that controls the GLContext or what have you.  In something like C#&#x27;s async, you can easily schedule tasks off and on that thread.  I&#x27;m not sure how you could do this implicitly.  Loom seems to keep around native Threads for this sort of thing?<p>I would be really interested in seeing a UI system written with Loom.<p>&gt;FFI that bypasses the JDK and interacts with native code that does either IO or OS-thread synchronization is extremely rare in Java.<p>I would also argue its rare because its hard to do.  This is a self fulfilling argument.  In C#, a very similar language, its much more common to do that sort of thing because its easier.  C# is chosen for games and other apps because it can interop with native more easily.')