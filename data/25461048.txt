Item(by='flavio81', descendants=None, kids=None, score=None, time=1608242266, title=None, item_type='comment', url=None, parent=25453099, text='&gt;I do this all the time with Clojure at work. I will have my application running (web app) with two repls in emacs. One is connected to the ClojureScript repl and one to the Clojure repl. I am able to make changes to both front end code and back end code on the fly by changing a function and then evaluating the function into the repl<p>But since you can&#x27;t arbitrarily inspect and restart any start frame, you don&#x27;t really get the interactive programming experience.<p>On CL, for example, when you hit a runtime bug that is uncaught, you get the debugger window which shows not just the &quot;stack trace&quot; but the complete stack FRAMES that you can inspect. So let&#x27;s say deep down you find where the error originated and the states of the variables.<p>You can then jump to the definition of the offending function, edit the function, recompile it, (optionally) change any variable on that stackframe, and then continue the execution by restarting specifically at that stack frame.<p>In this way, the feature of &quot;modify a function while the code is running&quot; becomes way more meaningful. The program evolves as it runs, as if it were a lifeform.')