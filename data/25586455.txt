Item(by='tijsvd', descendants=None, kids=[25586630, 25586812, 25586681], score=None, time=1609364292, title=None, item_type='comment', url=None, parent=25585934, text='Things may have improved since, but the implementations are somehow very large and slow.<p>Things may have changed since, but AFAIK the C++ implementation would always allocate on the heap for nested messages, and perhaps even for optional scalars. This may be optimal for larger documents, but not for smallish messages (my use case was market data and trading instructions). I measured certain small messages, where an encode&#x2F;decode pair would take over a microsecond with Google&#x27;s implementation, but about 50 ns with a simpler one (versus 15 ns for a memcpy).<p>For Java my experience is mostly with the API itself, which felt very heavy.<p>Edit: I think a lot depends on your use case. I use protobuf mostly as a &#x27;trusted&#x27; protocol. If someone didn&#x27;t set a required field, I don&#x27;t care. Some bloat may have to do with verifications that I&#x27;ve never needed.')