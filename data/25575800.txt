Item(by='mumblemumble', descendants=None, kids=[25575861], score=None, time=1609280647, title=None, item_type='comment', url=None, parent=25575426, text='&gt; Whilst trying to avoid the &quot;No True Scotsman&quot; fallacy, I&#x27;d argue that this system is FP only in name,<p>I think that, at least for the purposes of the way of thinking that I am moving toward, it isn&#x27;t exactly that, so much as that we seem to have hit a point of very vehement agreement, except perhaps for some slightly different coloring on the pessimism&#x2F;optimism scale.<p>I agree with you that well-done functional code is much nicer to work with, or that the spot where this code I was working with went off the rails is that it kept departing from functional style when the original authors though it convenient to do so. It&#x27;s more that I&#x27;m discovering that FP has an Achilles heel, and it turns out that it was exactly the same Achilles heel that produced my ultimate frustration with SOLID: In typical usage, it&#x27;s an unstable equilibrium point. I suspect, in retrospect, that one movement failed and the other is doomed to fail because, as you allude to in that last paragraph, they&#x27;re both trying to solve the wrong problem.<p>Other background information here is that I&#x27;ve lately been learning Smalltalk and Rust, and, as a result, seeing how eliminating state is far from the only way to tame it. And I&#x27;ve been noticing that, from a readability and maintainability perspective, many of the most compelling open source codebases I&#x27;m aware of tend to be neither functional nor object-oriented.')