Item(by='darksaints', descendants=None, kids=[25503619, 25503516, 25503531], score=None, time=1608616337, title=None, item_type='comment', url=None, parent=25502790, text='The downside to taking that combinator approach too dogmatically is that passing all state as parameters can get extra unwieldy, because now a simple change in data schema can result in you refactoring every single function call.<p>This dilemma has a name: The Expression Problem. A decent summary can be found here.<p><a href="https:&#x2F;&#x2F;wiki.c2.com&#x2F;?ExpressionProblem" rel="nofollow">https:&#x2F;&#x2F;wiki.c2.com&#x2F;?ExpressionProblem</a><p>Functional programming is an amazing paradigm for most domains. However, some domains will take a seasoned functional programmer and make them want to jump off a cliff. UI programming, game programming, and simulation programming are some examples where pure functional approaches have never made a dent, and for good reason.')