Item(by='Jugurtha', descendants=None, kids=None, score=None, time=1609706398, title=None, item_type='comment', url=None, parent=25623879, text='&gt;<i>Data Scientists are bad Web Developers, but what if we need to build web apps that can talk or do Machine Learning?</i><p>We do have colleagues like that, but even for those who can go end to end (helping client to state the problem, to data acquisition, model building, writing application, setting up infrastructure, deploying, and monitoring), it&#x27;s tiring..<p>We&#x27;d get the data, build the models, and then we&#x27;d have to write the application. That&#x27;s a separate repository and software project, often on-premises deployment which we have to maintain. And that&#x27;s for the &quot;application&quot; proper with user management, and business logic. I&#x27;m not even talking about what most people do &quot;Flask app that loads model weights, exposes a form, and returns predictions to show the client, let me set a VM on GCP and send a link to the client&quot;, but the client is busy, and you forget about it, so you shut down the VM, the client clicks on the link, nothing there, and you&#x27;re left to remember which of the VMs and which of the models was there.<p>This toil is one of the reasons we&#x27;re building <a href="https:&#x2F;&#x2F;iko.ai" rel="nofollow">https:&#x2F;&#x2F;iko.ai</a>, because we&#x27;ve done it so many times for clients, that certain patterns and inefficiencies have emerged and we&#x27;re addressing them in our platform to really focus on high value things.<p>For example, we have AppBooks[1] where a machine learning practitioner clicks a button and publishes an <i>automatically</i> parametrized notebook, without tagging cells or using metadata, or cluttering the notebook with code that does that. It generates a form and the client or domain expert can then change parameters and run the notebook without mutating it.<p>One other benefit is that this automatically tracks the run: the parameters, metrics, and the model generated is saved, and you can then deploy that model in one click or build a Docker image. These are not much, but solve the problem of &quot;I want to show results and get feedback, how do I do that? VM on GCP and Flask app? Export to PDF?&quot;<p>&gt;<i>Finally, Models are easy to build on Jupyter Notebooks. We all know it just takes a few lines of code and your `model.fit()` is ready. But whatâ€™s next?</i><p>Well, it depends. Long-running notebooks have been problematic when the kernel and the front-end would stop talking with each other. The computation would take place, but the results wouldn&#x27;t find their way to the front-end. People would be watching training, and then there would be a disconnection or they&#x27;d close the browser tab and lose results. Some would add code to save the model&#x2F;pickle it, but that&#x27;s clutter. We&#x27;ve added long-running notebook scheduling[2] right from the notebook&#x27;s interface, so closing a tab or shutting down your computer doesn&#x27;t impact anything. You can view the output <i>outside</i> of JupyterLab in a simple page, even on your phone.<p>That&#x27;s very useful because it sometimes happens where we want to run a <i>bunch</i> of experiments. We just schedule them all in a fire and forget way.<p>But the gist of it is that so far, it&#x27;s helping us:<p>- Load data<p>- Start notebooks with the most popular libraries pre-installed<p>- Collaborate in real-time on notebooks and see cursors and changes<p>- Publish AppBooks: automatically parametrized notebooks<p>- Schedule long-running training jobs and be able to watch their output as they run<p>- Automatically track experiments without remembering to do so or polluting the notebook with tracking code<p>- Deploying models into a &quot;REST endpoint&quot;, and monitoring their performance in near-real time dashboards<p>Basically, a <i>lot</i> of work we&#x27;re happy not to be doing :)<p>- [0]: <a href="https:&#x2F;&#x2F;iko.ai" rel="nofollow">https:&#x2F;&#x2F;iko.ai</a><p>- [1]: <a href="https:&#x2F;&#x2F;iko.ai&#x2F;docs&#x2F;appbook&#x2F;" rel="nofollow">https:&#x2F;&#x2F;iko.ai&#x2F;docs&#x2F;appbook&#x2F;</a><p>- [2]: <a href="https:&#x2F;&#x2F;iko.ai&#x2F;docs&#x2F;notebook&#x2F;#long-running-notebooks" rel="nofollow">https:&#x2F;&#x2F;iko.ai&#x2F;docs&#x2F;notebook&#x2F;#long-running-notebooks</a>')