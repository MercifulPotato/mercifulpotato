Item(by='wokwokwok', descendants=None, kids=[25100915], score=None, time=1605442765, title=None, item_type='comment', url=None, parent=25100480, text='&quot;competitive&quot;<p>Right, so let me get this straight, the argument is:<p>You can implement an arbitrary system in python and it is &#x27;fast enough&#x27; to be usable and &#x27;better&#x27; in terms of 1) speed to develop, 2) lower complexity (ie. lower LoC, easier to maintain) and 3) the garbage collection doesn&#x27;t matter?<p>I strongly disagree.<p>I&#x27;ve worked in python for a long time, and it&#x27;s a great glue language... but, it&#x27;s not suitable for implementing high performance systems. Flat out.<p>Not. Suitable.<p>If the system you&#x27;re developing is a mild variant on 1) something that <i>already exists</i> and 2) is implemented in a lower level language, then yes, python is a reasonable glue language to link together native modules.<p>That&#x27;s why many of the machine learning frameworks use python; because it&#x27;s <i>great</i> at allowing you to express &#x27;high level concepts&#x27; using low level primitives.<p>However.<p>It is <i>not</i> suitable for <i>implementing</i> low level primitives; because its <i>too slow</i> and <i>single threaded</i>.<p>So... you might argue that this redis implementation uses enough pre-existing code that someone else has written that it is reasonably performant, but... once you go beyond the &#x27;trivial&#x27; implementation that uses someone else code, you&#x27;ll find it&#x27;s really not suitable for this kind of use-case.<p>I love python; but this is... it&#x27;s just wishful thinking.<p>Just because you like python, does not make python suitable for every workload.')