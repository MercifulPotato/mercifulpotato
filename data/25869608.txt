Item(by='6d65', descendants=None, kids=None, score=None, time=1611303928, title=None, item_type='comment', url=None, parent=25862122, text='The way I see it, this is what programmers do, they turns things into programs. A good example are hardware description languages, where hardware designers write programs, and at the end a very complex chip design is generated. Which is then taped out. Those are very complex systems with very complex constraints. The output of these are locations of hunderds of billions of transistors with their interconnects.<p>Assuming you know JavaScript, you get some advantages over doing it via gui:<p>* Source control support: the model is text and can be stored in git. Multiple people can work incrementally in a branch. I assume cad models are binary, or very complex text. Having readble code will also allow for code reviews.<p>* Parametric modeling: you can define components (parts) as functions with function parameters to customize the behavior. You can have if else statements inside the functions to change the behavior. For example you can have a bolt function that can generate any type of bolt based on parameters<p>* Automation : In a programming language you can have loops that can generate any amount of components, and you can customize position, and object parameters in the loop. Making grids if objects is trivial.<p>* Testing : if you&#x27;re using a full language like JavaScript, you can write unit tests for your more complicated parametric models. This can help with edgecases, and make your models more resilient.<p>* Code reuse : you can create a standard library of parametric models, ex: pipes, bricks, bolts and so on, and use them quickly on new projects<p>* IDE support : programming languages often have ide support that make reafactoring, code navigation, code exploration much simpler<p>* Familiarity : learning a complex gui app can take time, especially when the GUI is very complex. If the person already knows JavaScript, and can use an ide, with fuzzy searching through the symbols. In my opinion this is much simpler to start and get complex results than searching for some obscure feature in a deeply nested GUI. Of course this can be alleviated by a fuzzy search of UI functionality from a single place, ex: GIMP &#x2F; command, and the new blender searchable menus.<p>Anyway, these are a few from the top of my head. There are probably many more. Of course, there are disadvantages, mainly that not everyone can program, and of course the people who use CADs are less likely to be familiar with coding. But capable people can lean fast.<p>I&#x27;m looking at this as a software developer than wants to design some complex models, but doesn&#x27;t want to learn a complex UI of a cad system. I&#x27;m quite familiar with working on complex systems in code, and find this approach much more suitable for me.')