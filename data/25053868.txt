Item(by='vngzs', descendants=None, kids=[25058591], score=None, time=1605053164, title=None, item_type='comment', url=None, parent=25048568, text='If it&#x27;s AWS, the quickest path to doing this securely is AWS API Gateway mTLS authN[0]. You generate some certs, stuff the public halves in S3, slap an ACM cert on the Gateway, and you&#x27;re done.<p>I have also used certificate authentication on TLS-terminating reverse proxies (e.g., this is easy to do with HAProxy) to do the same in other environments. You can pin the API&#x27;s certificate on the client end in order to further reduce MITM risks.<p>If you don&#x27;t want to supply a client certificate in your client application, Stunnel[1] is an acceptable wrapper that lets your clients remain TLS-unaware. You could use it for both ends of the tunnel, if you felt like it.<p>Either way, you end up with a secure tunnel through the internet to the proxy, at which point you&#x27;re back inside private networks.<p>(Source: I build this kind of thing for a living.)<p>[0]: <a href="https:&#x2F;&#x2F;aws.amazon.com&#x2F;blogs&#x2F;compute&#x2F;introducing-mutual-tls-authentication-for-amazon-api-gateway&#x2F;" rel="nofollow">https:&#x2F;&#x2F;aws.amazon.com&#x2F;blogs&#x2F;compute&#x2F;introducing-mutual-tls-...</a><p>[1]: <a href="https:&#x2F;&#x2F;www.stunnel.org&#x2F;auth.html" rel="nofollow">https:&#x2F;&#x2F;www.stunnel.org&#x2F;auth.html</a>')