Item(by='bird_monster', descendants=None, kids=None, score=None, time=1609736566, title=None, item_type='comment', url=None, parent=25623025, text='&gt;  A lot of them expect you to tell them how, but they will refuse to ask for help until too late.<p>Software is an industry in which people are criticized frequently for doing things differently than how others would&#x27;ve done them. This results in devs (that are less confident with that type of confrontation) over-asking how a company wants something done, and then feeling anxiety around getting it wrong and needing to ask for help. It might not necessarily be the responsibility of the direct manager to define _how_ things are done from a technical perspective on that team, but it&#x27;s certainly someone&#x27;s. &quot;I expect you to know how to write software in our codebase&quot; kind of falls apart, given the infinite options for how problems are approached within a given problemspace.<p>If you&#x27;re seeing this type of behavior, your org might have trouble with A.) responding to aggressively with developers building something differently than expected, B.) valuable criticism. Pull requests are exhausting, in my experience, because they oftentimes turn into theoretical debates about the validity of different approaches.<p>Pull requests are the correct time to offer actionable criticism on submitted work. Pull requests are not a place to complain about an implementation strategy, or to suggest the developer should&#x27;ve done something totally differently. If the submitted solution is so far away from correct that that type of criticism comes up, your workflow has already fallen apart (as a developer was able to build and submit a solution without realizing their work wouldn&#x27;t pass review).<p>&gt; When I was on the other side, the opposite was true too, I has bosses that expected me to do things their way, even if I could demonstrate that there were better.<p>I think ultimately either is &quot;fine&quot; - things just need to be defined appropriately. If a developer is given the freedom to basically do whatever they want, they need to be told so, and that ideal has to be supported through the entire dev lifecycle. Meaning your team&#x27;s culture has to have the restraint to not complain about implementation details. In my experience, almost no org is actually comfortable with this method though. In my experience it&#x27;s best to literally define &quot;how&quot; a team solves the problems it is tasked with.')