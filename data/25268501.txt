Item(by='gen220', descendants=None, kids=None, score=None, time=1606849064, title=None, item_type='comment', url=None, parent=25267508, text='&gt; The function did nothing except emit ‘hello world’.<p>A more realistic benchmark would be parsing a 1kb protobuf blob and printing some random key from it.<p>(this would require importing a non-stdlib parser)<p>Without knowing how it&#x27;s implemented, my guess is that they&#x27;re conserving python&#x2F;v8 processes, so that they&#x27;re not cold-starting the interpreter on each lambda execution.<p>You can&#x27;t [1] do the same thing for a Go binary, so they have to invoke a binary, which <i>might</i> involve running some scans against it first.<p>This leads to some pretty counterintuitive conclusions! If you want minimal latency (in Lambda!!), you really should be using JS&#x2F;Python, I guess.<p>[1]: OK. Maybe you could. Go has a runtime after all, although it&#x27;s compiled into the binary! I have never heard of anybody doing this, but I&#x27;d love to read something about it. :)')