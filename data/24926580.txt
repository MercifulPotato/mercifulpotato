Item(by='Nextgrid', descendants=None, kids=[24928141, 24926924, 24927524, 24926660, 24926729, 24928203, 24928125], score=None, time=1603939743, title=None, item_type='comment', url=None, parent=24926161, text='&gt; Frontend tooling has never been better than it is today.<p>What&#x27;s the library or design pattern to consume a REST API in React or any of the mainstream front-end frameworks? The only thing I&#x27;m aware of is Ember Data but Ember is apparently not cool anymore, and I couldn&#x27;t find a suitable replacement.<p>I&#x27;m asking because in all the projects I&#x27;ve been involved with, consuming the backend API always felt like a mess with lots of reinventing the wheel (poorly) and duplication of code. I can&#x27;t believe in 2020 there&#x27;s not some kind of library I can call that will give me my backend resources as JSON and transparently handle all the caching, pagination, error handling (translate error responses to exceptions), etc and people have to do all this by hand when calling something like Axios.<p>In contrast, Django REST Framework handles all that boilerplate for me and allows me to jump right into writing the business logic. It&#x27;s insane that ~30 lines of code with DRF (<a href="https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;#example" rel="nofollow">https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;#example</a>) gives me a way to expose RESTful endpoints for a database model to the web with authentication, pagination, validation, filtering, etc in a reusable way (these are just Python classes after all) but the modern front-end doesn&#x27;t have the client equivalent of this.')