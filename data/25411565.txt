Item(by='stonewareslord', descendants=None, kids=[25429758], score=None, time=1607902223, title=None, item_type='comment', url=None, parent=25411129, text='I have tried a custom linking script, Ansible, and stow. The best I have found is to just use a bare git repo based off of: <a href="https:&#x2F;&#x2F;www.atlassian.com&#x2F;git&#x2F;tutorials&#x2F;dotfiles" rel="nofollow">https:&#x2F;&#x2F;www.atlassian.com&#x2F;git&#x2F;tutorials&#x2F;dotfiles</a><p>The idea is to make an alias that runs git so that it treats your home directory as a git repository and you can directly commit them.<p>I would recommend bypassing that article&#x27;s `config config --local status.showUntrackedFiles no` setting and setting a `~&#x2F;.gitignore`. This way, git will never tinker with your home directory if you accidentally run the wrong command.<p>So the complete list of setup commands is:<p><pre><code>    # Only needs to be done the first time\n    cat &gt;~&#x2F;.gitignore&lt;&lt;&#x27;EOF&#x27;\n    *\n    !&#x2F;.bashrc\n    !&#x2F;.zshrc\n    EOF\n\n    # On subsequent runs\n    git clone --bare ssh:&#x2F;&#x2F;git&#x2F;cfg.git &quot;${HOME}&#x2F;.cfg&quot;\n    function config() {\n       git --git-dir=&quot;${HOME}&#x2F;.cfg&#x2F;&quot; --work-tree=&quot;${HOME}&quot; &quot;${@}&quot;\n    }\n    config checkout -- ~&#x2F;.gitignore\n    config reset ~\n    config checkout -- ~\n    config submodule update --init --recursive --remote\n</code></pre>\nOne caveat is adding files in subdirectories (`~&#x2F;. config&#x2F;...`), but just requires changes in your gitignore')