Item(by='arp242', descendants=None, kids=[25211584], score=None, time=1606321447, title=None, item_type='comment', url=None, parent=25206915, text='I omitted specific examples as it&#x27;s just really tricky to make them general. It really depends on the environment, intended audience (kernel programmers are not Rails programmers), and most of all: what you&#x27;re doing.<p>For example, sometimes a single function with 5 parameters would be bad UX, whereas in other cases it might be a good option, if all 5 really are mandatory for example, or if you use Python and have named parameters. In other cases, it makes more sense to have 5 functions which accepts a single parameter (no one likes &quot;foo(true, true, false, true, false)&quot;).<p>Not all GUIs are the same either; specialist tools can get away with certain &quot;difficult&quot; UI conventions, since people will be trained for those tools, whereas GUIs can&#x27;t. A lot of design choices are trade-offs without a single objectively &quot;best&quot; solution.<p>I actually trimmed down the article quite a lot from the original draft I wrote over a year ago, since I didn&#x27;t want to get bogged down in &quot;details&quot; about these kind of things, as I could think of a whole bunch of exceptions for every general piece of advice. So instead I opted to try and get the bigger point across that an API (<i>any</i> API) is something humans need to interact with, and is a &quot;user interface&quot;.<p>As for documentation: yeah, I agree. I actually <i>like</i> writing documentation and I&#x27;m often dismayed by the poor quality documentation out there, even from people or organisations I know can do better.')