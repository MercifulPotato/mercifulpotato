Item(by='danShumway', descendants=None, kids=[24832575, 24832199, 24832233, 24832293, 24832954, 24833990, 24832261, 24844421, 24832196, 24832665, 24832984, 24832500, 24833830, 24833391, 24833102, 24832830], score=None, time=1603148940, title=None, item_type='comment', url=None, parent=24831699, text='It seems like this shouldn&#x27;t be the case, at all. Commercial software has a more obvious reason to avoid breaking your stuff and to try and track down bugs.<p>But surprisingly, I&#x27;ve noticed the same thing -- that for me, Free software tends to break less often than proprietary software, that it tends to introduce fewer breaking changes to my workflows, and that when it does break, it tends to get patched more quickly and to (at worst) be easier to work around.<p>This is highly anecdotal (and there are some exceptions). I wouldn&#x27;t make a general, bold claim like the article is making about it. But noticing that general pattern with the software that I use has been one of the biggest driving forces behind me adopting more and more Free software into my core workflows as a policy. In general, if a Free alternative to a proprietary solution exists, I&#x27;ll choose the Free one even if it has fewer features, because I assume that the proprietary version will eventually be more trouble than it&#x27;s worth, or that it will eventually break in a way that significantly disrupts what I&#x27;m trying to do.<p>I&#x27;d be skeptical of saying something empirical about that, I don&#x27;t know that other people using other software wouldn&#x27;t have different experiences than me. But I do find myself kind of nodding along with the article. A lot of the Free software I use, I use for practical reasons -- because I want to get work done, and I don&#x27;t want my computer to break while I&#x27;m trying to get work done.<p>Other people&#x27;s mileage might vary.')