Item(by='yowlingcat', descendants=None, kids=None, score=None, time=1611784097, title=None, item_type='comment', url=None, parent=25933121, text='How long has the author used Python? OO, while responsible for much of the footguns, is also responsible for an enormous amount of Python&#x27;s expressive power. Being able iterate or key into arbitrary objects as if they were lists or dictionaries is enormously powerful, but all of that structure is OO based. It&#x27;s a huge part of what &quot;pythonic&quot; means.<p>&gt; If you&#x27;ve taken the pure-FP&#x2F;hexagonal-architecture pill<p>Writing software is not something you take a conceptual &quot;pill&quot; for. You learn new tools that you add to your toolchest and use at your own discretion. Tools which purport to be able to displace a whole arena of otherwise stable, mature, and high productivity tools better be at least comparable if not significantly better to encourage upgrade. FP as a tool definitely comes in handy for quite a few use cases. FP as an ideology? Not so much.<p>Regarding the latter, I&#x27;m getting a little sick of the FP chauvinism that that pretends that pre-existing software and how it was written is obviously inferior to the new, purely FP way without any real persuasive evidence. Code that&#x27;s written in an overly FP oriented way is no less immune to the same codebase diseases that code written in an overly OO oriented way is. It&#x27;s the map-territory problem all over again.')