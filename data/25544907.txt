Item(by='austincheney', descendants=None, kids=None, score=None, time=1609004218, title=None, item_type='comment', url=None, parent=25542487, text='Agreed!<p>&gt; Computer Programming is not Math. Let me say it again, computer programming is not Math and will never be. You want to learn computer programming, then learn computer programming.<p>Programming is far more aligned with writing than math.  If you want to be a better programmer be a better writer.  Math will not make you a better programmer.<p>Conversely, programming will not make you a better writer, but it will make you better at math.  This is complicated, but provable with testing.<p>The term <i>math</i> is extremely misunderstood.  Math is not a practical exercise, it is a philosophy, a way of thinking.  Lay people believe the word <i>math</i> is interchangeable with <i>arithmetic</i>, which it isn&#x27;t.  Arithmetic is the expression of immediate computation.  Math is more than that.<p>Writing algorithms and instructions is algebra.  Algorithms are always algebra.  Always.  Algebra is the conveyance of instructions, which is inclusive of arithmetic, but is more expansive and accounts for variability.  The word <i>algorithm</i> literally comes from the Latinized name for the father of Algebra, <i>Algorithmi</i>.  <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Muhammad_ibn_Musa_al-Khwarizmi" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Muhammad_ibn_Musa_al-Khwarizmi</a><p>Planning is calculus.  Calculus is the expression of continuous change.  Calculus accounts for states in fluctuation and differentiation.  Calculus allows for thinking in terms of various potentials and collections of decisions.<p>The reason why writing makes you a stronger programmer but math doesn&#x27;t is because math doesn&#x27;t force critical examination like writing does, at least not until you get to Calculus.  The reason programming does make you better at math is because it teaches you to solve tough math problems without ever having to do math, because Math is a philosophy, a way of thinking.<p>This is provable with numbers.  Simply test people, compare the testers, and then compare those differences against programming capability.  This is provable objectively with numbers.  If you want to hire better programmers test for writing performance.  The best filter of a group of candidates, for programming potential, is a tough essay to write under time pressure.<p>When I took the military aptitude test, the ASVAB, the first time I was 17.  My scores indicated that I was smarter than 79% of the people who took the test that year, but the only score that really mattered is the GT score.  It is an examination of solving complex mathematical word problems under time pressure and is graded on a scale of 0-130.  I scored I 107.  Smarter than average but not smart enough to become a military officer.  17 years later when I wanted to be a military officer I needed to retake that test at which point I was smarter than 98% of the population who took the test that year and I scored a GT score of 129 (out of 130).  I had been programming for 6 years at that point.')