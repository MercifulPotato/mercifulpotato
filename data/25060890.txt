Item(by='jrockway', descendants=None, kids=[25061018, 25061202], score=None, time=1605117740, title=None, item_type='comment', url=None, parent=25059755, text='The problem with Docker Hub is that they don&#x27;t let you choose the pricing model.  In the end, bandwidth and CPUs are not free, so someone has to pay.  For a while it was VCs hoping for growth, but we all know that giving stuff away for free is not sustainable forever.<p>The problem with Docker Hub&#x27;s pricing model is there are actually two use cases for Docker Hub.  One is where some random entity makes some software -- they don&#x27;t have any money, so it makes sense for the user to pay to download it.  It&#x27;s cheaper than setting up your own CI and hosting to build images, after all.  That&#x27;s the only pricing model that Docker Hub supports right now.  It may be annoying that it used to be free, but that was just an accident -- you should have been paying for Docker Hub pulls from day one.<p>The other model is where some commercial entity wants to distribute software to their users.  In that case, they&#x27;d be happy to pay for their users to anonymously download it.  But, Docker Hub doesn&#x27;t support this particular model, and that&#x27;s what&#x27;s causing a lot of problems.  (Where I work, this is already a problem for our customers.  I think we&#x27;re going to move to GCR, and like the article mentions, this is a pain because we are locked in -- you can&#x27;t make Docker Hub 302 to your new host.  Everyone has to rewrite their configuration to pick up the new registry, all because Docker won&#x27;t let us pay for their pulls!)<p>The article also talks about NPM being problematic.  I kind of agree with this; I spend a lot of time waiting for my CI system to re-pull node modules.  (Because everything is done in containers, nothing is preserved between builds.  Things can be preserved if you want them to be, but on CircleCI it&#x27;s actually faster to re-pull all the modules from the Internet than to restore from their own caching mechanism.  Shrug.)  I had this problem with Go when modules first came out (our builds were getting ratelimited by Github because a lot of our dependencies happened to be hosted there), but it was easy enough to set up a local module proxy, and it was never a problem for us again.  (Go has since decided to run their own module proxy, and I stopped running my own.  Theirs is great!  But obviously, someday it won&#x27;t be free anymore, but at least running your own is a first-class option.)  NPM, it seems, have never really offered this as an option -- they&#x27;ve never rate limited me, and their documentation says &quot;don&#x27;t worry about it!&quot; which of course makes me worry more ;)')