Item(by='jimmy2020', descendants=None, kids=None, score=None, time=1610226253, title=None, item_type='comment', url=None, parent=25700135, text='Hello Everyone.<p>I’ve been working on a project called DFlex: <a href="https:&#x2F;&#x2F;github.com&#x2F;jalal246&#x2F;dflex" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jalal246&#x2F;dflex</a> that contains multiple packages all written in Pure JavaScript to manipulate DOM elements in a completely new way depends on creating a DOM registry.<p>The ultimate result is moving every element from destination to target with CSS animation. This means all possible operations should be done in 60fps.<p>It is also extendable. In most existing solutions the more elements you are trying to manipulate the more lagging you get. Here, no matter how many elements you are dealing with it’s always going to interpret each movement to CSS transform without asking the browser to get the node for each request. It is not restricted to any frameworks I have examples for React and Vue with some explanations inside each package. And maybe add more later. It includes:<p><pre><code>  • DOM Generator DOM relations generator algorithm.\n  • DOM Store Traverse through the DOM tree using element id.\n  • Drag &amp; Drop Lightweight Solution for a Drag &amp; Drop App based on enhanced store algorithm.\n  • Draggable High-performance draggable elements.\n  • Unit test &amp; end to end test\n  • Packages are decoupled and work separately. Each package has it own universe including test and playground\n</code></pre>\nThere&#x27;s a lot to add and improve with new packages.  I am looking for contributors who like to get involved in open source. So, if you are interested, open an issue, or pull request. I need your support. Thank you!')