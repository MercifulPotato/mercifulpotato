Item(by='nickm12', descendants=None, kids=None, score=None, time=1602302495, title=None, item_type='comment', url=None, parent=24727550, text='&gt; Any (hypothetical) build system that runs the tests after commits have been merged is not great.<p>This is true and it&#x27;s a problem with Brazil at Amazon. Certainly, if every developer does a dry-run build they can verify that their change will build and test. Dry run builds are super-easy to do, run pretty fast, and there&#x27;s a great interface for seeing the test output logs if it fails. But if a developer has permission to push to a package they can do it with doing a dry-run and then the tip of your main branch is not green.<p>That said, I&#x27;ve also worked with a CI&#x2F;CD system (in a large monorepo) that tested every commit before merging. Even that system could not guarantee that the tip of the main branch was green, because the change velocity was so high it wasn&#x27;t practical to serialize the changes. Instead, every change was tested against a known green revision and if it passed and merged cleanly it would be put on the master branch. However, the master branch still had to be tested again because it was possible for two changes to test green and merge cleanly into a revision that failed tests.  Serializing would have taken a lot longer to run (since you couldn&#x27;t test in parallel) and one bad commit would flush the entire queue, meaning your change might be delayed by someone else&#x27;s bad commit. I think this was the right trade-off for that system.')