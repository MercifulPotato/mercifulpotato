Item(by='drdeca', descendants=None, kids=[25064914], score=None, time=1605138583, title=None, item_type='comment', url=None, parent=25063457, text='Is the name you are looking for &quot;bipartite directed graph&quot; ?<p>Well, specifically, a bipartite directed graph equipped with the specific partition, but if  the graph is connected[1], which it should be in this case, then the partition is uniquely defined.<p>I guess such a graph would define another directed graph which has as vertices, the subsets of the &quot;theorem&quot; vertices, and a directed edge from any such subset to another which has 1 more &quot;theorem&quot; vertex, exactly when the &quot;theorem&quot; vertex has (in the original graph) an antecedent proof vertex such that all of the antecedent theorem vertices of that proof vertex are elements of the original subset of the theorem vertices.<p>so, if G = (V, E) is the original graph of theorems and proofs, and T \\subset V is the set of theorems,<p>V&#x27; := \\{ S \\subset A \\}<p>\\forall S \\in V&#x27;, t \\in T, (S, S \\cup t) \\in E&#x27; iff :<p><pre><code>    t \\not\\in S, and \\exists p \\in V s.t. (p,t) \\in E, and \\forall t&#x27; \\in T s.t. (t&#x27;,p) , it holds that t&#x27; \\in S.\n</code></pre>\nG&#x27; := (V&#x27;, E&#x27;)<p>G&#x27; _will_ be a directed acyclic graph, because all of the edges strictly increase the size of the set.\nThen, finding &quot;how can one learn all the prerequisite proofs in order to learn [result]&quot;\ncan be rephrased as &quot;given the current vertex of G&#x27; (which is the set of theorems one already knows), what is a path which will get to any of the vertices of G&#x27; which have as an element the desired element [result] of G ?&quot;.\nThe graph G&#x27; would be exponentially large in the size of T, so probably should not be represented explicitly in memory,\nbut it seems like some shortest path algorithms should still help with this?\nThere are many other properties of the graph G&#x27; which I imagine would be helpful in constructing a shortest path.<p>[1] in the sense that if you forgot the direction of the edges, the result is connected, not in the sense that every pair of vertices can be connected by a directed path in both directions')