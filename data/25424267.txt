Item(by='russell_h', descendants=None, kids=[25425134, 25426003, 25424425, 25425094], score=None, time=1607985101, title=None, item_type='comment', url=None, parent=25420814, text='I&#x27;m the maintainer of one of the affected SAML libraries.<p>People need to stop using SAML. This needs to be a priority. A little background, for those who haven&#x27;t had the displeasure of working with it:<p>When a user wants to log into an application (the &quot;Service Provider&quot;), and is required to SSO against an &quot;Identity Provider&quot;, the Identity Provider basically generates an XML document with information about the user, then signs that document using a thing known as an XML Digital Signature, or XMLDSIG.<p>When you think of &quot;signing&quot; a document, normally you would serialize that document out to bytes, apply your signature scheme over the bytes, then send along both the bytes and the signature. But for reasons which are irrelevant to modern implementations, XMLDSIG prefers to stuff the signature metadata back inside the XML document that was just signed. Obviously this invalidates the signature, so you also inject some metadata instructing receivers on how to put the document back how it was. There are several algorithms available for this. Then you ship around that XML document. Basically means that when the Identity Provider receives one of these documents it needs to:<p><pre><code>  1. Parse the XML document (which cannot yet be trusted)\n  2. Find the signature inside the document\n  3. Find the metadata about what algorithm(s) to use to restore the document\n  4. Run the document through whatever transforms are described in that metadata (keep in mind that up to this point the document might well have been supplied by an attacker)\n  5. Serialize the transformed document back out to bytes, being careful not to touch any whitespace, etc\n  6. Verify the signature over the re-serialized document\n</code></pre>\nIf all of this succeeds and was implemented perfectly, you can trust the output of step 5. Ideally you should re-parse it. A common failure mode is trusting the original input instead, so be careful about that.<p>Obviously this is a crazy approach to one of the most security-critical parts of an application on the internet, and it breaks all the time.<p>Unfortunately people persist in using this fundamentally broken protocol, so huge thank you to the team at Mattermost for their research in this area.')