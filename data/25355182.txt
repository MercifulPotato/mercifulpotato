Item(by='luizfelberti', descendants=None, kids=None, score=None, time=1607486470, title=None, item_type='comment', url=None, parent=25353116, text='I&#x27;m confused, as you don&#x27;t seem to be replying to any point I&#x27;ve made...<p>&gt; ~1.5x reed solomon is the default these days, again, unless you need read throughput performance<p>I&#x27;m not surprised that Reed-Solomon is the &quot;default these days&quot; given that it exists since the 1960&#x27;s, and that the most widely available and deployed open-source distributed filesystem is HDFS (which uses Reed-Solomon). However I don&#x27;t see how that is to be taken as a blind endorsement for it, especially given that the paper in reference explicitly compares itself to Reed-Solomon based systems, including concerns regarding reconstruction costs, performance, and reliability.<p>&gt; Also, these days the storage of the data doesn&#x27;t have to be at the same machine that processes the data<p>Even though what you said here is correct, I don&#x27;t see how that&#x27;s relevant to the referenced paper, nor do I think I implied that I hold a contrary belief in any way from what I said.<p>&gt; Also2, this is completely independent of consistency guarantees<p>My comment about consistency referred only to the fact that you cannot &quot;simply&quot; spin up more replicas to increase read throughput, because consistent reads often have to aqcuire a lock on systems that enforce stronger consistency, so your comments regarding throughput are not universally true, given that there are many systems where reads cannot be made faster this way, as they are bottle-necked by design.<p>&gt; Properly done Reed-Solomon has the same durability guarantees as plain old replicated setup<p>This is not true unless the fragments themselves are being replicated across failure domains, which you seem to address with your next comment with &quot;you need geographic replication if your data cannot be accidentally lost without serious consequences&quot;. All of this, however, is directly addressed in the paper as well:<p>&gt; The advantage of erasure coding over simple replication is that it can achieve much higher reliability with the same storage, or it requires much lower storage for the same reliability. The existing systems, however, do not explore alternative erasure coding designs other than Reed-Solomon codes. In this work, we show that, under the same reliability requirement, LRC allows a much more efficient cost and performance tradeoff than Reed-Solomon.')