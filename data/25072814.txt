Item(by='cactus2093', descendants=None, kids=[25073277, 25079768], score=None, time=1605204949, title=None, item_type='comment', url=None, parent=25072314, text='For some reason I&#x27;ve run into this type of dependency chain issue many times in JS, but have never run into it in Python despite using both languages pretty heavily. Maybe because the JS ethos is to change things so quickly, if you&#x27;re not making a major breaking change to your package&#x27;s API every year or two then you&#x27;re getting left behind (only kind of joking). Also probably because the standard library is so small in JS (or at least it used to be, and may projects want to be compatible with at least some older browsers) so the average number of dependencies that a typical library has is probably much higher than in Python.<p>I really don&#x27;t get the fuss about the global dependency management though, maybe I would change my mind if Python shipedp a great implementation of it. But I feel like the problem is already solvable in multiple ways with containers, VMs, or virtualenvs and I don&#x27;t think yet another abstraction to separate environments would add much value to my day to day workflow building python apps.')