Item(by='jasode', descendants=None, kids=None, score=None, time=1611408759, title=None, item_type='comment', url=None, parent=25880880, text='I look at the history of Java as a case study in how original intentions don&#x27;t play out.  Hype, disillusionment, irony.<p>Hype:  Java <i>&quot;write once run anywhere&quot;</i> JVM was super hyped as the &quot;Microsoft killer&quot;.  In reality, the forces that reduced MS&#x27;s desktop power were Apple iPhone &amp; Google Android.  MS&#x27;s server software influence was reduced by Linux&#x2F;MySQL and by further by Amazon AWS running that open source stack.<p>Java was also predicted to be the &quot;C++ killer&quot; because all those wasted extra cpu cycles on fat desktops could be used for GC to make &quot;manual memory management&quot; obsolete.  Java did succeed on the server (e.g. Ebay, Amazon, Google, all run a lot of Java on backend servers) but C++ today still has the spotlight for machine learning, games, desktop apps, etc.<p>Irony:  Java was the &quot;serious&quot; language for browsers and Javascript the &quot;toy&quot; language.  In reality, Java Applets died along with Adobe Flash and MS Silverlight and <i>Javascript</i> evolves by bottom-up popularity to code complex browser apps.<p>On the desktop side, it looks like a Javascript runtime (Electron, Deno) will have more deployment than a JVM-based runtime.<p>If I can be bold and apply learnings from Java&#x27;s history to today&#x27;s landscape... I don&#x27;t think Julia will achieve massive popularity for math programming even though the language was designed for it and the evangelists predict it.  Instead, Python usage will always be ahead in that domain.  Julia needs an influential player like NVIDIA CUDA or Google Tensorflow to adopt Julia as a first-class API to change its future trajectory and it doesn&#x27;t look like that will happen.<p>Similar counterintuitive history with the BASIC language.  The &quot;B.A.&quot; in &quot;BASIC&quot; stands for &quot;Beginner All-purpose&quot; but it turns out that Python became the more popular beginners language.<p>The eventual history doesn&#x27;t always agree with original design intentions of the programming language.')