Item(by='ACow_Adonis', descendants=None, kids=[24895138, 24901417, 24897996], score=None, time=1603709549, title=None, item_type='comment', url=None, parent=24894502, text='It is and it isn&#x27;t :)<p>Obviously opinions on the language shouldn&#x27;t be given too much weight if a person hasn&#x27;t spent too much time investigating&#x2F; using it.<p>As a non-JavaScript person,  all the JavaScript examples looks like gobbledygook unless I sit down and consciously think about what the examples are showing, and it kinda hurts my head a bit,  but I can slowly force myself through it.<p>But as someone with a few years of lisp under my belt,  even the closure examples (and I&#x27;ve never used clojure) parse pretty close the speed of thought.<p>It really is hard to explain to someone who hasn&#x27;t used lisp for 6-12 months, but there really is a lisp &quot;enlightenment&quot; experience, which is totally unlike anything I&#x27;ve experienced with any of my other languages.  I&#x27;m not saying this makes it better or worse than other languages, but I am saying it&#x27;s real,  and that lisp code is not only parsable, but exceptionally so to an experienced lisp programmer. One day you&#x27;re sitting there thinking there&#x27;s a whole lot of brackets, balancing and indentation in this godforsaken language, and then something just clicks over in your brain and you don&#x27;t even see the brackets any more and it&#x27;s all just data structure, and you see the shape of it, and you say to yourself &quot;well that was pretty fucking cool&quot; and from that day on you don&#x27;t really see the brackets any more, it&#x27;s all just names, indentation and data structures.<p>edit: and it should also be recognised that an editor implementing parentheses balancing, indentation options, and keyword lookup&#x2F; completion also becomes a relatively trivial exercise when your code consists of variable names and structured data.')