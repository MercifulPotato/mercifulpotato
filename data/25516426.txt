Item(by='willtim', descendants=None, kids=[25516687], score=None, time=1608721406, title=None, item_type='comment', url=None, parent=25516133, text='By &quot;compositional datatypes&quot;, I mean being able to define datatypes and functions on them in a modular fashion. I gave a very simple example with enums. For a real world use case, imagine a compiler pipeline, where we have an AST that we are desugaring over multiple steps. Ideally we want a succession of ASTs that remove the form being eliminated, so the AST type can guarantee it&#x27;s eliminated. This is very easy with structural variants, there&#x27;s no need to actually define and name each separate AST, which differs only slightly.\nOr imagine we are typing a SQL join that is a merge of two existing record types. Such &quot;compositional data types&quot; can be achieved with elaborate encodings and type-level computations in a language like Haskell (see e.g. Data types `a la carte), but it&#x27;s difficult and somewhat ugly. There is an opportunity here for improvement.')