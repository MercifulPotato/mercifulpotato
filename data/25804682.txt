Item(by='cgardens', descendants=None, kids=None, score=None, time=1610825093, title=None, item_type='comment', url=None, parent=25801260, text='(Airbyte Engineer)<p>I think what you&#x27;re saying here is often true until it isn&#x27;t. For a personal project where you&#x27;re pulling data from one API? Sure.<p>Once you have an engineering system with multiple engineers relying on the data to be pulled reliably, having a host of individual ELT crons gets brittle really fast. At the past couple companies I&#x27;ve worked out this same narrative has played out:<p>&quot;Oh we need to pull data from X let&#x27;s build a cron.&quot;\n(3 months later.)\n&quot;Wait a second why is all of this data 1 month old? Oh the cron hasn&#x27;t run in a month because of a schema change. Let&#x27;s add monitoring.&quot;\n(3 months later.)\n&quot;We need to change the cron to pull fields A,B,C hourly and field D,E,F weekly.&quot;\n(3 months later.)\n&quot;The amount of data we&#x27;re pulling is making this too expensive, we need to implement some sort of incremental replication.&quot;\n... etc<p>It always starts out as a &quot;small&quot; script but they rarely stay that way. In my experience, they end up needing the same features that get rebuilt over and over again on an ad hoc basis. We want an engineer to be able to get these features out of the box.<p>We generally think that for most engineering teams (even pretty small ones) the ad hoc crons for pulling data become nightmarish pretty fast. This problem is compounded if you are already using some other ETL as a service provider but they don&#x27;t support one of your data sources so you also have a separate set of crons. By taking an OSS approach we&#x27;re trying to cover that long tail, so that all of your ELT can be managed using one tool.')