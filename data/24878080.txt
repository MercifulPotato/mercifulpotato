Item(by='bananaface', descendants=None, kids=None, score=None, time=1603532982, title=None, item_type='comment', url=None, parent=24872837, text='I think that&#x27;s why I&#x27;m being downvoted too, but frankly if the codebase is so bad that something is being copy&#x2F;pasted hundreds of times to the point of unmaintainability, the abstractions that same team would build would probably also be disastrous, and much harder to deal with. Is that preferable?<p>But tbh, I&#x27;m skeptical of the premise to begin with. It&#x27;s still easier to gradually consolidate 100 slightly different uses of a pattern than blindly create an  abstraction that adequately covers those 100 uses. If your team is useless, it&#x27;s better that their code be fragmented and atomic <i>anyway</i>, because big mistakes are inevitable. You don&#x27;t want to make it hard to touch those mistakes. You want that code to be uncoupled &amp; disposable.<p>But at that point the argument is getting pretty abstract. Depends on the specific codebase.')