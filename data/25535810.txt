Item(by='JyrkiAlakuijala', descendants=None, kids=None, score=None, time=1608894967, title=None, item_type='comment', url=None, parent=25529684, text='<a href="https:&#x2F;&#x2F;gitlab.com&#x2F;wg1&#x2F;jpeg-xl&#x2F;-&#x2F;blob&#x2F;master&#x2F;lib&#x2F;jxl&#x2F;opsin_params.h" rel="nofollow">https:&#x2F;&#x2F;gitlab.com&#x2F;wg1&#x2F;jpeg-xl&#x2F;-&#x2F;blob&#x2F;master&#x2F;lib&#x2F;jxl&#x2F;opsin_p...</a> has the numbers for sRGB to XYB.<p>Basically the M1 matrix for linear sRGB [linearR, linearG, linearB, 1] to approximate cone responses:<p>(I think in this normalization 1 means 250 nits, but not completely sure at this stage of optimizations -- we changed normalizations on this recently.)<p>M1 = [\n[0.300, 0.622, 0.078, 0.0038], \n[0.240, 0.682, 0.078, 0.0038], \n[0.243, 0.205, 0.552, 0.0038],\n[0, 0, 0, 1]\n]<p>then non-linearity by cubic root, in decoding cube, see: <a href="https:&#x2F;&#x2F;gitlab.com&#x2F;wg1&#x2F;jpeg-xl&#x2F;-&#x2F;blob&#x2F;master&#x2F;lib&#x2F;jxl&#x2F;dec_xyb-inl.h#L77" rel="nofollow">https:&#x2F;&#x2F;gitlab.com&#x2F;wg1&#x2F;jpeg-xl&#x2F;-&#x2F;blob&#x2F;master&#x2F;lib&#x2F;jxl&#x2F;dec_xyb...</a><p>The LMS values after cubic root are coded by this matrix M2:<p>M2 = [[1, -1, 0], [1, 1, 0], [0, 0, 1]]<p>In practice Y-&gt;X and Y-&gt;B correlations are decorrelated, so M2 looks more like this:<p>M2 = [[1+a, -1+a, 0], [1, 1, 0], [b, b, 1]]<p>after decorrelations a is often around zero and b is around -0.5.<p>The first dimension in this formulation is X (red-green), second Y (luma), third B (blueness-yellowness).<p>For quantization, X, Y and B channels are multiplied by constants representing their psychovisual strength. X and B channels (the chromacity channels) are less important when quantization is low, and particularly X channel increases in strength when more quantization is done.<p>Cube is beautiful in the sense that it allows scaling the intensity without considerations, but it is quite awful in the near black psychovisual performance. That is why sRGB added a linear ramp, and I added biasing (homogeneous transform instead of 3x3).')