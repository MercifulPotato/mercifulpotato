Item(by='naikrovek', descendants=None, kids=[25039469, 25043077, 25039472], score=None, time=1604952627, title=None, item_type='comment', url=None, parent=25038273, text='Game development problems are very often global state manipulation problems.  In a given game, many things may have genuine need to be able to read and write to multiple global variables once per frame (that&#x27;s usually somewhere between 30 and 240 times per second), and that is after all unnecessary global state has been removed.<p>Enterprise developers often look very poorly upon the solutions that game developers come up with, but game development is an entirely different realm, very far away from any enterprise software development stuff I&#x27;ve worked on, or even heard of.  I&#x27;ve looked.  I didn&#x27;t believe this myself for a long time.<p>Games have very strict performance requirements that enterprise software simply does not have.  Virtually no one in enterprise software cares about performance, really, and certainly not as a primary concern.  Enterprise developers will often just throw more RAM or CPU at the problem until it goes away.  I mean why not, that&#x27;s an option that is on the table.  Of course they&#x27;re going to take that route sometimes.  Game developers <i>can&#x27;t</i> do this, because they&#x27;re not in control of the hardware that their game is run on.<p>Games are often scored on how good they look, and how well they perform.  Game sales are a function (at least partially) of the score&#x2F;rating that the title attains, and game developers are paid out of the money that game sales provide.  Concerns that do not result in an improved critical game rating are secondary.  So, there is a very strong hunger there for performance which simply does not exist in other software development fields.  Until enterprise software developers are paid based on the performance of the applications they write, no one who has NOT developed a game and fought performance problems along the way can ever understand.<p>There are games which consume nearly the entire bandwidth between CPU and RAM on a modern PC -- continuously -- and this is after many optimization passes to prune the data that is needed from RAM at any particular moment in time and make it as small as possible.<p>Game development is just an entirely different thing than any other kind of software development.  Languages created with general purpose use in mind may achieve (and have achieved) some success in game development, but those languages will get in the way of the developer at least as often as they aid the developer.  Same rule applies for general software engineering rules.')