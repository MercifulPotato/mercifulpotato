Item(by='siraben', descendants=None, kids=None, score=None, time=1605546987, title=None, item_type='comment', url=None, parent=25112907, text='In a similar vein, see[0] which talks about rewrite systems from a more formal viewpoint. On the practice side, GHC performs rewrite rules[1], an example of which is<p><pre><code>  &quot;map&#x2F;map&quot;    forall f g xs.  map f (map g xs) = map (f.g) xs\n</code></pre>\nCombining two calls to map into one. While this seems silly, terms like this can arise as a result of other compiler optimizations.  GHC can even remove intermediate data structures[2] entirely, so writing factorial as<p><pre><code>  factorial n = product [1..n]\n</code></pre>\nwould result in an efficient first-order program without the list at all.  Another example of where rewrite rules come in handy is linting[3]. It does seem that a lot of these rewrites are possible only in a pure language, otherwise the compiler would have to resort to analyzing side-effects.<p>[0] www.cs.tau.ac.il&#x2F;~nachum&#x2F;papers&#x2F;taste-fixed.pdf<p>[1] <a href="https:&#x2F;&#x2F;downloads.haskell.org&#x2F;~ghc&#x2F;7.0.3&#x2F;docs&#x2F;html&#x2F;users_guide&#x2F;rewrite-rules.html" rel="nofollow">https:&#x2F;&#x2F;downloads.haskell.org&#x2F;~ghc&#x2F;7.0.3&#x2F;docs&#x2F;html&#x2F;users_gui...</a><p>[2] <a href="https:&#x2F;&#x2F;users.cs.northwestern.edu&#x2F;~robby&#x2F;courses&#x2F;395-495-2017-winter&#x2F;deforestation-short-cut.pdf" rel="nofollow">https:&#x2F;&#x2F;users.cs.northwestern.edu&#x2F;~robby&#x2F;courses&#x2F;395-495-201...</a><p>[3] <a href="https:&#x2F;&#x2F;github.com&#x2F;ndmitchell&#x2F;hlint" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;ndmitchell&#x2F;hlint</a>')