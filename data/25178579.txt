Item(by='a7b3fa', descendants=None, kids=None, score=None, time=1606061512, title=None, item_type='comment', url=None, parent=25177290, text='Neat! I enjoyed your thoughts about choosing a data structure and editor component. I&#x27;m also building something in this space (<a href="https:&#x2F;&#x2F;thinktool.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;thinktool.io&#x2F;</a>, <a href="https:&#x2F;&#x2F;github.com&#x2F;c2d7fa&#x2F;thinktool" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;c2d7fa&#x2F;thinktool</a>), and I decided on a somewhat different data structure, with pros and cons.<p>Instead of having pages that contain blocks inside of them (like Roam), I decided to have just one type of item. These items can have other items as children and parents, and they also contain text content which can link (bidirectionally) to other items.<p>The main advantage of this approach is that items can have multiple parents. So in practice, you never have to think about whether a note should be its own page or just a block inside a different page. This just feels more elegant than Roam&#x27;s approach to me.<p>The main disadvantage is that you&#x27;re now working with a graph rather than a tree. You can end up with funky situations like an item that&#x27;s its own parent. Since I still want the user to interact with the app through a tree-based UI, I have to add an intermediary data structure representing what the user can actually see. This data structure needs to be built lazily as the user expands and collapses items, so we don&#x27;t try to represent an infinite loop.<p>Whenever the user does something (adds an item, edits it, creates a link, etc.), we need to update both the intermediary data structure and the persistent data -- and ensure that these changes are kept in sync. For example, adding a link is a simple change in the graph, but it may require multiple updates to the tree.[1]<p>I also ended up going with ProseMirror for the editor component (after trying Quill, Slate, an input-based approach and using contenteditable directly). I&#x27;m really happy with ProseMirror, even though integrating it wasn&#x27;t entirely pain-free.[2]<p>---<p>[1] You can see the code for the tree-representation here if you&#x27;re interested, although it&#x27;s not necessarily written for public consumption: <a href="https:&#x2F;&#x2F;github.com&#x2F;c2d7fa&#x2F;thinktool&#x2F;blob&#x2F;master&#x2F;src&#x2F;client&#x2F;src&#x2F;tree.ts" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;c2d7fa&#x2F;thinktool&#x2F;blob&#x2F;master&#x2F;src&#x2F;client&#x2F;s...</a><p>[2] The editor code is here: <a href="https:&#x2F;&#x2F;github.com&#x2F;c2d7fa&#x2F;thinktool&#x2F;blob&#x2F;master&#x2F;src&#x2F;client&#x2F;src&#x2F;ui&#x2F;Editor.tsx" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;c2d7fa&#x2F;thinktool&#x2F;blob&#x2F;master&#x2F;src&#x2F;client&#x2F;s...</a> -- same disclaimer as above.')