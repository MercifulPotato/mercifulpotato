Item(by='Arnavion', descendants=None, kids=None, score=None, time=1606624171, title=None, item_type='comment', url=None, parent=25242897, text='For a uM rule like:<p><pre><code>    foo.com bar.com css allow\n</code></pre>\nwhich means &quot;allow foo.com to fetch css from bar.com&quot;, the corresponding uBO static rule is:<p><pre><code>    @@||bar.com^$domain=foo.com,css,allow\n</code></pre>\nThe full list of things that can be allow&#x2F;block&#x27;d by uBO is at <a href="https:&#x2F;&#x2F;github.com&#x2F;gorhill&#x2F;uBlock&#x2F;wiki&#x2F;Static-filter-syntax#static-network-filtering" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gorhill&#x2F;uBlock&#x2F;wiki&#x2F;Static-filter-syntax#...</a><p>I have a &quot;block everything by default&quot; rule at the top that&#x27;s:<p><pre><code>    *$css,font,frame,media,object,ping,script,websocket,xhr\n    *$image,redirect=1x1.gif\n    *$csp=worker-src &#x27;none&#x27;\n    @@*$1p,css,frame,image\n</code></pre>\nwhich means:<p>1. Block a bunch of things by default.<p>2. Block images by replacing them with the built-in 1x1 GIF instead of canceling the request.<p>3. Disable web workers by setting the CSP worker-src.<p>4. Override the previous rules by allowing first-party CSS, frames and images. (The @@ means it&#x27;s an override rule.)<p>(The fact that my default is to block everything is why the first example I gave above starts with @@ too.)<p>Web workers can be allowed on a per-site basis by overriding the csp directive with a reset:<p><pre><code>    @@||foo.com^$csp\n</code></pre>\nLastly, I have a dynamic rule to allow `&lt;noscript&gt;` tags to be rendered:<p><pre><code>    no-scripting: * true\n</code></pre>\nThen, for every static rule where I enable JS for a domain, I add a corresponding `no-scripting: $domain false` in the dynamic rules.<p>It&#x27;s annoying to have to move between static and dynamic rules when deciding to enable JS on a site, but I&#x27;m not sure there&#x27;s a better way. Neither static nor dynamic rules individually support everything that uM could do - static rules can&#x27;t block inline JS nor render `&lt;noscript&gt;` content, and dynamic rules can&#x27;t block every kind of request.<p>Static rules are also nice in that you can have empty lines and comments and arbitrary ordering of your rules, so it&#x27;s easier to group rules in sections based on the domain names, add comments, etc. Dynamic rules however are like uM&#x27;s rules and are forced to be sorted by domain name with no empty lines or comments.')