Item(by='nomy99', descendants=None, kids=None, score=None, time=1609015469, title=None, item_type='comment', url=None, parent=25539200, text='made the modification and tested on leetcode and it looks like the recursive solution has about the same run time as the iterative one, around 230 ms..<p><a href="https:&#x2F;&#x2F;leetcode.com&#x2F;submissions&#x2F;detail&#x2F;434867391&#x2F;" rel="nofollow">https:&#x2F;&#x2F;leetcode.com&#x2F;submissions&#x2F;detail&#x2F;434867391&#x2F;</a><p>def binary_search(self, numbers: List[int], target: int, lo, hi) -&gt; int:\n        middle_index = lo + ((hi - lo) &#x2F;&#x2F; 2)\n        middle_number = numbers[middle_index]\n        if middle_number == target:\n            return middle_index<p><pre><code>        if hi - lo == 1:\n            # check both\n            return hi if numbers[hi] == target else -1\n        if hi == lo:\n            return hi if numbers[hi] == target else -1 \n        \n        if middle_number &gt; target:\n            return self.binary_search(numbers, target, lo, middle_index)\n        elif middle_number &lt; target:\n            return self.binary_search(numbers, target, middle_index, hi)</code></pre>')