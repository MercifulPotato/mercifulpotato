Item(by='jacobobryant', descendants=None, kids=None, score=None, time=1607708472, title=None, item_type='comment', url=None, parent=25384540, text='First I get the text of each article using Newspaper[1] (no rss involved). Then I used tf-idf and k-means to cluster the articles (I followed this tutorial[2]). Then I combine the clusters with my collaborative filtering model using feature augmentation: for each cluster, I generate N &quot;fake users&quot; who like each item in their cluster, and I add that to the rest of the rating data.<p>So in effect, content-based filtering is used to handle cold start (when a new article is submitted which doesn&#x27;t have many ratings yet, the fake user ratings will dominate it), and then as real user ratings are gathered, it will switch gradually to relying only on collaborative filtering.<p>[1] <a href="https:&#x2F;&#x2F;newspaper.readthedocs.io&#x2F;en&#x2F;latest&#x2F;" rel="nofollow">https:&#x2F;&#x2F;newspaper.readthedocs.io&#x2F;en&#x2F;latest&#x2F;</a><p>[2] <a href="http:&#x2F;&#x2F;brandonrose.org&#x2F;clustering_mobile" rel="nofollow">http:&#x2F;&#x2F;brandonrose.org&#x2F;clustering_mobile</a>')