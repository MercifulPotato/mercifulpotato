Item(by='loup-vaillant', descendants=None, kids=[25628198, 25627577, 25627179], score=None, time=1609724580, title=None, item_type='comment', url=None, parent=25626445, text='&gt; <i>In my opinion, hash tables, btrees and the like in the standard library should probably swap to flat lists internally when the number of items in the collection is small. I&#x27;m surprised more libraries don&#x27;t do that.</i><p>If I recall correctly, the STL provides guarantees that prevents it from taking advantage of flat lists. I <i>think</i> some containers (not arrays) guarantee that they don&#x27;t move the address of whatever they&#x27;re containing, even if you insert or remove elements. Even if they switched to flat lists, it would be a flat list of <i>pointers</i>, with all the incurred overhead.<p>Likewise, I believe I have heard of small string optimisation being impossible with std::string for similar reasons.')