Item(by='username90', descendants=None, kids=[25499001], score=None, time=1608560007, title=None, item_type='comment', url=None, parent=25494187, text='&gt; As a software eng. in those spaces, you&#x27;re required to grasp heavy math (quaternions, Lie Algebras, you name it), find suitable numerical algorithms and implement them them bug-free in a hard-to-work-with low-level language such as C++ (because performance matters).<p>None of that is particularly hard though. Quaternions and lie algebras sound esoteric but are simple to work with, C++ is standard basically anywhere that cares about performance including a large part of Google, and finding suitable algorithms and implementing them bug free is the absolute minimum of what is expected of people.<p>Now, the work people do at Google isn&#x27;t that hard either, but it isn&#x27;t like your average engineer could easily do the job. At Google it is expected that a typical mid level engineer can design and build systems to handle millions of QPS, be fault tolerant to prevent errors from propagating and bringing all of Google at once, know how to write distributed scripts to do operations on user data like migrating it without bringing down the service, know how to debug errors in distributed systems, track it between servers and try to find its origin, create useful health metrics for servers so you can see what is going on since you have thousands of them at once and you can&#x27;t look at them individually, etc. In practice the end result is that they just copy data between servers, but copying data at reasonable cost to the right places on live servers when you have many thousands of servers all over the world is hard.<p>And that is just the typical boring backend job, a significant part of Google is only low level libraries, algorithmic performance, machine learning, databases, compiler optimizations for C++, video encodings, etc etc. I&#x27;ve worked on both at Google and I wouldn&#x27;t say that one is harder than the other, however working on algorithms and libraries is more fun and less stressful than backend work so I prefer it. Also the team working at the more &quot;fun&quot; stuff wasn&#x27;t that much better  either, I don&#x27;t think the people working at backend would have a terribly difficult time doing those jobs either. After all Google does interview and hire everyone as if they would work on interesting technical stuff, so everyone knows at least the basics of maths and algorithms.<p>&gt; Of course, there are some ambitious roles in the FAANGs (the algos behind distributed databases don&#x27;t figure out themselves), but they come into the picture later, once the startup is already scaling up.<p>You talked about the typical FAANG engineer though. They aren&#x27;t geniuses but they are still pretty smart. You shouldn&#x27;t underestimate them.')