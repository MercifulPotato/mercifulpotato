Item(by='alerighi', descendants=None, kids=None, score=None, time=1611505669, title=None, item_type='comment', url=None, parent=25890436, text='That is not an elegant solution. That way you would forever had 3 in the name, even for future version of Python (e.g. python4, that will not break compatibility with old source code and thus making a .py4 wouldn&#x27;t make sense).<p>In your shell you don&#x27;t run &quot;java8&quot; or &quot;java11&quot;, you just run &quot;java&quot;, and then it&#x27;s the matter of what version of java JDK you have in your PATH. The same with all other language interpreters and compilers, you don&#x27;t run gcc9 or node14. Why doing something different for python?<p>Really, the mistake of python3 was to break compatibility with past programs. A lot of changes could have been done more gradually, in the first version require a __future__ import, then gradually remove compatibility with old features, and then remove them completely, making the new way the default and thus no longer require the __future__ import. And I think it will be the way for next python version, so in theory we will never have the same problem again.<p>Also to me it was an error for distros to continue packaging python2 as python. Other distributions, like ArchLinux, switched everything to python3 as default a lot of time ago, it&#x27;s only Ubuntu that continued to ship python2 as python, thus making a lot of programmers relying on it. It would make sense that the command without the name refers to the latest version, and not the legacy one.')