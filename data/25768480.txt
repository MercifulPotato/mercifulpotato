Item(by='TheDong', descendants=None, kids=[25771175], score=None, time=1610575019, title=None, item_type='comment', url=None, parent=25767190, text='&gt; Yes, only users of a library or package really have sufficient context to articulate the pain points, bugs, and missing features<p>This is a bizarre viewpoint. The creator&#x2F;developers of an open source project usually has a far better understanding of the bugs, missing features, etc of their project. They&#x27;ve spent months to years thinking about it. They understand the technical restrictions that result in various tradeoffs. Users making feature requests rarely have the full picture or understand the technical tradeoffs at play, unless they implement or fix their issue themselves.<p>Maybe there&#x27;s a 1&#x2F;3000 issue where a user gives thoughtful and meaningful insight into a new feature the project could have which the maintainer hasn&#x27;t thought of, but the vast majority of issues are not that. The vast majority are users who don&#x27;t understand the technical tradeoffs of the project, don&#x27;t understand the maintainer&#x27;s goals, etc.<p>Again, if a user has a good idea for the project, the user should fork it and implement it. If the user can&#x27;t, then they shouldn&#x27;t be asking the maintainer to.<p>In addition, if a user feels like they&#x27;re spending enough time to &quot;put work into documenting issues&#x2F;features&quot; that they&#x27;re net losing time after the savings of being able to use the project (vs implement it all themselves), then they should neither file issues nor use the project at all.<p>&gt; Then why are they open source?<p>Projects don&#x27;t have to be open source because someone wants bug reports from users who have no clue what they&#x27;re talking about.<p>In fact, if you listen to maintainers, the vast majority don&#x27;t want that crap.<p>Projects can be open source because &quot;information wants to be free&quot;, or &quot;I want my users to be able to fork it, they have rights&quot;, or &quot;I hope someone learns from this&quot;, or &quot;I want people to contribute code (but not dumb issues)&quot;.<p>For the most part, an open source project wants attention from a group of people - people who find the project useful already, and who are willing to not incur a maintenance burden.<p>Just because the author of the project does want people who find the project useful as-is to use it doesn&#x27;t mean that they&#x27;re inviting people who have issues with it to use it and complain.<p>&gt; Users should still complain and lobby maintainers to fix things, as that’s far more helpful and reasonable than “take it or leave it.”<p>No, it&#x27;s not more reasonable for users to complain unless the maintainer asks users to complain. If the maintainer has a contributing.md or a page on their site that says something like &quot;please send me poorly thought out feature requests, hate mail, and entitled bullshit&quot;, then yes, users can do that.<p>Otherwise, the user should indeed take it or leave it. If the maintainer has a contributing.md saying &quot;I might accept PRs&quot;, the user can absolutely discuss implementing a feature with the maintainer.<p>The default, if there&#x27;s no documentation about expectations, is that it is 100% take it or leave it.<p>You seem to think that all open source projects are like RHEL, where a huge company runs it and all users pay thousands of dollars for support.\nIn that specific case, yes it&#x27;s totally fine for users to send support emails describing issues they ran into.<p>The majority of oss projects are not that. The majority are some dude who hacked something out and hopes other people like it too. If other people like it, cool. That does not give other people a reasonable right to expect that person to actually do any serious maintainership of it.<p>That seems to be your big disconnect. Users are entitled to nothing more than the existing code given to them in an OSS project unless the author explicitly adds additional expectations (such as having a contributing.md asking for issues or having a bug report button in the project or something).<p>I have to ask, have you maintained many open source projects? Have you seen things from both sides of the fence? What interactions have led you to have this viewpoint?<p>Your viewpoint seems quite foreign to the maintainers I&#x27;ve met, and I&#x27;m curious what has shaped it.<p>My perspective has largely been shaped by maintaining OSS projects, talking to other maintainers, and reading secondary sources on the free software ethos.')