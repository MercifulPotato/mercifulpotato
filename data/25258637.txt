Item(by='colejohnson66', descendants=None, kids=[25259113, 25259780, 25259334], score=None, time=1606768618, title=None, item_type='comment', url=None, parent=25258550, text='For those unaware, ARM (as with many RISC-like architectures) uses 4 bytes for each instruction. No more. No less. (THUMB uses 2, but it’s a separate mode) x86, OTOH, being CISC-based in origin, has instructions ranging from a single byte all the way up to <i>15</i>[a]).<p>[a]: It is possible to write instructions that would be 16 or more bytes, but the micro architecture will “throw” an illegal instruction exception if it encounters one. Intel doesn’t say <i>why</i> there’s a limit, but they do mention (in the SDM) that they may raise or remove the limit in the future.<p>Why 15 bytes? My guess is so the instruction decoder only needs 4 bits to encode the instruction length. A nice round 16 would need a 5th bit.')