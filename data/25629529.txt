Item(by='josephg', descendants=None, kids=None, score=None, time=1609755715, title=None, item_type='comment', url=None, parent=25629247, text='Nope not really! It is large, but you don&#x27;t need to understand the big picture. Explore!<p>I&#x27;d either start at a query entry point, or find the email delivery path or something. Or skim through the files and see if anything catches your eye. Or invent a question for yourself - how does X work (for some X), and see if you can find that part of the code.<p>Wherever you start, explore around a bit then go deep. See if you can understand for yourself how some small, interesting part works (by tracing out the various structs and function calls). Understanding how the whole program fits together is a separate skill - but don&#x27;t worry too much about it.<p>Personally I fell in love with the code in src&#x2F;lib&#x2F;memarea and mempool. The way dovecot handles memory pools is super clever. There&#x27;s also lots of src&#x2F;lib-X directories, and they&#x27;re reasonably self contained if you want to skim that list and find something more focussed.<p>If you haven&#x27;t read much code before and dovecot feels too big and scary, start with something smaller. I can also recommend reading the sourcecode for git or the code for redis. Oh, and if you do, do yourself a favour and checkout one of the earlier versions of those projects. The lines added early in a project&#x27;s life are usually more succinct and important compared to lines added later on. So earlier versions are usually better reads. When I read redis, I think I read the code for redis 2.0 or something.')