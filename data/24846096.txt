Item(by='eqvinox', descendants=None, kids=[24846410], score=None, time=1603271993, title=None, item_type='comment', url=None, parent=24845868, text='I think your question&#x2F;problem is actually underspecified to be answerable.  What exactly do you want? (non-exhaustive list):<p>1. have your entire system use a newer version of some library?<p>2. have a specific part of your system use a newer version of some library?<p>3. build a particular package to use a newer version of some library?<p>4. just get access to the accompanying executables&#x2F;tools from a newer version of a library?<p>5. get a whole bunch of versions so you can test your project against them?<p>It really depends, and, sure, some of these are very hard to do... but also some of these are really hard problems to begin with, so it&#x27;s not unsurprising the solution is also a bit involved.<p>(My answers for these cases:)<p>1. build a package for the newer library from source;  either from included packaging or by transplanting packaging from an earlier version.  If it doesn&#x27;t work, this is an indicator that you have a bigger problem and maybe shouldn&#x27;t be shoehorning this in.<p>2. If the newer version is a higher SO version, install that and rebuild part of your system to use it.  (Because you need to rebuild anyway.)  If it&#x27;s the same SO version you&#x27;ll need to install it somewhere else and set up LD_LIBRARY_PATH.<p>3. Just build the library statically and build the package against that.<p>4. Build the library&#x2F;tools with static linking.<p>5. No free lunch, this is a nontrivial problem.  Doable with LD_LIBRARY_PATH and PKG_CONFIG_PATH.')