Item(by='ChrisMarshallNY', descendants=None, kids=None, score=None, time=1607975716, title=None, item_type='comment', url=None, parent=25418157, text='<i>&gt; I&#x27;ve never witnessed a need to &quot;swap out&quot; an entire layer. Have you?</i><p>Many times, but the code assets (and the examples) are not ones that I can share. Feel free to dismiss it, if you like. I won&#x27;t lose sleep over it.<p>What I can share, is that I have written frameworks in technology that is either deliberately &quot;low-tech,&quot; or that is something that I <i>know</i> will probably not age particularly well, so I make it easy to replace. One example that I can give, is the BAOBAB server, that I wrote a couple of years ago[0]. It has four layers, and the ANDISOL layer[1] is the one that acts as a programmatic fa√ßade to the SQL-based database layers, below. It is explicitly designed to be the &quot;swap out&quot; point for the system.<p>In reality, I would suspect that this would only be the first part of a swap that would eventually replace the BASALT layer[2], but it would allow a graduated, incremental replacement strategy (I have done these a number of times. They are not for the faint of heart).<p>So, when I talked about adding a command to the API, I just added one a day or two ago, where I added a call to return a fast list of user IDs and display names. I needed this for a &quot;look-ahead&quot; text entry autofill, in a social media app that I&#x27;m building on top of BAOBAB.<p>I could have easily added this to BASALT, and that would have been that. It would have been fast, quite safe, and wouldn&#x27;t have required the elaborate nested submodule synchronization that is required when I tweak BADGER[3].<p>The problem is, that the command was a low-level SQL call, at its heart, and those belong in BADGER. They certainly should never be exposed above ANDISOL.<p>So I added it to BADGER, then added a &quot;pass-through&quot; to ANDISOL (what is exposed to BASALT). Since BADGER is nested inside of CHAMELEON[4], which is nested inside of COBRA[5], which is nested inside of ANDISOL, I had to bump each of their versions, and update the submodule (I despise Git submodules) chain for each.<p>This is a fairly trivial example, but I take things like modularity, and domains fairly seriously. Also, it&#x27;s a good way to keep security[6] fairly high.<p>This may not have answered your question, but it might help you to see how I work.<p>[0] <a href="https:&#x2F;&#x2F;riftvalleysoftware.com&#x2F;work&#x2F;open-source-projects&#x2F;#baobab" rel="nofollow">https:&#x2F;&#x2F;riftvalleysoftware.com&#x2F;work&#x2F;open-source-projects&#x2F;#ba...</a><p>[1] <a href="https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;a00365.html" rel="nofollow">https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;...</a><p>[2] <a href="https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;a00364.html" rel="nofollow">https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;...</a><p>[3] <a href="https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;a00368.html" rel="nofollow">https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;...</a><p>[4] <a href="https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;a00367.html" rel="nofollow">https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;...</a><p>[5] <a href="https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;a00366.html" rel="nofollow">https:&#x2F;&#x2F;open-source-docs.riftvalleysoftware.com&#x2F;docs&#x2F;baobab&#x2F;...</a><p>[6] <a href="https:&#x2F;&#x2F;riftvalleysoftware.com&#x2F;BAOBAB&#x2F;PDFs&#x2F;Security.pdf" rel="nofollow">https:&#x2F;&#x2F;riftvalleysoftware.com&#x2F;BAOBAB&#x2F;PDFs&#x2F;Security.pdf</a> <i>(Opens a PDF File)</i>')