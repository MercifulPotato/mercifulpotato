Item(by='brod', descendants=None, kids=None, score=None, time=1604791701, title=None, item_type='comment', url=None, parent=25015481, text='I think there is some difficulty specific to Shopify here, as REST APIs go their original one was fairly sane and provided powerful features.<p>When their GraphQL API was released its data structures were <i>similar</i> but not identical to the REST API and some very important fields and features were missing which translated to a &quot;90%&quot; adoption by developers who needed those missing pieces. <i>Additionally (and somewhat in keeping with points in the article,) they also introduced API versioning at this time which added a good amount of friction within the community.</i><p>More generally the issue with Shopify&#x27;s GraphQL APIs is its lacking features (eg, list totals, offset pagination, object fields) which are (or had been) particularly important to the ecommerce domain and they&#x27;ve struggled to provide any meaningful alternatives.<p>As an example, developers working with ecommerce applications often have to process data en masse (fulfillments, inventory, etc..) and with the Shopify REST API and it&#x27;s offset pagination these tasks were trivial to parallelise by simply chunking the workload based on the pagination method. In the GraphQL API offset pagination was removed in favour of cursor pagination which has no reasonable alternative to parallelise tasks in the same way, this requires developers to rewrite core logic and services for what may have previously been a very acceptable, efficient and most importantly working application.<p>The issue with Shopify&#x27;s GraphQL API is not GraphQL itself, but rather the implementation of the API not meeting the requirements of the consumer - and the fact that those consumers were forced to switch to a different API without feature or even conceptual parity didn&#x27;t promote feelings of joy or glee about the situation.<p>Personally I think their push for GraphQL was due to internal operational issues and their need for a more efficient system. This has been seen in their reasoning for reducing the timeout of an API used to fetch shipping options (from 10 seconds to 5 seconds) in preparation for Black Friday &#x2F; Cyber Monday sales events, their announcement provided some developers less than a single business day to respond to the changes[1] which were dropped after community backlash and then changed to address the feedback.<p>[1] <a href="https:&#x2F;&#x2F;community.shopify.com&#x2F;c&#x2F;Shopify-APIs-SDKs&#x2F;Changes-to-CarrierService-API-rate-request-timeouts-10s-gt-5s&#x2F;td-p&#x2F;893703" rel="nofollow">https:&#x2F;&#x2F;community.shopify.com&#x2F;c&#x2F;Shopify-APIs-SDKs&#x2F;Changes-to...</a>')