Item(by='DonHopkins', descendants=None, kids=None, score=None, time=1607372262, title=None, item_type='comment', url=None, parent=25335970, text='Yes, very old Pascal, not even TurboPascal! I started with Apple ][ UCSD Pascal, but that program was for HP3000 Pascal, which might be even older.<p>There was a trick for doing PEEK and POKE in Apple Pascal, using a union that contained a pointer to some type you could dereference to read and write, and also an integer so you could set the pointer. I had the hardest time understanding it, and just could not get my head around the &quot;record case boolean of&quot;, but I just typed in the magic code with a bunch of weird ^&#x27;s and it worked somehow.<p>You can use type punning tricks with &quot;union&quot; to implement arbitrary unsafe pointer arithmetic in Pascal, since it lets you convert between pointers and integers.<p><a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Type_punning#Pascal" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Type_punning#Pascal</a><p>Here&#x27;s an article about that trick, in German (which makes it sound even cooler):<p><a href="https:&#x2F;&#x2F;www.robert-tolksdorf.de&#x2F;book&#x2F;Tolksdorf-UCSD-Pascal-CC-BY-NC-ND-4.0.pdf" rel="nofollow">https:&#x2F;&#x2F;www.robert-tolksdorf.de&#x2F;book&#x2F;Tolksdorf-UCSD-Pascal-C...</a><p>p. 63: 3.1 &quot;PEEK&quot; und &quot;POKE&quot; auch in Pascal<p>[...]<p><pre><code>    type byte = 0..255\n    spchrinhalt = packed array [0..0] of byte;\n    spchrstelle = record case boolean of\n                    true: (adresse:integer); ( Zieger )\n                    false: (inhalt:^spchrinhalt) ( Inhalt )\n                  end;\n\n    procedure poke(adresse:integer; inhalt:byte);\n    var dummy:spchrstelle;\n    begin\n      dummy.adresse := adresse;\n      dummy.inhalt^[0] := inhalt;\n    end;\n\n    function peek(adresse:integer): byte;\n    var dummy:spchrstelle;\n    begin\n      dummy.adresse := adresse;\n      peek := dummy.inhalt^[0];\n    end;</code></pre>')