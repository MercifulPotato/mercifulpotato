Item(by='santa_boy', descendants=None, kids=None, score=None, time=1603852800, title=None, item_type='comment', url=None, parent=24914062, text='&gt; No-code seems to reject a lot of those learnings, for better or worse. I havenâ€™t seen any no-code company or product that allows source control<p>Bubble.io offers source control in a somewhat limited sense. Although the utility is quite limited. You can create save-points and revert to them as required.<p>You can also export versions to json and commit them to a git repo. I do this for fun and some code hacking. It isn&#x27;t as useful as traditional code maintenance but can come in handy.<p>Coming to where nocode is useful? Few points based on my experience:<p>a) We had to create a prototype with a single member techno-business team (me) and few business guys on a very undefined problem. I managed to get it done with Bubble. In fact our business guys tinkered with the layout and design while I was asleep (I gave them not to mess anything up from a functionality though :-))... for e.g. I could spend days&#x2F;weeks discussing colors, fonts, layouts etc or they could just do it themselves to their visual satisfaction<p>b) Limited use-cases. I am working on a side project for freelance recruiters. Goal is to help them launch their own indie-business. I can quickly put the system together with visual feedback and perhaps finish it in less than a week during my side-project hours. I think it would take me week to do it the first time. Perhaps 2 days for similar apps from then on.<p>I plan to supplement it with more involved sophisticated data mining hacks from the backend. Works neatly!<p>In essence, many businesses are not technologically sophisticated (in the coder sense) and need not be. They need to deliver value in utility, organization, reduced friction, etc.\nno-code can shine in these areas. Coders can hack on top of it to try to reduce the gaps.')