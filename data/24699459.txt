Item(by='derefr', descendants=None, kids=[24700371, 24706634, 24700877], score=None, time=1602001375, title=None, item_type='comment', url=None, parent=24699065, text='People who are hiring for roles using smaller languages <i>know</i> that there are few people local to them who are practitioners in the language. They tend to do one of two things about that:<p>1. They don&#x27;t even bother advertising a position in local geographical &quot;general&quot; job boards. (Job postings on LinkedIn cost money for every day you have them up; they&#x27;re a waste of resources if you can predict with high confidence that nobody will find the role through there.) Instead, they&#x27;ll advertise <i>globally</i> but targeted to the language&#x27;s community (i.e. language-specific job boards, forums and chat groups, newsletters, etc.) This is where the people using the language are looking, too, anyway, because they <i>also</i> know that there are too few local opportunities for it to make sense to invest the time in checking local job-boards for a job matching their skillset.<p>2. They don&#x27;t bother hiring <i>for</i> the language. Instead, they hire for &quot;experience with [relevant language paradigms]&quot; and &quot;experience with any of [similar, more-popular languages]&quot; and then expect the new hire to learn the language on the job.<p>My personal job-criterion for hiring Elixir devs is &quot;a polyglot in several different language paradigms, fluent in at least one functional language.&quot; I find that that filter actually predicts <i>better</i> whether they&#x27;ll be a good Elixir dev, than actual experience using Elixir does.<p>-----<p>As an aside, there&#x27;s also the fact that languages like Erlang&#x2F;Elixir (or the MLs, or the Lisps, or Prolog, or...) tend not to be languages used for <i>everything</i> in a company, but instead tend to be languages used for the <i>secret sauce</i> core component of a company. A lot of the time, companies don&#x27;t talk about using these languages, <i>even though they do</i>, because they consider them a <i>competitive advantage</i> over their rivals in whatever niche they occupy.<p>Heroku is an obvious example: much of their architecture <i>was</i> written in Erlang [nearly everything at first], but they never advertised that fact once in any official capacity. Likewise, HFT firms never mention they&#x27;re using ML or Prolog, but many do, because trading bots are often just souped-up expert systems. The only time you find these things out, is when having a beer with ex-engineers from those companies.')