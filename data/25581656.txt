Item(by='self', descendants=None, kids=None, score=None, time=1609336430, title=None, item_type='comment', url=None, parent=25581627, text='I found it while reading one of Mark Guzdial&#x27;s older blog posts on Amazon:<p><pre><code>    Using computing to teach computing (Hint: Don&#x27;t use the &quot;P&quot; word)\n</code></pre>\nA couple weeks ago, I got the chance to meet and have lunch with Jeanette Wing, Director of the NSF CISE and main proponent of Computational Thinking.  I did pose her the question that I&#x27;ve been pushing: how can you get to computational thinking for everyone if we don&#x27;t teach programming?<p>I actually asked this question explicitly during her talk. If computing is &quot;automation of abstractions&quot; (as she defines it), how can we get to the automation part without teaching programming?  She pushed back.  We shouldn&#x27;t start computational thinking with programming.  We should start with things like Tim Bell&#x27;s &quot;CS Unplugged&quot; (<a href="http:&#x2F;&#x2F;www.csunplugged.org" rel="nofollow">http:&#x2F;&#x2F;www.csunplugged.org</a>).  She asked, you wouldn&#x27;t start a 4 year old with programming, would you?  After her talk, I pushed her harder: how would we get to &quot;automation&quot; and understanding the ability of computation to deal with complexity without ever touching the computer?  She eventually agreed -- it would be hard to get to where she wants to get without programming.<p>Then I realized that the &quot;p&quot; word was getting in our way.  If we want to get students to understand &quot;automation&quot; and complexity, we need computing.  We need computing to help people to understand computing.  We know that the specification of automation is programming.  But the word &quot;programming&quot; for many people (even computer scientists) means &quot;Java&quot; and &quot;C++&quot; and complex syntax and awful error messages.  The &quot;p&quot; word is getting in the way of agreeing that the computer is necessary for us to help students to really understand computational thinking.  The interesting question, then, is how do we use computing to teach computing (whether or not we call it &quot;programming&quot;).<p>-- <a href="https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20090831063636&#x2F;http:&#x2F;&#x2F;www.amazon.com&#x2F;gp&#x2F;blog&#x2F;post&#x2F;PLNK16UEGTT64A94V" rel="nofollow">https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20090831063636&#x2F;http:&#x2F;&#x2F;www.amazon...</a>')