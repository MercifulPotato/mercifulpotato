Item(by='phtrivier', descendants=None, kids=[25211388, 25214926], score=None, time=1606319993, title=None, item_type='comment', url=None, parent=25210027, text='I would argue that the web browser evolved, by accident, into the closest thing we have to a portable and usable <i>desktop OS</i>.<p>However, to me the browser is more like a &quot;requirement statement&quot;, than a solution.<p>The success of the web is just a symptom that:<p>- users want applications that work on computers. Win vs Mac vs Linux vs Mobile vs ... is all nice and well for us geeks, but to real-world people, it&#x27;s just a frigging computer.<p>For some reason, OS vendors were never able to agree on anything substantial, but browser vendors did.<p>We need a W3C for OSes. (Except, maybe one with a constitution, a parliament, a police force and a tax enforcement agency.) They have to decide an OS-level API.<p>They will probably fight over which programming language to use to write applications, but whatever they decide, someone will write a brainfuck compiler frontend for it, anyway, and <i>it will not matter</i>.<p>- users want to <i>use</i> applications, not spend hours installing them.<p>The browser got that right by accident, by using reflection and stringly-typing ; you &#x27;install an application&#x27; by &#x27;sharing a bit line of text that you can copy paste in an email&#x27;, and you &#x27;find an application&#x27; by typing a name in Google.<p>The browser stopped short of getting anything else right about application, feverishly waiting for someone to solve &quot;librairies&quot; for them by just downloading 100 versions of jquery and praying.<p>The OSes of the future will need interoperable, discoverable, namespaced apps, with namespaced, signed, shared libraries.<p>- users want applications with GUIs. And pretty much <i>all</i> applications will want to display the same basic suff that has been known since Smalltalk. (And the users don&#x27;t really give a damn that the Facebook buttons do not look exactly the same as the Twitter buttons.)<p>The OSes of the future will need a standard way to draw the Smalltalk-level UIs.\nAnd easily make the same application with a different logo on it, because the customer wanted Facebook, but more yellow.<p>- also, users wants games that just take all the screen and they could not give a damn about the buttons in the game, they want to play. And it should be fast.<p>The OSes of the future will need a standard way to use GPUs.\nAnd, really, nothing else. The game devs don&#x27;t really want an OS, actually. Ask Casey Muratori. Let the game devs do whatever they want with the computer, they know better than you, and will write semi-portable machine code (aka C) anyway. Your &quot;browser&quot; thingy would makes them laugh hard if they had the time to laugh while peeing in a jar to finish their next version of CoD.<p>- and users have a computer to do things with <i>other</i> people, so of course networking. What do you mean there are computers without networking ?<p>The OSes of the future will need networking. But since the people who designed ethernet and Internet and TCP&#x2F;IP and routers etc... were border-line geniuses with infinite vision (apparently they were high on LSD most of the time), people will just use TCP&#x2F;IP to communicate with our cousins of Mars. \nBut we&#x27;ll have to come up with something better HTTP. And JSON.<p>And if we could let the OS handle network identity management ? So that all applications don&#x27;t have to speed the first six months of development on the &quot;login&quot; page ?\nYes I know it&#x27;s hard, but it&#x27;s harder when it&#x27;s not the right part of the computer doing it.<p>- and some, a tiny little portion of some users want to use computers to read the news. So, yeah, of course the OS would have shareable document reader. And those documents might very well be HTML (although, we all know that we need better.)\nAnd the New York Times would build a &quot;smalltalk-like app&quot; to organise columns and images and typography and whatnot on an infinite canvas, and <i>sometimes</i>, display the text of an Op-ed - rather than turning the text of an Op-Ed into a weird tree of DOM elements, and have a poor soul come up with 1000 lines of CSS that do the work of 10 lines of <i>code</i>.<p>Of course it will not happen, but it was nice to imagine that.')