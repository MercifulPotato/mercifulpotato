Item(by='lisper', descendants=None, kids=[25388576], score=None, time=1607707631, title=None, item_type='comment', url=None, parent=25387867, text='&gt; poster clearly doesnâ€™t understand if they are saying<p>I have a Ph.D. in CS, so you might want to consider the possibility that you are the one who is misunderstanding.<p>&gt; Touring machines are just one class of computers<p>So first of all, it&#x27;s Turing machines, not Touring machines.  Named after Alan Turing.  And yes, it&#x27;s true that they are just one class of computer, but the reason Turing machines are a thing is that they are <i>universal</i>.  A TM can compute any computable function, where &quot;computable&quot; means computable by any physically realizable model of computation that any human has been able to come up with, including quantum computers.  (Quantum computers are just faster for certain problems.)  So the details of the TM don&#x27;t actually matter.  There are lots of different computational models that are equivalent to TMs.  It&#x27;s just that the TM model was the first to be proven universal, so that&#x27;s what everyone talks about.  But all physically realizable models of computation that humans have been able to come up with to date are either equivalent to TMs, or strictly less powerful.<p>So: TMs can&#x27;t solve the halting problem, and so no other physically realizable model of computation can solve the halting problem either because all known physically realizable models of computation are equivalent to TMs and therefore subject to the same fundamental limitations as TMs.  If you knew BB(n) you could solve the halting problem.  Therefore you cannot know BB(n).  (It&#x27;s a little but more complicated than that because we can&#x27;t rule out the possibility that a more powerful model of computation exists and is physically realizable.  But that would be the greatest revolution in the history of human intellectual endeavor, so the odds of discovering such a model are pretty low.)')