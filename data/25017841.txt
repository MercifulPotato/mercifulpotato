Item(by='andrewingram', descendants=None, kids=[25021581, 25021574], score=None, time=1604776623, title=None, item_type='comment', url=None, parent=25015173, text='But if you were fetching the same data with a REST API (one that doesn&#x27;t allow inclusion of relation fields, such as the JSON-API spec), you&#x27;d be doing the same amount of I&#x2F;O and have the same horrible n+1 problem just between the client and server rather than inside the server, so it&#x27;s spread across numerous requests rather than just one.<p>Tools like Dataloader solve the n+1 problem quite effectively, and they&#x27;ve been around for about 5 years, making it a solved problem for the overwhelming majority of GraphQL&#x27;s open source existence. If you look at the examples I wrote in this article (<a href="https:&#x2F;&#x2F;andrewingram.net&#x2F;posts&#x2F;optimising-graphql-request-waterfalls&#x2F;" rel="nofollow">https:&#x2F;&#x2F;andrewingram.net&#x2F;posts&#x2F;optimising-graphql-request-wa...</a>), in the waterfall charts each &quot;call&quot; is roughly equivalent to one simple (and usually easy to optimise) database query. I don&#x27;t want to unduly trivialise the work in getting Dataloader properly integrated, but I will say it doesn&#x27;t take a lot to start seeing the fruits of your effort.')