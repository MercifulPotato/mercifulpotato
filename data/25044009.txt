Item(by='pmeunier', descendants=None, kids=[25045849], score=None, time=1604999027, title=None, item_type='comment', url=None, parent=25037915, text='&gt; It&#x27;s certainly possibly I got some information wrong about Pijul. Please correct me if I have!<p>That&#x27;s actually the case, because you can totally simulate Git using Pijul if you want, except for the weird merges where Git shuffles up lines randomly.<p>&gt; This is a big drawback and so we should hope to get some serious benefits to make up for it.<p>It is not a drawback at all, there are no downsides to it, and we get the very serious benefit that merges are associative, which is not the case in Git. Indeed, in Git (using diff3 to merge), when Alice adds lines at the beginning of a file and Bob adds lines at the end, some of Bob&#x27;s line can get merged into Alice&#x27;s new lines.<p>&gt; it can not track things like &quot;This calls a function introduced in patch X&quot; which makes the cherry-picking functionality of very little value.<p>You can totally do that in Pijul by adding extra dependencies, and moreover, this is like saying `git rebase` adds very little value to Git.<p>&gt; Pijul is like rebase in that it forces you to consider the full history of all the patches in a set which requires to resolve arbitrary conflicts<p>It is actually the exact opposite: Git forces you to reconsider those conflicts (there&#x27;s even `git rerere`), whereas Pijul only shows you the unresolved conflicts. Once a conflict is solved in Pijul, it&#x27;s solved by a patch, and solved forever.')