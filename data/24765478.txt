Item(by='whalesalad', descendants=None, kids=None, score=None, time=1602596673, title=None, item_type='comment', url=None, parent=24762734, text='I want to commend you for asking this question. Once you open your mind to systems thinking (in a general, broad or abstract sense) it will make you a far better engineer.<p>When it comes to data, you are ultimately worried about 1. storing it and making sure it stays there and 2. retrieving it or asking questions about that data with certain guarantees. Speed? Consistency? Local access? Grabbing a ton of rows at once? Grabbing really old data quick? The old adage is true here: nothing in life is free. If you want fast writes you might sacrifice read performance, or vice versa. If you dial one knob up, one knob needs to get dailed down (usually). All of the tools you listed have various trade offs and were designed or optimized for specific workloads. Some are more general (PSQL is a great example) but looking at them all spread out on a table the differences become more clear.<p>Choosing your tool will depend on how well it will meet your requierments and how it is going to play nice with all your other systems. Systems thinking is a lot bigger than choosing a performant tool that has the right libraries. You gotta think about long term support: how do I do backups of my data? How do I restore data? How do I perform upgrades down the road? How do I deal with downtime, can I throw more resources at it?<p>Long story short: I am very glad to hear more people thinking about systems engineering but make sure you don&#x27;t get too caught up in the specific tooling and libraries. Learning and practicing the <i>concepts and fundamentals</i> and making sure to pause to think in the abstract boxes-and-lines sense is very important, too.<p>Learning about &#x27;Clean architecture&#x27; and &#x27;hexagonal architecture&#x27; will help to reinforce good systems design patterns.')