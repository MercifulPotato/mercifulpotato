Item(by='pron', descendants=None, kids=[25622534], score=None, time=1609686549, title=None, item_type='comment', url=None, parent=25621977, text='&gt; Comparing to really-simple C, it&#x27;s full of arcane stuff.<p>I think it&#x27;s quite the opposite. Don&#x27;t forget that C also has macros and <i>a lot</i> of arcane undefined behaviour. I don&#x27;t know if Zig is <i>as</i> simple as C -- it doesn&#x27;t have macros but does have, say, slices and comptime -- but it&#x27;s also much safer and much more expressive. Overall, it&#x27;s a very simple language, that&#x27;s very expressive and also quite safe.<p>&gt; That&#x27;s one of the traits of Zig too it seems.<p>Absolutely! It&#x27;s a feature of <i>all</i> low-level languages. Zig, however, unlike C++ and Rust, doesn&#x27;t try to waste its complexity budget on making it <i>seem</i> like a high-level language when you just look at the code on the page (and it has other downsides, too, besides language complexity).<p>&gt; I&#x27;m sorry, but that&#x27;s total nonsense. Shows that not enough good faith went into Zig design. Even in C, that could be syntactically annotated as:<p>And I&#x27;m sorry, too, but I would say it&#x27;s an example of Zig&#x27;s exceptionally great design at this stage. If at some point it turns out that adding a new kind of syntax element here is worthwhile, it can always be added later. When in doubt -- leave it out. You never know when your complexity budget is best spent, and if you already have a general means of doing something without a new syntactic category, it&#x27;s best to wait and see.')