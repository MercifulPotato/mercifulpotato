Item(by='robinzfc', descendants=None, kids=[25168831], score=None, time=1605949752, title=None, item_type='comment', url=None, parent=25167468, text='The current tittle of the original MathOverflow question is &quot;What makes dependent type theory more suitable than set theory for proof assistants?&quot;, I don&#x27;t know why is it different than here. The actual question makes more sense because the one on HN suggests that proof assistants exclusively formalize mathematics in dependent type theory (rather than set theory) which is not true. In fact, some proof assistants use dependent type theory (LEAN), some use simple type theory  (Isabelle&#x2F;HOL), some use simple type theory to encode untyped set theory (Isabelle&#x2F;ZF), some implement kind of &quot;soft typing&quot; on top of untyped set theory (Mizar) and some are completely generic and can encode all of the above (Metamath). \nAs for the question why type theory seems to be more popular in formalization of mathematics recently than set theory Jeremy Avigad wrote a rare compelling explanation [1] of why this is the case. I personally prefer the opinion of Lawrence Paulson [2], the original author of Isabelle and its ZF logic (he also implemented a formalization of ZFC set theory in Isabelle&#x2F;HOL recently).<p>[1] <a href="https:&#x2F;&#x2F;cs.nyu.edu&#x2F;pipermail&#x2F;fom&#x2F;2016-January&#x2F;019441.html" rel="nofollow">https:&#x2F;&#x2F;cs.nyu.edu&#x2F;pipermail&#x2F;fom&#x2F;2016-January&#x2F;019441.html</a><p>[2] <a href="https:&#x2F;&#x2F;cs.nyu.edu&#x2F;pipermail&#x2F;fom&#x2F;2018-June&#x2F;021032.html" rel="nofollow">https:&#x2F;&#x2F;cs.nyu.edu&#x2F;pipermail&#x2F;fom&#x2F;2018-June&#x2F;021032.html</a>')