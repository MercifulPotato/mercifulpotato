Item(by='soraminazuki', descendants=None, kids=None, score=None, time=1604939561, title=None, item_type='comment', url=None, parent=25033928, text='&gt; The package was called rebar3, not rebar3-nix or something. If the fork was called differently then no one would complain.<p>First of all, the fork obviously isn&#x27;t there for general consumption. You made it sound like unsuspecting users would use it and have unverified code downloaded on their machines, which is borderline false when it <i>doesn&#x27;t have the ability to download code from online sources</i>. This attempt to mislead is what I&#x27;m having problems with.<p>Second, it would&#x27;ve been nice if you&#x27;ve raised an issue on GitHub and helped improve Nix instead of complaining and spreading borderline falsehoods on HN. Erlang isn&#x27;t exactly a widely used language, so design choices would be made by the few who actually uses it. It would always help to have more productive input by actual users.<p>&gt; Also this fork was based on hacks, like patching rebar3&#x27;s internal files and messing with caches. If you don&#x27;t see anything wrong about this, then this way of thinking just proves what I said in the parent.<p>Ranting about how &quot;it&#x27;s a hack!&quot; based on cherry-picked implementation details isn&#x27;t convincing at all. The intent here is to have a copy of rebar3 that builds packages from local sources only, for consumption by package maintainers. That&#x27;s not by any means unreasonable.<p>&gt; But forking rebar3 wasn&#x27;t needed at all, because rebar3 _already_ had all the features needed for Nix.<p>Tell me a single major distro where it&#x27;s okay to essentially redistribute packages from language-specific package managers without making huge adjustments in the way packaging is handled. I know of none. For countless software, distros just give up on packaging altogether because the effort required to make that adjustment can easily get out of hand. This is the major reason many Maven packages aren&#x27;t packaged on Debian.<p>To make matters worse, many packages from languages-specific package managers won&#x27;t even compile on major traditional FHS compliant distros. Changes to upstream packaging aren&#x27;t unwarranted, however much you&#x27;d prefer to believe otherwise.<p>&gt; There&#x27;s no reason to use SHA256, if you just replace it with a different SHA256 whenever it doesn&#x27;t match with the upstream.<p>The SHA256 would be verified by package maintainers, reviewers, and the hydra CI instance.<p>&gt; Docker exists.<p>If you&#x27;re against the concept of distro-provided packages, why didn&#x27;t you say so upfront instead of making baseless accusations about what a horrible security disaster Nix is?<p>Also let me remind you that almost all Docker container images rely heavily on distro-provided packages. What are you going to do now?<p>&gt; As far as I know, Nix doesn&#x27;t provide facilities for solving this problem at scale.<p>Neither do other distros, though Nix is a close to having a built-in solution as I&#x27;ve just shown you.<p>&gt; When etc (or its analogue in &#x2F;nix) is world-readable hilarity ensues.<p>Why are you repeating this when I just told you it&#x27;s not true? &#x2F;etc in Nix is <i>not</i> world-readable, plain and simple. This works perfectly fine on my NixOS system:<p><pre><code>    $ echo secret | sudo tee -a &#x2F;etc&#x2F;secret &gt; &#x2F;dev&#x2F;null &amp;&amp; sudo chmod 600 &#x2F;etc&#x2F;secret    \n    $ cat &#x2F;etc&#x2F;secret\n    cat: &#x2F;etc&#x2F;secret: Permission denied\n    $ sudo cat &#x2F;etc&#x2F;secret\n    secret</code></pre>')