Item(by='jcorrington', descendants=None, kids=[24659218], score=None, time=1601607146, title=None, item_type='comment', url=None, parent=24653216, text='Wow, this really hits on something that&#x27;s been rattling around my brain for years and has come to the forefront in the last week. In most disciplines to achieve mastery you generally focus on technical mastery first; drills, copying the works of the greats, stuff like that, before moving on to find your own &quot;style&quot; and making new creative works. I think a lot of the wisdom of the past about how to excel espoused the virtues of first being able to copy the works of the greats in your field.<p>Yet, we think programming is somehow so different, that people should be able to make new creative works (ie: problem solving) at the same time as they&#x27;re still trying to get a handle on the techniques. Being in the industry for 15 years has shown me there are a lot of really great problem solvers who are terrible at programming, despite having done it sometimes much longer than I have. There&#x27;s one consistent distinction I generally see. The ones who can code fluently, for whom code just roles off their fingers, all started programming well before a CS program, maybe even back to middle school or earlier.<p>And I don&#x27;t believe it&#x27;s that programming education is that great for the younger age groups (often it&#x27;s non existent formally), but they have one key advantage. For the most part, they learn to program without the distraction of having to learn CS theory. Not so different from how a musician would likely first learn some simple scales, chords, and songs without any theory. For the unfortunate ones entering a CS program having written little or no code, they&#x27;re bombarded with very difficulty CS theory and having to learn programming at the same time. I think we&#x27;d have both better programmers and better computer scientists if the education system did a better job separating the two.<p>Thanks for linking your research, I&#x27;m going to give it a read soon. Is there a way I can get in touch? I&#x27;d love to discuss these ideas with you further and learn more about your research?.')