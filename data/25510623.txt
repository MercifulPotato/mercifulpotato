Item(by='dragontamer', descendants=None, kids=[25511014, 25511354, 25510832], score=None, time=1608667859, title=None, item_type='comment', url=None, parent=25510542, text='Yeah, but those Linux SoCs don&#x27;t have a ADC or accurate PWM timers.<p>You cam probably beat an ATMega with a STM32 of some kind. But the embedded world is more about simplicity of connecting to ADC &#x2F; PWM &#x2F; I2C and other such functionality. But even vs STM, ATMega supports 5V and full static (0Hz clock) operation.<p>You&#x27;re not looking at MHz or RAM when you buy a microcontroller. You&#x27;re looking at connectivity (which STM delivers... but there&#x27;s still an ATMega &#x2F; Arduino legacy advantage from a code perspective).<p>----------<p>20 years ago, plenty of people were making fun of 8051 boards that cost $100 but provided only 12MHz of clock and 256-bytes of RAM (not kB, literally bytes). The PC-market &#x2F; high-level programmers always underestimate the importance of connectivity and overemphasize specs.<p>Embedded is mostly fine with 20MHz clocks: and arguably prefers less power usage (so things like &quot;static 0Hz operation&quot; are big features). Having an ATMega run at 100kHz clock rates for maximum power-savings but still providing the functionality you need (ie: Timers &#x2F; ADC &#x2F; etc. etc.) is pretty useful.<p>Or ATMegas can accept unregulated 5V, and just running off of USB-power (which can be between 4.5V to 5.5V in practice, exceeding the specs of STM32 chips). That simplifies the design of your board, since you don&#x27;t need a buck-converter to go from 5V unregulated USB to 3.3V on the STM32.')