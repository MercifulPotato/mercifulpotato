Item(by='millstone', descendants=None, kids=None, score=None, time=1609737998, title=None, item_type='comment', url=None, parent=25625362, text='Maybe but there&#x27;s reasons to doubt this. For starters, it&#x27;s not obvious that Rust copies less. Sometimes you copy in Rust because it&#x27;s easier than threading lifetimes throughout; sometimes you copy because you are defending against an imaginary threat (consider std::env::var or std::env::args).<p>One potentially important difference is integer indexes vs pointers. Compared to C, Rust uses int indexes less often within a function (iterators, not for loops) but more often <i>between</i> functions: in C you might store a pointer somewhere, while in Rust it&#x27;s easier to store an index into a collection. But a ton of work has been poured into LLVM&#x27;s induction variable analysis so this is swimming upstream.<p>The aliasing could be really important; there&#x27;s a ton of pessimizations for e.g. uint8 pointers. Part of the maturing is fully specifying Rust&#x27;s UB and aliasing model.')