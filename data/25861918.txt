Item(by='zackmorris', descendants=None, kids=None, score=None, time=1611252211, title=None, item_type='comment', url=None, parent=25857753, text='For those that don&#x27;t see the point of this yet, it&#x27;s like a database query builder (or ORM) but for constructing regular expressions. The best implementation that I know of is Eloquent for Laravel:<p><a href="https:&#x2F;&#x2F;laravel.com&#x2F;docs&#x2F;master&#x2F;eloquent" rel="nofollow">https:&#x2F;&#x2F;laravel.com&#x2F;docs&#x2F;master&#x2F;eloquent</a><p>The idea is that the idiosyncrasies of a DSL like SQL can be abstracted away by providing a functional interface that encodes the bugs&#x2F;features of the grammar. The simplest example might be how SQL requires the WHERE clause to come before ORDER BY. But in Eloquent, clauses can generally be attached in any order. The clauses are stored as an abstract query object until they&#x27;re executed, but the raw SQL can be retrieved at any time with the toSql() method, which is similar to the toRegex() method from the article:<p><a href="https:&#x2F;&#x2F;laravel.com&#x2F;api&#x2F;master&#x2F;Illuminate&#x2F;Database&#x2F;Query&#x2F;Builder.html#method_toSql" rel="nofollow">https:&#x2F;&#x2F;laravel.com&#x2F;api&#x2F;master&#x2F;Illuminate&#x2F;Database&#x2F;Query&#x2F;Bui...</a><p>You can also write your own methods to return clauses. Which allows you to write general queries like &quot;select all of the articles from this user&quot; and then append a clause like &quot;limit to N results starting from X&quot; when it comes time for a controller to run the query and return results to the user. I&#x27;ve found that composability is what makes query builders so exponentially more powerful than raw SQL.<p>Keep in mind that where Eloquent, this library (and most others) fall down is that they provide no way to go from a raw query (SQL, regex, whatever) back to a query object. Everyone is so busy writing software for writing software, that they forget that most of the everyday workload is in reading someone else&#x27;s lackluster code.<p>I don&#x27;t really know why I wrote all of this, but since I do most of my thinking in query builders now, I thought it might be a useful pattern for others to know.')