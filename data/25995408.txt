Item(by='aidenn0', descendants=None, kids=None, score=None, time=1612221022, title=None, item_type='comment', url=None, parent=25977004, text='I think the existence of operator overloading is a red-herring when criticizing C++.  It&#x27;s just syntax sugar; compare:<p><pre><code>  cout &lt;&lt; &quot;foo&quot; &lt;&lt; &quot;bar&quot; &lt;&lt; endl;\n\n  cout.out(&quot;foo&quot;).out(&quot;bar&quot;).out(endl);\n</code></pre>\nI like the latter better than the former, but it&#x27;s not like one is complete evil and the other is great.<p>Instead the issue with C++ is more complicated.  It&#x27;s a perfect storm of:<p>1. Easy to pretend it&#x27;s &quot;just like C&quot; when really the increased quantity of features combine to make a major qualitative difference in how to use the tool<p>2. A large number of features that subtly (and sometimes not so subtly) encourage the programmer to do the wrong thing; many of the library changes from C++11 and on are about deprecating such features.<p>3. A lot of poorly implemented compilers for the first 20 years of its existence (when Alexandrescu&#x27;s book came out, no existing compiler could compile all of the examples properly).<p>4. #2 and #3 combined to cause a lot of companies to choose their own (mutually incompatible) subset of C++&#x27;s features in the 90s.<p>#4 and #1 meant that C++ programmers regularly couldn&#x27;t read code written by other C++ programmers.  At some point, a subset of them stopped blaming &quot;other C++ programmers&quot; and started blaming the language.')