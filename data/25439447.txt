Item(by='nerdponx', descendants=None, kids=None, score=None, time=1608097002, title=None, item_type='comment', url=None, parent=25417993, text='I like this trend of &quot;Lisp that compiles to X&quot;. More examples:<p>* Clojure (JVM): <a href="https:&#x2F;&#x2F;clojure.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;clojure.org&#x2F;</a><p>* ClojureScript (JavaScript): <a href="https:&#x2F;&#x2F;clojurescript.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;clojurescript.org&#x2F;</a><p>* Fennel (Lua): <a href="https:&#x2F;&#x2F;fennel-lang.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;fennel-lang.org&#x2F;</a><p>* Hy (Python): <a href="https:&#x2F;&#x2F;docs.hylang.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;docs.hylang.org&#x2F;</a><p>* Lisp-Flavored Erlang (BEAM): <a href="https:&#x2F;&#x2F;lfe.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;lfe.io&#x2F;</a><p>And there&#x27;s a similar growing trend of &quot;strongly-typed functional language that compiles to X&quot;:<p>* Elm (ML inspired -&gt; JavaScript): <a href="https:&#x2F;&#x2F;elm-lang.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;elm-lang.org&#x2F;</a><p>* Elixir (Its own thing -&gt; BEAM): <a href="https:&#x2F;&#x2F;elixir-lang.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;elixir-lang.org&#x2F;</a><p>* Fable (F# inspired -&gt; JavaScript): <a href="https:&#x2F;&#x2F;fable.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;fable.io&#x2F;</a><p>* PureScript (Haskell inspired -&gt; JavaScript): <a href="https:&#x2F;&#x2F;www.purescript.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.purescript.org&#x2F;</a><p>* ReasonML (ML inspired -&gt; JavaScript): <a href="https:&#x2F;&#x2F;reasonml.github.io&#x2F;" rel="nofollow">https:&#x2F;&#x2F;reasonml.github.io&#x2F;</a><p>* Teal (Lua with strict type annotations -&gt; Lua): <a href="https:&#x2F;&#x2F;github.com&#x2F;teal-language&#x2F;tl" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;teal-language&#x2F;tl</a><p>As well as the gazillion languages that compile to and interoperate well with C, such as Nim and several Scheme dialects (Chez and Chicken, probably others I&#x27;m forgetting). Oh and Haxe, which apparently can compile to like 10 different languages and I don&#x27;t understand why it isn&#x27;t more popular.<p>I like all of these languages because they don&#x27;t require the user to switch to a different library ecosystem in order to use a programming language that they find more comfortable&#x2F;enjoyable&#x2F;powerful&#x2F;expressive. I consider this extremely important because of how complicated some low-level protocols and systems can be, and reimplementing everything again for every new language is a waste of effort in my opinion.<p>Also, the proliferation of things that specifically compile to JS enforces a only-half-joking saying I heard a long time ago: JavaScript is a better compiler target than programming language. I think I&#x27;ve heard the same said about C as well.')