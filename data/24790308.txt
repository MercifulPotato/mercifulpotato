Item(by='dragontamer', descendants=None, kids=None, score=None, time=1602778802, title=None, item_type='comment', url=None, parent=24789670, text='&gt; I’m not surprised; you’re rolling your own crypto.<p>I agree! PRNGs are surprisingly difficult! The main difference I argue, is that the statistical-tests applied to crypto-algorithms are &quot;harder&quot; than the statistical-tests applied to PRNGs.<p>In a standard PRNG, you&#x27;re happy if you can say pass the Chi^2 test. But with a Crypto-PRNG, you&#x27;re aiming to beat differential cryptoanalysis.<p>What is differential cryptoanalysis? Well, its just a pair-wise statistical test across your bits!! Its a far more strict test than just Chi^2, but the overall concept is the same: Anything that differs from a uniform random distribution fails.<p>----------------------<p>&gt; You see what’s happening there? 5 rounds is easily broken, 6 rounds is borderline secure, 7 rounds is secure. Same thing with AES; these algorithms were never meant to be used the way you’re using them.<p>Indeed. But for those who need &quot;simple&quot; PRNGs for simulation purposes.<p>Since PRNGs are designed for speed, their statistical tests are far easier than differential cryptoanalysis. You&#x27;re &quot;only&quot; aiming for Chi^2, or other tests (See PractRand or BigCrush).<p>ChaCha over 5 or 6 rounds is going to be inevitably slower than a single-round of xorshift128!!<p>True, ChaCha &quot;scales&quot; to higher rounds (xorshift128 will probably fail differential cryptoanalysis even with 20+ rounds applied... while ChaCha continues to get &quot;more secure&quot; the more rounds you apply all the way up to 80+ rounds).<p>But that&#x27;s a weakness PRNG users are willing to accept. As long as the bits are random enough for a monte-carlo simulation (for raytracing, or weather simulation, or... AIs), you&#x27;re happy.<p>-----------<p>Because PRNGs tests are &quot;easier&quot; than crypto-tests, you can often make due with a single round alone. (See LCGRNG: a singular round of (seed = seed*K1 + K2) is sufficient to pass Chi^2 tests).<p>I&#x27;ve never designed a crypto-algorithm before. But based on my understanding of Crypto... the creation of PRNGs is a surprisingly similar field. GF(2), Bijections, mappings, bit-tests, statistical tests... they have applications to both crypto and PRNGs.')