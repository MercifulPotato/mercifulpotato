Item(by='munificent', descendants=None, kids=[25065553], score=None, time=1605136379, title=None, item_type='comment', url=None, parent=25063396, text='<i>&gt; But I&#x27;d still place TypeScript firmly in the &quot;worse is better&quot; category (products that are technically inferior then the state of the art, but succeed due to circumstance), it&#x27;s a band aid on top of a the broken JS ecosystem.</i><p>I think it&#x27;s important to distinguish between &quot;worse is better&quot; and path dependence, which is what you&#x27;re getting at here.<p>&quot;Worse is better&quot; is a blank slate design philosophy. It says a system with more failures modes can be a better than a more robust system if allowing those failure modes keeps the system significantly simpler and more understandable to users. A bicycle is &quot;worse is better&quot; compared to a car. You have to check the tire pressure frequently, and clean the chain fairly often. But it&#x27;s easy to put air in the tires and you can see the chain and tell when it needs to be cleaned.<p>&quot;Path dependence&quot; means your design is constrained by historical choices that don&#x27;t benefit future users but are part of the reality you have to design for today. Train railway gauges today are not the best width for optimizing shipping efficiency. It was chosen in the 1800s before anyone really knew, and it&#x27;s impossible to change because existing trains would be imcompatible with the new gauge.<p>TypeScript is an example of path dependence. If the world didn&#x27;t have a few billion lines of JavaScript code, you could certainly design a better language. Simpler, cleaner, easier to statically type, more efficient. But the world does have all that JS code, and TS is the railway that can still run those old trains.')