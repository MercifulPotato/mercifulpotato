Item(by='psykotic', descendants=None, kids=[25758692], score=None, time=1610496805, title=None, item_type='comment', url=None, parent=25755821, text='It&#x27;s more complicated than that. You can see what passes are run by clang with the flags -mllvm -debug-pass=Arguments. It&#x27;s certainly true that -O0 involves fewer passes than -O1 which involves fewer passes than -O2. But the speed limit is defined by the architecture. A compiler that was engineered for compilation speed with a goal of -O1 tier code quality would have a very different architecture from day 1 (e.g. unified IR, fewer passes, integrated register allocation and code generation). There&#x27;s been attempts at &quot;punching through the layers&quot; over the years with things like fastisel, but there are limits.<p>That said, all the major compilers can deliver adequate compilation speed on the order of 50-100 kloc&#x2F;sec for well-structured C code bases. Speed is much more of a serious concern if you&#x27;re working on large C++ code bases. Or if you&#x27;re using LLVM as a backend from a language like Julia which does the moral equivalent of C++ template instantiation at runtime and feeds it to LLVM.')