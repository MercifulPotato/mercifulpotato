Item(by='lalaithion', descendants=None, kids=[25570898], score=None, time=1609210120, title=None, item_type='comment', url=None, parent=25562994, text='In practice, Haskell doesn&#x27;t do this.<p><pre><code>    import System.IO.Unsafe\n    import Prelude hiding (last)\n\n    last :: [Int] -&gt; Int\n    last (x:[]) = x\n    last (x:xs) = unsafePerformIO (do\n      print x\n      return (last xs))\n\n    secondToLast :: [Int] -&gt; Int\n    secondToLast (x:y:[]) = x\n    secondToLast (x:xs) = unsafePerformIO (do\n      print x\n      return (secondToLast xs))\n\n    main = let\n      list = [1,2,3,4,5,6]\n      x = last list\n      y = secondToLast list\n      in print (x + y)\n</code></pre>\nThe above code outputs<p><pre><code>    1\n    2\n    3\n    4\n    5\n    1\n    2\n    3\n    4\n    11\n</code></pre>\nindicating that it traversed the list twice, fully completing one traversal before starting the next.')