Item(by='frankmcsherry', descendants=None, kids=None, score=None, time=1607008291, title=None, item_type='comment', url=None, parent=25285146, text='I think the main distinction is around &quot;interactivity&quot; and how long it takes from typing a query to getting results out. Once you stand up a Flink dataflow, it should move along a brisk clip. But standing up a new dataflow is relatively heavy-weight for them; typically you have to re-flow all of the data that feeds the query.<p>Materialize has a different architecture that allows more state-sharing between operators, and allows many queries to spin up in milliseconds. Primarily, this is when your query depends on existing relational data in pre-indexed form (e.g. joining by primary and foreign keys).<p>You can read a bit more in an overview blog post [0] and in more detail in a VLDB paper [1]. I&#x27;m sure there are a number of other quirks distinguishing Flink and Materialize, probably several in their favor, but this is the high-order bit for me.<p>[0]: <a href="https:&#x2F;&#x2F;materialize.com&#x2F;materialize-under-the-hood&#x2F;" rel="nofollow">https:&#x2F;&#x2F;materialize.com&#x2F;materialize-under-the-hood&#x2F;</a>\n[1]: <a href="http:&#x2F;&#x2F;www.vldb.org&#x2F;pvldb&#x2F;vol13&#x2F;p1793-mcsherry.pdf" rel="nofollow">http:&#x2F;&#x2F;www.vldb.org&#x2F;pvldb&#x2F;vol13&#x2F;p1793-mcsherry.pdf</a>')