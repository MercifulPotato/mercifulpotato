Item(by='philh', descendants=None, kids=None, score=None, time=1605397918, title=None, item_type='comment', url=None, parent=25096592, text='&gt; If it seems confusing, it&#x27;s because it is. That&#x27;s the point I&#x27;m trying to make. I have seen — several times across a number of projects — people writing code with a philosophical ideal along the lines of &quot;well, this page should only know about the state (a subset of the model) that it is responsible for, so I won&#x27;t give it the whole model. Also it will only send the messages related to just this page. Oh, requirements changed. No problem, I&#x27;ll just add another part of the global state as an argument. Oh, requirements changed again, and I need to send a global message. Hmm… I&#x27;ll just… etc&quot;<p>But... none of that, as far as I can tell, gives you a signature that looks like this? Even making the kind of changes where you think &quot;okay, this is an ugly hack, if I&#x27;d known about this in advance I&#x27;d never have written it this way, but I don&#x27;t have time to go back and do it properly so...&quot;<p>If you&#x27;ve genuinely seen signatures that look like this, then my sense is that the people who wrote those functions have different problems than the one you describe.<p>Maybe I&#x27;m pulling on something that turns out not to matter here. Like, if you&#x27;ve experienced the problem you describe, and you just came up with an example silly type signature that turns out not to really work as an example, then fair enough, that&#x27;s not a big deal. But if this post was inspired by seeing type signatures looking like that, and trying to explain those type signatures, and trying to come up with advice that will prevent them, then I would guess the advice is mistargeted. Or maybe I&#x27;m missing something and the process you describe really does lead to a signature like that, by people who are generally more-or-less competent; I don&#x27;t say that it couldn&#x27;t happen, only that I don&#x27;t see how it could.<p>(I disagree with the sentiment &quot;If it seems confusing, it&#x27;s because it is.&quot; If people who lack a certain mental model repeatedly make the same sort of mistake, and generate something that seems confusing to people who have that model, it can be extremely helpful for the people with the model to figure out what&#x27;s going on so they can try to share the model.)<p>Did you, perhaps, mean something like<p><pre><code>    updatePersonalInformation\n       : PersonalInformationMsg\n      -&gt; Model\n      -&gt; Result (PersonalInformationModel, Cmd PersonalInformationMsg)\n                (Model, Cmd Msg)\n         \n</code></pre>\n? That would let a person say &quot;this branch gets to update the global model, but all the others can stick with local changes and I just need to wrap their return value in `Err`&quot;.<p>(Which is still silly, just start the function with<p><pre><code>    let local : (PersonalInformationModel, Cmd PersonalInformationMsg) -&gt; (Model, Cmd Msg)\n        local = ...\n</code></pre>\nand wrap the return values in that. But I can at least see what someone would be doing with a type signature like the `Result` version.)')