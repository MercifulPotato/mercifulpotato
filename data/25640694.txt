Item(by='nmfisher', descendants=None, kids=None, score=None, time=1609809314, title=None, item_type='comment', url=None, parent=25631468, text='&gt; You&#x27;ve missed a step: you also have to migrate the data. In my experience this is by far the slowest &#x2F; most complex step. And it&#x27;s much easier with SQL where you can `UPDATE WHERE` and `INSERT FROM SELECT`.<p>I didn&#x27;t miss a step, because until you have paying customers (or at least, some other indication that you have a product that people want), there&#x27;s zero data to migrate. If someone isn&#x27;t paying, just blow away their data. If they are paying? Congratulations! You have a product that might be worth migrating to Postgres.<p>&gt; If you&#x27;re completely sure that you won&#x27;t need powerful querying, joins, etc for any of the data you&#x27;ll be storing then sure. Otherwise you lose all that time and more the first time you need a JOIN or a query that firebase can&#x27;t do. And you pay that cost every time you need to implement such a feature (or you end up storing that data in Postgres or similar and you end up with two databases, which is much more painful than having two platforms).<p>I think you&#x27;re missing the central point, which is that <i>until you have paying customers, you don&#x27;t know whether you&#x27;re even building the right thing</i>. There&#x27;s usually no way of saying &quot;I&#x27;m sure we will need powerful querying&quot; because you have zero clue whether there&#x27;s any demand whatsoever for the idea you have in your head. In fact, 90%+ of the time, there isn&#x27;t, which is why we fail so often at it (including OP).<p>Everything you do in the early stages must be geared towards proving whether or not you&#x27;re actually building something people want, not getting sidetracked by non-core technical issues. That doesn&#x27;t mean I think you should <i>never</i> use Postgres straight up. Sometimes an RDBMS is so integral to your idea that it&#x27;s actually easier to use Postgres than a NoSQL DB (like a GIS application or some such). But more often than not, it&#x27;s not, and you need to be ruthlessly honest with yourself about what you <i>actually</i> need to build to validate your concept.')