Item(by='Conlectus', descendants=None, kids=[24849977, 24850125, 24849698, 24850025, 24849554], score=None, time=1603298344, title=None, item_type='comment', url=None, parent=24846828, text='I&#x27;ve been following Nim for a while now (including back when it was called Nimrod), but the big reason I&#x27;ve never dug much more into it is because it repeats the Billion Dollar Mistake[1] of allowing values (yes, not all values, but important ones) to be nil without explicitly using Option types.<p>It&#x27;s disappointing that Nim has not (perhaps cannot, for backwards compatibility) learned the same lesson here that most other modern languages have, and used explicit nilability embedded in the type system.<p>And to preempt the argument that &quot;you can&#x27;t, for performance reasons!&quot;, you could do the same thing as Rust does and explicitly opt-in to having your code break if something is nil, via a call like `.unwrap()` which the compiler may optimize away.<p>[1] <a href="https:&#x2F;&#x2F;www.infoq.com&#x2F;presentations&#x2F;Null-References-The-Billion-Dollar-Mistake-Tony-Hoare&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.infoq.com&#x2F;presentations&#x2F;Null-References-The-Bill...</a>')