Item(by='Joker_vD', descendants=None, kids=[25008432], score=None, time=1604673341, title=None, item_type='comment', url=None, parent=25007045, text='Interestingly enough, the article doesn&#x27;t say anything about propagation of types, which is the crux of the type checking and what makes any typing system useful or useless, obnoxious or helpful. Consider the example from the article:<p><pre><code>    % a good old list length counter\n    count(A=[_|_]) -&gt; count(A, 0).\n\n    count([], C) -&gt; C;\n    count([_|T], C) -&gt; count(T, C+1).\n</code></pre>\nWhat is the type of count&#x2F;2? Arguably, it&#x27;s &quot;(list, any | number) -&gt; any | number&quot;, which means that count&#x2F;1 has type &quot;list -&gt; any | number&quot;. Well, that&#x27;s bloody pointless, isn&#x27;t it? What you probably want is &quot;(list, any) -&gt; any | (list, number) -&gt; number&quot; for count&#x2F;2, so you could give count&#x2F;1 its useful type &quot;list -&gt; number&quot;, but intersection function types are notoriously difficult to infer or typecheck, even with manual annotations.')