Item(by='taion', descendants=None, kids=[25548752], score=None, time=1609038800, title=None, item_type='comment', url=None, parent=25539266, text='Interestingly enough, in Python, the minimal, official style guide of PEP 8 actively suggests using properties (the equivalent of the JS getter&#x2F;setter syntax) for simple things: <a href="https:&#x2F;&#x2F;www.python.org&#x2F;dev&#x2F;peps&#x2F;pep-0008&#x2F;#designing-for-inheritance" rel="nofollow">https:&#x2F;&#x2F;www.python.org&#x2F;dev&#x2F;peps&#x2F;pep-0008&#x2F;#designing-for-inhe...</a> (See the section that starts with &quot;For simple public data attributes, it is best to expose just the attribute name, without complicated accessor&#x2F;mutator methods.&quot;)<p>I think in practice this ends up being mostly a function of what&#x27;s idiomatic in the ecosystem. The most common JS style guide recommends _against_ using getters and setters, so it would be surprising for something in JS to do so. The most common Python style guide recommends _for_ using properties, so the syntactical near-equivalent ends up being something &quot;expected&quot;.')