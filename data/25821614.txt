Item(by='Tainnor', descendants=None, kids=None, score=None, time=1610977004, title=None, item_type='comment', url=None, parent=25805566, text='tl;dr<p>I think that especially compared to Python with its... very fragmented landscape of dependency and version management tools, Ruby has a pretty standardised way of making sure you run everything in a reproducible environment, which maybe isn&#x27;t 100% perfect, but usually works quite fine, even though it is a different approach than the gradle wrapper.<p>--<p>More details:<p>In Ruby, it is by now completely standard practice to use some sort of Ruby version manager (rbenv, rvm, chruby, for example - they should all work). Those version managers always can pick up the correct Ruby version from the &quot;.ruby-version&quot; file. This is actually an improvement over the Java situation where different people might in theory run the same project with different versions of the JDK without them even noticing (although the JVM is of course much more backwards-compatible than Ruby usually is, but it can still lead to problems). Even the gradle wrapper doesn&#x27;t help you there - it assumes you already have the JDK installed.<p>Also, Gemfiles (dependency declaration files) typically (or maybe nowadays always?) include the version of Ruby used, and the Gemfile.lock also specifies the version of Bundler that was used.<p>It is standard practice to run every Ruby command in a project through &quot;bundle exec&quot;, in which case Bundler will always check all your dependency versions. If the Ruby version is wrong (which can only happen if you don&#x27;t use a version manager anyway), I think it will just refuse to run and print an error message, same if you haven&#x27;t installed some dependency with the right version. If the bundler version doesn&#x27;t match, I think it will at least output a warning in some cases.<p>So, in practice, the only true differences between that and the gradle wrapper are:<p>- you need to install bundler yourself (although that&#x27;s just &quot;gem install bundler&quot;)<p>- you need to remember to use &quot;bundle exec&quot; (although there are tricks to avoid that, e.g. binstubs + something like direnv)<p>- you might not use the &quot;right&quot; bundler version, unlike with Gradle - however, in several years of writing Ruby I ran into the problem that a mismatched Bundler version led to an issue, exactly once - and they&#x27;ve since added the warning - so I don&#x27;t think it&#x27;s that big of a deal<p>- on the plus side for Bundler, it actually enforces transitive dependency locking, unlike Gradle, for which you have to explicitly enable it - and also many other tools don&#x27;t support that properly (e.g. Dependabot)')