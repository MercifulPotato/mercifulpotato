Item(by='mrozbarry', descendants=None, kids=[25660844, 25659805, 25670567], score=None, time=1609953246, title=None, item_type='comment', url=None, parent=25658704, text='I tried PeerJS in a pet project a few months ago. The one thing that became immediate is peer to peer over browsers isn&#x27;t great. You can basically throw testing out the window, there is no good way to emulate p2p locally. Trying to test my PeerJS project involved having two computers, and occasionally required one to be connected through a VPN. Problems I found was connecting over LAN was really flaky. Most times, Chrome to Chrome was fine. Chrome to firefox was also mostly fine. Firefox to Firefox had a pile of quirks - connections only worked if I completely quit firefox, and started it again with just my two windows, and even then, sometimes that connection failed.<p>The ICE&#x2F;Turn server stuff is also a mess. I ended up installing and hosting a coturn server on digital ocean, and it was a pain. Documentation wasn&#x27;t great, stackoverflow&#x2F;forum questions were typically old, and there didn&#x27;t appear to be any obvious alternatives.<p>I also tried simple-peer by feross, which seemed to be fine, and most quirks remained as browser issues.<p>I ended up ditching webrtc and went with a server with websockets. With peer to peer, I&#x27;m stuck using a server somewhere, so I&#x27;d rather use a websocket server. Webrtc just introduced too many unknown variables. Is there a problem with an ICE&#x2F;Turn server? Is there a LAN issue? Can browsers vendors properly do p2p to each other without a bunch of &quot;if firefox, do this, if chrome, do this, if something else, panic&quot;? The websocket server took 100% of these concerns out of the equation.<p>I&#x27;d love to be able to use webrtc confidently, but with the current tools for implementing and testing, I don&#x27;t think I can say it is for myself.<p>So I think the TLDR is that webrtc peer to peer isn&#x27;t really consumer-ready. The browser support seems a little hit and miss, testing through a LAN appears to be very flaky, and testing via node&#x2F;some other framework is spotty at best.')