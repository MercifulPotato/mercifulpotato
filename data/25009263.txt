Item(by='ReidZB', descendants=None, kids=[25011182, 25011321], score=None, time=1604683289, title=None, item_type='comment', url=None, parent=25006837, text='I regularly use jq to summarize the structure of big JSON blobs, using the snippet written here (I alias it to &quot;jq-structure&quot;): <a href="https:&#x2F;&#x2F;github.com&#x2F;stedolan&#x2F;jq&#x2F;issues&#x2F;243#issuecomment-48470943" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;stedolan&#x2F;jq&#x2F;issues&#x2F;243#issuecomment-48470...</a><p>For example, against the public AWS IP address JSON document, it produces an output like<p><pre><code>    $ curl -s &#x27;https:&#x2F;&#x2F;ip-ranges.amazonaws.com&#x2F;ip-ranges.json&#x27; | jq -r &#x27;[path(..)|map(if type==&quot;number&quot; then &quot;[]&quot; else tostring end)|join(&quot;.&quot;)|split(&quot;.[]&quot;)|join(&quot;[]&quot;)]|unique|map(&quot;.&quot;+.)|.[]&#x27;\n    .\n    .createDate\n    .ipv6_prefixes\n    .ipv6_prefixes[]\n    .ipv6_prefixes[].ipv6_prefix\n    .ipv6_prefixes[].network_border_group\n    .ipv6_prefixes[].region\n    .ipv6_prefixes[].service\n    .prefixes\n    .prefixes[]\n    .prefixes[].ip_prefix\n    .prefixes[].network_border_group\n    .prefixes[].region\n    .prefixes[].service\n    .syncToken\n</code></pre>\nThis plus some copy&#x2F;paste has worked pretty well for me.')