Item(by='II2II', descendants=None, kids=None, score=None, time=1610720168, title=None, item_type='comment', url=None, parent=25788854, text='&gt; The author is lazy, and is channeling his energy into complaining rather than learning.<p>I don&#x27;t know about that.  The author is certainly confusing programming with setting up a development environment.  I can understand why they would be frustrated with the latter, since it takes away with what they are trying to do.<p>When I started out, the latter was fairly simplistic:  computers booted into BASIC.  If you needed something more sophisticated, you could buy an IDE where everything would run right off the boot disk or after an automated installation.  You can still find those tools, designed to serve everyone from home users to professional developers.  That being said, it seems to be much less common.<p>In some cases, like web development, that makes sense.  The target is a standard rather than an operating system or hardware architecture.  In other cases it is self-inflicted.  When you choose to work with third party libraries, there is a much higher probability that some work will need to be done to integrate it.  Then there is the WTF category.<p>Take one of the easier cases: Java.  Even though the development model is much closer to traditional languages like C++, the most common use case will involve installing an IDE and the language separately (possibly with some tweaking of the environment).  That&#x27;s not too bad, but it&#x27;s likely more than people want to see when they want to get their tools up and running.  Contrast that to C++ on a commercial operating system: you install Visual Studio or Xcode and are ready to focus upon programming for the chosen platform.<p>Of course, C++ isn&#x27;t always like that and it comes close to representing the other extreme.  Setting up development tools for microcontrollers can be quite the task, particularly if you choose the &quot;wrong&quot; one.  That&#x27;s a good part of the reason why novices like Arduino and Platform IO, it makes going from nothing to a functional IDE fairly straightforward.<p>Now I&#x27;m not going to say that the author is right, but I will admit that they have a point.  Presenting Unix-isms in a macOS installer is going to rub some people the wrong way.  That should have been addressed in a better manner.  On the other hand, they were also attempting to accomplish something that is non-trivial to start with.')