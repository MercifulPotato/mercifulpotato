Item(by='mikepurvis', descendants=None, kids=[25484442], score=None, time=1608445246, title=None, item_type='comment', url=None, parent=25482916, text='&quot;You deploy, get an error message, and login to CloudWatch to see what actually happened - it’s all batch-driven, just like the bad old days, so progress is slow.&quot;<p>Even without cloud APIs and containers and whatever, I find there&#x27;s a creeping thing that happens here which has been helpful to become consciously aware of and intentional about fighting back on.<p>Basically, the thing is that wrappers become interfaces. You write tool A, and then tool B, and then some kind of script C which calls the two tools and produces a result. Then someone says &quot;dang, so convenient&quot;, and sets up a Jenkins&#x2F;Rundeck&#x2F;Airflow&#x2F;whatever job that runs script C against some source of inputs automatically— maybe there&#x27;s even a parameterized build capability where <i>arbitrary</i> inputs may be submitted to it on demand.<p>Before you know it, the fact that the original tools and script exist has been forgotten, because everyone&#x27;s interface to this functionality is a handy webpage. And when someone wants to add more features, they don&#x27;t even go back and change the script, they end up just adding it directly into the job definition. Before you know it, the full scope of what is being done on &quot;the system&quot; isn&#x27;t even really available any more to be installed, invoked, and tinkered with locally, not in a meaningful way, anyway.<p>It&#x27;s not even necessarily all bad, but when I see this happening in a domain where I have the awareness of the underlying tools (or I may even have written or contributed to them), I do try to help demystify them by writing up docs on how to do the local setup, helping others get going with it, etc.')