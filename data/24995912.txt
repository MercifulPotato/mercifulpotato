Item(by='woodruffw', descendants=None, kids=None, score=None, time=1604554277, title=None, item_type='comment', url=None, parent=24994522, text='This is a nice summary! Kudos.<p>Some nitpicks from someone who spends most of their professional day looking at machine code:<p>* &quot;Execution section&quot; is a weird phrase -- we&#x27;d normally talk about a specific section containing machine code (e.g., the `.text` section), or a collection of executable <i>segments</i> (i.e., regions that will be mapped with executable permissions at program load time).<p>* It&#x27;s a stretch to call x86 &quot;hardware independent.&quot; It has two major vendors (with a few peripheral ones), and is both complex and deeply generational (in terms of features being frequently added) as far as ISAs go. JVM bytecode is closer to hardware independent; LLVM IR <i>can</i> be hardware independent but frequently isn&#x27;t in the real world.<p>* Rust and LLVM might not have done this because you ran a debug build, but I actually would have expected your `sum` function to have no stack allocations at all -- it&#x27;s both small enough to fit within the red zone[1] and is also trivially promotable to registers. Sure enough, with `opt-level=1` or above, the compiler gets very clever and actually uses a `lea` to perform the sum[2].<p>[1]: <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Red_zone_(computing)" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Red_zone_(computing)</a><p>[2]: <a href="https:&#x2F;&#x2F;rust.godbolt.org&#x2F;z&#x2F;dojnvs" rel="nofollow">https:&#x2F;&#x2F;rust.godbolt.org&#x2F;z&#x2F;dojnvs</a>')