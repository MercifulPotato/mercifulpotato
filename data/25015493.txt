Item(by='unityByFreedom', descendants=None, kids=None, score=None, time=1604761993, title=None, item_type='comment', url=None, parent=25015463, text='I honestly don&#x27;t think there are any use cases where GraphQL &gt; REST. It&#x27;s just a new format they convinced people to build new backend layers in, and since those tools are new, some of them do address longstanding db-admin useability issues. But GraphQL as a spec is not revolutionary. It is simply a proposed structure, more constrained than REST. GraphQL is a form of REST.<p>Perhaps the benefit is what ryanar writes here [1], that it exposes a useable db-admin UI to front-end teams. It seemed to me this could have been achieved with something based on REST but maybe I&#x27;m just not thinking it through.<p>Now that I think more, it wouldn&#x27;t really be sufficient to produce SQL for a front end team because you don&#x27;t want them to be able to create inefficient queries.<p>I guess my main gripe was that GraphQL uses POST requests and nobody told me how this makes cdn caching harder so I started hating on GraphQL :-&#x2F;<p>[1] <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25015221" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25015221</a>')