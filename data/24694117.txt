Item(by='monocasa', descendants=None, kids=None, score=None, time=1601949985, title=None, item_type='comment', url=None, parent=24682715, text='Modern Processor Design: Fundamentals of Superscalar Processors is a great book.  It uses the P6 uarch (so Pentium Pro through Pentium III) as a case study to contrast against the PowerPC 620 and is a great place to start as it covers a lot of the details you&#x27;re asking about.  That P6 arch is the basis for modern Intel cores after they dropped P4&#x2F;NetBurst when Dennard scaling hit a wall.  Yes there&#x27;s been updates, but the book is still basically on point.<p>Real quick overview for some of the archs I know (that happen to all be x86), cache lines coming in from the I$ fill into a shift register.  Each byte of the shift register has logic that in parallel reports &quot;if an instruction started here, how long would the instruction be or say IDK&quot;.  That information is used to select the instruction boundaries, which are then passed to the full instruction decoders (generally in another pipeline stage).  After the byte lengths recognized are consumed, new bytes are shifted in, and the process starts over.  This separation between length detection and full decode lets you have 16 or whatever length decoders but only three or four full decoders.  Additionally the rare and very complex instructions are generally special cased and only decoded by the byte 0 length&#x2F;instruction decoders.  And even then, sometimes even the byte 0 decoder takes a few cycles to fully decode (like in the case of lots of prefix bytes).<p>I imagine superscalar processors for other CISC archs have very similar decoders, maybe just aligned on halfwords rather than bytes if that&#x27;s all the arch needs (like for 68k and s&#x2F;390).')