Item(by='dahart', descendants=None, kids=None, score=None, time=1601943748, title=None, item_type='comment', url=None, parent=24691381, text='Your point is incredibly good, and made me laugh too. It illustrates precisely why people, both technical and non-technical, frequently avoid choosing the massive scalable hammer factory system architecture that takes five people three weeks just to get rev 1, over the little tapper that gets the job done today with one junior developer.<p>From the technical standpoint of a decent (and probably only decent) coder, I think Excel is an amazingly sensible choice for technical projects for a bunch of reasons. I think decent coders reach for the database solution far too often, and waste ungodly amounts of time setting it up. Excel coming bundled with an amazing front end UI you don&#x27;t have to write code for shouldn&#x27;t be ignored. Sure it&#x27;s error prone, sure it&#x27;s a nightmare for data validation, sure it doesn&#x27;t scale to Amazon sizes, but <i>this</i> little project will never get that big. (Yes, until, of course, it does.)<p>I used Excel as the frontend for artists to author and enter small databases for a game engine, for example, and it was leaps and bounds better, and cheaper, and easier to use, than the unmaintainable SQL nightmare, with a bunch of frontend and backend dev on top of it, that the decent code who proceeded me left behind. Excel even scaled better, up to the size of our studio (hundreds of people), compared to the other system that needed technical artists to know how to use it. No question whether it would crumble if we were talking thousands of people or more. Which is why it happens so often. :P')