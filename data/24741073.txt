Item(by='monocasa', descendants=None, kids=[24741473], score=None, time=1602356623, title=None, item_type='comment', url=None, parent=24740957, text='&gt; If you know even a modicum of assembly language you can grok 68K in under 20 minutes. It works exactly how you expect it to work. I want to load a register, I want to loda a second register, I want to multiply them. The most remarkable caveat in 68K, that I can think of, off the top of my head, is &quot;multiply and divide can be slow than you expect.&quot; Which is where the MMU or the x40 comes in.<p>Going to be real, I never liked the split A and D integer register files of the 68k.  It always seemed like it would obfuscate one of the base ideas I want students to keep over thier lives.  That it&#x27;s all memory, whether it&#x27;s &#x27;data&#x27;, or pointers, or instructions, it&#x27;s all just bits in memory.  Having to load into one part of the processor to use it as an offset seemed antithetical to that goal.<p>&gt; The MSP430 is also a good learning processor, clean instruction set, not too much to take in at once, though there is mental overhead when you need to start being concerned with stack processing<p>It&#x27;s got clean push and pop instructions, and R1(SP) an otherwise be accessed just like a normal register in the file.  What are you thinking about there?<p>&gt;  and also with some jump instruction limits.<p>Yeah, I just stuck RAM and ROM within the limit on the emulated system they use so that doesn&#x27;t come up.')