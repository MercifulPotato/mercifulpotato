Item(by='jacek', descendants=76, kids=[25199856, 25198165, 25198452, 25188128, 25202292, 25198494, 25198890, 25198515, 25198924, 25194820, 25198127, 25191042, 25202123, 25198273, 25200772, 25199492, 25198986, 25187004, 25202456, 25199250, 25199317, 25196037, 25199969, 25200989, 25199064, 25201895, 25198164, 25199026, 25201116, 25202128, 25198198, 25201081, 25201048, 25198314, 25198560, 25202559, 25198140, 25198349, 25200270, 25202208], score=125, time=1606130623, title='Ask HN: How to effectively communicate results of my work to non-engineers?', item_type='story', url=None, parent=None, text='In the last job I have gotten a lot of autonomy. I have been the only full-time engineer in a small team. My task was to create a machine learning model ready for production and to design and start work on the product integrating the said model.<p>I have felt that the team trusts me to do the job and therefore I decided that my time will be used best by applying myself to the actual development. I neglected meetings that seemed unnecessary and reduced one-to-one communication.<p>I have set up tools to monitor my progress with the model (like tensorboard and sacred[1]), kept meticulous issue-tracking and a well-maintained repo on Gitlab. I also have been writing short semi-regular reports on the progress of the model (current issues, things to try and test, current metrics and suggestions for the development). It turned out, no one has ever reviewed any of the above and the team relied only on my summaries during short, semi-regular meetings. My ways of communicating turned out to be mostly inaccessible to people without engineering background!<p>As a result I was accused of slacking off and was deemed not worthy of any equity in the newly formed company [2]. I believe that my biggest mistake [3] was lack of proper communication of my progress and complexity I was dealing with. I was also unable to convey why some things take more time than expected during modelling or software development (like data processing, writing unit tests, etc.). Hence, my questions: How to effectively communicate the progress to non-engineer team members? How do I set reasonable expectations when the team expects development time to be closer to a hackathon project than a maintainable and certified product? How do you explain the complexity and gotchas of the work that needs to be done?<p>[1] https:&#x2F;&#x2F;github.com&#x2F;IDSIA&#x2F;sacred<p>[2] I resigned as a result (still working on the project until the end of the year). I am now transitioning to freelancing.<p>[3] There were other issues on both sides too of course, but not pertinent to my questions.')