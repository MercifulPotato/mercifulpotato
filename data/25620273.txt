Item(by='WhoCaresLies', descendants=None, kids=[25620317], score=None, time=1609659541, title=None, item_type='comment', url=None, parent=25618302, text='why do you pass an empty struct<p>```<p><pre><code>    std.debug.print(&quot;hello world!\\n&quot;, .{});\n</code></pre>\n```<p>that kind of extra typing is what turn me off to be very honest, other than that, zig seems like C and Swift had a baby, pretty nice<p>another thing:<p>```<p>const LikeAnObject = struct{<p><pre><code>    value: i32,\n\n    fn print(self: *LikeAnObject) void {\n        std.debug.print(&quot;value: {}\\n&quot;, .{self.value});\n    }</code></pre>\n};<p>```<p>Why don&#x27;t make the self: *LikeAnObject implicit?<p>Again, this focus on extra typing only just add noise in my opinion, function is already wrapped inside the struct, i feel like it HAS to be implicit<p>--\nEDIT\n--<p>One last thing:<p>```<p><pre><code>    for (array) | value | {\n\n        std.debug.print(&quot;array {}\\n&quot;, .{value});\n\n    }\n</code></pre>\n```<p>Not a fan of the | | syntax, it doesn&#x27;t feel natural<p>```<p><pre><code>    for (value in array)\n</code></pre>\n```<p>Here it is pretty clear what it does<p>--\nEDIT 2\n--<p>```<p>const std = @import(&quot;std&quot;);<p>std.debug.print(&quot;hello\\n&quot;, .{});<p>```<p>is import the right word here? feels like it should be ``use`` since you&#x27;ll use them this way: ``std.debug.print``<p>``import`` would be to make all the types directly visible and use this way: ``debug.print``')