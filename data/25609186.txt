Item(by='hn_throwaway_99', descendants=None, kids=[25610715], score=None, time=1609549819, title=None, item_type='comment', url=None, parent=25608973, text='You&#x27;re totally correct, I&#x27;m thinking this is basically just a troll post.<p>I started my software career in the late 90s, and having worked at a company last year with pretty much greenfield development, I was thinking how <i>so</i> many big, harry problems in software engineering that I experienced are just finally <i>solved</i> now:<p>1. You bring up version control, the first SCM system I used in the late 90s was CVS. I don&#x27;t understand how any human that used CVS who now uses git+GitHub&#x2F;GitLab&#x2F;GitWebFrontendOfYourFancy can claim things are &quot;stagnating&quot;.<p>2. Similarly, setting up a build and test process (the term &quot;CI&#x2F;CD&quot; didn&#x27;t exist in the late 90s) was a relatively huge undertaking, now it&#x27;s trivial to get tests to run on every merge to master and then autodeployed with something like GitHub Actions.<p>3. Package management security, while not a fully solved problem, is leaps and bounds better than it was even a couple years ago. Again, I can automate my build process to run things like `npm audit` or other tools from providers like Snyk.<p>4. Umm, the cloud anyone? You may argue that this is a hardware change but it&#x27;s really much more of a software issue - the cloud is only enabled by the huge amounts of software running everything.<p>I think the biggest thing I notice from the early 00s to now is that now I&#x27;m able to spend the vast majority of my time, even at a small company, worrying about <i>features</i> for my <i>users</i>, as opposed to the huge about of time I spent in the past just on the underlying infrastructure and maintenance to keep everything working.')