Item(by='vlovich123', descendants=None, kids=None, score=None, time=1605203136, title=None, item_type='comment', url=None, parent=25072216, text='FWIW I had a lot of success using <a href="https:&#x2F;&#x2F;github.com&#x2F;jazzband&#x2F;pip-tools" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;jazzband&#x2F;pip-tools</a> to have dependencies automatically managed in a virtualenv.<p>* Basically I would have a single bash script that every `.py` entrypoint links to.<p>* Beside that symlink is a `requirements.in` file that just lists the top-level dependencies I know about.<p>* There&#x27;s a `requirements.txt` file generated via pip-tools that lists all the dependencies with explicit version numbers.<p>* The bash script then makes sure there&#x27;s a virtual environment in that folder &amp; the installed package list matches exactly the `requirements.txt` file (i.e. any extra packages are uninstalled, any missing&#x2F;mismatched version packages are installed correctly).<p>This was great because during development if you want to add a new dependency or change the installed version (i.e. pip-compile -U to update the dependency set), it didn&#x27;t matter what the build server had &amp; could test any diff independently &amp; inexpensively. When developers pulled a new revision, they didn&#x27;t have to muck about with the virtualenv - they could just launch the script without thinking about python dependencies. Finally, unrelated pieces of code would have their own dependency chains so there wasn&#x27;t even a global project-wide set of dependencies (e.g. if 1 tool depends on component A, the other tools don&#x27;t need to).<p>I viewed the lack of `setup.py` as a good thing - deploying new versions of tools was a git push away rather than relying on chef or having users install new versions manually.<p>This was the smoothest setup I&#x27;ve ever used for running python from source without adopting something like Bazel&#x2F;BUCK (which add a lot of complexity for ingesting new dependencies as you can&#x27;t leverage pip &amp; they don&#x27;t support running the python scripts in-place).')