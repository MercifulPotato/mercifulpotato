Item(by='mjgoeke', descendants=None, kids=[25680275, 25680237], score=None, time=1610067969, title=None, item_type='comment', url=None, parent=25677272, text='I really like this project, especially when going through the docs.\nNearly all the abstractions are very clean in their approach, the only outlier being the hack of using `#each` `&#x2F;each` comments to indicate looping.  I suppose the HTML specs don&#x27;t have anything for this yet, so one has to adapt in some way.<p>I like the docs because, having come from a different dev environment, and seeing web&#x2F;html as a vast sprawling landscape of surface area to learn, littered with defunt, old, broken, and janky throwaway bits everywhere - the documentation implicitly points out the core path of what&#x27;s needed to understand how to bind and work with data in a web page.<p>Bravo!<p>I&#x27;m convinced this clarity comes from you distilling down what exactly _are_ the core pieces, and only implementing them first.<p>some rambling questions:<p>I wonder how this (synergyjs) works for a webapp type situation?  Would one extract .js scripts as modules to reuse custom components? or is that trying to bring this into a more complex setup than is the sweet spot for this lib? e.g. is this better suited for a page at a time?<p>Also, maybe I&#x27;m dense, but does this approach lend itself to single page apps? My understanding is it shines when you have single pages with some logic behind them.  If you need to jump to another page, the &quot;passed data&quot; would be encoded in the url, yes?<p>(I seem to recall the html 5 standards were looking to add something (was it &#x27;proxy&#x27;?) that was something like frames, but involved web components, and maybe even passing of data through slots... is that a thing?)')