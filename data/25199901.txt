Item(by='jrochkind1', descendants=None, kids=None, score=None, time=1606235246, title=None, item_type='comment', url=None, parent=25199733, text='Yep, people don&#x27;t often comment on how similar ruby and ObjC are, in fundamentals.<p>I think it&#x27;s because both of them were so influenced by smalltalk, more than ObjC influencing ruby necessarily. But not sure.<p>But I&#x27;m still very curious if AR&#x27;s creators knew EOF, yeah. I haven&#x27;t found DHH mentioning it; not sure if there might be forgotten other person&#x2F;people central to original AR architecture.<p>WebObjects itself was nice in many many ways (I think it&#x27;s encapsulation of form handling is far better than anything anyone&#x27;s managed in Rails)... but made a fundamental mistake in trying to keep a fundamentally stateful architecture and apply it to the web by putting what was effectively an opaque state ID in every single URL. This was a basically bad design for the web (although also provided for forementioned good encapsulation of form handling. :) ).<p>But yeah, the sense I get in my career is that we spend a lot of time trying to reinvent something that already existed, and getting <i>close</i> to being as good as it... then collectively moving on to the next language&#x2F;platform and doing it again. With not a lot of progress.  Up to and through the 90s, it seemed like there was actual progress in software design and architecture at the high-level, the level of affordances for developers to efficiently create reliable maintainable software, but it seems to me have stalled -- perhaps in favor of huge advances in more low-level stuff, better&#x2F;different languages&#x2F;language paradigms, etc.')