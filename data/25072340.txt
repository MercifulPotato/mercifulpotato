Item(by='Nihilartikel', descendants=None, kids=[25074360, 25074505, 25072803, 25072653], score=None, time=1605202824, title=None, item_type='comment', url=None, parent=25071625, text='RPi&#x27;s are very nice, but for a project like this, I&#x27;d reach for an ESP32 or the like - they are cheap, have analog input, and WiFi built in, some with integrated OLED displays, and are Arduino compatible. Also scriptable with Python or Lua.. So, similar to what the author did, but skipping the RPi for communications.<p>You can get them down to very low power by having them go into deep sleep and only wake up every minute or ten to take a reading, hop on the network, and publish the value somewhere, like an MQTT broker, or send a text etc.<p>If one can get a digital rather than analog sensor for a few dollars more, then chaining a ton of them up to a bus like i2c should make for a simple many-sensor-one-microcontroller setup: <a href="https:&#x2F;&#x2F;www.adafruit.com&#x2F;product&#x2F;4026" rel="nofollow">https:&#x2F;&#x2F;www.adafruit.com&#x2F;product&#x2F;4026</a><p>Built a temperature, humidity, barometer for the house using <a href="https:&#x2F;&#x2F;www.amazon.com&#x2F;HiLetgo-Display-Bluetooth-Internet-Development&#x2F;dp&#x2F;B07DKD79Y9" rel="nofollow">https:&#x2F;&#x2F;www.amazon.com&#x2F;HiLetgo-Display-Bluetooth-Internet-De...</a>\nand an SPI based sensor. The display is nice for visual feedback.')