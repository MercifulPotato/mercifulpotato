Item(by='rektide', descendants=None, kids=[25027908, 25002523, 25002634], score=None, time=1604612759, title=None, item_type='comment', url=None, parent=25002209, text='Docker-compose isn&#x27;t going to help you with Let&#x27;s Encrypt, you&#x27;re going to need to keep resolving that problem with each app you have or find some other way to tackle it, because you&#x27;ve picked a way to deploy containers, and don&#x27;t have any kind of centralized cloud system at your back.<p>In my comments, I mention that the author could have used Kilo, which would have been a Kubernetes-native way to manage their WireGuard system, and to connect the Pi &amp; their other systems to their existing K3S system.<p>I agree that docker-compose might be simpler, but there&#x27;s a very very limited realm of concerns that that will ever serve, where-as Kubernetes&#x27;s &#x2F; the Cloud Native ambition is to manage everything you would need in your cloud. Whatever you need, should, ideally, be managable within the same framework.<p>DNS is another decent example, where Kubernetes will help you manage domain names, somewhat. Still work to be done there but there are some good starts.  There&#x27;s so many operators, all of which purport to let you manage these services in a &quot;cloud native&quot; way. We&#x27;re still learning, getting better at it, but being able to manage all these thing semi-consistently, via the same tools, is a superpower. <a href="https:&#x2F;&#x2F;github.com&#x2F;operator-framework&#x2F;awesome-operators" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;operator-framework&#x2F;awesome-operators</a><p>Also just the question of short term wins vs long term use. You will not use docker-compose at your job. More and more people are going to be using Kubernetes to manage a wider and wider variety of systems &amp; services, making more and more capabilities managed by Kubernetes.')