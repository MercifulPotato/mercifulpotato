Item(by='voodootrucker', descendants=None, kids=[25654682, 25655954], score=None, time=1609904123, title=None, item_type='comment', url=None, parent=25653455, text='For practical reasons, I have to admit gradle is better than maven. Gradle is least bad.<p>However, I do have to say turing completeness in a build system is an anti-goal for me. You shouldn&#x27;t have to guess if your build will halt. I&#x27;ve seen terrible things done in builds, and most importantly, static analysis is the point of these systems... it&#x27;s what makes IDEs able to work.<p>From what I understand the turing complete code in gradle merely builds the model, which the IDE (or gradle) can then use to run the build, but still...<p>Finally, if you do have to use a turing complete language, it sure would be nice to use one with static types. I know groovy syntax reasonably well, but without auto-complete on my build scripts (less my project), except at run time it&#x27;s crazy hard to know what to type. And god forbid you have to debug it. I&#x27;ve added for loops to print out every variable, and for god sakes I&#x27;ve even had to attach a debugger <i>to my build</i> to figure out what it&#x27;s doing. That&#x27;s just nuts.<p>[edit] And finally, let&#x27;s not ignore that fact that groovy tries very hard with it&#x27;s closure syntax to <i>look like</i> JSON, so many developers paste in code from stack overflow and think it&#x27;s actually configuration. (I actually kind of like that for other uses of groovy).<p>[edit2] apparently they know it&#x27;s so bad gradle (the &quot;gr&quot; comes from &quot;groovy&quot;) now uses kotlin for it&#x27;s own build scripts (like on their github repo). If anyone&#x27;s done gradle with kotlin I&#x27;d love to know if it actually helps.')