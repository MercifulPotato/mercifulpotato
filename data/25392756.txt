Item(by='Wowfunhappy', descendants=None, kids=None, score=None, time=1607727614, title=None, item_type='comment', url=None, parent=25385809, text='That would not quite be my point.<p>SIP is already fairly flexible, in that it allows you to selectively disable only certain protections (see csrutil&#x27;s man page). The things people complain about being unable to do without disabling SIP—injecting into other processes, modifying system files, etc—are in fact the exact things SIP exists to prevent.<p>A lot of Mac users I&#x27;ve talked to, including technical ones who IMO should absolutely know better—appear to be under the impression that disabling any part of SIP will perform voodoo magic that makes them an instant hacker target. This just isn&#x27;t true. Running `csrutil disable &amp;&amp; csrutil enable --without debug` allows mac apps with root privledges to inject code into other processes, nothing more and nothing less. To the extent that allowing code injection is a security risk, this is a security risk. If you want to inject code, turn it off and have fun.<p>iOS apps are the first time to my knowledge that disabling SIP has actually broken something unrelated. (But do let me know if there&#x27;s a --without-disabling-fairplay option, I don&#x27;t have an M1 Mac and there&#x27;s a dearth of information on this.)<p>As far as having a trusted computing base, well, I think anyone who believes that&#x27;s actually possible on a mainstream end-user device is fooling themselves. Jailbreaks already exist, as does Corellium. If you&#x27;re distributing a private app to employees on company computers, set up an MDM profile which prevents messing with SIP, and schedule regular, in-person device check ups to look for signs of user tampering. In any other situation, assume your software is going to be run in an untrusted environment at some point, because it will be.')