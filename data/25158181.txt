Item(by='yashap', descendants=None, kids=None, score=None, time=1605858428, title=None, item_type='comment', url=None, parent=25157021, text='Huh? The whole point of static typing, in any language, is basically:<p>- Catch more errors at compile time<p>- Better tooling (better intellisense, “go to definition”, “find implementations”, etc.)<p>TypeScript provides both of these benefits just fine. Runtime types give you better runtime errors, and less undefined behaviour, but plain JS (or TS compiled to JS) does that bit just fine. TS types persisting at runtime could maybe be nice for certain use cases, like more powerful reflection, but that’s not type safety.<p>What’s a concrete example where your program would be more safe if TypeScript types were represented at runtime?')