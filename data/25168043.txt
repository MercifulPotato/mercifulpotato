Item(by='lmeyerov', descendants=None, kids=[25168333], score=None, time=1605936871, title=None, item_type='comment', url=None, parent=25163107, text='This feels close to a lot of our thinking and why some of those pieces were originally written :) We (the Graphistry team)  wrote the original Arrow JS implementation to help us bridge GPU visual analytics components in the browser with real-time GPU clusters in the data center, and our backend is DSLs like dataframes to make it easier to do that.<p>An interesting thing to me here is the layering of DSLs. E.g., SQL enables user-defined functions like filters, that push down to multi-GPU columnar analytics with the rest of the pipeline... and GPU arrow dataframes for zero copy &#x2F; streaming to combine it all together. People are posting in this thread about 1M rows, but this stuff is built for 1B+. The DSLs means both analysts and devs work at high levels, and underneath, supercomputing.<p>Fun historical note wrt JS vs Python for GPU: both have different strengths&#x2F;weaknesses.. but are basically fine-enough long-term, with tweaking. We started w&#x2F; proving out JS GPU dataframes on OpenCL to be more open + viz friendly, and after Nvidia liked using our platform, their RAPIDS.ai team spun up to bring the idea in a more corporate controlled &amp; funded way to Python. That&#x27;s where the community resources are, so we jumped on board, and every month is now quite a trip. GPU SQL, GPU streaming, etc :) JS does inlining and async better than Python, while Python has the data ecosystem, so I&#x27;ve been eagerly anticipating JS folks stepping up where we had to leave off.<p>It&#x27;s exciting to see it all come together -- imo, still early days for what&#x27;s possible!')