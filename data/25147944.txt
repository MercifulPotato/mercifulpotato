Item(by='rglullis', descendants=None, kids=None, score=None, time=1605780539, title=None, item_type='comment', url=None, parent=25145980, text='&gt; why not just condense into typing the style as a class name in the HTML?<p>Because the style may change, but the underlying data won&#x27;t. I know that nowadays everyone default architecture is to have data coming from some json API and that will have to be processed and rendered in the client anyway - but it is not just because something is the common case that it is the <i>only</i> case.<p>By looking at the discussions, I am starting to realize that most of the people that are okay with mixing HTML and CSS have only to work with <i>one</i> application to be worried about. If that is the case, then yes, it gets obvious why people want to treat everything as object code.<p>Consider different scenarios, though. Think of how many APIs could&#x27;ve been avoided if we actually looked and said &quot;HTML is data content and structure, and CSS is presentation, so why can&#x27;t the HTML <i>be</i> the API? The microformats people have been clamoring for this for decades already, yet no one listens. How much fragmentation could be reduced if we had half-dozen frontend developers saying &quot;we are going to build a JS component library that is <i>strictly</i> about behavior so that anyone can style however they want with CSS&quot;? All of those man-hours wasted reinventing wheels just because there is an unnecessary coupling between component structure and styling, penny wise and pound foolish.<p>It&#x27;s almost as if companies don&#x27;t want to have their data easily accessible outside of their own sites and if developers actually want to spend their time reconfiguring databases and creating ever-growing Rube Goldberg machines for their own fun and profit...')