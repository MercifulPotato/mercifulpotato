Item(by='barefootliam', descendants=None, kids=None, score=None, time=1604261768, title=None, item_type='comment', url=None, parent=24961568, text='When we invented XML we did not have configuration files as a major use case- although the possibility of ubiquity had been hinted at in a speech by Michael Sperberg-McQueen earlier that year, comparing the potential of SGML to the infrastructure in tunnels beneath the city of Chicago.<p>There&#x27;s an XPath from 2016 (3.1) but it didn&#x27;t have any significant input from browser people - so the primary audience represented were people with large, complex, or multitudinous documents.<p>There&#x27;s also microxml, although its traction is limited because of a (relatively minor) backward compatibility issue around whitespace in attribute values.<p>The use case of people editing small simple documents by hand, documents that did not contain mixed content (rich text if you like, with markup inside running text) wasn&#x27;t major; in creating XML we did discuss having a syntax that distinguished elements that could contain text directly from those that could only contain other elements, but none of the suggestions were compatible with HTML, of course, or any other existing SGML vocabulary, and all of the proposals (including mine) were ugly and had flaws.<p>The primary advantages of using XML are<p>* you can use the XML stack - XPath, XSLT, XQuery, RelaxNG, XML Schema, XForms, EXI, etc etc - on your documents (including conf files)<p>* people who don&#x27;t think of themselves as programmers can do sane powerful &amp; useful things - the languages are declarative;<p>* XML documents can be in the problem domain - elements named after things they represent, not &quot;div&quot; and &quot;span&quot; for example<p>* you can write a custom grammar-based validation check that both gives some rudimentary QA and also helps to drive syntax-directed editors, hierarchical database schemas and so forth;<p>* syntax errors are fatal, and there&#x27;s some redundancy in close tags, which help catch errors that often can&#x27;t be caught easily by checking the data (e.g. for metadata)<p>For sure there are things we&#x27;d do differently with hindsight, but remember also that XML predates the success of JavaScript and CSS. There are things that would be different in JavaScript and CSS today, too, if done again.')