Item(by='mumblemumble', descendants=None, kids=[24859117], score=None, time=1603375918, title=None, item_type='comment', url=None, parent=24857727, text='The only time I&#x27;ve ever encountered an API that used it extensively, it was done by a company that does all their implementation in Java.<p>My best guess at what happened, based on the shape of the API, is that they implemented it by taking their pre-existing domain model, which had a fairly deep subclassing hierarchy, liberally sprinkled some annotations from com.fasterxml.jackson.annotation, and dumped the result straight onto the wire.<p>You could absolutely do an object-oriented codebase where two different subclasses have fields with the same name and different types, and, depending on how you structure your code, it might not be too painful. And it&#x27;s fairly easy to imagine someone serializing a structure like that to JSON without ever meditating on the fact that JSON won&#x27;t retain the all the type information.<p>Ironically, the end result was an API that is nigh-impossible to consume from Java. I ended up writing a fa√ßade in Python.<p>I&#x27;ve also seen little bits of this happen in the internal APIs at my current company. Also a Java shop, also a result of trying to directly connect an internal object model to the API. I&#x27;ve never seen it done in an API implemented in a dynamic or functional language.')