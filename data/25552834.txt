Item(by='habitue', descendants=None, kids=[25553301, 25553061], score=None, time=1609091945, title=None, item_type='comment', url=None, parent=25551397, text='Re macros: I think this is entirely a cultural thing.<p>For example, in lisp, macros are used ubiquitously, and I think if anyone was going to criticize macros as a language feature it would be based on what they&#x27;ve seen in lisp (or C, but let&#x27;s ignore that for the moment).<p>Meanwhile, in python, there are extensive metaprogramming facilities that could easily be used to make code very hard to understand (Even if you never use eval, you have decorators, metaclasses and descriptors etc).<p>I think the difference is cultural. Python has a norm of resorting to metaprogramming as a last resort, and largely in libraries and frameworks, not in application code. Certainly there&#x27;s no compiler forcing people not to use all of the flexibility available in python at every turn. Even compared to a similar language like Ruby, python metaprogramming use is generally pretty restrained.<p>(My understanding of the implied context is that Walter Bright, the creator of D, is likely looking at macro usage in lisp, and inferring that macros are a mistake in a language like Rust. I know Walter is on here pretty often so if I&#x27;m guessing wrong here feel free to correct me)')