Item(by='dan-robertson', descendants=None, kids=None, score=None, time=1607799745, title=None, item_type='comment', url=None, parent=25399058, text='There’s lots of powerful things you can do with a command line but I think it’s not that great an interface for the interactive run-look-modify loop one generally uses with writing shell commands.<p>Some commands are slow and caching their results can be a bit of a pain, if only because you need to use different syntax. Some commands shouldn’t be rerun as part of the cycle as they are side-effecting. Some commands can produce huge amounts of output which is annoying to deal with if you don’t think to run them into a pager. And sometimes certain kinds of data flow can be tricky to write (eg something like 1. List a bunch of things with a command, 2. For each thing pass it as an arg to a second command, 3. Print the result of that command next to the thing, where you want to write something like list-foo | tee &#x2F;tmp&#x2F;l | xargs -n1 query-foo | paste &#x2F;tmp&#x2F;l -, except this won’t work even if &#x2F;tmp&#x2F;l is a named pipe (it works if it’s a regular file and you add a | tac | tac after the tee)).<p>Finally, quoting is a bit of a horrific mess.<p>So here is a proposal for how I’d like a shell to work:<p>1. It still works as a shell so you can run ordinary commands.<p>2. By default all pipe operations don’t use a single Unix pipe but rather two pipes where data is transferred from one to the next by the shell (this can be done entirely in the kernel and very cheaply so long as you transfer in pages), and so you can see simple statistics (ie is anything happening), and optionally see some of the data going through<p>3. When you run a command, the output gets directed into something like a pager so it won’t make your history inaccessible, and furthermore, there’s a way to tack on a pipe into some other command on the end of your pipeline without it needing to rerun the earlier steps<p>4. Some commands like grep get interactive versions where you can see how the output varies live as you type in the arguments—there’s no need to keep readjusting your regex<p>5. Something a bit like awk or xargs as a first class feature of the shell language (and therefore some kind of notion of closure that builtin functions can use) to avoid some parts of quoting hell')