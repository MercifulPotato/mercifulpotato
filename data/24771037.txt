Item(by='jbay808', descendants=None, kids=None, score=None, time=1602628122, title=None, item_type='comment', url=None, parent=24770913, text='Oh, I see what you mean now; I misunderstood your question!<p>Here&#x27;s a screw cutting machine from Da Vinci&#x27;s notebook:<p><a href="https:&#x2F;&#x2F;www.ssplprints.com&#x2F;image&#x2F;100676&#x2F;leonardo-da-vinci-screw-cutting-machine-from-leonardo-da-vincis-notebook-1470-1520" rel="nofollow">https:&#x2F;&#x2F;www.ssplprints.com&#x2F;image&#x2F;100676&#x2F;leonardo-da-vinci-sc...</a><p>But as you observe, it already has a screw in it. Two screws actually, one on either side, which advance a carriage that cuts a new screw in the center from a blank. It can either duplicate the pitch, or using a gear ratio, it can cut a different pitch than the two master screws.<p>The central screw averages the error of the two master screws, so with certain assumptions, the new can end up more accurate than either of the masters; the master screws can then be swapped out for new screws made this way, and so on. But there are limits to that approach, because common errors won&#x27;t get averaged out. However you could, for example, assume that two screws made this way with the same masters are accurate duplicates of <i>each other</i>, then when you replace the masters with those two new screws, you can mount one of them flipped end-over-end, or with a rotational offset of eg. 90 or 180 degrees (offsetting the leadnut to compensate), and gradually average out more errors that way.<p>Another way as you noted in a different comment is to use a long, soft leather lead-nut to average multiple threads, and use that as a master to create a new thread (assuming a low cutting force -- for example with force amplification, or for checking a thread, and so on).<p>There are some first principles approaches you could use, like making a master cylinder and then wrapping a wire of constant-diameter around it to make a literal &#x27;thread&#x27;, and bonding it in place. It wouldn&#x27;t be the most robust threadform but that&#x27;s another way.')