Item(by='brundolf', descendants=None, kids=[25653159], score=None, time=1609889008, title=None, item_type='comment', url=None, parent=25652538, text='You&#x27;re talking purely about performance. Sure, you can do whatever you want in a game UI, and it will probably outperform a web UI. But there&#x27;s a reason game UIs often scale&#x2F;function badly as soon as you change the screen size or the input type: they aren&#x27;t built on a platform that has flexibility baked into its bones. In many cases they aren&#x27;t build on any kind of platform at all. They often have element&#x2F;text positions hardcoded to a specific screen shape. Which is exactly what the browser spends most of its effort preventing: all sizing and positioning is determined automatically based on rules and content, which can be expensive to calculate, but is what makes it so robust.<p>Qt still exists. It&#x27;s still being actively developed and still gets used for some modern software. It&#x27;s actually a perfect stand-in for the current peak of native cross-platform frameworks. It&#x27;s a contemporary of the web, it supports all the platforms, it has a rich feature set. It even directly supports several languages, something the web doesn&#x27;t really do. And yet: it&#x27;s only used in a very small fraction of the apps out there. Why? Because (if you ask me) it simply isn&#x27;t as flexible or accessible of a GUI layer. It&#x27;s a very <i>performant</i> GUI layer, and it works very well for certain types of applications. But the web works <i>pretty</i> well for <i>all</i> types of applications. And that&#x27;s exactly my point.')