Item(by='NiceWayToDoIT', descendants=None, kids=None, score=None, time=1605345189, title=None, item_type='comment', url=None, parent=25088683, text='What is exactly 140 chr as on that page following script does the drawing?<p><pre><code>  &lt;script&gt;\n    function createStats() {\n      var stats = new Stats();\n      stats.showPanel(0);\n      stats.dom.setAttribute(&#x27;id&#x27;, &#x27;stats&#x27;);\n      document.body.appendChild(stats.dom);\n      return stats;\n    }\n\n    var stats = createStats();\n    setStatsVisibility(false);\n\n    var c = document.querySelector(&quot;#c&quot;);\n        \n    c.width = 1920;\n    c.height = 1080;\n    var x = c.getContext(&quot;2d&quot;);\n    \n    setupPolyfills(x);\n    \n    var S = Math.sin;\n    var C = Math.cos;\n    var T = Math.tan;\n    function R(r,g,b,a) {\n      a = a === undefined ? 1 : a;\n      return &quot;rgba(&quot;+(r|0)+&quot;,&quot;+(g|0)+&quot;,&quot;+(b|0)+&quot;,&quot;+a+&quot;)&quot;;\n    }\n  \n    var time = 0;\n    var frame = 0;\n    var nextFrameMs = 0;\n\n    newCode(src);\n\n    function loop(frame_time) {\n      stats = stats || createStats();\n\n      if (playing){\n        requestAnimationFrame(loop);\n        epsilon = 1.5; &#x2F;&#x2F; Acounts for different timestamp resolution and slight jitter\n        if (frame_time &lt; nextFrameMs - epsilon) {\n          return;  &#x2F;&#x2F; Skip this cycle as we are animating too quickly.\n        }\n        nextFrameMs = Math.max(nextFrameMs + 1000 &#x2F; FPS, frame_time);\n      }\n      time = frame&#x2F;FPS;\n      if(time * FPS | 0 == frame - 1){\n        time += 0.000001;\n      }\n      frame++;\n\n      try {\n        stats.begin();\n        if (window.navigator.userAgent.indexOf(&quot;Edge&quot;) &gt; -1 &amp;&amp; (u + &quot;&quot;).match(&#x2F;c\\s*\\.\\s*(width|height)\\s*(=|\\+=|-=|\\*=|\\&#x2F;=|%=|\\**=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&amp;=|\\^=|\\|=)&#x2F;) != null) {\n            x.beginPath();\n            x.resetTransform();\n            x.clearRect(0, 0, c.width, c.height);\n        }\n        u(time);\n        \n        if (recording &amp;&amp; frame % 2 == 0) {\n          gifctx.fillStyle = &quot;white&quot;;\n          gifctx.fillRect(0, 0, gifCanvas.width, gifCanvas.height);\n          \n          gifctx.drawImage(c, 0, 0, gifCanvas.width, gifCanvas.width &#x2F; c.width * c.height);\n          \n          gifctx.font = &quot;20px sans-serif&quot;;\n          \n          gifctx.strokeStyle = &quot;white&quot;;\n          gifctx.fillStyle = &quot;black&quot;;\n          gifctx.miterLimit = 2;\n          gifctx.lineJoin = &#x27;circle&#x27;;\n          \n          gifctx.lineWidth = 3;\n          gifctx.strokeText(&quot;dwitter.net&#x2F;d&#x2F;&quot; + dweetId, 3, gifCanvas.height - 16);\n          gifctx.lineWidth = 1;\n          gifctx.fillText(&quot;dwitter.net&#x2F;d&#x2F;&quot; + dweetId, 3, gifCanvas.height - 16);\n          \n          var usernameWidth = gifctx.measureText(&quot;u&#x2F;&quot; + username).width;\n          \n          gifctx.lineWidth = 3;\n          gifctx.strokeText(&quot;u&#x2F;&quot; + username, gifCanvas.width - usernameWidth - 3, gifCanvas.height - 16);\n          gifctx.lineWidth = 1;\n          gifctx.fillText(&quot;u&#x2F;&quot; + username,  gifCanvas.width - usernameWidth - 3, gifCanvas.height - 16);\n          \n          encoder.addFrame(gifctx, { copy: true, delay: 1000 &#x2F; 30 });\n        }\n        stats.end();\n        displayError(&quot;&quot;);\n      } catch (e) {\n        stats.end();\n        displayError(e);\n        throw e;\n      }\n    }\n    if(autoplay) {\n        loop(0.0);\n    }\n\n    function reset(){\n      if (browserGlobals) {\n        Object.keys(window).forEach(key =&gt; {\n          if (!browserGlobals[key]) {\n            console.log(&quot;Removing new global: &quot; + key);\n            delete window[key];\n          }\n        });\n      }\n\n      c = document.querySelector(&quot;#c&quot;);\n      c.width = 1920;\n      c.height = 1080;\n      S = Math.sin;\n      C = Math.cos;\n      T = Math.tan;\n      R = function(r,g,b,a) {\n        a = a === undefined ? 1 : a;\n        return &quot;rgba(&quot;+(r|0)+&quot;,&quot;+(g|0)+&quot;,&quot;+(b|0)+&quot;,&quot;+a+&quot;)&quot;;\n      };\n      x = c.getContext(&quot;2d&quot;);\n      \n      setupPolyfills(x);\n      \n      time = 0;\n      frame = 0;\n    }\n    \n    function setupPolyfills(x) {\n      \n      if (typeof x.resetTransform === &quot;undefined&quot;) {\n        x.resetTransform = function() {\n          this.setTransform(1, 0, 0, 1, 0, 0);\n        };\n      }\n      \n      if (typeof x.ellipse === &quot;undefined&quot;) {\n        x.ellipse = function(x, y, rx, ry, rotation, startAngle, endAngle, antiClockwise) {\n          this.save();\n          this.translate(x, y);\n          this.rotate(rotation);\n          this.scale(rx, ry);\n          this.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n          this.restore();\n        };\n      }\n      \n      &#x2F;&#x2F; Internet Explorer Math stuff\n      &#x2F;&#x2F; Mostly from https:&#x2F;&#x2F;www.developer.mozilla.org\n      let polyfills = {\n        cosh: function(v) {\n          return (Math.pow(Math.E, v) + Math.pow(Math.E, -v)) &#x2F; 2;\n        },\n        acosh: function(v) {\n          return Math.log(v + Math.sqrt(v * v - 1));\n        },\n        asinh: function(x) {\n          if (x === -Infinity) {\n            return x;\n          } else {\n            return Math.log(x + Math.sqrt(x * x + 1));\n          }\n        },\n        atanh: function(x) {\n          return Math.log((1+x)&#x2F;(1-x)) &#x2F; 2;\n        },\n        cbrt: function(x) {\n          var y = Math.pow(Math.abs(x), 1&#x2F;3);\n          return x &lt; 0 ? -y : y;\n        },\n        clz32: function(x) {\n          if (x == null || x === 0) {\n            return 32;\n          }\n          return 31 - Math.floor(Math.log(x &gt;&gt;&gt; 0) * Math.LOG2E);\n        },\n        expm1: function(x) {\n          return Math.exp(x) - 1;\n        },\n        fround: (function (array) {\n          return function(x) {\n            return array[0] = x, array[0];\n          };\n        })(new Float32Array(1)),\n        hypot: function() {\n          var y = 0, i = arguments.length;\n          while (i--) y += arguments[i] * arguments[i];\n          return Math.sqrt(y);\n        },\n        imul: function(a, b) {\n          var aHi = (a &gt;&gt;&gt; 16) &amp; 0xffff;\n          var aLo = a &amp; 0xffff;\n          var bHi = (b &gt;&gt;&gt; 16) &amp; 0xffff;\n          var bLo = b &amp; 0xffff;\n          return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) &lt;&lt; 16) &gt;&gt;&gt; 0) | 0);\n        },\n        log1p: function(x) {\n          return Math.log(1 + x);\n        },\n        log2: function(x) {\n          return Math.log(x) * Math.LOG2E;\n        },\n        log10: function(x) {\n          return Math.log(x) * Math.LOG10E;\n        },\n        sign: function(x) {\n          return ((x &gt; 0) - (x &lt; 0)) || +x;\n        },\n        sinh: function(x) {\n          return (Math.exp(x) - Math.exp(-x)) &#x2F; 2;\n        },\n        tanh: function(x){\n            var a = Math.exp(+x), b = Math.exp(-x);\n            return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) &#x2F; (a + b);\n        },\n        trunc: function(v) {\n        v = +v;\n        if (!isFinite(v)) return v;\n        \n        return (v - v % 1)   ||   (v &lt; 0 ? -0 : v === 0 ? v : 0);\n       }\n      };\n      for (var key in polyfills) {\n        if (polyfills.hasOwnProperty(key)) {\n          if (typeof Math[key] === &quot;undefined&quot;) {\n            Math[key] = polyfills[key];\n          }\n        }\n      }\n    }\n\n    &#x2F;&#x2F; Remember the default globals so that later we can remove any that\n    &#x2F;&#x2F; were created by the dweet\n    browserGlobals = {};\n    Object.keys(window).forEach(key =&gt; {\n      browserGlobals[key] = true;\n    });\n  &lt;&#x2F;script&gt;</code></pre>')