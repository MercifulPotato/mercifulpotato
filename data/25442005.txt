Item(by='pixelmonkey', descendants=None, kids=[25444422, 25442629, 25445032, 25444309, 25443350], score=None, time=1608123901, title=None, item_type='comment', url=None, parent=25441664, text='Racket Scheme &amp; SICP is a fun way to start playing, especially if you are into theoretical concepts of CS and programming, like higher order programming and abstraction.<p>The documentation for Racket is excellent, see e.g.<p><a href="https:&#x2F;&#x2F;docs.racket-lang.org&#x2F;quick&#x2F;index.html" rel="nofollow">https:&#x2F;&#x2F;docs.racket-lang.org&#x2F;quick&#x2F;index.html</a><p>... and many people have created online resources to adapt SICP to Racket, as well as other learning texts. I like Beautiful Racket, e.g.<p><a href="https:&#x2F;&#x2F;beautifulracket.com&#x2F;explainer&#x2F;lists.html" rel="nofollow">https:&#x2F;&#x2F;beautifulracket.com&#x2F;explainer&#x2F;lists.html</a><p>You can use #lang sicp and start playing around with the free online reformatted SICP text here:<p><a href="http:&#x2F;&#x2F;sarabander.github.io&#x2F;sicp&#x2F;" rel="nofollow">http:&#x2F;&#x2F;sarabander.github.io&#x2F;sicp&#x2F;</a><p>I recommend getting a print copy of SICP, though, and working through the examples in a real DrRacket environment on your computer.<p>IMO, if you end up going deep in the &quot;lispy&quot; direction after playing with Racket, you&#x27;ll probably be drawn to Clojure as it is the Lisp with the biggest &quot;production use&quot; community at the moment. So long as you can put up with some JVM warts, it, too, will be a good experience.')