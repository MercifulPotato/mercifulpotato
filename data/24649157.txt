Item(by='threatripper', descendants=None, kids=[24649245, 24650164, 24650298], score=None, time=1601545782, title=None, item_type='comment', url=None, parent=24649049, text='C++ probably needs an &quot;unsafe&quot; keyword like Rust to isolate the non-&quot;good parts&quot;. A few hundred compiler flags could be used to distinguish the good and non-good parts. I don&#x27;t think that 5 years is enough to know all things C++; it&#x27;s like a black hole in the sense that it adds features faster than you can learn how all the different parts could interact - even if you dedicate your whole life to it. Maintaining old C++ codebases will employ a lot of old developers for many many years. Your employer should not expect you to understand an old code base if you are a new developer. This would even be counter-productive since it wastes your brain power and their money.<p>What modern C++ really needs is a rebranding. Something like &quot;C22&quot;&#x2F;&quot;CX&quot;&#x2F;&quot;Z&quot; to distinguish itself from old C++. Together with a guide on what the safe features and &quot;unsafe&quot;&#x2F;deprecated features are the developers could get new certificates to prove that they are up to date. Companies&#x2F;management could easily require that the new C++ is used and developers are actually capable. (This organizational issue is IMHO the most important part.)')