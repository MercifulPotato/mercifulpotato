Item(by='btilly', descendants=None, kids=[25923193, 25922734, 25919124], score=None, time=1611680045, title=None, item_type='comment', url=None, parent=25917420, text='Point #1, there is a world of difference between a reporting database and a transactional database.  If you need a reporting database, ship logs and set up a reporting database separate from your transactional one.  That solves most of the problem.<p>Point #2, the fact that you&#x27;ve hit performance problems does not mean that you need to distribute.  Every real system that I&#x27;ve seen has had order of magnitude performance improvements left when it first looked like it was topping out.  Add a caching layer, have better indexes, more targeted queries, appropriate use of window functions, etc.  Give those a try before biting the bullet on distributed data.<p>Point #3, here is a good rule of thumb for distributed systems.  Whatever scale you hit on a single machine, you can probably gain 1-2 orders of magnitude of performance by switching to a faster language and carefully optimizing.  If you switch to distributed, you&#x27;ll LOSE at least an order of magnitude performance due to the overhead of RPCs, but are able to scale indefinitely afterwards.<p>If you&#x27;re distributing for reliability, great.  But if you&#x27;re distributing for performance and you have less than 20 machines in your system, either your problem is embarrassingly parallel or you likely aren&#x27;t achieving a net win.<p>I&#x27;ve seen a lot of people prematurely distribute, run into performance challenges, solve them, then pat themselves on the back for being smart enough to have distributed their code.  While failing to recognize that they were addressing a self-inflicted injury.')