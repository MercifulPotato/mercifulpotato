Item(by='lostcolony', descendants=None, kids=[25541818], score=None, time=1608947844, title=None, item_type='comment', url=None, parent=25538574, text='So I can say from experience, none of the production issues we ran into in two and a half years of Erlang would have been solved by better typing.<p>That said, our own practices meant we included a lot of unit and API level tests, and some of the issues I personally caught and fixed when testing might have been avoided by typing, and were, eventually, when we added Dialyzer about a year and a half into the project.<p>Dialyzer itself was worth it to me only insofar as type specs gave me a language to express the typing I was going for, rather than leaving it implicit. It also helped me understand what my colleagues were trying to do in some cases. The explicitness helped me feel better about what I was doing as well; in hindsight I don&#x27;t think it sped up development, nor did it reduce bugs (though it likely reduced testing time...but that&#x27;s probably a wash given the time to get the spec right, and update it as data structures evolved).<p>Can&#x27;t speak to using another language on the BEAM, whose typing isn&#x27;t optimistic like Dialyzer, but my experience with Dialyzer, at least, left me feeling subjectively better about the code, but objectively and in hindsight I don&#x27;t feel it gave us measurable improvement. Just more confidence. Which may be enough of a gain; confidence in the system is what you want when you&#x27;re optimizing for reliability, even if it&#x27;s not really a gain on that front.')