Item(by='blt', descendants=None, kids=None, score=None, time=1607726321, title=None, item_type='comment', url=None, parent=25389266, text='Re: the &quot;what is ROS?&quot; question asked by many on this thread:<p>Like others have said, ROS includes a serialization protocol with codegen, a pub&#x2F;sub and RPC messaging system with discovery, a build system, a configuration file system, logging system, and a repository of packages using them.<p>You might ask: why is it popular? One reason: it was started before the current ubiquitous solutions for those things were ubiquitous.<p>But I think the main reason is: in robotics, we use a lot of semantically complex data like high-dimensional sensor readings, probabilistic models of the world, representations of rotation and angular velocities, etc., and we need to do a lot of things with that data. For example, suppose we use a vision system to identify objects from a camera. We don&#x27;t just display that information to a user -- it becomes the input to the high level planner, which is its own complex system.<p>If your object recognition library and your planning library are both pure C++ libraries, then they probably each define their own classes for the datatype &quot;list of (bounding box, object name) pairs&quot;. You need to write glue code to use the libraries together.<p>However, if those libraries are both ROS packages, the idiomatic thing is to publish a package containing only message definitions (like vision_msgs [1]) and have both libraries produce &#x2F; consume that. This makes it easier to put together complex systems that pass around highly structured data, because you don&#x27;t have to constantly write glue code to get your libraries to work together.<p>TL;DR: ROS is popular because it&#x27;s like a big collection of .proto or .thrift files for complex robotics datatypes that everyone agrees to use in their libraries.<p>[1] <a href="https:&#x2F;&#x2F;index.ros.org&#x2F;p&#x2F;vision_msgs" rel="nofollow">https:&#x2F;&#x2F;index.ros.org&#x2F;p&#x2F;vision_msgs</a>')