Item(by='ratww', descendants=None, kids=None, score=None, time=1607357144, title=None, item_type='comment', url=None, parent=25333114, text='Let me try to explain: in the past, best practices dictated we should separate things by language because it was the best we could do at the time. Also it allowed for &quot;skinning&quot; websites, which was nice.<p>But after a while we noticed that wasn&#x27;t enough, giving rise to CSS methodologies like OOCSS and BEM that aimed at separating CSS by components. We also started doing the same with Javascript, and even HTML using helpers or smaller &quot;per-component-templates&quot; in backend frameworks.<p>Now, we have components, and that is your &quot;separation of concerns&quot;. Modern frameworks like React and Vue allow you to have even smaller components, which means less code. Mixing languages stopped being an issue for most programmers.<p>If you&#x27;re still not comfortable, you can still do it: in Vue.js it&#x27;s quite trivial to have separate JS&#x2F;CSS&#x2F;HTML files. But most people have moved past that since small components give them the separation of concerns they need.<p>Also, remember the skinning part? With SASS&#x2F;SCSS&#x2F;native variables, you can now abstract your CSS and keep them closer to the code without losing the possibility to change the appearance.<p>As to Tailwind, Bootstrap had already paved the way for helper classes. Lots of people used them in a non-components websites and it worked for them. The only issue they had was that helper classes require some copy+paste that would make maintenance difficult. But now that we have good component systems it&#x27;s not a problem anymore, and Tailwind is pretty good for maintenance.<p>Also, regarding skinning: with a Tailwind-like frameworks you also get some help with this, since it&#x27;s the same primary-color class all over the system.<p>EDIT: Another great argument I read here at HN is that even with Tailwind there is still a separation between content and presentation. It&#x27;s just that before my &quot;content&quot; was in my HTML and my &quot;presentation&quot; was in my CSS. Now, my &quot;content&quot; is in my JSON while my &quot;presentation&quot; is my HTML&#x2F;CSS. Tailwind as an extension of HTML makes a lot of sense in this context.')