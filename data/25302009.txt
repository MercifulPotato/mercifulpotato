Item(by='larzang', descendants=None, kids=[25302268, 25302274, 25302108], score=None, time=1607088600, title=None, item_type='comment', url=None, parent=25301883, text='Postgres stores records by primary id sequence.  If you have completely random IDs, records inserted at the same time are fragmented across the entire set, which makes accessing them slower if they&#x27;re meant to be sequential.<p>Whether this matters entirely depends on the type of data you&#x27;re storing.  If you&#x27;re storing unrelated data which is always random access anyway, non-sequential ids don&#x27;t really matter.  If you&#x27;re storing related data which is mostly accessed sequentially, e.g. Impressions filtered by a creation date range, it&#x27;s definitely better to have sequential ids for non-fragmented storage.  UUIDv6 isn&#x27;t as commonplace in libraries as v1 or v4 but offers a good compromise for this.')