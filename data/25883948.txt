Item(by='lproven', descendants=None, kids=None, score=None, time=1611421481, title=None, item_type='comment', url=None, parent=25880270, text='The closest thing that I am aware of was Symbolics OpenGenera.<p>Symbolics (who owned the first ever .com domain on the Internet) made Lisp Machines -- high-powered personal workstations whose entire OS was written in Lisp, right down to the lowest-level code. They used special proprietary processors which executed a sort of Lisp-like bytecode, enabling Lisp to be compiled down into something that ran directly on the metal -- using lists instead of the C model of bytes, words and pointers.<p>This is the where what is now called the &quot;Windows key&quot; came from: the Lisp Machine&#x27;s Meta key. That&#x27;s why Emacs still calls it &quot;meta&quot;. Emacs was the native editor of these OSes.<p>The company devoted a lot of R&amp;D into processor development over the years, moving from arrays of chips to single large chips to smaller chips. Their last hardware was an add-in board that fitted into 680x0 Macintosh computers and ran the Lisp machine&#x27;s Genera OS in a Classic MacOS window. The code was actually executing on its own hardware in its own separate dedicated RAM and just used the Mac as a display, storage controller and network interface.<p>After this, the company was unable to keep up with the speed of simpler CPUs that used the C style of design. Symbolics response was to port their OS to run on the most advanced RISC chip of the time: DEC&#x27;s Alpha processor, the first 64-bit RISC chip.<p>Symbolics wrote an interpreter for their Lispy bytecode that ran on the Alpha, enabling what was now called OpenGenera to execute as a program under DEC&#x27;s OSF&#x2F;1-based UNIX, later called Tru64.<p>This interpreter was extremely fast because it was implemented to fit entirely into the Alpha&#x27;s L1 cache -- 8kB each for Instructions and Data. An 8kB runtime meant that it never got flushed while you were running Lisp code.')