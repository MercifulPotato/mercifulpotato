Item(by='schmichael', descendants=None, kids=None, score=None, time=1607542990, title=None, item_type='comment', url=None, parent=25359690, text='Nomad was designed for efficiency (linear scalability) and performance from the very beginning. One of major aspects of this is that it is monolithic. The single nomad binary contains:<p>- The CLI  for interacting with Nomad clusters via their HTTP API<p>- The HTTP API<p>- The &quot;server&quot; agent which contains the scheduler, state store, and Raft implementation<p>- The &quot;client&quot; agent which runs workloads and has builtin task drivers for docker, plain processes, and more.<p>Not only is there no dependency on an external state store like etcd, but there&#x27;s no pluggable abstraction for state storage. The tradeoff is that all cluster state must fit in memory. Pi clusters should use far less than 100mb of memory while something like C2M (6,100 nodes, 2 million containers) used just under 100gb of memory. Memory use scales linearly with cluster size (nodes+containers).<p>Since Raft and the scheduler are colocated within a single server agent process, many operations can be performed in the replicated FSM as a simple function call instead of if Raft was an external process requiring networking overhead to interact with.<p>I&#x27;m not very familiar with k8s internals, so I&#x27;m afraid I can&#x27;t offer a very detailed direct comparison.')