Item(by='josephg', descendants=None, kids=[24687027], score=None, time=1601899848, title=None, item_type='comment', url=None, parent=24686778, text='Right. The problem is that are two use cases for commits:<p>- a historical, fine grained log of changes<p>- and a log of merged features.<p>There&#x27;s value in keeping <i>both</i> of these data sets. But the commit log as it stands can&#x27;t easily serve both masters.<p>Once you can see the problem for what it is, the solution is simple. Instead of conflating these two use cases into the concept of a &#x27;commit&#x27;, we need separate tooling for each of these use cases. The commit log should probably house the historical record. And then we need a way to mark a set of commits as belonging to a particular feature&#x27;s development. That could be achieved either by adding special support in git or via convention using commit messages.<p>Either way, I want to be able to see the commits in my repository grouped by the feature that they belong to. And I want that data set browsable on github, referenced against the corresponding github issues when thats appropriate.')