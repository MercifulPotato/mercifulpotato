Item(by='sa46', descendants=None, kids=None, score=None, time=1611474469, title=None, item_type='comment', url=None, parent=25889942, text='I agree with most of the list. It&#x27;s a good distillation of software development principles. In the spirit of HN, here&#x27;s what I disagree with:<p>&gt; Designing scalable systems when you don&#x27;t need to makes you a bad engineer.<p>Creating overly scalable solutions is useful for learning, especially early on. I&#x27;ve done this.<p>&gt; Despite being called &quot;engineers,&quot; most decision are pure cargo-cult with no backing analysis, data, or numbers.<p>This is true in almost every human endeavour. It&#x27;s not a useful opinion. Most decisions don&#x27;t matter that much so adding data is a waste of time.<p>&gt; Code coverage has absolutely nothing to do with code quality<p>I don&#x27;t buy there&#x27;s no correlation between code coverage and code quality. I&#x27;d much rather take code with &gt;80% coverage than 0 coverage. My revised take is that the value of code coverage rapidly diminishes past 80% (maybe log scale-ish). I also think code coverage metrics are not especially useful outside of library code.<p>&gt; 90% – maybe 93% – of project managers, could probably disappear tomorrow to either no effect or a net gain in efficiency.<p>Google tried getting rid of managers. It didn&#x27;t work. Establishing lines of communications in large orgs is hard.')