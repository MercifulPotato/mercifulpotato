Item(by='WesolyKubeczek', descendants=None, kids=None, score=None, time=1605478842, title=None, item_type='comment', url=None, parent=25099862, text='I have seen it on both sides.<p>Prima donna users who demand their problems be fixed yesterday, working for big corporations, said corporations having no intent whatsoever to sponsor the fix.<p>...And prima donna maintainers who somehow make themselves into bottlenecks around anything going on in their projects and then complaining about burnout.<p>The problem with entitled users is well-studied and well-known. Basically, the less a user pays for the goods, the more entitled they tend to feel.<p>The problem with entitled maintainers is this: while everything is good, they tend to ride on the wave of a successful project, though they might not be its sole author. Still, they enjoy the credit. They brag in blogs and READMEs about big name companies using the project, millions of downloads.<p>However, when proverbial shit hits the fan, the prima donna maintainers try to dodge any social responsibility by hiding behind excuses such as &quot;I don&#x27;t understand your use case, ergo it cannot exist&quot;, &quot;It&#x27;s open source so go fix it yourself&quot; (but a PR that does just that will spend years in limbo), &quot;it&#x27;s open source so you&#x27;re owed nothing, stop complaining&quot;, and finally, in their blogs: &quot;I&#x27;m so tired and overworked, it&#x27;s so thankless&quot;.<p>I don&#x27;t know what is the <i>true motivation</i> of those people to get into maintainership in the first place. Maybe they unconsciously seek fame and recognition? Maybe, they do it consciously? I don&#x27;t know, really. To me, it does look like it.<p>But there is also this thing about maintainership: if you do embark this burden for a project that a lot of things&#x2F;companies&#x2F;people happen to depend on, and you advertise the project as such, you implicitly tell you are responsible and trustworthy; if you reject an issue&#x2F;PR on a whim that &quot;you&#x27;re owed nothing&quot;, you implicitly tell that you are not trustworthy on account of not giving a fuck. Personally, I&#x27;m ok with both as long as the maintainers are upfront with it.<p>Just fucking write upfront that you&#x27;re not interested in contributions and that your software is a piece of art, not a tool. Or write upfront that contributions are welcome, but also be diligent about them, and also don&#x27;t burst in tears because you broke things in a major release and people pointed it out to you.')