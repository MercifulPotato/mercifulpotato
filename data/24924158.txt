Item(by='kazinator', descendants=None, kids=[24926426, 24924987, 24924516], score=None, time=1603919233, title=None, item_type='comment', url=None, parent=24923541, text='-n % n (where n is unsigned) suffers from the problem that -n calculates a two&#x27;s complement. That value is implementation-defined, due to the implementation-defined width of the unsigned type.<p>It&#x27;s calculating ((-n) mod (2^bits)) mod n, where bits is compiler&#x2F;platform-dependent.<p><pre><code>  ;; TXR Lisp\n  1&gt; (defun -n%n (n bits)\n       (mod (mod (- n) (expt 2 bits)) n))\n  -n%n\n  2&gt; (-n%n 7 8)\n  4\n  3&gt; (-n%n 7 16)\n  2\n  4&gt; (-n%n 7 17)\n  4\n  5&gt; (-n%n 7 18)\n  1\n  6&gt; (-n%n 7 32)\n  4\n  7&gt; (-n%n 7 64)\n  2\n</code></pre>\nI would not use this, except possibly with a precise-width type like uint32_t.')