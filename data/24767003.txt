Item(by='cycloptic', descendants=None, kids=None, score=None, time=1602605990, title=None, item_type='comment', url=None, parent=24763618, text='&gt;I cannot count how many times I saw C libraries forcing you to use reference-counted objects on the heap just to get out of the messy they used pointers.<p>That&#x27;s because this is by far the easiest way to implement Pimpl and allow for safe bindings to higher level languages at the same time. For libraries aimed at high-level usage patterns there simply is no reason to bother supporting other allocation strategies, especially when the library itself needs to call malloc internally anyway.<p>Often I do actually see low-level C libraries using this pattern:<p><pre><code>    struct obj {\n        &#x2F;* expose your private fields here *&#x2F;\n    };\n\n    void obj_init(struct obj *);\n    void obj_cleanup(struct obj *);\n</code></pre>\nWhere the calling code can allocate the object however it wants, but this won&#x27;t work for any libraries that want to maintain ABI compatibility between versions.')