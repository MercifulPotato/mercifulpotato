Item(by='benjaminjosephw', descendants=None, kids=[24763540], score=None, time=1602532605, title=None, item_type='comment', url=None, parent=24751894, text='SemVer says that a PATCH can only include backwards compatible changes which fix incorrect behavior. Less important is whether or not a bug has been fixed but whether anything other that internal behavior has changed.<p>MAJOR versions can also be incremented when &quot;substantial new functionality or improvements are introduced within the private code&quot; which is really the cause for confusion and, in my opinion, should be removed from the SemVer standard. There&#x27;s no semantic value to consumers when significant amounts of private code has changed except for the potentially heightened possibility of introducing bugs. Removing this would clear the confusion up altogether.<p>But the ComVer contention is that bugs don&#x27;t deserve special treatment. I disagree. Changes to behavior that fix something but don&#x27;t change anything else are changes I&#x27;m likely to want to deploy while maintaining a system. I might be using a legacy version where the main branch has progressed but I still want to deploy PATCH releases for bug fixes for an older version when they become available. I do not want to upgrade by a MINOR version if I can avoid it because it would add functionality or interfaces I don&#x27;t need and which themselves could be problematic. I want to make as little change as necessary to maintain a otherwise stable system.<p>Minimizing the surface area of a release to only the necessary is an important principle to follow when publishing public APIs. Thinking about bug fixes as distinct from new features means you&#x27;re considering every change in light of the potential impact to consumers. Even when know you don&#x27;t have any actual dependent consumers, it&#x27;s still a good habit of a disciplined engineer.')