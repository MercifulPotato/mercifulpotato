Item(by='contravariant', descendants=None, kids=None, score=None, time=1605995206, title=None, item_type='comment', url=None, parent=25172411, text='Well in short those properties all have (generalized) definitions that rely on the inner product one way or another. Denoting the inner product as &lt;x,y&gt; you get:<p>Pythagoras: &lt;x,y&gt; = 0 implies &lt;x+y, x+y&gt; = &lt;x,x&gt; + &lt;y,y&gt;.<p>Paralellogram: 2(&lt;x,x&gt; + &lt;y,y&gt;) = &lt;x+y, x+y&gt; - &lt;x-y, x-y&gt;<p>Angles: cos(angle from x to y) = &lt;x,y&gt; &#x2F; sqrt(&lt;x,x&gt;&lt;y,y&gt;).<p>Transpose: x^T is the dual vector defined by: x^T(y) = &lt;x,y&gt;.<p>the last one is especially subtle because most people think you can get the transpose by just flipping the vector, which is technically true but means you&#x27;re basing your results on a possibly arbitrary choice of basis.<p>As an example of why knowing these relations is useful, imagine you want to measure angles on a map, then you might notice that there&#x27;s no easily identifiable inner product, and indeed just measuring angles in an arbitrary projection will give different results depending on which projection you happen to be using. The trick is to go back to 3D space and measure the angles there (relying on the canonical inner product of 3D space) or to use a projection that preserves those angles like Mercator.<p>As another example conjugate gradient descent works better by using directions that are orthogonal through a more natural inner product rather than ones that just happen to be orthogonal because of your choice of basis.')