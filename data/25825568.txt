Item(by='jakubp', descendants=None, kids=[25826934, 25826317, 25825856, 25825817, 25825758, 25825740, 25826113, 25825754, 25826281], score=None, time=1610998324, title=None, item_type='comment', url=None, parent=25825244, text='If someone can conclusively teach inexperienced programmers good approach to estimates (methodology) + help embed this into sales process of a software house-type company, I know some folks who&#x27;d love to have this :)<p>My own experience has been this: people make estimates, client has expectations based on some variant of those, and something later happens but so much change is introduced during the actual software development, that there seems to be no sane way to compare what happened with original estimates. (new features, changed features, lots of new information, market shifts&#x2F;product vision shifts, quality assumptions change, etc. etc.)<p>But at that point nobody cares! People go on with further projects, and no data is ever collected.<p>Nobody learns.<p>When f*ckups happen, i.e. a gross over- or under-estimate, this is often not shared with the broader organization (ashamed&#x2F;afraid sales people&#x2F;PMs&#x2F;devs say nothing&#x2F;hide it&#x2F;sugarcoat it). Client walks away.<p>Sometimes project is severly underestimated but usually not just because of the software part. Again, no decoupling and estimation of contributing factors is done.<p>It&#x27;s insane.')