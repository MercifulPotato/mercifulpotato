Item(by='chubot', descendants=None, kids=None, score=None, time=1603481628, title=None, item_type='comment', url=None, parent=24872857, text='(author here)  Yes, I actually proposed that in the comments [1].  Some should add command_sub_errexit to bash:<p><pre><code>    echo $(date %x)  # can you tell what&#x27;s wrong here?\n    echo &#x27;script should fail before this&#x27;\n\n    local d=$(date %x)\n    echo &#x27;script should fail before this&#x27;\n</code></pre>\nAnd process_sub_fail:<p><pre><code>    diff &lt;(sort left.txt) &lt;(sort &#x2F;oops&#x2F;error)\n    echo &#x27;script should fail before this&#x27;\n</code></pre>\nAs mentioned in the comment, bash doesn&#x27;t even wait() on process subs!<p>I also document stuff like shopt -s simple_word_eval for other shell implementers: <a href="https:&#x2F;&#x2F;www.oilshell.org&#x2F;release&#x2F;0.8.3&#x2F;doc&#x2F;simple-word-eval.html" rel="nofollow">https:&#x2F;&#x2F;www.oilshell.org&#x2F;release&#x2F;0.8.3&#x2F;doc&#x2F;simple-word-eval....</a><p>-----<p>BTW Oil&#x27;s code is very short (see comment), and I&#x27;m looking for help :)   Let me know if you can&#x27;t get a bin&#x2F;osh working in 1 to 5 minutes.  (If you have a Debian&#x2F;Ubuntu-ish machine it should take about 1 minute.)<p>This is a pure Python program that you can quickly modify&#x2F;prototype, and then for the release it&#x27;s translated into C++ for a 30-50x speedup [2].<p><a href="https:&#x2F;&#x2F;github.com&#x2F;oilshell&#x2F;oil&#x2F;wiki&#x2F;Contributing" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;oilshell&#x2F;oil&#x2F;wiki&#x2F;Contributing</a><p>[1] <a href="https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qfiki1&#x2F;four_features_justify_new_unix_shell#c_ncyhoh" rel="nofollow">https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qfiki1&#x2F;four_features_justify_new_unix_sh...</a><p>[2] <a href="http:&#x2F;&#x2F;www.oilshell.org&#x2F;blog&#x2F;2020&#x2F;01&#x2F;parser-benchmarks.html" rel="nofollow">http:&#x2F;&#x2F;www.oilshell.org&#x2F;blog&#x2F;2020&#x2F;01&#x2F;parser-benchmarks.html</a>')