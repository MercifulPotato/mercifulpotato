Item(by='jpgvm', descendants=None, kids=[25323182, 25323188, 25323158, 25323050, 25325228, 25326454, 25325217], score=None, time=1607255759, title=None, item_type='comment', url=None, parent=25322651, text='JVM + PostgreSQL IMO.<p>It&#x27;s fast enough for almost everything, you get choice of Java&#x2F;Kotlin&#x2F;Scala&#x2F;Clojure depending on taste. PostgreSQL can represent almost any storage paradigm you want from traditional relational schemas, to graph like structures with recursive CTEs and even NoSQL JSON document style with jsonb.<p>Everything is super well supported with consistent release cycles, minimal regressions and runs on almost any platform. Tooling support is superb ofcourse - IntelliJ makes working with the platform a breeze. You get all of the JVM debugging and profiling capabilities and PostgreSQL has EXPLAIN ANALYZE making getting to the bottom of performance problems simple.<p>If you want to take on fancier paradigms like ES&#x2F;CQRS&#x2F;CDC you have best in class libraries and tools all built on the JVM. Debezium + Kafka being one example. Need faster OLAP queries than a PostgreSQL replica can provide, Druid is JVM based and can be integrated with Debezium + Kafka + Avro for streaming ETL. These sorts of tools are ideal because they are already best in class but can also be easily extended with any JVM language.<p>Want to do big data processing? If you are already on JVM it&#x27;s easy to plug in Hadoop&#x2F;Spark or one of the Apache Beam runners like Google Dataflow.<p>List goes on, there are literally hundreds of fields where JVM beats all other platforms out as it&#x27;s the most general purpose platform available. It has real threads so it&#x27;s not limited where single threaded languages are. It has multiple best in class GCs (latency or throughput tuned as you please). Best JIT by far with reasonable SIMD optimisations (annotations coming soon for guaranteed SIMD on supported platforms).<p>JVM might be old but it&#x27;s 2020s most promising platform. Rust and .NET are up for contention too but with Project Loom and Valhalla on the horizon I don&#x27;t see anything beating JVM in the next few years.')