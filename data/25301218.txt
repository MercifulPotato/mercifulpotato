Item(by='j-pb', descendants=None, kids=[25301592], score=None, time=1607081644, title=None, item_type='comment', url=None, parent=25301197, text='That kind of content addressable naming based on hashes would be awesome for the web in general.<p>Think of all the big JS frameworks.\nIf they were all referenced by hash, their size would become pretty much irrelevant, as they would be amortised across potentially thousands of requests.<p>But the web chose to go with unified resource LOCATORS for everything, and I don&#x27;t think it&#x27;ll be easy to change that mindset.<p>It&#x27;s the reason why people do crazy things like register DOI (a location based URL, that is hosted with a single point of trust&#x2F;failure) to reference git hashes (a content addressed URN). They don&#x27;t know better, and they want readable names.<p>A different issue with this kind of caching tho is that it is a potential side channel for privacy sensitive information.<p>For example if my script requests the pornHub logo, or something else that might even be more specific, like videos themselves. I can use a timing side-channel to figure out wether or not that particular item was in the users cache, and thus visited previously.<p>Imho they applied the wrong solution to that issue: domain separated caches. You loose the timing channel, but also loose all the caching advantages.<p>A much better solution would have been to close that timing side channel. If every browser ran TypeScript this could actually be a monad, where a &quot;low resolution timer&quot;-monad is strictly separating timing sensitive portions from high resolution timers.')