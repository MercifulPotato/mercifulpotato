Item(by='igornotarobot', descendants=None, kids=[25501425], score=None, time=1608579415, title=None, item_type='comment', url=None, parent=25494041, text='Just curious, what more complex properties do you like to be supported in Apalache? Many tools that are built on top of z3 are checking inductive invariants. By having a strong enough inductive invariant, you should be able to check safety.<p>If you like to check your specification for arbitrary parameters, then you will have to use quantifiers in z3, which would require a lot of care to write SMT constraints in a way that helps z3 to deal with the quantifiers. The mix of sets and cardinalities is especially hard for SMT. Although academia is making a lot of progress in this direction, e.g., see [1], the mainstream solvers are still leaving you with the problem of encoding sets and cardinalities all by yourself.<p>Some provers use quantifiers in z3. For instance, IVy [1] can check inductive invariants of systems that have arbitrary size. However, you have to rewrite your specification in uninterpreted first-order logic, e.g., you would have to think about abstracting away integers. Moreover, to make invariant checking decidable, you would have to transform your specification into a special fragment that is called EPR.<p>[1] Ruzica Piskac. Efficient Automated Reasoning About Sets and Multisets with Cardinality Constraints. VMCAI, 2020. <a href="https:&#x2F;&#x2F;link.springer.com&#x2F;chapter&#x2F;10.1007%2F978-3-030-51074-9_1" rel="nofollow">https:&#x2F;&#x2F;link.springer.com&#x2F;chapter&#x2F;10.1007%2F978-3-030-51074-...</a><p>[2] <a href="http:&#x2F;&#x2F;microsoft.github.io&#x2F;ivy&#x2F;" rel="nofollow">http:&#x2F;&#x2F;microsoft.github.io&#x2F;ivy&#x2F;</a>')