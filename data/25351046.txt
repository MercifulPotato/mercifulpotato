Item(by='ignoramous', descendants=None, kids=None, score=None, time=1607460006, title=None, item_type='comment', url=None, parent=25350549, text='&gt; <i>I&#x27;m not sure I understand your arguments about MPL2 being better protected against forks with stronger copyleft licenses.</i><p>IANAL. MPLv2 has two modes of protection:<p>1. By default, the immediate fork of a MPLv2 project under xGPLv3 is auto dual-licensed (for existing files, at least). Usually, the project stays dual-licensed (even for the larger work) unless the contributors make an explicit decision to remove the top-level MPLv2 license file.<p>2. Initial Contributor (original developer) can choose to make the &quot;Covered Software&quot; incompatibile with secondary licenses (like xGPLv3) for posterity.<p>&gt; <i>An evil corporation that wants to leech without giving anything back can practically as easily do that with an MPL2 licensed project as with a permissive licensed project.</i><p>Evil corp <i>at least</i> (if nothing) is required to open source their changes to MPLv2 files (part of the original work), if any. Whereas Apache &#x2F; MIT &#x2F; BSD don&#x27;t require any form of reciprocation except an attribution.<p>&gt; <i>That being said, I&#x27;m not actually sure that MPL2 is worth it, considering it&#x27;s very much an uncommon license compared to the big permissive ones.</i><p>From what I know, MPLv2 is well understood and it isn&#x27;t ambiguous as WTFPL or confusing as AGPL. Hashicorp and Mozilla are two of the biggest corporate users of the license I know.<p>Of course there can be no argument that xGPLv3 protects the interests of the consumers better, though, MPLv2 (and EPLv2), I feel is a good compromise.')