Item(by='batmansmk', descendants=None, kids=[25546827, 25545600], score=None, time=1609008280, title=None, item_type='comment', url=None, parent=25545029, text='It really depends on what you want to do with it.<p>I would benchmark the tasks &quot;traversal&quot;, &quot;aggregation&quot; and &quot;shortest past&quot; for a 10k to 10M node graph.\nAnything under 10k would be good enough with most techs and over 10M need to consider more tasks (writes, backup, the precise fields queried can become their particular problems at larger scale).<p>The Github link implements &quot;traversal &quot;in Python instead of pure SQLite. I suspect it will be around x10 slower than it could be with the same tech stack, because it queries once per node from Python to SQLite.\nShortest path is not implemented and would be too slow to be useful in an interactive environment. &quot;Aggregation&quot; is also not implemented, but it would perform admirably, because SQL is good at that.<p>Traditional relational OLTP databases such as Postgres are already faster than dedicated graph databases for certain graph related tasks, according to this benchmark: <a href="https:&#x2F;&#x2F;www.arangodb.com&#x2F;2018&#x2F;02&#x2F;nosql-performance-benchmark-2018-mongodb-postgresql-orientdb-neo4j-arangodb&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.arangodb.com&#x2F;2018&#x2F;02&#x2F;nosql-performance-benchmark...</a>')