Item(by='kllrnohj', descendants=None, kids=None, score=None, time=1606270150, title=None, item_type='comment', url=None, parent=25205123, text='&gt; Theoretically Java should be more memory efficient because it makes fewer guarantees and can move memory around.<p>Java makes a lot of memory guarantees that are hard to make efficient. Specifically in that it becomes extremely hard to have a scoped allocation. Escape analysis helps, but the nature of Java&#x27;s GC&#x27;d + no value types means it&#x27;s basically never good at memory efficiency. Memory <i>performance</i> can be theoretically good, but <i>efficiency</i> not really. That&#x27;s just part of the tradeoff it&#x27;s making. And nearly everything is behind a reference, making everything far larger than it could be.<p>Compaction helps reduce fragmentation, but it comes at the cost of necessarily doubling the size of everything being compacted. Only temporarily, but those high-water spikes are what kicks things to swap, too.')