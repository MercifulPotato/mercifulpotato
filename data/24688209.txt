Item(by='l72', descendants=None, kids=None, score=None, time=1601909133, title=None, item_type='comment', url=None, parent=24686712, text='I think this depends on your policy. The policy at my work place is that every commit into master is always a merge commit. When looking at the git logs, we then always do:<p><pre><code>  git log --first-parent\n</code></pre>\nThis only shows the top level commits (either a direct commit or a merge commit) and doesn&#x27;t show any of the subcommits in the branches.<p>This gives us a very clean history, something like:<p><pre><code>  commit ce29331f7da82ce528ca6e437b8893248a842169\n  Merge: a14522cbf 936ef9f90\n  Author: Joe Sample &lt;joe.sample@example.com\n  Date:   Tue Jul 7 14:34:20 2020 -0500\n  \n      ISS-2047 - Add ids to user invitation or creation\n  \n  commit a14522cbf32487dc590c8b6f3332d3fc9371a640\n  Merge: d08342170 cb94a86b1\n  Author: Jane Dow &lt;jane.doe@example.com\n  Date:   Tue Jul 7 14:28:28 2020 -0500\n  \n      ISS-2032 - If an enterprise is disabled, their api keys should be disabled\n  \n  commit d083421702e3ff50bc4c62e85b687e172e4bfe76\n  Merge: 0d167d25e ba3900a4a\n  Author: Joe Sample &lt;joe.sample@example.com&gt;\n  Date:   Tue Jul 7 14:25:41 2020 -0500\n  \n      ISS-2045 - Return a reason of why the invitation was auto-cancelled\n\n</code></pre>\nThen if I want to see everything that happened in the branch that was merged in, I can just run:<p><pre><code>  git log d083421702e3ff50bc4c62e85b687e172e4bfe76^..d083421702e3ff50bc4c62e85b687e172e4bfe76\n</code></pre>\nand see all the commits that were in that feature branch. No need to squash things or hide them.<p>I really wish git, by default, showed commits under a merge as a tree, rather than as a flat list. This is what bazaar (bzr now breezy) did, and it made a lot more sense when looking at the history.')