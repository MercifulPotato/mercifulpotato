Item(by='DonaldPShimoda', descendants=None, kids=[24693644], score=None, time=1601943756, title=None, item_type='comment', url=None, parent=24692794, text='An <i>annotation</i> is when you write some information and it doesn&#x27;t directly impact the evaluation of that which it annotates. It&#x27;s a &quot;note&quot;, essentially. Type annotations in Python do not actually affect any aspect of runtime and are ignored during evaluation. This is why you need a third-party tool to look at them. You can actually stick any arbitrary code you like after that colon â€” it&#x27;s all ignored just the same.<p>What you&#x27;re referring to are called type <i>ascriptions</i>, and they are often seen in what are sometimes called <i>manifest type systems</i>, where you must explicitly write out your types within a static type system. C and Java are common examples of this. These are not <i>annotations</i> because they have real meaning (either used for declaration or for type conversion).<p>Additionally, there are plenty of statically typed languages which do not require ascription. These languages feature <i>type inference</i>, which is a process that allows the programmer to leave the deduction of the actual types to the compiler. Haskell, Swift, OCaml, Scala, and I think now C++ to some degree (with `auto`) allow for this (to name but a few).')