Item(by='buybackoff', descendants=None, kids=None, score=None, time=1612193781, title=None, item_type='comment', url=None, parent=25988940, text='Slight correction: .tail prefix prevents inlining by JIT, it&#x27;s mentioned in the second link in my sibling comment as &quot;explicit tail prefix in callee&quot;. So even if that type specialization JIT optimization worked, the small performance-critical method containing it was not inlined. But the point of the specialization was to make the call for primitives faster than a method call, and fallback to a default implementation via callvirt. And there is no way to disable adding the .tail prefix to the calls that do not need it.<p>This also means that a lot of F# functions that are not inlined by F# source-code inlining itself effectively have NoInlining attribute. E.g. some helper method `if x then y.call() else z.call()`, if not inlined by F#, will never be inlined by JIT due to .tail prefixes before the methods calls.')