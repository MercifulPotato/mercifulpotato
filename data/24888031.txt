Item(by='_huayra_', descendants=None, kids=[24890092], score=None, time=1603646881, title=None, item_type='comment', url=None, parent=24887521, text='I&#x27;m glad it enables other folks to build such great tools with it, but I don&#x27;t think I&#x27;d pick it for my own projects or prefer to code in it at work. For the clever stuff they picked up from ConcurrentML (channels), they treat the user (developer) like an idiot due to having to spell out everything in great deal compared to languages that have a better type system.<p>It&#x27;s good to get a lot of programmers onboard at Google who may have never written a line of C or C++ in their life. Coming from Java or Python, I can see the proposition of a language like Go. As in those languages, Go doesn&#x27;t have myriad points of &quot;unwritten code&quot;, e.g. having to worry about lifetimes of objects, the &quot;rule of 5&#x2F;6&quot; for autogenerated methods (and knowing when the compiler generates some and not others) in C++. It&#x27;s all there in the code with great verbosity.<p>I think people complain about Go because it&#x27;s not the hammer for their nail. It&#x27;s not for folks working with a team of moderate to elite-level C++ or Haskell folks who enjoy writing &quot;beautiful code&quot;. It&#x27;s for a company with an army of developers of varying degrees of skill who all have to maintain the same codebase without exploring the dark arts of the C++ abstract machine, and to do it in a much faster language than Java.<p>Like Java, it&#x27;s driven primarily by business decisions for application software that needs to support all sorts of developers for server-side applications. It&#x27;s very good at that. It&#x27;s just that playing to that lowest common denominator creates an unpleasant experience for folks who want a more expressive language.')