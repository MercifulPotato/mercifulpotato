Item(by='asciimike', descendants=None, kids=[25400594, 25381195, 25380995], score=None, time=1607634906, title=None, item_type='comment', url=None, parent=25377545, text='As a former App Engine PM who spent a lot of time with billing&#x2F;quotas (though, not the one who deprecated this feature), it&#x27;s likely due to some combination of:<p>- hard limits caused downtime more often than they prevent these blog posts<p>- hard limits were inconsistently enforced, even within GAE<p>- platform wide quota notifications were implemented (reached &quot;GA&quot;), leaving the question of &quot;how a developer wants to handle this&quot; to the developer, not the platform<p>- maintenance burden<p>The &quot;I bankrupted my startup by running tests in an infinite loop&quot; blog posts happen ~once a year, while the number of customers (including internal teams!) who inadvertently went down because of this quota was staggering. I feel like I used to see one a week, at least. Most often someone on the team was like &quot;oh I&#x27;m going to turn this down to zero because we don&#x27;t want to spend any money during development&quot;, never told anyone, and then they go live and they forgot to turn the knob back up (or didn&#x27;t properly estimate traffic&#x2F;costs and set it too low).<p>I can tell you it hurts revenue <i>a lot</i> more when a large customer goes down for 15 minutes due to quota issues and their usage drops to zero (both in terms of revenue and customer credibility) vs when tiny developer accidentally blows through 10k in a month and we refund it (since, obviously, the providers cost is a lot less than that).')