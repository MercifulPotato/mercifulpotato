Item(by='missblit', descendants=None, kids=None, score=None, time=1608529305, title=None, item_type='comment', url=None, parent=25491991, text='The primary purpose of an iterator is to allow algorithms to be written in a generic manner without needing to know details about the type it&#x27;s operating on. Since the algorithm only operates on the iterator type, any number of collections or other code that exposes that iterator type can be plugged into the same algorithm.<p>Take `std::copy_n` for example. You _could_ use this to copy from one vector to another:<p><pre><code>    std::vector&lt;int&gt; a = {1,2,3}, b = {0,0,0};\n    std::copy_n(a.begin(), a.size(), b.begin());\n</code></pre>\nBut iterators also allow the input and output collection types to be different:<p><pre><code>    std::vector&lt;int&gt; a = {1,2,3};\n    std::array&lt;int,3&gt; b;\n    std::copy_n(a.begin(), a.size(), b.begin());\n</code></pre>\nOr even for the output to not be associated with a container at all.<p><pre><code>    std::vector&lt;int&gt; a = {1,2,3};\n    std::copy_n(a.begin(), a.size(), std::ostream_iterator&lt;int&gt;(std::cout, &quot; &quot;));</code></pre>')