Item(by='loup-vaillant', descendants=None, kids=[25425932], score=None, time=1607987656, title=None, item_type='comment', url=None, parent=25422870, text='&gt; <i>In your last four code blocks, you demonstrated three alternate ways to implement the functionality you want without defer.</i><p>My, I didn&#x27;t think it was possible to miss the point like that. Are you even arguing in good faith? Let&#x27;s examine for a moment the 3 other alternatives.<p>First, we get the &quot;repeat ourselves&quot; problem: when I have several exit points, I must clean up at <i>each exit</i>. And if I edit the code in any way, (for instance by adding yet another check), I must review everything that has been initialised until this point and clean it up there again. This might be okay if I have only 1 or 2 exit points, but if I have more this is clearly unacceptable.<p>Second, we have goto. We replace our exit points by a goto cleanup. That one at least can scale. I don&#x27;t like it however for three reasons. First, the cleanup code is at the end, far from the init code, so checking that the two pairs together correctly is inconvenient. Second, I need to manage an additional variable for the return value. Third, goto is banned in a lot of places, no matter how convoluted the alternatives may be.<p>Third, we have this monstrous pyramid if else that wastes horizontal space, requires you to re-indent everything at the slightest edit, separates cleanup code from init code, and is just plain ugly. The only thing going for it is the single exit point, and frankly it isn&#x27;t much.<p>---<p>Those &quot;alternatives&quot; are anything but. They&#x27;re what we have to do when faced with a limited language that doesn&#x27;t express what we want to say. Workarounds, not solutions.<p>&gt; <i>minor syntax adjustments</i><p>Your perspective must be seriously warped if you&#x27;re calling the function-wide reorganisation I spoke of &quot;minor syntax adjustments&quot;. Or you&#x27;re not arguing in good faith.<p>&gt; <i>The real answer to &quot;why defer?&quot;, of course, is that the authors need it to implement panic&#x2F;recover.</i><p>That is a separate point, which I <i>think</i> I agree with. Me, I just want a way to trigger an instruction when we exit the current scope. It&#x27;s the necessary complement to `break` and `return`, which provide ways to exit scope before the end of the block. We could get rid of them, and apply a straightjacket structured programming discipline of course, but personally, I don&#x27;t think I&#x27;m ready to give up on `break` and `return`.')