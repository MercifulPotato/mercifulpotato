Item(by='chongli', descendants=None, kids=None, score=None, time=1604701171, title=None, item_type='comment', url=None, parent=25011137, text='<i>I found something like splitting a string into words not very intuitive...</i><p>Just use a couple of accumulators (one for the current word, one for the list of completed words).<p><i>Also the classical (recursive) fibonacci function everyone shows has accidental complexity of O(2^n).</i><p>That&#x27;s moving the goalposts. If you want a really fast fibonacci function then the classical iterative algorithm [which is O(n)] is not what you want either. Better to use matrix exponentiation which you can implement nicely with recursion using a divide-and-conquer approach similar to mergesort, giving you fibonacci with time O(log(n)).<p><i>I never saw a recursive version of bresenham&#x27;s line plotting algorithm so this might be a good candidate as well ;)</i><p>There&#x27;s nothing special about Bresenham&#x27;s line algorithm that would make it particularly challenging to implement with recursion.')