Item(by='cyanic', descendants=None, kids=[25179767, 25178888], score=None, time=1606058684, title=None, item_type='comment', url=None, parent=25176531, text='Named parameters using a struct.<p><pre><code>    struct calculate_args {\n        int x, y;\n        enum {add=0, sub} operator;\n    };\n\n    int calculate_func(struct calculate_args args) {\n        if (args.operator == add)\n            return args.x + args.y;\n        else\n            return args.x - args.y;\n    }\n\n    #define calculate(...) calculate_func((struct calculate_args){__VA_ARGS__})\n</code></pre>\nNow you can combine positional and named parameters or omit them.<p><pre><code>    calculate(1, 3); &#x2F;&#x2F; 4\n    calculate(8, 3, .operator=sub); &#x2F;&#x2F; 5\n    calculate(.operator=sub, .y=7); &#x2F;&#x2F; -7\n</code></pre>\nWorks very well in cases where there is a lot of parameters that default to 0.\nKeep in mind that you still need to know how structs work and you lose compile-time error detection.')