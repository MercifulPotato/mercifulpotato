Item(by='Jasper_', descendants=None, kids=None, score=None, time=1603297029, title=None, item_type='comment', url=None, parent=24844992, text='<p><pre><code>    for (let elem of arr) {}\n</code></pre>\nis actually quite a bit slower than<p><pre><code>    for (let i = 0; i &lt; arr.length; i++) {}\n</code></pre>\nbecause the people who built the JS spec decided that there should be a brand new heap object created <i>every iteration</i>. At the time, there was thought that escape analysis would let them optimize away this object, but from what I can tell, ten years later, engines are really bad at it. Escape analysis is a heuristic, and it needs to be conservative.<p>And yes, this isn&#x27;t a micro-benchmark. At least in my application, performance is mostly bounded from GC pauses and collection, <i>not</i> slow code execution. Anything to reduce your GC pressure is going to be a good improvement... but note that modern frameworks like React are already basically trashing your heap, so changing out your loops in an already GC-heavy codebase won&#x27;t really do much.')