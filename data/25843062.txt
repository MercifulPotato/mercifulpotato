Item(by='grawprog', descendants=None, kids=None, score=None, time=1611122889, title=None, item_type='comment', url=None, parent=25842969, text='I don&#x27;t know if it relies on C so much but what C is an abstraction over. An array in C is a set of data that exists in consecutive locations in memory. Memory addresses start at 0. Technically, a C array located at the start of addressable memory, by the nature of the way we&#x27;ve decided computers work in general, would start at 0. Plus as many extra zeros as your architecture can represent. This is generally the way computers are assumed to work.<p>Higher level general purpose programming languages exist primarily to serve as an abstraction over the fundamental architecture of computers. C is technically a higher level language than machine code and assembly code, both of which use the &#x27;lowest address is zero&#x27; abstraction. Every other abstraction, including C exists over top of that.<p>My point is mostly, if you&#x27;re trying to remain relatively close to abstracting over general computing keeping arrays and their index based on what they are fundamentally abstracting over makes sense.<p>In domain specific applications, it may make less sense.')