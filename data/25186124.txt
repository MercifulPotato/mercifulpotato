Item(by='marcan_42', descendants=None, kids=None, score=None, time=1606135246, title=None, item_type='comment', url=None, parent=25185067, text='People trying to build &quot;real&quot; products on top of Arduino usually do so in spite of, not thanks to, the platform.<p>Once you start trying to build a polished experience, not a quick hack, you quickly run into limitations that are solvable by dropping to lower levels. I ran into this when I tried to make an ESP8266 temperature sensor - the Arduino stuff didn&#x27;t have working power management, so it would heat up skewing the measurements, nor anything like threading or coroutines for network handlers, so a single stuck network request would block all others. Ironically, the Arduino port included a coroutines implementation under the hood, but used it in a silly way with a single coroutine. I rebuilt the thing on top of the ESP SDK, stole the thread switching code from Arduino, and used it to build a nice low power version that could handle up to 4 requests at once.<p>I don&#x27;t think I&#x27;ve ever seen a well engineered product built on Arduino that wasn&#x27;t trivial. They might&#x27;ve hacked on it until the user experience is good, but then you peek under the hood and it&#x27;s clear the engineering isn&#x27;t good. And that ends up creeping into the user experience in the end, or worse. (OnlyKey comes to mind, which is built on Arduino and also its authors clearly do not have the competence to be writing security&#x2F;crypto code, but they seem unwilling to accept any criticism).')