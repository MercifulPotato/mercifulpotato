Item(by='rswail', descendants=None, kids=[25343281], score=None, time=1607417012, title=None, item_type='comment', url=None, parent=25342797, text='Relational queries and ACID are still absolute requirements for managing your data. Web frontends are just that, frontends. Is there something mathematically changed that means that relational logic is somehow now false?<p>MySQL was a hack that people that didn&#x27;t understand relational databases used as a glorified K&#x2F;V store. It was &quot;fast&quot; compared to the alternative of postgres, but of the three qualities of good, cheap, fast, MySQL only won on the last of those and for a definition of &quot;fast&quot; that most of those web frontends didn&#x27;t need.<p>&quot;SQL is not machine-friendly&quot;? Why not? It&#x27;s also not that relevant to the performance of a relational query. That&#x27;s driven by the performance characteristics, which are driven by the query planner using the statistical analysis of that data.<p>&quot;...the transaction system means you&#x27;re virtually guaranteed to deadlock...&quot; you mean, if you try to break ACID, then the database enforces constraints to stop you and make you reconsider your data access properly? That&#x27;s like saying Rust&#x27;s borrow checker doesn&#x27;t allow you to program race conditions.<p>Storing JSON in a K&#x2F;V store and doing joins in code is a regression, not an advance. Not expressing your data&#x27;s constraints as actual constraints means that bugs can happen that shouldn&#x27;t.')