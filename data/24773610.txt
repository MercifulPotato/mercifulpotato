Item(by='aarchi', descendants=None, kids=None, score=None, time=1602655526, title=None, item_type='comment', url=None, parent=24763312, text='I designed Nebula [0], a LLVM front end for Whitespace, written in Go. It&#x27;s the first ahead-of-time compiler for Whitespace. It features its own bespoke intermediate representation in static single assignment form for simpler optimization. Whitespace instructions are stack-oriented like Forth, thus most instructions modify the stack. Nebula lowers these stack-oriented instructions to registers in SSA form such that the stack is modified only once per basic block. It was trivial to add support for Brainfuck, lowering to the same IR.<p>I have record of almost 100 Whitespace interpreters [1], so I am confident that Nebula is the first AOT compiler for Whitespace. Another project is CensoredUsername&#x27;s Whitespace JIT compiler in Rust that assembles code on the fly and deoptimizes on error.<p>[0]: <a href="https:&#x2F;&#x2F;github.com&#x2F;andrewarchi&#x2F;nebula" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;andrewarchi&#x2F;nebula</a><p>[1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;andrewarchi&#x2F;ws-collection" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;andrewarchi&#x2F;ws-collection</a>')