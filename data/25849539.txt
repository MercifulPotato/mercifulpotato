Item(by='samuell', descendants=None, kids=[25849633, 25851077, 25850637, 25851072, 25849772], score=None, time=1611165400, title=None, item_type='comment', url=None, parent=25848542, text='The core of the FBP principles are the holy grail of true componentized function architecture.<p>Instead of losing yourself in ever more complex syntax convolutions as has happened in a lot of functional programming, you make the components (even long running stateful ones) self contained with ports for data input and output as the sole means of communicating with them, over buffered channels to allow asynchronous computation, and most importantly keep the network definition separate.<p>Just this idea in itself is just brilliant. Hats off to \nMr Morrison for that!<p>It allows to decouple complex software into reusable components, without clever FP syntax.<p>(Though, FP is perfect for implementing the components themselves. It just doesn&#x27;t really scale all too well for whole program architecture, in my experience).<p>One point to note: The visual component of many fbp systems is completely optional, as is the idea of using novel DSLs. You can as well define your networks and components in pure code. See GoFlow <a href="https:&#x2F;&#x2F;github.com&#x2F;trustmaster&#x2F;goflow" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;trustmaster&#x2F;goflow</a>) and my own little experiment FlowBase (<a href="https:&#x2F;&#x2F;flowbase.org" rel="nofollow">https:&#x2F;&#x2F;flowbase.org</a>) for examples of that, in Go.<p>I successfully built a rather complex little app to convert from Semantic web RDF format to (semantic) mediawiki XML dump format, in two weeks straight, of linear development time: for each component (of ca 7), implement, test, go to the next component (See: <a href="https:&#x2F;&#x2F;github.com&#x2F;rdfio&#x2F;rdf2smw" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;rdfio&#x2F;rdf2smw</a>)<p>The same implementation in procedural PHP took months, and still doesn&#x27;t have all bugs and strange behaviours filed out.')