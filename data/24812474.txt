Item(by='tanelpoder', descendants=None, kids=None, score=None, time=1602962873, title=None, item_type='comment', url=None, parent=24810988, text='Author here. I regularly troubleshoot non-trivial performance problems on Linux (mostly running busy Oracle databases, but other things too).<p>I wrote 0xTools for two main reasons:<p>1) Have an easy way to report process&#x2F;thread level top activity, but with the ability to break down what the threads were doing at the time - were they stuck in a system call, spending excessive time (sleeping) in some kernel location, etc.<p>2) Have an ability to &quot;go back in time&quot; for advanced troubleshooting, so when some intermittent problem happens, you can troubleshoot it &quot;at first occurrence&quot; and not have to wait for the problem to show up again. For that, you must have detailed (but low-overhead) always-on collection of thread activity collection enabled.<p>Since I&#x27;m using these tools in critical production systems, they also must be safe to use, must not require installation of custom kernel modules, etc - and sampling the Linux kernel-presented &#x2F;proc filesystem with standard OS tools can go surprisingly far. My tools just make collection and analysis of the data easier.<p>You may ask why not just write an eBPF script for this - most of the systems I end up troubleshooting are still running RHEL6 (or clones like CentOS 6), with some RHEL5, RHEL7 with Linux kernels 2.6.32 and 2.6.18 and 3.10 respectively. No functioning eBPF there! It will probably take 10 years before 99% of <i>traditional enterprise</i> production systems are running RHEL 8.1 or newer (where RedHat officially started supporting eBPF).<p>Give it a try, it&#x27;s very easy to test - no uncommon dependencies or OS reconfiguration needed. Questions, comments, enhancement requests welcome!')