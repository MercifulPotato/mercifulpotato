Item(by='thesz', descendants=None, kids=None, score=None, time=1603759499, title=None, item_type='comment', url=None, parent=24902811, text='My point was that &quot;parsing with derivatives&quot; not necessarily a slow thing and I provided example supporting that point.<p>I specifically has been searching for performant regular expression library recently. The &quot;parsing with derivatives&quot; approach can share more of the state, I believe, when doing several matches in parallel (think about trie-encoded dictionary) than DFA-based libraries do and should have smaller startup time.<p>I have not misinterpreted your argument. I have provided a point where it does break because I consider that point important. The reader of our conversation will, from now on, I hope, not consider the original &quot;parsing with derivatives&quot; paper as the state of the art and, probably, will come up with something himself.<p>I, actually, did and I am glad you answered my points. They made me thinking.<p>I think that parsing with derivatives can be used as a tool to parse (in parallel! possibly sharing derivatives computed!) parts of text with regular subgrammars and then something like CYK can be applied (again, in parallel like in [1]) to the regions parsed.<p>[1] <a href="https:&#x2F;&#x2F;jyp.github.io&#x2F;pdf&#x2F;PP.pdf" rel="nofollow">https:&#x2F;&#x2F;jyp.github.io&#x2F;pdf&#x2F;PP.pdf</a><p>PS<p>Please note that in [1] they show that chart parsing struggle with exactly regular subgrammars - typical chart parsing algorithm has O(n^2) complexity for repetitions expressed with asterisk in regular grammars. I do not think my &quot;solution&quot; is necessarily better than in the [1], but I think I have to think about it more.')