Item(by='dahart', descendants=None, kids=None, score=None, time=1606877550, title=None, item_type='comment', url=None, parent=25271564, text='The names reflect pretty well what’s in the inner loop. A rasterizer’s outer loop is over the scene (objects&#x2F;triangles&#x2F;etc), and the inner loop is over pixels. It does what it says in the sense that it’s rasterizing each primitive one at a time.<p>A ray tracer, on the other hand, is (sometimes) looping over pixels in the outer loop, and then iterating over objects (“traversing the scene”) in the inner loop.<p>The existing names are also good descriptors in the sense that they describe the core of what must be computed. A rasterizer always rasterizes. A ray tracer always traces rays but does not always result in pixels, the result can end up in a spatial data structure, it can trace resolution independent shadows &amp; reflections, it can save results in a cache that gets rasterized later, it can end up in multiple pixels (splatting, pixel filtering), etc., etc.. Yes it’s very common to render pixels with a ray tracer, but it’s not <i>required</i> or inherently part of the algorithm, while rasterization doesn’t exist without pixels.')