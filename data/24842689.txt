Item(by='munificent', descendants=None, kids=[24844135, 24844204], score=None, time=1603230549, title=None, item_type='comment', url=None, parent=24840450, text='Yeah, there&#x27;s a longer essay you or I could write about path dependence here. The language that enables you to get to the point where your codebase is that big in the first place may not be the language best suited to that codebase once it has.<p>That&#x27;s the main argument in favor of optional type systems like TypeScript. Start small in a dynamically typed language and then add the types later when you need them.<p>But my personal experience is that I&#x27;ve never found types to cause much friction when programming in the small. What I have found painful is <i>not having GC</i> and <i>not having type inference</i>. If I was doing a startup and needed to be able to prototype and change quickly, then C++ or Java would be pretty painful. But C# or any modern typed, managed language with a decent modern IDE? I would be surprised if you were any less productive than someone using Python or Ruby.')