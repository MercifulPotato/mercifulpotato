Item(by='labawi', descendants=None, kids=[25704309], score=None, time=1610222732, title=None, item_type='comment', url=None, parent=25703101, text='&gt; paging out has zero cost<p>Paging out, as in removing a mapping, can be surprisingly costly, because you need to invalidate any cached TLB entries, possibly even in other CPUs.<p>&gt; each mmap file will need 1 page of physical memory<p>Technically, a lower limit would be about 2 or so usable pages, because you can&#x27;t use more than that simultaneously. However unmaps are expensive, so the system won&#x27;t be too eager to page out.<p>Also, for pages to be accessible, they need to be specified in the page table (actually tree, of virtual -&gt; physical mappings). A random address may require about 1-3 pages for page table aside from the 1 page of actual data (but won&#x27;t need more page tables for the next MB).<p>&gt; application X using GB of memory<p>I think there is a difference between reserved, allocated and file-backed mmapped memory. Address space, file-backed mmapped memory is easily paged-out, not sure what different types of reserved addresses&#x2F;memory are, but chrome probably doesn&#x27;t have lots of mmapped memory that can be paged out. If it&#x27;s modified, then it must be swapped, otherwise it&#x27;s just reserved and possibly mapped, but <i>never</i> used memory.')