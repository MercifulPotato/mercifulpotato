Item(by='eesmith', descendants=None, kids=None, score=None, time=1602015904, title=None, item_type='comment', url=None, parent=24701004, text='Which one is that? Waterfall is almost a mythical archetype - as I understand it, in practice the closest is usually &quot;modified waterfall&quot;, which supports some feedback in the stages.<p>Steve McConnell in &quot;Rapid Development&quot; writes:<p>&gt; The waterfall model is document driven, which means that the main work products that are carried from phase to phase are documents. In the pure waterfall model, the phases are also discontinuous - they do not overlap. ...<p>&gt; The pure waterfall model performs well for product cycles in which you have a stable product definition and when you&#x27;re working with well-understood technical methodologies. In such cases, the waterfall model helps you to find error in the early, low-cost stages of a project. It provides the requirements stability that developers crave. If you&#x27;re building a well-defined maintenance release of an existing product or porting an existing product to a new platform, a waterfall lifecycle might be the right choice for rapid development. ...<p>&gt; The waterfall model works well for projects that are well understood but complex, because you can benefit from tackling complexity in an orderly way. It works well when quality requirements dominate cost and schedule requirements. Elimination of midstream changes eliminates a huge and common source of potential errors.<p>&gt; The waterfall model works especially well if you have a technically weak staff or an inexperienced staff because it provides the project with a structure that helps to minimize wasted effort.<p><a href="https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;rapiddevelopment00mcco&#x2F;page&#x2F;136&#x2F;mode&#x2F;2up?q=waterfall" rel="nofollow">https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;rapiddevelopment00mcco&#x2F;page&#x2F;136&#x2F;...</a>')