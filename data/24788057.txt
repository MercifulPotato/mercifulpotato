Item(by='m1el', descendants=None, kids=[24788193], score=None, time=1602766334, title=None, item_type='comment', url=None, parent=24783387, text='Sometimes when there&#x27;s a discussion on alternative operating systems, people bring up Urbit.\nUrbit advertises itself as an OS with simple foundation: Nock VM.\nHere&#x27;s the entire specification for Nock: <a href="https:&#x2F;&#x2F;github.com&#x2F;urbit&#x2F;urbit&#x2F;blob&#x2F;master&#x2F;doc&#x2F;spec&#x2F;nock&#x2F;5.txt" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;urbit&#x2F;urbit&#x2F;blob&#x2F;master&#x2F;doc&#x2F;spec&#x2F;nock&#x2F;5.t...</a><p>You may notice that there&#x27;s barely any English in this specification, or even examples.\nBut that&#x27;s not the main problem. The main problem for me is that this VM lacks support for arithmetic operations.\nWell that&#x27;s not quite true.  It has all the necessary components to support arithmetic operations: it has comparison and increment.  \nCongratulations, now go build your own Peano from scratch.<p>The author claims that this is not a problem! The VM will optimize your increments in the loop to subtraction, and it will optimize those nested loops to multiplication and division.\nBut now you have an even worse problem! How the hell are you going to detect that a loop is a subtraction?! It&#x27;s a halting problem hard task.\nSo instead what you end up having is a VM with an informal specification, and if you stray away too much from it, your program is going to run hundreds of loops just to subtract two values, which means the program may boil up the oceans until it finishes.<p>And if you&#x27;re being so smarty-pants about increment and equality being sufficient for arithmetics, why not use Church numerals?\nThat&#x27;s an even simpler foundation that the Nock VM!<p><a href="https:&#x2F;&#x2F;tromp.github.io&#x2F;cl&#x2F;Binary_lambda_calculus.html" rel="nofollow">https:&#x2F;&#x2F;tromp.github.io&#x2F;cl&#x2F;Binary_lambda_calculus.html</a>')