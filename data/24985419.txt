Item(by='akra', descendants=None, kids=None, score=None, time=1604448011, title=None, item_type='comment', url=None, parent=24984672, text='IMO it depends especially if your coming from C# - sometimes yes, sometimes no for existing code bases.<p>On the features you mention while some of those features are being added to C# (and not all of them are planned to) from what I&#x27;ve seen they often aren&#x27;t as powerful&#x2F;useful as the F# version, are not as consistent&#x2F;concise due to legacy syntax or don&#x27;t interact with other features as well. F# is also taking C# features so its not like you will be left behind either (e.g. Span). For me more importantly the underlying defaults are a feature that can&#x27;t be ported which IMO F# wins here.<p>C# is a fine OO language having worked with both extensively, just F# IMO is slightly better with less ceremony than typical C# code. Is it worth switching? It depends on your problem and where your starting from. In this case they are switching from OCAml so F# probably makes more sense. If your starting from a clean state it all depends tbh what you find easier to learn - IMO many JS&#x2F;Python&#x2F;Go&#x2F;etc programmers if trying .NET Core might find F# easier than moving to C#&#x2F;Java from their own personal preferences - its often called a &quot;typed Python&quot; by users. For C# users probably less so; but learning it might change your C# code style for the better.')