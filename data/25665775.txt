Item(by='ljhsiung', descendants=None, kids=[25666166], score=None, time=1609981481, title=None, item_type='comment', url=None, parent=25664872, text='Incredibly doubtful. Current attacks are, by this point, pretty well understood. One can simply &quot;check off the list&quot; of attacks and simulate the code gadgets to see what happens (EDIT: e.g. <a href="https:&#x2F;&#x2F;github.com&#x2F;IAIK&#x2F;transientfail" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;IAIK&#x2F;transientfail</a> provides a SoK with simple PoCs). In other words, I&#x27;m positive that no &quot;script kiddie&quot; can exploit <i>any</i> silicon using current attacks, not just the M1. <i></i>*<p>The more difficult&#x2F;interesting problem is being future-proof to whatever else undiscovered. Many Spectre attacks are heavily timing based, and even a single cycle variation in pipeline stages or flushing structures will spawn a new variant (see, MDS vs. Spectre). This is actually partially why a current trend in hardware research is trending towards fuzzing-type stuff [1].<p>Something also worth noting is that it&#x27;s incredibly difficult to quantify &quot;leakage&quot;. There&#x27;s a pretty big difference between vulnerable and exploitable-- e.g. original Spectre papers had 10KB&#x2F;s of kernel dumping, which is a big reason it was scary, but would it really be a big deal if it had &lt;1b&#x2F;s? Not going to explicitly name and shame, but there&#x27;ve been a handful of reasonable high profile &quot;vulns&quot; with cute domain names that I&#x27;m shocked to even see accepted at conferences due to how contrived the exploit was and tiny their leakage rates were.<p>I personally don&#x27;t really know how to address the quantification problem, but I very much think it&#x27;s necessary in any discussion of a bug&#x27;s impact&#x2F;severity. Definitely gets exhausting when every cute name gets a headline, and it&#x27;s easy to blow things out of proportion without some grounding in reality.<p><i></i>* NOTE: I do think script kiddies have their place still. Definitely important to have automation to determine whether a system has updated security [2], it&#x27;s just that I doubt such a scenario is applicable to Apple.<p>[1] <a href="https:&#x2F;&#x2F;www.usenix.org&#x2F;conference&#x2F;usenixsecurity20&#x2F;presentation&#x2F;moghimi-medusa" rel="nofollow">https:&#x2F;&#x2F;www.usenix.org&#x2F;conference&#x2F;usenixsecurity20&#x2F;presentat...</a><p>[2] <a href="https:&#x2F;&#x2F;owasp.org&#x2F;www-project-top-ten&#x2F;2017&#x2F;A6_2017-Security_Misconfiguration" rel="nofollow">https:&#x2F;&#x2F;owasp.org&#x2F;www-project-top-ten&#x2F;2017&#x2F;A6_2017-Security_...</a>')