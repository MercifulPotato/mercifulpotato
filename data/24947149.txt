Item(by='crdrost', descendants=None, kids=None, score=None, time=1604094145, title=None, item_type='comment', url=None, parent=24941026, text='I’m not sure that we should read postmodernists as being willy-nilly relativists. Like certainly the sort of “practical postmodernism” that I see in Git is not willing to say “Linux is BSD” the way a relativist might. Linux is a unix kernel and more broadly an operating system and a community led by Linus Torvalds for several years and a dozen other things besides, postmodernists would claim—and that there is no Archimedean “sturdy enough place to stand” to tell you which of these definitions is the “best”—but it is not a bouncy castle or a monad burrito tutorial or whatever nonsense I just “cook up”. Like the philiospical postmodernists’ criticism of the modernist “reason is going to solve the problem of finally accessing truth and we are gonna have a big truth party” is that reason essentially makes a 2D projection of a 3D truth, and so you have to approach the same truth from multiple perspectives with reason to get a full appreciation for it. Reason does not eliminate the problem of perspectives—sort of a Platonic fallacy, that reason will give you one single “world of the forms”—and that it shouldn’t even try because perspectives are great, let’s have some more perspectives.<p>I’m tying this to the notion of Git’s branching model of course, each branch being something of a slightly different perspective or reference code for the same amorphous project of Linux. What consumers receive is just that then, a perspective on the broader project, one particular snapshot with various patches and so forth. In an OOP analogy Linux is a class and they receive an instance of that class, maybe.<p>But yeah I think I am with you, dissociating from <i>all</i> fixed concepts altogether is probably not a great direction to go with this. You want <i>some</i> project organization and request or issue tracking. I am sorry if I sort of was suggesting that issue-tracking at all was meaningless, I definitely don’t agree with that. But I do think it instead has something to do with recognizing that the code to resolve an issue (if there is code at all, if it&#x27;s not just getting closed as works-as-intended) leads to that issue having a “status” which needs to be tracked across multiple branches, and that this process is tedious and error-prone when we try to do it by hand.')