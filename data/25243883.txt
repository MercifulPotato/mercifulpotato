Item(by='Dylan16807', descendants=None, kids=[25257358], score=None, time=1606639793, title=None, item_type='comment', url=None, parent=25241506, text='&gt; I&#x27;ll answer with my own hypothetical. If I write a program that dynamically links a library performing the same GPL&#x27;d fluid sim calculations, it is presumably forced to be GPL, because it links to it. What if someone comes along and runs the program but at runtime uses LD_PRELOAD to override the dynamic linker, linking it to an alternative library that presents the same interface. Is the program still required to be GPL?<p>I&#x27;ve never believed that linking made your code <i>necessarily</i> GPL in the first place.  I don&#x27;t care what the FSF says, they&#x27;re not exactly unbiased.<p>&gt; I think you are specifically responding to my &quot;does not work without&quot; interpretation overly literally. Clearly if the program is written for and tested against a specific interface of a GPL&#x27;d program, it is intended to work with that program.<p>&gt; On the other hand if it&#x27;s written to call into some kind of standard interface, it no longer requires that GPL program specifically, but could work with any program implementing that interface.<p>Well that&#x27;s basically how the standard already works.  If your code is using a specialized enough interface, sharing data structures you got from the GPL code, then it&#x27;s derivative of the GPL code and needs to follow the GPL.<p>So while &quot;process boundary&quot; is an inexact tool, your suggestion of &quot;does not work without&quot; doesn&#x27;t seem significantly better to me.')