Item(by='cryptica', descendants=None, kids=None, score=None, time=1611477893, title=None, item_type='comment', url=None, parent=25887373, text='It sounds like were I was around my 5th year of coding. After 15 years though I changed my mind again on certain things.<p>&gt; Typed languages are better when you&#x27;re working on a team of people with various experience levels<p>I&#x27;ve changed my mind back and forth multiple times about statically versus dynamically typed languages and after 10 years I settled on dynamically typed languages as superior in almost all cases. The main case where statically typed is better is if most people on your team are juniors and you are doomed to produce poor quality code so you might as well &#x27;label the spaghetti&#x27;...<p>I can can with almost 100% confidence that sticking to dynamically typed languages leads to worse quality in the long run. It has to do with loss of separation of concern and subtleties of human psychology (gives false confidence, encourages over-engineered interfaces and ossifies design mistakes).<p>&gt; Software architecture probably matters more than anything else.<p>This is the most important thing. 100% true. Glad the author seems to really get this. Some people don&#x27;t figure this out after 20 years.<p>&gt; Designing scalable systems when you don&#x27;t need to makes you a bad engineer.<p>I disagree about this point. Writing scalable code can be elegant and fast. It just requires more careful design to get right. A bad engineer will over-engineer it; that&#x27;s the real problem.')