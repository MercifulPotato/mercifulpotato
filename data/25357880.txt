Item(by='chrismorgan', descendants=None, kids=[25357917], score=None, time=1607517446, title=None, item_type='comment', url=None, parent=25357680, text='I’m going to double down here.<p>React and its ilk were designed for use in <i>apps</i>, where there are meaningful advantages in powering things entirely with client-side scripting rather than generating server-side HTML and possibly enhancing it on the client side with scripting.<p>They were then abused by increasingly many people for rendering <i>static</i> content, things like blogs.<p>These people were using the wrong tool for the job, and it has had a detrimental effect on the web.<p>Now, pages are regularly far heavier than before with expensive client-side code to do stuff that should have been done server-side in almost all cases, and it became popular enough that search engines eventually had to cave and introduce a full JavaScript execution environment in their indexers, tooling everywhere got a lot more complicated, and the last state of the web was worse than the first.<p>There <i>is</i> a place for things like React: in rich apps, and perhaps even for server-side rendering, though I’m not fond of that for things like blogs because it encourages you to end up depending on it on the client side too.<p>But client-side JavaScript app frameworks made some formerly-impossible things possible, and formerly-complex-and-unmaintainable things tractable.<p>This monstrosity, on the other hand, offers no actual benefits for the user, and does introduce a few new problems (quirks mode for styling, and an unnecessary dependency on JavaScript). And so I say it should never be exposed to the client side. Use it as an input format for your blog generator if you like, but don’t try shipping a wonky JSON&#x2F;HTML polyglot directly.')