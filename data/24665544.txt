Item(by='saagarjha', descendants=None, kids=None, score=None, time=1601663503, title=None, item_type='comment', url=None, parent=24661765, text='&gt; In that case, wouldn&#x27;t any implementation be O(1) regardless of whether they use an array, linked list, hashtable, heap, stack, whatever?<p>Yes, because there is no &quot;n&quot; involved. For example, this code:<p><pre><code>  for i in 1...1_000_000 {\n      print(i)\n  }\n  return [&quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;].contains(character)\n</code></pre>\nis still O(1), it just has a higher constant factor. The only exception is that you could have psuedo-polynomial algorithms that depend on the value input itself, like<p><pre><code>  func foo(i: Int) {\n      for _  in 1...i {\n          print(i)\n      }\n  }</code></pre>')