Item(by='weff_', descendants=None, kids=[25827080, 25826692], score=None, time=1611004110, title=None, item_type='comment', url=None, parent=25826344, text='&gt;the discipline is all of 20-30 years old.<p>How do you define software engineering such that it&#x27;s 20-30 years old? Why isn&#x27;t it 50 years old? I ask because I&#x27;ve heard the argument that software engineering is a young discipline but it feels like you&#x27;re <i>really</i> stretching it with those 20-30 years.<p>&gt;When the S-curve of hardware progress flattens, software engineering will gain in importance.<p>But a lot of software engineering issues are entirely divorced from the underlying hardware. So I&#x27;m not sure how the shape of hardware has any significant bearing to our current situation.<p>&gt;Engineering is very much about the accumulation of experience<p>I would argue that we actually know a ton about how to build software. It&#x27;s just that it&#x27;s not really being taught or valued or applied. I would argue that&#x27;s an important distinction because it strengthens the analogy of electrical engineer vs electrician. So it&#x27;s more about just an accumulation of experience.')