Item(by='gameswithgo', descendants=None, kids=[25111542], score=None, time=1605533200, title=None, item_type='comment', url=None, parent=25109950, text='Some of it is probably accident of history.<p>Some of it can be driven by external factors: javascript was the only choice for an important domain for a long time.<p>Some if it I think is due to attractive syntax, or tooling. Python for example, horrible runtime performance, but people were drawn to it for probably syntax and tooling reasons.<p>Comparing Rust and OCaml:<p>The OCaml syntax is a bit odd. I was quite taken by F#, which is a very similar language to OCaml, but with some of the cumbersome syntax removed.  F# seemed quite nice, looking at OCaml it just <i>felt</i> horrible and I didn&#x27;t want to deal with it. In practice I know it would be fine,  just like you get used to Lisp and it&#x27;s parens, but there is a real psychology there that turns people away.<p>OCaml has good runtime performance, but its not the kind of language that will draw in C&#x2F;C++ programmers or work for domains where you need C or C++ currently. Lack of multi-core is a huge turn off for a lot of people.  This is the era where multi-core is our only path to more performance!<p>Rust syntax is a little more familiar to people, the runtime performance is top notch, very good at leveraging more cores, and maybe most importantly the community has made a concerted effort to make the language as approachable as possible. With good&#x2F;friendly documentation and community. Easy install process, decent editor support, etc. Go ask a question about &quot;Which way is faster&quot; in a C# forum, you get a lecture about how you shouldn&#x27;t worry about that. On a Rust forum you get an deep dive into performance concerns and language design. This seems to have drawn in people from communities you wouldn&#x27;t expect.  A low level, complicated language that Ruby and Javascript developers are drawn to? An interesting result!')