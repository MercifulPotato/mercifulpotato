Item(by='carapace', descendants=None, kids=[25701386], score=None, time=1610205610, title=None, item_type='comment', url=None, parent=25699574, text='In re: Haskell&#x27;s goodness or badness, compare and contrast with, say, PHP (crap language with wild success.)  Or Prolog (a stately Elven language with deep but obscure success.)  Haskell is what it is.<p>In re: types and data, FP <i>is</i> good for that.  See e.g. &quot;Domain Modeling Made Functional&quot; by Scott Wlaschin ( <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Up7LcbGZFuo" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Up7LcbGZFuo</a> ) it&#x27;s about F# but the concepts apply cross-language.<p>In re: FP PLs &quot;done right&quot; I submit Elm lang.  I&#x27;ve been using Elm recently and it gets the job done.  It&#x27;s weird though:  on the one hand, as a experienced professional it feels like a toy.  The error messages feel almost insulting, like I&#x27;m being patronized.  On the other hand, once I got over that (silly) reaction, they&#x27;re awesome.  Changing code is a breeze, because Elm leverages the crap out of the type system, and the structure of the code and runtime prevent whole vast categories of errors.<p>Combine that with the sort of Domain-Driven development that Wlaschin is talking about and &quot;baby, you got a stew going!&quot;')