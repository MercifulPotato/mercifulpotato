Item(by='dragonwriter', descendants=None, kids=None, score=None, time=1603288030, title=None, item_type='comment', url=None, parent=24846442, text='&gt; Trying to bend Rails into non-AR database usage is going to lead to tears sooner rather than later IMO. It&#x27;s just so very integrated.<p>Is that really true? While I&#x27;ve barely used Rails in anger, and not at all recently, I was under the impression that all the major Ruby ORMs and high-level database libraries (e.g., DataMapper, Sequel) are heavily focussed on Rails usage and usually around AR pain points like working with DBs in Rails that don&#x27;t fit ARs opinionated patterns.<p>&gt; Having separate applications with (write) access to the same database is similarly going to end in trouble.<p>It shouldn&#x27;t, if the DB is designed for that, which usually means each application sees the DB exclusively through its own set (probably in a distinct schema) of views, and keeps it&#x27;s filthy little hands off base tables. That&#x27;s a best practice for multiple application access to an RDBMS that is older than the Web.')