Item(by='kentonv', descendants=None, kids=[25588664, 25588089, 25589557], score=None, time=1609373226, title=None, item_type='comment', url=None, parent=25586812, text='Unless you are targeting a constrained embedded system, this kind of anti-memory-allocation thinking is counter-productive. Avoiding memory allocation significantly increases the complexity of an API -- or worse, leads to shortcuts like using (thread-unsafe) globals or (overrun-prone) fixed buffers.<p>In C, dealing with memory allocation is such a pain that C programmers still tend to avoid it. But C++, especially post-C++11, makes dynamic memory allocation much, much easier to deal with. (And GC&#x27;d languages, obviously, are easier still.) There is still a performance cost, obviously, but that cost almost never matters in application programming use cases, and is even negligible in many systems programming cases.<p>I do think Protobuf does too much allocation, but saying that libraries should not allocate memory at all is an outdated view.')