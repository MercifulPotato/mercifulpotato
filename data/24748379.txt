Item(by='montalbano', descendants=None, kids=[24748429], score=None, time=1602444733, title=None, item_type='comment', url=None, parent=24746864, text='Agree, but to add, there are many transcendental functions (e.g. I needed to use the Mittag-Leffler function many times in my work) which are near-impossible to implement in Numpy in a way that gives anywhere near usable performance. It&#x27;s not a common enough function to be pre-implemented in Scipy special functions.<p>In my case, I wrote the algorithm in Numpy&#x2F;python myself which was almost unusably slow. I then outsourced it to a precompiled fortran program. Finally I just switched to Julia. There was already a library, MittagLeffler.jl which did everything I needed and was written in pure Julia. In the end everything was much faster than the Python&#x2F;Fortran frankenstein code I had.<p>Edit: For more info on Julia and difficult (computationally) mathematical functions see:<p><a href="https:&#x2F;&#x2F;youtu.be&#x2F;mSgXWpvQEHE?t=1262" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;mSgXWpvQEHE?t=1262</a>')