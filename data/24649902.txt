Item(by='unwind', descendants=None, kids=None, score=None, time=1601553616, title=None, item_type='comment', url=None, parent=24648982, text='&quot;Proper&quot; is in the eye of the beholder I guess ... remember that this is an 8-bit part with 4 KB of program space and 256 <i>bytes</i> of RAM.<p>You are <i>probably</i> not implementing a gdb stub on that while still having meaningful resources (memory, peripherals, execution time) left for your an application complex enough to warrant that level of debugging support. :)<p>That said, it seems these cores have some on-chip hardware debugging support. See the data sheet [1] section 30 (&quot;Unified Program and Debug Interface (UPDI)&quot;). Features include:<p>- Memory mapped access to device address space<p>- Unlimited number of user program breakpoints<p>- Two hardware breakpoints<p>- Run-time readout of CPU Program Counter (PC), Stack Pointer (SP), and Status register(SREG) for code profiling<p>- Program flow control (Go, Stop, Reset, Step Into)<p>- Non-intrusive run-time chip monitoring without accessing system registers<p>This interface is the one that is described in the article, and accessed over a single pin on the chip package. I think it sounds pretty neat, makes me want to have a look at AVRs again! :)<p>[1] <a href="http:&#x2F;&#x2F;ww1.microchip.com&#x2F;downloads&#x2F;en&#x2F;DeviceDoc&#x2F;ATtiny406-DataSheet-DS40001976B.pdf" rel="nofollow">http:&#x2F;&#x2F;ww1.microchip.com&#x2F;downloads&#x2F;en&#x2F;DeviceDoc&#x2F;ATtiny406-Da...</a>')