Item(by='swiftcoder', descendants=None, kids=None, score=None, time=1611756456, title=None, item_type='comment', url=None, parent=25927765, text='&gt; I would imagine that on the Android side of things are also not that different.<p>You would indeed imagine that, but the reality is less rosy.<p>1) Android is stuck on an off-brand Java stack that makes desktop Java seem pleasant by comparison. They are finally starting to make headway on replacing this with Kotlin, but most shops are still heavily invested in Java.<p>2) Android&#x27;s UI framework is a weird hybrid of legacy and modern controls, and it only fairly recently that it has been capable of accomplishing things like a long scrolling list without memory&#x2F;performance headaches. Before that everyone had to use 3rd party controls for complex or performance critical apps.<p>4) A lot of time spent setting up toolchains, SDKs, etc. God forbid your project incorporates C++ dependencies.<p>6) Google may provide Android itself, but each chip vendor then layers on their own special sauce, and finally each handset vendor layers on ever more special sauce. Add to that the historically abysmal adoption rate of new versions of android (and many vendors not providing upgraded OS versions for their older hardware), and the odds of being able to use a newly-released Google feaure&#x2F;API are... not good.')