Item(by='judofyr', descendants=None, kids=[25768080, 25768659, 25770302, 25771424], score=None, time=1610572406, title=None, item_type='comment', url=None, parent=25767128, text='Interesting choice of technology, but you didn&#x27;t completely convince me to why this is better than just using SQLite or PostgreSQL with a lagging replica. (You could probably start with either one and easily migrate to the other one if needed.)<p>In particular you&#x27;ve designed a very complicated system: Operationally you need an etcd cluster and a tailetc cluster. Code-wise you now have to maintain your own transaction-aware caching layer on top of etcd (<a href="https:&#x2F;&#x2F;github.com&#x2F;tailscale&#x2F;tailetc&#x2F;blob&#x2F;main&#x2F;tailetc.go" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;tailscale&#x2F;tailetc&#x2F;blob&#x2F;main&#x2F;tailetc.go</a>). That&#x27;s quite a brave task considering how many databases fail at Jepsen. Have you tried running Jepsen tests on tailetc yourself? You also mentioned a secondary index system which I assume is built on top of tailetc again? How does that interact with tailetc?<p>Considering that high-availability was <i>not</i> a requirement and that the main problem with the previous solution was performance (&quot;writes went from nearly a second (sometimes worse!) to milliseconds&quot;) it <i>looks</i> like a simple server with SQLite + some indexes could have gotten you quite far.<p>We don&#x27;t really get the full overview from a short blog post like this though so maybe it turns out to be a great solution for you. The code quality itself looks great and it seems that you have thought about all of the hard problems.')