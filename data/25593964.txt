Item(by='brundolf', descendants=None, kids=[25593991], score=None, time=1609431316, title=None, item_type='comment', url=None, parent=25593852, text='Here&#x27;s how you can do global mutable state in Rust:<p><pre><code>  #[macro_use]\n  extern crate lazy_static;\n\n  use std::sync::Mutex;\n\n  lazy_static! {\n    static ref ARRAY: Mutex&lt;Vec&lt;u8&gt;&gt; = Mutex::new(vec![]);\n  }\n\n  fn do_a_call() {\n    ARRAY.lock().unwrap().push(1);\n  }\n\n  fn main() {\n    do_a_call();\n    do_a_call();\n    do_a_call();\n\n    println!(&quot;called {}&quot;, ARRAY.lock().unwrap().len());\n  }\n</code></pre>\nI agree that this isn&#x27;t the most ergonomic, but like most unergonomic things in Rust, there are reasons for it being so.')