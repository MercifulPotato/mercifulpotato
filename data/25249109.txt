Item(by='rakoo', descendants=None, kids=[25251945], score=None, time=1606692466, title=None, item_type='comment', url=None, parent=25241145, text='&gt; So if there is a tag problem, this is clearly logged, and you know something is wrong [...] The good thing is that you can easily edit it and have instead (pass the filename fn to the function, to be able to log)<p>That&#x27;s the thing: the script in its current version is incorrect, and even doing that won&#x27;t be a perfect solution. That&#x27;s why other people are saying that other softwares, with large usage and that can do more than what nFreezer can do, should be analyzed before trying to do it your own way.<p>It&#x27;s good to not rely on anyone else, but crypto is the one domain where you can&#x27;t have &quot;good enough&quot; -- it&#x27;s either correct, or it&#x27;s not.<p>&gt; Another option would be to do a first pass of decrypt(), without writing anything to disk, then get the tag, verify it, and then if ok, redo the whole decryption with writing on disk this time<p>Yep, that&#x27;s the way: do the decrypting in memory, or in &#x2F;tmp, verify the tag, and only after you can put the file where it belongs. I just checked the API of the crypto module, and there&#x27;s a `decrypt_and_verify` that should do it properly.<p>Of course that&#x27;s problematic especially for big files, so what you want to do is chunk the files, encrypt the chunks separately and store the file as a list of such chunks.<p>The step after is to use Content-Defined Chunking, ie chunking based on the content of the file. This way when a big file modifies only the chunk around the modification will change, the rest of the file will be chucked exactly the same way. So you don&#x27;t need to store the full content of each version of the file, just a small-ish diff.<p>That&#x27;s not a novel system, bup (<a href="https:&#x2F;&#x2F;github.com&#x2F;bup&#x2F;bup" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;bup&#x2F;bup</a>) kinda pioneered it... and as others have advised, restic, borg-backup and tarsnap do exactly that.')