Item(by='CarelessExpert', descendants=None, kids=None, score=None, time=1603941626, title=None, item_type='comment', url=None, parent=24925270, text='&gt;  Re global hotkeys: I still don&#x27;t understand your complaint. You just described two applications that didn&#x27;t work and then went on to explain how one of them was made to work on Wayland. Yes, applications need to be ported, no solution on the Wayland side will ever change that. If the complaint is that the chosen method adds latency, or that the config setting has moved, those are vastly different than your original complaint which is that it doesn&#x27;t work. Is that closer to what you were getting at?<p>Let&#x27;s compare the workflows.<p>In X, in order to make guake open by pressing &quot;F12&quot; on the keyboard (which, by the way, is probably <i>the</i> feature that makes guake useful, since its entire purpose is to be a terminal you can pop up with a hotkey), I have to take the following steps:<p>1. Install Guake<p>2. Run Guake<p>That&#x27;s it (F12 is the default hotkey for guake).  It just works.<p>And it&#x27;s the kind of thing that&#x27;s possible on literally every other desktop OS that&#x27;s ever existed prior to Wayland coming along.<p>Here&#x27;s the steps I have to take when using mutter specifically.<p>1. Install Guake.<p>2. Realize F12 doesn&#x27;t work because, in the Wayland ecosystem today, it is impossible for an application to bind a global hotkey.<p>3. Find a workaround online.  Discover &quot;guake-toggle&quot; exists and that I have to manually bind a hotkey to call it.<p>4. Open the Gnome hotkey configuration screen.<p>5. Add a new binding for F12.  Enter &quot;&#x2F;usr&#x2F;bin&#x2F;guake-toggle&quot; as the command to execute when the key is pressed.<p>(actually, that&#x27;s a lie, my vague recollection is you can&#x27;t actually bind F12 <i>at all</i> in Gnome and so I used F11 as my test... but that&#x27;s a whole other thing and probably a Gnome bug)<p>However:<p>1. This set of steps only works with mutter.  For another wayland compositor the steps may be completely different.  Or there may be <i>no steps at all</i> if the compositor doesn&#x27;t have some mechanism to specify a global hotkey.<p>2. It happens to work with Guake because the author realized a wayland compositor was gonna need a workaround, and they created guake-toggle.  For other applications it&#x27;s possible no such workaround exists at all.<p>3. It&#x27;s in any case a profound UX regression.<p>Now, yes, you can make the claim that guake was &quot;made to work on Wayland&quot;.<p>But if your claim is that therefore nothing is wrong in this situation, I have to admit to simple astonishment and bafflement because I don&#x27;t know how anyone could not see a problem here.<p>Now, to be clear: I&#x27;m not suggesting this is the sole issue that&#x27;s preventing my use of Wayland.  There is, after all, this crappy workaround.<p>Rather, as a reminder, this thread started with my replying to this remark:<p>&gt; I don&#x27;t understand where you&#x27;re getting this idea that Wayland is or was supposed to do all the same things as X in exactly the same way.<p>I hope you can see that my issue isn&#x27;t that I expect Wayland to &quot;do all the same things as X in exactly the same way&quot;.<p>Rather, I expect Wayland to enable applications to offer the same kind of basic functionality, with the same level of usability, that users are used to experiencing with applications, not just on X, but on <i>any</i> modern desktop operating system.<p>This is just one example where that&#x27;s actually not possible today due to immaturity in the ecosystem.')