Item(by='matt_trentini', descendants=None, kids=None, score=None, time=1607903917, title=None, item_type='comment', url=None, parent=25406683, text='&gt; But there are plenty of differences between MicroPython and CPython<p>Are there any differences there that you&#x27;d consider significant? They are generally quite minor and usually have workarounds. Typically a difference is only introduced when additional memory (either adding complexity to the parser or in runtime use) is the consequence of absolute compatibility. They all seem like a reasonable trade-off.<p>&gt; Not to mention that the baseline for those lists is CPython 3.4 - MicroPython is also missing most of the new features of CPython 3.5 - 3.9.<p>The baseline <i>was</i> 3.4 during development but more modern features have continued to be added, particularly if they can be shown to be implemented with low memory use. For example there is solid asyncio support (based on 3.8 [0]), the assignment operator has been implemented and, care has been taken to ignore type annotations correctly. fstring support is _almost_ there too (it ought to make it in to the next release).<p>The development team listens to requests for new language features so please raise a ticket (or comment on an existing one [1], [2]) to help prioritise upcoming features.<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;peterhinch&#x2F;micropython-async&#x2F;blob&#x2F;master&#x2F;v3&#x2F;README.md" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;peterhinch&#x2F;micropython-async&#x2F;blob&#x2F;master&#x2F;...</a><p>[1] Python 3.5 support: <a href="https:&#x2F;&#x2F;github.com&#x2F;micropython&#x2F;micropython&#x2F;issues&#x2F;1329" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;micropython&#x2F;micropython&#x2F;issues&#x2F;1329</a><p>[2] Python 3.6 support: <a href="https:&#x2F;&#x2F;github.com&#x2F;micropython&#x2F;micropython&#x2F;issues&#x2F;2415" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;micropython&#x2F;micropython&#x2F;issues&#x2F;2415</a>')