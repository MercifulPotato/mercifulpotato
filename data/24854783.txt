Item(by='yashap', descendants=None, kids=[24855040], score=None, time=1603339585, title=None, item_type='comment', url=None, parent=24846758, text='I didn’t think any of these points were very strong.<p>const x = {immutableValue}<p>That tells me the thing is fully immutable. Whether it’s a global variable or not, that’s still nice to know when reading the code! Likewise:<p>let x = {immutableValue}<p>const x = {mutableValue}<p>These tell me different things. The first tells me I should look out for re-assignment, the second that I should look out for mutation of the value.<p>In contrast, this:<p>let x = {mutableValue}<p>Clearly has the most cognitive load. Anything could happen with this. If it’s a bigger, more complex function&#x2F;whatever, “what happens to x, it could be anything” is just one more thing to fit in my head as I try to figure out what this code does. Enough little uncertainties like this, and I have to give up understanding by reading entirely, and resort to a debugger. Had the author limited the scope of what was possible, it’d be a bit easier to understand, with really no drawbacks. It’s not the end of the world, but “small, simple, easy thing I can do to make the code easier to understand for future readers” ... why not do that?')