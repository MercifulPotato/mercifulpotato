Item(by='brendangregg', descendants=None, kids=[24674719, 24674236, 24676857, 24677281, 24674379, 24675055], score=None, time=1601754035, title=None, item_type='comment', url=None, parent=24661653, text='The Linux network stack has been rapidly evolving; nowadays we have XDP for a fast path through the kernel. But there&#x27;s also a lot of moving parts that ensure high throughput on noisy networks, for different application workload patterns, to avoid bufferbloat, and to do this fairly across multiple processes&#x2F;containers. I&#x27;d imagine one can develop a user-space stack that appeared better in a simple iperf microbenchmark in a lab, but would lose for real-world applications and networks (unless your real-world use case was very narrow).<p>I&#x27;d recommend understanding the stack before choosing to replace it (the old programmer&#x27;s advice about understanding a gate before removing it). I summarized the TCP send path in my next book (sysperf2, with help from Linux network engineers); it involves:<p><pre><code>  - Socket send buffers\n  - Pacing\n  - TSO\n  - Congestion controls\n  - Nagle\n  - TSQ\n  - qdisc (optional)\n  - GSQ\n  - BQL\n  - TSO (NIC)\n</code></pre>\nThat&#x27;s just the TCP send path.<p>I&#x27;m happy to expand all these acronyms, but if any are new to you, that&#x27;s kind-of my point. These parts have a purpose, and starting from scratch may lead you to eventually re-invent them all as you encounter the problems they solve.')