Item(by='ingvul', descendants=0, kids=None, score=1, time=1607988882, title='Ask HN: Resources to become better at DevOps and distributed systems?', item_type='story', url=None, parent=None, text='I work as a software engineer. (I think) I know a lot about programming, software design, &quot;solid&quot; principles, etc. I know my way through the shell and how to setup servers and databases. I know a bit of everything as well (OS, networking, compilers, web).<p>At work I talk a lot with devops guys. When we need infra for our products (machines where to run our services, MySQL databases with master&#x2F;slave replication, nginx, Kafka, production IPs, etc.), devops helps. They know GCP&#x2F;AWS, and they use Terraform&#x2F;Ansible, and they write yaml... I don&#x27;t understand a thing of what they do. I wanted to learn.<p>So, I read TCP&#x2F;IP Illustrated, Vol. 1 (because I wanted to cover the basics first) then I read DDIA. Both took me some time to finish and I learnt A LOT... still I have no clue what my devops colleagues do. Also tried the other way around; I learnt the specifics. I learnt nginx and MySQL (admin level) and Ansible&#x2F;Terraform&#x2F;yaml&#x2F;Docker... Now I know the pieces of the puzzle, but still have no clue how they all work together. Example: the other day a devops guy told me &quot;Yeah, that&#x27;s not gonna work. DB 1 is in GCP and service X is in another cloud provider... the latency will be terrible X wants to talk to DB 1; just replicate DB 1 in a DB in GCP that is local to service X&quot;. I know what he meant... but I only realized that when he told me so. It&#x27;s like the &quot;return early pattern for functions&quot;: any respectable developer knows it.<p>I really wouldn&#x27;t like to work as devops, but I want to gain their knowledge. Is there any good resources regarding how to become better at &quot;being devops dealing with distributed systems&quot; without actually working as &quot;devops&quot;? I&#x27;m afraid documentation out there is a bit terrible. One example: I read the whole nginx.org website and I feel like I learnt nothing (80% of the documentation is about &quot;directive syntax + default values&quot;). They don&#x27;t explain in deep how nginx works. Docker documentation, on the other hand, is quite complete.')