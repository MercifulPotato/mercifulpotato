Item(by='tyingq', descendants=None, kids=[25919062], score=None, time=1611679776, title=None, item_type='comment', url=None, parent=25917836, text='<i>&quot;I&#x27;m still trying to imagine the way one exploits a lack of partitioning in the DNS cache.&quot;</i><p>There&#x27;s a PDF here: <a href="https:&#x2F;&#x2F;www.ndss-symposium.org&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;02&#x2F;ndss2019_04B-4_Klein_paper.pdf" rel="nofollow">https:&#x2F;&#x2F;www.ndss-symposium.org&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;02&#x2F;nd...</a><p>Basically timing based.  See <a href="https:&#x2F;&#x2F;www.audero.it&#x2F;demo&#x2F;resource-timing-api-demo.html" rel="nofollow">https:&#x2F;&#x2F;www.audero.it&#x2F;demo&#x2F;resource-timing-api-demo.html</a> for a demo of what&#x27;s available in the browser&#x27;s navigation and resource timing API.  For example, I get this on a cached reload:<p>domainLookupStart: 52.090000128373504<p>domainLookupEnd:   52.090000128373504<p>The PDF explains some enhancements that make it more reliable, like publishing multiple A records and watching order, etc.  Also, the demo link isn&#x27;t really showing what you would do...the resource being downloaded would be marked as non-cacheable so that you would be measuring &quot;DNS lookup was cached or not&quot; instead of &quot;Entire Asset was cached, therefore no DNS lookup happened&quot;.')