Item(by='EvanAnderson', descendants=None, kids=None, score=None, time=1608051045, title=None, item_type='comment', url=None, parent=25421860, text='I hate to nitpick, but I think it&#x27;s more interesting to think about it as it actually is. You mentioned having the &quot;frame&quot; ready, but there is no frame.<p>The platform has produced some masterpieces of creativity under limitations. You have 128 bytes of RAM to work with (for all non-register variables and stack) and slavish timing requirements.<p>The timing is nightmarish because you&#x27;re actually controlling the painting of each scanline as the raster sweeps across and down the screen. The design of an Atari 2600 game&#x27;s &quot;kernel&quot; (as they&#x27;re called) is one where timing and cycle counting dominates.<p>Game logic has to sit in specific points in time where the video raster isn&#x27;t painting (horizontal and vertical blanking intervals). When the raster is sweeping across the phosphors your code is concerned primarily with manipulating the registers of the Television Interface Adapter (TIA) chip to produce the desired video output. There are some &quot;tricks&quot; the TIA can perform itself (mirroring the playfield output across a vertical center line, etc) that can be used to free up some cycles. Creative use of the 5 movable objects (two &quot;player&quot; sprites, two &quot;missile&quot; sprites, and a &quot;ball&quot; sprite) can be used to make more detailed graphics than would be possible with the playfield alone (which has a fairly coarse resolution).')