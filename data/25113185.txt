Item(by='xendop', descendants=None, kids=[25113270], score=None, time=1605542197, title=None, item_type='comment', url=None, parent=25110879, text='This is really cool. I think it might even be possible to improve it further so opening an issue isn&#x27;t even needed.<p>My thinking is you could store the links and the corresponding shortened URL lookups as an element in the HTML source itself. You would have a submit input on the page. User enters the url they&#x27;d like to shorten (or is pulled from a param). The JS reads that value and then looks it up to see if it already exists in the element you created for storage. If not, it creates a hash as the shortened &#x27;link&#x27; and adds it to a hashmap &#x2F; element. Now this is the crucial part: have JS call the Github Actions API to trigger a workflow (<a href="https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;free-pro-team@latest&#x2F;rest&#x2F;reference&#x2F;actions#create-a-workflow-dispatch-event" rel="nofollow">https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;free-pro-team@latest&#x2F;rest&#x2F;referen...</a>) that puts the updated hashmap (which is a payload for a custom parameter you defined for the GH Action) into a file e.g. `links.json` or even outputted directly into the HTML source. Then have the action commit this file back into the repo. Thus, the flat file in the repo acts as the storage mechanism for the links. From a UX standpoint, this is a little smoother and more cohesive (same site to input &amp; redirect) than having to open a GH issue.<p>With this approach, you can still have the nlsn.cf short domain redirect as long as you pass the URL params and get them in JS from the location, which it looks like you already do. I might try whipping up a version of this tonight. Thanks for the inspiration!')