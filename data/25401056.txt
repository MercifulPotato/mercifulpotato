Item(by='anchpop', descendants=None, kids=[25401261, 25401795, 25402744, 25401292], score=None, time=1607802884, title=None, item_type='comment', url=None, parent=25383511, text='I think Rust and Haskell, due to their irrelevance in industry and general &quot;nerdiness&quot;, attract a certain type of hacker. Specifically I&#x27;ve noticed that there are some libraries for both languages that are just <i>so</i> good that they make you never want to use anything else. One example in Haskell is Megaparsec [0], by far the best point in the parser framework design-space I&#x27;m aware of. An example in Rust is wgpu-rs, which maybe isn&#x27;t &quot;all the way there&quot; yet but is already turning into a very ergonomic low-level rendering API. Although I haven&#x27;t used them, I think piet-gpu and pathfinder may be in this category also. I don&#x27;t have a link handy but I remember seeing a tweet from the developer of Pathfinder where he was reverse-engineering MacOS&#x27;s idiosyncratic font rendering so he could generate identical-looking output as the native renderer. That&#x27;s going above-and-beyond what any reasonable library developer would do and I love it.<p>I&#x27;m not saying there aren&#x27;t any great libraries for other languages (there certainly are, like Halide for C++) but that I&#x27;m more often pleasantly surprised by the library quality in Haskell and Rust than I am in other languages (when there are libraries available, anyway).<p>[0]: <a href="https:&#x2F;&#x2F;hackage.haskell.org&#x2F;package&#x2F;megaparsec" rel="nofollow">https:&#x2F;&#x2F;hackage.haskell.org&#x2F;package&#x2F;megaparsec</a><p>[1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs</a>')