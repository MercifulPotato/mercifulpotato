Item(by='Lt_Riza_Hawkeye', descendants=None, kids=None, score=None, time=1608138505, title=None, item_type='comment', url=None, parent=25433224, text='It makes perfect sense <i>for facebook</i>.<p>You write the moral equivelent of __attribute__((graphql)) on your code, and boom, you can query it. You want mutations? __attribute__((graphql_root_mutation)). If your object is stored in TAO, everything works perfect. You can add custom fields or even custom objects implemented in PHP that can do whatever the hell they want.<p>You never have to think about a database. And you barely even have to think about security if you&#x27;re using pre-existing objects, the rules for which users should be allowed to see which objects are written in one centralized place and enforced everywhere in the codebase, graphql included.<p>Of course, it only works that well because there are multiple ~20-30 person teams maintaining that infrastructure. And GraphQL was designed with Facebook&#x27;s infrastructure in mind.<p>Outside of Facebook, I cannot see myself using GraphQL for any reason.')