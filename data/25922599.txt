Item(by='CydeWeys', descendants=None, kids=[25922672, 25923005], score=None, time=1611706296, title=None, item_type='comment', url=None, parent=25916513, text='&gt; In fact, there are many different caches trackers can abuse to build supercookies. Firefox 85 partitions all of the following caches by the top-level site being visited: HTTP cache, image cache, favicon cache, __HSTS cache__, OCSP cache, style sheet cache, font cache, DNS cache, HTTP Authentication cache, Alt-Svc cache, and TLS certificate cache.<p>(emphasis mine)<p>This has negative effects on security, as has been pointed out previously by others: <a href="https:&#x2F;&#x2F;nakedsecurity.sophos.com&#x2F;2015&#x2F;02&#x2F;02&#x2F;anatomy-of-a-browser-dilemma-how-hsts-supercookies-make-you-choose-between-privacy-or-security&#x2F;" rel="nofollow">https:&#x2F;&#x2F;nakedsecurity.sophos.com&#x2F;2015&#x2F;02&#x2F;02&#x2F;anatomy-of-a-bro...</a><p>Imagine a widely used legitimate non-tracking resource, say, a shared JS or CSS library on a CDN.  Currently, if that CDN uses HSTS, no matter how many independent websites incorrectly include said resource using an <a href="http:&#x2F;&#x2F;" rel="nofollow">http:&#x2F;&#x2F;</a> URL, only the first request is MITMable, as every subsequent request will use the HSTS cache.<p>However, now, every single site will have its own separate HSTS cache, so every single first request from each site will independently be MITMable.  Not good.  This makes HSTS preloading even more important: <a href="https:&#x2F;&#x2F;hstspreload.org&#x2F;" rel="nofollow">https:&#x2F;&#x2F;hstspreload.org&#x2F;</a><p>(Good news, if you have a .app or .dev domain, you&#x27;re already preloaded.)')