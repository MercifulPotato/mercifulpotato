Item(by='jsmith45', descendants=None, kids=None, score=None, time=1606940360, title=None, item_type='comment', url=None, parent=25280653, text='I&#x27;m not sure of any such list, but using containerd directly is faster, less likely to break k8s when docker adds new features, etc.<p>Much of this all stems from the flak infrastructure people gave docker when they made swarm part of the engine. But it comes to more than that. Docker has its own take on networking, on volumes, on service discovery, etc. If you are trying to use docker as a component of your own product, at least some of these are likely things you want to implement differently. And the same may well be true of any new features docker wants to add in the future. At which point one must ask why bother using docker directly?<p>containerd was quite literally created when docker decided to extract the parts of docker that projects like kubernetes might want to use. It has evolved heavily since then, but that really does capture the level at which it sits. This leaves dockerd in charge of things like swarm, docker&#x27;s view on how networking should work, docker&#x27;s take on service discovery, dockers view on how shares storage should work, building containers, etc.')