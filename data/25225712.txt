Item(by='crazydoggers', descendants=None, kids=[25225844], score=None, time=1606454301, title=None, item_type='comment', url=None, parent=25225528, text='Your example isn’t even what the articles attempt to suggest, and indeed, it’s not even possible, since there’s no way to ensure that the program passes non empty lists at compile.<p>For example the grandparent article compares these<p><pre><code>  validateNonEmpty :: [a] -&gt; IO ()\n  validateNonEmpty (_:_) = pure ()\n  validateNonEmpty [] = throwIO $ userError &quot;list cannot be empty&quot;\n \n  parseNonEmpty :: [a] -&gt; IO (NonEmpty a)\n  parseNonEmpty (x:xs) = pure (x:|xs)\n  parseNonEmpty [] = throwIO $ userError &quot;list cannot be empty&quot;\n</code></pre>\nHe then states<p><pre><code>  “Both of these functions check the same thing, but parseNonEmpty gives the caller access to the information it learned, while validateNonEmpty just throws it away.”\n</code></pre>\nBut the caller still needs to deal with the empty type. It’s just moved it up higher in the code. Which makes checking easier. He’s referring to this as “parsing”<p><pre><code>  “parseNonEmpty is a perfectly cromulent parser: it parses lists into non-empty lists, signaling failure by terminating the program with an error message”\n</code></pre>\nThe parent article however seems to want to take this further, but again, to make use of this as suggested by actually parsing still would require unit tests.<p>A compiler can’t solve the problem of preventing the class of bug you’re talking about, hence why there always needs to be some code that handles cases like empty files or lists etc.<p>To understand why check out the halting problem:<p><a href="https:&#x2F;&#x2F;cs.stackexchange.com&#x2F;questions&#x2F;72014&#x2F;what-cannot-be-proven-at-compile-time-about-a-computer-program" rel="nofollow">https:&#x2F;&#x2F;cs.stackexchange.com&#x2F;questions&#x2F;72014&#x2F;what-cannot-be-...</a><p><a href="https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Halting_problem" rel="nofollow">https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Halting_problem</a>')