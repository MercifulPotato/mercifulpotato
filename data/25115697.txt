Item(by='throwaway894345', descendants=None, kids=[25116796, 25116822], score=None, time=1605553861, title=None, item_type='comment', url=None, parent=25115308, text='&gt; There is one standard library--the one that ships with OCaml. You can use replacement libraries if you really need them--I haven&#x27;t yet needed to, but for heavy-duty production use maybe one day I will.<p>You&#x27;re mistaken (or you&#x27;re making an unrelated semantic argument because you don&#x27;t want to argue the actual point; not sure which); there are multiple &quot;standard&quot; libraries used across the ecosystem (because the ecosystem has deemed &quot;the one that ships with OCaml&quot; to be inadequate) which makes integrating libraries throughout the ecosystem tedious and painful, especially to new OCaml developers.<p>&gt; Is the emphasis on &#x27;building&#x27; here, as in &#x27;build tool&#x27;?<p>No, I expect an abundance of tutorials that explain how to build production-grade applications, soup to nuts. E.g., for a generic CRUD app, what are the best frameworks, ORMs, etc to use, how to integrate them, etc?<p>&gt; The older Merlin tooling has been used for a long time.<p>Yes, but it&#x27;s incredibly difficult to configure properly, or at least that was my experience when I got started. I&#x27;m actually not sure if I ever got it working with vim.<p>&gt; Syntax can be learned, but for those who don&#x27;t want to try, there is always ReasonML syntax that uses semicolons and curly braces to make OCaml look like JavaScript.<p>It can, but it&#x27;s a burden with no advantage. Last I checked, ReasonML&#x27;s support was pretty abysmal--it seemed like native compilation was neglected altogether in favor of something called &quot;bucklescript&quot; (presumably compilation to JS) and the integrations with the rest of the ecosystem (e.g., how to build native programs, link against ocaml dependencies, integrate with editor tools, etc) were either poorly documented or inadequate&#x2F;incomplete or both. No doubt some of that has improved in the intervening years, but I&#x27;m doubtful that it has significantly improved.<p>&gt; It&#x27;s easy to make assertions without actually knowing anything, but it&#x27;s better to do the research first to back them up, instead of asking a bunch of questions ;-)<p>You&#x27;ve provided the same unhelpful, pat answers that the OCaml community provides. For example, &quot;Just use ReasonML!&quot; as though setting up or using Reason is trivial or well documented or otherwise comparable to using Rust or Go out of the box. For another example, you altogether dodged the issues associated with multiple &quot;standard&quot; libraries. It would be great if the OCaml community were as committed to making their language useful for production applications as they were on <i>convincing</i> everyone else that it already was.')