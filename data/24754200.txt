Item(by='Audiophilip', descendants=None, kids=[24759313], score=None, time=1602509906, title=None, item_type='comment', url=None, parent=24753123, text='Instead of having your game sub-systems and components reference each other in a scene, you&#x27;d better off designing your game architecture in a data-oriented way.<p>Try organizing your code around the data your components have to work with and let your code react to changes to that data. Using Scriptable-objects is a great way to facilitate this model, because with them your game components will reference data assets instead of other components, reducing dependencies, which gets harder and harder to manage as the complexity of your application grows.<p>I can really recommend watching Ryan Hipple&#x27;s presentation titled &quot;Game Architecture with Scriptable Objects&quot;. [0]<p>At our studio we&#x27;ve built a framework based on these ideas for a high-complexity game project and we&#x27;re very happy with it so far. We have a clean and well-performing codebase that&#x27;s easy to maintain and test, because no sub-system has any hard dependency on any other sub-system.<p>[0] <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=raQ3iHhE_Kk" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=raQ3iHhE_Kk</a>')