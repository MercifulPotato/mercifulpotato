Item(by='pjscott', descendants=None, kids=[25625286], score=None, time=1609706506, title=None, item_type='comment', url=None, parent=25624714, text='&gt; Well you are saying that even in C you can use the restrict keyword to tell the compiler that 2 memory locations can overlap. Of course is in the hand of the programmer to tell the compiler to do so.<p>It says that they <i>can&#x27;t</i> overlap, but yes, you can get the compiler to optimize based on this if you provide the aliasing information and remember to keep it accurate. You probably won&#x27;t do that, though, for anything except the most performance-critical of inner loops. A compiler that can infer more about aliasing can provide more optimization, safely, in the &gt;99% of code that doesn&#x27;t have explicit aliasing annotations, and that&#x27;s probably worth some decent speedups in practice.<p>There are two main things you might be talking about when you call a programming language fast:<p>1. Given some really performance-critical code and enough time to hand-optimize it, how close can you get the compiler&#x27;s output to the optimal machine code?<p>2. If you write code normally, not making any effort to micro-optimize, how fast will it usually be?<p>Both of these matter. #1 matters when you&#x27;ve got some bottlenecks that you really care about, and #2 matters when you&#x27;ve got a flatter profile -- and both situations are common.<p>Another illustrative example of the #2 type of performance with Rust is the default collections compared to the ones in C++. Rust&#x27;s default HashMap is faster than C++&#x27;s std::unordered_map because of some ill-advised API constraints in the C++ STL. You <i>can</i> get similar performance by using a custom C++ hash table implementation, and in fact Rust&#x27;s HashMap is a port of a C++ hash table that Google wrote for that purpose, but most people probably won&#x27;t bother.<p>So, a semantic question: if you <i>can</i> get the same speed in one language as you can in another, but in practice usually don&#x27;t, is one language faster than the other?')