Item(by='josephg', descendants=None, kids=[25626996, 25626615], score=None, time=1609718803, title=None, item_type='comment', url=None, parent=25625623, text='One of my long standing complaints about modern programming is how rarely people read code. We don&#x27;t encourage it in school, and in the workplace most people only read code written by their coworkers.<p>It would be the equivalent of teaching people to write books without encouraging them to read anything.<p>To break myself of the habit I started reading some well regarded programs for fun. And oh boy, have I learned a lot from doing so. One of my first discoveries was this beauty in the Redis source code:<p><a href="https:&#x2F;&#x2F;github.com&#x2F;redis&#x2F;redis&#x2F;blob&#x2F;3.0&#x2F;src&#x2F;sds.h" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;redis&#x2F;redis&#x2F;blob&#x2F;3.0&#x2F;src&#x2F;sds.h</a><p>The idea is to have a string struct that stores its length and content. But the pointer passed around is a pointer to the (null terminated) contents field in the struct. The string is efficient for internal calls (the length can be queried by subtracting from the pointer). But the pointer is also an idiomatic null-terminated C string pointer, compatible with the standard library and everything else. (typedef char *sds;)<p>Dovecot is also a gem to read if you&#x27;re looking for inspiration. The way it manages memory pools is delightful - and I&#x27;m sure much more performant than idiomatic rust. (That is, without reaching for arena allocator crates and alternate implementations of Box and Vec).')