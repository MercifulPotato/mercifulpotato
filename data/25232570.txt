Item(by='akulkarni', descendants=None, kids=[25234233, 25236479], score=None, time=1606511216, title=None, item_type='comment', url=None, parent=25232542, text='Reviewing this website, their information on TimescaleDB is either false or outdated:<p>&quot;Time series databases like InfluxDB or TimescaleDB are unable to handle many IoT applications by themselvesâ€”if they require metadata operations, for example. They often need to work in combination with an RDBMS, duplicating maintenance efforts and costs. Besides, their performance is usually optimized for single-node processes.&quot;<p>This statement is true for InfluxDB (which doesn&#x27;t store relational metadata, and where multi-node is an enterprise paid feature), but not for TimescaleDB. TimescaleDB is built on PostgreSQL, so it is in fact an RDBMS and allows you to store relational data alongside time-series, plus it is now distributed (multi-node), and this distributed feature is free [0].<p>Which is why we have some really large IoT deployments, including at Schneider Electric, Siemens, Bosch, Northvolt, and many others.<p>(I&#x27;ve met some folks from Crate and they&#x27;ve all been friendly, so I&#x27;m sure this is just an honest mistake, but it is incorrect nonetheless.)<p>I have not seen a proper TimescaleDB vs. Crate comparison, but at a high level, TimescaleDB is a relational database for time-series, ie &quot;Postgres for time-series&quot;, so most developers find it really easy to use (and performant). Also, we just made all of our enterprise features free, so TimescaleDB is now completely free to use.<p>(Disclaimer, I work at TimescaleDB)<p>[0] <a href="https:&#x2F;&#x2F;blog.timescale.com&#x2F;blog&#x2F;timescaledb-2-0-a-multi-node-petabyte-scale-completely-free-relational-database-for-time-series&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.timescale.com&#x2F;blog&#x2F;timescaledb-2-0-a-multi-node...</a>')