Item(by='username90', descendants=None, kids=None, score=None, time=1607320014, title=None, item_type='comment', url=None, parent=25325716, text='&gt; to be at the top of your field, explicit knowledge is almost always required.<p>This is technically true. However the only thing separating someone at the top of the field from an average expert is intuition. Both has access to exactly the same explicit knowledge and any expert with years of experience will know most of it already.<p>For example, what is &quot;good code&quot;? Nobody has written a program that programmers agree can tell if your code is good or not. Yet &quot;good code&quot; is extremely important, making things composable and scaling up means we can make larger and less bug prone programs. It is one of the key things of a top programmer, yet the only way we can identify it is ask experts whether a piece of code is good or not, and they wont even agree. We know for a fact that different programmers writes code of vastly different quality, we just can&#x27;t pinpoint what that quality is.<p>The problem with Paul Graham isn&#x27;t that he rely too much on his intuition, the problem is that his intuition for programming language design isn&#x27;t as good as his intuition for making programs or startups. Lisp isn&#x27;t as great as he claims, Java is much greater than he thinks, he just has created a mental blocker keeping him from seeing this and therefore ensuring that he will never be great at designing languages, since that blocker keeps his intuition from doing its job.')