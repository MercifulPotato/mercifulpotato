Item(by='ChuckMcM', descendants=None, kids=None, score=None, time=1611883848, title=None, item_type='comment', url=None, parent=25943393, text='As someone who watched the &quot;birth&quot; of the &quot;Open Source Movement&quot; I can say with some certitude that we have proven, once again, that the theories of communism don&#x27;t work in software just like they don&#x27;t work in state governance.<p>The same mechanism, which is that the benefits of the work accrue more forcefully to the user than to the worker, are the same.<p>I first saw this in action[1] when Ward Christensen found out that a company was selling &quot;Xmodem&quot; (software that let you easily transfer files over a modem while in a terminal session over that same modem) to the government for big $$. To understand the value here, prior to this invention you needed <i>two</i> connections to a computer to both have a human interaction with it and a second connection between the source of your files and the computer in order to transfer data to it. In UNIX and elsewhere you could type &#x27;cat -&gt; foo&#x27; but that forced all of your data through the terminal driver and if it happened to contain 0x04 (^D on UNIX) you would log out! So Ward&#x27;s big idea was a &quot;modal&quot; connection where you could put the computer in &quot;data transfer mode&quot; and either send or get a file. It was really useful in dial up BBS days and even in the early days of computers things like &quot;LapLink&quot; did similar sorts of things. The key here was this capability had <i>value</i> and while Ward had invested time writing the software he felt the approval of his peers was sufficient <i>payment</i> for his work.<p>The deal here was that Ward had made his code &quot;public domain&quot;, he literally disclaimed all rights to it, because he, like other enthusiasts, held the viewpoint that &quot;We are all a big club and we share stuff all the time.&quot; But a vendor saw that the Government had a need for this capability, and like many such organizations was used to paying people to provide and support the capability. So the vendor took Ward&#x27;s software, and sold a <i>product</i> to the US Government that provided this capability. Since Ward had disclaimed his rights, the vendor had no further obligation to Wayne and delightfully pocketed all the money that the Government paid them.<p>When this was discovered there was some outrage. After all it was Ward&#x27;s work and he should have been compensated right? This turns out to be a really interesting question for surfacing how various people feel about both the &quot;value&quot; of digital goods (which can be copied for nearly zero marginal cost) and the &quot;value&quot; of implementation.<p>Stallman&#x27;s response was that once Ward had created the software his &quot;right&quot; to any value was exhausted. The original GPL manifesto was about making it <i>explicit</i> that no one else had a right to any value from the work either. Even if people were willing to pay $1 each for a software work product, a person who provided them with that work product was <i>forbidden</i> from capturing that value. They were entitled to &quot;reasonable copying costs, and any monies that might make supporting the software.&quot; Period.<p>When you constrain a market in that way, it inhibits the market mechanisms that incentivize the creation of new goods, and the ability to fund the creation of new goods with the sale of successful goods. It depends on finding an supply of workers who will work once and give away all downstream value for nothing. This is great for customers but it really impoverishes the people who are actually writing code. The communism corollary is that you provide the needs for all of the workers, food, shelter, etc. And transfer all the downstream value of their work to the state. Where, historically, bad actors at the nation state have plundered that value and lived like decadent kings. A good current analogy is Google. Google couldn&#x27;t exist the way it exists if it had to pay for the value it extracts out of the work the Linux community puts into that ecosystem. Fortunately for Google, thanks to the FOSS rules, it doesn&#x27;t have to! As long as it isn&#x27;t selling Linux it gets all that value for free, and it pockets all the profits from the services it offers which are derived in part by the value of having a &quot;free&quot; operating system.<p>I believe that because you cannot connect the economic value of the work someone has done, to the worker(s) who did it, you create an opportunity to take that value for yourself. For me, that will be the bitter legacy of &quot;free&quot; software. If, for some reason, we were able to reverse the ability to take this value without compensation it would make being a software engineer a much better job. Seriously.<p>As a result &quot;Enterprise Free Software company&quot; is unlikely to ever be a &#x27;thing.&#x27; While it can make money in the short term as you translate a moment in time to a change in value. Long term it is doomed. This becomes especially evident when the additional new work needed to be done on software goes to zero.<p>[1] And FWIW so did Stallman.')