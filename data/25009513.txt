Item(by='dvt', descendants=None, kids=[25009709, 25009656, 25024419, 25012618, 25013501, 25011588, 25010078], score=None, time=1604684790, title=None, item_type='comment', url=None, parent=25009411, text='&gt; And then the other is that a huge amount of technical debt is just code that a more senior engineer would refactor as they went.<p>I&#x27;m quite senior, and I don&#x27;t think this is true.<p>Refactoring &quot;as you go&quot; is a no-go for a few reasons: (1) Roadmap (read: business) goals need to be reached and unless technical debt is a part of roadmap discussions -- it&#x27;s usually not, because business people don&#x27;t &quot;get&quot; code -- then it will naturally be of lower priority. (2) On a technical level, technical debt changes&#x2F;re-arch should <i>not</i> live in feature branches. On a deeper technical level, technical debt pull requests and reviews will also usually incur a higher level of cognitive load (and thus will take longer to merge). Conflating technical debt and new features is a Bad Ideaâ„¢. (3) This final point is a bit &quot;20-20 hindsight,&quot; but with proper roadmapping and architecting (and unless you&#x27;re building an MVP or proof of concept at your two-person startup), technical debt should basically not exist. Technical leaders should <i>always</i> push for high-quality code (even if product timelines are stretched) and technical debt is, generally speaking, a byproduct of bad technical leadership.')