Item(by='amscanne', descendants=None, kids=None, score=None, time=1604624479, title=None, item_type='comment', url=None, parent=25002073, text='I think you&#x27;re missing the point that I was trying to make.<p>Sometimes more features can make a thing worse. More advanced type systems may not necessarily make a large group of people more productive in a language, even if they are strict improvements. Go seems to have hit a sweet spot in terms of having just enough features to mostly get out of the way, and be otherwise straight-forward.<p>You could describe this part of its appeal as &quot;worse is better&quot;. If you aren&#x27;t careful about how you make something like that &quot;better&quot;, you&#x27;ll actually make it worse. I acknowledge this reality, while still personally wanting algebraic types, optional types, generics, etc. like everyone else. This gives rise to an &quot;innovator&#x27;s dilemma&quot; of sorts for language designers.<p>(As an aside, if you look at the size of the Go team at Google, you&#x27;ll probably be able to conclude that it&#x27;s unlikely Google has put &quot;hundreds of millions&quot; into Go. But this is related to the core point: there isn&#x27;t a huge list of language features that requires teams of experts to implement.)')