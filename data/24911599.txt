Item(by='brw12', descendants=None, kids=[24912041, 24913740, 24913919, 24912981], score=None, time=1603831110, title=None, item_type='comment', url=None, parent=24908105, text='I&#x27;m a huge skeptic of no-code among my friends and colleagues.<p>But seeing how pretty much everyone else here is also expressing skepticism, let me play devil&#x27;s advocate.<p>I recognize that the utopian promise of no-code is nonsense. There will always be feature demands that violate the &quot;on-rails&quot; nature of the environment, and either require supplementary code, or require waiting for the platform&#x27;s coders to code up support, or require rebuilding the application from the ground-up.<p>That said, there are all sorts of applications that really are so narrow that an existing GUI can accommodate them. Other posters here have called out Excel&#x2F;Sheets as an example; Wordpress, Squarespace and WYSIWYG web page editors are another. As a coder, I always feel frustrated by WYSIWYG interfaces&#x27; side effects, limitations, and inevitable bugs, but people do use them all the time, productively.<p>Of course, both web editors and spreadsheets do involve the ability to write code! It&#x27;s just that the code&#x27;s role is very narrow and limited to a small expressive range (CSS, say, or various SUMs and HLOOKUPs).<p>When the domain is relatively narrow and its boundaries are pretty clear, no-code can be wonderful. The real question, right now, is whether applications that are innovative can be built using &quot;no-code&quot; tools that necessarily assume all sorts of limitations.<p>I have seen some clever and impressive uses of, say, Airtable + Zapier + Typeform. That sort of &quot;API-weaving&quot; seems to me the most promising direction for no-code. I&#x27;m more skeptical of the projects, like bubble.io, which try to be a sort of Photoshop-for-building-applications.')