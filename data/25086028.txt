Item(by='a-nikolaev', descendants=None, kids=None, score=None, time=1605294025, title=None, item_type='comment', url=None, parent=25085931, text='I&#x27;m not really talking about multiple dispatch, but more like a module that store two or more types, like:<p><pre><code>    module Data = struct\n      type pair = int * float\n      type numbers = int list\n      \n      let make_pair () = (0, 0.0)\n      let make_numbers () = []\n    end\n</code></pre>\nThis example is not very illustrative, but just explain the idea what I mean. We have two constructors: make_pair and make_numbers. So in a way, we can have multiple types in the module, if they are meant to be tightly related. We are not forced to make three classes here (Pair, Numbers, Data), everything is in one module.<p>EDIT: OOP classes have a primary type in your class, and sometimes this creates artificial chicken or egg type of problem, where you cannot decide what is more fundamental (message vs receiver vs sender). Modules don&#x27;t force this on you.')