Item(by='zzbzq', descendants=None, kids=[25071606], score=None, time=1605198516, title=None, item_type='comment', url=None, parent=25071215, text='I hope that&#x27;s a typo because it&#x27;s literally the opposite of what you&#x27;re saying in #2.<p>It is precisely when you use a DI container that the problem is hidden, whether or not it&#x27;s solved.<p>In most projects that use a DI container, the problem is usually not solved correctly, but the developers are oblivious and overconfident. They think, as you do, using a DI container means they did it right. False! The DI container only guarantees everything is hoisted up to the object constructor. This is NOT DEPENDENCY INVERSION. The objects can be in the constructor, but the dependency arrow can still point the wrong way. An obvious example of this I&#x27;ve seen a million times is an interface sitting right next to its only implementation. That&#x27;s NOT Dependency Inversion.<p>If you don&#x27;t use a DI container, the problem also may or may not be solved, but it is never obscured, it is completely visible.')