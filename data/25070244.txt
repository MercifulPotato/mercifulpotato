Item(by='mdpm', descendants=None, kids=[25070692, 25071624, 25070747], score=None, time=1605191521, title=None, item_type='comment', url=None, parent=25069998, text='Low ceremony? Complexity in real world applications requires complexity in the frameworks that address them. Users will be more disappointed by simplicity that leaves them addressing complexity without guardrails, conventions, and tooling support.<p>If your view of low ceremony is matching HTTP verbs to methods, you may happily code your own against the HTTP primitives; if you want a framework that abstracts the complexity and provides a shiny-happy path, you may have to allow for some ceremony. The tooling is the antidote to this.<p>I think the place you trip up here is in not wanting to use a batteries included approach, while using a framework that makes the necessary abstraction&#x2F;complexity tradeoffs for projects of mid to large scale. The appropriate tradeoffs _cannot_ be one size fits all.<p>F#&#x27;s support is tricky, as the number of users here is dwarfed by those in C#; and although .NET supports this language diversity, there are no direct idiomatic &#x27;conversions&#x27; possible between C# and F# in many cases. This multiplies the effort of providing documentation and examples. I too would like to see it treated as a first class citizen, and for that - the code is OSS.')