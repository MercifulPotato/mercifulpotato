Item(by='danudey', descendants=None, kids=None, score=None, time=1602896652, title=None, item_type='comment', url=None, parent=24806565, text='you can malloc() to get a memory range, or mmap() to get a disk-backed memory range with kernel-managed paging, and then you can do whatever you want with it.<p>You get a pointer to the start of the range, and you know how large it is, so from there it&#x27;s just pointer arithmetic and assignment. Easy peasy. Now you just have to make sure that you zero data when you&#x27;re done with it, track how much of that memory is available or used (and which sections), and (optionally) implement your own defragmentation and garbage collection.<p>Unless you desperately need to specifically manage the memory layout of your data (e.g. for alignment purposes for massive data processing), none of this is worth the time or trouble to do <i>for most projects</i>, not only because it&#x27;s a huge amount of work for little gain, but because you&#x27;ll almost definitely screw it up and potentially corrupt your entire data set.<p>Note that, at least for the on-disk hashmap set, you absolutely can do this in python, so if you&#x27;re interested in experimenting with this sort of data management, practice it there first.<p>A good place to start: <a href="https:&#x2F;&#x2F;github.com&#x2F;luispedro&#x2F;diskhash" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;luispedro&#x2F;diskhash</a>')