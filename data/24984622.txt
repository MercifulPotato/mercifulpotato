Item(by='aratno', descendants=None, kids=None, score=None, time=1604441637, title=None, item_type='comment', url=None, parent=24983872, text='ML-assisted query optimization is super interesting to me (I&#x27;ve had to fight the uphill battle against anomalies in Postgres stats and estimations[1]), but I&#x27;d also love to see more optimization and auto-tuning across the &quot;stack&quot;:<p>- Use column-oriented storage for columns that are frequently scanned in analytical queries<p>- Automated index management, based on user-provided boundaries for write throughput, disk footprint, query latency<p>- Calibrated optimism for heap updates. AFAIK, current DBs are either optimistic (assume transactions are more likely to commit than rollback) and update the heap in-place, and write the old value elsewhere in case of rollback, or pessimistically write all updates in new, versioned tuples and let MVCC (and garbage collection) handle the rest. Would be interesting to see the performance improvement that could come from modeling commit &#x2F; rollback outcomes and optimizing accordingly.<p>- Using variable-sized pages to reduce overhead for older pages, as a sort of light cold storage<p>Anyone know of any DBs that automatically tune these aspects?<p>[1]: <a href="http:&#x2F;&#x2F;www.vldb.org&#x2F;pvldb&#x2F;vol9&#x2F;p204-leis.pdf" rel="nofollow">http:&#x2F;&#x2F;www.vldb.org&#x2F;pvldb&#x2F;vol9&#x2F;p204-leis.pdf</a>')