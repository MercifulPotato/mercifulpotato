Item(by='BenoitP', descendants=None, kids=[25297851], score=None, time=1607033871, title=None, item_type='comment', url=None, parent=25289214, text='Sorry for the harsh comment.<p>I&#x27;ve been reading about your columnar compression pipeline [1], and it sort of makes sense if the comparison is against a regular row-oriented DB. AWS Timestream must really be doing something wrong here, or serving an entirely different use case.<p>5-175x faster queries and 150x-220x cheaper I do get it. But 6000x higher inserts does not make sense to me. It is insane, and literally unbelievable to me.<p>Storage savings are at 96% for &quot;IT metrics (DevOps dataset from TSBS)&quot;, so it should be closer to 25x higher insert rate. Where is the missing 240x? Is this from some distributed replication overhead? Is this from local vs remote insertion? Is this from bulk inserts vs per row?<p>Anyway I wanted to thank you for your kind efforts in writing the blog post and providing answers here; and for the patience that you show to the audience here, me included.<p>[1] <a href="https:&#x2F;&#x2F;blog.timescale.com&#x2F;blog&#x2F;building-columnar-compression-in-a-row-oriented-database&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.timescale.com&#x2F;blog&#x2F;building-columnar-compressio...</a>')