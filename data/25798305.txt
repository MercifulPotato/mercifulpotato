Item(by='pron', descendants=None, kids=[25802334, 25798791, 25798708, 25798892], score=None, time=1610755142, title=None, item_type='comment', url=None, parent=25797898, text='&gt; but it&#x27;s not a very compelling argument to avoid a language because of them.<p>You&#x27;re looking at it from the wrong direction. Both Zig and Rust target low-level programming, i.e. domains where C and C++ are very established. You don&#x27;t need a reason to <i>avoid</i> a language -- you need a reason to invest a great amount of effort to switch away from an established incumbent.<p>Now, my biggest issues with C++ are, in this order: 1. language complexity, which makes understanding and changing codebases harder, 2. long compilation times which lengthen cycles and reduce software quality, 3. lack of memory safety. Rust improves on 1 a tiny bit, and solves 3. Zig solves 1, 2, and almost completely 3. This means that I have little reason to even consider switching to Rust; I will only if it ever becomes dominant. I wouldn&#x27;t switch to Zig right now -- it still needs to prove itself, but at least it&#x27;s a contender, because it offers something quite radical. Rather than an improved C++, it is a whole new way to think of low-level programming, it seems to address precisely the things that bother me about C++, plus it focuses on other aspects that are very important to low-level programming, like cross-compilation.')