Item(by='morelisp', descendants=None, kids=None, score=None, time=1610903338, title=None, item_type='comment', url=None, parent=25811771, text='For me this depends on the application. For a REST API I&#x27;d probably open a Conn or Tx in an early middleware and carry it on a request context, or via explicit parameter, depending on the HTTP router&#x27;s features. (In Go that usually means a request context, unfortunately - a more powerful type system would ideally get you some more featureful type-safe routing.) For a more RPC-like or compute-focused API that I might keep some handle to the DB (or other data source) on a method&#x27;s reciever and route &#x2F; dispatch to that method. (I think this is the same thing oppositelock suggests elsewhere in this thread - <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25807562" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25807562</a>)<p>&gt; Would you have the bulk of your code be integration tests then?<p>I&#x27;m not sure if you mean the bulk of my code or just of my tests - for a REST API I would expect mostly functional tests. Do e.g. PUT+GET and make sure the result makes sense. This would be the case regardless of DB architecture.')