Item(by='hipnoizz', descendants=None, kids=None, score=None, time=1603286747, title=None, item_type='comment', url=None, parent=24846022, text='This is I think primarily related to transaction boundaries and tracking changes. You can read <a href="https:&#x2F;&#x2F;www.martinfowler.com&#x2F;eaaCatalog&#x2F;unitOfWork.html" rel="nofollow">https:&#x2F;&#x2F;www.martinfowler.com&#x2F;eaaCatalog&#x2F;unitOfWork.html</a> as a starting reference. I haven&#x27;t heard this phrase much lately to be honest. ;)<p>In &#x27;typical&#x27; Java application (since many comments here as well as the original article mentions Hibernate...) you will likely use annotations like @Transactional to mark your transaction boundaries (likely with default propagation and isolation levels...) and then Hibernate will track any changes (&#x27;dirty checking&#x27;) to objects you asked him to fetch and then at the end the transaction Hibernate will issue whatever DML commands (INSERT, UPDATE, DELETE) needs to be issued in an appropriate order.<p>In a galaxy far, far away i.e. before Java 1.5 instead using @Transactional you would maybe use (write) some object like TransactionManager which provides an execute() method that receives a block of code in a form of a interface implementation (no closures for you!). This part is relatively straightforward. Tracking changes in any semi-automatic way was always messy...')