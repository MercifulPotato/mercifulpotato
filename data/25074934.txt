Item(by='TrinaryWorksToo', descendants=None, kids=[25075341], score=None, time=1605214720, title=None, item_type='comment', url=None, parent=25074174, text='Actually, the book agrees with you. There&#x27;s very little evidence to support having a ridgid set of rules to follow when programming.<p>There are a few high-level take-aways from the recurring patterns seen in the analysis;\nthese include:\n• there is little or no evidence for many existing theories of software engineering,\n• most software has a relatively short lifetime, e.g., source code is deleted, packages are\nwithdrawn or replaced, and software systems cease to be supported. A cost&#x2F;benefit\nanalysis of an investment intended to reduce future development costs needs to include\nthe possibility that there is no future development; see fig 4.24, fig 5.7, fig 5.52, fig 5.69,\nfig 6.9, fig 3.31.\nChanges within the ecosystems in which software is built also has an impact on the\nviability of existing code; see fig 4.13, fig 4.22, fig 4.59, fig 4.61, fig 11.76,\n• software developers should not be expected to behave according to this or that mathematical ideal. People come bundled with the collection of cognitive abilities and\npredilections that enabled their ancestors, nearly all of whom lived in stone-age communities, to reproduce; see chapter 2.')