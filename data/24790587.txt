Item(by='throwaway894345', descendants=None, kids=[24790788, 24790853, 24791012], score=None, time=1602780013, title=None, item_type='comment', url=None, parent=24790346, text='&gt; why not just learn how to use Dockerfiles and Kubernetes manifests?<p>The problem I see with the entire Docker ecosystem is that the Docker&#x2F;Dockerfile build system is fundamentally terrible, principally because the cache system assumes a linear dependency tree and build graphs are, well, graphs. To get reasonable build performance, you need a tool that understands this. This is something Nix gets right, and it even lets you build Docker images without the Docker&#x2F;Dockerfile build system.<p>I&#x27;d also like to see something that takes it a step further--build the docker image AND a set of kubernetes manifests that reference that docker image (a &quot;kubernetes app package&quot; if you will) such that you have a single artifact that represents your application that a &quot;kubernetes package manager&quot; can deploy (the current crop of k8s package managers altogether punt on the contents of docker images).<p>I understand that this is a very different way of thinking about Kubernetes and Docker builds than what we practice today, but I&#x27;d really like to see this in practice or hear some debate about its merits (or lackthereof).')