Item(by='brundolf', descendants=None, kids=None, score=None, time=1604682179, title=None, item_type='comment', url=None, parent=25008351, text='Here&#x27;s my explanation (partially touched on by the OP, but not quite covered):<p>Programmers, broadly, tend to be people who like simple metrics of success that require complex solutions to achieve, and they deeply enjoy optimizing the hell out of those solutions (&quot;optimizing&quot;, here, applying to anything from speed to memory usage to expressivity to safety). This is well and good: for the most part, it makes us good at our jobs.<p>But this feeling of &quot;strict improvement&quot; can be so intoxicating as to take on the <i>sensation</i> of being a moral virtue. It can <i>feel</i> like a universal imperative. So instead of admitting that the code most of us write has no moral bearing whatsoever (beyond basic professional integrity), and that for the code that does have moral bearing, the way it&#x27;s used is more relevant than how well it&#x27;s crafted, we rationalize our feelings by contriving an argument for why these things that <i>feel</i> like they matter so much to us, <i>actually</i> matter to the world.<p>In my experience the healthier mindset is to detach that pleasure of craft from any kind of real-world meaning. If it&#x27;s meaningful to you, that&#x27;s enough. You don&#x27;t need to justify it beyond that.')