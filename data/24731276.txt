Item(by='Justsignedup', descendants=None, kids=None, score=None, time=1602259641, title=None, item_type='comment', url=None, parent=24720440, text='There are techniques for controlling complexity there, and often you can make a single-page react page which will encapsulate complex behaviors.<p>Often a mix of the two helps. But you end up having one set of code managing the static page, and another for the api-based interactions. and then once you have api-based stuff product asks to add on a feature and a feature until you have mutliple SPAs. :P<p>Code reuse is a big reason too, why write 10 different SPAs for one site, when you can write 1 SPA with a ton of code&#x2F;tool re-use.<p>I always end up taking 1 SPA and make 2-4 different SPAs out of it, each facing a different set of users, with different security&#x2F;look requirements, but all underpinned by the exact same technology.<p>So much headaches saved.<p>Just to make it clear:<p>- I agree that SPAs didn&#x27;t come out of developers being idiots, but rather because the shit we had to do before SPAs was craaaaaaaaaaazy. Jesus I remember the old jquery things. And before jquery... shiver...<p>- I think SPAs are definitely not a one-tool-for-all-problems kind of thing.<p>- Interestingly enough, SPAs can be a one-tool-for-all-problems kind of thing with SSR, that&#x27;s what linkedin does. LI is an SPA with the ability to behave like a non-SPA via isomorphism.')