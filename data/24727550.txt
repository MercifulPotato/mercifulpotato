Item(by='guitarbill', descendants=None, kids=[24736604], score=None, time=1602227015, title=None, item_type='comment', url=None, parent=24722214, text='&gt; I&#x27;ve heard descriptions and seen blog entries about many other large companies build systems, but to be honest, nothing even comes close to the amazing technology Amazon has produced.<p>&gt; Say what you will about Amazon&#x27;s frugality, their turnover, and their perks, but the tools available at Amazon make it a world-class place to build software.<p>Haha, funny. I mainly object to the fawning here. There&#x27;s a lot of good ideas in the build system, but there&#x27;s also more to it, like CI. Any (hypothetical) build system that runs the tests after commits have been merged is not great. Does constantly blocked pipelines sound fun? (Edit: one of the comments mentioned dry-runs, but for example, if the merge behaviour of the code review tool was atrocious, so people were accustomed to overriding it, and people did not pay attention to the dry-run, because there&#x27;s no huge green tick like GitHub, then that may be ignored far too often)<p>There&#x27;s also other issues. A build system that was originally made for e.g. C++ might struggle with other languages, and the experience be sucky. As good as something like Apollo sounds it might not deal too well with deploying e.g. Lambdas, or other cloud resources.<p>Don&#x27;t drink the cool aid. There are some good lessons to be learned, but you can have a pretty great system with e.g. GitHub or GitLab - maybe even better for developer productivity while not being weighed down by years of legacy and inertia.')