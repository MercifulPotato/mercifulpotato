Item(by='lol768', descendants=None, kids=[25736753], score=None, time=1610389178, title=None, item_type='comment', url=None, parent=25731981, text='&gt; Disagree that hardening the API server is any better. This is the approach common in the US market, and my team has broken everything available there too. Also disagree with insinuations that these banks don&#x27;t have good, modern stacks. Barclays in particular is great. Way better than any challenger bank.<p>By &quot;hardening the API server&quot; I mean fixing <i>actual</i> security vulnerabilities and improving the security posture of the API gateway, not going for further obfuscation layers or attempting to prevent third-party clients. Those are a waste of time. My position is that there&#x27;s no point trying to prevent the user&#x27;s access to his own data - but there <i>is</i> a point in enforcing e.g. access controls so customers can&#x27;t access data for accounts they don&#x27;t own or spend money they don&#x27;t have.<p>When you talk about &quot;breaking&quot; banks in the US space, are you referring to gaining access to the API and reversing it (which has always been Teller&#x27;s MO, no?)  - or finding vulnerabilities with the API endpoints with actual financial implications for the institution?<p>&gt; Also disagree with insinuations that these banks don&#x27;t have good, modern stacks<p>I&#x27;m aware of your thoughts on this, though I respectfully disagree with the &quot;modern&quot; characterisation you have applied to legacy banks based on the sorts of tech I&#x27;ve seen and how it e.g. coped when faced with such exotic things as non-ASCII characters.<p>Monzo have at least never wasted time on obfuscating the fuck out of their API comms, nor forcibly preventing me from accessing my transactions on my rooted device or running their app under a debugger.')