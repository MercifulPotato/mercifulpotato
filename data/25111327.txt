Item(by='salex89', descendants=None, kids=None, score=None, time=1605533139, title=None, item_type='comment', url=None, parent=25090084, text='Hi, nice conversation going here :) . Let me just reiterate on a few points.<p>3. Correct, I&#x27;m referring to azure-storage-blob and azure-mgmt-storage. I&#x27;m not concerned with the unmanaged disks so much, which utilize the storage accounts (thank god, we&#x27;re over that :D ), more with working with regular blobs. From the initialization of the BlobClient to the operations which are sometimes weird in their input parameters, it&#x27;s not up to par with lets say azure-mgmt-compute.<p>4. This point is not related to point 3. I&#x27;m completely referring to managed data disks, which are first class* entity (like NIC, for example, not a Page Blob any more). Attaching them to an existing VM is a nightmare, and because of some features we do that often. Also they lack basic things like per-disk disaster recovery (but this is way out of the scope of the SDK).<p>5. Correct, we&#x27;re doing it by ourself. The LROPoller is also there in other parts of the SDK, we also use (if it&#x27;s the same poller), but I think we were not able to utilize it. Ny clunky, I meant the response itself sometimes has headers with redundant values, we&#x27;re not sure which one to use so we just take from experience (if there are two similar) etc. I haven&#x27;t looked at the docs recently, but the &quot;raw&quot; requests are not documented that well.<p>* - I did say that managed disks are a first class entity, but we found out the hard way that the managed disks and managed snapshots are actually just in some storage accounts on the backplane, and when something goes South, storage-level errors leak out to our logic :) . Also throttling, thresholds and quotas apply as if it were just another storage account, but even worse, we don&#x27;t control how the disks are distributed between those backplane storage accounts, so we get funky issues from time to time. We solve them by being extra careful and conservative with some operations, but heh, talking about leaky abstractions. This is not an SDK thing, just wanted to point that out for someone reading.')