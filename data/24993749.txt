Item(by='AnimalMuppet', descendants=None, kids=[24993943], score=None, time=1604529234, title=None, item_type='comment', url=None, parent=24993147, text='If my target is some weird 56-bit thing, I&#x27;m still likely to be able to get a C compiler.  It probably won&#x27;t be a fully-standard C, because it probably won&#x27;t support int64 types, and maybe not even int8.  But that&#x27;s all right, because in that situation, I probably don&#x27;t <i>want</i> an int64.  I want whatever natural word-size I get with int.  The not-quite-standard-ness of the implementation doesn&#x27;t make it not useful.<p>And, it may be <i>all</i> I can get.  I probably can&#x27;t get a Pascal for that situation.  I am somewhat unlikely to be able to get a Rust or an Ada.  But I can probably get a C.<p>Especially in embedded systems, you can quite often get a C on the quirky chips, but you can&#x27;t get anything else.<p>And no, all those machines are not &quot;roughly a VAX of the same generation&quot;.<p>Now, that may not be quite the same as your claim, because I&#x27;m not going to take my embedded application from an 8085 and drop it unchanged onto my 56-bit oddball.  (On the other hand, my 8085 code probably isn&#x27;t using int64 anyway.)<p>In fact, embedded applications are more non-portable than that, because they always depend on the hardware context, not just on the compiler.  Still, you can grab significant functionality from a different machine, modify it sensibly for the new environment, and use it.')