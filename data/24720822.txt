Item(by='elliottinvent', descendants=None, kids=None, score=None, time=1602175085, title=None, item_type='comment', url=None, parent=24707054, text='The semantic web makes sense for large datasets provided by tech-enabled companies, but the overwhelming majority of entities represented on the web don&#x27;t have large datasets or tech teams. They have a small amount of standard data they want to get out to customers – contact data, company data (tax registration or whatever), GPS locations for stores, etc. They don&#x27;t need 99.9% of the complexities of Schema.org.<p>They only consider a website from their viewpoint – a human viewing the website through browser. The HTML (including microdata, JSON-LD, etc) is terrifying for most of them. So at best, their web designer builds in some semantic web standards but the data can be inaccurate or become out of data quickly because the website owner doesn&#x27;t even know it&#x27;s there.<p>Even big companies have adopted semantic web standards in such a confusing and inconsistent way that it&#x27;s difficult to rely on the data being available in an expected format, so that a developer can build something on top of it.<p>Unless semantic web standards can be adopted by small businesses in a simple way (point, click and type) I don&#x27;t think they will ever be widely adopted.<p>Finally, I don&#x27;t think it&#x27;s efficient to hide the 1kb of machine usable data inside 99kb of HTML designed for browser rendering.<p>Shameless plug:\nA small team and I have built an alternative to the semantic web, to store machine readable data in DNS. It can be populated by simple user friendly online forms.<p>Explainer and summary: <a href="https:&#x2F;&#x2F;www.num.uk" rel="nofollow">https:&#x2F;&#x2F;www.num.uk</a><p>Best way to play around with it: <a href="https:&#x2F;&#x2F;app.numserver.com&#x2F;tools&#x2F;editor&#x2F;add" rel="nofollow">https:&#x2F;&#x2F;app.numserver.com&#x2F;tools&#x2F;editor&#x2F;add</a>')