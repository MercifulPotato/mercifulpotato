Item(by='tasty_freeze', descendants=None, kids=[24741848, 24741911], score=None, time=1602363235, title=None, item_type='comment', url=None, parent=24741406, text='Sure. There are many reasons why a real circuit falls short of the idealized abstraction.<p>A truly squarewave clock, or any rising&#x2F;falling edge that happens in zero time would have infinite bandwidth, and no real circuit can have infinite bandwidth because of capacitance, inductance, and resistance. Even though the power rails of a TTL chip are 0V and 5V, when a fast transition happens, the signal can experience reflections because the impedance of the driver and the copper trace are different, and because the end of the copper trace isn&#x27;t terminated with impedance which matches the trace.  As a result, the edge takes finite time to transition from 0V to 5V, but the signal can actually exceed 5V because of a reflection. Likewise, falling signals can go below 0V.<p>Also, the signal at one end of a wire will not be the same as the signal at the other end of the wire. It isn&#x27;t even just a simple time delayed version. Eventually they&#x27;ll come to equilibrium if the signal is stable long enough.<p>You can read about transmission lines here:\n<a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Transmission_line" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Transmission_line</a><p>OK, another defect. Imagine a TTL part with 8 buffers in it, say a 74ACT244. Say all the outputs are low, and at some moment seven of those inputs switch from low to high. The corresponding outputs must drive enough current to switch their loads from low to high as well. Each of those outputs draw current to charge their load from 0V to 5V, and all of the current flows through a single power pin and a single ground pin. Because of of non-zero resistance and inductance, the voltage seen by the transistors on the chip is shifted slightly from the voltage seen on the PCB.  That can cause the output which isn&#x27;t changing to sink&#x2F;source current (depending on the direction of the change) causing its output to bounce a bit.  Imagine having four people on a trampoline, with one standing still and three jumping at the same time. That &quot;standing still&quot; person will still bounce up and down because of the others causing their common ground reference to shift.<p>Another defect. A chip&#x27;s spec sheet lists a bunch of requirements for proper operation and guarantees of the chip&#x27;s behavior if the requirements are met. Say a flip flip says it has a 5ns setup time, that is, the data in to the flop must be held stable for 5ns before the rising edge of the clock arrives. If this requirement isn&#x27;t met, the chip&#x27;s behavior is unspecified (it might capture it, it might not, it might capture it but it might take an arbitrarily long time to appear on the output, or the output could even oscillate). During the design phase one adds up the worst case propagation times for all paths from point A to point B and makes sure there is at least 5ns to spare to guarantee the requirements. But in real life, a clock trace runs all over the board and has many loads, each presenting some amount of capacitance. Kind of like relativity, different chips will see the rising edge at different times. Looking at a given chip, the clock edge and data inputs are each transitioning from high to low or low to high over the course of a nanosecond (and often more). At what point on that slope is the signal really a &quot;0&quot; or a &quot;1&quot;? Sometimes those signals are clean transitions because of reflections, it might go from 0.7V before the clock edge, to -0.5V after the clock edge, to 2.2V (neither logical 0 nor 1), stay like that for a few ns, then move to 4.2V for a few ns, then 4.0V for a few ns, then 4.6V.<p>The most maddening is the fact you can&#x27;t always trust what the oscilloscope tells you. The oscilloscope has finite bandwidth; 100MHz scopes were common in the 80s and early 90s when I was using them. The 200MHz scopes were a lot more expensive. You might think, hey my clock is only 25 MHz, 100 MHz is plenty ... but a fast signal edge contains harmonics that are a multiple of that 25 MHz base frequency, so the scope tends to act as a lowpass filter. The scope probe is typically more than a meter long, and there is a clip on the probe that must be attached to your circuit ground. That is a 2m loop of wire, and in the best case it would take a signal a few ns to travel the length of that wire, and any stray EM fields can induce signals on that probe that aren&#x27;t in the circuit (though obviously the probe designers take pains to minimize such effects). When debugging and a signal looked unexpectedly weird, a common tactic to avoid sinking too much time chasing phantoms was to change the probe, change the channel, or simply waggle the lead wire around to test the sensitivity of the displayed waveform on stray capacitance and such.<p>Testbenches always had a few cans of refrigerant on hand. If you suspected a chip might be flaky, probe its output then spray it and see if the output is affected by the chip temperature.<p>The list goes on...')