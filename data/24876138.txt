Item(by='l0b0', descendants=None, kids=[24876980], score=None, time=1603502741, title=None, item_type='comment', url=None, parent=24874872, text='&gt; The paragraph right below that mentions that Oil has &quot;read -0&quot;, which consumes the find -print0 input.<p>Yeah, I read that (&quot;read -0&quot;, for the record, is an excellent idea). QSN for filenames still a bad idea. Your wc, awk, grep etc commands will now have to <i>decode</i> the stream after splitting it. Taking it to the extreme, it&#x27;s like mixing JSON and XML (or CSV and TSV) because some things work better in one or the other.<p>Right now, even in Bash, I can use newline-terminated tokens and accept that newlines are going to screw up everything (which is fine if I control the filenames), or I can use NUL-terminated tokens and force my code to handle absolutely all possible inputs. No extra parsing library necessary.<p>As long as filenames can contain <i>any</i> character except slash and NUL, terminating them by NUL is a simple solution (at least when using GNU tools).<p>&gt; Shell scripts can use both formats, but the advantage to QSN is that it preserves the line-based nature of shell.<p>Except when your tokens can contain newlines, which we&#x27;re stuck with for the foreseeable future.<p>&gt; Say I want to use wc -l, awk, or grep. Then the QSN-lines format is better than the NUL format.<p>Can&#x27;t agree, for the reasons above.<p>&gt; Also, you can transmit a series of say SHA256 checksums in binary format with QSN-lines, or some other binary format.<p>&gt; Even entire JPG files, audio clips, wasm files, whatever. It&#x27;s &quot;8-bit clean&quot; (and so are Oil strings).<p>That&#x27;s a completely different problem set. You could use existing simple encodings like base64. &quot;Why use QSN over base64&quot; would be an interesting blog post.<p>In any case, I admire the courage to try to improve the state of the art! I would absolutely love to see something better than POSIX&#x2F;Bash as the baseline. At this point I suspect we&#x27;ll need to ignore those and go for something radically different like PowerShell to regain sanity.')