Item(by='chrisseaton', descendants=None, kids=[25028227], score=None, time=1604861222, title=None, item_type='comment', url=None, parent=25027475, text='I think it&#x27;s just a case of me using more generalised terminology.<p>&#x27;pretend X doesn&#x27;t exist&#x27; is in my mind &#x27;speculate that X isn&#x27;t enabled&#x27;. It really means the same thing doesn&#x27;t it?<p>You don&#x27;t need a guard between every instruction, as attaching the debugger is an async option - it&#x27;s already non-deterministic when the application will receive the instruction to move to debug mode, so as long as it checks frequently enough (usually once per loop iteration and once per function call) it&#x27;s enough.<p>I think &quot;we&#x27;ll have a function the debugger calls, telling us to redo the compilation&quot; does describe speculation and deoptimisation. Remember the function may be currently executing and may never return, so it&#x27;s not as simple as replacing it with a different version. You may need to replace it while it&#x27;s running.<p>It does make compilation more complicated because you need to be able to restore the full debug state of the application, which means storing some results you may not choose to do otherwise, and storing extra meta-data.<p>&gt; Debuggers don&#x27;t follow any rules<p>Debuggers can be a formally or informally specified part of the language, and their behaviour may have to follow rules about which intermediate results are visible which may constrain your compilation.<p>My argument is: if you <i>do</i> treat debugging as speculation then your model is simpler and easier to work with and you don&#x27;t need two kinds of deoptimisation. Real languages are implemented this way.<p>Here&#x27;s two papers I&#x27;ve written about these topics taking the idea even further.<p><a href="https:&#x2F;&#x2F;chrisseaton.com&#x2F;truffleruby&#x2F;icooolps15-safepoints&#x2F;safepoints.pdf" rel="nofollow">https:&#x2F;&#x2F;chrisseaton.com&#x2F;truffleruby&#x2F;icooolps15-safepoints&#x2F;sa...</a><p><a href="https:&#x2F;&#x2F;www.lifl.fr&#x2F;dyla14&#x2F;papers&#x2F;dyla14-3-Debugging_at_Full_Speed.pdf" rel="nofollow">https:&#x2F;&#x2F;www.lifl.fr&#x2F;dyla14&#x2F;papers&#x2F;dyla14-3-Debugging_at_Full...</a>')