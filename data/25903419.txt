Item(by='Decabytes', descendants=None, kids=None, score=None, time=1611584809, title=None, item_type='comment', url=None, parent=25894233, text='The main goal of the project from the Racket on Chez status 2018<p>&gt; It would be nice if porting to Chez Scheme made every aspect of Racket magically faster. It hasn’t done that, but we have plenty of room for improvement; the performance results to date are a lower bound on performance, not an upper bound.<p>&gt; Keep in mind that the original goal is not to have a faster Racket, but a better-implemented Racket with acceptable performance. The Racket-on-Chez implementation is far more maintainable and flexible than the current Racket implementation, so maybe we’re half-way there after one year of work.<p>The fact that the performance looks this good is a huge win. And the focus on maintainability over speed is a refreshing sight. This is the sort of practical solution that will allow Racket to be relevant for many years to come. Racket is a good all around Scheme, there are other schemes that do certain aspects of what Racket can do better, but as a whole Racket is a very complete package.<p>I have two main criticisms with Racket, which are totally fixable, and in large part due to Racket&#x27;s history as an incubator for language oriented programming, developed by PhDs in Comp Sci. Racket is very Academic. The documentation is great, but it is written by other Academics and can be hard to grok. Same with example code. Sure if you are looking at the student languages and tutorials based on that it is more accessible, but the minute you are trying to write a complex GUI app in typed Racket, the tutorials and example code is few and far between. Sometimes it makes me feel like I&#x27;m to dumb to be using the language, and I feel like I&#x27;m not the only one to get that feeling.<p>Also for a language that prides itself on Language Oriented Programming, I want to some more examples&#x2F;tutorials that are not just using brain fuck language. These are fixable, and I admit some are just me problems, but I&#x27;m actively working to solve them in this space.')