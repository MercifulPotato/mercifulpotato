Item(by='akersten', descendants=None, kids=[24695958], score=None, time=1601960190, title=None, item_type='comment', url=None, parent=24693424, text='CSS is a top-down language, not a constraint language. It is not surprising that you cannot construct things in the same way as you would in a constraint-based layout system.<p>I am sure I could discover an equal &quot;simple&quot; example that is easy in CSS but difficult&#x2F;impossible in GTK.<p>That you cannot use a hammer in the same way as a crowbar, even though they are both blunt instruments, is not a condemnation of the hammer. So yes, you do need to evaluate what the right tool for the job is - like JS to do a quick width-match on the labels&#x27; natural widths - after the CSS did most of the rest. That is not &quot;bla-bla-blah,&quot; that&#x27;s just knowing the limits of your tools.<p>The frustration seems to be the impression that CSS should be able to solve any conceivable layout desire on the web, which isn&#x27;t its charge: CSS is first and foremost made to style web <i>documents</i>, which by-and-large don&#x27;t fit as easily into the constraint-based-layout box as a traditional desktop app would. Since this kind of desire often crops up in desktop-like SPAs, where JS use is endemic already, it&#x27;s not wrong to use a little bit more JS to nudge the visual experience a little closer to what you&#x27;d see on a desktop app.<p>I guess my takeaway is, CSS doesn&#x27;t promise the world, so if you come in expecting that, you&#x27;ll walk away disappointed. Luckily there are many tools in the web dev toolkit to achieve your engineering desires, and it&#x27;s not verboten to use them (aside from a philosophical desire to avoid JS, but if the biggest problem for your page when JS is disabled is that the labels are slightly different sizes, I think you&#x27;re doing a great job already).')