Item(by='sergeykish', descendants=None, kids=None, score=None, time=1603215637, title=None, item_type='comment', url=None, parent=24838570, text='Yes, I know about null [[Prototype]] and who is owner of prototype and __proto__. I like how it is not real property<p><pre><code>    var foo = {\n      __proto__: null\n    }\n    foo.__proto__\n    undefined\n</code></pre>\nAs you can see I do not store it and do not modify it, it is assertion, kind of instanceof.<p>&gt; Also, `__proto__` is deprecated<p>Object.getPrototypeOf would be too verbose in this example. I could have defined<p><pre><code>    Object.defineProperty(Object.prototype, &quot;proto&quot;, {\n      get() { Object.getPrototypeOf(this) }\n    })\n</code></pre>\nbut why bother? We both know that I meant [[Prototype]].<p>&gt; Primitive<p>&gt; fn.bar = &quot;abc&quot;<p>is syntactic sugar for<p>fn[&quot;bar&quot;] = &quot;abc&quot;<p>do not follow.<p>&gt; (1).__proto__ === Number.prototype<p>number is primitive<p><pre><code>    typeof 1\n    &quot;number&quot;\n    1 instanceof Number\n    false\n</code></pre>\nnumber is wrapped in Number when we access property<p><pre><code>    Number.prototype.foo = function () { return this }\n    1..foo()\n    &#x2F;&#x2F;Number {1}\n    typeof 1..foo()\n    &#x2F;&#x2F;&quot;object&quot;\n    1..foo() instanceof Number \n    &#x2F;&#x2F;true\n</code></pre>\nFunction is not primitive<p><pre><code>    typeof Math.max\n    &quot;function&quot;\n    Math.max instanceof Function\n    true\n    Math.max instanceof Object \n    true\n</code></pre>\nit is an object, we can attach properties to object.<p>As I remember valueOf is complicated by hints, exposed in JavaScript [1]. I&#x27;ve played with removal<p><pre><code>    delete Array.prototype.toString\n    delete Object.prototype.toString\n    Uncaught TypeError: Cannot convert object to primitive value\n</code></pre>\nUnfortunately it converts to string and than converts string to number.<p><pre><code>    delete Array.prototype.valueOf \n    delete Object.prototype.valueOf \n    +[]\n    &#x2F;&#x2F;0\n</code></pre>\n[1] <a href="https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Reference&#x2F;Global_Objects&#x2F;Symbol&#x2F;toPrimitive" rel="nofollow">https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Refe...</a>')