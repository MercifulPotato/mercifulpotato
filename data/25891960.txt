Item(by='piggubiggu', descendants=None, kids=[25892105], score=None, time=1611495817, title=None, item_type='comment', url=None, parent=25890893, text='It sounds like you&#x27;re talking about toy databases which don&#x27;t run at a lot of TPS. Let me point out some features missing from your simple load a map in memory architecture.<p>You also have to do backup and recovery. And for that, you need to write to disk, which becomes a big bottleneck since besides backup and checkpointing there is no other reason to ever write to disk.<p>Then, you have to know that even in mem database, data needs to be queried, and for that you need special data structures like a cache aware B+tree. Implementing one is non trivial.<p>Thirdly, doing atomic, consistent and isolated transaction is certainly trivial in a toy example but in an actual database where you have a high number of transactions, it&#x27;s a lot harder. For example, when you have multiple cores, you certainly will have resource contention, and then you do need locks.<p>And last thing about gc, again, gc is great, but there has to be a custom gc for a database. You need to make sure the transaction log in memory is flushed before committing. And malloc is also very slow.<p>I&#x27;d suggest reading more into in mem research to understand this better. But in mem db is certainly not the same as a disk db with cache or a simple Hashmat&#x2F;B+tree structure.')