Item(by='ywei3410', descendants=None, kids=None, score=None, time=1612124403, title=None, item_type='comment', url=None, parent=25980408, text='The auto-completion is purely Python&#x27;s dynamic-dispatch problem though. Lisp has symbol-based auto-completion which doesn&#x27;t suffer from the same issue (search is a different story!).<p>This sounds terribly controversial, but I would love to know &#x2F;when&#x2F; the static-typing pays off compared to a looser approach like sound-gradual typing (where you basically export types at a boundary and make sure that you don&#x27;t violate those).<p>I do wonder whether a better approach is to prove your code in some other language (say Z3, Agda, Coq) - then implement it in something else, making sure you can prove isomorphism. This has quite a few benefits; you&#x27;re not tied to a constructive proof on the type-level ala Haskell, Rust, Go etc... and you can automate a large part of trivial proofs.')