Item(by='jcranmer', descendants=None, kids=[25127822, 25126640, 25127464], score=None, time=1605633341, title=None, item_type='comment', url=None, parent=25125900, text='&gt; C won the competition because it just gives programmers the bare minimum functionality to put an operating system and a compiler in place!<p>Not really. C won because it was the standard compiler for Unix, and was a free compiler for a free operating system in a time when both were highly unusual.<p>But in the past few decades, C has lost a lot of its market share to other programming languages. In the realm of desktop (and mobile) applications, C is basically unused for new projects--its standard library is truly anemic here, and major support libraries (e.g., GUI toolkits) are often in C++ and not C. Where C is still the dominant language is the land of embedded applications, and it&#x27;s not had a lot of competition here since most languages don&#x27;t bother trying to define a freestanding implementation.<p>Rust is really the first language to try to contend this space. And there are signs that it may supplant C: Intel is apparently looking to move its firmware to Rust; Linux is allowing Rust for device drivers and kernel modules. Hell, even some OS programming courses (e.g., Stanford, Georgia Tech) have moved their curriculum to use Rust instead of C.')