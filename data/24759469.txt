Item(by='geophile', descendants=None, kids=[24760402], score=None, time=1602536945, title=None, item_type='comment', url=None, parent=24759112, text='Marcel (referenced elsewhere in this discussion) addresses this point exactly. I didn&#x27;t want to invent another scripting language. Python is great for that purpose, except that, as you point out, shelling out is painful. So marcel includes a module, marcel.api, which gives you access to marcel shell capabilities inside of Python. The example I gave elsewhere explores a directory recursively, finds .c and .h files, and counts the lines in them. The shell command was this:<p><pre><code>    ls -fr \\\n    | select (f: f.suffix in (&#x27;.c&#x27;, &#x27;.h&#x27;)) \\\n    | map (f: f.read().count(&#x27;\\n&#x27;)) \\\n    | red +\n</code></pre>\nIn Python, it would be:<p><pre><code>    from marcel.api import *\n\n    print(first(ls(file=True, recursive=True) |\n                select(lambda f: f.suffix in (&#x27;.c&#x27;, &#x27;.h&#x27;)) |\n                map(lambda f: f.read().count(&#x27;\\n&#x27;)) |\n                red(&#x27;+&#x27;)))\n</code></pre>\nYou can see that the ls, select, map, and red commands are called directory from the Python code, without having to call Popen, os.system(), etc. Each version of the code (shell, script) runs in one Python process, (not one process per command).')