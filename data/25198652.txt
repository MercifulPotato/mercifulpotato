Item(by='xaedes', descendants=None, kids=None, score=None, time=1606227867, title=None, item_type='comment', url=None, parent=25196073, text='Indeed, good observation!<p>The amortized runtime for N push_back will only be O(N) if the underlying array is resized to a constant <i>factor</i> &gt; 1 times the required size (e.g. doubling it each time it&#x27;s full). When prefixing with reserve of the actual required size, then, as you say, the amortized runtime for the N push_backs will be O(N^2).<p>I once investing a particularly slow routine to import csv to numpy-array of a million lines or so.\nIt read csv lines in a numpy array, calling hstack for each new line, resulting in huge runtimes. \nSince then I have seen similar misuses of hstack and the like.<p>When you do similar, it is important to resize (by hstack or whatever) to a constant <i>factor</i> &gt; 1 times the required size. Don&#x27;t forget to remember the current size, as the size of the underlying array is now the capacity.')