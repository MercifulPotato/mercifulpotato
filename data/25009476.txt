Item(by='yowlingcat', descendants=None, kids=[25010315], score=None, time=1604684631, title=None, item_type='comment', url=None, parent=25009181, text='&gt; The mistake was that email-user identity is not a true invariant.<p>That&#x27;s true. I also wonder if there&#x27;s an issue with lack of modeling experience or strategy. Natural key vs surrogate key is a really important distinction to make when modeling first party data. I&#x27;ve observed a common preference towards the latter (with uniqueness constraints) as a default. I think that&#x27;s because generally it&#x27;s more useful (and common) than not to be want to insert new things into your collection with monotonically increasing unique primary key values autogenerated without you having to do any of the accounting. I think natural keys are still useful, just in a RO&#x2F;projection&#x2F;ETL based use case.<p>&gt; you have a huge brittle process for migrating a user between emails, or your entire codebase starts getting littered with statements looking for previous email addresses and copying data on the fly.<p>It&#x27;s so unfortunate how easy of an error this is to make and how much it makes any future work on the codebase shittier. Eventually, it all needs to be refactored to regain any measure of sanity. I see so many companies that are bitten by this. Once it gets going, it becomes really awful for the engineers that have to maintain it. Morale takes a hit and attrition amps up. So much net human suffering that could have been avoided by hiring competent people to do the upfront work in the first place when the code was being written.')