Item(by='databrecht', descendants=None, kids=None, score=None, time=1607693752, title=None, item_type='comment', url=None, parent=25380694, text='&gt; Why do this? One possibility is that the ways that Fauna actually is better than DynamoDB are too subtle to get anyone&#x27;s attention. They&#x27;re real and useful, but not ridiculous. The people who actually use DynamoDB at massive scale might understand them, but also probably won&#x27;t want to change up.<p>I respectfully disagree :). I don&#x27;t think that the combination of relations, strong consistency, flexible&#x2F;powerful indexing, a language that allows you to do complex conditional transactions or reads in one query are subtle differentiators. Especially when you can maintain all those things while being multi-region and scalable (and you also get a flexible security system and get to query back-in-time and&#x2F;or query&#x2F;alter history and&#x2F;or get changesets cheaply). Of course, this post didn&#x27;t go in depth on all of these since that&#x27;s not the topic of this post.<p>Many databases have limitations on the former and present workarounds that require you to either do a lot of work or build something in such an inflexible hard-coded way that it would be very hard to change. The mere fact that they present workarounds (which essentially what a single-table design is for me), to me, indicates that there is a need for their users to work around it.<p>&gt; So you go after people who aren&#x27;t using DynamoDB at massive scale. Say, early-stage startup founders who want to be on DynamoDB from day 1 because someday their product will be Web Scale. But don&#x27;t have a lot of time to carefully evaluate claims like this. They just say &quot;10x cost reduction? Wow, Fauna is the new best DB!&quot; Most of these guys fail, but a few of them are a runaway success (and would have been equally so if they&#x27;d used DynamoDB), are now stuck with Fauna whether they like it or not (but let&#x27;s assume they like it as least as well as DynamoDB, maybe even slightly more), and are now listed as large scale users of Fauna on their website. You too could be a unicorn startup! Start using Fauna today!<p>I think you just described the life of a developer when selecting &lt;insert random new technology&gt;. Technological advances are accelerating, and we don&#x27;t have enough time to research them all, so we skim through the posts&#x2F;docs and look at what other companies have done. I understand what you mean and it&#x27;s an everyday source of frustration to me as well that many chase new technologies based on one article. That&#x27;s how many startups ended up with microservices they didn&#x27;t need or how a new SPA technology takes the world by storm every 2 years.<p>&gt; Basically, I think the makers of Fauna are trying to con you with this article. It&#x27;s not that their product is bad, it&#x27;s that they&#x27;re trying to get you to buy it for reasons other than that it&#x27;s good.<p>The last sentence is quite unfair imho though. Fauna is one of the databases that tries to be correct in their messaging and respects other products deeply. In my personal opinion, Dynamo and Fauna are very different products with a different focus. Dynamo focuses on a use case where you need scalability and sheer speed and are less interested in relations, many access patterns or consistency over many collections. At the same time they do appeal to people who do need those features by presenting workarounds. Maybe someone from a relational background sees these workarounds, didn&#x27;t think it through and then gets stuck in their inflexibility? Is Dynamo to blame? No, they are just helping their users with questions that often come back. Similarly, the question of &#x27;how is Fauna different from Dynamo&#x27; and more importantly for this article &#x27;how does pricing compare&#x27; is a question that often comes back here. A question that is hard to answer since it depends entirely on how you use it and many subtleties that are not visible at first hand. Do you need relations? A single-table approach would help but will also blow up your table with redundant data and therefore increase pricing although at first Dynamo looked cheap, it depends on the use case. If you do not research a product thoroughly, chances are you will run into a wall and be stuck with it no matter whether the product is Dynamo, Fauna, Spanner, Firebase, etc. All we can do is provide as much details on what we can and can&#x27;t do and I think the Fauna docs and forums do quite a good job on that.<p>I am a developer advocate at Fauna, this reply is however entirely my personal opinion.')