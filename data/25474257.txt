Item(by='ineedasername', descendants=None, kids=[25474953, 25474994, 25474711, 25475523, 25477091], score=None, time=1608342724, title=None, item_type='comment', url=None, parent=25473284, text='Even worse are undocumented quotas. Probably not quite the same thing, but I&#x27;ve had such an issue with a SaaS API for extracting data for a cloud system. It has an unpublished limit on queries. Writing a library of code to use it, I was fine. All tests passed. Running a full day&#x27;s data pull &amp; integration had sporadic failure: It would run w&#x2F;o issue for half the job, then have seeming random errors on some requests.<p>I kill the job, start again, and the problem is there from the very beginning. Kill again, review my code for an hour or two (python, grequest) tweak some parameters, start the job again and it seems fine, problem solved? Nope, halfway through the same issue occurs.<p>More testing showed even that &quot;halfway through&quot; wasn&#x27;t consistent.<p>It&#x27;s the hidden quota, and it wasn&#x27;t even consistent: Sometimes it would go 10%, sometimes 70%. I don&#x27;t know if they even had static limits or some type of dynamic system. Then you get throttled, only requests fail without any indicative error message except the &quot;failed&quot; or &quot;unavailable&quot; (I forget which)<p>I determined the limit was tied to the API key. Given that error messages &amp; the unknown limit made working within their hidden limits difficult, and support was neither sympathetic or forthcoming with details necessary to work within their limits, I simply created multiple API keys &amp; rotated between them on requests. Probably not the best behavior for a tenant of a shared system, but I didn&#x27;t see much choice when the alternative was to not use an essential advertised feature.')