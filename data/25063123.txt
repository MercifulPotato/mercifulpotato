Item(by='freininghaus', descendants=None, kids=None, score=None, time=1605129675, title=None, item_type='comment', url=None, parent=25041793, text='I agree that the recursive solution is nice and simple. We&#x27;ve also used it at work.<p>However, you can run into &quot;maximum recursion depth exceeded&quot; issues if the number of context managers is extremely large. ExitStack handles this situation nicely [1].<p>Note that I&#x27;m not saying that using so many context managers is a good idea ;-) In our case, using ExitStack (which also has a backport to Python 2 [2]) was the simplest fix though.<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;freininghaus&#x2F;notes&#x2F;blob&#x2F;master&#x2F;misc-notebooks&#x2F;2020-11-11-python-exitstack-vs-recursion.ipynb" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;freininghaus&#x2F;notes&#x2F;blob&#x2F;master&#x2F;misc-noteb...</a> or <a href="https:&#x2F;&#x2F;nbviewer.jupyter.org&#x2F;github&#x2F;freininghaus&#x2F;notes&#x2F;blob&#x2F;master&#x2F;misc-notebooks&#x2F;2020-11-11-python-exitstack-vs-recursion.ipynb" rel="nofollow">https:&#x2F;&#x2F;nbviewer.jupyter.org&#x2F;github&#x2F;freininghaus&#x2F;notes&#x2F;blob&#x2F;...</a><p>[2] <a href="https:&#x2F;&#x2F;contextlib2.readthedocs.io&#x2F;en&#x2F;stable&#x2F;#contextlib2.ExitStack" rel="nofollow">https:&#x2F;&#x2F;contextlib2.readthedocs.io&#x2F;en&#x2F;stable&#x2F;#contextlib2.Ex...</a>')