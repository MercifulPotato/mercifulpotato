Item(by='pmiller2', descendants=None, kids=None, score=None, time=1604101693, title=None, item_type='comment', url=None, parent=24947855, text='Fine, my example is outdated.  That&#x27;s irrelevant.  I could probably find 3 more examples in the current default config for MySQL that would be as bad or worse.<p>As for the rest of your comment, sensible defaults most certainly <i>are</i> a valid reason to choose one piece of software over another.  Bad default configs are equivalent to what the Dungeons &amp; Dragons community calls &quot;newbie traps.&quot;  They&#x27;re things that either don&#x27;t look important, or don&#x27;t look like they&#x27;ll hurt you, but really are important, or can hurt you, if you&#x27;re not extremely careful.  What&#x27;s more, some of these options are probably not going to be backward compatible with your code.  So, you get into this situation where MySQL is doing shitty things you don&#x27;t want it to do, and, when you find out later that it&#x27;s doing those things, you either can&#x27;t do much about it, or doing something about it involves major surgery to your application.  That&#x27;s bad.<p>So, yes, you can configure MySQL to have better than default behavior.  That&#x27;s no surprise; that&#x27;s literally the point of having configuration options, after all.  The problem is that some of these options don&#x27;t look too bad.  There is something to be said for having a permissive configuration.  But, for the reasons I spelled out in the previous paragraph, that shouldn&#x27;t be the <i>default</i> configuration.  It&#x27;s not too much to ask that you should be able to install and configure a database and not have it lose or corrupt your data.')