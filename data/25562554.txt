Item(by='nimih', descendants=None, kids=None, score=None, time=1609185167, title=None, item_type='comment', url=None, parent=25562065, text='I&#x27;m not sure if an opinion of this sort can really be wrong, but here&#x27;s an attempt at an honest case:<p>- If you&#x27;re working with complex domain objects, Haskell has somewhat better tools for forbidding invalid states during runtime and assisting refactors as your data model changes.<p>- Haskell seems to have better libraries for writing parsers and compilers than Rust, if that&#x27;s relevant to your project.<p>- Some folks prefer ML syntax to Algol-like syntax.<p>- The GC, immutable-by-default data, and reasonable concurrency model are pretty nice features of the GHC runtime.<p>- The performance difference between Haskell and Rust probably doesn&#x27;t matter for most projects.<p>- Haskell might actually compile faster if you avoid crazy type-level programming shenanigans.<p>- Haskell has a pretty decent REPL.<p>Obviously, Rust has a different set of trade-offs, and the bigger cost to <i>either</i> is going to be that both are a bit off the beaten path and require some practice and experience to be productive and comfortable in.')