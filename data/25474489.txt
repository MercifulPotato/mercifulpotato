Item(by='felixhuttmann', descendants=None, kids=None, score=None, time=1608345504, title=None, item_type='comment', url=None, parent=25473046, text='I often hear &#x27;aim for elimination of global dependencies&#x27;, but the reality is that there is no way around global dependencies. AWS STS or IAM is just as global as google&#x27;s. The difference is that google more often builds with some form of guaranteed read-after-write consistency, while AWS is more often &#x27;fail open&#x27;. For example, if you remove a permission from a user in GCP, you are guaranteed consistency within 7 minutes [1], while with AWS IAM, your permissions may be arbitrarily stale. This means that when the GCP IAM database leader fails, all operations will globally fail after 7 minutes, while with AWS IAM, everything continues to work when the leader fails, but as an AWS customer, you can never be sure that some policy change has actually become effective.<p>In general, AWS more often shifts the harder parts of global distributed systems onto their customers, rather than solving them for their customers, like GCP does. For example, GCP cloud storage (s3 equivalent) and datastore (nosql database) provide strongly consistent operations in multi-region configurations, while dynamodb and s3 have only eventually consistent replication across regions; and google&#x27;s VPCs, message queues, console VM listings, and loadbalancers are global, while AWS&#x27;s are regional.<p>[1] <a href="https:&#x2F;&#x2F;cloud.google.com&#x2F;iam&#x2F;docs&#x2F;faq#access_revoke" rel="nofollow">https:&#x2F;&#x2F;cloud.google.com&#x2F;iam&#x2F;docs&#x2F;faq#access_revoke</a>')