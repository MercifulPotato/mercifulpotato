Item(by='temac', descendants=None, kids=[25344369], score=None, time=1607381844, title=None, item_type='comment', url=None, parent=25336394, text='I kind of agree with you.<p>I was thinking of people perfectly able to do&#x2F;finish the job. If that&#x27;s not their job to begin with, they have another one, and can be evaluated on it. If it&#x27;s just that their time is too precious to do it (and it can even be!) and they will actually bring value in another way, then so be it, but let&#x27;s not overestimate the value on dev on <i>that</i> project compared to people actually doing the work. Because we are not talking about design vs production, we are usually talking about rough-high-level-design vs high level refinement&#x2F;debugging + all-level-design + QA + iterating, rince and repeat...<p>And like I said: ideas are cheap. Fundamentally. Well, most ideas, but this would need a case by case judgment to recognize remarkable ones out of the mass, so I&#x27;ll continue with my simplification that &quot;ideas are cheap.&quot; If I say that a micro kernel still makes a lot of sense and should be the future of new OS &#x2F; VMs &#x2F; etc, well it is controversial, and maybe Linus won&#x27;t agree, but maybe if just enough people put some efforts to develop an excellent and very successful system from that, maybe Hurd done right, while I simply get to my next idea, maybe if the system is eventually successful I should not be overly praised for that. Maybe the people who did the work should. The mere idea bringers will be judged on other aspects anyway, and it does not retire anything from all their contribution everywhere, maybe other activities, etc... I&#x27;m not trying to declare the superiority of development vs other things. I&#x27;m trying to explain that development is to be judged by development criteria.<p>And so in the end, counting the number of commits (or whatever), yes it is kind of an idiotic metric but maybe not as much as some people seem to think. I see it more like the estimation of complexity via the number of LOC approach: it&#x27;s rough, you may need to apply various adjustments here and there if you look more closely, it may be biased by various non optimal feedback loops, it may lead to a few false positives and negatives, but it is still an interesting metric to begin to understand what is happening in a project.')