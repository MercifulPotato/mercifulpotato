Item(by='btilly', descendants=None, kids=[24984551], score=None, time=1604440030, title=None, item_type='comment', url=None, parent=24983145, text='I find that unit tests are much less useful than integration tests.<p>When we write unit tests, we ask the person to write the code to spend a lot of work documenting how they expect the system that they are integrating with to work.  What happens when that system behaves differently?  Or changes in the future?  And the way that mocks are set up are very sensitive to implementation details, which is a maintenance burden when you have to change that.<p>As a simple example, I had a function that was loading data into a database with a series of insert statements.  I sped it up by several orders of magnitude by using a COPY to send CSV data.  Guess how well that worked with the mock database interface in the unit tests?  (Long story short, it didn&#x27;t.  I replaced that unit test with an integration test.)<p>And yes, I&#x27;ve heard all of the lectures from test first folks.  But somehow I&#x27;ve never had the experience of things working that way with my projects.  (Possibly because most of what I do is close to the software&#x2F;database interface.)')