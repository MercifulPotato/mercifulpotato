Item(by='recursivecaveat', descendants=None, kids=None, score=None, time=1603574503, title=None, item_type='comment', url=None, parent=24880101, text='From my, admittedly hobbyist, perspective, I would avoid writing game logic like this without using the command pattern[0]. Whether you&#x27;re impurely updating values directly or purely inputting and outputting the game state, without commands your function is always a black box. This is more convenient initially but when everything is a black box it&#x27;s difficult to write &#x27;meta&#x27; effects correctly. For example in a card game you&#x27;d often have things like &#x27;if this happens, do that as well&#x2F;instead&#x27;, do effect X twice, change the target of X to Y, etc. If you diligently implement everything as &quot;state -&gt; [command]&quot; , then meta stuff behaves a lot better, as does undo&#x2F;redo, logging, and debugging. Note that some might scoff at explicit command structs and write everything as simple closures, but then you get none of those benefits. While the linked example is from an OO language, I think it is more functional than the &quot;state -&gt; state&quot; style, because everything except the commands themselves just does computation to produce values instead of transforming a big state bag into another.<p>[0] <a href="http:&#x2F;&#x2F;gameprogrammingpatterns.com&#x2F;command.html" rel="nofollow">http:&#x2F;&#x2F;gameprogrammingpatterns.com&#x2F;command.html</a>')