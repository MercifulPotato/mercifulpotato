Item(by='mattmanser', descendants=None, kids=[25049385, 25048316, 25048329, 25048192, 25048211, 25052273, 25052035, 25051302, 25049500, 25051495, 25055242, 25056438, 25048566, 25048183, 25048373, 25048221, 25054516, 25051920, 25056413, 25055715, 25055226, 25048219, 25051417, 25048344], score=None, time=1605027380, title=None, item_type='comment', url=None, parent=25047409, text='So, on the plus side with the new .net, I recently made a .net core web app on Linux, and generally it&#x27;s been pretty easy.<p>I&#x27;m also impressed at just how fast asp.net core is compared to asp.net, the time it takes to open your site in debug mode has dropped dramatically, from what used to be 1&#x2F;2 minute in asp.net to a few seconds in .net core.<p>On the bad side? Mainly the asp.net core team and their push for Dependency Injection and the really poor async code has got to be the most frustrating thing about the whole thing.<p>My biggest bugbear is the way you access your config, which is an absolute and utter kafka-esque mess. Because someone at MS was drinking the DI kool-aid you have to add a minimum of 5 lines of code to any class you want to access config values in, and you&#x27;re in for an even bigger nightmare if you want to separate business logic and web code into two projects (which is a pretty common design). I&#x27;ve given up with the config DI and just assign them all to static variables. I still don&#x27;t get why you&#x27;d even want your <i>config</i> injected!<p>The entire authentication uses async code too, which still has all the normal problems of being hard to debug, silently failing if you invoke it wrong and completely overwhelming the callerstack with a bunch of redundant calls.<p>Huge disadvantages with absolutely zero performance gains for 95% of programmers.<p>Having been using express again recently, I&#x27;m seriously thinking of ditching the asp.net core stack despite my general preference for statically typed languages. C# is great, but the asp.net core are so obsessed with shoving DI and async down your throat and making you write really unpleasant, boilerplate code. Feels like you&#x27;re back in 1990 with all the FactoryFactoryFactories.')