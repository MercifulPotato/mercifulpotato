Item(by='josteink', descendants=None, kids=[24786626], score=None, time=1602752528, title=None, item_type='comment', url=None, parent=24786061, text='&gt; not thinking about files<p>And I hate app-data not being files, not being portable. My data may be stuck inside a SaaS and only accessible through a closed-source app, and I have nothing to say about it.<p>&gt; Real sandboxing, with a nice permission layer<p>Sandboxing <i>apps</i> is a good thing. Depending on your use-case, Snap&#x2F;Flatpak or containers kinda solve this, but they are not the default way of running apps for now.<p>What mobile does wrong here though, is that it also sandboxes the <i>user</i>, not giving the user full access to his device, nor letting him let his apps get that access either.<p>This is user-hostile, on all current major mobile-platforms.<p>&gt; Extremely easy sharing of data between apps<p>I would rephrase this as barely functional sharing, for only the limited subset of data the application has decided to implement sharing for, and only in ways the application-developers have considered inter-app sharing.<p>On a desktop, I as the user, have the power to decide how I want to share data and invent new ways data can be shared and utilized.<p>&gt; URIs that go deep into other apps<p>While that is certainly a neat feature, it&#x27;s an app-centric feature. How do you know which kind of apps I have installed? How do you know which of those apps within that nich√© I have installed?<p>And if you&#x27;re not going to make it app-centric, you have to make it file&#x2F;data-centric anyway... Which leaves us Android. Android does this better than iOS by having an <i>intent-system</i> which lets you register ability to handle both files, urls and subsets of those, and other apps can query for which apps supports which file&#x2F;url-intents. So basically just a minor addition to the system we already have had on all desktop OSes for decades now.<p>And again: that&#x27;s a system which already works really well when files are first-class concepts which everything else builds on.<p>So it&#x27;s all back to files. If you want to empower the user, you <i>must</i> have files.')