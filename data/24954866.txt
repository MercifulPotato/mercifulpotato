Item(by='mgkimsal', descendants=None, kids=None, score=None, time=1604175540, title=None, item_type='comment', url=None, parent=24952408, text='I&#x27;d done an order taking&#x2F;processing extranet system 20 years ago, in PHP, at we did around $1b&#x2F;year.  No one was doing that amount at that time (well, info wasn&#x27;t available anyway if they were).  This was all PHP.  PHP4 to be precise.  Had done an earlier iteration in classic ASP, but ended up needing more servers to accommodate growth.  Moving to PHP, we were able to reduce the server count.<p>Now... this was naive ASP - all the session state was kept in memory.  There probably would have been a way to <i>not</i> do that, but no one where I worked knew how to do that (or even thought in those terms - it was just &quot;set a sticky bit on the load balancer!&quot;.<p>The PHP code was <i>slower</i> than the ASP, but because the session state all went to disk, the memory usage never got too high.  We still ended up using the sticky bit on the load balancer, but there was far less concurrent memory usage (IIRC servers had either 256m or 512m).  We could serve more - slightly more slowly - via PHP.<p>The upside was that it was a known user-based - contractor&#x2F;dealers buying from the company - so we didn&#x27;t have to deal with &quot;well, we might get 40,000 browsing visitors tomorrow because of a TV ad&quot;.  The user base didn&#x27;t fluctuate wildly, so it was easier to manage against.<p>By comparison, in the same company, another team of people were working on a Java web app.  It would often take them 15-20 minutes to recompile&#x2F;redeploy something to a test server to try out an idea to get feedback on something, whereas with the PHP, I could put code on a test server for feedback in a few seconds.  (could usually do that with the ASP too).  Yes, no doubt, the Java people were &quot;doing something wrong&quot; and someone can say they&#x27;d have known how to do it &quot;right&quot; in the year 2000, but... it was what it was.')