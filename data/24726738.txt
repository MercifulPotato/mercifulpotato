Item(by='deanCommie', descendants=None, kids=[24727047, 24727079, 24726848], score=None, time=1602216668, title=None, item_type='comment', url=None, parent=24726461, text='This is going to be controversial and slightly classist, but...<p>There is work that is utility work and there is work that isn&#x27;t.<p>I don&#x27;t mean skilled or unskilled. A common dunk on the distinction between the two is something like &quot;I&#x27;d love to see the CEO of &lt;so and so&gt; try a day on the line of &lt;so and so&gt; and see if they still want to call it unskilled labour.&quot;<p>No, where I differentiate is jobs where ANYONE can learn the skills, and others where NOT anyone can.  These are by the way not purely academic skills, they are some where the differences are physical, though these days there is fewer and fewer of those as humanity got super good at making tools.<p>Basically I&#x27;m saying there are jobs where maybe the CEO wouldn&#x27;t be able to figure it out on day 1, but with standard training, they would be able to do the job.  And with EXPERIENCE they would be able to get better and better.<p>These are the jobs where salaries should be set by a union, and where your salaries rise directly correlated with experience.<p>Now let&#x27;s get to the classist and controversial part. I don&#x27;t believe software engineering is like that. Yes, many more people COULD if given the opportunity, and education, and investment. But not EVERYONE can.  And not everyone learns at the same pace.<p>I&#x27;ve been in the industry for 15 years since I graduated with my undergrad, and I&#x27;ve been junior, and I&#x27;ve been senior, and I&#x27;ve seen new grads come in and grow, and thrive, and become promoted to senior. And I&#x27;ve seen juniors come in, and struggle, and tread water, and be managed out. For the exact same job.<p>I want to be able to promote quickly people who succeed and show an aptitude, and maturity.  I want to encourage and incentivize those people to keep reaching for the stars.<p>I am 100% against unions for software development.')