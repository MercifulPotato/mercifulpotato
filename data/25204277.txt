Item(by='HeyZuess', descendants=None, kids=None, score=None, time=1606260709, title=None, item_type='comment', url=None, parent=25202853, text='&gt; I actually think RoR is an utter garbage fire the second you have a team of 3+.<p>This isn&#x27;t a a Rails issue, I have worked on teams with 30+ members with no problems. It is an organizational problem.<p>&gt; The second you need to touch a config file, suddenly you have to know exactly what version of rails you&#x27;re running (because they change config names CONSTANTLY), and what the asset pipeline was like in that version, and so and such forth.<p>I cannot remember the last time I needed to touch a Rails configuration truthfully. I prefer not to touch any configuration. This is a subjective opinion, but less I need to configure the app over time the more stable the configuration is. The configurations don&#x27;t change that much, you expect them to change during major version releases. I don&#x27;t know how often you change Rails versions.<p>&gt; Of course, googling what you want links you to docs for Rails from 2 years ago, which no longer works.<p>Ok this one I am going to strongly disagree with. Rails has some really good documentation, and solutions are very easy to find for a lot of problems.<p>&gt; Also, the older I get, the more I want type systems. I should try giving Sorbet a spin (ruby, but with types), Because RoR on a large team is a nightmare. Types would help a lot.<p>But Ruby is not a typed system out of the box, it is supposed to be duck typed. Now while I might have a leaning towards typed systems also myself, it is not a limitation of the language and layering types on top of duck typing erodes some of the flexibility.')