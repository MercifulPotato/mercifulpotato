Item(by='flowerlad', descendants=None, kids=None, score=None, time=1604274618, title=None, item_type='comment', url=None, parent=24963536, text='Pure functional languages such as Haskell have some facilities to do things that are not 100% pure, such as I&#x2F;O. Similarly, OCaml has effects, but functional programmers minimize their use of such impure facilities.<p>Effects in OCaml are impure: <i>&quot;However, the effect system also allows for tracking side-effects more generally. It distinguishes impure functions, which perform side-effects, from pure functions, which do not.&quot;</i> See: <a href="https:&#x2F;&#x2F;www.janestreet.com&#x2F;tech-talks&#x2F;effective-programming&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.janestreet.com&#x2F;tech-talks&#x2F;effective-programming&#x2F;</a><p>In Haskell impure functions are fenced off from pure functions. So for example, pure functions are not allowed to call impure ones.<p>If nearly all of the functions in your app are impure (and use React hooks) then you are definitely not doing functional programming.')