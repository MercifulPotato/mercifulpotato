Item(by='throwaway894345', descendants=None, kids=[25808033], score=None, time=1610855264, title=None, item_type='comment', url=None, parent=25806768, text='I guess <i>maybe</i> this would be useful for a language like C or old-school C++ where you had to imperatively build your maps and lists and allocate memory and explicitly type your variables and so on, but Go memory allocation and typing are implicit and maps and lists have a nice literal syntax so I don&#x27;t see any value in a DSL.<p>As for testing, you can already swap out real objects for test objects--that&#x27;s a property that interfaces provide; I don&#x27;t see how a DI framework (e.g, the DSL) helps you here.<p>I will say that when I&#x27;ve had to operate a Java application, trying to do even the smallest bit of debugging had me digging through all sorts of layers of XML nonsense (Spring, various Spring plugins, and who knows what else) to figure out where the logs were being written. Note that my objection isn&#x27;t &quot;XML&quot; (versus some other format&#x2F;DSL), but rather the pointless indirection. I&#x27;m sure someone proficient in Java would have no problem, but now your sysadmins need to be Java developers in addition to system administrators (maybe not such a big deal if your shop is already a Java shop and you have people you can ask, but for people operating third party software this is a real pain point). And again, all of that tedium for no apparent value.')