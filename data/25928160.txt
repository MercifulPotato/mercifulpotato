Item(by='sbarre', descendants=None, kids=None, score=None, time=1611755232, title=None, item_type='comment', url=None, parent=25927765, text='It depends on what your goals are.<p>If you are looking to develop for iOS (or any single environment) only, then all the points you make are great, and you should absolutely stick to native development for that environment.<p>However, if you are looking to target multiple platforms (and by that I don&#x27;t just mean mobile, but potentially also web, desktop, and more), then some of these frameworks start looking a lot more interesting.<p>React Native has split the UI from the rendering, and as such now has render targets for much more than just iOS and Android.<p>And while you can&#x27;t share 100% of your code, you can develop a shared component library that can all feed into various native shells as needed.  That shell can handle your environment-specific bindings and integrations, while your shared components provide your application&#x27;s UI and interactions.<p>Of course it all depends on what you are building, and not all apps would be a fit for this approach.')