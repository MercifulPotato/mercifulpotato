Item(by='eloff', descendants=None, kids=[25292992], score=None, time=1607010465, title=None, item_type='comment', url=None, parent=25289690, text='That&#x27;s surprising to me since Postgres does less efficient writes compared to MySQL in order to optimize for read queries[1] - a sensible tradeoff since most of the time reads are more common than writes in OLTP workloads. TimescaleDB essentially solves this problem for the specific case of time-series inserts.<p><pre><code>  [In Postgres] if we have a table with a dozen indexes defined on it, an update to a field that is only covered by a single index must be propagated into all 12 indexes to reflect the ctid for the new row.[1]\n</code></pre>\n[1] <a href="https:&#x2F;&#x2F;eng.uber.com&#x2F;postgres-to-mysql-migration&#x2F;" rel="nofollow">https:&#x2F;&#x2F;eng.uber.com&#x2F;postgres-to-mysql-migration&#x2F;</a>')