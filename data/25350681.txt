Item(by='bluefox', descendants=None, kids=None, score=None, time=1607458252, title=None, item_type='comment', url=None, parent=25349070, text='I guess our experience with regards to CL differs.  A lot.  The spec is lie?  Implementations are all the same?  To me it sounds like you&#x27;re talking about a different language.<p>I can take source code from the eighties and nineties (say from CMU AI archive) and, in all likelihood, with a few modifications make it respect the ANSI specification and have it run in 2020 on pretty much any CL implementation.  This code is several times older than Clojure.  I have a lot of code from 15 years ago to this day that works flawlessly on pretty much any CL implementation.  Granted I also have some implementation-specific code and code that would suffer in efficiency and that would hit implementation limits.<p>I use mainly two CL implementations (SBCL, ECL) that serve purposes that are quite different.  I know applications where CLISP was chosen because of its size and mostly-portable bytecode.  People who care about Appleware tend to like CCL for its support on that platform.  Some companies prefer the more enterprisey LispWorks&#x2F;Allegro.  These implementations are all meaningfully different.  They all strive to conform to the specification.  CLISP and Allegro have nonconforming modes as well, which not many people care about.')