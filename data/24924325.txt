Item(by='kentonv', descendants=None, kids=None, score=None, time=1603920444, title=None, item_type='comment', url=None, parent=24922503, text='Again, I&#x27;m not arguing that operator* should check for nullness, I&#x27;m arguing that it shouldn&#x27;t exist.<p>With `kj::Maybe` and `KJ_IF_MAYBE`, using the syntax I demonstrated above, you check for nullness once and as a result of the check you get a direct pointer to the underlying value (if it is non-null), which you then use for subsequent access, so you don&#x27;t end up repeating the check. So, you get the best of both worlds.<p>&gt; it&#x27;s likely ~30 loc to wrap std::optional<p>It&#x27;s even easier to <i>replace</i> std::optional rather than wrap it. The value of std::optional is that it&#x27;s a standard that one would hope would be used across libraries. But because it&#x27;s flawed, people like me end up writing their own instead.')