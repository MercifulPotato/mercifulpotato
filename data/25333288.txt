Item(by='MaxBarraclough', descendants=None, kids=[25334483], score=None, time=1607356196, title=None, item_type='comment', url=None, parent=25331625, text='Safety doesn&#x27;t just come from language features, it also comes from the language disallowing dangerous actions. Rust&#x27;s unsafe mode opens the door to undefined behaviour, of the sort that plagues so many C&#x2F;C++ codebases (buffer overflows etc). A program written in safe Rust offers far better assurances than a program making heavy use of unsafe Rust: safe Rust is unable to result in undefined behaviour. (Bugs in the compiler and standard library may still cause mischief, but that&#x27;s another matter, the intent of the safe Rust subset is to be guaranteed free from UB.)<p>You may be right that a program written in 100% unsafe Rust might still be less prone to undefined behaviour than a program written in C, but that&#x27;s not my point. Excessive use of unsafe features undermines the considerable safety advantages that Rust offers over C, and it&#x27;s regrettable when this is disregarded.')