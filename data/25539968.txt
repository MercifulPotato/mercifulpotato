Item(by='rufus_foreman', descendants=None, kids=None, score=None, time=1608938969, title=None, item_type='comment', url=None, parent=25535844, text='SVN?<p>A decade ago, something like that, a project I was on switched from SVN to Git. I don&#x27;t know why, I don&#x27;t know what problem was being solved.<p>&quot;Git isn&#x27;t that hard once you understand the internal model&quot; one of the devs said.<p>I didn&#x27;t need to understand the internal model of Subversion, we just checked stuff out and checked it back in. Within a month of adopting Git they had managed to lose a week&#x27;s work. I guess they didn&#x27;t understand the internal model. I kept my mouth shut.<p>For most corporate development teams, there is no problem that Git solves. Corporate development teams don&#x27;t do distributed development. In a decade of using Git, I have never told another developer to connect to my local Git repo to get a piece of code. I would create a feature branch on the very non-distributed Github or GitLab server and they would go the single source of truth to get that piece of code. Like you would have done with Subversion. Only without the complexity.<p>In the Subversion days, non-technical people would use the same repo as technical people. Like tech pubs. With Git, they can&#x27;t.<p>As I said, I have no idea what problem Git solves for the typical corporate software development organization. But I admit, it is complicated and hard to use, so in the end, as a developer I make more money. The more complicated it is to make software, the more money I make, and that&#x27;s what&#x27;s important.<p>Rock on, Git.')