Item(by='TheOtherHobbes', descendants=None, kids=[25612196, 25612035, 25617134], score=None, time=1609583303, title=None, item_type='comment', url=None, parent=25608241, text='Tactile pocket computing - iPhone, etc - was a <i>huge</i> paradigm shift for users. The UX as a whole is completely different to the desktop experience.<p>In terms of software itself - it&#x27;s not about typing code or about text UIs vs graphic UIs.<p>It&#x27;s about programming being a fiddly and tedious pastime with explicit handling of every possible scenario, because the machine has no contextual background knowledge and isn&#x27;t intelligent enough to interpolate or intuit the required details for itself.<p>So you get modern software which is basically just a warehouse full of virtual forms glued together with if&#x2F;then&#x2F;else - or simple pattern matching if you&#x27;re really lucky - managed by relatively simple automation pipelines. Plus a UI&#x2F;API glued on top.<p>And underneath that is TinkerLand, full of lovely text-langs which are different-but-increasingly-similar and command line environments which are like little puzzles which are not really hard - in the sense of Physics PhD hard - but are hard enough to give people who enjoy tinkering a sense of satisfaction when they (more or less) solve one.<p>You can do a lot with this - like ordering goods and services, selling advertising, collecting creepy amounts of data about users, and keeping people entertained.<p>But it&#x27;s basically just automated virtual bureaucracy. It has no independent goal seeking skills, it doesn&#x27;t improvise, invent, or adapt, and it&#x27;s ridiculously brittle and not particularly secure.<p>Visual programming won&#x27;t change this. Nor will ML (although it may contribute.) It needs a complete change of metaphor, and there doesn&#x27;t seem to be much evidence of the research required to make that happen.')