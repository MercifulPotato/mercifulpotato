Item(by='lmm', descendants=None, kids=None, score=None, time=1611807095, title=None, item_type='comment', url=None, parent=25937092, text='&gt; But, if you go back and read the seminal papers, it&#x27;s clear that the common thread is encapsulation, every bit as much as referential transparency is the core idea that unites all the seminal work in functional programming. The idea was that programs would be decomposed into modules that were empowered to make their own decisions about what code to execute in response to some instruction. And that this was supposed to liberate the programmer from needing to micro-manage a bunch of state manipulation. Not by eliminating state, as is the ideal in FP, but by delegating the responsibility to manage it.<p>I agree with that assessment, but I also think the problems with OO are inherent to that paradigm, and it&#x27;s time to acknowledge that the paradigm is bad and has failed.')