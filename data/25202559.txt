Item(by='proverbialbunny', descendants=None, kids=None, score=None, time=1606249059, title=None, item_type='comment', url=None, parent=25185619, text='&gt;How to effectively communicate the progress to non-engineer team members?<p>The TL;DR is use the confusion matrix output from the ML library you&#x27;re using to demonstrate model accuracy, false positives, false negatives, and so on.<p>The long answer is much more complex:  Are you doing MLE work?  DE work?  DS work?  Why are you using ML?  Is it required for your current project?  You haven&#x27;t stated what kind of work you&#x27;re doing.  How you present has to do with what kind of work you&#x27;re doing, so a clear answer can not be given, only a generic one.<p>A data scientist, for example, typically has to sit in tons of meetings hearing the business challenges over and over again, finding a way to solve the business problems, and then building a model to demonstrate feasibility and then proof of concept.  They then presentation this proof of concept to sales, marketing, management, the board, or whoever else it pertains to as a way to solve their problems in an automated fashion with such-en-such percent of accuracy using a confusion matrix.  The business then ruminates on this and then often comes up with more requests or modifications to the initial model, or a request to improve accuracy, or they&#x27;re satisfied.  When the model is satisfactory it gets handed off to a software engineer (machine learning engineer, data engineer, infrastructure engineer) who then takes their ideals and developts it onto a server and gets it connected up so that the customers end up getting that service.  The engineers built it &#x2F; put it all together in the end.  The data scientist researched it.<p>Your situation sounds like you were thrown into a data scientist role and are approaching it like a software engineer, which is not an ideal way to go about things.  I could be wrong.  It could be the other way where you shouldn&#x27;t be using ML to solve the problem, or you&#x27;re productionizing other people&#x27;s models.  If you&#x27;re truly doing engineer work, then you can show that customers are getting the service you&#x27;re providing, which is a different kind of presentation, typically just updating management, not having a large company wide thing.  Maybe you&#x27;re expected to be management?  That&#x27;s a different story too.')