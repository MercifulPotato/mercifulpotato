Item(by='tzs', descendants=None, kids=None, score=None, time=1607960147, title=None, item_type='comment', url=None, parent=25417210, text='I used to often get in 8+ hours of coding a day, but that was 30-35 years ago. I don&#x27;t know why I don&#x27;t now, because so many things that might affect this are different in my work now.<p>1. I was of course 30-35 years younger back then.<p>2. Online for me then was via a dial-up modem, generally either to services like CompuServe or to an ISP that provided Usenet and email. The web was at most just barely getting started and if I even knew it existed (which I probably didn&#x27;t) I don&#x27;t think there were any browsers yet for Mac or PC.<p>Now there is an always on internet connection while working, making it much easier to get distracted.<p>3. Cell phones were not yet common.<p>4. Projects didn&#x27;t involve nearly as many different things. Most of what I coded then fell into one of these bins: disk drivers, firmware for SCSI host adapters, BIOS code, little real time operating systems for embedded systems, the SDK and reference drivers for NCR&#x27;s SCSI chips, and some network stuff.<p>Note that for most of these, you just needed some datasheets, some specs, maybe a book or two, compiler&#x2F;linker documentation, and you were good to go. You could wrap your head around all the technology involved in the project. Actually, I could do more than just wrap my head around it all--I could become an expert in all technology related to the project.<p>Now, projects usually involve a bunch of other systems and use many third party libraries or services, and it is much harder to keep this all in my head. And those libraries and services are being actively developed, so you have to keep up with that. It is much less likely that I&#x27;ll be an expert on everything related to the project.<p>5. Back then I knew exactly what I had to do when I started coding. When we were going to bid on a contract, I&#x27;d write a technical spec proposing exactly what we were going to deliver. Some of these technical specs were 100 pages (maybe even 200 on occasion).<p>If we got the contract, that spec is what we implemented.<p>Nowadays, design and coding are more iterative. Someone gets a general idea of what they want, and needs to see a version of that implemented to see if it is really what they want. They see that it isn&#x27;t quite what they want, so it gets changed. It&#x27;s all more vague and hand wavy.')