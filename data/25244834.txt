Item(by='pjmlp', descendants=None, kids=[25246944, 25244952], score=None, time=1606653762, title=None, item_type='comment', url=None, parent=25244517, text='Depends on how you look at it, I certainly feel like using Delphi when doing .NET and Java development, which are also the development stacks that took the spotlight away from Delphi (alongside Borland&#x27;s mismanagement).<p>What they miss in regard to Delphi is proper AOT to native code capabilities, something that they should have supported (from my point of view) since version 1.0. Java had it via commercial JDKs (which only enterprises cared about), .NET via NGEN, mono aot and some research stuff like CosmOS, Singularity or Midori.<p>However now 20 years later they are finally realising that must be an option, but that is mostly thanks to the competion from Go, Rust, Swift and friends than anything else.<p>Interesting that you mention EOF, it eventually became WebObjects (in Java) and it was due to NeXT &#x2F; Sun collaboration that J2EE was born. Many Java bashers don&#x27;t realise how much influence Objective-C had in the Java ecosystem, in language features, language runtime, and yes J2EE.<p>Regarding things being washed out of history, check out on Burroughs, VMS, Solo Pascal, Mesa, Multics, PL.8 for examples of systems programming before C was at all relevant outside Bell Labs walls, the Xerox PARS Workstations namely Interlisp-D, Mesa, Mesa&#x2F;Cedar, Smalltalk or Wirths linage of Modula-2 and Oberon derived work based on Xerox PARC work.<p>Unfortunely computer history isn&#x27;t something that most computing degrees spend time on.')