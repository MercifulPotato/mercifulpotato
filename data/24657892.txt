Item(by='brundolf', descendants=None, kids=None, score=None, time=1601602207, title=None, item_type='comment', url=None, parent=24657830, text='&gt; I have mostly found it to be a footgun and inspiration to write spaghetti. While it may have good intentions, it doesn&#x27;t matter if it lets less experienced developers do absurd things that I now have to refactor.<p>I admit the only team I&#x27;ve used it on consisted of three people, and there are certainly really gnarly things you can do with it if you go out of the way to, so I don&#x27;t know how it scales to larger teams. Though I would argue that it encourages best practices by making those the paths of least resistance. I would also say that - unlike, say, RxJS - its mental model is very simple and straightforward, and should be quite accessible to inexperienced developers. But yes, it doesn&#x27;t do a lot to <i>stop</i> you from shooting yourself in the foot.<p>&gt; I don&#x27;t think it really fits well into the React model<p>I disagree with this part completely. It doesn&#x27;t fit well with the Redux&#x2F;hooks model, but that&#x27;s because it replaces it. In my opinion it lets React focus on what it does best: updating the DOM to match a new virtual DOM, and takes everything else out of React&#x27;s hands, which to me is a huge win. I am not a believer in the &quot;every state change replaces the entire root state structure using a composition of pure functions&quot; model; I think it&#x27;s contrived, clunky, and hard to follow. I believe that state should be minimal, but should be treated as what it is. MobX gives you all the tools you need to enshrine state <i>as state</i>, without introducing any duplication&#x2F;synchronization complications.')