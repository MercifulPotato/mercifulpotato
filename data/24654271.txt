Item(by='meekrohprocess', descendants=None, kids=None, score=None, time=1601576008, title=None, item_type='comment', url=None, parent=24649434, text='They have a much shallower learning curve and a large moat of people who have used them for decades, simple as that. These days, AVR chips are a stepping stone to learning embedded development.<p>They&#x27;re fine for very cash-strapped beginners, but it would behoove new developers to leave them behind quickly. They are more expensive and less efficient than modern options, and you won&#x27;t find many well-paying jobs asking for AVR&#x2F;Arduino experience.<p>STM32 chips are a much better option, IMO, especially for beginners. They come in sizes ranging from &lt;$1 Cortex-M0 chips up to dual-core Cortex-A&#x2F;Cortex-M processors, and they use the same sorts of peripherals across all of those product lines. So you can start small, and incrementally learn about more complex parts and topics.<p>And if you really need a breadboard-friendly chip, an MSP430 is probably a better option. It&#x27;s a 16-bit MCU focused on power efficiency, and it has GCC&#x2F;Arduino (&#x27;Energia&#x27;) support. Some of them also have non-volatile FRAM memory.')