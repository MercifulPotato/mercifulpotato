Item(by='anarazel', descendants=None, kids=[24904897, 24906573, 24906925], score=None, time=1603776897, title=None, item_type='comment', url=None, parent=24904644, text='&gt; I do not understand why people aren&#x27;t clamouring against postgres&#x27;s connection model.<p>There are people wanting to change that - including me, the author of the blog post. I explained in an earlier blog post ([1]) why I chose to work on making snapshots more scalable at this time:<p>&gt; Lastly, there is the aspect of wanting to handle many tens of thousands of connections, likely by entirely switching the connection model. As outlined, that is a huge project &#x2F; fundamental paradigm shift. That doesn’t mean it should not be tackled, obviously.<p>&gt; Addressing the snapshot scalability issue first thus seems worthwhile, promising significant benefits on its own.<p>&gt; But there’s also a more fundamental reason for tackling snapshot scalability first: While e.g. addressing some memory usage issues at the same time, as switching the connection model would not at all address the snapshot issue. We would obviously still need to provide isolation between the connections, even if a connection wouldn’t have a dedicated process anymore.<p>&gt; However this means that even if your server can theoretically handle 5000 concurrent reads you will never get there because opening 5000 connections isn&#x27;t practical. You&#x27;ll likely hit a memory limit.<p>It&#x27;s quite possible to have 5000 connections, even leaving poolers aside. When using huge_pages=on, a connection has an overhead of &lt; 2MiB ([2]). Obviously 10GiB isn&#x27;t peanuts, but it&#x27;s also not a crazy amount.<p>&gt; Why is this generally accepted as ok?<p>Postgres is an open source project. It&#x27;s useful in a lot of cases. It&#x27;s not in some others - partially due to non-fundamental limitations. There&#x27;s a fairly limited set of developers - we can only work on so many things at a time...<p>&gt; Decoupling concurrency from connections seems possible via pipelining commands over a single connection.<p>Could you expand on what you mean here?<p>&gt; Is it just too late for a project as mature as Postgres?<p>No. It&#x27;s entirely doable to decouple processes and connections. It however definitely is a large project, with some non-trivial prerequisites.<p>[1] <a href="https:&#x2F;&#x2F;techcommunity.microsoft.com&#x2F;t5&#x2F;azure-database-for-postgresql&#x2F;analyzing-the-limits-of-connection-scalability-in-postgres&#x2F;ba-p&#x2F;1757266" rel="nofollow">https:&#x2F;&#x2F;techcommunity.microsoft.com&#x2F;t5&#x2F;azure-database-for-po...</a><p>[2] <a href="https:&#x2F;&#x2F;blog.anarazel.de&#x2F;2020&#x2F;10&#x2F;07&#x2F;measuring-the-memory-overhead-of-a-postgres-connection&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.anarazel.de&#x2F;2020&#x2F;10&#x2F;07&#x2F;measuring-the-memory-ove...</a><p>EDIT: formatting woes')