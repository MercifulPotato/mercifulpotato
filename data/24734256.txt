Item(by='abeppu', descendants=None, kids=[24734579, 24735429, 24735646], score=None, time=1602276299, title=None, item_type='comment', url=None, parent=24732973, text='It&#x27;s not specifically stated, but the assumption seems to be that we should sometimes make our code look closer to how we display math in papers or on a whiteboard.<p>I&#x27;m legitimately on the fence about this.<p>I recently re-watched Guy Steele&#x27;s 2017 PPOPP on &quot;Computer Science Metanotation&quot;, and aside from wanting to make CSM an unambiguous formal system, he specifically says at one point that he wants tools to support CSM as it appears (i.e. with stacked overbars, gentzen-style inference rules, etc) because &quot;anything else is a translation&quot;.<p>And partly I get that. There is real cognitive work if you have to constantly translate back and forth between two representations of the &quot;same&quot; thing.<p>But should we favor readability or ease of interaction &#x2F; modification? Keyboards give you a way to insert a sequence of characters. Notations that are not graphically linear (e.g. a symbol that has both a subscript and a superscript) create an ambiguity about how you input them. &quot;Modes&quot; where we display something different than what is typed can create ambiguity about how to edit them.<p>And if a tool only covers 90% of the notational convention you care about, it quickly gets frustrating as you repeatedly bump up against that boundary. I experience this in emacs org mode with &quot;symbol&quot; support.')