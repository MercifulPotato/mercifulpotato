Item(by='didibus', descendants=None, kids=[25224580], score=None, time=1606424956, title=None, item_type='comment', url=None, parent=25223455, text='Not to be too nit-picky, but it doesn&#x27;t actually have a for-loop. The for you linked to is not a for-loop but a for-each loop (simply called for). Well it is actually more restricting even then a for-each loop, as it maps over elements and can only return a collection of the same length as it iterates over.<p>That said, you&#x27;re correct it does have a pseudo while-loop. Though it will still force you to use a managed mutable container along with it, which is still safer than without. Also, it&#x27;s a very ackward while-loop, as it doesn&#x27;t support continue or break, that&#x27;s because in reality it isn&#x27;t a real while-loop, it&#x27;s a fake while-loop built on top of a recursive loop.<p>And for all other readers, it&#x27;s true, Clojure doesn&#x27;t disallow the use of less abstract less safe construct, it simply makes them more ackward to use and not the default and obvious choice. The reason for this is also something the article didn&#x27;t bring up, but higher level safer abstractions often come with a performance cost. This is why most languages have escape hatches for whatever safety mechanism they provide, and why Rust lang loves to talk about &quot;zero-cost&quot; abstractions.')