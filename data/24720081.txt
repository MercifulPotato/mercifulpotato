Item(by='GuB-42', descendants=None, kids=[24722888], score=None, time=1602171231, title=None, item_type='comment', url=None, parent=24717002, text='&gt; OpenGL looks like it has fallen victim to design-by-committee<p>It totally was when OpenGL was controlled by the ARB. ARB stands for &quot;Architecture Review Board&quot;, even the name screamed &quot;designed by committee&quot;. In the end, you couldn&#x27;t do much without proprietary extensions, except using Direct3D...<p>After transfer the Khronos Group, it went better. Still a committee, but at least, the spec is not completely out of touch with modern hardware.<p>I don&#x27;t know about Metal but Vulkan is not a replacement for OpenGL. It is a low level API, made so that engines like Unreal or Unity can have a lot of control and keep overhead to a minimum. However, it is absolutely terrible for small projects. It takes several pages of code to draw your first triangle.<p>According to the article, it looks like Metal is somewhere between OpenGL and Vulkan: lower level than OpenGL and easier to use than Vulkan. It doesn&#x27;t look like Apple is doing crazy stuff with its hardware, but because they don&#x27;t need to be portable, they can provide a simpler API compared to Vulkan which need to support all kinds of hardware and platforms.<p>I am not against Metal, however, I hate Apple for deprecating OpenGL. You used to have 3 options<p>1- Use an engine, and let it deal with all the rendering API stuff.<p>2- If you have a smallish project and want to do your own engine, use OpenGL.<p>3- If you are an engine developer, you make it so that it can support the best API for the system you are targeting, it can be Vulkan, Metal, DirectX 12,... and keep OpenGL for compatibility.<p>Now, option 1 is not portable anymore, and for option 3, you don&#x27;t have a quasi-universal fallback anymore. MoltenGL&#x2F;MoltenVK may be an option, but that&#x27;s not ideal.')