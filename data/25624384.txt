Item(by='hakfoo', descendants=None, kids=None, score=None, time=1609702224, title=None, item_type='comment', url=None, parent=25623300, text='I can see the software development analogies all over the place here.<p>The founders basically knew they were delivering a MVP with some expectation it won&#x27;t be perfect.  Hence the large number of early Constitutional amendments.  Jefferson was famously keen on having the whole thing tossed out every 25 years.  In a way, he anticipated the gradual loss of product-market fit long before it was a term.<p>At some point, the US government became the entrenched legacy system.  We can look at other countries and see they have modern shiny features like ranked-choice voting and being able to respond to crises in an integrated manner, but everyone is too afraid to break the existing system.<p>I wonder if we could apply what we know from engineering and software development lifecycles to political process.  I could imagine reorganizing the US as an EU style relationship of three or four sub-nations, who have a permanent movement&#x2F;trade&#x2F;currency&#x2F;foreign policy union, but can each run on different constitutions and nuts-and-bolts government structures.  Instead of the protective mechanism of making constitutional change expensive and difficult, we can use the sub-nations as test branches, making changes liberally, with the understanding that the successful changes will be propagated to the rest of the country.')