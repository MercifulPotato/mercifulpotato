Item(by='kzhukov', descendants=None, kids=[25239364, 25242278], score=None, time=1606587573, title=None, item_type='comment', url=None, parent=25237564, text='There are fields such as automotive and aerospace where absence of Rust&#x27;s standard is a showstopper for using Rust. Those areas require that all tools that are being used to build software must be certified (ISO 26262 for automotive for example) to ensure that software is safe to use and doesn&#x27;t kill anybody. And nobody would do that for a language that adds new features every 6 weeks, because such certification is a long expensive process which you have repeat every time when the tool changes.<p>It&#x27;s not possible for open source project to do such certifications by themselves. In C&#x2F;C++ world there are companies that implement certified compilers. Usually, these are pretty shitty compilers that implement only previous standards like C++14.<p>And here is the problem for Rust. If there is no standard for the language and library, how such companies could implement an alternative compiler? Current Rust editions is not an option because they feel like a bottom line and don&#x27;t answer the question to what extent the compiler has to be implemented to be called &quot;compliant with Rust 2015&quot;.<p>And those fields aren&#x27;t small. Usually hundreds of million lines of C&#x2F;C++ power modern vehicle.<p>I find it&#x27;s pretty funny that language, which positions itself as safe replacement for C&#x2F;C++, can&#x27;t be used in safety critical applications.')