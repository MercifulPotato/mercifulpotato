Item(by='cmrdporcupine', descendants=None, kids=None, score=None, time=1605704197, title=None, item_type='comment', url=None, parent=25127726, text='I can&#x27;t speak for how things were at Mozilla, I have no idea. But separate teams working on &quot;rewrites&quot; of platforms that other teams have to maintain often leads to a demoralized environment, pointless duplicated work, and elongated schedules and failure to deliver on milestones.<p>I&#x27;ve seen it several times: Often after years of promises from &quot;the new hot&quot; team, with them cannibalizing resources and top talent but missing milestones and still having failed to deliver, the new beast is cancelled and the value of the &quot;old&quot; system is suddenly recognized.<p>There&#x27;s the classic Spolsky essay about this: <a href="https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2000&#x2F;04&#x2F;06&#x2F;things-you-should-never-do-part-i&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2000&#x2F;04&#x2F;06&#x2F;things-you-should-...</a><p>What&#x27;s better? Refactor the old thing as you go. Include the &quot;legacy&quot; team in the development team of the new thing. Even more so, make the &quot;new&quot; team work on the old thing as well. Rotate developers between the two, build a culture of respect.<p>Not saying that is what happened at Moz, but I&#x27;ve seen it play out so many times. And without a concrete commitment to be forced to deliver to actual customers projects like these can just go forever noodling around in perfection-land.')