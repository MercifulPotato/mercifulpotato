Item(by='runeks', descendants=None, kids=[24966800, 24966482], score=None, time=1604307879, title=None, item_type='comment', url=None, parent=24963821, text='It should be noted that the -- to use the terminology of the article -- <i>extrinsically</i> safe example module <i>Data.List.NonEmpty.Newtype</i> can be converted into an <i>intrinsically</i> safe one by changing the definition of the <i>NonEmpty</i> type from<p><pre><code>    newtype NonEmpty a = NonEmpty [a]\n</code></pre>\nto:<p><pre><code>    newtype NonEmpty a = NonEmpty (a, [a])\n</code></pre>\n(and changing the associated functions accordingly -- which can now be implemented without the use of <i>error</i>).<p><i>EDIT: Upon further thought, I&#x27;m not sure the above distinction makes sense. The implementation of e.g. Data.List.NonEmpty.Newtype.head would still involve the use of &quot;error&quot; through the use of Data.List.head:</i><p><pre><code>    head :: NonEmpty a -&gt; a\n    head (NonEmpty (x, []))  = x\n    head (NonEmpty (_, lst)) = Data.List.head lst</code></pre>')