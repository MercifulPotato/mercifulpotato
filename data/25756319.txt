Item(by='LukeShu', descendants=None, kids=None, score=None, time=1610498550, title=None, item_type='comment', url=None, parent=25755827, text='&quot;Configuration as code&quot; is a concept that really speaks to me.  It&#x27;s the ethos of Emacs (which I also use), and wmii does it as well.<p>&lt;tangent&gt;In fact, for a long time (now I&#x27;m not so sure) I even thought wmii did it better than Emacs: Instead of being tied to one language and one process, wmii exports everything as a filesystem, and you configure it by writing a program that inspects and modifies that filesystem.  Instead of being tied to operating on in-memory objects in Lisp, you&#x27;re operating on in-filesystem objects in the language of your choice.  (Today, I still think configuration by exporting a 9p filesystem is a powerful idea, but I&#x27;ve come to realize some of wmii&#x27;s assumptions are a little opinionated to where I&#x27;m less sure about &quot;better than Emacs&quot;).  I&#x27;d previously used StumpWM, which is configured in Common Lisp and is very similar to Emacs; I wasn&#x27;t very comfortable in Lisp (and am still not terribly comfortable in it, though much more than I was), and also at the time StumpWM wans&#x27;t packaged in the main Arch&#x2F;Parabola repos and wmii was.&lt;&#x2F;tangent&gt;<p>It&#x27;s my understanding that most wmii users use one of the standard&#x2F;example &quot;wmiirc&quot; scripts, and fuss with a few variables and make minor tweaks to customize it to their liking.  My wmiirc (while inspired by the stock one), is written entirely by me.  My code reads events from a socket on the filesystem, and then manipulates other files in the filesystem in response.  It&#x27;s like, even without taking the time to fully understand wmii&#x27;s codebase, I feel like I have a very robust understanding of exactly what it&#x27;s doing, as if I did understand the full codebase; because every action it takes is because of a line of code I wrote.  And related to that, I&#x27;m pretty sure no other human in the world has their window manager keybindings set like I do; how it&#x27;s configured is very personal and &quot;mine&quot;.<p>I don&#x27;t want a static configuration file, I want a dynamic configuration <i>program</i>.  As a stupid example of &quot;configuration as code&quot;: For most of the last 10 years I had a file of hex color codes to configure the color theme for wmii.  Usually what would happen is I&#x27;d switch my Emacs color theme, then some time later adjust the wmii theme to match.  A month or two ago, I got sick of that, and adjusted it to dynamically use `emacsclient --eval` to just query Emacs about the colors of its current theme, so I never have to deal with it again.')