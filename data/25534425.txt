Item(by='myself248', descendants=None, kids=[25534585], score=None, time=1608874041, title=None, item_type='comment', url=None, parent=25533098, text='The processor itself is the chip that has the ALU, since that&#x27;s what really does the processing. The registers may be on-die with the ALU, or may be in another chip for various reasons, but the ALU would have a bad time without registers, so they&#x27;re always used together.<p>Likewise there&#x27;s usually an interrupt controller of some sort, and a timer, and technically a processor can process without these, but it&#x27;s not terribly useful in the real world. But because an interrupt controller in particular tends to have quite a few I&#x2F;O pins, it&#x27;s often in a separate package from the ALU, and you can pick larger or smaller interrupt controllers (or chain several together) depending on the application. But these are typically designed as a &quot;family&quot;, and are always found together.<p>Atop all that, you generally need some ROM to boot the thing, and probably some glue logic (muxes and decoders) to perform memory mapping, etc. And then main system RAM itself. These are generic enough that they may or may not be considered part of the &quot;family&quot; with the processor.<p>Previously, the ALU would&#x27;ve been an entire board full of SSI chips, or a whole shelf of modules stuffed with individual discretes. And the register file would be another board, or a shelf thereof. And interrupts and glue would be all over the place, and peripherals getting into the mix... None of those boards was useful without the others, so they were always found together. Putting each of those functions onto a single chip instead of a whole board is what made it &quot;micro&quot;, even if it was always found with the rest of its family.<p>Today, we have a term &quot;microcontroller&quot;, for something that integrates the whole shebang: ALU, registers, RAM, ROM, interrupt controller, clock and timer, and I&#x2F;O peripherals, into a single chip. It does processing, so you could consider it a microprocessor, but it has basically the whole rest of everything in there too (everything but power, typically). The term &quot;microprocessor&quot; does not go as far.')