Item(by='adwn', descendants=None, kids=[24881543], score=None, time=1603565483, title=None, item_type='comment', url=None, parent=24881057, text='Maybe you mean <i>optional</i> totality? As in, a function can be declared to be total and the compiler tries to prove it?<p>A language cannot be Turing-complete if it completely forbids non-termination, there is no way around this. Or stated differently: If a language is Turing-complete, then there are programs that don&#x27;t terminate. If a Turing-complete language only has functions which are total (i.e., which always terminate), then it has another mechanism which allows non-termination, e.g. unbounded loops and mutable state.')