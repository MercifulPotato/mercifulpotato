Item(by='tijsvd', descendants=None, kids=[25524530, 25525706, 25526053, 25523238, 25524273, 25523200], score=None, time=1608762922, title=None, item_type='comment', url=None, parent=25522471, text='I had the same thing initially.<p>The upside of async over a simple event loop is, in my experience, when things become less simple, and you end up with hard-to-read little state machines all over the place.<p>With async, you can have your  event loop, but the state machines are handled by the compiler. Code is like threaded code. That can be very convenient.<p>Threads, obviously, accomplish the same thing, and arguably more easily. But threads have a performance problem when they must interact heavily. Cross-thread communication is expensive. Single-threaded async task interaction is very cheap, comparatively (I use tokio only in single-threaded mode, as an event loop replacement; its multi-threaded scheduler performs terribly on serious I&#x2F;O). I think the interaction problem is often more important than just the number of tasks.<p>As for the function coloring argument, I&#x27;ve started to see the async keyword as documentation. A non-async function is &quot;regular logic&quot;, it must complete without blocking. An async function is a state machine; as such it must be part of a larger state machine (the event loop), and it can go down into smaller sub-state machines (i.e. call other async functions). If you make that distinction explicit, it all makes a lot of sense.')