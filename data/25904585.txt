Item(by='jerf', descendants=None, kids=[25904880, 25904704], score=None, time=1611589970, title=None, item_type='comment', url=None, parent=25904425, text='Obviously, this depends on your definition of &quot;safe&quot;.<p>But there&#x27;s a fairly large set of &quot;safety&quot; issues that, in 2021, effectively <i>only</i> C and C++ have. Other than straight assembler, which by its nature will always be with us in some sense, there aren&#x27;t any other languages in common use anymore with similar memory safety issues. I&#x27;m not sure I can think of any other languages with &quot;pointer arithmetic&quot;. Almost nobody else is using NULL-terminated strings. And so on and so on.<p>(Please read that carefully. I&#x27;m not saying every language other than C and C++ are completely safe by any definition. I&#x27;m saying there are significant weaknesses that <i>only</i> C and C++ have nowadays. Threads unsafety, mutable state management issues, bad&#x2F;unhelpful type systems, plenty of common unsafety out there today, but C&#x2F;C++ have their own nearly-unique entries on that list.)<p>C++ nominally has solutions to any given weakness, but in practice they&#x27;re at the very least difficult to use in isolation, and very, very complicated to completely correctly use in combination with each other, to say nothing of code bases that inevitably end up having to deal with multiple solutions intersecting in the same code base because of two important libraries that have to do things differently or whatever.')