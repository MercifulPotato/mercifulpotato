Item(by='lifthrasiir', descendants=None, kids=[25861726], score=None, time=1611250769, title=None, item_type='comment', url=None, parent=25860308, text='There are numerous other well-known terms other than &quot;dependent typing&quot; that describe those features better, namely flow(-sensitive) typing. I believe the implementation of those type systems is considerably different from one of dependent type systems. I do have heard calling const generics as a &quot;dependent fragment&quot;, which is fitting given that it might be the largest feasible fragment of dependent types without actually implementing the full-featured type system. I however object to any mention of dependent typing to describe something less capable than const generics since it&#x27;s pretty misleading IMO.<p>You are absolutely correct that soundness is not the highest priority for dependently typed languages, as it had been true for other languages as well. Still I think most languages with a complex type system (subjective) do try to minimize the number of unsound corners as circumstances permit. I&#x27;m not an Idris user by myself but for example, the recent Idris 2 0.3.0 announcement [1] clearly considers unsoundness as something undesirable. As a result I have a general expectation for the type safety of those languages; I don&#x27;t have that for TypeScript however (and I don&#x27;t view that as a problem, just a difference).<p>[1] <a href="https:&#x2F;&#x2F;www.idris-lang.org&#x2F;idris-2-version-030-released.html" rel="nofollow">https:&#x2F;&#x2F;www.idris-lang.org&#x2F;idris-2-version-030-released.html</a> &quot;Removed multiplicity subtyping, as this is unsound and unfortunately causes more problems than it solves.&quot;')