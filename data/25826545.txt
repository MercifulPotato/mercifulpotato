Item(by='nightski', descendants=None, kids=[25826723, 25828695], score=None, time=1611003456, title=None, item_type='comment', url=None, parent=25826388, text='Are you implying software isn&#x27;t complex?  Or that imperative languages have low complexity?  Haskell takes the complexity of software and provides useful constructs to generalize and abstract some of these complexities.  Does it take time to learn? Absolutely.  Is it easy for newbies to understand? Definitely not, because it&#x27;s hard to appreciate their value until you have encountered these issues time and again in software. But it&#x27;s most definitely not complexity for complexity sake.  It can vastly simplify software in practice by restricting the domain in which you are working with a very powerful type system.  That is the entire point of it all after all.<p>I&#x27;m not sure which models you are talking about - but models such as Modern Portfolio Theory, or Black Scholes, while inherently flawed have been <i>massively</i> useful in the real world.  Claiming they aren&#x27;t useful is simply not true.  But again, you don&#x27;t mention any specific models so it&#x27;s hard to even know what you are talking about.')