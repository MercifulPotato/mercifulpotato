Item(by='klodolph', descendants=None, kids=None, score=None, time=1606613119, title=None, item_type='comment', url=None, parent=25241382, text='&gt; Make does support multiple outputs, though the syntax sucks.<p>No, it doesn’t. There’s NO syntax for multiple outputs. If you can show me what the syntax is and prove me wrong, I’d love to see it. At best, there are workarounds for the lack of multiple output support, with various tradeoffs.<p>&gt; Make is a programming language with a built-in dependency mechanism, and as such you can use it to build whatever you want...<p>Make is NOT a programming language. End of story. You can… kind of… build things with it, given that variables in Make can be used like functions, but it’s goddamn horrible and you shouldn’t do it because nobody will want to use it and nobody will maintain it.<p>At most, you can build something on top of Make, but you’re still facing the limitations of Make and working around them. If you are interested in building something <i>on top</i> of a low-level build system, you want Ninja instead of Make, because Ninja is good at that. Make isn’t.<p>Make is, at best, something you would want to use for a small C program where all the files are in one directory. Once you grow past that use case, my rule is that you shouldn&#x27;t be using Make any more, because there are just too many things that Make does wrong.<p>Make is successful because eh, it’s good enough for small things, you can suffer through the pain if you need to use it for big things, and it was the first tool to solve this problem. We have better tools now. We had better have better tools now! Make is in its fifth decade… if we didn’t improve on Make in that many years, that would be a damning indictment of the entire field.')