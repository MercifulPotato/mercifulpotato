Item(by='FullyFunctional', descendants=None, kids=[25485333, 25485864, 25486845, 25485671], score=None, time=1608454733, title=None, item_type='comment', url=None, parent=25484277, text='&gt; The frontend decoder hasn&#x27;t been a frequent bottleneck in Intel cores for a long time and they could scale it up more aggressively if they wanted.<p>This isn&#x27;t grounded in any facts.  Decoding the variable length x86 ISA costs you exponentially in decoding width, both power and area. You can scale it, but it will never be  efficient.  The way Intel and AMD combat this is by having a decoded uOP cache from which the issue width is typically twice that of the frontend decoder.  Arm64 has an inherent advantage here (RISC-V does not have quite the same advantage as RV64GC instructions are a mix of 16- and 32-bit).  Arm64 also is much more recent design than x86_64 that learned a lot from the past experience and isn&#x27;t bogged down by a lot of useless legacy.  This helps.<p>Arm64 is rather large for a RISC ISA, but it&#x27;s mostly pretty good (however IMO RISC-V&#x27;s lack of flags and implementation of conditional branches is superior).')