Item(by='funcDropShadow', descendants=None, kids=None, score=None, time=1604574974, title=None, item_type='comment', url=None, parent=24995841, text='Phil Wadler has several &quot;nice&quot; papers about linear logics, e.g. this one: <a href="http:&#x2F;&#x2F;homepages.inf.ed.ac.uk&#x2F;wadler&#x2F;papers&#x2F;lineartaste&#x2F;lineartaste-revised.pdf" rel="nofollow">http:&#x2F;&#x2F;homepages.inf.ed.ac.uk&#x2F;wadler&#x2F;papers&#x2F;lineartaste&#x2F;line...</a> \nBy nice I mean, nice if you are willing to deal papers about formal logic. Which excludes pretty much most people on this planet. But you asked.<p>To put it in my own words, and bear in mind that the last time I&#x27;ve worked with linear logic was 15 years ago. A linear logic restricts how often you are allowed to use a proposition in a derviation or proof tree.<p>The borrow checker is more like a linear type system. In linear type systems you restrict how often an identifier of a linear typed variable may be used. See, e.g. Phil Wadler&#x27;s paper &quot;Linear types can change the world&quot;, where he explores the idea to use linear types as an alternative to model the World(tm) in pure functional programming, i.e. an alternative to the IO monad.')