Item(by='ewmiller', descendants=None, kids=[25003258], score=None, time=1604593893, title=None, item_type='comment', url=None, parent=24998637, text='Dynamically typed, vanilla JS always seems like the faster option at first. Then your team grows, new developers inherit the project, and your codebase needs to be worked on at scale. This is when vanilla JS falls apart and becomes incredibly annoying to maintain, and it&#x27;s why most of the big tech companies out there do not use vanilla Node JS for large projects.<p>Types are like living documentation - a contract between devs that describes and enforces specific behavior. Just because you know what properties an object contains now doesn&#x27;t mean you&#x27;ll remember it in a month, or that the dev who inherits your work will have an easy time figuring it out. I feel way faster when I code using types, because the type system tells me exactly what I&#x27;m working with at a given time. This ends up preventing lots of bugs and makes debugging errors that do happen way easier, in my experience.<p>So TL;DR types seem slower at first but the dividends are paid in full, and then some, when you have to maintain a project among many devs or teams of devs.<p>EDIT: not to mention that IDE autocomplete features often seem like a superpower when working with static types. I&#x27;d recommend Typescript for that reason alone, honestly.')