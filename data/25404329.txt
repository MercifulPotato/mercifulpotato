Item(by='graderjs', descendants=None, kids=None, score=None, time=1607833999, title=None, item_type='comment', url=None, parent=25401100, text='I solved this problem for my use case by using an approximate diff.<p>Basically diffing took too long ( I was diffing to remove duplicate frames from a virtualized browser to browser screencast ), so after trying to various options (hashing, diffs, etc) I just went with a simple check of a basically random but fixed set of pixels, which worked really well. I don&#x27;t have data on the actual false positives&#x2F; negatives but for the thing important in my case, perceptual difference and not sending the same frame twice (to save bandwidth and speed) it worked great, and was &quot;constant time&quot;.<p>The &quot;code&quot; is here: <a href="https:&#x2F;&#x2F;github.com&#x2F;c9fe&#x2F;ViewFinder&#x2F;blob&#x2F;84620bd87abb32b2f2c3dc0b79a0be5212fa14ee&#x2F;zombie-lord&#x2F;screenShots.js#L9" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;c9fe&#x2F;ViewFinder&#x2F;blob&#x2F;84620bd87abb32b2f2c3...</a><p>And a demo of the project is: <a href="https:&#x2F;&#x2F;demo.browsergap.dosyago.com" rel="nofollow">https:&#x2F;&#x2F;demo.browsergap.dosyago.com</a> (if you check it on Safari mobile you need to plant your clicks about half a finger under where you think they should go, some bug!)<p>I&#x27;d like to know some idea of how this posted fast diff works. I checked around the repo and couldn&#x27;t figure it out, but it seems to be splitting across multiple cores, but still looping over each pixel (but divided by the number of cores). I thought it might be doing something like checking 64-bit blocks somehow, but seems not.')