Item(by='kentonv', descendants=None, kids=[25588524, 25587943], score=None, time=1609372273, title=None, item_type='comment', url=None, parent=25587441, text='Hah, thanks.<p>&gt; Did you ever consider looking for official &#x2F; commercial backing for Cap N Proto?<p>Well, I don&#x27;t think Cap&#x27;n Proto is marketable (for any kind of profit) on its own. It&#x27;s one of those things that has to be free and open source to get any adoption. So a corporate backer would need to get some indirect benefit from its development and adoption. Also, at this point my goal in building and maintaining Cap&#x27;n Proto is primarily to benefit my other projects that use it -- if other people benefit too, great, but wide adoption of Cap&#x27;n Proto is not an intrinsic goal of mine.<p>Right now, Cap&#x27;n Proto development is de facto backed by Cloudflare, as we are using it heavily in Cloudflare Workers and that is driving all the recent work on the C++ implementation. Currently, this use is internal-only and so we have little reason to build out support for multiple languages. But, as the Workers platform grows the ability to support increasingly complex apps and distributed systems (especially with Durable Objects), limiting applications to communicating with HTTP only is getting awkward. One idea that has been tossed around is to expose Cap&#x27;n Proto directly to apps. It makes a lot of sense: it would be very easy for us to support since we already use it under the hood, and zero-copy communications make a ton of sense especially for worker-to-worker comms happening within a single process. If we decided to do this, Cloudflare would become the commercial backer. But, there&#x27;s also a strong argument to support gRPC directly in Workers, given the existing ecosystem. Would we want to support both? Maybe, maybe not. There&#x27;s a lot of trade-offs still to think about here, and my goal would be to make the best possible product decision for Cloudflare Workers -- not necessarily for Cap&#x27;n Proto.')