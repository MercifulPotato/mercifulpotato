Item(by='jpcooper', descendants=None, kids=None, score=None, time=1610194974, title=None, item_type='comment', url=None, parent=25699574, text='I have been giving Python a go for writing a programme which concurrently scrapes and collates data from multiple sources.<p>I chose to figure out how to do this in Python instead of my usual Haskell because I wanted to see how productive I would be compared to how I did  similar things in Haskell. I wanted to get away from what I call type-wankery, which the author seems to be complaining about as well.<p>I’ve been using the Python asyncio library and have been thinking that Python could certainly do with monads in this context. Then I remembered what a ball-ache stacking monads is. In any case, I can’t help seeing programmes in an algebraic context after using Haskell.<p>The author, and many people who complain about types, seem to forget that types and interfaces exist whether or not they are explicitly defined.<p>Is the problem with such an attractive type system that they lead to people defining interfaces before they are fully explored? In that case, maybe it could be argued that a less attractive type system would keep people away from so much type-wankery.<p>It’s hard to know where the best balance is. I am considering F# now. It also seems to have working IDEs, which is nice.')