Item(by='soraminazuki', descendants=None, kids=[25047191], score=None, time=1605016628, title=None, item_type='comment', url=None, parent=25044137, text='&gt; Oh, my bad, should&#x27;ve known better that &quot;rebar3&quot; was for internal consumption, and I need to install &quot;rebar3-open&quot; instead.<p>If that was your problem, you should&#x27;ve said so instead of spinning it up into an entirely different security problem that plainly did not exist.<p>&gt; Thanks for suggestion. I did exactly that<p>Except you didn&#x27;t stop spreading falsehoods. You&#x27;ve spent more lines using your brand new HN account spreading lies about an open source project people have dedicated their free time into.<p>&gt;  professionally work with Erlang, and I know what is hack and what is not.<p>Fixating on hyper specific implementation details taken out of context without considering the design, intent, and usage is not what I call professionalism in the software industry.<p>&gt; Language-specific packaging should be left to language-specific package managers, they have more domain knowledge.<p>Domain knowledge that fails to build or run portably even on widely used FHS-compliant Linux distros.<p>&gt; Nix doesn&#x27;t solve this dilemma in any better way.<p>I&#x27;ve already explained about the problems distro package maintainer faces and how Nix alleviates some of the problems which you then responded with a totally unrelated &quot;Docker exists&quot; nonsense.<p>&gt; Take systems software from the distro-provided packages, add my own stuff on top.<p>So packaging problems won&#x27;t exist if we just stick with Docker, but you would use distro packages to create a Docker image? How would that even work?<p>&gt; Building RPM is a nobrainer.<p>Go tell that to RedHat maintainers.<p>&gt; Please take a closer look at what you&#x27;re quoting. You missed a very important part:\n&gt; &gt; (or its analogue in &#x2F;nix)<p>&#x2F;etc in NixOS is not &#x2F;nix. It&#x27;s &#x2F;etc. Very important indeed.<p>&gt; You see, if I want to utilize Nix to full extend and use its main &quot;reproducibility&quot; feature, I need to put all my configuration in a derivation. Configuration includes secrets. Derivations are world-readable.<p>You see, Please. Stop. Repeating. Lies.<p>You don&#x27;t put secrets in a world-readable location, period. The typical Nix way of handling secrets is that you store in them in a secure path and point the configuration to that path.<p>&gt; Distros maybe don&#x27;t, but &quot;bug-ridden kludge that is Ansible&quot; (according to Nix user) does.<p>You can use numerous solutions that can work together with Nix. How about NixOps, which, among other things, handles <i>secrets management</i>? Or what about, say, Ansible? After all, any solution that would be able to send the Nix configuration, place secrets in a secure filesystem path, and run commands to build the Nix configuration would suffice.')