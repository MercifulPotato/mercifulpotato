Item(by='ljhsiung', descendants=None, kids=None, score=None, time=1609979631, title=None, item_type='comment', url=None, parent=25664468, text='Current mitigations are still largely software based, and frankly, aren&#x27;t fundamentally any different than the ones proposed just a couple days after 1&#x2F;3&#x2F;2018. Additionally, current academic literature <i>still</i> hasn&#x27;t addressed proper silicon mitigations in an all too performant manner-- around 7-15% penalty from what I&#x27;ve seen. While in my opinion, some of these mitigations are provably future-proof (and very genius!), those penalties are still quite heavy. Furthermore, if software yields similar penalties, then why not just stick with software mitigations?<p>Just look at the mitigations list of i9 10900k or Ryzen 9 5950X as used in the article, both released in latter half of 2020.<p>&gt;&gt; itlb_multihit: Not affected + l1tf: Not affected + mds: Not affected + meltdown: Not affected + spec_store_bypass: Mitigation of SSB disabled via prctl and seccomp + spectre_v1: Mitigation of usercopy&#x2F;swapgs barriers and __user pointer sanitization + spectre_v2: Mitigation of Full AMD retpoline IBPB: conditional IBRS_FW STIBP: always-on RSB filling + srbds: Not affected + tsx_async_abort: Not affected<p>Many of these are still by and large &quot;disable this optimization&quot; and &quot;barriers&quot;, all done in software, with the potential exception of EIBRS which just essentially tags the branch predictors (which, in my opinion, they don&#x27;t do in a particularly effective way, but stay tuned for Research <i>tm</i>). Also Meltdown, which I think is a pretty easy fix, and even Intel agreed [1].<p>Given typical design --&gt; market time might be ~2 years, designers only had a few months to 1) finish currently pipelined work and 2) work on mitigations. On top of that, given that this is a pretty hard problem, a few months (not even &gt; 1 year IMO) is definitely not enough time.<p>I&#x27;d guess that this problem won&#x27;t be &quot;solved&quot; in a sense for many many more years, much in the same way that the rich history of buffer overflows has been a cat and mouse game for decades, with each mitigation coming with its own tradeoffs and potential performance penalties. On the &quot;Hardware Mitigations&quot; side, think of ARM&#x27;s pointer authentication-- it&#x27;s only <i></i>just<i></i> now that some pretty nice hardware support has been spawned, decades after buffer overflows were &quot;known&quot;.<p>Still though, I personally think some more silicon mitigations will come in the next 2 years. Part of the reason &quot;Pointer Auth&quot; came &quot;decades after buffer overflows&quot; is due to the rise of cloud compute, and security matters much much more to the general public these days. I just mentioned current research generally has penalties on the order of 10%-- While pretty distasteful, it can definitely be (and has been) gradually improved on and is a far step from initial estimates of ~33-50%.<p>[1] <a href="https:&#x2F;&#x2F;www.rockpapershotgun.com&#x2F;2018&#x2F;01&#x2F;29&#x2F;intel-cannon-lake-ice-lake-spectre-meltdown-fix&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.rockpapershotgun.com&#x2F;2018&#x2F;01&#x2F;29&#x2F;intel-cannon-lak...</a>')