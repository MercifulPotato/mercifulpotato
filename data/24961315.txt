Item(by='lptk', descendants=None, kids=None, score=None, time=1604254599, title=None, item_type='comment', url=None, parent=24956001, text='&gt; but parallelism is also a base fact of many problem domains, where you have multiple agents (up to and including humans) collaborating and interacting simultaneously.<p>I don&#x27;t think parallelism is the word for that. More like concurrency<p><i>Parallel computing is closely related to concurrent computingâ€”they are frequently used together, and often conflated, though the two are distinct: it is possible to have parallelism without concurrency (such as bit-level parallelism), and concurrency without parallelism (such as multitasking by time-sharing on a single-core CPU).[5][6] In parallel computing, a computational task is typically broken down into several, often many, very similar sub-tasks that can be processed independently and whose results are combined afterwards, upon completion. In contrast, in concurrent computing, the various processes often do not address related tasks; when they do, as is typical in distributed computing, the separate tasks may have a varied nature and often require some inter-process communication during execution.</i><p><a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Parallel_computing" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Parallel_computing</a><p>What you&#x27;re describing sounds like it would be solved by primitives such as the actor model, not by Haskell-style FP.')