Item(by='scythe', descendants=None, kids=[25040086], score=None, time=1604951627, title=None, item_type='comment', url=None, parent=25038752, text='&gt;Unfortunately, Rust has limitation on what it can prove to be safe using the ownership and lifetimes approach. One of the simplest things which can&#x27;t safely be done in Rust is a doubly-linked list.<p>It can be done &quot;safely&quot; in Rust, as in without actual bugs; it can&#x27;t be done in &quot;safe Rust&quot;, that is, Rust without `unsafe{}` blocks. But it&#x27;s reasonable to assume that any Rust game would make liberal use of `unsafe{}` blocks, because as we have all agreed, game developers don&#x27;t actually care that much about memory safety anyway.<p>As such it seems wrong to suggest that the primary barrier to Rust in games development is its memory safety. Perhaps the culture of today&#x27;s Rust community that shuns `unsafe{}` is unsuitable for games development, but Rust offers plenty of advantages beyond memory safety, and in contrast with C++ the particular advantages I would see as most relevant are:<p>- no legacy types&#x2F;structures, important when you have a large team on a shoestring budget working late nights with sporadic communication; there will be fewer discrepancies in code styles<p>- potentially faster compile times than C++ when Rust is more mature<p>- distant future item, but there&#x27;s the possibility for better FFI with game scripting languages when Rust is more mature<p>None of the above really depends on memory safety except kinda the FFI, but it&#x27;s all relevant for a game dev.<p>While the adoption of &quot;safe Rust&quot; has left the tarmac, the best practices and widespread use of &quot;unsafe Rust&quot;, a perfectly reasonable language in itself, have barely begun to develop. It&#x27;s likely that any Rust games will generally be written with <i>lots</i> of `unsafe{}` and while nobody would learn Rust to use `unsafe{}` specifically, game developers might learn mostly safe Rust in CS courses that cover systems programming and then take those skills to the game industry and already know most of what they need to ramp up on an unsafe Rust codebase.<p>That last sentence is also why I think the Rust games era is at least a decade away; game shops don&#x27;t usually want to retrain their employees on new languages; they&#x27;ll just use what&#x27;s in the field. That&#x27;s also why Rust will probably beat out Zig (or Nim&#x2F;Jai), since even though the latter is a little more suited for games, the former is much more likely to be taught in schools.')