Item(by='segfaultbuserr', descendants=None, kids=[25533240], score=None, time=1608846754, title=None, item_type='comment', url=None, parent=25529125, text='Simple, you just check whether the header, data structure, metadata, checksum, etc. in the trial-decrypted data in valid, no hack is needed. For example, something as simple as a 16-byte magic number can ensure a false positive rate of 1&#x2F;2^128. Since any arbitrary binary data can be encrypted, &quot;this is mostly ASCII&quot; is unusable.<p>In GPG:<p><pre><code>    &#x2F;* if KeyID is empty... *&#x2F;\n    if (!k-&gt;keyid[0] &amp;&amp; !k-&gt;keyid[1])\n    {\n        log_info (_(&quot;anonymous recipient; trying secret key %s ...\\n&quot;), keystr (keyid));\n    }\n\n    err = get_it (ctrl, k, dek, sk, keyid);\n    k-&gt;result = err;\n    if (!err)\n    {\n        &#x2F;* If get_it() succeeds *&#x2F;\n        if (!opt.quiet &amp;&amp; !k-&gt;keyid[0] &amp;&amp; !k-&gt;keyid[1])\n        {\n            log_info (_(&quot;okay, we are the anonymous recipient.\\n&quot;));\n        }\n    }\n</code></pre>\nAnd in get_it()...<p><pre><code>    if (sk-&gt;pubkey_algo == PUBKEY_ALGO_ECDH)\n    {\n        &#x2F;* Now the frame are the bytes decrypted but padded session key.  *&#x2F;\n        if (!nframe || nframe &lt;= 8\n                || frame[nframe-1] &gt; nframe)\n        {\n            err = gpg_error (GPG_ERR_WRONG_SECKEY);\n            goto leave;\n        }\n    }\n    else\n    {\n        if (padding)\n        {\n            if (n + 7 &gt; nframe)\n            {\n                err = gpg_error (GPG_ERR_WRONG_SECKEY);\n                goto leave;\n            }\n        }\n    \n        if (n + 4 &gt; nframe)\n        {\n            err = gpg_error (GPG_ERR_WRONG_SECKEY);\n            goto leave;\n        }\n    \n        if (dek-&gt;keylen != openpgp_cipher_get_algo_keylen (dek-&gt;algo))\n        {\n            err = gpg_error (GPG_ERR_WRONG_SECKEY);\n            goto leave;\n        }\n    \n        &#x2F;* Copy the key to DEK and compare the checksum.  *&#x2F;\n        csum = buf16_to_u16 (frame+nframe-2);\n        memcpy (dek-&gt;key, frame + n, dek-&gt;keylen);\n        for (csum2 = 0, n = 0; n &lt; dek-&gt;keylen; n++)\n            csum2 += dek-&gt;key[n];\n        if (csum != csum2)\n        {\n            err = gpg_error (GPG_ERR_WRONG_SECKEY);\n            goto leave;\n        }\n    }\n</code></pre>\nYou get the idea.<p>BTW, did I just &quot;break GPG encryption and deanonymize users&quot; according to Cellebrite because I found the correct function in the code? And no, I didn&#x27;t &quot;review dozens of code classes&quot;, I just grepped the word &quot;anonymous&quot;... &#x2F;s')