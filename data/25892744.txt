Item(by='Nullabillity', descendants=None, kids=None, score=None, time=1611501869, title=None, item_type='comment', url=None, parent=25891362, text='py2 str == py3 bytes<p>py2 unicode == py3 str<p>The problem with this approach is that they wanted to reuse the `str` name, which requires a big &quot;flag day&quot;, where it switches meaning and compatibility is effectively impossible across that boundary (without ugly hacks).<p>What they could have done instead would have been to just rename `str` to `bytes`, but retain a deprecated `str` alias that pointed to `bytes`.<p>That would keep old scripts running indefinitely, while hopefully spewing enough warnings that any maintained libraries and scripts would make the transition.<p>Eventually they could remove `str` entirely (though I&#x27;d personally be against it), but that would still give an actual transition period where everything would be seamlessly compatible.<p>Same thing with literals: deprecate bare strings, and transition to having to pick explicitly between `b&quot;foo&quot;` and `u&quot;foo&quot;`. Eventually consider removing bare strings entirely. DO NOT just change the meaning of bare strings while removing the ability to pick the default explicitly (in contrast, 3.0 removed `u&quot;asdf&quot;`, and it was only reintroduced several versions later).<p>What made me personally lose faith in the Python Core team wasn&#x27;t that Guido made an old mistake a long time ago. It wasn&#x27;t that they wanted to fix it. It was the absolutely bone-headed way that they prioritized aesthetics over the migration story.')