Item(by='tialaramex', descendants=None, kids=None, score=None, time=1608906707, title=None, item_type='comment', url=None, parent=25536437, text='For leaves and everything else below a root, the expiration (notAfter in X.509) tells us when the issuer ceases to be responsible for the contained assertion being true.<p>For example take a 90 day Let&#x27;s Encrypt certificate. When it was issued ISRG had recently (likely seconds earlier) verified that the subscriber apparently had control over all the names listed.<p>Suppose a month later one of the names has been sold to you. You&#x27;re entitled to have that certificate revoked. Since you control the name, you can just do the Let&#x27;s Encrypt proof-of-control dance and get it revoked, issue a new one instead, whatever you want.<p>They issue millions of certificates every day, so they don&#x27;t want to remain indefinitely responsible for the ones from last July, from 2018, and so on. Ninety days later, having expired, ISRG has no opinion about whether the holder of the certificate still controls those names, and if you call that revocation API it will refuse, there isn&#x27;t anything to revoke because it has expired.<p>Now, if the certificate you&#x27;re shown is 15 seconds expired, is it so much more likely that it&#x27;s really because they don&#x27;t control this name any more than it was a minute earlier? Not really, but we must draw a line in the sand somewhere, or else a 10 year old certificate for &quot;www.microsoft.com&quot; is still valid right?<p>For the root the argument is a bit trickier, after all they could just issue themselves a new certificate with the same keys but a different expiry date - and some root CAs have done this in the past.<p>In this case (for roots) as we see with Android not every system actually enforces expiry. Out of the box OpenSSL doesn&#x27;t for example I think. But the argument as to why expiry matters for roots goes like this: If we are actively managing the trust store, clearly a trusted CA which wants us to continue trusting them should send us a new or updated root in plenty of time. If they <i>forgot</i> we can hardly have confidence in their other processes. If they decided not to we certainly should cease to trust their root when it expires as this signifies they presumably do not intend to obey policy any more, for this root at least.<p>For example, if you have a Firefox that you just decide not to ever update, I believe it won&#x27;t enforce expiry of roots. Newer Firefox builds will, like clockwork, remove expired roots entirely. But the old build will continue to trust roots that have notionally expired if you are still running it.')