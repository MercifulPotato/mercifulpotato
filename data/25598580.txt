Item(by='to11mtm', descendants=None, kids=None, score=None, time=1609457787, title=None, item_type='comment', url=None, parent=25596808, text='&gt; and all the work they&#x27;ve done with Dotnet Core seem to really have bought them a lot of goodwill, at least with the people I know.<p>Microsoft has done some good things with .NET Core, but they still don&#x27;t have a very friendly OSS or partner strategy.<p>AppGet is a pretty good example; there was an existing Open source solution that filled a need, and Microsoft decided to create their own replacement, not bothering to give any credit (until there was an internet ruckus) to the original despite the very striking similarities and relative level of obviousness that they were at bare minimum &#x27;inspired&#x27; by the tool; after all, they interviewed him for a role and even warned him the day before it came out... [0]<p>Octopus is another example. I -hate- TFS Release pipelines. Octopus Deploy was (until they ruined their pricing model) a far superior product overall. You can really tell the way TFS Release pipelines were done, they tried to &#x27;checkbox-copy&#x27; Octopus Deploy&#x27;s features without making it too much like Octopus to be obvious.<p>But the checkbox-copy strategy is inferior in many ways. In Octo you can have a stage that runs in all environments (but certain steps on&#x2F;off per env) and configure server groups that way. In TFS Release, You have to have to &#x27;copy&#x27; the steps for every stage. It&#x27;s like their data model is missing a 1-many relationship or two somewhere.<p>And the impacts in the case of their behavior has a second-order effect; I am curious whether TFS Release eating into Octopus&#x27;s market share was a factor in their price hikes a couple years ago; in that regard, I can&#x27;t blame them if that&#x27;s the case.<p>[0] - <a href="https:&#x2F;&#x2F;medium.com&#x2F;@keivan&#x2F;the-day-appget-died-e9a5c96c8b22" rel="nofollow">https:&#x2F;&#x2F;medium.com&#x2F;@keivan&#x2F;the-day-appget-died-e9a5c96c8b22</a>')