Item(by='Const-me', descendants=None, kids=None, score=None, time=1603252004, title=None, item_type='comment', url=None, parent=24844444, text='&gt; I&#x27;ve yet to see a single case where handwritten assembler actually did better than spending the same amount of effort on speeding up the compiled program (e.g. taking 5 minutes to actually set the right target architecture).<p>C++ with intrinsics can be very close to assembly. Compilers allocate register and do their magic with the rest of the code, but the real workload translates into assembly almost line-to-instruction. Takes longer than 5 minutes to do, these instruction sets are less than straightforward, but I think 80% of real-world performance sensitive compute-bound code is written like that (the other 20% being assembly).<p>&gt; that will actually tell you what&#x27;s going on<p>When I work on performance critical pieces, I already know what&#x27;s going on. I design my code from the start to minimize cache misses and branches. The profiling tool I find most useful is sampling profiler. Then I either read assembly and try to do better, or rework higher-level logic or data structures.')