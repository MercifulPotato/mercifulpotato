Item(by='6d65', descendants=None, kids=None, score=None, time=1611261114, title=None, item_type='comment', url=None, parent=25862153, text='Yes, my plan is to do it in Rust.<p>I did start it in luajit first, because I thought that it will be a faster feedback loop. I created an OpenGL window, and set up nodemon to restart the luajit app on changes. It is quite fast, but still not as smooth as I imagined it. Doing it Rust from the start, with a TDD approach, might have been a better idea. Things got quite messy quite quickly because of the luajit OpenGL bindings.<p>The goal is to do difference, addition, intersection first between basic 3d volumes: sphere, cuboids, cylinders. And then yes, some extruded splines. I was thinking about starting with beziers, as this is the only spline I&#x27;ve implement before.<p>I haven&#x27;t built a cad before, so I went with a data oriented approach, defined the data needed to represent each of the basic volumes, and 2d shapes, as well as the relationships(diff, union, intersection). Something like a normalized SQL database. A table (array), for positions, rotations, bounding boxes and so on. I&#x27;m yet to see how well this scales up to more complex models.<p>It is very much in the beginning. I&#x27;ve started from first principles, not looking up existing approaches and see what I can come up with. That&#x27;s the reason it probably won&#x27;t become something serious, but it&#x27;s still fun to explore.<p>Thank you for offering help, might have a closer look at SolveSpace if I get to something serious that I cannot come up with a solution on my own.')