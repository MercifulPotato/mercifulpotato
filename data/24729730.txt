Item(by='zimablue', descendants=None, kids=None, score=None, time=1602250359, title=None, item_type='comment', url=None, parent=24708472, text='Summarizing the article (?) I wonder whether there’s a way to split this concept of technical debt into two axes.<p>If you do waterfall, your code is technically “simple”, because it has a nice architecture, but it’s “misaligned”- it won’t fit the problem well because it hasn’t been tested. This seems like the ur technical debt.<p>If you code to solve every problem as fast as possible and patch&#x2F;rip it up to stay close to the domain- now your code is complex&#x2F;ugly because design philosophy has been neglected, but it’s well aligned to the problem, call that modern tech debt.<p>So you have two axes, ugliness&#x2F;beauty and misalignment&#x2F;“fit”. Modern practice says to focus on iterating fit quickly then more occasionally solve beauty, in big steps. So aesthetic debt vs alignment debt.')