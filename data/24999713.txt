Item(by='reader_mode', descendants=None, kids=[25000475], score=None, time=1604594938, title=None, item_type='comment', url=None, parent=24999075, text='Some languages and frameworks have the right defaults for scale.<p>Rails has a lot of magic that gets you running fast but it doesn&#x27;t even have a service layer - and instead promotes the abomination that is mixins (concerns), fat models, fat controllers - stuff that gets you running with minimal effort but then crying over the code duplication all over the place and lack of logical separation.<p>ASP.NET is more verbose out the gate but you&#x27;re basically guided in to stuff like repository pattern, service layer with POCO models, thin controllers and IoC. Static typing gives you guarantees when reading the code (I&#x27;ve seen RoR concerns that relied on random fields being present in target class, but had conditional logic with implicit assumptions about which class it would be included in - it was a hell to reason about). It&#x27;s verbose but consistent and built to scale - I&#x27;ll take a dirty ASP.NET project over a dirty RoR project any day.')