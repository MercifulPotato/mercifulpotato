Item(by='muststopmyths', descendants=None, kids=[25805480], score=None, time=1610811861, title=None, item_type='comment', url=None, parent=25802325, text='Consider <i>some</i> of the parts of an MMO server backend:<p>1. Login (Authentication and identity)<p>2. Persistence of data<p>3. Social graphs<p>4. Gameplay<p>5. Metrics&#x2F;telemetry collection, ingestion, tracking, presentation.<p>1,2,3 and 5 are  generalizable and a framework can be made to fit almost any game. Metrics&#x2F;telemetry might be game-specific, but you can come up with an abstraction to fit most of the types of things you might want to collect&#x2F;observe.<p>I&#x27;m not even talking about operation and maintenance. You can assume those are fairly well-understood generalizable problems. Or the type of networking requirements of WoW vs CoD.<p>Number 4 is impossible to generalize. A gameplay server will be unique to each game.  Frameworks like SpatialOS etc. are not scaling out game <i>play</i>. They are scaling out the persistence and distribution of game state. Those are two very different problems.<p>A lot of engines (like Unreal) include a &quot;server&quot; component which you can use for upto 64-ish players. After that, any optimizations you need are going to be very, very specific to the game.<p>For example, the requirements to scale a diablo-style looter game are completely different from an FPS or a WoW-style classic RPG. How many ticked objects you have in a game instance on the server for example will vary from game to game and will drastically alter the scalability.<p>Many companies, including Unity and Unreal at various points have tried to come up with such a framework and have failed. No such framework exists even at a paid level. Let alone an open-source framework where your users will be mostly non-technical game designers who just want the damn thing to work so they can be creative. As much as I love their creativity, I would go mad trying to satisfy such an audience :-)<p>TLDR: Gameplay logic is not conducive to a generalized abstraction and thus cannot be scaled independent of game type.')