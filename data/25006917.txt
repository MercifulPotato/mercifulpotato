Item(by='rishav_sharan', descendants=None, kids=[25007604], score=None, time=1604662840, title=None, item_type='comment', url=None, parent=25005780, text='I have a love-hate relation with Crystal. Every few months, disenchanted with the core maintainers&#x27; priorities, lack of platform and tooling updates and overall deadland syndromes -\nI denounce Crystal, promise I will never use it again, startup a golang or Rust project, make some non trivial toy stuff and then come crawling back to Crystal.<p>I hate the fact that I love this language and the fact that nothing else (except perhaps f# and nim) seems to have the same effect on me.<p>My favorites Crystal features are its do-end syntax, dat sexy type system hnnnnghhh... , domain modelling using sum types, null checking using types, ultra simple OOPs, insanely productive std and its sheer performance.<p>The bits about the language I detest are the overuse of macros, the utter lack of any platform (windows, http&#x2F;2 etc.) or tooling improvements (IDE support, slow compilation). The core maintainers are amazing but have a weird obsession with just refactoring the language semantics. Things which really would matter for any language usage are just relegated to GH issues which haven&#x27;t had any comments on it for months (if not years).<p>The lack of a BDFL and corporate sponsorship really hurts Crystal bad. Its a language without directed growth. For a language which seems to be used the most for web servers, it lacks http&#x2F;2, db pipelining and async db drivers. There have been plans for redoing the http module for years but it hasn&#x27;t been done yet.<p>Yet, I love this language despite all its shortcomings. I find it to be one of the most readable languages out there. The community is full of amazing individuals who are ever helpful and welcoming. The core maintainers are super talented developers who really value quality of code.<p>Right now I am working on an api servers and have 3 early implementations - one in Rust-actix, one in pure crystal (no framework) and one in Go-Fiber. The joy of using Crystal and feeling like I am in control of the project are reasons which are pushing me towards using Crystal for the project. But I know that by the next few years, we likely still wouldn&#x27;t have \nhttp&#x2F;2, async drivers, nice IDE support and many other features that I really need.<p>And so, I will likely have to go with Go. (Rust syntax is just too complex for my taste. And I am not talking about the celebrated borrow checker).<p>I like go.<p>Go is simple.<p>Go is Productive.<p>Go is... just not Crystal.')