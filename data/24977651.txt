Item(by='virgilp', descendants=None, kids=None, score=None, time=1604392461, title=None, item_type='comment', url=None, parent=24969366, text='What is a &quot;FAST&quot; programming language? It can&#x27;t be &quot;it&#x27;s theoretically possible to write the absolute fastest code using this&quot; because then the answer to everything must be assembly.<p>Look e.g. at Rich Hickey&#x27;s interviews - when building actual systems, the &quot;theoretically fastest implementation&quot; doesn&#x27;t even matter that much in practice[1] - actual practical C++ code (written by experts!) can be slower than even Lisp code. I&#x27;ve witnessed this first hand, too; you&#x27;ve witnessed it too - in a micro-benchmark, no less - where Rust surprised you by being significantly faster than 3 state-of-the-art C++ compilers. But instead of concluding that Rust (the language) maybe did something terribly good, you conclude &quot;meh, it&#x27;s not that the compiler is better, it just got lucky in this case&quot;.<p>[1] I know there are a few domains where this matters (e.g. embedded systems). I&#x27;m not saying that &quot;Lisp is better than C++&quot; - I&#x27;m saying that your conclusions about Rust are... surprising, at least to me.')