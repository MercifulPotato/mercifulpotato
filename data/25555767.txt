Item(by='srockets', descendants=None, kids=[25555834], score=None, time=1609117710, title=None, item_type='comment', url=None, parent=25555457, text='Like the OP approved subset of C++, the design of Go is anachronistic on purpose, and makes a point to ignore most of what we have learned about programming language design since the 1990s.<p>Go goes further and puts the blame on its users, who are “not capable of understanding a brilliant language […] the language that we give them has to be easy for them to understand and easy to adopt”[0].<p>This stands in a stark contrast to one of C++&#x27;s design principles, namely that the language shouldn&#x27;t “force people to use a specific programming style”[1]. C++ not being opinionated is not aesthetically pleasing, and at times confusing. But that wide acceptance to new ideas is exactly what allowed those ideas to graduate from niche languages to the mainstream.<p>--<p>[0] Rob Pike at Lang.NEXT 2014. 20:52 @ <a href="https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;Lang-NEXT&#x2F;Lang-NEXT-2014&#x2F;From-Parallel-to-Concurrent" rel="nofollow">https:&#x2F;&#x2F;channel9.msdn.com&#x2F;Events&#x2F;Lang-NEXT&#x2F;Lang-NEXT-2014&#x2F;Fr...</a><p>[1] Bjarne Stroustrup, pp.3 @ <a href="https:&#x2F;&#x2F;stroustrup.com&#x2F;hopl-almost-final.pdf" rel="nofollow">https:&#x2F;&#x2F;stroustrup.com&#x2F;hopl-almost-final.pdf</a>')