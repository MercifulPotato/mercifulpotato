Item(by='ernst_klim', descendants=None, kids=[24979038], score=None, time=1604392052, title=None, item_type='comment', url=None, parent=24976622, text='&gt; I&#x27;d choose Scala and get a large and active community, as many Java libraries as there are stars in the sky, and the most sophisticated runtime environment mankind has ever dreamed of (for better or worse).<p>Hahahaha oh wow. You never ever used Scala, aren&#x27;t you? I did, I moved from OCaml to Scala.<p>Oh, good luck joining Scala community then, we don&#x27;t have aforementioned problems, don&#x27;t we? Because Akka vs Zio vs Cats vs Scalaz is not a thing. Because ensime vs metals debacle never happened. Because we don&#x27;t rewrite the complete ecosystem each couple of years.<p>&gt; most sophisticated runtime environment mankind has ever dreamed of<p>Which you need to tune quite a lot to fit Scala into it (hopefully, it&#x27;s very tuneable). Oh, and this &quot;most sophisticated runtime&quot; doesn&#x27;t support TCO btw.<p>Oh, and any AnyRef value (so anything but basic types) can be null, thanks, runtime.<p>I love Scala, but all these &quot;I wouldn&#x27;t choose OCaml, I would choose F#&#x2F;Clojure&#x2F;Scala&#x2F;other obscure language&quot; usually mean &quot;I&#x27;ve tried ocaml but didn&#x27;t try other obscure language, so maybe it&#x27;s better&quot;<p>I love OCaml is well, and most of your points could be reduced to simply &quot;it&#x27;s lacking manpower&quot; (Scala is lacking it too).<p>Because all of the &quot;why is stdlib vs. Core vs. Batteries and Async vs. Lwt still an issue&quot; we have in C, C++ and many other popular languages too, but it&#x27;s not a big issue. People complain on meson&#x2F;cmake&#x2F;autotools&#x2F;boost&#x2F;glib&#x2F;qt but not leave for some reason.<p>Maybe people don&#x27;t use OCaml that much rather because there are simply too few jobs and too few programmers and it&#x27;s a simple chicken and egg problem. And all these technical rationalization is not the reason because it&#x27;s applicable to quite a lot of languages (safe for lack of libraries)')