Item(by='scottlamb', descendants=None, kids=[24955594, 24955802], score=None, time=1604180780, title=None, item_type='comment', url=None, parent=24954954, text='Sort of. If I&#x27;m understanding correctly:<p>The filetypes it&#x27;s designed for are ones that specify the &quot;deflate&quot; compression algorithm: they can be thought of as headers+deflate(raw). It applies the better (higher-compression-ratio) lzma algorithm to the raw data. That&#x27;s better than applying it to the deflate form as a .zip file compressor would try to do. Ie, zip might try lzma(deflate(raw)) where this tries lzma(raw).<p>So the novel things are:<p>* It understands these specific file formats well enough to pick out deflate part that it should uncompress (when it applies its own compression) and recompress (when it applies its decompression).<p>* I think it promises to exactly reproduce the original deflate(raw) form. You can&#x27;t necessarily do that from lzma(raw) alone. I&#x27;m not an expert, but from a wikipedia article skim, apparently deflate works with a combination of dictionary encoding and Huffman coding. This program probably stores the original tables for those (with the value sides as ranges of the original file rather than repeating them), and maybe some other details to handle this. Like, if the originally compressing program called flush more frequently, it produces a different stream, and this needs to be able to reconstruct that. Maybe it stores like a list of deflate operations rather than either the deflate-compressed result or the raw data. This strikes me as kind of a tricky problem, not in any theoretical computer science sense, but in a practical getting-all-the-details-right software engineering sense.')