Item(by='jodrellblank', descendants=None, kids=None, score=None, time=1611123046, title=None, item_type='comment', url=None, parent=25841755, text='No, that&#x27;s misleading. The result is not typecast to string, it&#x27;s not combined into a single string, many outputs become an array. And it&#x27;s not whatever is printed to the console, it&#x27;s whatever was sent to the pipeline output. Printing to the console is separate in PowerShell. Unlike in Linux world where the main way appears to be abuse of stderr for things which are informational and not errors, PowerShell has many output streams, and only one of them is the output of a function. e.g.<p><pre><code>    function test {\n      &quot;hello&quot;\n      5\n      write-host &quot;world&quot;\n    }\n    $result = test\n    </code></pre>\n$result contains &quot;hello&quot;,5  the output of the function and 5 is still typed as an integer - not string and not a single string - and the console prints &quot;world&quot;.<p>And it does this to make it work like a Unix shell, because if you write a command and get some output, then want to batch some commands together in a function and get no output except what you explicitly &quot;return&quot;, that would be annoying.<p>&gt; &quot;<i>functions don&#x27;t actually have return statements</i>&quot;<p>They do actually have return statements (for control flow).<p>(And if you make classes with methods, they have traditional programming language features - called with parens, lexical scope, return statement controls the return value).')