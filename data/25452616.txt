Item(by='moron4hire', descendants=None, kids=None, score=None, time=1608180825, title=None, item_type='comment', url=None, parent=25452522, text='I do this in my own projects. Specifically, I have them defined as:<p>&quot;Defects&quot; are a deficiency in the project. They come about through a failure of process. We have to fix them, and fix the failure of process that resulted in them.<p>&quot;Bugs&quot; are anomalous behavior that get in from outside. A defect in a dependency or external service can cause a bug in my project. We have to fix them, which may require fixing the dependency, working around the bug, or ejecting the dependency completely (I like to call this &quot;deprecated due to infestation&quot;).<p>&quot;Glitches&quot; are anomalous behavior outside of the specification of the system. Example: a user whose cable splitter outside is dangling from a single strand of wire, preventing them from having a reliable enough network connection to use our telecomms system. We might not be able to do anything about glitches other than improve user training.<p>And finally, &quot;User Error&quot; is a myth.<p>I find being able to evaluate and define issues by this criteria is really helpful in figuring out the best course of action to take with them. For example, when I realized I was spending the majority of my time working around Bugs caused by Defects in Unity3D, I knew it was time to eject Unity3D. It&#x27;s kinda like Unity3D had bedbugs, and those bedbugs gave us unsightly sores. It was better to burn the bed completely than be constantly applying bandaids to the sores.')