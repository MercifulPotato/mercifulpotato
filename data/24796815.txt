Item(by='infogulch', descendants=None, kids=None, score=None, time=1602815346, title=None, item_type='comment', url=None, parent=24795663, text='It&#x27;s a lot easier to develop a single software product continuously by tying continuous development to continuous revenue.  It frees the business to devote its resources to development instead of product sales strategies and version differentiation which just distract it from focusing on its core product.  This also enables their customers to do the same thing, tying continuous use of a service to continuous production of its own product or service.  If a business can completely outsource the problem of providing good tools to their professional digital artists by paying Adobe $Xk&#x2F;year, it might even be worth it to them financially just to save everyone the time of deciding whether to upgrade or not every other year.  OS updated?  New file format?  Solved.  New employee?  Employee left?  Solved.<p>This is like IT infrastructure moving to cloud: businesses decide that the problems of maintaining IT infrastructure 100% in house is not worth it when you can outsource a big chunk of the business problem for a known cost.  In my opinion all of these are examples of the same trend that also includes the direction that k8s, serverless, even companies like uber, doordash, wework etc are moving towards: a global relaxation of artificially maintained buffers down to solving problems continuously, automatically, and on-demand.  (Since it begs the question, my critique of uber, et al. is that they&#x27;re trying to be too big for their problem.)<p>I think this is the general trend, but I don&#x27;t know why.  My guess is that it is <i>vastly</i> more efficient; not more efficient in cost, but more efficient in <i>time</i>.')