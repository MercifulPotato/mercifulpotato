Item(by='dragontamer', descendants=None, kids=[25166402], score=None, time=1605913660, title=None, item_type='comment', url=None, parent=25162504, text='&gt; Maybe the largest remaining difference is around the strength of the memory model<p>If it weren&#x27;t for the following project... I&#x27;d agree with you.<p><a href="https:&#x2F;&#x2F;github.com&#x2F;saagarjha&#x2F;TSOEnabler" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;saagarjha&#x2F;TSOEnabler</a><p>&gt; A kernel extension that enables total store ordering on Apple silicon, with semantics similar to x86_64&#x27;s memory model. This is normally done by the kernel through modifications to a special register upon exit from the kernel for programs running under Rosetta 2; however, it is possible to enable this for arbitrary processes (on a per-thread basis, technically) as well by modifying the flag for this feature and letting the kernel enable it for us on. Setting this flag on certain processors can only be done on high-performance cores, so as a side effect of enabling TSO the kernel extension will also migrate your code off the efficiency cores permanently.<p>--------<p>Its clear that Apple has implemented total-store ordering on its chips (including the M1).')