Item(by='ncmncm', descendants=None, kids=None, score=None, time=1608487003, title=None, item_type='comment', url=None, parent=25485679, text='I make systems performant and reliable by eliminating their lock-free queues.<p>To be more precise... I <i>like</i> to use single-writer ring buffers. (Technically you could say they are a sort of lock-free queue. But there is little to go wrong in a ring buffer.) Mainly, I reduce coupling enough that taking the occasional mutex is not a noticeable drain. Explicit mutex locking is less prone to obscure heisenbugs than lock-free techniques.<p>What I rip out are queues treated as if &quot;lock-free&quot; coupling were free. It&#x27;s not free; it is at least 50 cycles, each interaction. Nowadays you can get a hell of a lot of work done in 50 cycles. Each &quot;lock-free&quot; operation engages bus-level interactions more like a mutex than not, so it doesn&#x27;t buy what you hope.<p>To reduce coupling, you increase batching. Instead of one event per interaction, do ten, or fifty.<p>Most &quot;lock-free&quot; implementations you find  are not portable off of x86 systems, which have a much more forgiving memory model than, say, ARM. You think you were careful, but the system is better at finding your mistakes than you are.')