Item(by='vtuulos', descendants=None, kids=None, score=None, time=1608576602, title=None, item_type='comment', url=None, parent=25497897, text='I&#x27;d love to hear more what you have in mind! Feel free to drop by at our chat at <a href="https:&#x2F;&#x2F;gitter.im&#x2F;metaflow_org&#x2F;community" rel="nofollow">https:&#x2F;&#x2F;gitter.im&#x2F;metaflow_org&#x2F;community</a><p>While it is true that auto-sizing resources is hard and the easiest approach is to oversize @resources, the situation isn&#x27;t as bad as it sounds:<p>1) In Metaflow, @resource requests are specific to a function&#x2F;step, so you end up using resources only for a short while typically. It would be expensive to keep big boxes idling 24&#x2F;7 but that&#x27;s not necessary.<p>2) You can use spot instances to lower costs, sometimes dramatically.<p>3) It is pretty easy to see the actual resource consumption on any monitoring system, e.g. CloudWatch, so you can adjust manually if needed.<p>4) A core value proposition of Metaflow is to make both prototyping and production easy. While optimizing resource consumption may be important for large-scale production workloads, it is rarely the first concern when prototyping.<p>In practice at Netflix, we start with overprovisioning and then focus on optimizing only the workflows that mature to serious production and end up being too expensive if left unoptimized. It turns out that this is a small % of all workflows.')