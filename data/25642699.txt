Item(by='nsm', descendants=None, kids=None, score=None, time=1609827100, title=None, item_type='comment', url=None, parent=25630912, text='&gt; At the end of the day, you quit your environment and shut down. How do you ensure your interactive work is not lost and the environment is still what you expect it to be when you start again the next day. How would you compile such a program?<p>Modern Smalltalks have solved this problem. Smalltalk has the concept of Packages just like Java, and as you go along building your environment, even though you are modifying the Smalltalk image, you can export these packages to plain-text files, and put them in Git, just like any other language. The environment itself supports Git integration (called Iceberg in Pharo).<p>&gt; Also, if significant parts of the source code are written inside the REPL, wouldn&#x27;t the lack of modern IDE features be a hassle? No syntax highlighting, no code completion, no code inspections etc. Or are there tools that offer those?<p>The command-line REPLs that other languages have are NOT what you get in Smalltalk. I believe the author means the entire interactive environment, and the &quot;style&quot; of development is REPL, not the actual UI. The Smalltalk &quot;IDE&quot; is just as powerful as any other IDE, including code completion, automatic generation of certain getters&#x2F;setters, renaming methods&#x2F;classes, finding uses, jumping to declarations and even refactoring within methods. The difference between a normal IDE for Java is that this &quot;IDE&quot; is pervasively available, including in breakloops and the debugger. Since the system is live, there is no separate notion of debugging, the debugger is always there, and you can use all the editor IDE features when stopped in a debugger. You no longer have to deal with a crippled debugging environment way different from your authoring environment. It truly is mind-blowing!<p>I highly recommend giving Pharo Smalltalk a spin (by following their MOOC or similar). This video is also worth a watch - <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch&#x2F;baxtyeFVn3w" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch&#x2F;baxtyeFVn3w</a><p>I did most of this year&#x27;s Advent Of Code in Smalltalk and saved it in Git just like any other language. Someone else can then import it into their image. <a href="https:&#x2F;&#x2F;github.com&#x2F;nikhilm&#x2F;AdventOfCode2020" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;nikhilm&#x2F;AdventOfCode2020</a>.<p>Note that the source code looks very verbose, but you never actually interact with the source like that. The source is just a serialization. Your actual environment only ever shows you UI elements and entire IDE windows describing your classes and individual methods.<p>The only thing I miss in Pharo is that it doesn&#x27;t have Vim keybindings :)\nApart from that there is a significant lack of OS integration and polish, but these are due to the small community and priorities than fundamental deficiencies.')