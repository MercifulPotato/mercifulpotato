Item(by='Frost1x', descendants=None, kids=None, score=None, time=1606400582, title=None, item_type='comment', url=None, parent=25212145, text='The point is to manage potential external liabilities. A business doesn&#x27;t want any sort of liability they have automatically costing them if they can avoid it. They&#x27;re more than happy to have anything that profits them automatically generate revenue, but if something could potentially lose them thousands or millions, they want to make sure there&#x27;s a human-in-the-loop from management to check off. Not meeting SLAs or service outages are a good way to cost them money.<p>Few companies really respect their engineering teams&#x2F;divisions in any sensible form from my experience, though I&#x27;m biased (even in heavy R&amp;D environments). You&#x27;re simply a means to an ends.<p>I understand your point though (and identify with it), but I find any mechanism&#x2F;option that provides a way of containing potentially damaging information is going to be pushed by management over the option to release damaging information that a responsible engineer may want to disclose.<p>You&#x27;re in a culture where admitting fault or liability is like pulling teeth and ripping finger nails off. It <i>shouldn&#x27;t</i> be IMHO (we should own up to our mistakes and be <i>reasonably</i> forgiven), but that&#x27;s unfortunately not the culture we have.')