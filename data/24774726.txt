Item(by='deepstack', descendants=None, kids=None, score=None, time=1602667330, title=None, item_type='comment', url=None, parent=24773555, text='&gt;Has anybody legitimately had good experiences with microservices these days? Especially if you&#x27;re not starting with a monolith that has done well? My experience at several companies, several projects, has been that what was actually just a poorly built, inflexible, monolithic application becomes a poorly built, distributed, networked, polyglot application that is now 100x less flexible. Sure you can reimplement any microservice interface any time you want and drop in the replacement, but good luck figuring out where that was being called and how many unique and interesting ways it might break if you don&#x27;t implement the edge cases in the same way.<p>It depends on the team.  If there is a large team, then yes micro-services could be a good choice.  It is not  silver bullet. In the end it comes down the the quality of developers.  With a group of good quality developers then a good product can be build with micro-services or monolith. With functional programming or OO or declarative.<p>Stop using marketing people who uses buzz word without understanding underling tech.')