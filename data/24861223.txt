Item(by='michelpp', descendants=None, kids=[24861703], score=None, time=1603390270, title=None, item_type='comment', url=None, parent=24861087, text='&gt; They can absolutely have meanings assigned outside the usual &quot;when multiplied by a vector&quot; type of calculations. For example the &quot;adjacency matrix&quot; representation of a graph is very often never multiplied by a vector even in academic algorithm descriptions.<p>Not disputing your basic point, but I&#x27;m not sure &quot;very often never&quot; is entirely accurate. In the GraphBLAS API vector&#x2F;matrix and matrix&#x2F;vector multiplication is key for almost all algorithms that depend on breadth first search, this is because matrix&#x2F;vector multiplication <i>is</i> a single step in a BFS which is the core operation of the GraphBLAS. The vector is typically used to hold the current frontier (and mask).  See the &quot;Shortest Path Lengths&quot; example here:<p><a href="https:&#x2F;&#x2F;github.com&#x2F;michelp&#x2F;pygraphblas&#x2F;blob&#x2F;master&#x2F;pygraphblas&#x2F;demo&#x2F;Introduction-to-GraphBLAS-with-Python.ipynb" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;michelp&#x2F;pygraphblas&#x2F;blob&#x2F;master&#x2F;pygraphbl...</a><p>(disclosure, I am the pygraphblas author).<p>&gt;  Purist test: aren&#x27;t vectors just Nx1 matrices?<p>I like it.  :)  As an interesting point, the GraphBLAS defines both Matrix and Vector types, but internally in the SuiteSparse implementation, they are all just unified into one type and yes, vectors are Nx1 or 1xN.')