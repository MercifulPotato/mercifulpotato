Item(by='marcosdumay', descendants=None, kids=None, score=None, time=1611163867, title=None, item_type='comment', url=None, parent=25845583, text='&gt; But that is sometimes the wrong design.<p>I&#x27;d say that&#x27;s <i>always</i> the wrong design, with a few exceptions that people can expect to find only a few times on their careers.<p>The entire point of exceptions was to pop the errors up on the stack until you get into a level where you can treat them. The entire reason they were created was because C-style error handling consists nearly all of code popping the errors up, what made C code very hard to read. The great revolution of error handling monads was that they made popping the errors up not require extra code, thus getting the same advantage as exceptions.<p>Nowadays I suspecct exception hierarchies was a mistake, and that the only reasonable way to have exceptions is to have them explicit. The monadic handling normally does not copy this hierarchy and is always explicit, what makes pokemon handlers something people must go out of their way to create, instead of being the only reliable way to catch them. But going back to the C-style isn&#x27;t even only reverting minor gains and keeping the large ones, the large gain is handling the errors on the correct place, that Go throws away, the minor gains are verifying things at compile time and making sure the developer knows what errors he is dealing with, that Go takes a modern take.')