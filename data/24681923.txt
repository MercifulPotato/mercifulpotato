Item(by='noen', descendants=None, kids=None, score=None, time=1601842334, title=None, item_type='comment', url=None, parent=24681128, text='Quite simply, this isn&#x27;t low latency.<p>The way you drop latency is by reducing or eliminating buffers, that&#x27;s pretty much it.<p>There&#x27;s a trade-off with h264 and hevc&#x2F;265, as with most video codecs - the larger the buffer you have, the more delta frames you can have between key frames.<p>This means lower bandwidth and better compression.<p>So it&#x27;s a constant struggle between compression and latency.<p>The lowest latency that webrtc can get is about 4ms one way, 8ms round trip, at least based on the project I started to do realtime steaming with <a href="https:&#x2F;&#x2F;github.com&#x2F;3DStreamingToolkit&#x2F;3DStreamingToolkit" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;3DStreamingToolkit&#x2F;3DStreamingToolkit</a><p>We proved you could do round trip times in the real world from cloud to customer in under 25ms.<p>But it comes with a lot of tradeoffs and cost and complexity to make it work.<p>Google Stadia fundamentally uses webrtc under the covers, although they use QUIC instead of TCP&#x2F;ICE.<p>If you ripped out all of the congestion management from the video engine in webrtc, you&#x27;d reduce another several ms roundtrip at the cost of basically no network resilience.')