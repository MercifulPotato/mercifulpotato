Item(by='hhas01', descendants=None, kids=[24937273, 24924336, 24923589], score=None, time=1603913436, title=None, item_type='comment', url=None, parent=24922247, text='20% faster is nothing. You want at least a magnitude faster to justify the cost and risk of switching.<p>The Python language is already 30 years old, and it wasn’t even the cutting-edge in imperative language design (&lt;koff&gt;Smalltalk, Lisp&lt;&#x2F;koff&gt;) back then. It’s positively antiquated now.<p>I’ve never understood this tunnel-vision obsession with endlessly chasing ever-diminishing returns. It’s Zawinski&#x27;s Law of Software by way of Greenspun’s Tenth Rule, and a fundamental failure of courage.<p>Learn the lessons from both the good <i>and</i> bad of what’s been done before, and move on. A better long-term answer would be to design a much faster, more efficient language for running Numpy, Scikit, and Tensorflow, then port those libraries over to that. If that language turns out to be good for other things too, then great. If not, let a thousand flowers bloom.<p>There is a much larger learning opportunity here, to get a whole lot better at migrating extant code bases from an old, popular, dead-ended language to a new, upcoming one. But it’s like finding your way to Carnegie Hall: it takes practise, practise, practise.')