Item(by='dathinab', descendants=None, kids=None, score=None, time=1608304250, title=None, item_type='comment', url=None, parent=25467070, text='Think about it if even JSON which is kinda simple has that many problems with parsers how likely is it that something multiple degrees of complexity higher which wasn&#x27;t developed with untrusted database fiels in mind is secure?<p>Besides that the large majority of thinks tested in your link are irrelevant for the security in this use-case. They do matter if you need fully stable de- and re-serialization or e.g. have a fully trusted validator. E.g. for certain security token use-cases it matters. Many of the thinks which are marked as failure could even be considered as a &quot;more robust&quot; or &quot;more secure&quot; (through not fully standard conform) parser. E.g. parsing tailing commas (disallowed by JSON), rejecting certain unescaped control&#x2F;special characters (which JSON allows), rejecting to long field values (which JSON allows) or similar. What matters is that a) it has a protection about to deep recursion and as such no stack overflow can happen, b) it makes sure the text it outputs is correctly encoded (independent of weather or not it was well-formed in the JSON blob) and c) it doesn&#x27;t crash in a way which leads to security problems (which the test suite you linked doesn&#x27;t differentiate from &quot;acceptable&quot; crashes).')