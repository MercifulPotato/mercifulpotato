Item(by='jeswin', descendants=None, kids=[25796791, 25796991, 25797052, 25797055, 25798029], score=None, time=1610745605, title=None, item_type='comment', url=None, parent=25796524, text='&gt; What should a developer do that needs to share state across a Forgo app?<p>We already have many facilities in JS to handle state. Singleton patterns, closures etc. The example on the website uses closures to handle component state - which is  simpler than React&#x27;s hooks based approach.<p><pre><code>  function SimpleTimer() {\n    let seconds = 0; &#x2F;&#x2F; Just a plain variable\n\n    return {\n      render(props, args) {\n        setTimeout(() =&gt; {\n          seconds++;\n          rerender(args.element); &#x2F;&#x2F; rerender!\n        }, 1000);\n  \n        return &lt;div&gt;{seconds} secs have elapsed...&lt;&#x2F;div&gt;;\n      },\n    };\n  }\n</code></pre>\n&gt; I don&#x27;t consider reducers, actions, redux&#x2F;flux to be React specific<p>They didn&#x27;t emerge from React - but it isn&#x27;t possible to do React without them. When I conduct trainings, I often see some of my students go - wow, why would you do that? So Forgo basically is an exploration of how to simplify things - and to let users pick their desired level of complexity.')