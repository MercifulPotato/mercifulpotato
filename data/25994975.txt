Item(by='nojvek', descendants=None, kids=None, score=None, time=1612218487, title=None, item_type='comment', url=None, parent=25990400, text='I think there are two separate aspects that get conflated into one.<p>1) Document database - rather than a strict rigid schema, you can store nested json documents in tables&#x2F;collections. Or the idea of soft schema where the whole database doesn&#x27;t need to be blocked for a schema change and you have some leeway in integrity.<p>2) Relational database - Ability to make complex sql queries that join data from multiple tables.<p>Mongodb has some support for joining but it doesn&#x27;t have a sql variant. If your data is mostly key:val store then it&#x27;s great. You can shard it, and have replicas. It&#x27;s easy to make a fast reliable backend with mongodb. Many popular sites run on mongodb backend.<p>However with new json types in MySQL and Postgres, it too has support for inserting documents and querying subkeys. It can be sharded and replicated (albeit with a bit more configuration).<p>Couchbase which is like mongo (in its document store capabilities) N1QL which offers agility of SQL and flexibility of JSON.<p>So like any tool, it has it&#x27;s tradeoffs.<p>Then again kudus to the author for evoking our reptillian brains: &quot;Never use MongoDB&quot; incites emotions and gets you on top of HN. If it was called &quot;When to use MongoDB&quot;, it wouldn&#x27;t get the same reaction.')