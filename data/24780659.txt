Item(by='ddragon', descendants=None, kids=[24780725], score=None, time=1602704429, title=None, item_type='comment', url=None, parent=24780062, text='Non homoiconic languages (Elixir, Julia) usually use quote&#x2F;unquote syntax, with quote being a construct that transforms code to AST and unquote evaluates an AST. For example in elixir:<p><pre><code>  a = 3\n  quote do\n    if unquote(a) &gt; 3 do\n      6\n    end\n  end\n</code></pre>\nWhich produces:\n{:if, [context: Elixir, import: Kernel],\n [{:&gt;, [context: Elixir, import: Kernel], [4, 3]}, [do: 6]]}<p>In Elixir and Julia the AST is represented by a normal type within the language itself just like Lisp, so the macro can just receive that type, manipulate it with the base language tools or using the special syntax above and return it.')