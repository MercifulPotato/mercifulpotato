Item(by='ahachete', descendants=None, kids=None, score=None, time=1602328521, title=None, item_type='comment', url=None, parent=24735788, text='I agree. I normally recommend multiplying the number of cores by a 2-5x factor, and then dividing all that by a subjective &quot;% utilization of the connection&quot;, which is obviously a value lower than 1 and results in an increased value for max_connections.<p>This % of utilization accounts for factors like the session not sending back-to-back queries, the io_wait on the server, which is turn potentially derived by the speed of your I&#x2F;O subsystem, etc.<p>However, I&#x27;d also advise to only look at the TPS peak as the optimal point. That is indeed typically achieved at high connection numbers. Postgres is reasonably good at managing large number of connections, in terms of throughput. However, latency may go to the roof.<p>So to find the peak more latency than tps needs to be considered IMO (or, obviously, both).')