Item(by='lmm', descendants=None, kids=None, score=None, time=1607568737, title=None, item_type='comment', url=None, parent=25361076, text='It&#x27;s very much related. You have one item in stock. Two users see the item as available in their browsers and click &quot;buy now&quot;. That&#x27;s the problem that you actually have to solve, and database transactions don&#x27;t help you solve it: whether you&#x27;re using a transactional datastore or not you have to do pretty much the same thing when the user clicks &quot;buy now&quot;: issue an attempt to buy it, wait for that attempt to be confirmed&#x2F;denied, and handle both cases.<p>And once you&#x27;ve solved that problem you don&#x27;t need or want ACID transactions because they don&#x27;t actually do anything for you. Order confirmation emails have the same problem as the browser: you can&#x27;t (or at least shouldn&#x27;t) actually hold a database-level transaction open while you connect to an email server, so you have to do something like recording a queue of email confirmations that are ready to be sent - exactly the same thing you do when using Kafka.')