Item(by='cultofmetatron', descendants=None, kids=None, score=None, time=1607009334, title=None, item_type='comment', url=None, parent=25273114, text='<a href="https:&#x2F;&#x2F;aws.amazon.com&#x2F;rds&#x2F;aurora&#x2F;?aurora-whats-new.sort-by=item.additionalFields.postDateTime&amp;aurora-whats-new.sort-order=desc" rel="nofollow">https:&#x2F;&#x2F;aws.amazon.com&#x2F;rds&#x2F;aurora&#x2F;?aurora-whats-new.sort-by=...</a><p><a href="https:&#x2F;&#x2F;www.heroku.com&#x2F;postgres" rel="nofollow">https:&#x2F;&#x2F;www.heroku.com&#x2F;postgres</a><p><a href="https:&#x2F;&#x2F;cloud.google.com&#x2F;sql&#x2F;docs&#x2F;postgres&#x2F;" rel="nofollow">https:&#x2F;&#x2F;cloud.google.com&#x2F;sql&#x2F;docs&#x2F;postgres&#x2F;</a><p>With all due respect, &quot; they choose it because it&#x27;s trivial to integrate&quot; is a terrible reason for choosing a technology. Anyone choosing a database should be doing so based on the following.<p>1. does the insertion and querying mechanisms support the requirements of my app?\n2. is it scalable? (ie first few thousand users, beyond that and any tech you pick is going to run into issues without a dedicated strategy)\n3. can I afford it? (in terms of maintenance as well as licensing)<p>Postgres (and mysql) has plenty of standard tooling for integrating into your app and is no where near as limited. I would not take an engineer proposing firebase without making a STRONG logical case for why its the best choice as someone who&#x27;s graduated out of junior status.<p>Then again, fixing messes caused by such engineers for several startups that started with firebase because its the easiest to get started with PAID for my galavanting around southeast Asia last year so I won&#x27;t wag my finger too hard.')