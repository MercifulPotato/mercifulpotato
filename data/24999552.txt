Item(by='Jtsummers', descendants=None, kids=[25000844, 25000841], score=None, time=1604593661, title=None, item_type='comment', url=None, parent=24999359, text='Whenever I make a desktop application, this has been my strategy and it&#x27;s usually been effective. Create a library for the core logic and various CLIs using the library to expose functionality (also helpful for creating automated tests of larger chunks of functionality). Then create a GUI that essentially wraps those same features in a pretty presentation and (hopefully) intuitive interface.<p>Not everyone has liked my approach, though. And some managers have scrapped it even though the users (usually these are internal tools, so our teammates) liked it.<p>Another advantage of this style is that, for me at least, I tend to get a better design out of the system which makes that &quot;library&quot; portion more reusable. In theory, that CLI tool can become a GUI or become a server application as well without having to change the core code. But many people (and I sometimes fall victim to this as well) when making a GUI integrate the business logic too tightly with the GUI code (the same with web services). Something about making a CLI makes it easier for me and many people I&#x27;ve worked with to make a clearer delineation between the core logic and the interface logic. Perhaps because we <i>know</i> the CLI isn&#x27;t the final or only presentation.')