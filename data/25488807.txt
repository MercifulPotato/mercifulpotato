Item(by='Ace17', descendants=None, kids=[25489234, 25492490, 25490989, 25490850], score=None, time=1608492177, title=None, item_type='comment', url=None, parent=25485679, text='```\nIn this sense, the lock in lock-free does not refer directly to mutexes, but rather to the possibility of “locking up” the entire application in some way, whether it’s deadlock, livelock – or even due to hypothetical thread scheduling decisions made by your worst enemy. That last point sounds funny, but it’s key. Shared mutexes are ruled out trivially, because as soon as one thread obtains the mutex, your worst enemy could simply never schedule that thread again.<p>[...]<p>A final precision: Operations that are designed to block do not disqualify the algorithm. For example, a queue’s pop operation may intentionally block when the queue is empty. The remaining codepaths can still be considered lock-free.\n```<p>I don&#x27;t get it ; how could &quot;locking a mutex&quot; not be considered as an &quot;operation that are designed to block&quot; ?<p>Would somebody be kind enough to tell me what am I missing here? Thanks !')