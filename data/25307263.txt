Item(by='CivBase', descendants=None, kids=[25310261], score=None, time=1607113205, title=None, item_type='comment', url=None, parent=25306071, text='&gt; 1&#x2F;3 of the code every software project is irrelevant, buggy, overly complicated, or simply sucks. It has a reason to be where it is, but chances are, one year down the road, it will become a liability. Being dogmatic about tests and covering every line will only make it more difficult to get rid of it.<p>If you have <i>actually</i> tested every line of code with your test suite (not the same as &quot;covering&quot; every line), then your code better not be irrelevant, buggy, or simply suck.  That is the sort of thing you are supposed to uncover and fix as part of the whitebox test development process.  If your covered code is that bad, you either haven&#x27;t actually <i>tested</i> the code or you have completely missed the point of software verification.<p>Code coverage can be a very misleading metric.  I have to clarify the difference between &quot;tested&quot; and &quot;covered&quot; code to coworkers and management all the time.  In the same way that &quot;standard lines of code&quot; is an insufficient measurement of complexity or development effort, &quot;coverage&quot; is an insufficient measurement of test quality.  However, it can still help with ballpark estimates.<p><i>Uncovered</i> code is actually a much more useful metric, IMO.  You can cover code without testing it, but there is no way you could have tested uncovered code.<p>I think the point the author should be making here is that not every app needs to be 100% tested.')