Item(by='acdha', descendants=None, kids=None, score=None, time=1610896697, title=None, item_type='comment', url=None, parent=25811179, text='Yes. Switching context is expensive for humans and modern editors mean you do it less frequently and with fewer conventions to learn. A big one for general editors is that they work for everything: you can build, lint, debug, refactor, etc. using the same UI for every language which reduces the frictional cost significantly in fields like web development. Having code-aware auto completion, function signatures, and type validation is especially good here since you waste a fraction of the time realizing that you were omitting an argument by mistake or passing the wrong type – especially when that isn’t something which a quick compile check will tell you.<p>Refactoring is a good example: I’ve noticed that most programmers who don’t use advanced editors avoid fixing things which require analysis because it’s tedious to do right. That leads to accumulated technical debt over time with variables or methods having now-inaccurate names, etc. Nothing critical but a frictional cost which goes down when you have easy tools to perform language-aware refactoring (e.g. replacing a name in a function but not the same name used elsewhere in the same file).')