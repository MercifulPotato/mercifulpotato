Item(by='richieartoul', descendants=None, kids=[24675210, 24677992], score=None, time=1601764710, title=None, item_type='comment', url=None, parent=24672818, text='Go is not nearly as slow as you&#x27;re making it seem to be, I dont know what the authors implementation was doing, but this code runs at a rate of 7GiB&#x2F;s&#x2F;core on my laptop<p><pre><code>  func BenchmarkFindMax(b *testing.B) {\n   ints := make([]int32, 13*1000*100)\n   for i := 0; i &lt; len(ints); i++ {\n    ints[i] = rand.Int31()\n   }\n\n    for i := 0; i &lt; b.N; i++ {\n      max := int32(math.MinInt32)\n      for _, x := range ints {\n        if x &gt; max {\n          max = x\n        }\n      }\n      dontOptimize = max\n   }\n\n   b.ReportMetric(float64(b.N*len(ints)*4&#x2F;1000&#x2F;1000&#x2F;1000), \n  &quot;GiB&#x2F;s&quot;)\n  }\n\n\n  goos: darwin\n  goarch: amd64\n  BenchmarkFindMax-8  1530   678975 ns&#x2F;op   7.00 GiB&#x2F;s\n\n</code></pre>\nEDIT: Actually my original code was reporting the metric wrong, it should have been:<p>b.ReportMetric(float64(b.N)<i>float64(len(ints))</i>4&#x2F;1000&#x2F;1000&#x2F;1000, &quot;GiB&#x2F;s&quot;)<p>which leads to 9-10GiB&#x2F;s on my laptop')