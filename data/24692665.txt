Item(by='notdonspaulding', descendants=None, kids=None, score=None, time=1601936207, title=None, item_type='comment', url=None, parent=24690017, text='This.<p>I can&#x27;t figure out how to explain to Junior Devs (who have only ever known git), that they have a concept of a branch in their head that doesn&#x27;t match the concept their tool of choice is giving them.<p>We talk about &quot;branches&quot; as logical sets of changes.  We give them meaningful names, we construct the concept of Pull Requests and code reviews around the concept of a branch.  We later refer to Feature X as having landed in master from branch Y. But git doesn&#x27;t have any of those semantics.  It has lots of ways of dealing with commits, and a facade of a branching model is just one more way of dealing with commits.  Branches are not a first-class concept in git. \n And certainly not like they are in our minds.<p>However, git is amazing at what it does!  And if I was running the world&#x27;s most popular OS kernel development team and was expecting to receive hundreds of patches a day via email from developers in whom I have limited trust, I would definitely start with git&#x27;s model and change the way my brain works to match its semantics.<p>Instead, I find myself on a small team of high-trust coworkers who all talk about branches as if they really exist in our git history, and somehow I&#x27;m the crazy one for pointing out that every time we hit a problem with this mismatch the fact that we&#x27;re using git is the reason that we can&#x27;t have nice things.')