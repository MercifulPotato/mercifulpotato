Item(by='quickthrower2', descendants=None, kids=[24955776], score=None, time=1604182369, title=None, item_type='comment', url=None, parent=24955368, text='And also what is an &#x27;object&#x27;?<p>Haskell has a decent system for building up complex data structures. You can write functions for those. Those data structures + those functions are kind of &quot;an object&quot; from the OO world (data + methods).<p>The differences are:<p>* Inheritance - well Haskell has many kinds of polymorphism so it doesn&#x27;t need it.<p>* Hiding data - well Haskell can hide data using smart constructors, you don&#x27;t need an explicit private keyword<p>* Interfaces - covered by typeclasses but they do a lot more!<p>Also without any of the above you can create object-like things with just closures. If a scope has access to 3 variables in scope, it&#x27;s &quot;kinda&quot; like an OO object with 3 member variables. You can create new scopes in a for loop, which is like creating many new object. It&#x27;s a stretch but the underlying concept of something owning other things is still there.')