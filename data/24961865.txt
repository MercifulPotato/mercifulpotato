Item(by='strstr', descendants=None, kids=None, score=None, time=1604259279, title=None, item_type='comment', url=None, parent=24949983, text='The KVM example is sort of weird to me: the goal of that code inside KVM is to provide a comparatively &quot;easy&quot; interface for creating VMs on multiple architectures. The code isn&#x27;t particularly motivating if you don&#x27;t see how it&#x27;s used.<p>Until you get pretty deep into the weeds, none of KVM&#x27;s code can actually do anything architecturally specific, since all of the glue code is architecturally agnostic. KVM supports a ton of architectures, intel-x86&#x2F;amd-x86&#x2F;armv<i>&#x2F;s390&#x2F;risc-v&#x2F;...<p>On top of that, KVM tries to avoid having extra ioctls (essentially KVM syscalls). A lot of the ioctls are so flexible that they don&#x27;t really tell you anything about what a CPU </i>should* look like. The ioctls let you create a VM that is in essentially any valid state a CPU could reach (since VMs need to be migratable).<p>Take a look at the sample code in the rust kvm-ioctls crate [1] and you&#x27;ll see what defines a VM.<p>1) Open the KVM fd for access to the ioctls.<p>2) Make the VM fd.<p>3) Make guest RAM, and shove the asm from up above into it.<p>4) Make a vCPU.<p>5) Initialize the registers for the vCPU.<p>6) Run the VM, and handle the exits (KVM sometimes can&#x27;t handle what the VM is doing and returns to usermode to have them deal with it. Think device emulation).<p>This avoids initializing a lot of state for the VM, but it&#x27;s enough to run it. Notable details are things like CPUID (supported cpu features for the VM), the Interrupt Descriptor Table, and the control registers. If this VM took an exception&#x2F;interrupt right now, it would immediately triple fault. This sample VM is running in &quot;real mode&quot; (16-bit unpaged mode).<p>[1] <a href="https:&#x2F;&#x2F;github.com&#x2F;rust-vmm&#x2F;kvm-ioctls&#x2F;blob&#x2F;master&#x2F;src&#x2F;lib.rs" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;rust-vmm&#x2F;kvm-ioctls&#x2F;blob&#x2F;master&#x2F;src&#x2F;lib.r...</a>')