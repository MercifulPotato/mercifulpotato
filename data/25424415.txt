Item(by='outworlder', descendants=None, kids=[25427225], score=None, time=1607986096, title=None, item_type='comment', url=None, parent=25422865, text='&gt;  Just rewrite the machine code to jump over the check<p>Sure. It&#x27;s even easier today: not only we have specialized software for cracking things, but we can even dump the memory contents and inspect them, patch up while the program is paused, and then rewind and try again from the same location. If we mess up, we can quite easily restart, just run the program again from our fast NVME drives(it will probably come straight from the OS cache). Heck, in some cases we can &quot;fuzz&quot; the program and let the computer try to figure out the winning combination! We can do this in parallel with our multiple cores.<p>Now think about the context back in the day. For the most part, people were trying to crack the copy protection using the same machine that ran the software. In the case of the BBC Micro, you could have anywhere from 16 to 128KB, depending on the model. In that era, it was often the case that you couldn&#x27;t even run a debugger, because it wouldn&#x27;t fit alongside the program you were debugging. And even if you could, their capabilities were nowhere close to what we have today and - depending on the hardware - some breakpoints you couldn&#x27;t even reach (inside code that disabled interruptions - which was often the case for software that accesses disks).<p>It could be incredibly hard to find exactly what &quot;jump&quot; you had to change. If you messed up, this could mean a machine lockup. Now you have to reboot and load your stuff again from slow floppy media.<p>It was difficult.')