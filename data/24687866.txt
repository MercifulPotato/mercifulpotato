Item(by='hakre', descendants=None, kids=None, score=None, time=1601906892, title=None, item_type='comment', url=None, parent=24687407, text='The author argues DO is in favour to reduce complexity, but also notes on the prices of it and reminds that it&#x27;s in the eye of the beholder to decide whether or not it is of benefit.<p>Many of the early PHP applications were written in a style using generic data structures (array that is in PHP) having functions dealing with all these.<p>There is no free lunch.<p>If you already have domains you can model in, the strategy to reduce complexity is perhaps more from the DDD book which looks like a higher level concept to me and therefore may be more fitting for higher complexity levels.<p>(but again, one for sure can shoot in her own foot with DDD as well)<p>What I like about the DO thing is it maps well on simple REST APIs sending and receiving JSON text. Quite popular these days to say the least if not mentioning Serverless.<p>A similar trend can also be seen in structural logging.<p>These systems are often distributed and complex.<p>As it bothers you in your case, I would tend to say, it&#x27;s better to stick to a domain if there is one. Across boundaries of domains, values to emit and receive data can work out very well though I can imagine. As so often, it depends.')