Item(by='acoard', descendants=None, kids=[24910520], score=None, time=1603823315, title=None, item_type='comment', url=None, parent=24909454, text='You&#x27;re totally right.  Apparently this on the Nextjs team&#x27;s radar though:<p>&gt;Up next, we will be working on a supplemental RFC to address two additional incremental static generation capabilities:<p>&gt; - Re-generating and invalidating multiple pages at once (like your blog index and a certain blog post)<p>&gt; - Re-generating by listening to events (like CMS webhooks), ahead of user traffic<p>Source: <a href="https:&#x2F;&#x2F;nextjs.org&#x2F;blog&#x2F;next-9-5#stable-incremental-static-regeneration" rel="nofollow">https:&#x2F;&#x2F;nextjs.org&#x2F;blog&#x2F;next-9-5#stable-incremental-static-r...</a><p>But yeah,  if you have 10k pages it seems unavoidable to me that initial build time will be high.  With `fallback: &#x27;blocking` you could decide to  build each page at runtime when it is requested for the first time â€“ this spreads out initial build time.<p>What would be nice is being able to re-use compiled pages across builds. Imagine having 10k pages compiled, and you have to push out a new build that only updates 5 pages, or none at all (eg an API change).   It would be nice if it could make  use  of the compiled pages from the previous build, only re-compiling the pages that needed it.  Of course the devil is in the details, and figuring out which pages need to be re-compiled basically requires you re-building the pages.')