Item(by='lucb1e', descendants=None, kids=None, score=None, time=1607901417, title=None, item_type='comment', url=None, parent=25411092, text='Indeed, I would not recommend disabling q unless you know what it does and tried it a few times.<p>For a quick demo, try it on this file:<p><pre><code>    hello world!\n    here&#x27;s wolves\n    what&#x27;s up with the hackers?\n</code></pre>\nGo to the first line and do:<p><pre><code>    1. qq starts a macro named &#x27;q&#x27;\n    2. $vbgUj select last word on line, uppercase it, go down one line\n    3. q to end macro recording\n    4. @q run the macro\n    4b. @@ repeats the last macro\n    4c. 100@q runs the macro 100 times\n</code></pre>\nWhen you want to do multi-line edits and the columns are not aligned (so block mode, Ctrl+V, doesn&#x27;t work), this works wonders. You just record whatever you would do on every line plus whatever motions you use to go to the next occurrence, using things like &quot;f|&quot; (find the next pipe symbol) or &quot;&#x2F;example&lt;Esc&gt;n&quot; (find the next instance of &quot;example&quot;), and then run the macro however many times. If you specify a number of times greater than the file is large, it will automatically stop at end of file, and you can also cancel if it takes too long (Ctrl+C) and undo what it did so far (u).<p>Alternatively, sed -i s&#x2F;a&#x2F;b&#x2F; my.txt is much much faster than macros, but macros can be more complex and are often easier to record (since you&#x27;re just showing the computer what to do in a human way) than trying to regex the line.<p>I tried recording it for the lazy but asciinema is having issues (server error when uploading).')