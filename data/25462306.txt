Item(by='kazinator', descendants=None, kids=[25463851], score=None, time=1608250962, title=None, item_type='comment', url=None, parent=25459846, text='I don&#x27;t think I would ever write code where a file argument to a parse-file would be null, even if that is possible.<p>A null instead of a file could occur if there is some API to open a file which returns null. That should be throwing something instead of returning a value that might not be handled.<p>If I did have some object which either holds an open file or else a nil to indicate there is no open file right now, I would carefully guard that this nil does not escape; i.e. that it&#x27;s never passed into any functions that cannot work without a file, such as parse-file. All methods of that object which deal with that file have to have conditionals for the situations when it&#x27;s missing.<p>Once parse-file has received nil instead of a file, it&#x27;s game over. It might as well not even bother checking. The only reason to check for a nil in parse-file is if we can provide a better diagnostic for the situation compared to letting a lower level file I&#x2F;O routine produce the error.<p>Checking for null at higher levels is a bad habit from C. In C, lower level API&#x27;s and library functions often don&#x27;t check for null pointers: they just dereference them or crash. A C version of parse_file has to check for a null stream, because getc(stream) will crash miserably.')