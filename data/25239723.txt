Item(by='bewuethr', descendants=None, kids=None, score=None, time=1606590981, title=None, item_type='comment', url=None, parent=25235450, text='A few things that stood out to me:<p>Apart from the &quot;goto&quot; command and a different &quot;if&quot; statement syntax, all of the examples would run in a modern Bash shell; not much has changed fundamentally.<p>There seem to be no comments, and the argument for the no-op &quot;:&quot; is used for this purpose instead.<p>Using the argument of &quot;:&quot; as the label for the &quot;goto&quot; command reminded me of sed, which does exactly the same (and probably was influenced by it):<p><pre><code>    sed &#x27;: label\n         s&#x2F;x&#x2F;y&#x2F;\n         &#x2F;x&#x2F;b label&#x27;\n</code></pre>\nloops over the &quot;s&#x2F;x&#x2F;y&#x2F;&quot; command until the pattern space doesn&#x27;t match &quot;&#x2F;x&#x2F;&quot; any longer. (Just for illustration - this could be replaced by a single global substitution, of course.)<p>&quot;goto&quot; and labels are also the replacement for all the looping constructs we&#x27;re used to today.<p>The differentiation between source&#x2F;filter&#x2F;sink types of programs makes so much sense, and while maybe obvious, I&#x27;ve never seen it described this clearly. Descriptions of the composability of Unix programs often focus on the filter aspect of programs.')