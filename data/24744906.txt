Item(by='olejorgenb', descendants=None, kids=None, score=None, time=1602413243, title=None, item_type='comment', url=None, parent=24744557, text='x, y, z, t is not the suggested alternative. leftBottom, rightBottom, was clearly the intended alternative. A &quot;Length&quot; suffix could be added to make it clear it&#x27;s not coordinates, but I think it&#x27;s better to encode this into the struct naming:<p><pre><code>    struct BoxDimensions {\n        topLeft, topRight, bottomLeft, bottomRight\n    }\n</code></pre>\nIn code working with these objects it&#x27;s likely both obvious and <i>necessary</i> to know that the code works with dimensions. Ie.: being reminded of this each time you encounter a variable it just noise.<p>Code with longer names are harder to scan.<p><pre><code>   boxDim.measurementOfLeftBottomSideOfBox - boxDim.measurementOfRightBottomSideOfBox\n</code></pre>\nvs<p><pre><code>   boxDim.bottomLeft - boxDim.bottomRight\n</code></pre>\nThe second only need a glance, the first you have to read&#x2F;scan multiple times to dig out which delta it is.<p>If it&#x27;s important to distinguish between measurements and true values it would be better to encode this in the struct variable name. Having distinct types for measurements and true value would be a hassle no?<p><pre><code>    trueBox.bottomLeft - measuredBox.bottomLeft\n</code></pre>\nvs<p><pre><code>    trueBox.trueLengthOfBottomLeftSideOfBox - measuredBox.measurementOfBottomLeftSideOfBox\n</code></pre>\nThe second one is just exhausting to me at least.')