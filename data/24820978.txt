Item(by='antonvs', descendants=None, kids=[24821405], score=None, time=1603053787, title=None, item_type='comment', url=None, parent=24815994, text='What do you think &quot;objective&quot; means?<p>The comparative approach I mentioned can be used to eliminate personal feelings about such issues - not in all cases (types might be an example), but certainly in some.<p>Many users of Javascript, including myself, recognize that it has many weaknesses. There&#x27;s even a book that acknowledges this in its title: &quot;Javascript: The Good Parts.&quot;<p>Denying this seems to be denying objective reality.<p>You may be confusing &quot;objective&quot; with &quot;universal,&quot; thinking that I&#x27;m claiming some unsituated universal truth. But that&#x27;s not the case. Any statement is only ever true within some context - the language that defines it, the semantics of the statement, the premises that it assumes.<p>In this case, there is a shared context that crosses programming languages, that allows us in at least some cases to draw objective conclusion about programming language features. &quot;The bad parts&quot; implied by Crockford&#x27;s title includes many such features. We can examine them and conclude that while they might have some historical rationale, that they are not good features for a programming language to have.<p>In many cases this conclusion is possible because there&#x27;s simply no good justification - the title of this post is an example. Having all numbers be floating point has many negative consequences and no significant positive ones - the only reason for it is historical. Such features end up having consequences, such as on the design of hardware like ARM chips. That is an objectively terrible outcome.<p>You can of course quibble with such a statement, based on a rigid application of a simplistic set of definitions. But you&#x27;d do better to try to understand the truth conveyed by such a statement.')