Item(by='dheera', descendants=None, kids=None, score=None, time=1611219121, title=None, item_type='comment', url=None, parent=25856439, text='Personally I <i>really</i> like the following boards for general projects:<p>- FeatherS2 (runs CircuitPython): <a href="https:&#x2F;&#x2F;unexpectedmaker.com&#x2F;shop&#x2F;feathers2-esp32-s2" rel="nofollow">https:&#x2F;&#x2F;unexpectedmaker.com&#x2F;shop&#x2F;feathers2-esp32-s2</a><p>- TinyPICO (runs MicroPython):\n<a href="https:&#x2F;&#x2F;www.tinypico.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.tinypico.com&#x2F;</a><p>They&#x27;re both designed by the same dude. I&#x27;m not affiliated with them, I&#x27;ve just tried dozens of microcontroller boards and these two are easily the winners in my book for versatility in hobby projects.<p>These boards are absolutely jam-packed with features (capacitive touch sensing, RGB indicator LED, Li-Po battery management, ...) but moreover support Bluetooth and Wi-Fi. That&#x27;s a major problem with the Pi Pico. You&#x27;ll end up with a mess easily 2-3 times the physical size of the Pico to get Wi-Fi on it in the form of HAT-like boards, whereas the above microcontrollers have everything on-board.<p>By the way, CircuitPython is for the most part a real pleasure to use. If you slap an Adafruit display on them, with about 4 lines of code you can have the Python interpreter&#x27;s STDOUT go straight to the display. The boards also emulate a USB drive that exposes all the Python code so you can program them with literally zero additional software.')