Item(by='alwillis', descendants=None, kids=[25301273], score=None, time=1607071785, title=None, item_type='comment', url=None, parent=25298435, text='Just read &quot;Why Is Apple’s M1 Chip So Fast?&quot; [1] to answer most of these questions.<p>I’ll just hit the obviously erroneous issues here.<p><i>A M1 chip has 16 billion transistors for 8 cores. AMD&#x27;s EPYC Rome has 39.54 billion transistors for 64 cores.</i><p>It doesn&#x27;t make sense to compare the M1 with the EPYC Rome. They couldn&#x27;t more different and were developed for dramatically different use cases.<p>(I also don&#x27;t think it&#x27;s not a good look when folks feel compelled to state Apple&#x27;s M1 isn&#x27;t as fast as AMD&#x27;s $4000 64-core processor, as if this means anything. Of course the EPYC Rome is faster--duh. Anyways…)<p>16 billion transistors on the M1 SoC (emphasis on <i>system</i>) gets you an 8-core GPU, a 16-core Neural Processor, a Digital Signal Processor, a Secure Enclave, image processing unit, video encoder&#x2F;decoder and of course 8 CPU cores and 8 or 16 Gb of memory.<p>Instruction decoders deal with the out of order execution of the instructions; more decoders enables you to have more instructions &quot;in flight&quot; as they say for the execution cores to run in parallel.<p>Again, you should read the article for the details, but due to the legacy architecture and technical debt of a 40 year-old instruction set, not to mention with instructions ranging in size from 1 to 15 bytes, it&#x27;s not easy for the decoders to juggle all of the instructions to do out of order execution of instructions. Yes, even the EPYC Rome only has 4 instruction decoders.<p>Meanwhile, the instructions for Apple&#x27;s Firestorm cores are all the same size, making decoding the instructions much easier and faster; so much so that the M1 has 8 decoders, which is unheard of in a mainstream processor.<p>Here&#x27;s the bottom line quote from the article:\n&quot;In fact, adding more causes so many other problems that four decoders according to AMD itself is basically an upper limit for how far they can go.\n<i>This is what allows the M1 Firestorm cores to essentially process twice as many instructions as AMD and Intel CPUs at the same clock frequency.</i>&quot;<p>Apple and AMD solved the &quot;get as many instructions in the pipeline as possible and process them as quickly as possible&quot; problem two different ways.<p>AMD does it with threading and many cores; Apple does it by increasing the number of instruction decoders and by having 60+ Gb&#x2F;s bandwidth with a 128-bit bus. Apple didn&#x27;t implement SMT because they don&#x27;t need it; they have no issues with keeping their instruction pipeline full.<p>Bottom line: Apple&#x27;s approach has more headroom than AMD&#x27;s approach. They can&#x27;t add more instruction decoders, so they crank up the clock speed and the threads to execute more instructions per clock cycle. But the M1 is so efficient, it processes twice as many instructions at the same clock frequency.<p>The M1 runs at 3.2 GHz; it&#x27;s got a higher ceiling because Apple can add more cores and increase the clock speed <i>a lot</i> before it gets anywhere near the power consumption and other physical limits that AMD is starting to run up against.<p>[1]: <a href="https:&#x2F;&#x2F;debugger.medium.com&#x2F;why-is-apples-m1-chip-so-fast-3262b158cba2" rel="nofollow">https:&#x2F;&#x2F;debugger.medium.com&#x2F;why-is-apples-m1-chip-so-fast-32...</a>')