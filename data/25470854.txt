Item(by='emmanueloga_', descendants=None, kids=[25471090], score=None, time=1608319462, title=None, item_type='comment', url=None, parent=25454175, text='When I first saw Statecharts I failed to realize that Statecharts are _NOT_ state machines, state machines are the building block.<p>Quote from the paper:<p>&quot;... a complex system cannot be beneficially described in this naive fashion [state machines], because of the unmanageable, exponentially growing\nmultitude of states, all of which have to be arranged in a ‘flat’ unstratified fashion,  resulting in an unstructured, unrealistic, and chaotic state diagram. To be useful, a state&#x2F;event approach must be modular, hierarchical and well-structured. It must also solve the exponential blow-up problem by somehow relaxing the requirement that all combinations of states have to be represented explicitly.&quot;<p>So regular state machines are usable up to only a few states and transitions. Implementing the whole set of Statecharts features is far from the quick exercise of building an ad-hoc, implicit state machine. Fully using Statecharts introduces some overhead. But the true power of Statecharts shows when using hierarchy, parallel states, history and so on, things that build on top of state machines and take a bit more investment to learn how to use.<p>--<p>Another interesting aspect is the &quot;formal semantics&quot;. Quote:<p>&quot;The statechart formalism turns out to be quite a challenge when it comes to providing formal semantics ... The main difficulty is not in the depth of states or the orthogonality constructs themselves; ... The more difficult problems arise with the introduction of events and conditions that are generated within the statechart itself, and are sensed in orthogonal components.&quot;<p>So the idea is that given the same Statechart diagrams, two different implementations should end up in the same states when subjected with the very same sequence of events.<p>Perhaps this is less of a problem to build GUIs and other applications that don&#x27;t have super stringent requirements on safety and verifiability.')