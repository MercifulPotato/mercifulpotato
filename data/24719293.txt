Item(by='eloff', descendants=None, kids=[24719810, 24719360], score=None, time=1602166899, title=None, item_type='comment', url=None, parent=24719203, text='Programming languages can be a very personal thing. But I will offer my perspective having used C++ extensively (both modern and awful), Go, Rust, a little Haskell and some 20 other languages in my two decades career.<p>Rust is one of the nicest languages out there. Very well thought out, elegant, full low-level control for real systems programming (sorry Go!) AWS uses it a lot, Microsoft is starting to use it.<p>Go, or even Python is better if you just want to make a backend API for a (web) app. You&#x27;ll be more productive with it over Rust because you have a GC and can ignore the whole ownership issue for the most part. Python for very small teams likely to stay small for a long time, Go otherwise.<p>C++ has come a long way, but it&#x27;s still hairy and loaded with footguns and baggage. I would only use it these days if I needed to use a big C++ library (like a game engine).<p>I am no longer willing to use Haskell, PHP, Perl, Java or JVM languages, .NET or anything else that&#x27;s not Go, Rust or Python. With the same caveat as C++ above. I pass over job postings that require them. That&#x27;s not saying those languages are bad, just that in my personal opinion there are better tools out there, and if I&#x27;m going to work with it day in and day out, it had better be in something at the top of my list - because life is short.')