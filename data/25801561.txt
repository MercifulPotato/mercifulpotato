Item(by='playing_colours', descendants=None, kids=None, score=None, time=1610796011, title=None, item_type='comment', url=None, parent=25800294, text='While I agree with you on unreasonable rush for microservices in many cases, I do not think a company must be on the FAANG-level scaling to justify microservices infrastructure.<p>Modularisation is an efficient tool to address growing complexity of software. The code is organised in closed subsystems - modules - that work together via communication with each other over defined interfaces: functions, REST endpoints, messaging system.<p>Modules can be done in monolith by enforcing boundaries and policies: namespaces, packages, agreements on communicating only via &quot;service&quot; classes, isolating database entities, no foreign keys between entities belonging to different modules, etc. It is so called &quot;modular monolith&quot;, and I believe it&#x27;s an efficient way to progress for organisations before jumping on microservices train.<p>Microservices are the next step of modularisation and isolation. By introducing independent deployment of the modules and isolated runtime for each module (different machine, VM, containers) they enable independent CI&#x2F;CD for the teams that helps to scale up the organisation and they help with isolating different pieces of software that have different technical requirements (traditional Web API with database calls, stream and batch data processing, etc.), different stability and change frequency.<p>While bringing a lot of additional concerns, requiring education and discipline, microservices are critical enablers for many companies to further grow their products and scale up the technical department.')