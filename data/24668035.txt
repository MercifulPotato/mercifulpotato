Item(by='developer2', descendants=None, kids=None, score=None, time=1601680851, title=None, item_type='comment', url=None, parent=24657747, text='Based on the specific example (hashing buckets for a hash map&#x2F;table)… just use a hashing function that uses a random seed per map&#x2F;table instance during hashing to prevent insertion attacks, eg. SipHash. This prevents an attacker from being able to purposely engineer the overloading of a single bucket with too many entries, allowing the implementer to use a standard linked list per bucket without worrying about external influences. <i>Then</i>, if you&#x27;re still worried about the one in a trillion chance that a single bucket receives too many entries… yeah, you&#x27;re over-engineering and wasting your own time, and the mental capacity of every developer who comes after you to try and understand your attempts to circumvent the problem in supposedly &quot;smarter&quot; ways.')