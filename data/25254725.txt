Item(by='Macha', descendants=None, kids=[25255287, 25255644, 25255380, 25255285], score=None, time=1606750100, title=None, item_type='comment', url=None, parent=25254518, text='The issue with Java exceptions is you get a lot of APIs that just &quot;throw IOException&quot; like this API to parse a JSON string [1]. Note that JsonParseException is a seperate exception and IOException mentions in the API docs that it&#x27;s caused by &quot;network errors or unexpected end of file&quot;, which is impossible here (missing close brackets are a JsonParseException).<p>It&#x27;s because some nested implementation detail API several layers done can take arbitrary streams, and the String based implementation is done by creating a stream for that string, but the stream api allows for IOExceptions in the case of streams from disk or network devices etc.<p>What reasonable recovery option is there then? You can swallow the exception, because it&#x27;s impossible for now, but your linter&#x2F;teammates will complain at you and it could change in future to be possible since it&#x27;s in the API contract. You could have your application re-raise the exception, propagating the problem further. Neither option is great.<p>[1]: <a href="https:&#x2F;&#x2F;fasterxml.github.io&#x2F;jackson-databind&#x2F;javadoc&#x2F;2.7&#x2F;com&#x2F;fasterxml&#x2F;jackson&#x2F;databind&#x2F;ObjectMapper.html#readValue(java.lang.String,%20java.lang.Class)" rel="nofollow">https:&#x2F;&#x2F;fasterxml.github.io&#x2F;jackson-databind&#x2F;javadoc&#x2F;2.7&#x2F;com...</a>')