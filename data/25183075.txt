Item(by='kazinator', descendants=None, kids=[25184712], score=None, time=1606098903, title=None, item_type='comment', url=None, parent=25181958, text='The hygiene problem has multiple aspects. One issue is that the user&#x27;s code can bind identifiers which the macro expansion expects to be predefined.<p>In a Lisp-1, we have to worry about this:<p><pre><code>  (let ((list ...))\n    (mac ...)) ;; expansion of mac wants to call (list ...)\n</code></pre>\nSince the macro is not defining anything (its expansion is not introducing a binding for list), the ordinary gensym approach is not applicable.<p>THe problem persists into a Lisp-2 like Common Lisp, in this form:<p><pre><code>  (flet ((list (...) ....)) ;; binding in function namespace\n     (mac ...))             ;; wants to use (list ...)\n\n</code></pre>\nSince local functions are rarer than local variables, and extra care can be taken in how hey are named, Lisp-2 mitigates the problem. Common Lisp goes a step further and makes it undefined behavior if code redefines a standard function (lexically or otherwise).<p>Hygienic macros solve this aspect of the issue as well. A hygienic (mac ...) can use (list ...) in its expansion. The hygiene mechanism ensures that this calls that list which is lexically visible at the macro definition (probably the global one in the library) even if the target site shadows list with its own definition.')