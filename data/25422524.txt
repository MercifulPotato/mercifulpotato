Item(by='hansvm', descendants=None, kids=None, score=None, time=1607976405, title=None, item_type='comment', url=None, parent=25420147, text='&gt; I can’t think of anything I might want to do really that won’t have me wanting to wait for the previous thing I was saying to Chrome to first complete.<p>That&#x27;s precisely the point. By using async&#x2F;await you can describe each of the things you want to do as a sequence of steps depending&#x2F;waiting on previous results, but at the places you&#x27;d have to pause anyway (waiting on chromium, a database, etc) you can clearly signal that the machine is free to do other things till it has your results. If you have other tasks you&#x27;d _also_ like to be doing then those can be similarly coded with async&#x2F;await, and they can run during times when the first task would otherwise have been idle (or however they&#x27;re being scheduled).<p>As an aside, async&#x2F;await is just a tool to try to make your life easier. It&#x27;s moderately easy to reason about (each task is sequential after all, and shared structures can only be modified at explicit pause points), the syntax is only mildly more cumbersome than writing the sequential task you were going to write anyway, and it&#x27;s remarkably easy to write a scheduler to execute an async program with some degree of efficiency. You can absolutely use any other parallel execution model you&#x27;d like or none at all as the situation demands.')