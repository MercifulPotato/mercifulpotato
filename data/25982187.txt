Item(by='iso8859-1', descendants=None, kids=None, score=None, time=1612124449, title=None, item_type='comment', url=None, parent=25979633, text='I reject the claim that it is reasonable to capitalize all the string fields of arbitrary objects.<p>But it can still be done, like you mention, by using reflection. Now, you claim that it is unsafe. This is untrue, it depends how the reflection works. Even if it were unsafe, it would be no worse than in Python, where you get a TypeError or in JavaScript where you get undefined, which probably leads to a crash later.<p>For an example of reflection which is safer than just a string-dictionary like JavaScript or Python, see GHC.Generics. It works by compile-time generating a type safe structure which is <i>not</i> just a dictionary. The function you want would have a signature involving this constraint, &quot;Generic x =&gt; x -&gt; x&quot;, which means it works for any &quot;object&quot; implementing the Generic interface.<p>Now you may say &quot;but I asked for a function that handles all objects&quot;, but I don&#x27;t see the point. In statically typed languages you get an <i>additional</i> option of using generics when you want. It doesn&#x27;t make sense to me to require all types to implement reflection when you don&#x27;t actually need it everywhere.')