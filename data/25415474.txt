Item(by='tragomaskhalos', descendants=None, kids=[25424201, 25423346], score=None, time=1607942064, title=None, item_type='comment', url=None, parent=25414534, text='There&#x27;s one point where I&#x27;d argue with this - little classes that encapsulate a single simple domain concept are extremely valuable; an example would be a Path type that facilitates building paths, canonicalizing them etc. The key is that they do not add to the cognitive burden, because their behaviour is (should be) obvious from the name and the name of the methods alone. Furthermore, by adding more nuanced type information, they improve the expressiveness and robustness of the code (as opposed to just using a String for everything).<p>One of my biggest beefs with Java is that, by virtue of the one-class-per-file concept (<i>pace</i> inner classes), the class is elevated to the level of a big deal in the novice programmer&#x27;s mind, so that a little class with a very clear and narrow scope seems to be unworthy of existence, and we get the String-for-everything syndrome. Anecdotally, I have encountered exactly this attitude on projects.')