Item(by='megameter', descendants=None, kids=None, score=None, time=1610497988, title=None, item_type='comment', url=None, parent=25747582, text='The limitation in crossing the boundary from a data language to an executable language is mostly down to contrasts between &quot;divisions&quot; <i>within</i> and &quot;bindings&quot; <i>across</i> data.<p>Some Forths include an additional floating point stack, and many implement types on top, but the basic nature of the thing is not to address division of data into sizes, fields and regions of memory directly, and instead to let the user define those things. Where Forth is powerful is in allowing layers of binding to build up, since the language can flip-flop between execution and compilation easily - that&#x27;s why basic control flow words like IF - THEN - ENDIF can be bootstrapped, as can any desired type checker. But in the process, the binding format - the Forth dictionary - becomes one of the core dependencies.<p>The &quot;just data&quot; formats like JSON only approach the topic of binding in limited ways like key-value structures or a defined schema. The types are static during parsing, so the data is less tangled and context-driven and more approachable through a simple divide-and-conquer.')