Item(by='zanellia', descendants=None, kids=None, score=None, time=1603379080, title=None, item_type='comment', url=None, parent=24848318, text='In my opinion there is some potential there. Especially exploiting the increasing integration of typing-oriented features (i.e. type annotations) and the interest in using those to carry out static analysis (e.g. in mypy, but also Facebook&#x27;s Pyre and Microsoft&#x27;s Pyright and many other), it might be possible to speed up execution times a bit. This is especially true if we restrict the attention to a restricted subset of Python as, e.g., within domain specific languages. It might not make sense to entirely reverse engineer a language that was designed to be duck-typed into a statically typed one. However, for some domain specific applications I find performance oriented static analysis an interesting tool.<p>To make it more concrete, here is an experimental DSL for embedded high-performance computing that uses static analysis and source-to-source (Python-to-C, actually) code transformation: <a href="https:&#x2F;&#x2F;github.com&#x2F;zanellia&#x2F;prometeo" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;zanellia&#x2F;prometeo</a>.')