Item(by='jfoutz', descendants=None, kids=None, score=None, time=1610216878, title=None, item_type='comment', url=None, parent=25701312, text='this is a funny and thought provoking article. There&#x27;s a bit of texture that I feel is missing, and I feel personally attacked, so I&#x27;m going to throw up a weak defense of category theory web servers.<p>Back in the day, in perl I&#x27;d bless regexes and use AUTOLOAD to provide the class implementations at runtime, as any good unicycle rider would. Changing the Rube Goldberg machine is hard. grep won&#x27;t really help. I&#x27;d resort to even dirtier tricks to change behavior.<p>Later I worked in java. grep would work, but even better, I could make a class private, create an interface and just chase compiler errors. So much nicer than hunting down the right line of code to hijack in perl. It&#x27;s pretty good, and I think go provides a similar level of support, but there&#x27;s still a bunch of room for Class.forName(foo); &#x2F;&#x2F;haha! grep will never find me! and it&#x27;s cool, cause you&#x27;ll only find out about it at runtime.<p>Anyway Haskell is neat because you can throw it all in a do in IO. hack away for days. When it&#x27;s time to change, just change it. the compiler will help. The compiler will tell you everything you need to know to scope down to the finest level you want. It&#x27;s super easy to be way too fancy up front, but any mistakes can be fixed.<p>Anyway, Haskell is probably never the right choice but it&#x27;s the only thing I know of that lets you easily change the design whenever you feel like it.<p>It&#x27;s Saturday, and I&#x27;ve thought about this too much. Time to put on my silver pants and go unicycling.')