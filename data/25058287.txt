Item(by='anentropic', descendants=None, kids=None, score=None, time=1605102049, title=None, item_type='comment', url=None, parent=25049079, text='A part that seems interesting to me is the &quot;unified memory&quot; architecture<p>At first it seems like just a cost&#x2F;power&#x2F;size saving measure, like not having dedicated RAM in a discrete GPU<p>But the CPU-vs-GPU RAM distinction means there&#x27;s a cost to moving work to the GPU as data has to be copied, leading to it only be used in cases where you can either do the whole work purely on the GPU or queue up batch jobs of work so that the cost of copying data can be amortised over the faster parallel GPU<p>They sort of hinted at it in the presentation, but the unified memory architecture potentially allows more flexible distribution of tasks between CPU and GPU and &quot;Neural&quot; cores, because the data doesn&#x27;t have to be copied.<p>I wonder if this is then potentially something compilers will be able to do take more advantage of, automatically.<p>It will be interesting to see how useful the &quot;Neural&quot; cores are for non-ML workloads.')