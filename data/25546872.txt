Item(by='heavyset_go', descendants=None, kids=[25550359], score=None, time=1609021089, title=None, item_type='comment', url=None, parent=25545638, text='It&#x27;s the same issue with phones. If manufacturers settled on a hardware configuration that prioritized hardware compatibility and discovery like x86 computers and ARM servers do by implementing things like BIOS or EFI, ACPI, unlocked bootloaders, etc, we&#x27;d be able to treat these devices the same way we do with our desktops and laptops.<p>Theoretically, we&#x27;d be able to download some generic OS image and load them onto devices like we can with Linux ISOs and x86 laptops whenever manufacturers decide to stop supporting older devices.<p>Instead, each device is a custom hardware configuration, with peripherals hardcoded to specific addresses instead of attached to enumerable buses.<p>Unfortunately, it&#x27;s much cheaper and easier to design custom SoCs with custom bootloaders for each device than it is to go the compatibility and discovery route that x86 manufacturers did decades ago, and that ARM servers do today.<p>Sadly, as manufacturers turn to custom ARM SoCs for laptops and desktops, they&#x27;re also walking away from hardware compatibility and discovery, which means that the days of being able to load generic Linux images on your computers are coming to an end.<p>For example, with some ARM Chromebooks and all ARM Macs, you can&#x27;t just boot a generic ARM Linux ISO, because ARM SoCs are custom and unique hardware configurations that lack ACPI etc. This is the reason you need to use a custom Linux image for Raspberry Pis, instead of using generic ARM ISOs like you can on ARM servers, and it&#x27;s the same reason that a lot of work needs to be done before Linux will work well on M1 Macs.')