Item(by='kthejoker2', descendants=None, kids=None, score=None, time=1605135001, title=None, item_type='comment', url=None, parent=25036285, text='From one of the greatest articles I&#x27;ve ever read  ( <a href="https:&#x2F;&#x2F;iism.org&#x2F;article&#x2F;why-are-ceos-failing-software-engineers-56" rel="nofollow">https:&#x2F;&#x2F;iism.org&#x2F;article&#x2F;why-are-ceos-failing-software-engin...</a> )<p>&gt; When discovering new value, drive to value; when scaling discovered value, drive to date. Meaning: don’t gate value discovery by setting arbitrary release dates.<p>In effect, a release date is nothing more than saying to the team, “we are going to give up on discovery of the actual needed value by &lt;insert arbitrary date here&gt;.” Of course, that’s nonsense.<p>Also, dates don’t increase the rate of learning from failure; they in fact have the opposite effect, the team will be much less likely to discover the value needed as they will actually increasingly fear failure as the date approaches, and they will therefore slow down the rate at which they are breaking things, which effectively puts an end to new learning – no more bugs found, no more value found.<p>If the customers need hasn’t been met yet, it’s just a huge waste and confusing to all involved to release something that doesn’t actually meet the need. It’s even worse to release something by an arbitrary date that has the appearance of meeting the need but is riddled with business risking- or life risking- levels of chaos.')