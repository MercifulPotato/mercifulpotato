Item(by='svat', descendants=None, kids=None, score=None, time=1611908511, title=None, item_type='comment', url=None, parent=25954240, text='Based on a not-very-clever search (<a href="https:&#x2F;&#x2F;www.google.com&#x2F;search?q=knuth+digitek" rel="nofollow">https:&#x2F;&#x2F;www.google.com&#x2F;search?q=knuth+digitek</a>) the answer is likely Jim Dunlap (James R. Dunlap), one of the three founders of Digitek, and who was behind their Fortran compiler(s).<p>In 2005–2007, someone (Randall Neff) from the Computer History Museum digitized many documents from Knuth&#x27;s personal collection. You can see the full list of digitized documents here: <a href="https:&#x2F;&#x2F;archive.computerhistory.org&#x2F;resources&#x2F;text&#x2F;Knuth_Don_X4100&#x2F;PDF_index&#x2F;KnuthDigitalArchive-Index.html" rel="nofollow">https:&#x2F;&#x2F;archive.computerhistory.org&#x2F;resources&#x2F;text&#x2F;Knuth_Don...</a> and among them are:<p>- &quot;Digitek Fortran compiler for the Daystrom 636 computer&quot; (1963) <a href="https:&#x2F;&#x2F;www.computerhistory.org&#x2F;collections&#x2F;catalog&#x2F;102724570" rel="nofollow">https:&#x2F;&#x2F;www.computerhistory.org&#x2F;collections&#x2F;catalog&#x2F;10272457...</a> — 161 pages of assembly code with Knuth&#x27;s annotations in pencil as he tried to read this. (The handwriting was hard to read because he was reading this compiler and writing with his left hand, when he was (I think) in hospital with his right arm broken.)<p>- &quot;Data Structures in Digitek&#x27;s FORTRAN IV Compiler for the SDS 900 Series&quot; by Robert Floyd — 8 pages of &quot;Notes for a class analyzing the Digitek compiler&quot;. <a href="http:&#x2F;&#x2F;www.bitsavers.org&#x2F;pdf&#x2F;digitek&#x2F;Data_Structures_in_Digiteks_FORTRAN_IV_Compiler_for_the_SDS_900_Series.pdf" rel="nofollow">http:&#x2F;&#x2F;www.bitsavers.org&#x2F;pdf&#x2F;digitek&#x2F;Data_Structures_in_Digi...</a> — this seems to describe some of the ideas&#x2F;conventions that went into writing these compilers.<p>Moreover, Knuth has mentioned this in a few other places:<p>- In <i>Mathematical Writing</i> (<a href="https:&#x2F;&#x2F;www-cs-faculty.stanford.edu&#x2F;~knuth&#x2F;papers&#x2F;cs1193.pdf" rel="nofollow">https:&#x2F;&#x2F;www-cs-faculty.stanford.edu&#x2F;~knuth&#x2F;papers&#x2F;cs1193.pdf</a>), there&#x27;s a sentence:<p>&gt;  Don told us that Jim Dunlap of Digitek, who made some of the best early compilers, invariably used identifiers forty-or-so characters long. The meaning was always quite clear although no comments appeared.<p>- In <i>Coders At Work</i> (p. 600), Knuth says (<a href="https:&#x2F;&#x2F;books.google.com&#x2F;books?id=2kMIqdfyT8kC&amp;pg=PA600&amp;lpg=PA600" rel="nofollow">https:&#x2F;&#x2F;books.google.com&#x2F;books?id=2kMIqdfyT8kC&amp;pg=PA600&amp;lpg=...</a> ):<p>&gt; I’ve got lots of collections of source code. I have compilers, the Digitek compilers from the 1960s were written in a very interesting way. They had their own language and they used identifiers that were 30 characters long but very descriptive, and their compilers ran circles around the competition at the time—this company made the state-of-the-art compilers of 1963 or ’64.<p>&gt; […] One time I broke my arm—fell off a bike—and I had a month where I couldn’t do anything much, so I read source code that I had heard had some clever ideas in it that hadn’t been documented. I think those were all extremely important experiences for me.<p>- In a 1984 letter (<a href="https:&#x2F;&#x2F;doi.org&#x2F;10.1109&#x2F;MAHC.1984.10042" rel="nofollow">https:&#x2F;&#x2F;doi.org&#x2F;10.1109&#x2F;MAHC.1984.10042</a>), he mentions it again (how they wrote many Fortran compilers for different systems, more than one a month!).<p>Other sources:<p>- <a href="http:&#x2F;&#x2F;www.bitsavers.org&#x2F;pdf&#x2F;digitek&#x2F;digitek_history.txt" rel="nofollow">http:&#x2F;&#x2F;www.bitsavers.org&#x2F;pdf&#x2F;digitek&#x2F;digitek_history.txt</a> mentions that &quot;Jim and Digitek were mentioned in early editions of The Art of Computer Programming, Knuth&quot; and mentions a couple of Fortran compilers from Digitek (for Daystrom 636, IBM 7090, IBM 360):<p>&gt; Jim invented (at least refined and proved economically viable) a programming paradigm for compiler writing: POPs, Program Operations. Jim designed a computer on paper, an instruction was a POP, e.g., RCA, Require Character and Advance; it was &quot;easy&quot; to write compilers on this paper computer that would eventually be emulated on the customer&#x27;s hardware. The principal features of this paper computer: LIFO variable length tables, recursion, a stack, translation to, and manipulation of Polish encryption of the program being compiled, character-scanning and code-generation POPs.<p>See also their Wikipedia article: <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;w&#x2F;index.php?title=Digitek&amp;oldid=966363630" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;w&#x2F;index.php?title=Digitek&amp;oldid=966...</a> and some ads: <a href="http:&#x2F;&#x2F;www.bitsavers.org&#x2F;pdf&#x2F;digitek&#x2F;ads&#x2F;Digitek_Ad.pdf" rel="nofollow">http:&#x2F;&#x2F;www.bitsavers.org&#x2F;pdf&#x2F;digitek&#x2F;ads&#x2F;Digitek_Ad.pdf</a><p>Also, &quot;The Mythical Man Month&quot; seems to contain <i>many</i> references to Digitek and their compiler.')