Item(by='BadInformatics', descendants=None, kids=None, score=None, time=1610989095, title=None, item_type='comment', url=None, parent=25821085, text='&gt; Julia is a growing alternative to Fortran&#x2F;C&#x2F;etc for long-running computations, it remains awkward and unpleasant for interactive analysis<p>Did you mean to write short-running scripts? If anything, the Julia dev workflow is biased <i>towards</i> interactive analysis in a REPL a la R or IPython&#x2F;Jupyter. I don&#x27;t mean to imply that there&#x27;s no startup overhead, but how often are you restarting the REPL when doing EDA? Unless it&#x27;s more than once every few minutes (which is a very odd workflow), then startup overhead is effectively amortized.<p>&gt; A real strength of R (in comparison not just to Julia but also to python) is that such a repository exists<p>CRAN is certainly a cut above many other package repos here, but I&#x27;m not sure &quot;trust their tools&quot; can apply to all packages on there. Anecdotally, I&#x27;ve had a lot of issues with compiled dependencies and missing&#x2F;out of date external assets on less well-trodden packages. There&#x27;s a reason MRAN, Conda and JuliaBinaryWrappers exist after all.<p>For whatever reason, Julia package maintainers also seem more receptive to making their work compatible with other libraries as well. This goes beyond just multiple dispatch as well--imagine if tidyverse&#x2F;non-tidyverse wasn&#x27;t such a hard split.')