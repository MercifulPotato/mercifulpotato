Item(by='andrewmcwatters', descendants=None, kids=[25079068], score=None, time=1605242964, title=None, item_type='comment', url=None, parent=25069847, text='&gt; asynchronous<p>All multiplayer is asynchronous you donut. Asynchronous game rules have nothing to do with asynchronous networking.<p>&gt; async&#x2F;sync hybrid<p>Pulling stuff out of your behind.<p>&gt; trusted peer to peer (used a lot for coop games to lower server costs)<p>No such thing. There is no &quot;trust&quot; in multiplayer. If you write a peer to peer game, you&#x27;re open to cheating.<p>&gt; multiplayer idle games<p>What?<p>&gt; hybrid deterministic with trusted peer to peer<p>Pulling stuff out of your behind.<p>At the end of the day, entities, objects, actors, whatever you want to call them, have networked fields and they&#x27;re serialized and transmitted. Game rules state is networked. Developers choose what they want to network. The engine determines what is sent and what is not.<p>This lattermost piece is where things can get complicated based on whether or not information needs to be sent, shouldn&#x27;t be sent, is sent by visibility or audibility, is sent by quad tree node, etc.<p>But there&#x27;s no different architecture for it. That&#x27;s plainly stupid. There&#x27;s nothing about these made up designs you&#x27;re talking about that stops the need for entities to have watched fields that get serialized and transmitted based on transmission rules.')