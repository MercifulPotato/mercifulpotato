Item(by='throwaway894345', descendants=None, kids=[25189958, 25189691], score=None, time=1606152050, title=None, item_type='comment', url=None, parent=25188883, text='&gt; is a hell of a lot simpler than even getting a toy version of kubernetes up and running.<p>Getting it off the ground is one thing, keeping things reproducible so you can stand it back up reliably if the instance goes down is another thing. You need to know what are the relevant changes that people have made to the instance over its lifetime in order to reproduce them on the new machine. Maybe this is not what people mean by &quot;pets vs cattle&quot;, but they seem pretty closely related if nothing else. I guess the thing I care about is &quot;reproducibility&quot; and for all of its complexity, Kubernetes makes the happy path pretty clear in this regard whereas with EC2 you need Ansible and a whole bunch of playbooks to reproduce things like SSH, logging, monitoring, process management, etc that Kubernetes or ECS or whatever give you out of the box. And if you find that you need to scale beyond one or two instances (not everything is a CRUD webapp, after all) especially autoscaling, then it seems like the EC2 story becomes even more complicated (you now need something to automatically invoke Ansible with the right playbooks for each node). I&#x27;m probably biased by my experience (aren&#x27;t we all?) but it seems like Kubernetes or ECS&#x2F;Fargate are simpler in these regards.')