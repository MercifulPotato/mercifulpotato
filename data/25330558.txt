Item(by='preommr', descendants=None, kids=[25330762], score=None, time=1607332549, title=None, item_type='comment', url=None, parent=25322656, text='Those generalizations about why change is hard can be applied to any change in every field. Ideas are always decades if not centuries ahead of their implementations. Not even ideas, but proof of concepts too.<p>So lets talk specifically about software. The biggest problem that prevents moving forward are platforms and companies. Yes, businesses and organizations are usually the biggest factor in dampening progress because they have so much mass it influences everything around them. But you would think that with the low barrier to entry in software, anyone could just spin up some OSS project and it would quickly trickle it&#x27;s way through. Even slow organizations are often quick to adopt new tech in certain conditions. There were fintech companies that adopted Docker really early on. But it&#x27;s usually something that&#x27;s isolated.<p>It&#x27;s platforms that hold us back. The reason we don&#x27;t see huge jumps in things like functional programming is because that stuff is great for parallelism, and we don&#x27;t see jumps in parallelism because the OS, or game engine, or drivers, or chips have poor support. We could have better functional languages if browsers decided to support more functional principles in ecmascript, or even some other scripting language. We don&#x27;t have all the cool programming stuff because it&#x27;s piles of abstractions with groups that don&#x27;t want to coordinate.<p>Sure there are other factors - there are cultural issues that lead to programmers making bad decisions and writing bad code. Java for example was a good language that got ruined by horrible enterprise culture. It&#x27;s not like people didn&#x27;t point out the flaws early on, but they got ignored. Lots of people took microservices are a good idea to mean &quot;everything must be a microservice&quot;. But even then these problems are perpetuated by companies that mishandle their platform. If companies made user guides clearer we wouldn&#x27;t have these issues. Not only is the communication bad, but it&#x27;s often in arcane places. To figure out how to use something you have to read through github discussions or follow mailing lists to get useful information.<p>If rungs to your ladder are broken, you&#x27;re not going to be able to climb very high.')