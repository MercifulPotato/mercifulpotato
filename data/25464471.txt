Item(by='patrec', descendants=None, kids=[25464551, 25465723], score=None, time=1608273450, title=None, item_type='comment', url=None, parent=25464296, text='&gt; My point is that SQLite is very unlikely to be the most vulnerable piece of software in your stack.<p>Sqlite is very high quality, but I am rather doubtful this is true if you actually care about having a secure system to start with. I can think of three main reasons an office suite would have serious security vulnerabilities:<p>1. It&#x27;s written in an unsuitable, memory-unsafe, programming language (as most office suites sadly are).<p>2. It includes an unsuitable programming language for scripting purposes (Word Macros are of course infamous for this).<p>3. Vulnerabilities in one of its dependencies (like XML parsers)<p>If you care to, 1 and 2 are very easy to avoid and 3 will be pretty hard to avoid completely, but you can limit your exposure. You need a GUI toolkit at the minimum, but you can completely avoid parsing as an attack vector by either not using a braindamaged format like XML in the unlikely case you don&#x27;t need compatibility, or if you must, use an xml (zip etc.) parser written in a memory safe language. If you followed all other steps, but chose sqlite instead, I&#x27;d say chances a very good it&#x27;s now your main vulnerability.')