Item(by='phiresky', descendants=None, kids=[25280300, 25280395, 25281622, 25282813, 25281538], score=None, time=1606935627, title=None, item_type='comment', url=None, parent=25277280, text='Developer of the tool here :) Glad to see it posted here, I still actively use it myself. Also check out the fzf integration in the README: <a href="https:&#x2F;&#x2F;github.com&#x2F;phiresky&#x2F;ripgrep-all&#x2F;blob&#x2F;master&#x2F;doc&#x2F;rga-fzf.gif" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;phiresky&#x2F;ripgrep-all&#x2F;blob&#x2F;master&#x2F;doc&#x2F;rga-...</a><p>Currently the main branch is undergoing a refactor to add support for having custom extractors (calling out to other tools), and more flexible chains of extractors.<p>Ripgrep itself has functionality integrated to call custom extractors with the `--pre` flag, but by adding it here we can retain the benefits of the rga wrapper (more accurate file type matchers, caching, recursion into archives, adapter chaining, no slow shell scripts in between, etc).<p>Sadly, during rewriting it to allow this, I kind of got hung up and couldn&#x27;t manage to figure out how to cleanly design that in Rust. I&#x27;d be really glad if a Rust expert could help me out here:<p>In the currently stable version, the main interface of each &quot;adapter&quot; is `fn(Read, Write) -&gt; ()`. To allow custom adapter chaining I have to change it to be `fn(Read) -&gt; Read` where each chained adapter wraps the read stream and converts it while reading. But then I get issues with how to handle threading etc, as well as a random deadlock that I haven&#x27;t figured out how to solve so far :&#x2F;')