Item(by='itamarst', descendants=None, kids=[25116480, 25117218, 25116555, 25115700, 25115245, 25116712], score=None, time=1605550834, title=None, item_type='comment', url=None, parent=25113636, text='Memory usage is an interesting problem, because the failure mode is so much more painful (crashes and complete lock-ups) than high CPU usage.<p>And even if you return memory to the OS, that doesn&#x27;t actually solve too-high memory usage.<p>Some things you can do:<p>The article mentions `__slots__` for reducing object memory use, and other approaches include just having fewer objects: for example, a dict of lists uses far less memory than a list of dicts with repeating fields. And you can also in many cases switch to a dataframe with Pandas, saving even more memory (<a href="https:&#x2F;&#x2F;pythonspeed.com&#x2F;articles&#x2F;python-object-memory&#x2F;" rel="nofollow">https:&#x2F;&#x2F;pythonspeed.com&#x2F;articles&#x2F;python-object-memory&#x2F;</a> covers all of those).<p>For numeric data, a NumPy array gets rid of the per-integer overhead for Python, so a Python list of numbers use way more memory than an equivalent NumPy array (<a href="https:&#x2F;&#x2F;pythonspeed.com&#x2F;articles&#x2F;python-integers-memory&#x2F;" rel="nofollow">https:&#x2F;&#x2F;pythonspeed.com&#x2F;articles&#x2F;python-integers-memory&#x2F;</a>).')