Item(by='posterboy', descendants=None, kids=None, score=None, time=1606577869, title=None, item_type='comment', url=None, parent=25237910, text='Is it really shorter?<p>For all I know this is a false dichotomy. True RNGs don&#x27;t exist, for one, in a deterministic philosophy.<p>RNGs are per definition non-deterministic, but algorithms are deterministic--by the definition that I learned. We use floating gates picking up cosmic background radiation or the fallout from radioactive elements to come close to really random. XKCD&#x27;s butterfly joke applies.<p>Computable numbers have a computable complexity. For a non-deterministic program the fair comparison to a true RNG would be a programm that outputs all digits of Pi up to infinity, I suppose. Vice-versa, I&#x27;m not sure if a pseudo-random number generator couldn&#x27;t be fit into the equivalent kolmogorov complexity of a 40-digits of PIE.<p>Are you saying it couldn&#x27;t be? On the one-hand it is the case that pseudo RNGs simply rely on intractible complexity, which must regularly supercede 40 digits of Pi equivalent to 40 byte key, as opposed to your 4kb RSA key chains and what not.<p>On the other hand I think your argument is akin to the gamblers fallacy: I have absolutely no clue but I will hope it will not have been a primitive RNG, right?<p>For reference, here&#x27;s a simple pseudo RNG taken from TinyPTC example code to produce a TV-noise graphic in a loop<p><pre><code>        noise = seed;\n        noise &gt;&gt;= 3;\n        noise ^= seed;\n        carry = noise &amp; 1;\n        noise &gt;&gt;= 1;\n        seed &gt;&gt;= 1;\n        seed |= (carry &lt;&lt; 30);\n        noise &amp;= 0xFF;\n        pixel[index] = (noise&lt;&lt;16) | (noise&lt;&lt;8) | noise;</code></pre>')