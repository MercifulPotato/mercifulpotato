Item(by='MaxBarraclough', descendants=None, kids=[25272041], score=None, time=1606859795, title=None, item_type='comment', url=None, parent=25265005, text='&gt; Assume that every statement can fail, and use some form RAII to manage resource cleanup.<p>I think that&#x27;s part of Chen&#x27;s point: programmers just aren&#x27;t good at doing this, they even get it wrong in published code samples. Exception-handling tends to become an afterthought, and even if you do pay attention to it, it&#x27;s hard to get right.<p>Chen is hardly alone in his scepticism. Exceptions are forbidden in the Google C++ style guide. They&#x27;re also forbidden in certain critical-systems subsets of languages. Ravenscar Ada forbids exceptions, [0] as does Spark Ada (though in that case it&#x27;s for a slightly different reason: it&#x27;s difficult to formally reason about exceptions). <i>edit</i> Apparently the JSF C++ standard forbids exceptions, but MISRA C++ permits them provided certain guidelines are followed.<p>I agree that RAII is very useful for robust exception-handling.<p>&gt; APIs can be organized to essentially force the use of RAII, even if popular but ancient APIs like POSIX file system are not designed that way<p>Right, this is just the kind of thing C++ wrappers add (when wrapping C APIs).<p>&gt; Java&#x2F;C# mechanism for running cleanup code &#x27;try {} finally {}&#x27; a. fails to pass through a handle to the resource that needs cleanup<p>Short of proper RAII (destructors), I&#x27;m not sure what that would look like.<p>I&#x27;m not sure what Chen makes of destructors. They&#x27;re non-local flow-control, but he seems to like them.<p>Somewhat related: Zig&#x27;s <i>optional types</i>, which essentially force the programmer to explicitly handle the case where the data doesn&#x27;t exist. [1] Much more robust than the approach C takes, where the programmer is trusted to perform the check when necessary.<p>[0] p20 of PDF: <a href="https:&#x2F;&#x2F;www.sigada.org&#x2F;ada_letters&#x2F;jun2004&#x2F;ravenscar_article.pdf" rel="nofollow">https:&#x2F;&#x2F;www.sigada.org&#x2F;ada_letters&#x2F;jun2004&#x2F;ravenscar_article...</a><p>[1] <a href="https:&#x2F;&#x2F;ziglang.org&#x2F;documentation&#x2F;master&#x2F;#Optionals" rel="nofollow">https:&#x2F;&#x2F;ziglang.org&#x2F;documentation&#x2F;master&#x2F;#Optionals</a>')