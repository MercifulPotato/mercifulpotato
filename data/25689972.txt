Item(by='lima', descendants=None, kids=None, score=None, time=1610137594, title=None, item_type='comment', url=None, parent=25688385, text='&gt; <i>Chrome is a shitty browser. Google is a shitty company. Stop defending shit.</i><p>&gt; <i>You are the one spreading FUD here by claiming that the new API is so much better than the old one.</i><p>This kind of language is not welcome here. Please have a look at the guidelines: <a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;newsguidelines.html" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;newsguidelines.html</a><p>I read the design documents and I&#x27;m convinced that the new API is a big improvement, and that the design decision was made in good faith and for technical, not political reasons.<p>The uBlock Origin developer is very trustworthy, but there&#x27;s so many things that can go wrong - like a workstation, repository, signing key or account compromise.<p>It&#x27;s a massive single point of failure. Anyone who can sneak malicious code into the extension has instant and unlimited access to millions of browsers and sensitive personal and company data.<p>A project like Chrome has extensive processes and safeguards to prevent this kind of compromise, including strict code review. As far as I can tell, uBlock has no code review process[1]. We need to move away from such points of failure no matter how well-intentioned they are.<p>[1]: <a href="https:&#x2F;&#x2F;github.com&#x2F;gorhill&#x2F;uBlock&#x2F;commits&#x2F;master" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;gorhill&#x2F;uBlock&#x2F;commits&#x2F;master</a><p>The webRequest API also forces a lot of IPC overhead and serialization in the runtime, no matter how fast the extension itself is. uBlock is very, very fast - but it&#x27;s still a lot slower than native code in the core.<p>I&#x27;m <i>not</i> against adblocking or in favor of stripping away adblocker features, but why not implement it right in the core of the browser, where it belongs? Chrome is open source, if Google doesn&#x27;t want to do it, another vendor or open source project most certainly could.')