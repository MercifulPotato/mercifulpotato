Item(by='sgk284', descendants=None, kids=[25684737, 25683332, 25682863, 25683172], score=None, time=1610092808, title=None, item_type='comment', url=None, parent=25682505, text='It&#x27;s a bit overly clever. I am a huge fan of Peter Norvig (and he was once my skip-level boss), but I&#x27;d call this code out in a code review for being obtuse.<p>Notice that the input, `nums`, is a set. So he&#x27;s taking the intersection of two sets. One set always has one item, so the result will be a collection with either 0 or 1 items.<p>It could have also been written as:<p><pre><code>  first(x * (2020 - x)\n        for x in nums\n        if (2020 - x) in nums and x != (2020 - x))\n</code></pre>\nBut that has a lot of duplication, so it&#x27;d probably be best to just use an imperative approach here and do something like:<p><pre><code>  def day1_1(nums):\n    &quot;Find 2 distinct numbers that sum to 2020, and return their product.&quot;\n    for x in nums:\n      y = 2020 - x\n\n      if x == y:\n        continue\n\n      if y in nums:\n        return x * y</code></pre>')