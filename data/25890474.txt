Item(by='jeromenerf', descendants=None, kids=[25891488], score=None, time=1611478654, title=None, item_type='comment', url=None, parent=25890092, text='Hugo metadata allows to define a publication date for content. Then you need to run the Hugo build periodically to have the content published.\nThe hugo cli has options to build &quot;drafts&quot; and &quot;futures&quot; so that you can preview them.<p>I have used Hugo in the past to generate websites from external content sources, such as trello, gitlab, GitHub, RSS feeds, Dropbox, headless CMSes, etc. Some of them provided webhooks to trigger the build, others required polling and periodic rebuild, yet others can commit to a git repo and trigger a CI pipeline. Most of the time, hugo was more of a composable solution to a given flow than a constraint i had to build around thanks to its capabilities to use &quot;data content&quot; and not only markdown files. Using json as the metadata &quot;front matter&quot; for documents often proved very handy when using API sources.<p>Hugo is very fast, so build time wasn’t a big concern. There was no incremental build however, so for a very large corpus it could be an issue. The most problematic issue is that Hugo doesn’t ever delete anything from a previous build, but overwrites on top, so that could be problematic if you involuntarily publish something and then want it off. The same kind of issues you get into with caching or object storage. My &quot;solution&quot; was the classic parallel builds, symlink and cleanup dance.<p>Would recommend.')