Item(by='cesarb', descendants=None, kids=[25129773, 25128347, 25128046], score=None, time=1605628756, title=None, item_type='comment', url=None, parent=25123193, text='&gt; You really believe that git stores -- in full -- every version of a tracked file?<p>Yes, it does.<p>&gt; Every commit that deletes the whitespace from an otherwise empty line in a 30KB file is another 30KB of hard drive space<p>Yes, it is.<p>&quot;It&#x27;s worth repeating that git stores every revision of an object separately in the database, addressed by the SHA checksum of its contents. There is no obvious connection between two versions of a file; that connection is made by following the commit objects and looking at what objects were contained in the relevant trees. Git might thus be expected to consume a fair amount of disk space; unlike many source code management systems, it stores whole files, rather than the differences between revisions. It is, however, quite fast, and disk space is considered to be cheap.&quot; -- <a href="https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;131657&#x2F;" rel="nofollow">https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;131657&#x2F;</a><p>One of the insights of the git design was that, nowadays, disk space is cheap. The first releases of git always stored each object separately in its own file in the object database. Git still does so nowadays, but once the number of files gets over a certain threshold, newer releases of git run an &quot;automatic GC&quot; which combines these &quot;loose objects&quot; into a &quot;pack file&quot;; and within that &quot;pack file&quot;, it uses a binary diff (a xdelta) between similar objects to reduce the total size. But that&#x27;s just a physical storage optimization; in the logical model, whenever you ask for an object, you always get its full contents, not a delta against some other object.')