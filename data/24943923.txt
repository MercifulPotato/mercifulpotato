Item(by='niea_11', descendants=None, kids=None, score=None, time=1604075372, title=None, item_type='comment', url=None, parent=24943546, text='I did a quick search and according to this article [1], dijkstra&#x27;s implementation was not restricted compared to other implementations at the time :<p><i>It is Dijkstra&#x27;s generalizing style which stands out when a comparison is made with the work of his contemporaries. Rutishauser, for example, had limited the order of his procedure activations in his run-time system [59], while Dijkstra had no such restriction. Floyd&#x27;s work [60, p.42-43] relied on three specialized “yo-yo” lists (i.e., stacks) instead of one general stack. Likewise, the MAD translator [61, p.28] used several specialized tables. Also, and most importantly, the ALCOR compilers were severely restricted in that they could not handle several ALGOL60 language constructs, including the recursive procedure (cf. Section ). Finally, though the Irons-Feurzeig system [54] did implement recursive-procedure activations and by means of one general run-time stack, it was, in the interest of efficiency, sophisticated in its run-time capabilities and, hence, unlike the run-time system of Dijkstra and Zonneveld .</i><p>[1] : <a href="https:&#x2F;&#x2F;www.dijkstrascry.com&#x2F;node&#x2F;4" rel="nofollow">https:&#x2F;&#x2F;www.dijkstrascry.com&#x2F;node&#x2F;4</a>')