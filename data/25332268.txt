Item(by='notacoward', descendants=None, kids=[25334731, 25334425], score=None, time=1607350586, title=None, item_type='comment', url=None, parent=25329108, text='OP mentions three things: staging their work, velocity, and sense of agency&#x2F;ownership. All three are problematic. Often those who have worked with a component the longest and&#x2F;or wrote significant parts of it become its maintainers, either formally or de facto. As a maintainer (I&#x27;ve been one myself) it&#x27;s simply easier to get commits in, not necessarily because you&#x27;re better at the work but because of the role itself. You never have to re-work your commits to conform to someone else&#x27;s idea of how things should work. People trust you, so reviews are often cursory. Many maintainers return that courtesy by subjecting others&#x27; work to <i>excruciating</i> review, slowing them down. Sometimes it&#x27;s intentional, sometimes not, but the result&#x27;s the same. Also, a maintainer often has many commits that started off as someone else&#x27;s idea but that person didn&#x27;t have the time or knowledge to complete them, so those are kind of low-hanging fruit that inflate the numbers. A mediocre maintainer will usually still have more commits than even the most talented non-maintainer. Calling them &quot;top performers&quot; because of something that&#x27;s part of the <i>role</i> seems a bit circular.<p>So much for velocity and ownership. As for the part about staging commits, I&#x27;d like to see some evidence. In my experience there&#x27;s no difference, or sometimes the maintainers are even <i>less</i> likely to break up commits. This can be because maintainers are often charged with making commits with lots of internal dependencies that make them harder to break up, or because it&#x27;s easy to get a stamp even on a questionable commit from people who are dependent on their goodwill to get their own commits in.')