Item(by='Jugurtha', descendants=None, kids=None, score=None, time=1605821415, title=None, item_type='comment', url=None, parent=25150894, text='Congrats on the launch!<p>&gt;<i>MLflow is an all-encompassing &quot;ML platform&quot;</i><p>Not really. We&#x27;re trying to use MLflow with our &quot;ML platform&quot;[0]. Namely, it can save a model that expects high dimensional inputs, which is most models I&#x27;ve seen that aren&#x27;t trivial, and can &quot;deploy&quot; the model but with an expectation of two dimensional DataFrame inputs. Apparently, they&#x27;re working on that.<p>There are also many ambiguities concerning Keras and Tensorflow stemming from &quot;What is a Keras model? Is it a Tensorflow model now they&#x27;re integrated? Why are Keras models logged with the tensorflow model logger when you use the autolog functionality?&quot;. These are shared ambiguities, as there are several ways to save and load models with Tensorflow, and we&#x27;re looking into the Keras&#x2F;Tensorflow integration closely. MLflow uses `cloudpickle` and unpickling expects not only the same &#x27;protocol&#x27;, but the same Python <i>version</i>. Had to dig deeper than necessary.<p>One other problem is when a model relies on ancillary functions, which you must be able to ship somehow. You end up tinkering with its guts, too.<p>Could you shed some light on how do you deal with these matters. Namely, high dimensional inputs for models, pre-processing&#x2F;post-processing functions, serialization brittleness, and Keras&#x2F;Tensorflow &quot;duality&quot;.<p>We have to inherit that complexity to spare our users from having to mentally think of saving their experiments (we do that automatically to save models, metrics, params). The workflow is data --&gt; collaborative notebooks with scheduling features and job --&gt; (generate appbooks) --&gt; automatically tracked models&#x2F;params&#x2F;metrics --&gt; one click deployment --&gt; &#x27;REST&#x27; API or form to invoke model.<p>Aaaaaand again, congrats on the launch!<p>- [0]: <a href="https:&#x2F;&#x2F;iko.ai" rel="nofollow">https:&#x2F;&#x2F;iko.ai</a>')