Item(by='robpalmer', descendants=None, kids=None, score=None, time=1605183593, title=None, item_type='comment', url=None, parent=25065362, text='For our purposes, the primary problem with enums is not the runtime overhead.  The runtime code for TS enums is a little verbose but it&#x27;s not huge.  The semantics are a little wacky as described in Axel Rauschmeyer&#x27;s article:  <a href="https:&#x2F;&#x2F;2ality.com&#x2F;2020&#x2F;01&#x2F;typescript-enums.html" rel="nofollow">https:&#x2F;&#x2F;2ality.com&#x2F;2020&#x2F;01&#x2F;typescript-enums.html</a><p>The primary problem is the potential conflict with future ECMAScript.  Multiple TypeScript team members have talked about how this feature is now regretted.  The article features Orta&#x27;s famous meme-slide communicating why runtime features (specifically calling enum) should not really be in the TypeScript language.  Anders talked about it three weeks ago during the Q&amp;A session at TSConf:  <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=vBJF0cJ_3G0" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=vBJF0cJ_3G0</a><p>enum is highly unlikely to be removed from TypeScript because of the strong commitment to backwards compatibility.  But that doesn&#x27;t mean we should encourage proliferation.  Especially when many use-cases can be served more simply by string unions.<p><pre><code>  type Color = &quot;red&quot; | &quot;blue&quot; | &quot;green&quot;;</code></pre>')