Item(by='bunsenmcdubbs', descendants=None, kids=[24763136, 24762662, 24762739], score=None, time=1602562371, title=None, item_type='comment', url=None, parent=24761988, text='And great question! The hashing heuristic is a bit of a cute trick and I definitely glossed over it a bit in the post. I&#x27;ll try to elaborate a bit more here...<p>&gt; most hashes ... are essentially one way functions, ideally preserving no information about the input at all<p>You are correct, an individual hash does not preserve any information about the node, nor does it approximate rank in the union-find graph. We only get the effect in aggregate when many unions are performed and we repeatedly hash and select the lower value as the new root.<p>The hash for a given node in the graph is deterministic and fixed. It is effectively a random value. But the hash for a tree of nodes (aka the hash of the tree&#x27;s root node) decreases with each union operation. This is because we select the root with the lower hash to become the root of the combined tree every union operation. As a result, the node with the lowest hash is the root of each tree. With more union operations, larger trees will tend to have lower and lower hashes - effectively approximating a rank.<p>Put another (more handwave-y) way, we essentially roll the dice and get a fixed random number (hash) for each node in the tree. Since the tree is assigned the lowest random number contained within, larger trees will probably have lower values than smaller trees (more dices rolls to get a lower number).')