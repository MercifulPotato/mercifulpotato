Item(by='slavoingilizov', descendants=None, kids=None, score=None, time=1602756044, title=None, item_type='comment', url=None, parent=24755730, text='The problem explored by the author is quite an interesting one. Developer experience is indeed fragmented, varied depending on the toolchains chosen and not always good.<p>However, I have to disagree with the iPhone analogy. The consumer mobile phone market doesn&#x27;t have any similarities with the developer tooling and software platform market. For one, Apple has always preferred to set trends and _tell_ people how to use their devices rather than provide openness and flexibility. Developers thrive on flexibility - shepherding them to the one true way of doing things, even if it provides a better experience, would unleash the inner forces and wrath which made open-source a thing. Also - the problem of &quot;listening to music while taking a call&quot; has vastly reduced complexity compared to anything done by developers. I don&#x27;t think you can apply the same learnings. Each market and each customer segment require completely different business models and the iPhone bundling and &quot;do few things right&quot; strategy just isn&#x27;t right for such a vast ecosystem of developers who are all doing so many different things. Yes, they are all deploying code to production. That&#x27;s not a market. And to see the differences, compare the SDLC at a regulated bank to that of a 50-person startup with proper automation - you&#x27;ll find they are light years apart. Not because the banks suck as devs, but because they are in a different market.')