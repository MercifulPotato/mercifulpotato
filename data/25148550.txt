Item(by='benfrain', descendants=None, kids=None, score=None, time=1605786320, title=None, item_type='comment', url=None, parent=25140604, text='Forgive me if this comes across condescending or patronising. Genuinely not my intent...<p>So many people reach for a solution without really understanding their own problem.<p>I&#x27;m talking specifically about maintainable code. And maintainable CSS code at that.<p>For scaling CSS imagine a continuum with complete isolation one end (BEM, ECSS et al) and complete abstraction at the other (started with &#x27;Atomic CSS&#x27;, which then spawned countless others including Tailwind).<p>My experience is that either end of that continuum leads to an approach that can scale well and be maintainable. Mixing of approaches is where people come unstuck because they don&#x27;t understand why that is problematic.<p>Understanding that fundamental (more here: <a href="https:&#x2F;&#x2F;css-tricks.com&#x2F;scaling-css-two-sides-of-a-spectrum&#x2F;" rel="nofollow">https:&#x2F;&#x2F;css-tricks.com&#x2F;scaling-css-two-sides-of-a-spectrum&#x2F;</a>) goes a long way to dealing with the problem.<p>My preference is isolation (which I detailed at <a href="https:&#x2F;&#x2F;ecss.io" rel="nofollow">https:&#x2F;&#x2F;ecss.io</a> and in the book &#x27;Enduring CSS&#x27; about 5 years back â€” not mentioned to pimp myself, I don&#x27;t give a hoot if you buy&#x2F;read)). I like code that is easy to reason about and delete (I like deleting code far more than writing it!) and that suits my mental model.<p>I also believe our job as a front-end developer is to accommodate designs, not turn around and say, &quot;sorry, we don&#x27;t have a class for 8px margin, it will have to be 5px or 10px&quot;. I&#x27;m not suggesting this or that framework can&#x27;t accommodate this need, just highlighting why I feel the way I do and choose the solution I do.<p>Think about how __you__ want to build and maintain code. Don&#x27;t just jump on something because everyone else does. Analyse your problem. Where are your actual pain points. Find the solution to your own issues. Otherwise you&#x27;ll just swap one set of problems for another.<p>A framework may very well meet your needs. And by all means listen to others extolling its virtues but that will not save you from a lack of due diligence!<p>[ends attempting to dispense fatherly advice]')