Item(by='fpig', descendants=None, kids=None, score=None, time=1605532819, title=None, item_type='comment', url=None, parent=25096004, text='So why include such an obviously silly statement in your article? It just makes the applicant look inexperienced.<p>I am a single data point, but also someone who&#x27;s interviewed 100+ developers across multiple companies, and from my perspective, after reading your article, you don&#x27;t seem to be a person to listen to, and seem to be contributing to the already large amount of bad resume-writing advice online.<p>The main thing I have a feeling you misunderstand (the article makes me think you&#x27;re not an actual industry professional) is that in most cases, to get hired, developers don&#x27;t need to impress some technically-illiterate business person. The goal isn&#x27;t to make some business guy swoon over how you managed to improve a metric a business person would typically care about. Instead, developers need to impress some very technical person, often multiple such people, to get hired. A resume should be written accordingly, and the goal is to make yourself appear to be a mature professional in the eyes of other mature professionals. You don&#x27;t need to dumb things down - you don&#x27;t need to do it for their sake, so dumbing things down just makes you look less knowledgeable or like you&#x27;re trying to bullshit your way through things.<p>If I see &quot;increased user engagement by rewriting into react&quot; on a resume that just makes the candidate look like they&#x27;re desperately digging for things to put in their resume that will make them look good. It is literally better to just write that you rewrote something into react. Of course, it&#x27;s only a small part on my opinion of the candidate, but mentioning user engagement there, especially with a number attached to it, makes the person look like they&#x27;re an inexperienced guy writing their CV by reading some bad &quot;you need to show how you helped the company&quot; internet advice.<p>&quot;Measurable successes&quot; are good if they&#x27;re something I will see and it will think they are very intelligent and&#x2F;or have a high level of expertise in some area, like solving a difficult problem &#x2F; improving something in a way that&#x27;s more efficient than I would expect. The fact that something they did was useful to the company means nothing on its own. You improved openh264 baseline encoding speed by 20%? Do tell.<p>For example, I once improved a part of a system, the slowness of which was causing big problems (things taking 20+ minutes to run), by 1000-10000%+. This was a huge thing. My boss was ecstatic and could barely believe it. He had asked me to look into optimizing it, but would have been happy even with a 100% improvement. I would never mention this on my CV though, even though I do mention that I worked on the system. Why? Because 1) an experienced person reading my resume would likely correctly assume I&#x27;m overselling what I did 2) I would get asked about it in the interview, and I would have to reveal I did it by going through the code and rewriting all the unnecessarily-O(N^2) parts into O(N). The fact that I had presented this as some kind of achievement would leave the impression that I am much less experienced than I actually am. It doesn&#x27;t matter that I did something useful for the company, and it doesn&#x27;t matter that I made a large measurable improvement to something. What matters is how much intelligence or technical prowess it proves I possess, and in this case that&#x27;s very little. If I was in my early 20s, maybe it wouldn&#x27;t be a bad idea to include something like that, as it would suggest I am at least a somewhat decent programmer and not stupid. But for me personally, it would be out of place. So it&#x27;s good to think about what level of expertise you&#x27;re trying to claim. But &quot;I improved user engagement by 27%&quot; will just always be bad, sorry.')