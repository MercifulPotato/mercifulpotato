Item(by='dmytrish', descendants=None, kids=None, score=None, time=1606414200, title=None, item_type='comment', url=None, parent=25218181, text='(Googler here)<p>&gt; Because it benefits Google.<p>Developing internal tools does not always benefit Google. Sometimes there is just no alternative at the time it&#x27;s needed, so Google has to develop something that might become a liability later, accumulating technical debt and stagnating compared to a newer open-source shiny thing. Sometimes it&#x27;s NIH syndrome, or, in other words, wariness to adopt external solutions there&#x27;s no control over and that do not fit Google very well. However Google does have a healthy internal ecosystem with clear product life cycle and balanced planned&#x2F;organic change.<p>&gt; Because that would benefit the competition.<p>Usually Google benefits from its protocols&#x2F;tools&#x2F;projects being used out in the open (TensorFlow, gRPC, Kubernetes, Angular, Android, Chrome), and that includes competitors.<p>There are plenty more mundane reasons this does not happen:<p>- Some of the tools are so dependent on the internal ecosystem that it would make little sense to open source them in a standalone way. There are many things at Google that only exist in one single deployment in the world and turning them into a deployable product for another setting would be a huge task without clear purpose. Also, it&#x27;s hard to opensource operational knowledge and expertise.<p>Google Cloud is an example (positive or negative, depending on your point of view) of efforts to repackage many internal services in a way that is well-documented, supported and accessible to anybody.<p>- Open-sourcing is a spectrum: just throwing code over the wall (the worst one), controlling a project and allowing external contributors, cooperating with other big companies on a standard solution, supporting a more hobbyist-oriented project in line with its own needs. Every option has its own set of challenges and coordination problems. It&#x27;s not always easy to reconcile the internal development model and open source workflow. It&#x27;s not always easy to keep delicate power balance of working with a project instead of taking it over by engineering weight and influence.')