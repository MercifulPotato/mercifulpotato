Item(by='tgraf', descendants=None, kids=None, score=None, time=1605086372, title=None, item_type='comment', url=None, parent=25055914, text='I personally think that networking will be almost exclusively based Linux in some form. If you want to interpret it as &quot;eBPF - The Future of Linux Networking&quot; then that is totally fine as well. That said, eBPF-based networking can be offloaded to SmartNICs already so it may be less Linux specific than you seem to assume right now.<p>Comparing dTrace and eBPF is definitely a very interesting question. I&#x27;ve actually asked Brendan Gregg in the Q&amp;A of his keynote at eBPF summit this year how he compares dTrace and eBPF these days. Here is his answer (jumps right to the specific question):\n<a href="https:&#x2F;&#x2F;youtu.be&#x2F;jw8tEPP6jwQ?t=4618" rel="nofollow">https:&#x2F;&#x2F;youtu.be&#x2F;jw8tEPP6jwQ?t=4618</a><p>I doubt that eBPF will remain a Linux-only technology. Ports to FreeBSD are already underway it seems [0] and Microsoft declared intent to invest into eBPF [1]. I&#x27;m not sure what that means on timeline for eBPF availability on Windows though. There are also several user space implementations for eBPF which could become interesting to provide a universal programmability approach across traditional kernels like Linux, microkernels like Snap and application kernels  like gVisor.<p>[0] <a href="https:&#x2F;&#x2F;papers.freebsd.org&#x2F;2018&#x2F;bsdcan&#x2F;hayakawa-ebpf_implementation_for_freebsd&#x2F;" rel="nofollow">https:&#x2F;&#x2F;papers.freebsd.org&#x2F;2018&#x2F;bsdcan&#x2F;hayakawa-ebpf_impleme...</a>\n[1] <a href="https:&#x2F;&#x2F;twitter.com&#x2F;markrussinovich&#x2F;status&#x2F;1283039153920368651?s=20" rel="nofollow">https:&#x2F;&#x2F;twitter.com&#x2F;markrussinovich&#x2F;status&#x2F;12830391539203686...</a>')