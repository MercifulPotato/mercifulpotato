Item(by='chronolitus', descendants=None, kids=None, score=None, time=1607876859, title=None, item_type='comment', url=None, parent=25389266, text='Another perspective on the question &quot;what is ROS?&quot;, having worked with countless ROS nodes:<p>In a nutshell, ROS is a library that allows you to send and receive messages.<p>The two most used methods in the API are Subscriber.subscribe(message_topic, callback)\nand Publisher.publish(message)<p>For example, a sensor driver will publish a message containing a camera image, then a node will receive a message, detect the people in it, and send another message with their positions. Another node will receive the positions message and calculate a desired action, and send that as a message. You can write your own node which captures any kind of message and publishes any other kind, making things very modular.<p>So ROS also contains a million tools to help you process the messages, for example the Time tools allow you to set timers and convert time stamps, the rosbag tools allow you to store the messages and replay them later, the tf tools allow you to transform geometrical objects between message reference frames, and so on...<p>Many of the tools do their job well, the main issue is documentation. In some cases, the best way to figure out what can&#x2F;should be done is to look at existing code.')