Item(by='int_19h', descendants=None, kids=None, score=None, time=1607470061, title=None, item_type='comment', url=None, parent=25341452, text='TypeScript also uses union types for null &amp; undefined. But then <i>on top</i> of that, it has optionals. So you can have:<p><pre><code>   function foo(x: number | undefined);\n</code></pre>\nor you can have:<p><pre><code>   function foo(x?: number);\n</code></pre>\nThe type of x inside foo is the same in both cases, but the type of foo differs. The first version can only be called as foo(x) - where x is possibly undefined - but the second one can <i>also</i> be invoked as foo(), which then has the same meaning as foo(undefined).<p>But this is mostly because they were trying to come up with a type system to capture existing JavaScript patterns. I doubt it&#x27;d look like that if it could be designed from scratch.')