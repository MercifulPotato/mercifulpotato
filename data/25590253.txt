Item(by='akersten', descendants=None, kids=None, score=None, time=1609397613, title=None, item_type='comment', url=None, parent=25589310, text='I thought it was a joke too. What an awful flag all around:<p>* Woefully ambiguous and underspecified - what is &quot;major&quot;? A 12 FPS drop compared to desktop? Below 30 FPS? Frame jitter outside a certain standard deviation? It will depend on the app (fast-paced frame-perfect game vs. &quot;well I just want the animation to be smooth&quot; necessarily have different requirements for performance), but this flag leaves it up to the browser to decide.<p>* Oh, it&#x27;s meant as a general term for checking whether software acceleration and frame readback (and other yet unknown possible bottlenecks) are engaged, those are the &quot;performance caveats&quot; - but those are either &quot;yes&quot; or &quot;no&quot;, there&#x27;s no way to quantify that with &quot;major&quot;, totally meaningless. Unless it&#x27;s conditionally choosing to succeed even with software rendering if some unspecified performance threshold is met. The 2 sentences of documentation about this flag means I wouldn&#x27;t know.<p>* If you Google the name of the flag, near the bottom of the first page you&#x27;ll find an email thread where someone brought up points like this and was ultimately shot down and the flag pushed through because &quot;the Maps team really needs this.&quot; The technical equivalent of legislating from the bench. I wish I could create new browser features to solve all my inconveniences too. Why the Maps team couldn&#x27;t figure out how to measure the canvas FPS and degrade on their own is a mystery to me.<p>* To round it all out, the name is also really bad. &quot;failIfMajorPerformanceCaveat&quot; is a weird negative tense - why not &quot;requireUnhinderedPerformance&quot;? That&#x27;s consistent with the universal standard of &quot;require&quot; (not &quot;failIf&quot;, how goofy) and is a lot clearer about the supposed intention of the flag (to try to ensure performance similar to native GL rather than this ambiguous &quot;performance caveats&quot; thing).<p>Sorry, just a rant about shovelware in the browser stack.')