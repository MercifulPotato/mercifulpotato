Item(by='cmarinas', descendants=None, kids=None, score=None, time=1603128827, title=None, item_type='comment', url=None, parent=24826460, text='CHERI provides spatial protection and is very strong at this but does not handle temporal protection well (use-after-free for example). Once a pointer is given to another code entity&#x2F;compartment it is hard to revoke the permission since that&#x27;s tied to the (capability) pointer itself, not the memory it points to. There are workarounds but not that nice.<p>MTE, OTOH, was specifically designed for detecting temporal bugs. For example, a freed object has the allocation tag (stored in memory) changed by the heap allocator so that the original pointer (with the original tag) can no longer access it. Of course, the trade-off is the 4 bits per 16-byte granule that need to be stored somewhere and the probabilistic nature (1 in 16 chance of hitting it).<p>But I think CHERI and MTE would complement each other nicely.')