Item(by='leto_ii', descendants=None, kids=[25010564], score=None, time=1604690572, title=None, item_type='comment', url=None, parent=25009411, text='&gt; So, if the person who is concerned about technical debt is senior enough they will have some ability to see the business tradeoff and thus can completely avoid the phrase. They&#x27;d say instead something like &quot;I was thinking that if we changed X we would get value Y.&quot;<p>In my (somewhat limited) experience the kind of value that you get from reducing technical debt is not easy to explain to the business side, because it doesn&#x27;t immediately translate into new features.<p>&gt; And then the other issue is that a huge amount of technical debt is just code that a more senior engineer would refactor as they went.<p>A limited amount of spaghetti can be untangled during the normal development process, but I don&#x27;t think significant changes in design can be done while working on features. Once you get to that point, inevitably you will have to set time aside specifically for dealing with tech debt.<p>Not to mention that the kind of organizations that accumulate tech debt rapidly tend to also complain if you spend more than the minimal amount of time necessary on a feature. &quot;It took you, a mid-level dev, 3 days to finish a feature that a starter could complete in a day by copy-pasting existing code with some SO stuff? You must not be too good at your job.&quot;')