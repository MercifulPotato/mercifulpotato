Item(by='valenterry', descendants=None, kids=None, score=None, time=1606064461, title=None, item_type='comment', url=None, parent=25178414, text='&gt; Eg have fun implementing an event-driven GUI app<p>Which leads to the question: why is this harder in COBOL than in Javascript or Java? Is it just the lack of a library? If so, does the lack of libraries make a programming language a DSL? Or is it because it is difficult to create such a library? If so, why is that difficult for COBOL and not for Javascript&#x2F;Java and what else is difficult to build with COBOL.<p>&gt; I guess COBOL the language but not necessarily the runtime works well also for writing backend service implementation code<p>I&#x27;m sorry to be picky on words here, but as it is the core of the whole discussion: &quot;works well&quot; is quite meaningless if not put into context. &quot;Works better than X&quot; or &quot;has an advantage over X in some way, for example...&quot; is much more fruitful for a discussion about this topic.<p>&gt; More seriously, as I recall it, COBOL simply has straightforward idioms for arithmetic, date calculations, statically-typed structured file I&#x2F;O, ISAM file access (and SQL?) as part of the language rather than Java&#x27;s BigDecimal and various date libraries that all suck in a different way and at best cause enormous fluent-style expressions with cognitive overhead.<p>I don&#x27;t want to be ignorant here... and I&#x27;m also not a fan of Java. In fact I dislike Java so much that I declined highly paid jobs. However, is COBOL really better in these things?<p>So I have seen some production COBOL code at work before and I just looked up some COBOL questions on stackoverflow, e.g.: <a href="https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;48016044&#x2F;formatting-date-time-in-cobol" rel="nofollow">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;48016044&#x2F;formatting-date...</a><p>Sorry, but even Java&#x27;s horribly verbose syntax looks way better than this. Apart from the annoying verbosity, I think Java&#x27;s new time library as well as BigDecimal&#x2F;BigInteger and also its SQL libraries are not too bad anymore. And if one wants nicer syntax - there are enough languages out there that do it better.<p>Okay, having SQL directly embeddable is nice, I agree. I don&#x27;t think it is good programming language design to do that, but then again SQL has been very stable over time and it&#x27;s certainly nice to use it like that.<p>As for...<p>&gt; statically-typed structured file I&#x2F;O<p>What does that mean? I tried to find it out but didn&#x27;t really get an idea what you mean by that.<p>&gt; Plus, COBOL doesn&#x27;t have reflection and metaprogramming so self-important idiomatic Java code golf is spotted immediately as out of place next to actual business logic.<p>That&#x27;s true, but that doesn&#x27;t make COBOL better - it just makes Java worse. ;)')