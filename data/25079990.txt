Item(by='walterbell', descendants=None, kids=None, score=None, time=1605253269, title=None, item_type='comment', url=None, parent=25043199, text='See also Terra, <a href="http:&#x2F;&#x2F;terralang.org&#x2F;" rel="nofollow">http:&#x2F;&#x2F;terralang.org&#x2F;</a><p><i>&gt; Like C&#x2F;C++, Terra is a statically-typed, compiled language with manual memory management. But unlike C&#x2F;C++, it is designed from the beginning to be meta-programmed from Lua. The design of Terra comes from the realization that C&#x2F;C++ is really composed of multiple “languages.” It has a core language of operators, control-flow, and functions calls, but surrounding this language is a meta-language composed of a mix of features such as the pre-processor, templating system, and struct definitions.<p>&gt; In Terra, we just gave in to the trend of making the meta-language of C&#x2F;C++ more powerful and replaced it with a real programming language, Lua. The combination of a low-level language meta-programmed by a high-level scripting language allows many behaviors that are not possible in other systems. Unlike C&#x2F;C++, Terra code can be JIT-compiled and run interleaved with Lua evaluation, making it easy to write software libraries that depend on runtime code generation.</i>')