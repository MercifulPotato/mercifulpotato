Item(by='morganvachon', descendants=None, kids=[25728484, 25723817], score=None, time=1610322744, title=None, item_type='comment', url=None, parent=25712949, text='So I&#x27;m not a programmer by trade or hobby, I&#x27;m a hardware hacking and sysadmin type. I&#x27;ve dabbled with programming over the years just to try to get my feet wet, with &quot;simple&quot;&#x2F;&quot;easy&quot; languages like Python, Lua, PHP, etc. I never really got into it and never really grasped the fundamentals beyond basic program flow (something I had already learned with Visual Basic in college 20 years ago).<p>I saw this on HN a couple of hours ago and figured I&#x27;d give it a whirl out of boredom and something to do while dinner was in the oven. I&#x27;ve never touched C before, and while I understand its historical significance and the fact that it&#x27;s a very low-level language, I was always told to never start with C because I&#x27;d never understand it.<p>Now, I&#x27;m not claiming that I understand it to the point I can start writing my own programs, but I will say that the way the author presented this tutorial has built a confidence in me that if I keep pushing at it, I can actually learn to code in C over time. I got through the first chapter and I already have a fundamental understanding of how to manipulate characters and input&#x2F;output on the command line. Thinking back to my dabbling with bash scripts in the past, I now more fully grasp what I was just guessing at with those.<p>Granted, it helps that I did start with an understanding of variables, conditional statements, and other basic programming building blocks, but I am no longer intimidated by learning C and I am eager to finish this tutorial. If I still have that eagerness once it&#x27;s over I&#x27;m going to continue learning C, as one of my favorite OSes (OpenBSD) is written in it and I&#x27;d love to understand more about how it works under the hood.')