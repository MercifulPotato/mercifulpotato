Item(by='jcranmer', descendants=None, kids=[25260694], score=None, time=1606774748, title=None, item_type='comment', url=None, parent=25259132, text='Weird architectures definitely make the question a lot more difficult to answer. My gut reaction would be to say that your hypothetical ISA has 33 registers, and that the register file is memory-mapped to a specified region of virtual memory. That&#x27;s partially because of the way that you&#x27;re going to worry about how cache coherence will work out, but also because I suspect the mcontext_t or OS-equivalent interface will also define its structure layout as such.<p>The broader point, though, is in deciding whether or not to include registers like CR0 and DR0. The principle I&#x27;m using here is that registers that are not expected to be saved&#x2F;restored on task switches should be excluded. Registers that are per-process (i.e., page tables in general, or segment descriptors on x86) or per-CPU (most MSRs) are thus excluded by this criterion.<p>FSBASE&#x2F;GSBASE are extremely borderline--I wouldn&#x27;t complain if they were or if they weren&#x27;t excluded from a list of registers. These act as a mixture of user-visible registers (even if accessibly only via syscalls until very recently) and segment descriptor information. They&#x27;re not in Linux&#x27;s userspace-visible mcontext_t struct, but they are in the kernel&#x27;s equivalent to mcontext_t.')