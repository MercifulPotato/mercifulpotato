Item(by='bonoboTP', descendants=None, kids=[25145666], score=None, time=1605719866, title=None, item_type='comment', url=None, parent=25138463, text='Right, what if there are indeed many impostors in the industry? Going by some of the threads on hiring, job applications, promotion criteria etc., there may be quite some people who aren&#x27;t quite up to the job they are doing, e.g. non-fizzbuzzing programmers, people taking credit for others&#x27; work etc.<p>Ultimately, you have to look at the specifics and some objective criteria. What are your achievements? How does your understanding and skills compare to you peers? Be careful not to get fooled by bullshitters who just pretend to know by using lots of fancy buzzwords in random sequence. You can only tell this through deeper technical conversations.<p>There&#x27;s a lot of feel-good answers out there that boil down to &quot;oh, nobody has any idea what they are doing anyway, everyone is just winging it&quot; etc. This is not true. Through conscious effort you can master and build strong mental models of technical systems and processes. It&#x27;s entirely possible to feel confident in one&#x27;s expert knowledge of a field after many years of experience. It doesn&#x27;t mean you feel invincible, and much of this kind of knowledge is indeed about your own gaps of knowledge but also knowledge of pitfalls and illusions of easy answers and knowing when you&#x27;re entering unexplored but enticing territory that feels simple to beginners, but you expect it to be extremely complex as an expert, etc.<p>Keep on learning and studying. If you feel embarrassed that you don&#x27;t understand a particular thing and this bothers you, take some time and dive into it. In my experience there is no better cure than to realize that everything in tech can be understood. It&#x27;s all logical from the highest part of the stack down to the lowest electronics level. Once you gain enough experience and have a rough mental map of this whole territory, you will know that there&#x27;s a lot of details you <i>could</i> learn if needed, but not everything is worth knowing for your own case. Apply an engineering approach to this as well. You have a limited lifetime and no single person can know everything. That&#x27;s the constraint. Now pick out the actually important parts and discard those that aren&#x27;t necessary for your development. And feel comfortable that you will pick up whatever is needed along the way.<p>It&#x27;s a similar case with general personal confidence. There are people who exude this level of confidence which in effect says &quot;Whatever happens to me, I will take care of it. If I&#x27;m dropped into a foreign land tomorrow, I know I will rebuild my life. If my house burns down, I&#x27;ll recover. If I&#x27;m thrown into prison, I&#x27;ll figure out how things work there and will adapt. I don&#x27;t know what will happen tomorrow, but I&#x27;m prepared.&quot;<p>In tech, you can also not know exactly what you will have to learn in the coming years, it will never be like I&#x27;ve now learned everything, from now on I&#x27;ll just apply it. The best you can do is have a good overall mental overview of the kinds of things that exist and be able to zoom in on any of it when needed.')