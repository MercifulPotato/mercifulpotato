Item(by='DaiPlusPlus', descendants=None, kids=None, score=None, time=1604584528, title=None, item_type='comment', url=None, parent=24997821, text='&gt; Not really sure why there was so much hate on swing, probably from the people who never used it. No performance issues, looked good enough for users, theme able. I actually built apps that when compared with other native themed apps would not have been distinguishable from windows native. AWT was slow and ugly but not swing.<p>Let&#x27;s unpack this...<p>&gt; Not really sure why there was so much hate on swing<p>Swing itself <i>isn&#x27;t bad</i> (compared to its predecessor in AWT) but Swing is still an abstraction over multiple different and incompatible desktop UI toolkits - therefore it <i>has</i> to compromise.<p>&gt; probably from the people who never used it<p>Used it as an end-user, or used it as an applications developer, though?<p>The last time I used Swing was around 2010 - and I admit that I haven&#x27;t stayed on-top of new developments, but I assume that Sun&#x2F;Oracle switched emphasis away from Swing over to JavaFX (their WPF-compete) and that Swing hasn&#x27;t changed much (at a fundamental level) much. Please correct me if I&#x27;m wrong.<p>&gt; No performance issues<p>Yes-and-no. Things like repainting a busy charting component is fast enough, sure - but one thing about Swing that sticks out like a sore thumb is abysmally slow window repainting when a window is resized - I first noticed this when I was a lame warez kiddie using Limewire almost 20 years ago (wow...): actively resizing the Limewire window would cause the JVM to pause repainting the window and just draw a black background color until a few hundred milliseconds after I finished resizing. I&#x27;ve noticed similar behaviour in other Swing applications. It isn&#x27;t pretty. Especially on macOS where users expect to be able to smoothly resize application windows.<p>&gt; looked good enough<p>&quot;good enough&quot; is not exactly the best review in the world<p>&gt; themeable<p>Yes, but who honestly goes through the effort to make an entire theme just for their own application? That&#x27;s only affordable if you&#x27;re a software giant or a company whose brand identity is heavily based on their software UX (and if that was the case, they wouldn&#x27;t be using Java for desktop applications).<p>&gt; I actually built apps that when compared with other native themed apps would not have been distinguishable from windows native<p>This may have been true in the final months of Windows 98&#x2F;Me and Windows 2000, but Swing&#x27;s inability to correctly reimplement (or even wrap) Windows XP&#x27;s visual styles (especially the animated controls and when running outside of 96dpi mode) was exactly what gave Swing that uncanny-valley feeling (granted - and hypocritically - Microsoft&#x27;s own WPF is also guilty of this, which is why I avoided it entirely until recently).')