Item(by='arcturus17', descendants=None, kids=[25397493, 25398000, 25397414], score=None, time=1607769252, title=None, item_type='comment', url=None, parent=25396769, text='The article&#x27;s thesis can be summed up as &quot;low-code and other UI development trends (eg, non-2D) <i>are</i> taking over, but there will be plenty of opportunities for UI developers <i>if</i> they adapt&quot;.<p>However I find the premise that low-code is taking over highly questionable. It may be <i>for some use cases</i>, but they will likely remain just a small slice of the pie in the big picture.<p>Judging by the amount of job offers alone, React is also taking over - to the chagrin of some, and the delight of others -, yet React is <i>anything but</i> low-code.<p>We all know the limitations of low-code solutions too: they&#x27;re good up until a certain point, they make you feel like an utter genius for the speed at which you are shipping, causing nods of approval and high fives all-around.<p>That is, until you want to stray out of the trodden path: then you wish you hadn&#x27;t adopted them in the first place, and that behemoth of a React or Angular app you shipped last year suddenly elicits the nostalgia of a long-lost lover with all its shortcomings and misgivings.<p>So it is hard to believe that the next 10 years will see the decline of custom UI 2D development, or anything close to it. I&#x27;d wager if anything low-code will be another tool in the developer&#x27;s toolbox, and shipping great products at speed will mean carefully architecting them to mix and match the best of both worlds. On the other hand, I predict that those going all-guns-blazing on no-code will encounter some unpleasant surprises at best, and in the worst cases will see spectacular project implosions.<p>Such has been the history of radical cost-cutting and time-saving measures in software engineering in the last 30 years (outsourcing, low-code itself, etc.). And so it goes...')