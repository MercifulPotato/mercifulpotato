Item(by='laplacesdemon48', descendants=None, kids=[25823597, 25823279, 25822851, 25825924, 25823169, 25829131, 25827201, 25828354, 25824157, 25823390, 25823472], score=None, time=1610984455, title=None, item_type='comment', url=None, parent=25820457, text='I&#x27;ve been using R nonstop for pretty much 5+ years. I&#x27;m happy that there&#x27;s established competition coming from Python and new competition coming from Julia. Having these languages compete over similar types of programmers pushes each one to be better, which is awesome. I&#x27;m not a die-hard R person, I&#x27;d be more than happy to switch under the right circumstances.<p>But...I think one thing gets overlooked way too often. For &quot;data scientists&quot; or &quot;statisticians&quot; or [insert new term here], the majority our non-modeling time is spent on just plain old data wrangling. To me, R is unbeatable here. I&#x27;ve tried Python ~2 years ago and pre-1.0 Julia.<p>Using <i>tidyverse</i> you can do pretty much anything to any dataset, often *without a monstrous amount of keystrokes*. (The pipe syntax is awesome). If you really need speed you can always switch over to <i>data.table</i> for uglier but faster code. I really tried but I could never replicate the &quot;brain cycles to keystrokes&quot; speed of R in Python&#x2F;Julia. That is, being able to intuitively and quickly just convert my thoughts into readable data wrangling code.<p>Sure the base R language is not that &quot;fast&quot; and Julia&#x2F;Python benchmarks are way faster. But in practice this doesn&#x27;t matter to me. Most of the performance sensitive packages are written in C&#x2F;C++&#x2F;Fortran anyway (rstan, brms, glmnet, caret). I don&#x27;t care that I could write 3x faster loops. The extra 5 seconds for that one piece of code doesn&#x27;t make up for the absence of a good data wrangling ecosystem.<p>My message to the Julia team: You can get a very large portion of the R userbase to switch over if you focus on a Julia version of the <i>tidyverse</i> (especially dplyr). I know that <i>DataFrames.jl</i> exists but it just doesn&#x27;t even come close. There&#x27;s a difference between &quot;you can do this in Julia too&quot; and &quot;here&#x27;s a clean&#x2F;intuitive way to do this <i>better</i> without extra baggage&quot;.<p>I&#x27;m sorry if the above seems harsh. I genuinely appreciate the Julia team&#x27;s efforts. I can only imagine how hard it is to create a new language. I just wanted to be honest.')