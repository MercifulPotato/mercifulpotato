Item(by='lmilcin', descendants=None, kids=None, score=None, time=1610586790, title=None, item_type='comment', url=None, parent=25768916, text='Efficiency can be measured in many different ways.<p>Having no dedicated database server or even database instance, being able to persist data to disk with almost no additional memory required, marginal amount of CPU and no heavy application dependencies can be considered very efficient depending on context.<p>Of course, if you start doing this on every change, many times a second, then it stops being efficient. But then there are ways to fix it without invoking Oracle or MongoDB or other beast.<p>When I worked on algorithmic trading framework the persistence was just two pointers in memory pointing to end of persisted and end of published region. Occasionally those pointers would be sent over to a dedicated CPU core that would be actually the only core talking to the operating system, and it would just append that data to a file and publish completion so that the other core can update the pointers.<p>The application would never read the file (the latency even to SSD is such that it could just as well be on the Moon) and the file was used to be able to retrace trading session and to bring up the application from event log in case it failed mid session.<p>As the data was nicely placed in order in the file, the entire process of reading that &quot;database&quot; would take no more than 1,5s, after which the application would be ready to synchronize with trading session again.')