Item(by='emn13', descendants=None, kids=None, score=None, time=1606426192, title=None, item_type='comment', url=None, parent=25222947, text='Guaranteed termination isn&#x27;t the only analysis worth having, especially since if your <i>aim</i> is termination (as opposed to leveraging that simplicity for other analysis) it&#x27;s much easier to simply impose termination and be done with it.<p>So, WASM isn&#x27;t entirely unconstrained, and those constraints do allow some interesting analyses that true native code cannot support, e.g. symbolic execution: <a href="https:&#x2F;&#x2F;blog.trailofbits.com&#x2F;2020&#x2F;01&#x2F;31&#x2F;symbolically-executing-webassembly-in-manticore&#x2F;" rel="nofollow">https:&#x2F;&#x2F;blog.trailofbits.com&#x2F;2020&#x2F;01&#x2F;31&#x2F;symbolically-executi...</a><p>By it&#x27;s very design it&#x27;s aimed at running untrusted, even malicious code without exposing the host to security risks, while allowing the imposition of resource constraints.  It doesn&#x27;t sound completely absurd to me (not an expert in this) that some project might seek to use those safety guarantees as a way to avoid paying for the more heavyweight guarantees provided by the kernelspace&#x2F;userspace split.<p>A quick google find lots of people trying to get this to work; who knows - it might pay off.')