Item(by='cb321', descendants=None, kids=None, score=None, time=1603275458, title=None, item_type='comment', url=None, parent=24844290, text='@burntsushi&#x27;s usage context is a highly multi-threaded single process doing many mmap()&#x2F;munmap()s in parallel. There &quot;being a good citizen&quot; may well mean &quot;not being so hard on your own self&quot;, but where the definition of &quot;self&quot; is more complex. Hah.  This is starting to sound more like pop psychology than systems programming. :-) :-)<p>Anyway, there are quite a few ways a process can be too hard on itself, self-defeating its own max IO goals.  Over in that lobste.rs thread, the idea also arose that, besides L3 cache sharing, the kernel may be locking the whole process to edit VM mappings during both mmap and munmap.  A sibling(-ish) comment here mentions sharing another cache -- the TLB for Virtual-&gt;Physical translation. It&#x27;s hard to say what the whole mix for `ripgrep` winds up being in various deployment scenarios without more investigation.  Another &quot;self&quot;-competition example would definitely be waiting for disk head  movement on Winchester drives, but `rg` is mostly a child of the SSD&#x2F;Flash generation.')