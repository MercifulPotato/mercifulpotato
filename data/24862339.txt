Item(by='samprotas', descendants=None, kids=None, score=None, time=1603394884, title=None, item_type='comment', url=None, parent=24861603, text='I agree that having multiple different types of &quot;object values&quot; share one JSON key with no explicit &quot;type&quot; tag is asking for trouble with extensibility and conflicts.<p>That said, I think the constructive suggestion would be: &quot;add a type tag to all objects in a union&quot; (something suggested elsewhere in this thread).<p>Their &quot;handles&quot; can still claim &quot;just a string&quot; to save bandwidth in the common case, arrays can still represent &quot;many things&quot; and objects require &quot;type&quot; to be dis-ambiguous.<p>Most of the comments below don&#x27;t mention the (real and important, but easily solvable) issue you&#x27;ve brought up however. They primarily fall into one of two buckets:<p>- It&#x27;s hard to work with data shaped like this in my language (ex: java&#x2F;go)<p>- It&#x27;s hard to deserialize data shaped like this into my language that has no tagged unions (ex: java&#x2F;go)<p>My biggest counterpoint to all of these complaints is: The fact that your language of choice cannot represent the concept of &quot;one of these things&quot; doesn&#x27;t change the fact that this accurately describes reality sometimes.<p>A protocol with mutually exclusive keys (or really anything) by convention is strictly more bug-prone than a protocol with an object that is correct by construction.')