Item(by='CyberDildonics', descendants=None, kids=None, score=None, time=1603924928, title=None, item_type='comment', url=None, parent=24924307, text='The main points are not C++ features, but the way classes and inheritance are how everything is broken down.<p>A much better approach is to allocate large chunks of memory at one time and run through the arrays of floats directly.  Instead of tracing and shading one path ray all the way through, finding out where it hits, running the brdf, looking up textures, casting another ray, etc. it is much better to do each stage in large chunks.<p>Going from data structures holding lots of virtual pointers to something like I described above can be a substantial improvement in speed and give a lot of clarity at the same time.<p>Many times programs with a lot of inheritance end up with their execution dictated by types calling other types&#x27; functions, which makes it more implicit and buried rather than linear in a top level function.  It becomes similar in a way to callback hell where you are trying to track down how the program gets to a certain place. Many times it takes adding break points and walking back through the call stack to reverse engineer it, rather than looking at a single top level function that has a lot of steps.')