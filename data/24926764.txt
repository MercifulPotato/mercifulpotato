Item(by='necovek', descendants=None, kids=[24927198], score=None, time=1603941150, title=None, item_type='comment', url=None, parent=24920681, text='&quot;Multithreaded embedded systems&quot; is not saying much.<p>My initial hunch is that you&#x27;ve got a lot of existing code that passes and mutates big global state objects around.  Still, even your description clearly highlights an issue that is there regardless of whether you want to push for a &quot;functional core&quot;: &quot;decisions based on state ... run so thoroughly through the code&quot; _will_ come back and bite you.<p>It also highlights an easy way to decouple those into simpler functional parts: identify which part of the state is really needed in each part, and only pass that in, and have it return an updated state: basically, the only change you are making is turning the implicit parameters into explicit function arguments and return values.  Turning the entire codebase around will be tricky, of course.  But perhaps you can switch over chunks of it as the units are readied as you go along.<p>Of course, if you&#x27;ve got a lot of data that would be expensive to copy around, you might want to keep some of the logic for mutating that non-functional, but you could still decouple that thus making it have a functional core too.')