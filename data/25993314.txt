Item(by='kingdomcome50', descendants=None, kids=None, score=None, time=1612210951, title=None, item_type='comment', url=None, parent=25991931, text='Does this solve the problem though? I&#x27;ll be honest, I&#x27;m not very familiar with Haskell (and frankly only casually use FP in general), but I don&#x27;t see how the pattern in your link alleviates my concern.<p>The problem (truly the problem) is about _where_ one defines behavior. It&#x27;s the expression problem (EP) at its core. A FP approach separates data and behavior in a way that makes adding new behaviors to the same data types easy and OOP combines them in a way to make adding new data types to the same behaviors easy. It&#x27;s literally the difference between:<p><pre><code>    let model&#x27; = update model msg\n</code></pre>\nand:<p><pre><code>    let model&#x27; = model.update msg\n</code></pre>\nLike I said, I don&#x27;t know Haskell very well (and had a hard time grokking the link), but any purely functional language will suffer from the former over the latter. The side of the EP a language falls on is simply as a matter of the data types&#x2F;type system available.')