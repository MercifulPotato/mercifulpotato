Item(by='wcarss', descendants=None, kids=[25347161, 25347354, 25347097, 25347777, 25347701, 25347426], score=None, time=1607442700, title=None, item_type='comment', url=None, parent=25345971, text='<p><pre><code>    but the use is massively frustrating. Swipe controls \n    don&#x27;t work, the app sucks, pairing with multiple devices \n    is a nightmare.\n</code></pre>\nThis is a great expression of one of the primary issues facing the software (and technology) industry today: it seems like software is fundamentally just too hard to do right. Basic competency and non-broken operation is regarded as a hugely valuable luxury feature. It&#x27;s a cornerstone of <i>the</i> luxury technology brand!<p>But... is software really too hard? If so, how does Apple do it, are they just better engineers than the people who work at Sony? Maybe, but that seems unlikely to account for the difference.<p>And of course I don&#x27;t really know, as I&#x27;m just a person on the internet, but I have a hunch: I believe Apple can do better because they have so much vertical integration, i.e. real control over much more of the technology stack in their product.<p>Let&#x27;s say Sony has some in-house devs, but they hire a team on contract for the app&#x27;s actual UI. Sony&#x27;s just going to write the API layer for the UI to talk to. Sony will also make some of the hardware, but they&#x27;re using a prefab chip and some antenna they bought, and they&#x27;ll buy some proprietary off-the-shelf firmware for the lowest layer.<p>But, maybe it turns out the antenna and the chip don&#x27;t play nicely under some key modes of operation. They can&#x27;t redesign either of them, because they&#x27;re just buying those parts. They shop around changes, but it would exceed reasonable costs. Maybe the firmware should be able to compensate here, but it&#x27;s closed-source, and the company that wrote it shut down and sold their properties to someone else that won&#x27;t turn any request around in under a year. And then, Sony sells the division that was working on the API, and they end up finishing the job out as a contract. This leaves all the API&lt;-&gt;UI planning to contractors talking through an intermediary who still works at Sony. So it goes. And we all end up with another expensive piece of crap that just doesn&#x27;t work.<p>But on Apple&#x27;s side? I bet way more of it is in-house, and what isn&#x27;t is locked in on deals that make Apple by far the most important customer. If they need a change, they get it. Apple&#x27;s teams just... write the software that needs to get written! Maybe they physically meet each other. The firmware gets fixed when it&#x27;s needed. And Apple ends up with a &#x27;luxury product&#x27; built atop &quot;hey look, it actually works!&quot;<p>Is my point that everyone should be like Apple, or SpaceX? It&#x27;s clear that not every firm can have tight vertical integration. Most have nowhere near the size, power, time, or budget to do this.<p>So my point is that if software and hardware were open by default, at least we could fix the damn things.<p>Sony maybe made some decent hardware there. It need not be shackled to some crayola software joke, if only they (and all of us) weren&#x27;t so darn proud of our intellectual property that we could never dream of allowing someone to take a wrench to it.<p>Things being closed is so built-in that it&#x27;s hard to even imagine this: how would we fix the headphone software? We&#x27;d probably need (expensive, hard to use) ROM-flashing utility hardware, decompilers, and the ability to load arbitrary code onto Apple devices! Impossible! Well, it&#x27;s all hard because we want it that way. It&#x27;s safer, probably.<p>But it boggles the mind.')