Item(by='spatular', descendants=None, kids=[24817752], score=None, time=1602951057, title=None, item_type='comment', url=None, parent=24810286, text='MMU allows linux to provide a &quot;flat&quot; memory space to each userspace process. This memory space is assembled from 4KB pages that can be randomly dispersed throughout physical memory. Say, you want to malloc() 1MB of memory on a system that&#x27;s been up for some time. Physical memory may not have a fitting continuos chunk of memory, but virtual memory of a newly created process will always have one, provided that there is enough free pages available.<p>In other words without MMU all programs share the same memory space, and if it get fragmented, generally you&#x27;d have to reboot. With MMU fragmentation can still be an issue, but it&#x27;s greatly reduced, since each process has its own memory map. And if memory of the process gets framgmented, you can just restart it. If runtime supports object compaction&#x2F;relocation, then fragmentation may be not an issue at all.<p>Re access to memory locations -- mostly any direct access to instruction or data memory in userspace program automatically goes through MMU remapping.')