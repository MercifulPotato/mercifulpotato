Item(by='tptacek', descendants=None, kids=None, score=None, time=1603411412, title=None, item_type='comment', url=None, parent=24854382, text='The actual execution model of what BPF is doing closely (and deliberately) matches C, and you care about every detail of what&#x27;s happening (not least because you have a limited number of instructions to spend in a BPF program). There&#x27;s no meaningful safety win in writing BPF in Rust (if there is, we have bigger problems). You can&#x27;t use the standard library, or any of the standard library&#x27;s data structures. In fact, I don&#x27;t even think you can call functions right now without giving up tail calls. So I don&#x27;t see the advantage. But you do you!<p>As for Donenfeld: you couldn&#x27;t be more wrong. Jason wrote a patch to fix the WireGuard&#x2F;XDP breakage, and the <i>XDP team</i> rejected it, saying that they didn&#x27;t feel XDP made sense for WireGuard.<p>Their position is also easy to understand: the point of XDP is to intercept packets before they&#x27;re copied into socket kernel buffers, and you can&#x27;t meaningfully do that with a virtual network that runs off UDP sockets to begin with. I disagree with them about this being dispositive --- consistency of interface is much more important to me than &quot;performance surprises&quot; --- but, whatever, at least acknowledge the debate rather than sniping.')