Item(by='fermienrico', descendants=None, kids=None, score=None, time=1602441470, title=None, item_type='comment', url=None, parent=24747178, text='The biggest problem with Julia is its marketing[1]:<p>- Julia lures newcomers by the way of attractive marketing (At one point in my career, I was such a huge fan of Julia that I dismissed many people and their concerns. It was like  I was following a cult). This is pre v0.4 days.<p>- Too much focus on optimization. As a seasoned engineer, speed has been less and less of a concern where primary packages that need to be fast in Python are already quite fast. Majority of the tasks most engineers (not academicians) do is plumbing and connecting various pieces together. Julia just isn&#x27;t good at this and perhaps it will get better.<p>- Julia markets itself boldly as a general purpose language but doesn&#x27;t have a good systems library, no real competitive webframework and many things that are necessary for a true general purpose language - for e.g. GUI. At best, it is a scientific computing language such as MATLAB but free (that is a huge thing for Academicians but not for engineers working in Top 500 companies). At worse, it is lacking features and documentation that MATLAB has.<p>- Julia isn&#x27;t humble in its approach towards marketing. It over-extends and over-reaches. This leads to people like myself lured into it and then completely burned by the experience. For e.g., it flaunts about being able to see the inline assembly instructions - in my entire 15 year career as a software engineer, I&#x27;ve never had the need to do this. It is almost a meaningless feature for vast majority of the users, but marketing wise it is pretty attractive.<p>- Julia recruits inexperienced software engineers and non-software &quot;script junkies&quot;. It has lost its vision and original premise since 0.4v I feel like. Syntax has gotten worse. Bad decisions have been made. I think the founders of Julia are very very smart folks, it&#x27;s just the community that is full of people who haven&#x27;t built anything remotely large and of medium complexity. Are there exceptions? Yes, Julia has been adopted in a few large scale projects but I dispute whether that was a good decision.<p>Note: My experience is based on engineering mindset, not academics and research. Julia would probably be pretty good on a professor&#x27;s macintosh and can gain wide adoption in those areas.<p>[1] <a href="https:&#x2F;&#x2F;julialang.org&#x2F;benchmarks&#x2F;" rel="nofollow">https:&#x2F;&#x2F;julialang.org&#x2F;benchmarks&#x2F;</a>')