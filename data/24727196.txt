Item(by='rektide', descendants=None, kids=None, score=None, time=1602222333, title=None, item_type='comment', url=None, parent=24712520, text='&gt; This is the most sickening sentence for me.<p>it&#x27;s three sentences you quoted.<p>imo this is a quite harsh &amp; pointed take you have presented. you seem to focus on some very-nearby headline sentences that do focus on performance, where-as the real story is much more interesting &amp; the tech much more promising.<p>&gt; blatant exploitation that’s occurring as there is too much centralised ownership<p>what makes you think this is so lopsided? yes, the spdy drafts released in 2012 originated from google. and google spent enormous amounts of effort, time &amp; money championing &amp; supporting development of QUIC as it made it&#x27;s way through the IETF, where other non-Google engineers also worked to improve HTTP and build a powerful new transport protocol that shows enormous progress &amp; is opening doors.<p>where is the exploitation?<p>&gt;  The myopic internal focus. ‘Look we’ve made our new thing a standard and look it makes our products run faster’<p>actually they made two standards. this is much better than where we were. with http2, we had built a true monster of a specification, untame-able. for good reason! we wanted good things! but the http2 spec was trying to shoe-horn a bunch of streams inside tcp, a streaming transport protocol, and that never quite fit (head of line blocking problems resulted), but just as bad, it made http2 a massive work that was hard to evolve &amp; grow &amp; reuse &amp; enhance.<p>they took an extremely broad view, &amp; said, these pieces don&#x27;t belong together. they delegated responsibility into component pieces. they made pieces re-usable.<p>the result is that there are now a couple dozen efforts related to improve the underlying QUIC transport for lots of interesting use cases. the QUIC working group lists a couple dozen efforts[1] &amp; enhancements, such as multi-path, load-balancing tuning, multicast, ack controls, satcom capabilities, &amp; webtransport, a potential radical simplification &amp; rework of websockets in a more connection-friendly manner. this is all work being done outside of http, being done with quic, because of these advances by these very careful, considerate, thoughtful, aware engineers, &amp; their willingness to work with other engineers &amp; the IETF to figure out how best to improve things, how best to decouple http2&#x27;s transport protocol from it&#x27;s application protocols.<p>&gt;  In my opinion this is predatory behaviour packaged up as open source good for all<p>i would very much like to hear some of what you feel or think any of your numerous very heavy accusations are due or deserved. using acerbaic words like &quot;most sickening sentence&quot;, &quot;myopic internal focus&quot;, &amp; &quot;blatant explotation&quot; are big big words, big angry moods, and it&#x27;s really uncomfortable, really hard for me to process &amp; deal with such emotional turmoil directed at something that seems so innocent &amp; like such a natural refinement &amp; progression over the very good solid ideas &amp; improvement that were http2, as it tried to move on &amp; progress beyond http1.1 pipelineing, which everyone wanted very much wanted &amp; in many cases did give up on.<p>so why do you hold your opinion? it really hurt me to hear your opinion, stated so pointedly, at such a lot of work that so many engineers all over the industry have contributed to &amp; worked hard on. is this new dissent you have? are there other anti-http3 anti-quic folks who have staked some of their problems &amp; claims &amp; issues, or who have other ways they want the community to work through standards &amp; specifications to improve the internet? what are the issues here, what&#x27;s wrong? i for one thank my lucky stars that there are corporate patrons paying engineers good money to improve the world with works like this, to do the logical &amp; consistent task of breaking http2 into it&#x27;s transport (quic) and application (http3) protocols, improving the speed &amp; reliability of the net.<p>thank you Google &amp; IETF for doing all sorts of good for us all, imo.<p>[1] <a href="https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;quic&#x2F;documents&#x2F;" rel="nofollow">https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;quic&#x2F;documents&#x2F;</a><p>there&#x27;s a lot here beyond performance. i encourage you to investigate a little further &amp; to see what quic + http3 bring &amp; how they emerged from http2. that there is some performance win is good, but don&#x27;t let that one statement narrow down your own understanding of this important enhancement.<p>the best evidence i can point to is a quic look at the IETF work group&#x27;s active &amp; related documents[1]<p>[1] <a href="https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;quic&#x2F;documents&#x2F;" rel="nofollow">https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;quic&#x2F;documents&#x2F;</a>')