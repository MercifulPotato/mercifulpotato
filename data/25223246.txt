Item(by='dan-robertson', descendants=None, kids=None, score=None, time=1606422113, title=None, item_type='comment', url=None, parent=25222466, text='Basically yeah. You allocate out of pools or arenas. In a language like C this usually means using a block of memory for objects that can all be freed together, so instead of calling malloc and free for each little object in your critical path (eg from request to response on some server, or a frame in a videogame), you somehow determine a maximum size, allocate that (and write enough bytes to have the OS actually give you the memory), and then allocations are just bumping a pointer into this block. At the end of the request, free the block (or return it to a pool to be used later).<p>Sometimes an arena may instead refer to a region of memory for allocations that are all the same size&#x2F;type. Because everything is the same size, the data structures for tracking allocations may be simpler.<p>In a language like Java, you basically preallocate an array of objects of the same type with a bunch of fields set to zero, and then have some data structure to give you a fast interface a bit like malloc. Because you donâ€™t do any extra allocation, the GC can be safely turned off.')