Item(by='kmeisthax', descendants=None, kids=[24792438, 24791379], score=None, time=1602781092, title=None, item_type='comment', url=None, parent=24789014, text='We don&#x27;t know. There are several substantiative questions of law and both parties&#x27; inability to give the court a clear picture of what an API is may result in the case not actually being decided.<p>There&#x27;s two questions up in the air with the case:<p>1. Whether or not you can claim copyright over the name of a function plus the combination of it&#x27;s input types (an &quot;API&quot;).\n2. Whether or not copying APIs can constitute fair use in the context of building a new platform using an existing language.<p>The first one is likely the case generally; you can claim ownership over &quot;structure, sequence, and organization&quot; just as well as Flame can claim ownership over a descending minor ostanato with a specific timbre. Imagine if Microsoft decided to do an end run around the GPL by copying all of Linux&#x27;s header files and just writing new implementations. (Wait, isn&#x27;t that how we got BSD?) This is sort of like the computer science equivalent of tracing over someone else&#x27;s art, and we probably should have some protection to prevent that.<p>However, Java&#x27;s APIs aren&#x27;t just internal implementation details. They were made public to other developers specifically so that they would write programs that used them. Google argues that this makes them &quot;methods of operation&quot;, which can&#x27;t be copyrighted. If Microsoft makes Microsoft Excel accept macros from LibreOffice Calc by copying their menu bar shortcuts, that isn&#x27;t protected and Microsoft is free to do that. (This has been adjudicated in court back in the 80s and is relevant precedent for the SCOTUS case.)<p>The fair use question is a fallback argument if the court rules that copyright ownership applies to API declarations. This requires application of a four-factors test. Notably, Google argued that Android needed to be compatible with Java APIs, and that such activities should be fair use. Oracle counters that Android&#x27;s implementation of those APIs were out of date and incompatible, so that fair use shouldn&#x27;t apply.<p>This also means that the Google&#x2F;Oracle case might be ruled so narrowly that it doesn&#x27;t affect WINE or ReactOS, or it could allow one and prohibit the other. After all, WINE is very narrowly focused on making Windows programs run on Linux, while ReactOS is trying to replace Windows entirely. One of the four fair use factors is the &quot;market usurpation factor&quot;: what happens to the market for licenses if we allow people to do this under fair use and not pay for a license. If Win32 declarations can be considered copyrighted, then we could run into a situation where WINE using them to run Windows apps on Linux is NOT usurpation, but ReactOS using them to rewrite Windows IS.<p>Not to mention GNU was made in the same way as ReactOS, but against UNIX rather than Windows. I have no idea if the people who own the corpse of the people who bought out Novell would be able to assert a copyright claim, though, as most UNIX APIs were standardized under POSIX. Android also largely doesn&#x27;t use those APIs (just the Linux kernel itself) and they&#x27;d be ironically safe from an SCO-style attack in this scenario.<p>Full disclosure: I am one of the developers of Ruffle (Free Software WASM&#x2F;Rust Flash Player reimplementation) and I&#x27;m extremely paranoid of the project getting shut down by Adobe or HARMAN (the latter bought Adobe AIR). Ergo, I very much have material interest in the outcome of this case.')