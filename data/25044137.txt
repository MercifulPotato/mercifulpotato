Item(by='k32', descendants=None, kids=None, score=None, time=1605000657, title=None, item_type='comment', url=None, parent=25036485, text='&gt; First of all, the fork obviously isn&#x27;t there for general consumption.<p>I didn&#x27;t know that when I installed a package called &quot;rebar3&quot; and spend some time trying to understand what&#x27;s wrong with my build. Oh, my bad, should&#x27;ve known better that &quot;rebar3&quot; was for internal consumption, and I need to install &quot;rebar3-open&quot; instead.<p>&gt; Second, it would&#x27;ve been nice if you&#x27;ve raised an issue on GitHub and helped improve Nix instead of complaining and spreading borderline falsehoods on HN.<p>Thanks for suggestion. I did exactly that, and I fixed this entire mess. In fact, the current NixOS Erlang infra is partially based on that work.<p>&gt; Ranting about how &quot;it&#x27;s a hack!&quot; based on cherry-picked implementation details isn&#x27;t convincing at all.<p>I professionally work with Erlang, and I know what is hack and what is not.<p>&gt; Tell me a single major distro where it&#x27;s okay to essentially redistribute packages from language-specific package managers without making huge adjustments in the way packaging is handled. I know of none. For countless software, distros just give up on packaging altogether because the effort required to make that adjustment can easily get out of hand.<p>Language-specific packaging should be left to language-specific package managers, they have more domain knowledge. Nix doesn&#x27;t solve this dilemma in any better way.<p>&gt; Also let me remind you that almost all Docker container images rely heavily on distro-provided packages. What are you going to do now?<p>Keep on using it? Take systems software from the distro-provided packages, add my own stuff on top. Building RPM is a nobrainer. I was considering Nix as an alternative to our deploy process, but realized that it would introduce more problems than solve.<p>&gt; &#x2F;etc in Nix is not world-readable, plain and simple.<p>Please take a closer look at what you&#x27;re quoting. You missed a very important part:<p>&gt; (or its analogue in &#x2F;nix)<p>You see, if I want to utilize Nix to full extend and use its main &quot;reproducibility&quot; feature, I need to put all my configuration in a derivation. Configuration includes secrets. Derivations are world-readable.<p>&gt; Neither do other distros<p>Distros maybe don&#x27;t, but &quot;bug-ridden kludge that is Ansible&quot; (according to Nix user) does.')