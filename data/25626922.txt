Item(by='rcxdude', descendants=None, kids=None, score=None, time=1609722603, title=None, item_type='comment', url=None, parent=25623723, text='Apart from the tooling woes others have mentioned (it&#x27;s hard to get across how much FPGA tooling sucks compared to software tooling), FPGAs occupy a strange set of niches, but it&#x27;s not clear how many are ones which would benefit the average PC or server. If you want raw memory bandwidth and FLOPs, a GPU is better (on speed, power, and price). If you want to evaluate complicated conditions and control flow, a CPU is better (in the same catagories). Because FPGAs are very power hungry and generally slower than the raw silicon, they only really give you more compute if what you want to compute is either far enough off the beaten path that some custom logic is much more efficient than the available instructions, and&#x2F;or it benefits from a specific parallel datapath which doesn&#x27;t easily fit on a GPU or CPU (GPUs being the best at embarrasingly parallel systems and modern CPUs being good at parallelising general purpose code reasonably well).<p>In practice you see FPGAs mostly in two areas: specialised embedded applications which benefit from heavy custom I&#x2F;O and&#x2F;or some efficient specific DSP but don&#x27;t have enough volume to justify an ASIC design, or in accelerators for simulating ASIC design.')