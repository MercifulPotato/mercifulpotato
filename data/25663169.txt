Item(by='computerdork', descendants=None, kids=None, score=None, time=1609970299, title=None, item_type='comment', url=None, parent=25643940, text='This is of course a matter of opinion, but for me, seems like there are three sides to this:<p>1) Knowledge of the core theories of computers: core ideas of computer architecture, good understanding of computational complexity (how long a program will take to run), networking...<p>2) Knowledge of software technologies: Python, Javascript, Java, C, Docker, Functional Programming, Object-Oriented Programming...<p>3) Knowledge of software engineering concepts: Software architecture, software process (agile, requirements gathering, testing), software complexity (and how to minimize it through good architecture and processes), general engineering principles (redundancy, fault-tolerance, solving problems early in the dev process...).<p>To me at least, the one that is neglected the most is the third one, &quot;software-engineering concepts.&quot; Being able to think about systems at a high-level and well at the detail-level is one the most useful skills for an engineer.')