Item(by='nerdtime', descendants=None, kids=None, score=None, time=1604346368, title=None, item_type='comment', url=None, parent=24971851, text='&gt;That&#x27;s great, because the purity of Haskell does not inhibit mutability. It just constrains it to lie within some mutable context.<p>Haskell does inhibit mutability within your haskell program. Your haskell program does not mutate. What it does is it that it does IO operations and the mutations happen externally. It can also model mutation without doing actual mutation but in the end there&#x27;s no point in a program modelling mutation if the program can&#x27;t actually do mutation or IO.<p>&gt;Location? What is a location? It&#x27;s like you&#x27;re saying you can&#x27;t truly add 3 + 3, because someone still has to add 1s under the hood. It&#x27;s just a different model of the same problem.<p>Location meaning outside of haskell. Like your database. I&#x27;m saying within haskell you have a variable.<p><pre><code>  x = 3\n</code></pre>\nYou can never mutate that variable in haskell. However you can mutate the state of the console without ever mutating any state within haskell.<p><pre><code>    print &quot;hello&quot;\n</code></pre>\nThe above triggers no mutation in haskell. A runtime outside of the haskell universe analyzes the IO instructions and mutates the console. What I am saying is that the thing that mutates the console has to do mutation. Whoever wrote that thing HAS to write imperative primitives. They are moving the imperative nature of programming INTO a framework. They are not eliminating the problem.<p>This is the same thing as a database string. UPDATE. You are moving all the imperative errors that have to deal with threading and mutations to the database. But your haskell sql string is still pure.<p>Again my argument is just saying that this thing that is doing the UPDATE or mutating the console cannot be built using haskell style code or immutable algebraic concepts. Imperative primitives need to exist and someone needs to use those primitives to do the actual mutations.<p>The OP is basically saying algebra is the future and it can replace everything. I&#x27;m saying it CAN&#x27;T.<p>&gt;Honestly, it sounds to me like you&#x27;ve never used the language, and your criticisms come off a bit like standing on an aircraft carrier shouting about how iron boats will never float.<p>And honestly you sound like the guy standing on the iron boat. The person I&#x27;m shouting at is you, but you&#x27;re just dismissing me.')