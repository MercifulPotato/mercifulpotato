Item(by='cosmie', descendants=None, kids=[24968340], score=None, time=1604326503, title=None, item_type='comment', url=None, parent=24967773, text='&quot;in house&quot; doesn&#x27;t necessarily mean in a residential home; it refers to &quot;on premise&quot; more generally.<p>A previous company of mine did the same thing - they converted a maintenance closet into a server closet. Even with renovation costs to improve ventilation and electrical load to support the use case, it worked out substantially cheaper than cloud hosting. A few things we ran on it:<p>- A large data infrastructure. We had an EDI[1] side of the business, and egress bandwidth costs would have eaten the product margins and then some. A lot of traditional EDI happens over (S)FTP, and customers only periodically accessed the system (daily&#x2F;weekly&#x2F;monthly&#x2F;quarterly, depending on the customer). Most enterprise EDI systems have retry logic built in, so minor amounts of downtime weren&#x27;t relevant. If the downtime were for more than several hours, we could cut over to a cloud-based backup (which was fairly cheap to maintain, since ingress bandwidth is generally free).<p>- Our analytics environment. In addition to standard reporting, we also used our analytics toolset to create &quot;data utilities&quot;, allowing powerusers on the business teams to be able to access bulk datasets for their own downstream processes. The bandwidth usage would have again been cost prohibitive to cloud-host, plus the data was co-located on-premise as well.<p>- Our B2B website. Traffic volumes were minimal, and it was primarily a static website. So hosting it behind Cloudflare added enough uptime guarantees for our needs.<p>- Dev environments. Both dev environments for all of the above, as well  as something similar to LocalStack[2] (it&#x27;s been a while, not sure if that was the tool used or something else) to mimic our AWS environment<p>For all of those, less than a day of downtime had negligible financial impact. And downtime more than a day was a non-issue, as we had off-site fail-over plans to handle contingencies longer than that.<p>We also operated several services and applications where every single minute of downtime created a visible impact on our financials. Those were all hosted on AWS, and architected with redundant and fault-tolerance built in.<p>[1] <a href="https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Electronic_data_interchange" rel="nofollow">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Electronic_data_interchange</a><p>[2] <a href="https:&#x2F;&#x2F;localstack.cloud&#x2F;" rel="nofollow">https:&#x2F;&#x2F;localstack.cloud&#x2F;</a>')