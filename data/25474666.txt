Item(by='throwaway201103', descendants=None, kids=None, score=None, time=1608347815, title=None, item_type='comment', url=None, parent=25473667, text='I found this so often when I was doing simple back-office crud coding. There would be a new business use case that was very similar to something we already had coded. Code would be copied, since that&#x27;s the easiest thing to do and you at least started with something that you knew was working.<p>Later, the new use case would evolve and have some new requirements. Had we abstracted the functionality originally, we&#x27;d have to go back and make the abstraction handle both cases. As it was, we could just change the copy that needed to change, and know that we weren&#x27;t going to break the other case.<p>This was also before the practice of automated unit testing was well understood and supported by development tools, so the motivation to &quot;not risk breaking working code&quot; was much stronger than maybe it is today.')