Item(by='ashtonkem', descendants=None, kids=[25624969, 25628323, 25623530, 25623096, 25628422, 25639476], score=None, time=1609693077, title=None, item_type='comment', url=None, parent=25620256, text='Having used Clojure and Common Lisp professionally, I think advocates for REPL driven programming universally overstate the utility of a first rate REPL.<p>Yes, it’s nicer than Python’s. Yes, it’s convenient. No, I never ended up doing my development in the REPL <i>first</i>. Why? Because editing mistakes in a REPL usually sucks, because a REPL is not a text editor.<p>What I ended up using heavily was REPL to file integration, which gave me the ability to write a function normally, evaluate it in the attached REPL session, and then play around with it in the REPL. This is far short of the “REPL driven development” that’s commonly discussed, and frankly something that’s probably possible with the Python REPL if they wanted to.<p>Editing data and functions in the REPL is a neat trick, but it’s a double edged sword, because a REPL can crash, and it provides incredibly rudimentary support for diffing current state and migrating changes back to permanent files. I would never start with anything more than a trivial “how do I manipulate this list” in the REPL for that reason. Oh, and we had a lot of issues with REPLs getting into a bad state with Clojure due to multi methods and protocols; if you’re doing your primary work in the REPL, then having to restart it due to it becoming unstable really sucks.')