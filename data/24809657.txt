Item(by='eru', descendants=None, kids=None, score=None, time=1602939838, title=None, item_type='comment', url=None, parent=24809463, text='OCaml and Haskell share a common ancestry, but I would also draw a distinction between them.  (Though not the same that the other commenter did.)<p>OCaml is a bit more of a drop-in replacement for something like C++ or D.  Mostly because it&#x27;s strict by default, so it&#x27;s easier to reason about performance even for a non-expert user.<p>OCaml&#x27;s approach to side-effects has now entered the mainstream: it&#x27;s considered good style to avoid them, but they are still used pervasively.  That&#x27;s very similar to what good modern C++, Java, Python etc style advocates.<p>Of course, Haskell also allows side-effects.  But generally, you track that they are occurring with the type system, you generally stick them in some kind of Monad or Applicative Functor.')