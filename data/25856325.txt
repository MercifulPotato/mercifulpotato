Item(by='gumby', descendants=None, kids=[25857081, 25856622, 25859373, 25864598, 25857479, 25859282, 25858883, 25857278, 25857303], score=None, time=1611212784, title=None, item_type='comment', url=None, parent=25855836, text='Your thermos does not have a switch which you must set to &quot;hot&quot; or &quot;cold&quot; before inserting a liquid, handles solids as well as liquids, and doesn&#x27;t require you to even think where the theshold might lie between the &quot;hot&quot; and &quot;cold&quot; settings.  Instead it just does its best to prevent an energy exchange in either direction without having to even know the variables involved.  And the &quot;same subroutine&quot; is basically used for different sized thermoses.<p>In code I see people not understand this all the time.  Here&#x27;s an example: let&#x27;s say you present the user with their previous orders, and give them the option to filter those orders by some criterion.<p>The shitty way to do this is to have two variables:<p><pre><code>    Filter* orderFilter = NULL;\n    bool filterSpecified = false;\n\n    void setOrderFilter (filter* newFilter) {\n      orderFilter = newFilter;\n      filterSpecified = true;\n    }\n</code></pre>\nSo instead of just checking if a filter has been assigned, you have a separate boolean.  What happens if the boolean is true but the filter is null?  What would the vice versa case even mean?<p>The global codebase is riddled with dumb errors like this.')