Item(by='loup-vaillant', descendants=None, kids=[25276988], score=None, time=1606920773, title=None, item_type='comment', url=None, parent=25274121, text='Don&#x27;t design them. Contextual grammars are a pain to deal with, both for the implementer and the user.<p>Alternatively, you can split the parsing into stage. Take XML for instance. The fact that it&#x27;s opening and closing tags must be marked by the same identifier makes it context sensitive. You can however get around that by simply registering opening and closing tags in the parsing stage, and verify they match only later.<p>Really, though: if you have the liberty to design the syntax yourself, context sensitivity is generally best avoided. Heck, you probably want to limit yourself to a <i>subset</i> of context free grammars, like LR (which is guaranteed non-ambiguous). You can restrict even further, and stick to LL(1) —which goes a long way if you parse binary operators in a later stage, with shunting yard or precedence climbing.<p>Easier parsing means easier tooling, more predictable syntax, easier error handling… Sure, if you don&#x27;t have a choice (compatibility or business imperative), you can introduce some context sensitivity. Ideally though, you want to use the <i>least</i> powerful grammar you can get away with.')