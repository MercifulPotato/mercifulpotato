Item(by='u801e', descendants=None, kids=None, score=None, time=1606420752, title=None, item_type='comment', url=None, parent=25221555, text='At my place of work, we&#x27;ve sort of implemented that feature by using fixup or squash commits.  That is, if a comment is made on a diff line in a PR, use git blame to determine which commit was responsible for that line of code, update the line and commit it with a commit title like: fixup! &lt;original commit title&gt;.  If we want to update the commit message, we use &quot;squash! &lt;original commit title&gt;&quot; and put the updated commit message in the commit message body (using the --allow-empty switch when committing so that we don&#x27;t have to change any code to make a commit).<p>Then, we can run git rebase -i --autosquash --keep-empty to handle applying the changes requested to the correct commits at the end of the review process.')